{"version":3,"sources":["redux/auth/actions.js","helpers/Utils.js","redux/chat/actions.js","services/authservice.js","components/common/react-notifications/Notification.js","components/common/react-notifications/Notifications.js","components/common/react-notifications/NotificationManager.js","components/common/react-notifications/NotificationContainer.js","redux/contants.js","helpers/Firebase.js","index.js","constants/defaultValues.js","assets/css/sass/themes lazy /^/gogo/..*/.scss$/ groupOptions: {} namespace object","redux/settings/reducer.js","redux/menu/reducer.js","redux/auth/reducer.js","redux/chat/reducer.js","redux/agora/reducer.js","redux/reducers.js","redux/auth/saga.js","redux/chat/saga.js","redux/agora/saga.js","redux/sagas.js","redux/store.js","reportWebVitals.js","AppRenderer.js"],"names":["loginUser","user","history","type","LOGIN_USER","payload","loginUserSuccess","LOGIN_USER_SUCCESS","loginUserError","message","LOGIN_USER_ERROR","forgotPassword","forgotUserMail","FORGOT_PASSWORD","forgotPasswordSuccess","FORGOT_PASSWORD_SUCCESS","forgotPasswordError","FORGOT_PASSWORD_ERROR","resetPassword","_ref","newPassword","confirmPassword","email","RESET_PASSWORD","resetPasswordSuccess","RESET_PASSWORD_SUCCESS","resetPasswordError","RESET_PASSWORD_ERROR","registerUser","REGISTER_USER","registerUserSuccess","REGISTER_USER_SUCCESS","registerUserError","REGISTER_USER_ERROR","logoutUser","LOGOUT_USER","getCurrentTime","now","Date","getHours","getMinutes","getDirection","direction","defaultDirection","localStorage","getItem","localValue","error","console","log","isRtl","getCurrentColor","currentColor","defaultColor","themeColorStorageKey","setCurrentColor","color","setItem","getCurrentRadius","currentRadius","themeRadiusStorageKey","setCurrentRadius","radius","getCurrentLanguage","language","defaultLocale","localeOptions","filter","x","id","length","setCurrentLanguage","locale","getCurrentUser","JSON","parse","setCurrentUser","stringify","removeItem","getContacts","CHAT_GET_CONTACTS","getContactsSuccess","contacts","currentUser","CHAT_GET_CONTACTS_SUCCESS","getContactsError","CHAT_GET_CONTACTS_ERROR","getConversations","userId","CHAT_GET_CONVERSATIONS","getConversationsSuccess","conversations","selectedUser","CHAT_GET_CONVERSATIONS_SUCCESS","getConversationsError","CHAT_GET_CONVERSATIONS_ERROR","addMessageToConversation","currentUserId","selectedUserId","allConversations","CHAT_ADD_MESSAGE_TO_CONVERSATION","changeConversation","CHAT_CHANGE_CONVERSATION","authService","signUp","phoneNumber","password","firstName","lastName","userRoles","username","clear","bodyData","url","baseUrl","axios","post","then","res","catch","response","request","e","login","tokenRes","data","token","roles","statusRes","map","role","status","roleRes","userName","imageUrl","expirationTime","getTime","check1","statuses","forEach","NotificationManager","warning","sendPasswordResetEmail","success","confirmPasswordReset","Notification","title","customClassName","timeOut","onClick","onRequestHide","requestHide","useEffect","timer","setTimeout","clearTimeout","className","classnames","titleHtml","_jsx","children","_jsxs","defaultProps","Notifications","React","Component","constructor","arguments","handleRequestHide","notification","this","props","render","notifications","enterTimeout","leaveTimeout","TransitionGroup","key","CSSTransition","classNames","timeout","exit","enter","Constants","EventEmitter","super","listNotify","create","notify","defaultNotify","replace","c","r","Math","random","toString","priority","unshift","Object","assign","push","emitChange","primary","secondary","info","remove","n","emit","addChangeListener","callback","addListener","removeChangeListener","removeListener","NotificationContainer","componentWillUnmount","handleStoreChange","setState","state","CHANGE_LOCALE","MENU_SET_CLASSNAMES","MENU_CONTAINER_ADD_CLASSNAME","MENU_CLICK_MOBILE_MENU","MENU_CHANGE_DEFAULT_CLASSES","MENU_CHANGE_HAS_SUB_ITEM_STATUS","CHAT_CREATE_CONVERSATION","CHAT_SEARCH_CONTACT","SET_APP_ID","firebase","initializeApp","firebaseConfig","auth","database","isMultiColorActive","isDarkSwitchActive","interceptors","use","config","_req$url","_req$url2","req","currentUserDetails","includes","headers","Authorization","Promise","reject","require","UserRole","Admin","Editor","defaultMenuType","subHiddenBreakpoint","menuHiddenBreakpoint","name","appKey","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","adminRoot","buyUrl","searchPath","img","date","isAuthGuardActive","colors","webpackAsyncContext","__webpack_require__","o","resolve","Error","code","ids","t","keys","module","exports","INIT_STATE","containerClassnames","menuClickCount","selectedMenuHasSubItems","resetPasswordCode","loading","allContacts","searchKeyword","loadingContacts","loadingConversations","initialState","appId","reducers","combineReducers","menu","undefined","action","settings","authUser","chatApp","find","keyword","toLowerCase","searchedContacts","item","indexOf","agora","watchLoginUser","takeEvery","loginWithEmailPassword","loginWithEmailPasswordAsync","async","userObj","call","userType","put","watchRegisterUser","registerWithEmailPassword","registerWithEmailAndPasswordAsync","_ref2","watchLogoutUser","logout","logoutAsync","signOut","_ref3","forgotPasswordAsync","_ref4","forgotPasswordStatus","watchForgotPassword","watchResetPassword","resetPasswordAsync","_ref5","resetPasswordStatus","rootSaga","all","fork","loadContacts","loadContactsAsync","contactsData","loadConversations","loadConversationsAsync","conversationsData","users","addMessageToConversationAsync","conversation","time","messages","sender","text","lastMessageTime","splice","createNewConversation","createNewConversationAsync","watchGetContact","watchGetConversation","watchAddMessageToConversation","watchCreateConversation","handleSetAppId","watchSetAppId","takeLatest","authSagas","chatSagas","agoraSagas","sagaMiddleware","createSagaMiddleware","middlewares","configureStore","store","createStore","compose","applyMiddleware","run","sagas","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","App","lazy","Main","Provider","Suspense","fallback","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d7428318.chunk.js","sourcesContent":["import {\r\n  LOGIN_USER,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGOUT_USER,\r\n  REGISTER_USER,\r\n  REGISTER_USER_SUCCESS,\r\n  LOGIN_USER_ERROR,\r\n  REGISTER_USER_ERROR,\r\n  FORGOT_PASSWORD,\r\n  FORGOT_PASSWORD_SUCCESS,\r\n  FORGOT_PASSWORD_ERROR,\r\n  RESET_PASSWORD,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_ERROR,\r\n} from '../contants';\r\n\r\nexport const loginUser = (user, history) => ({\r\n  type: LOGIN_USER,\r\n  payload: { user, history },\r\n});\r\nexport const loginUserSuccess = (user) => ({\r\n  type: LOGIN_USER_SUCCESS,\r\n  payload: user,\r\n});\r\nexport const loginUserError = (message) => ({\r\n  type: LOGIN_USER_ERROR,\r\n  payload: { message },\r\n});\r\n\r\nexport const forgotPassword = (forgotUserMail, history) => ({\r\n  type: FORGOT_PASSWORD,\r\n  payload: { forgotUserMail, history },\r\n});\r\nexport const forgotPasswordSuccess = (forgotUserMail) => ({\r\n  type: FORGOT_PASSWORD_SUCCESS,\r\n  payload: forgotUserMail,\r\n});\r\nexport const forgotPasswordError = (message) => ({\r\n  type: FORGOT_PASSWORD_ERROR,\r\n  payload: { message },\r\n});\r\n\r\nexport const resetPassword = ({ newPassword, confirmPassword, email, history }) => ({\r\n  type: RESET_PASSWORD,\r\n  payload: { newPassword, confirmPassword, email, history },\r\n});\r\nexport const resetPasswordSuccess = (newPassword) => ({\r\n  type: RESET_PASSWORD_SUCCESS,\r\n  payload: newPassword,\r\n});\r\nexport const resetPasswordError = (message) => ({\r\n  type: RESET_PASSWORD_ERROR,\r\n  payload: { message },\r\n});\r\n\r\nexport const registerUser = (user, history) => ({\r\n  type: REGISTER_USER,\r\n  payload: { user, history },\r\n});\r\nexport const registerUserSuccess = (user) => ({\r\n  type: REGISTER_USER_SUCCESS,\r\n  payload: user,\r\n});\r\nexport const registerUserError = (message) => ({\r\n  type: REGISTER_USER_ERROR,\r\n  payload: { message },\r\n});\r\n\r\nexport const logoutUser = (history) => ({\r\n  type: LOGOUT_USER,\r\n  payload: { history },\r\n});\r\n","import {\r\n  defaultDirection,\r\n  defaultLocale,\r\n  defaultColor,\r\n  localeOptions,\r\n  themeColorStorageKey,\r\n  themeRadiusStorageKey,\r\n} from 'constants/defaultValues';\r\n\r\nexport const mapOrder = (array, order, key) => {\r\n  // eslint-disable-next-line func-names\r\n  array.sort(function (a, b) {\r\n    const A = a[key];\r\n    const B = b[key];\r\n    if (order.indexOf(`${A}`) > order.indexOf(`${B}`)) {\r\n      return 1;\r\n    }\r\n    return -1;\r\n  });\r\n  return array;\r\n};\r\n\r\nexport const getDateWithFormat = () => {\r\n  const today = new Date();\r\n  let dd = today.getDate();\r\n  let mm = today.getMonth() + 1; // January is 0!\r\n\r\n  const yyyy = today.getFullYear();\r\n  if (dd < 10) {\r\n    dd = `0${dd}`;\r\n  }\r\n  if (mm < 10) {\r\n    mm = `0${mm}`;\r\n  }\r\n  return `${dd}.${mm}.${yyyy}`;\r\n};\r\n\r\nexport const getCurrentTime = () => {\r\n  const now = new Date();\r\n  return `${now.getHours()}:${now.getMinutes()}`;\r\n};\r\n\r\nexport const getDirection = () => {\r\n  let direction = defaultDirection;\r\n\r\n  try {\r\n    if (localStorage.getItem('direction')) {\r\n      const localValue = localStorage.getItem('direction');\r\n      if (localValue === 'rtl' || localValue === 'ltr') {\r\n        direction = localValue;\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.log('>>>>: src/helpers/Utils.js : getDirection -> error', error);\r\n    direction = defaultDirection;\r\n  }\r\n  return {\r\n    direction,\r\n    isRtl: direction === 'rtl',\r\n  };\r\n};\r\nexport const setDirection = (localValue) => {\r\n  let direction = 'ltr';\r\n  if (localValue === 'rtl' || localValue === 'ltr') {\r\n    direction = localValue;\r\n  }\r\n  try {\r\n    localStorage.setItem('direction', direction);\r\n  } catch (error) {\r\n    console.log('>>>>: src/helpers/Utils.js : setDirection -> error', error);\r\n  }\r\n};\r\n\r\nexport const getCurrentColor = () => {\r\n  let currentColor = defaultColor;\r\n  try {\r\n    if (localStorage.getItem(themeColorStorageKey)) {\r\n      currentColor = localStorage.getItem(themeColorStorageKey);\r\n    }\r\n  } catch (error) {\r\n    console.log('>>>>: src/helpers/Utils.js : getCurrentColor -> error', error);\r\n    currentColor = defaultColor;\r\n  }\r\n  return currentColor;\r\n};\r\n\r\nexport const setCurrentColor = (color) => {\r\n  try {\r\n    localStorage.setItem(themeColorStorageKey, color);\r\n  } catch (error) {\r\n    console.log('>>>>: src/helpers/Utils.js : setCurrentColor -> error', error);\r\n  }\r\n};\r\n\r\nexport const getCurrentRadius = () => {\r\n  let currentRadius = 'rounded';\r\n  try {\r\n    if (localStorage.getItem(themeRadiusStorageKey)) {\r\n      currentRadius = localStorage.getItem(themeRadiusStorageKey);\r\n    }\r\n  } catch (error) {\r\n    console.log(\r\n      '>>>>: src/helpers/Utils.js : getCurrentRadius -> error',\r\n      error\r\n    );\r\n    currentRadius = 'rounded';\r\n  }\r\n  return currentRadius;\r\n};\r\nexport const setCurrentRadius = (radius) => {\r\n  try {\r\n    localStorage.setItem(themeRadiusStorageKey, radius);\r\n  } catch (error) {\r\n    console.log(\r\n      '>>>>: src/helpers/Utils.js : setCurrentRadius -> error',\r\n      error\r\n    );\r\n  }\r\n};\r\n\r\nexport const getCurrentLanguage = () => {\r\n  let language = defaultLocale;\r\n  try {\r\n    language =\r\n      localStorage.getItem('currentLanguage') &&\r\n      localeOptions.filter(\r\n        (x) => x.id === localStorage.getItem('currentLanguage')\r\n      ).length > 0\r\n        ? localStorage.getItem('currentLanguage')\r\n        : defaultLocale;\r\n  } catch (error) {\r\n    console.log(\r\n      '>>>>: src/helpers/Utils.js : getCurrentLanguage -> error',\r\n      error\r\n    );\r\n    language = defaultLocale;\r\n  }\r\n  return language;\r\n};\r\nexport const setCurrentLanguage = (locale) => {\r\n  try {\r\n    localStorage.setItem('currentLanguage', locale);\r\n  } catch (error) {\r\n    console.log(\r\n      '>>>>: src/helpers/Utils.js : setCurrentLanguage -> error',\r\n      error\r\n    );\r\n  }\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n  let user = null;\r\n  try {\r\n    user =\r\n      localStorage.getItem('gogo_current_user') != null\r\n        ? JSON.parse(localStorage.getItem('gogo_current_user'))\r\n        : null;\r\n  } catch (error) {\r\n    console.log('>>>>: src/helpers/Utils.js  : getCurrentUser -> error', error);\r\n    user = null;\r\n  }\r\n  return user;\r\n};\r\n\r\nexport const setCurrentUser = (user) => {\r\n  try {\r\n    if (user) {\r\n      localStorage.setItem('gogo_current_user', JSON.stringify(user));\r\n    } else {\r\n      localStorage.removeItem('gogo_current_user');\r\n    }\r\n  } catch (error) {\r\n    console.log('>>>>: src/helpers/Utils.js : setCurrentUser -> error', error);\r\n  }\r\n};\r\n","import {\r\n    CHAT_GET_CONTACTS,\r\n    CHAT_GET_CONTACTS_SUCCESS,\r\n    CHAT_GET_CONTACTS_ERROR,\r\n    CHAT_GET_CONVERSATIONS,\r\n    CHAT_GET_CONVERSATIONS_SUCCESS,\r\n    CHAT_GET_CONVERSATIONS_ERROR,\r\n    CHAT_ADD_MESSAGE_TO_CONVERSATION,\r\n    CHAT_CREATE_CONVERSATION,\r\n    CHAT_SEARCH_CONTACT,\r\n    CHAT_CHANGE_CONVERSATION,\r\n  } from \"../contants\";\r\n  \r\n  export const getContacts = () => ({\r\n    type: CHAT_GET_CONTACTS,\r\n  });\r\n  \r\n  export const getContactsSuccess = (contacts, currentUser) => {\r\n    return {\r\n      type: CHAT_GET_CONTACTS_SUCCESS,\r\n      payload: { contacts, currentUser },\r\n    };\r\n  };\r\n  \r\n  export const getContactsError = (error) => ({\r\n    type: CHAT_GET_CONTACTS_ERROR,\r\n    payload: error,\r\n  });\r\n  \r\n  export const getConversations = (userId) => ({\r\n    type: CHAT_GET_CONVERSATIONS,\r\n    payload: userId,\r\n  });\r\n  export const getConversationsSuccess = (conversations, selectedUser) => ({\r\n    type: CHAT_GET_CONVERSATIONS_SUCCESS,\r\n    payload: { conversations, selectedUser },\r\n  });\r\n  \r\n  export const getConversationsError = (error) => ({\r\n    type: CHAT_GET_CONVERSATIONS_ERROR,\r\n    payload: error,\r\n  });\r\n  \r\n  export const addMessageToConversation = (\r\n    currentUserId,\r\n    selectedUserId,\r\n    message,\r\n    allConversations\r\n  ) => ({\r\n    type: CHAT_ADD_MESSAGE_TO_CONVERSATION,\r\n    payload: { currentUserId, selectedUserId, message, allConversations },\r\n  });\r\n  \r\n  export const createConversation = (\r\n    currentUserId,\r\n    selectedUserId,\r\n    allConversations\r\n  ) => {\r\n    return {\r\n      type: CHAT_CREATE_CONVERSATION,\r\n      payload: { currentUserId, selectedUserId, allConversations },\r\n    };\r\n  };\r\n  \r\n  export const searchContact = (keyword) => ({\r\n    type: CHAT_SEARCH_CONTACT,\r\n    payload: keyword,\r\n  });\r\n  \r\n  export const changeConversation = (userId) => ({\r\n    type: CHAT_CHANGE_CONVERSATION,\r\n    payload: userId,\r\n    \r\n  });\r\n","/* eslint-disable */\r\n\r\nimport axios from 'axios';\r\nimport { NotificationManager } from 'components/common/react-notifications';\r\n\r\nimport { baseUrl } from '../constants/defaultValues';\r\n\r\nexport const authService = {\r\n  async signUp(email,phoneNumber, password, firstName,lastName, userRoles, username) {\r\n    localStorage.clear();\r\n    const bodyData = JSON.stringify({\r\n      firstName,\r\n      lastName,\r\n      username,\r\n      password,\r\n      email,\r\n      phoneNumber,\r\n      userRoles,\r\n    });\r\n    const url = `${baseUrl}/api/signUp`;\r\n    try {\r\n      return await axios\r\n        .post(url, bodyData)\r\n        .then((res) => {\r\n          // console.log(res);\r\n          return res;\r\n        })\r\n        .catch((error) => {\r\n          console.log('ERR:: ', error);\r\n          // NotificationManager.warning(error, 'Error', 3000, null, null, '');\r\n          if (error.response) {\r\n            console.log('ERR:response: ', error);\r\n          // NotificationManager.warning(error, 'Error', 3000, null, null, '');\r\n          } else if (error.request) {\r\n            console.log('ERR:request: ', error);\r\n            // NotificationManager.warning(error, 'Error', 3000, null, null, '');\r\n          } else if (error.message) {\r\n            console.log('ERR:message: ', error);\r\n            // NotificationManager.warning(error, 'Error', 3000, null, null, '');\r\n          }\r\n          throw error;\r\n        });\r\n    } catch (e) {\r\n      return e.response;\r\n    }\r\n  },\r\n  \r\n//   async login(email, password) {\r\n//     const bodyData = JSON.stringify({ email: email, password: password });\r\n//     const url = `${baseUrl}/api/authenticate`;\r\n//     try {\r\n//         const res = await axios.post(url, bodyData);\r\n//         const tokenRes = res.data.token; \r\n//         console.log(res.data)\r\n//         // const statusRes = res.data.roles.map(role => role.status);\r\n//         // const roleRes = res.data.roles.map(role => role.role);\r\n//         const statusRes = \"7\"; \r\n//         const roleRes = [\"MENTOR\"]; \r\n//         console.log(res.data.token);\r\n//         console.log(statusRes);\r\n//         console.log(roleRes);\r\n//         // localStorage.setItem('status', JSON.stringify(statusRes));\r\n//         // localStorage.setItem('roleRes', JSON.stringify(roleRes));\r\n//         localStorage.setItem('tokenRes', tokenRes);\r\n//         localStorage.setItem('status', statusRes);\r\n//         localStorage.setItem('roleRes', roleRes);\r\n//         localStorage.setItem('cRes', \"check\");\r\n//         return res;\r\n//     } catch (error) {\r\n//         throw error;\r\n//     }\r\n// },\r\n\r\n\r\n// with backend\r\n\r\nasync login(email, password ) {\r\n  const bodyData = JSON.stringify({ email: email, password: password });  \r\n  const url = `${baseUrl}/api/authenticate`;\r\n  try {\r\n      const res = await axios.post(url, bodyData);\r\n      const tokenRes = res.data.token; \r\n      // console.log(res.data)\r\n      // console.log(\"res.data.roles: check\")\r\n\r\n      if(res.data.roles){\r\n        // console.log(\"res.data.roles: true\")\r\n      const statusRes = res.data.roles.map(role => role.status);\r\n        const roleRes = res.data.roles.map(role => role.role);\r\n        const userName = res.data.userName;\r\n        const imageUrl = res.data.imageUrl;\r\n        const userId = res.data.userId;\r\n      // console.log(\"role res from auth\", roleRes)\r\n      const expirationTime = new Date(Date.now() + 6 * 60 * 60 * 1000);\r\n\r\n      localStorage.setItem('expirationTime', expirationTime.getTime());\r\n      localStorage.setItem('userName', userName);\r\n      localStorage.setItem('imageUrl', imageUrl);\r\n      localStorage.setItem(\"userId\", userId)\r\n      //const statusRes = \"3\"; \r\n      // console.log(res.data.token);\r\n      // console.log(\"status response\", statusRes);\r\n      // console.log(\"Role response\", roleRes);\r\n      const check1=JSON.stringify(statusRes);\r\n      // const check2=JSON.stringify(roleRes);\r\n      localStorage.setItem('status', check1[1]);\r\n      // localStorage.setItem('roleRes', check2[1]);\r\n      localStorage.setItem('tokenRes', tokenRes);\r\n    localStorage.setItem('roleRes', roleRes);\r\n     // localStorage.setItem('status', statusRes);\r\n      // localStorage.setItem('cRes', \"check\");\r\n    }\r\n      return res;\r\n  } catch (error) {\r\n    error.response.data.statuses.forEach((status) => {\r\n      NotificationManager.warning(status.message, status.status, 5000, null, null, '');\r\n  });\r\n  // console.log(\"login error\",error.response.data.statuses[0])\r\n      throw error;\r\n  }\r\n},\r\n\r\n\r\n\r\n\r\n//   async login(email, password) {\r\n//     const bodyData = JSON.stringify({ email, password });\r\n//     const url = `${baseUrl}/signIn`;\r\n//     try {\r\n//       return await axios.post(url, bodyData)\r\n//       .then((res) =>{\r\n//         console.log(res.data.email);\r\n//         const emailREs = res.data.email;\r\n//         console.log(\"input - \"+email)\r\n//         if (emailREs !== email) {\r\n//           console.log(\"faild\")\r\n//         } else {\r\n//           return res;\r\n           \r\n//         }\r\n//       });\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n// }\r\n\r\n  // async login(email, password) {\r\n  //   const bodyData = JSON.stringify({ email: email, password: password });\r\n  //   const url = `${baseUrl}/signIn`;\r\n  //   try {\r\n  //     const response = await axios.post(url, bodyData);\r\n  //     console.log(response.data);\r\n  //     if (response.data) {\r\n  //       return response.data; \r\n  //     } else {\r\n  //       throw new Error(response.data.message); \r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error('Login error:', error.response.data);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n  \r\n  // async login(email, password) {\r\n  //   // localStorage.clear();\r\n  //   const bodyData = JSON.stringify({\r\n  //     email: email,\r\n  //     password: password,\r\n      \r\n  //   });\r\n  //   const url = `${baseUrl}/signIn`;\r\n  //   try {\r\n  //     return await axios\r\n  //       .get(url, bodyData)\r\n  //       .then((res) => {\r\n  //         console.log(res);\r\n  //         // console.log(res.data);\r\n  //         // console.log('Full response:', loginResponse);\r\n\r\n  //         // localStorage.setItem('email', res.data.email);\r\n  //         // if (!res.data.email) {\r\n  //         //   console.error('User email not found in the response:', res.data);\r\n  //         // } else {\r\n  //         //   localStorage.setItem('email', res.data.email);\r\n  //         console.log(res.data.data.userType);\r\n  //         localStorage.setItem('userType', 0);\r\n  //         // localStorage.setItem('gogo_react_login')\r\n  //         // }\r\n\r\n  //         return res;\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         throw error;\r\n  //       });\r\n  //   } catch (e) {\r\n  //     return e;\r\n  //   }\r\n  // },\r\n  async sendPasswordResetEmail(email) {\r\n    const bodyData = JSON.stringify({ email: email});  \r\n    const url = `${baseUrl}/api/forgot-password`;\r\n    try {\r\n        const res = await axios.post(url, bodyData);\r\n            res.data.statuses.forEach((status) => {\r\n              NotificationManager.success(status.message, \"Great!\", 5000, null, null, '');\r\n          });\r\n  // console.log(res);\r\n        return res;\r\n    } catch (error) {\r\n      error.response.data.statuses.forEach((status) => {\r\n        NotificationManager.warning(status.message, status.status, 5000, null, null, '');\r\n    });\r\n        throw error;\r\n    }\r\n  },\r\n\r\n  async confirmPasswordReset({newPassword, confirmPassword, email}) {\r\n    const bodyData = JSON.stringify({ email: email, newPassword: newPassword, confirmPassword : confirmPassword});  \r\n    const url = `${baseUrl}/api/reset-password`;\r\n    try {\r\n        const res = await axios.post(url, bodyData);\r\n          //   res.data.statuses.forEach((status) => {\r\n          //     NotificationManager.success(status.message, \"Great!\", 5000, null, null, '');\r\n          // });\r\n  // console.log(res);\r\n        //  window.location.href = '/login';\r\n        return res;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default authService;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\nimport React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst Notification = ({\r\n  title,\r\n  type,\r\n  message,\r\n  customClassName,\r\n  timeOut,\r\n  onClick,\r\n  onRequestHide,\r\n}) => {\r\n  const requestHide = () => {\r\n    if (onRequestHide) {\r\n      onRequestHide();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timer = null;\r\n    if (timeOut !== 0) {\r\n      timer = setTimeout(requestHide, timeOut);\r\n    }\r\n    return () => {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    if (onClick) {\r\n      onClick();\r\n    }\r\n    requestHide();\r\n  };\r\n\r\n  const className = classnames([\r\n    'notification',\r\n    `notification-${type}`,\r\n    customClassName,\r\n  ]);\r\n  const titleHtml = title ? <h4 className=\"title\">{title}</h4> : null;\r\n  return (\r\n    <div className={className} onClick={() => handleClick()}>\r\n      <div className=\"notification-message\" role=\"alert\">\r\n        {titleHtml}\r\n        <div className=\"message\">{message}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  type: PropTypes.oneOf([\r\n    'info',\r\n    'success',\r\n    'warning',\r\n    'error',\r\n    'primary',\r\n    'secondary',\r\n  ]),\r\n  title: PropTypes.node,\r\n  message: PropTypes.node,\r\n  timeOut: PropTypes.number,\r\n  onClick: PropTypes.func,\r\n  onRequestHide: PropTypes.func,\r\n  customClassName: PropTypes.string,\r\n};\r\n\r\nNotification.defaultProps = {\r\n  type: 'info',\r\n  title: null,\r\n  message: null,\r\n  timeOut: 5000,\r\n  onClick: () => {},\r\n  onRequestHide: () => {},\r\n  customClassName: '',\r\n};\r\n\r\nexport default Notification;\r\n","/* eslint-disable react/forbid-prop-types */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport classnames from 'classnames';\r\nimport Notification from './Notification';\r\n\r\nclass Notifications extends React.Component {\r\n  handleRequestHide = (notification) => () => {\r\n    const { onRequestHide } = this.props;\r\n    if (onRequestHide) {\r\n      onRequestHide(notification);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { notifications, enterTimeout, leaveTimeout } = this.props;\r\n    const className = classnames('notification-container', {\r\n      'notification-container-empty': notifications.length === 0,\r\n    });\r\n    return (\r\n      <div className={className}>\r\n        <TransitionGroup>\r\n          {notifications.map((notification) => {\r\n            const key = notification.id || new Date().getTime();\r\n            return (\r\n              <CSSTransition\r\n                classNames=\"notification\"\r\n                key={key}\r\n                timeout={{ exit: leaveTimeout, enter: enterTimeout }}\r\n              >\r\n                <Notification\r\n                  key={key}\r\n                  type={notification.type}\r\n                  title={notification.title}\r\n                  message={notification.message}\r\n                  timeOut={notification.timeOut}\r\n                  onClick={notification.onClick}\r\n                  onRequestHide={this.handleRequestHide(notification)}\r\n                  customClassName={notification.customClassName}\r\n                />\r\n              </CSSTransition>\r\n            );\r\n          })}\r\n        </TransitionGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nNotifications.propTypes = {\r\n  notifications: PropTypes.array,\r\n  onRequestHide: PropTypes.func,\r\n  enterTimeout: PropTypes.number,\r\n  leaveTimeout: PropTypes.number,\r\n};\r\n\r\nNotifications.defaultProps = {\r\n  notifications: [],\r\n  onRequestHide: () => {},\r\n  enterTimeout: 400,\r\n  leaveTimeout: 400,\r\n};\r\nexport default Notifications;\r\n","/* eslint-disable no-bitwise */\r\nimport { EventEmitter } from 'events';\r\n\r\nconst createUUID = () => {\r\n  const pattern = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\r\n  return pattern.replace(/[xy]/g, (c) => {\r\n    const r = (Math.random() * 16) | 0;\r\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\nconst Constants = {\r\n  CHANGE: 'change',\r\n  PRIMARY: 'primary',\r\n  SECONDARY: 'secondary',\r\n  INFO: 'info',\r\n  SUCCESS: 'success',\r\n  WARNING: 'warning',\r\n  ERROR: 'error',\r\n};\r\n\r\nclass NotificationManager extends EventEmitter {\r\n  constructor() {\r\n    super();\r\n    this.listNotify = [];\r\n  }\r\n\r\n  create(notify) {\r\n    const defaultNotify = {\r\n      id: createUUID(),\r\n      type: 'info',\r\n      title: null,\r\n      message: null,\r\n      timeOut: 5000,\r\n      customClassName: '',\r\n    };\r\n    if (notify.priority) {\r\n      this.listNotify.unshift(Object.assign(defaultNotify, notify));\r\n    } else {\r\n      this.listNotify.push(Object.assign(defaultNotify, notify));\r\n    }\r\n    this.emitChange();\r\n  }\r\n\r\n  primary(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.PRIMARY,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName,\r\n    });\r\n  }\r\n\r\n  secondary(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.SECONDARY,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName,\r\n    });\r\n  }\r\n\r\n  info(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.INFO,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName,\r\n    });\r\n  }\r\n\r\n  success(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.SUCCESS,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName,\r\n    });\r\n  }\r\n\r\n  warning(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.WARNING,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName,\r\n    });\r\n  }\r\n\r\n  error(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.ERROR,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName,\r\n    });\r\n  }\r\n\r\n  remove(notification) {\r\n    this.listNotify = this.listNotify.filter((n) => notification.id !== n.id);\r\n    this.emitChange();\r\n  }\r\n\r\n  emitChange() {\r\n    this.emit(Constants.CHANGE, this.listNotify);\r\n  }\r\n\r\n  addChangeListener(callback) {\r\n    this.addListener(Constants.CHANGE, callback);\r\n  }\r\n\r\n  removeChangeListener(callback) {\r\n    this.removeListener(Constants.CHANGE, callback);\r\n  }\r\n}\r\n\r\nexport default new NotificationManager();\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NotificationManager from './NotificationManager';\r\nimport Notifications from './Notifications';\r\n\r\nclass NotificationContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    NotificationManager.addChangeListener(this.handleStoreChange);\r\n    this.state = {\r\n      notifications: [],\r\n    };\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    NotificationManager.removeChangeListener(this.handleStoreChange);\r\n  };\r\n\r\n  handleStoreChange = (notifications) => {\r\n    this.setState({\r\n      notifications,\r\n    });\r\n  };\r\n\r\n  handleRequestHide = (notification) => {\r\n    NotificationManager.remove(notification);\r\n  };\r\n\r\n  render() {\r\n    const { notifications } = this.state;\r\n    const { enterTimeout, leaveTimeout } = this.props;\r\n    return (\r\n      <Notifications\r\n        enterTimeout={enterTimeout}\r\n        leaveTimeout={leaveTimeout}\r\n        notifications={notifications}\r\n        onRequestHide={this.handleRequestHide}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nNotificationContainer.propTypes = {\r\n  enterTimeout: PropTypes.number,\r\n  leaveTimeout: PropTypes.number,\r\n};\r\n\r\nNotificationContainer.defaultProps = {\r\n  enterTimeout: 400,\r\n  leaveTimeout: 400,\r\n};\r\n\r\nexport default NotificationContainer;\r\n","/* SETTINGS */\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\n\r\n/* AUTH */\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_ERROR = 'LOGIN_USER_ERROR';\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_ERROR = 'REGISTER_USER_ERROR';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const FORGOT_PASSWORD = 'FORGOT_PASSWORD';\r\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS';\r\nexport const FORGOT_PASSWORD_ERROR = 'FORGOT_PASSWORD_ERROR';\r\nexport const RESET_PASSWORD = 'RESET_PASSWORD';\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_ERROR = 'RESET_PASSWORD_ERROR';\r\n\r\n/* MENU */\r\nexport const MENU_SET_CLASSNAMES = 'MENU_SET_CLASSNAMES';\r\nexport const MENU_CONTAINER_ADD_CLASSNAME = 'MENU_CONTAINER_ADD_CLASSNAME';\r\nexport const MENU_CLICK_MOBILE_MENU = 'MENU_CLICK_MOBILE_MENU';\r\nexport const MENU_CHANGE_DEFAULT_CLASSES = 'MENU_CHANGE_DEFAULT_CLASSES';\r\nexport const MENU_CHANGE_HAS_SUB_ITEM_STATUS =\r\n  'MENU_CHANGE_HAS_SUB_ITEM_STATUS';\r\n\r\n/* CHAT APP */\r\nexport const CHAT_GET_CONTACTS = 'CHAT_GET_CONTACTS';\r\nexport const CHAT_GET_CONTACTS_SUCCESS = 'CHAT_GET_CONTACTS_SUCCESS';\r\nexport const CHAT_GET_CONTACTS_ERROR = 'CHAT_GET_CONTACTS_ERROR';\r\nexport const CHAT_GET_CONVERSATIONS = 'CHAT_GET_CONVERSATIONS';\r\nexport const CHAT_GET_CONVERSATIONS_SUCCESS = 'CHAT_GET_CONVERSATIONS_SUCCESS';\r\nexport const CHAT_GET_CONVERSATIONS_ERROR = 'CHAT_GET_CONVERSATIONS_ERROR';\r\nexport const CHAT_ADD_MESSAGE_TO_CONVERSATION =\r\n  'CHAT_ADD_MESSAGE_TO_CONVERSATION';\r\nexport const CHAT_CREATE_CONVERSATION = 'CHAT_CREATE_CONVERSATION';\r\nexport const CHAT_SEARCH_CONTACT = 'CHAT_SEARCH_CONTACT';\r\nexport const CHAT_CHANGE_CONVERSATION = 'CHAT_CHANGE_CONVERSATION';\r\n\r\n/* agora appId */\r\nexport const SET_APP_ID = 'SET_APP_ID';\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nimport { firebaseConfig } from 'constants/defaultValues';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\nconst database = firebase.database();\r\n\r\nexport { auth, database };\r\n","/* eslint-disable global-require */\r\nimport './assets/css/vendor/bootstrap.min.css';\r\nimport './assets/css/vendor/bootstrap.rtl.only.min.css';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'react-image-lightbox/style.css';\r\nimport 'video.js/dist/video-js.css';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  isMultiColorActive,\r\n  defaultColor,\r\n  isDarkSwitchActive,\r\n} from './constants/defaultValues';\r\nimport { getCurrentColor, setCurrentColor } from './helpers/Utils';\r\n\r\nconst color =\r\n  isMultiColorActive || isDarkSwitchActive ? getCurrentColor() : defaultColor;\r\nsetCurrentColor(color);\r\n\r\n// Add a request interceptor\r\naxios.interceptors.request.use(\r\n  config => {\r\n    const req = config;\r\n    const currentUserDetails = JSON.parse(localStorage.getItem('gogo_current_user'));\r\n    \r\n    if (currentUserDetails?.token && !req.url?.includes('/authenticate') && !req.url?.includes('/signUp')) {\r\n      req.headers.Authorization = `Bearer ${currentUserDetails.token}`\r\n    }\r\n    \r\n    req.headers[`Content-Type`] = 'application/json';\r\n\r\n    return req\r\n  },\r\n  (error) => {\r\n    Promise.reject(error)\r\n  }\r\n);\r\n\r\n\r\nconst render = () => {\r\n  import(`./assets/css/sass/themes/gogo.${color}.scss`).then(() => {\r\n    require('./AppRenderer');\r\n  });\r\n};\r\nrender();\r\n","export const UserRole = {\r\n  Admin: 0,\r\n  Editor: 1,\r\n};\r\n// const BASE_URL='';\r\n\r\n\r\n\r\n// export { BASE_URL };\r\n/*\r\nMenu Types:\r\n\"menu-default\", \"menu-sub-hidden\", \"menu-hidden\"\r\n*/\r\n\r\n// export const BASE_URL = 'http://159.65.148.48:9091/api';     //presonal\r\n\r\nexport const defaultMenuType = 'menu-default';\r\n\r\nexport const subHiddenBreakpoint = 1440;\r\nexport const menuHiddenBreakpoint = 768;\r\nexport const defaultLocale = 'en';\r\nexport const localeOptions = [\r\n  { id: 'en', name: 'English - LTR', direction: 'ltr' },\r\n  { id: 'es', name: 'Español', direction: 'ltr' },\r\n  { id: 'enrtl', name: 'English - RTL', direction: 'rtl' },\r\n];\r\nexport const appKey = \"611104323#1329874\"\r\n\r\nexport const firebaseConfig = {\r\n  apiKey: 'AIzaSyBBksq-Asxq2M4Ot-75X19IyrEYJqNBPcg',\r\n  authDomain: 'gogo-react-login.firebaseapp.com',\r\n  databaseURL: 'https://gogo-react-login.firebaseio.com',\r\n  projectId: 'gogo-react-login',\r\n  storageBucket: 'gogo-react-login.appspot.com',\r\n  messagingSenderId: '216495999563',\r\n};\r\n\r\nexport const adminRoot = '/app';\r\nexport const buyUrl = 'https://1.envato.market/k4z0';\r\nexport const searchPath = `${adminRoot}/#`;\r\nexport const servicePath = 'https://api.coloredstrategies.com';\r\n // export const baseUrl = 'http://159.65.148.48:9091/';\r\n// export const baseUrl = 'http://localhost:3001';\r\n// export const baseUrl = 'http://localhost:9091';\r\nexport const baseUrl = 'https://api.metiegrow.in';\r\n// export const baseUrl = 'http://ec2-51-20-42-40.eu-north-1.compute.amazonaws.com:9091';\r\n\r\nexport const currentUser = {\r\n  id: 1,\r\n  title: 'Sarah Kortney',\r\n  img: '/assets/img/profiles/l-1.jpg',\r\n  date: 'Last seen today 15:24',\r\n  role: UserRole.Admin,\r\n};\r\n\r\nexport const themeColorStorageKey = '__theme_selected_color';\r\nexport const isMultiColorActive = true;\r\nexport const defaultColor = 'light.purplemonster';\r\nexport const isDarkSwitchActive = true;\r\nexport const defaultDirection = 'ltr';\r\nexport const themeRadiusStorageKey = '__theme_radius';\r\nexport const isAuthGuardActive = true;\r\nexport const colors = [\r\n  'bluenavy',\r\n  'blueyale',\r\n  'blueolympic',\r\n  'greenmoss',\r\n  'greenlime',\r\n  'purplemonster',\r\n  'orangecarrot',\r\n  'redruby',\r\n  'yellowgranola',\r\n  'greysteel',\r\n];\r\n","var map = {\n\t\"./gogo.dark.bluenavy.scss\": [\n\t\t99,\n\t\t21\n\t],\n\t\"./gogo.dark.blueolympic.scss\": [\n\t\t100,\n\t\t22\n\t],\n\t\"./gogo.dark.blueyale.scss\": [\n\t\t101,\n\t\t23\n\t],\n\t\"./gogo.dark.greenlime.scss\": [\n\t\t102,\n\t\t24\n\t],\n\t\"./gogo.dark.greenmoss.scss\": [\n\t\t103,\n\t\t25\n\t],\n\t\"./gogo.dark.greysteel.scss\": [\n\t\t104,\n\t\t26\n\t],\n\t\"./gogo.dark.orangecarrot.scss\": [\n\t\t105,\n\t\t27\n\t],\n\t\"./gogo.dark.purplemonster.scss\": [\n\t\t106,\n\t\t28\n\t],\n\t\"./gogo.dark.redruby.scss\": [\n\t\t107,\n\t\t29\n\t],\n\t\"./gogo.dark.yellowgranola.scss\": [\n\t\t108,\n\t\t30\n\t],\n\t\"./gogo.light.bluenavy.scss\": [\n\t\t109,\n\t\t31\n\t],\n\t\"./gogo.light.blueolympic.scss\": [\n\t\t110,\n\t\t32\n\t],\n\t\"./gogo.light.blueyale.scss\": [\n\t\t111,\n\t\t33\n\t],\n\t\"./gogo.light.greenlime.scss\": [\n\t\t112,\n\t\t34\n\t],\n\t\"./gogo.light.greenmoss.scss\": [\n\t\t113,\n\t\t35\n\t],\n\t\"./gogo.light.greysteel.scss\": [\n\t\t114,\n\t\t36\n\t],\n\t\"./gogo.light.orangecarrot.scss\": [\n\t\t115,\n\t\t37\n\t],\n\t\"./gogo.light.purplemonster.scss\": [\n\t\t116,\n\t\t38\n\t],\n\t\"./gogo.light.redruby.scss\": [\n\t\t117,\n\t\t39\n\t],\n\t\"./gogo.light.yellowgranola.scss\": [\n\t\t118,\n\t\t40\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 85;\nmodule.exports = webpackAsyncContext;","import { getCurrentLanguage } from 'helpers/Utils';\r\nimport { CHANGE_LOCALE } from '../contants';\r\n\r\nconst INIT_STATE = {\r\n  locale: getCurrentLanguage(),\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_LOCALE:\r\n      return { ...state, locale: action.payload };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","import {\r\n  defaultMenuType,\r\n  subHiddenBreakpoint,\r\n  menuHiddenBreakpoint,\r\n} from 'constants/defaultValues';\r\nimport {\r\n  MENU_SET_CLASSNAMES,\r\n  MENU_CONTAINER_ADD_CLASSNAME,\r\n  MENU_CLICK_MOBILE_MENU,\r\n  MENU_CHANGE_DEFAULT_CLASSES,\r\n  MENU_CHANGE_HAS_SUB_ITEM_STATUS,\r\n} from '../contants';\r\n\r\nconst INIT_STATE = {\r\n  containerClassnames: defaultMenuType,\r\n  subHiddenBreakpoint,\r\n  menuHiddenBreakpoint,\r\n  menuClickCount: 0,\r\n  selectedMenuHasSubItems: defaultMenuType === 'menu-default', // if you use menu-sub-hidden as default menu type, set value of this variable to false\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case MENU_CHANGE_HAS_SUB_ITEM_STATUS:\r\n      return { ...state, selectedMenuHasSubItems: action.payload };\r\n\r\n    case MENU_SET_CLASSNAMES:\r\n      return {\r\n        ...state,\r\n        containerClassnames: action.payload.containerClassnames,\r\n        menuClickCount: action.payload.menuClickCount,\r\n      };\r\n\r\n    case MENU_CLICK_MOBILE_MENU:\r\n      return {\r\n        ...state,\r\n        containerClassnames: action.payload.containerClassnames,\r\n        menuClickCount: action.payload.menuClickCount,\r\n      };\r\n\r\n    case MENU_CONTAINER_ADD_CLASSNAME:\r\n      return { ...state, containerClassnames: action.payload };\r\n\r\n    case MENU_CHANGE_DEFAULT_CLASSES:\r\n      return { ...state, containerClassnames: action.payload };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","import { getCurrentUser } from 'helpers/Utils';\r\nimport { isAuthGuardActive, currentUser } from 'constants/defaultValues';\r\nimport {\r\n  LOGIN_USER,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGIN_USER_ERROR,\r\n  REGISTER_USER,\r\n  REGISTER_USER_SUCCESS,\r\n  REGISTER_USER_ERROR,\r\n  LOGOUT_USER,\r\n  FORGOT_PASSWORD,\r\n  FORGOT_PASSWORD_SUCCESS,\r\n  FORGOT_PASSWORD_ERROR,\r\n  RESET_PASSWORD,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_ERROR,\r\n} from '../contants';\r\n\r\nconst INIT_STATE = {\r\n  currentUser: isAuthGuardActive ? currentUser : getCurrentUser(),\r\n  forgotUserMail: '',\r\n  newPassword: '',\r\n  resetPasswordCode: '',\r\n  loading: false,\r\n  error: '',\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n      return { ...state, loading: true, error: '' };\r\n    case LOGIN_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentUser: action.payload,\r\n        error: '',\r\n      };\r\n    case LOGIN_USER_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentUser: null,\r\n        error: action.payload.message,\r\n      };\r\n    case FORGOT_PASSWORD:\r\n      return { ...state, loading: true, error: '' };\r\n    case FORGOT_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        forgotUserMail: action.payload,\r\n        error: '',\r\n      };\r\n    case FORGOT_PASSWORD_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        forgotUserMail: '',\r\n        error: action.payload.message,\r\n      };\r\n    case RESET_PASSWORD:\r\n      return { ...state, loading: true, error: '' };\r\n    case RESET_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        newPassword: action.payload,\r\n        resetPasswordCode: '',\r\n        error: '',\r\n      };\r\n    case RESET_PASSWORD_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        newPassword: '',\r\n        resetPasswordCode: '',\r\n        error: action.payload.message,\r\n      };\r\n    case REGISTER_USER:\r\n      return { ...state, loading: true, error: '' };\r\n    case REGISTER_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentUser: action.payload,\r\n        error: '',\r\n      };\r\n    case REGISTER_USER_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentUser: null,\r\n        error: action.payload.message,\r\n      };\r\n    case LOGOUT_USER:\r\n      return { ...state, currentUser: null, error: '' };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","import {\r\n  CHAT_GET_CONTACTS,\r\n  CHAT_GET_CONTACTS_SUCCESS,\r\n  CHAT_GET_CONTACTS_ERROR,\r\n  CHAT_GET_CONVERSATIONS,\r\n  CHAT_GET_CONVERSATIONS_SUCCESS,\r\n  CHAT_GET_CONVERSATIONS_ERROR,\r\n  CHAT_ADD_MESSAGE_TO_CONVERSATION,\r\n  CHAT_CREATE_CONVERSATION,\r\n  CHAT_SEARCH_CONTACT,\r\n  CHAT_CHANGE_CONVERSATION,\r\n} from '../contants';\r\n\r\nconst INIT_STATE = {\r\n  allContacts: null,\r\n  contacts: null,\r\n  conversations: null,\r\n  error: '',\r\n  searchKeyword: '',\r\n  loadingContacts: false,\r\n  loadingConversations: false,\r\n  currentUser: null,\r\n  selectedUser: null,\r\n  selectedUserId: null,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case CHAT_GET_CONTACTS:\r\n      return { ...state, loadingContacts: false };\r\n\r\n    case CHAT_GET_CONTACTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loadingContacts: true,\r\n        allContacts: action.payload.contacts,\r\n        contacts: action.payload.contacts,\r\n        currentUser: action.payload.currentUser,\r\n      };\r\n\r\n    case CHAT_GET_CONTACTS_ERROR:\r\n      return { ...state, loadingContacts: false, error: action.payload };\r\n\r\n    case CHAT_GET_CONVERSATIONS:\r\n      return { ...state, loadingConversations: false };\r\n\r\n    case CHAT_GET_CONVERSATIONS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loadingConversations: true,\r\n        conversations: action.payload.conversations,\r\n        selectedUserId: action.payload.selectedUser,\r\n      };\r\n\r\n    case CHAT_GET_CONVERSATIONS_ERROR:\r\n      return { ...state, loadingConversations: false, error: action.payload };\r\n\r\n    case CHAT_CHANGE_CONVERSATION:\r\n      return {\r\n        ...state,\r\n        selectedUser: state.allContacts.find((x) => x.id === action.payload),\r\n      };\r\n\r\n    case CHAT_ADD_MESSAGE_TO_CONVERSATION:\r\n      return { ...state };\r\n\r\n    case CHAT_CREATE_CONVERSATION:\r\n      return { ...state };\r\n\r\n    case CHAT_SEARCH_CONTACT:\r\n      if (action.payload === '') {\r\n        return { ...state, contacts: state.allContacts };\r\n      }\r\n      // eslint-disable-next-line no-case-declarations\r\n      const keyword = action.payload.toLowerCase();\r\n      // eslint-disable-next-line no-case-declarations\r\n      const searchedContacts = state.allContacts.filter(\r\n        (item) => item.name.toLowerCase().indexOf(keyword) > -1\r\n      );\r\n      return { ...state, contacts: searchedContacts };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","import { SET_APP_ID } from '../contants';\r\n\r\nconst initialState = {\r\n  appId: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_APP_ID:\r\n      // console.log('Reducer: check appId ', action.payload);\r\n      return {\r\n        ...state,\r\n        appId: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport settings from './settings/reducer';\r\nimport menu from './menu/reducer';\r\nimport authUser from './auth/reducer';\r\nimport chatApp from './chat/reducer';\r\nimport agora from \"./agora/reducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n  menu,\r\n  settings,\r\n  authUser,\r\n  chatApp,\r\n  agora\r\n});\r\n\r\nexport default reducers;\r\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { auth } from 'helpers/Firebase';\r\nimport { adminRoot, currentUser } from 'constants/defaultValues';\r\nimport { setCurrentUser } from 'helpers/Utils';\r\nimport { authService } from 'services/authservice';\r\nimport {\r\n  LOGIN_USER,\r\n  REGISTER_USER,\r\n  LOGOUT_USER,\r\n  FORGOT_PASSWORD,\r\n  RESET_PASSWORD,\r\n} from '../contants';\r\n\r\nimport {\r\n  loginUserSuccess,\r\n  loginUserError,\r\n  registerUserSuccess,\r\n  registerUserError,\r\n  forgotPasswordSuccess,\r\n  forgotPasswordError,\r\n  resetPasswordSuccess,\r\n  resetPasswordError,\r\n} from './actions';\r\n\r\n\r\nexport function* watchLoginUser() {\r\n  // eslint-disable-next-line no-use-before-define\r\n  yield takeEvery(LOGIN_USER, loginWithEmailPassword);\r\n}\r\n\r\n// let userObj=null;\r\n\r\n// const loginWithEmailPasswordAsync = async (email, password) =>\r\n//   authService.login(email,password)\r\n//   .then(res => {\r\n//     userObj=res.data;\r\n//   })\r\n//   .catch((error) => {\r\n//     throw error;\r\n//   });\r\nconst loginWithEmailPasswordAsync = async (email, password) =>\r\n  // eslint-disable-next-line no-return-await\r\n  await authService\r\n    .login(email, password)\r\n    .then((user) => user)\r\n    .catch((error) => error);\r\n\r\n\r\nfunction* loginWithEmailPassword({ payload }) {\r\n  const { email, password } = payload.user;\r\n  const { history } = payload;\r\n  try {\r\n    const userObj = yield call(loginWithEmailPasswordAsync, email, password);\r\n    if (userObj!=null && userObj.data) {\r\n      const item = { token:userObj.data.token,role:userObj.data.userType, ...currentUser };\r\n      setCurrentUser(item);\r\n      yield put(loginUserSuccess(item));\r\n      history.push(adminRoot);\r\n    } else if(userObj.response && userObj.response.data && userObj.response.data.statuses && userObj.response.data.statuses[0].message) {\r\n      yield put(loginUserError(userObj.response.data.statuses[0].message));\r\n    } else if(userObj.response && userObj.response.data && userObj.response.data.error) {\r\n      yield put(loginUserError(userObj.response.data.error));\r\n    }\r\n    else yield put(loginUserError(userObj.message));\r\n  } catch (error) {\r\n    yield put(loginUserError(error));\r\n  }\r\n}\r\n\r\nexport function* watchRegisterUser() {\r\n  // eslint-disable-next-line no-use-before-define\r\n  yield takeEvery(REGISTER_USER, registerWithEmailPassword);\r\n}\r\n\r\n\r\n\r\n// const registerWithEmailAndPasswordAsync = async (email, password,name) =>\r\n//   authService.signUp(email,password,name)\r\n//   .then(res => {\r\n//     userObj=res.data;\r\n//   })\r\n//   .catch((error) => error);\r\nconst registerWithEmailAndPasswordAsync = async (email, password) =>\r\n  // eslint-disable-next-line no-return-await\r\n  await authService\r\n    .signUp(email, password)\r\n    .then((user) => user)\r\n    .catch((error) => error);\r\n\r\n\r\n\r\nfunction* registerWithEmailPassword({ payload }) {\r\n  const { email, password,name } = payload.user;\r\n  const { history } = payload;\r\n  try {\r\n   const userObj = yield call(registerWithEmailAndPasswordAsync, email, password,name);\r\n    if (userObj!=null && userObj.data) {\r\n      const item = { id: userObj.data.id, ...currentUser };\r\n      yield put(registerUserSuccess(item));\r\n      history.push(adminRoot);\r\n    } else {\r\n      yield put(registerUserError(userObj.data.message));\r\n    }\r\n  } catch (error) {\r\n    yield put(registerUserError(error));\r\n  }\r\n}\r\n\r\nexport function* watchLogoutUser() {\r\n  // eslint-disable-next-line no-use-before-define\r\n  yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nconst logoutAsync = async (history) => {\r\n  await auth\r\n    .signOut()\r\n    .then((user) => user)\r\n    .catch((error) => error);\r\n  history.push(adminRoot);\r\n};\r\n\r\nfunction* logout({ payload }) {\r\n  const { history } = payload;\r\n  setCurrentUser();\r\n  yield call(logoutAsync, history);\r\n}\r\n\r\n\r\n\r\nconst forgotPasswordAsync = async (email) => {\r\n  // eslint-disable-next-line\r\n  return await authService\r\n    .sendPasswordResetEmail(email)\r\n    .then((user) => user)\r\n    .catch((error) => error);\r\n};\r\n\r\nfunction* forgotPassword({ payload }) {\r\n  const { forgotUserMail } = payload;\r\n  try {\r\n    const forgotPasswordStatus = yield call(forgotPasswordAsync, forgotUserMail);\r\n    if (forgotPasswordStatus && forgotPasswordStatus.status === 200) {\r\n      yield put(forgotPasswordSuccess('success'));\r\n    } else {\r\n      yield put(forgotPasswordError(forgotPasswordStatus.message || 'Unknown error occurred'));\r\n    }\r\n  } catch (error) {\r\n    yield put(forgotPasswordError(error.message || 'Unknown error occurred'));\r\n  }\r\n}\r\nexport function* watchForgotPassword() {\r\n  yield takeEvery(FORGOT_PASSWORD, forgotPassword);\r\n}\r\n\r\nexport function* watchResetPassword() {\r\n  // eslint-disable-next-line no-use-before-define\r\n  yield takeEvery(RESET_PASSWORD, resetPassword);\r\n}\r\n\r\nconst resetPasswordAsync = async ( newPassword, confirmPassword, email) => {\r\n  // eslint-disable-next-line no-return-await\r\n  return await authService\r\n    .confirmPasswordReset( newPassword, confirmPassword, email)\r\n    .then((user) => user)\r\n    .catch((error) => error);\r\n};\r\n\r\nfunction* resetPassword({ payload }) {\r\n  const { newPassword, confirmPassword, email } = payload;\r\n  try {\r\n    const resetPasswordStatus = yield call(\r\n      resetPasswordAsync,\r\n      confirmPassword,\r\n      newPassword,\r\n      email\r\n    );\r\n    if (resetPasswordStatus && resetPasswordStatus.status === 200) {\r\n      console.log(\"vv\",resetPasswordStatus)\r\n      yield put(resetPasswordSuccess('success'));\r\n    } else {\r\n      yield put(resetPasswordError(resetPasswordStatus.message || 'Unknown error occurred'));\r\n    }\r\n  } catch (error) {\r\n    yield put(resetPasswordError(error || 'Unknown error occurred'));\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(watchLoginUser),\r\n    fork(watchLogoutUser),\r\n    fork(watchRegisterUser),\r\n    fork(watchForgotPassword),\r\n    fork(watchResetPassword),\r\n  ]);\r\n}\r\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { getCurrentTime } from 'helpers/Utils';\r\n\r\nimport contactsData from 'data/chat.contacts.json';\r\nimport conversationsData from 'data/chat.conversations.json';\r\nimport {\r\n  CHAT_GET_CONTACTS,\r\n  CHAT_GET_CONVERSATIONS,\r\n  CHAT_ADD_MESSAGE_TO_CONVERSATION,\r\n  CHAT_CREATE_CONVERSATION,\r\n} from '../contants';\r\n\r\nimport {\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  getConversationsSuccess,\r\n  getConversationsError,\r\n} from './actions';\r\n\r\nfunction* loadContacts() {\r\n  try {\r\n    // eslint-disable-next-line no-use-before-define\r\n    const response = yield call(loadContactsAsync);\r\n    const { contacts, currentUser } = response;\r\n    yield put(getContactsSuccess(contacts, currentUser));\r\n  } catch (error) {\r\n    yield put(getContactsError(error));\r\n  }\r\n}\r\n\r\nconst loadContactsAsync = async () => {\r\n  const contacts = contactsData.data;\r\n  const currentUser = contacts[0];\r\n  // eslint-disable-next-line no-return-await\r\n  return await new Promise((success) => {\r\n    setTimeout(() => {\r\n      success({ contacts, currentUser });\r\n    }, 2000);\r\n  })\r\n    .then((response) => response)\r\n    .catch((error) => error);\r\n};\r\n\r\nfunction* loadConversations(userId) {\r\n  try {\r\n    // eslint-disable-next-line no-use-before-define\r\n    const response = yield call(loadConversationsAsync, userId);\r\n    const { conversations, selectedUser } = response;\r\n    yield put(getConversationsSuccess(conversations, selectedUser));\r\n  } catch (error) {\r\n    yield put(getConversationsError(error));\r\n  }\r\n}\r\n\r\nconst loadConversationsAsync = async ({ payload }) => {\r\n  let conversations = conversationsData.data;\r\n  conversations = conversations.filter((x) => x.users.includes(payload));\r\n  const selectedUser = conversations[0].users.find((x) => x !== payload);\r\n  // eslint-disable-next-line no-return-await\r\n  return await new Promise((success) => {\r\n    setTimeout(() => {\r\n      success({ conversations, selectedUser });\r\n    }, 1000);\r\n  })\r\n    .then((response) => response)\r\n    .catch((error) => error);\r\n};\r\n\r\nfunction* addMessageToConversation({ payload }) {\r\n  try {\r\n    const { currentUserId, selectedUserId, message, allConversations } =\r\n      payload;\r\n\r\n    const response = yield call(\r\n      // eslint-disable-next-line no-use-before-define\r\n      addMessageToConversationAsync,\r\n      currentUserId,\r\n      selectedUserId,\r\n      message,\r\n      allConversations\r\n    );\r\n    const { conversations, selectedUser } = response;\r\n    yield put(getConversationsSuccess(conversations, selectedUser));\r\n  } catch (error) {\r\n    yield put(getConversationsError(error));\r\n  }\r\n}\r\n\r\nconst addMessageToConversationAsync = async (\r\n  currentUserId,\r\n  selectedUserId,\r\n  message,\r\n  allConversations\r\n  // eslint-disable-next-line consistent-return\r\n) => {\r\n  const conversation = allConversations.find(\r\n    (x) => x.users.includes(currentUserId) && x.users.includes(selectedUserId)\r\n  );\r\n  const time = getCurrentTime();\r\n  if (conversation) {\r\n    conversation.messages.push({\r\n      sender: currentUserId,\r\n      time,\r\n      text: message,\r\n    });\r\n    conversation.lastMessageTime = time;\r\n    const conversations = allConversations.filter(\r\n      (x) => x.id !== conversation.id\r\n    );\r\n    conversations.splice(0, 0, conversation);\r\n\r\n    // eslint-disable-next-line no-return-await\r\n    return await new Promise((success) => {\r\n      setTimeout(() => {\r\n        success({ conversations, selectedUser: selectedUserId });\r\n      }, 500);\r\n    })\r\n      .then((response) => response)\r\n      .catch((error) => error);\r\n  }\r\n};\r\n\r\nfunction* createNewConversation({ payload }) {\r\n  try {\r\n    const { currentUserId, selectedUserId, allConversations } = payload;\r\n    const response = yield call(\r\n      // eslint-disable-next-line no-use-before-define\r\n      createNewConversationAsync,\r\n      currentUserId,\r\n      selectedUserId,\r\n      allConversations\r\n    );\r\n    const { conversations, selectedUser } = response;\r\n    yield put(getConversationsSuccess(conversations, selectedUser));\r\n  } catch (error) {\r\n    yield put(getConversationsError(error));\r\n  }\r\n}\r\n\r\nconst createNewConversationAsync = async (\r\n  currentUserId,\r\n  selectedUserId,\r\n  allConversations\r\n) => {\r\n  const conversation = {\r\n    id: allConversations.length + 1,\r\n    users: [currentUserId, selectedUserId],\r\n    lastMessageTime: '-',\r\n    messages: [],\r\n  };\r\n\r\n  allConversations.splice(0, 0, conversation);\r\n  // eslint-disable-next-line no-return-await\r\n  return await new Promise((success) => {\r\n    setTimeout(() => {\r\n      success({\r\n        conversations: allConversations,\r\n        selectedUser: selectedUserId,\r\n      });\r\n    }, 500);\r\n  })\r\n    .then((response) => response)\r\n    .catch((error) => error);\r\n};\r\n\r\nexport function* watchGetContact() {\r\n  yield takeEvery(CHAT_GET_CONTACTS, loadContacts);\r\n}\r\n\r\nexport function* watchGetConversation() {\r\n  yield takeEvery(CHAT_GET_CONVERSATIONS, loadConversations);\r\n}\r\n\r\nexport function* watchAddMessageToConversation() {\r\n  yield takeEvery(CHAT_ADD_MESSAGE_TO_CONVERSATION, addMessageToConversation);\r\n}\r\n\r\nexport function* watchCreateConversation() {\r\n  yield takeEvery(CHAT_CREATE_CONVERSATION, createNewConversation);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(watchGetContact),\r\n    fork(watchGetConversation),\r\n    fork(watchAddMessageToConversation),\r\n    fork(watchCreateConversation),\r\n  ]);\r\n}\r\n","import { takeLatest, call  } from 'redux-saga/effects';\r\nimport { SET_APP_ID } from '../contants';\r\n\r\nfunction* handleSetAppId() {\r\n  // console.log('App ID set saga chk:', action.payload);\r\n  yield call(() => {});\r\n}\r\n\r\nexport default function* watchSetAppId() {\r\n  yield takeLatest(SET_APP_ID, handleSetAppId);\r\n}","import { all } from 'redux-saga/effects';\r\nimport authSagas from './auth/saga';\r\nimport chatSagas from './chat/saga';\r\nimport agoraSagas from \"./agora/saga\"\r\n\r\nexport default function* rootSaga() {\r\n  yield all([authSagas(),\r\n    chatSagas(),agoraSagas()]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducers from './reducers';\r\nimport sagas from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport function configureStore(initialState) {\r\n  const store = createStore(\r\n    reducers,\r\n    initialState,\r\n    compose(applyMiddleware(...middlewares))\r\n  );\r\n\r\n  sagaMiddleware.run(sagas);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept('./reducers', () => {\r\n      // eslint-disable-next-line global-require\r\n      const nextRootReducer = require('./reducers');\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { configureStore } from \"./redux/store\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst App = React.lazy(() => import(/* webpackChunkName: \"App\" */ \"./App\"));\r\n\r\nconst Main = () => {\r\n  return (\r\n    <Provider store={configureStore()}>\r\n      <Suspense fallback={<div className=\"loading\" />}>\r\n        <App />\r\n      </Suspense>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Main />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}