{"version":3,"sources":["components/common/CustomBootstrap.js","helpers/IntlMessages.js","redux/menu/actions.js","redux/settings/actions.js","views/user/register.js"],"names":["Colxx","props","_jsx","Col","_objectSpread","widths","injectIntl","FormattedMessage","withRef","changeSelectedMenuHasSubItems","payload","type","MENU_CHANGE_HAS_SUB_ITEM_STATUS","changeDefaultClassnames","strCurrentClasses","MENU_CHANGE_DEFAULT_CLASSES","addContainerClassname","classname","newClasses","indexOf","concat","MENU_CONTAINER_ADD_CLASSNAME","clickOnMobileMenu","currentClasses","split","filter","x","nextClasses","includes","join","MENU_CLICK_MOBILE_MENU","containerClassnames","menuClickCount","setContainerClassnames","clickIndex","selectedMenuHasSubItems","MENU_SET_CLASSNAMES","changeLocale","locale","setCurrentLanguage","CHANGE_LOCALE","connect","mapStateToProps","registerUserAction","registerUser","Register","firstName","setFirstName","useState","lastName","setLastName","username","setUsername","email","setEmail","phoneNumber","setPhoneNumber","password","setPassword","confirmPassword","setConfirmPassword","roleError","setRoleError","isSubmitted","setIsSubmitted","loading","setLoading","selectedRole","setSelectedRole","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","history","useHistory","handleRoleChange","role","Row","className","children","xxs","md","_jsxs","Card","NavLink","to","Button","onClick","clickToLogin","push","color","AvForm","onValidSubmit","async","length","signUpResponse","authService","signUp","status","console","error","data","statuses","forEach","NotificationManager","warning","message","CardTitle","IntlMessages","id","FormGroup","Label","AvField","name","value","onChange","e","target","validate","required","errorMessage","pattern","autoComplete","maxLength","onKeyPress","event","test","key","preventDefault","style","top","right","transform","FaEyeSlash","FaEye","match","check","Input","checked","size"],"mappings":"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","file":"static/js/user-register.efd2de83.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col } from 'reactstrap';\r\n\r\nconst Colxx = (props) => (\r\n  <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = ({ className }) => (\r\n  <div className={`separator ${className}`} />\r\n);\r\nexport { Colxx, Separator };\r\n","import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nconst InjectMassage = (props) => <FormattedMessage {...props} />;\r\n\r\nexport default injectIntl(InjectMassage, {\r\n  withRef: false,\r\n});\r\n","/* eslint-disable no-param-reassign */\r\nimport {\r\n  MENU_SET_CLASSNAMES,\r\n  MENU_CONTAINER_ADD_CLASSNAME,\r\n  MENU_CLICK_MOBILE_MENU,\r\n  MENU_CHANGE_DEFAULT_CLASSES,\r\n  MENU_CHANGE_HAS_SUB_ITEM_STATUS,\r\n} from '../contants';\r\n\r\nexport const changeSelectedMenuHasSubItems = (payload) => {\r\n  return {\r\n    type: MENU_CHANGE_HAS_SUB_ITEM_STATUS,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const changeDefaultClassnames = (strCurrentClasses) => {\r\n  return {\r\n    type: MENU_CHANGE_DEFAULT_CLASSES,\r\n    payload: strCurrentClasses,\r\n  };\r\n};\r\n\r\nexport const addContainerClassname = (classname, strCurrentClasses) => {\r\n  const newClasses =\r\n    !strCurrentClasses.indexOf(classname) > -1\r\n      ? `${strCurrentClasses} ${classname}`\r\n      : strCurrentClasses;\r\n  return {\r\n    type: MENU_CONTAINER_ADD_CLASSNAME,\r\n    payload: newClasses,\r\n  };\r\n};\r\n\r\nexport const clickOnMobileMenu = (strCurrentClasses) => {\r\n  const currentClasses = strCurrentClasses\r\n    ? strCurrentClasses\r\n        .split(' ')\r\n        .filter((x) => x !== '' && x !== 'sub-show-temporary')\r\n    : '';\r\n  let nextClasses = '';\r\n  if (currentClasses.includes('main-show-temporary')) {\r\n    nextClasses = currentClasses\r\n      .filter((x) => x !== 'main-show-temporary')\r\n      .join(' ');\r\n  } else {\r\n    nextClasses = `${currentClasses.join(' ')} main-show-temporary`;\r\n  }\r\n  return {\r\n    type: MENU_CLICK_MOBILE_MENU,\r\n    payload: { containerClassnames: nextClasses, menuClickCount: 0 },\r\n  };\r\n};\r\n\r\nexport const setContainerClassnames = (\r\n  clickIndex,\r\n  strCurrentClasses,\r\n  selectedMenuHasSubItems\r\n) => {\r\n  const currentClasses = strCurrentClasses\r\n    ? strCurrentClasses.split(' ').filter((x) => x !== '')\r\n    : '';\r\n  let nextClasses = '';\r\n  if (!selectedMenuHasSubItems) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      (clickIndex % 4 === 0 || clickIndex % 4 === 3)\r\n    ) {\r\n      clickIndex = 1;\r\n    }\r\n    if (currentClasses.includes('menu-sub-hidden') && clickIndex % 4 === 2) {\r\n      clickIndex = 0;\r\n    }\r\n    if (\r\n      currentClasses.includes('menu-hidden') &&\r\n      (clickIndex % 4 === 2 || clickIndex % 4 === 3)\r\n    ) {\r\n      clickIndex = 0;\r\n    }\r\n  }\r\n\r\n  if (clickIndex % 4 === 0) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden';\r\n    }\r\n    clickIndex = 0;\r\n  } else if (clickIndex % 4 === 1) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden main-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default sub-hidden';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden main-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden main-show-temporary';\r\n    }\r\n  } else if (clickIndex % 4 === 2) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default main-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden main-show-temporary sub-show-temporary';\r\n    }\r\n  } else if (clickIndex % 4 === 3) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden sub-show-temporary';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default sub-hidden';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden sub-show-temporary';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden main-show-temporary';\r\n    }\r\n  }\r\n  if (currentClasses.includes('menu-mobile')) {\r\n    nextClasses += ' menu-mobile';\r\n  }\r\n  return {\r\n    type: MENU_SET_CLASSNAMES,\r\n    payload: { containerClassnames: nextClasses, menuClickCount: clickIndex },\r\n  };\r\n};\r\n","import { setCurrentLanguage } from 'helpers/Utils';\r\nimport { CHANGE_LOCALE } from '../contants';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const changeLocale = (locale) => {\r\n  setCurrentLanguage(locale);\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    payload: locale,\r\n  };\r\n};\r\n","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardTitle,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Row,\r\n\r\n} from \"reactstrap\";\r\nimport { registerUser } from \"redux/actions\";\r\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport IntlMessages from \"helpers/IntlMessages\";\r\nimport { authService } from \"services/authservice\";\r\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\"; // Import eye icons\r\nimport { NotificationManager } from \"components/common/react-notifications\"; // Ensure this import is correct\r\n\r\nconst Register = () => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"+91\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [roleError, setRoleError] = useState(false);\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedRole, setSelectedRole] = useState(\"MENTOR\");\r\n  const [showPassword, setShowPassword] = useState(false); // State for password visibility\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false); // State for confirm password visibility\r\n\r\n  const history = useHistory();\r\n\r\n  const handleRoleChange = (role) => {\r\n    setSelectedRole(role);\r\n  };\r\n\r\n  const clickToLogin = () => {\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const OnRegisterButtonclick = async () => {\r\n    try {\r\n      if (selectedRole.length === 0) {\r\n        setRoleError(true);\r\n        return;\r\n      }\r\n      setRoleError(false);\r\n      setLoading(true);\r\n\r\n      const signUpResponse = await authService.signUp(\r\n        email,\r\n        phoneNumber,\r\n        password,\r\n        firstName,\r\n        lastName,\r\n        [selectedRole],\r\n        username\r\n      );\r\n      if (signUpResponse && signUpResponse.status === 200) {\r\n        setIsSubmitted(true);\r\n        setLoading(false);\r\n      } else {\r\n        console.error(\"Signup Failed:\", signUpResponse);\r\n        setLoading(false);\r\n        signUpResponse.data.statuses.forEach((status) => {\r\n          NotificationManager.warning(\r\n            status.message,\r\n            status.status,\r\n            5000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error registering user:\", error);\r\n      NotificationManager.warning(\r\n        \"Something went wrong\",\r\n        \"Oops!\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row className=\"h-100\">\r\n      <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\r\n        <Card className=\"auth-card\">\r\n          <div className=\"position-relative image-side \">\r\n            <p className=\"text-white h2\">METIEGROW</p>\r\n            {isSubmitted ? (\r\n              <div />\r\n            ) : (\r\n              <p className=\"white mb-0\">\r\n                Please use this form to register. <br />\r\n                If you are a member, please{\" \"}\r\n                <NavLink to=\"/login\" className=\"white\">\r\n                  login\r\n                </NavLink>\r\n                .\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div className=\"form-side\">\r\n            <NavLink to=\"/\" className=\"white\">\r\n              <span className=\"logo-single\" />\r\n            </NavLink>\r\n            {isSubmitted ? (\r\n              <Row>\r\n                <div className=\"d-flex \">\r\n                  <div className=\"m-auto text-center\">\r\n                    <i className=\"iconsminds-inbox-full display-4 mb-3 text-muted\" />\r\n                    <h2 className=\"font-weight-bold mb-3\">Check your inbox</h2>\r\n                    <h4>\r\n                      We&apos;ve sent you a verification link to{\" \"}\r\n                      <strong>{email}</strong>. Please click the link to confirm\r\n                      your address.\r\n                    </h4>\r\n                    <p className=\"text-muted mt-2\">\r\n                      Can&apos;t find the email? Please check the spam folder.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <Col className=\"text-center mt-4\">\r\n                  <Button onClick={clickToLogin} color=\"primary\">\r\n                    Login\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            ) : (\r\n              <AvForm onValidSubmit={OnRegisterButtonclick}>\r\n                <CardTitle className=\"mb-4\">\r\n                  <IntlMessages id=\"user.register\" />\r\n                </CardTitle>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup className=\"form-group has-float-label\">\r\n                      <Label>First Name</Label>\r\n                      <AvField\r\n                        name=\"firstName\"\r\n                        type=\"text\"\r\n                        value={firstName}\r\n                        onChange={(e) => setFirstName(e.target.value)}\r\n                        validate={{\r\n                          required: {\r\n                            value: true,\r\n                            errorMessage: \"First name cannot be empty\",\r\n                          },\r\n                          pattern: {\r\n                            value: \"^[a-zA-Z]+$\",\r\n                            errorMessage:\r\n                              \"First name must contain only alphabetic characters\",\r\n                          },\r\n                        }}\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup className=\"form-group has-float-label\">\r\n                      <Label>Last Name</Label>\r\n                      <AvField\r\n                        name=\"lastName\"\r\n                        type=\"text\"\r\n                        value={lastName}\r\n                        onChange={(e) => setLastName(e.target.value)}\r\n                        validate={{\r\n                          required: {\r\n                            value: true,\r\n                            errorMessage: \"Last name cannot be empty\",\r\n                          },\r\n                          pattern: {\r\n                            value: \"^[a-zA-Z]+$\",\r\n                            errorMessage:\r\n                              \"Last name must contain only alphabetic characters\",\r\n                          },\r\n                        }}\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <FormGroup className=\"form-group has-float-label\">\r\n                  <Label>Username</Label>\r\n                  <AvField\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    validate={{\r\n                      required: {\r\n                        value: true,\r\n                        errorMessage: \"Username cannot be empty\",\r\n                      },\r\n                      pattern: {\r\n                        value: \"^[a-zA-Z0-9_@]{3,20}$\",\r\n                        errorMessage:\r\n                          \"Username must contain 3-20 characters and may include alphanumeric characters, underscores, and the @ symbol\",\r\n                      },\r\n                    }}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"form-group has-float-label\">\r\n                  <Label>Email</Label>\r\n                  <AvField\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    validate={{\r\n                      required: {\r\n                        value: true,\r\n                        errorMessage: \"Email cannot be empty\",\r\n                      },\r\n                      email: {\r\n                        value: true,\r\n                        errorMessage: \"Please provide a valid email address\",\r\n                      },\r\n                    }}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"form-group has-float-label\">\r\n                  <Label>Mobile Number</Label>\r\n                  <AvField\r\n                    name=\"phoneNumber\"\r\n                    type=\"text\"\r\n                    value={phoneNumber}\r\n                    maxLength={13}\r\n                    onChange={(e) => setPhoneNumber(e.target.value)}\r\n                    onKeyPress={(event) => {\r\n                      if (!/[0-9]/.test(event.key)) {\r\n                        event.preventDefault();\r\n                      }\r\n                    }}\r\n                    validate={{\r\n                      required: {\r\n                        value: true,\r\n                        errorMessage: \"Phone number cannot be empty\",\r\n                      },\r\n                      pattern: {\r\n                        value: \"^[0-9]{12}$\",\r\n                        errorMessage:\r\n                          \"Please enter a valid mobile number with 2-digit country code and 10-digit number (e.g., 911234567890)\",\r\n                      },\r\n                    }}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </FormGroup>\r\n\r\n                <Row>\r\n                  <Col>\r\n                  <FormGroup className=\"form-group has-float-label position-relative\">\r\n      <Label>Password</Label>\r\n      <AvField\r\n        name=\"password\"\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        validate={{\r\n          required: { value: true, errorMessage: \"Please enter your password\" },\r\n          pattern: {\r\n            value: \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@#$%^&+=!]).{8,15}$\",\r\n            errorMessage:\r\n              \"Password must contain at least one lowercase letter, one uppercase letter, one digit, one special character, and be 8-15 characters long\",\r\n          },\r\n        }}\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-link position-absolute\"\r\n        style={{ top: \"50%\", right: \"1px\", transform: \"translateY(-50%)\" }}\r\n        onClick={() => setShowPassword(!showPassword)}\r\n      >\r\n        {showPassword ? <FaEyeSlash /> : <FaEye />}\r\n      </button>\r\n    </FormGroup>\r\n  </Col>\r\n\r\n  {/* Confirm Password Field */}\r\n  <Col>\r\n    <FormGroup className=\"form-group has-float-label position-relative\">\r\n      <Label>Confirm Password</Label>\r\n      <AvField\r\n        name=\"confirmPassword\"\r\n        type={showConfirmPassword ? \"text\" : \"password\"}\r\n        value={confirmPassword}\r\n        onChange={(e) => setConfirmPassword(e.target.value)}\r\n        validate={{\r\n          required: { value: true, errorMessage: \"Confirm password is required\" },\r\n          match: { value: password, errorMessage: \"Passwords do not match\" },\r\n        }}\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-link position-absolute\"\r\n        style={{ top: \"50%\", right: \"1px\", transform: \"translateY(-50%)\" }}\r\n        onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n      >\r\n        {showConfirmPassword ? <FaEyeSlash /> : <FaEye />}\r\n      </button>\r\n    </FormGroup>\r\n                     </Col>\r\n                </Row>\r\n                <Row>\r\n                  <FormGroup check>\r\n                    <Label check className=\"ml-2\">\r\n                      <Input\r\n                        type=\"radio\"\r\n                        onChange={() => handleRoleChange(\"MENTOR\")}\r\n                        checked={selectedRole === \"MENTOR\"}\r\n                        name=\"userRole\"\r\n                      />\r\n                      Mentor\r\n                    </Label>\r\n                  </FormGroup>\r\n                  <FormGroup check className=\"ml-2\">\r\n                    <Label check>\r\n                      <Input\r\n                        type=\"radio\"\r\n                        onChange={() => handleRoleChange(\"USER\")}\r\n                        checked={selectedRole === \"USER\"}\r\n                        name=\"userRole\"\r\n                      />\r\n                      Student\r\n                    </Label>\r\n                  </FormGroup>\r\n                  <FormGroup check className=\"\">\r\n                    <Label check className=\"ml-2\">\r\n                      <Input\r\n                        type=\"radio\"\r\n                        onChange={() => handleRoleChange(\"LAWYER\")}\r\n                        checked={selectedRole === \"LAWYER\"}\r\n                        name=\"userRole\"\r\n                      />\r\n                      Lawyer\r\n                    </Label>\r\n                  </FormGroup>\r\n                  <FormGroup check>\r\n                    <Label check className=\"ml-2\">\r\n                      <Input\r\n                        type=\"radio\"\r\n                        onChange={() => handleRoleChange(\"ALUMNI\")}\r\n                        checked={selectedRole === \"ALUMNI\"}\r\n                        name=\"userRole\"\r\n                      />\r\n                      Alumni\r\n                    </Label>\r\n                  </FormGroup>\r\n                  <FormGroup check>\r\n                    <Label check className=\"ml-2\">\r\n                      <Input\r\n                        type=\"radio\"\r\n                        onChange={() => handleRoleChange(\"HR\")}\r\n                        checked={selectedRole === \"HR\"}\r\n                        name=\"userRole\"\r\n                      />\r\n                      HR\r\n                    </Label>\r\n                  </FormGroup>\r\n                  <FormGroup check>\r\n                    <Label check className=\"ml-2\">\r\n                      <Input\r\n                        type=\"radio\"\r\n                        onChange={() => handleRoleChange(\"REALESTATE\")}\r\n                        checked={selectedRole === \"REALESTATE\"}\r\n                        name=\"userRole\"\r\n                      />\r\n                      Real estate agent\r\n                    </Label>\r\n                  </FormGroup>\r\n                </Row>\r\n                {roleError && (\r\n                  <div className=\"invalid-feedback d-block mt-2 ml-4\">\r\n                    Please select at least one role\r\n                  </div>\r\n                )}\r\n                <div className=\"d-flex justify-content-between flex-wrap align-items-center\">\r\n                  <div>\r\n                    Already a registered user?{\" \"}\r\n                    <NavLink to=\"/login\">login</NavLink>\r\n                  </div>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    className={`btn-shadow btn-multiple-state ${\r\n                      loading ? \"show-spinner\" : \"\"\r\n                    } mt-2 mt-sm-0`}\r\n                    size=\"lg\"\r\n                    type=\"submit\"\r\n                  >\r\n                    <span className=\"spinner d-inline-block\">\r\n                      <span className=\"bounce1\" />\r\n                      <span className=\"bounce2\" />\r\n                      <span className=\"bounce3\" />\r\n                    </span>\r\n                    <span className=\"label\">\r\n                      <IntlMessages id=\"user.register-button\" />\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n              </AvForm>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = () => {};\r\n\r\nexport default connect(mapStateToProps, {\r\n  registerUserAction: registerUser,\r\n})(Register);\r\n"],"sourceRoot":""}