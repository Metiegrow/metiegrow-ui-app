{"version":3,"sources":["components/common/CustomBootstrap.js","helpers/IntlMessages.js","redux/menu/actions.js","redux/settings/actions.js","views/user/reset-password.js"],"names":["Colxx","props","_jsx","Col","widths","injectIntl","FormattedMessage","withRef","changeSelectedMenuHasSubItems","payload","type","MENU_CHANGE_HAS_SUB_ITEM_STATUS","changeDefaultClassnames","strCurrentClasses","MENU_CHANGE_DEFAULT_CLASSES","addContainerClassname","classname","newClasses","indexOf","MENU_CONTAINER_ADD_CLASSNAME","clickOnMobileMenu","currentClasses","split","filter","x","nextClasses","includes","join","MENU_CLICK_MOBILE_MENU","containerClassnames","menuClickCount","setContainerClassnames","clickIndex","selectedMenuHasSubItems","MENU_SET_CLASSNAMES","changeLocale","locale","setCurrentLanguage","CHANGE_LOCALE","validateNewPassword","values","newPassword","confirmPassword","errors","connect","_ref3","authUser","resetPasswordCode","loading","error","resetPasswordAction","resetPassword","_ref","email","useState","resetLoading","setResetLoading","history","useHistory","useEffect","NotificationManager","warning","success","initialValues","Row","className","children","xxs","md","_jsxs","Card","NavLink","to","CardTitle","Formik","validate","onSubmit","async","response","authService","confirmPasswordReset","status","data","statuses","forEach","message","push","er","console","_ref2","touched","Form","FormGroup","Label","Field","name","Button","color","size","IntlMessages","id"],"mappings":"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","file":"static/js/user-reset-password.027d58a3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col } from 'reactstrap';\r\n\r\nconst Colxx = (props) => (\r\n  <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = ({ className }) => (\r\n  <div className={`separator ${className}`} />\r\n);\r\nexport { Colxx, Separator };\r\n","import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nconst InjectMassage = (props) => <FormattedMessage {...props} />;\r\n\r\nexport default injectIntl(InjectMassage, {\r\n  withRef: false,\r\n});\r\n","/* eslint-disable no-param-reassign */\r\nimport {\r\n  MENU_SET_CLASSNAMES,\r\n  MENU_CONTAINER_ADD_CLASSNAME,\r\n  MENU_CLICK_MOBILE_MENU,\r\n  MENU_CHANGE_DEFAULT_CLASSES,\r\n  MENU_CHANGE_HAS_SUB_ITEM_STATUS,\r\n} from '../contants';\r\n\r\nexport const changeSelectedMenuHasSubItems = (payload) => {\r\n  return {\r\n    type: MENU_CHANGE_HAS_SUB_ITEM_STATUS,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const changeDefaultClassnames = (strCurrentClasses) => {\r\n  return {\r\n    type: MENU_CHANGE_DEFAULT_CLASSES,\r\n    payload: strCurrentClasses,\r\n  };\r\n};\r\n\r\nexport const addContainerClassname = (classname, strCurrentClasses) => {\r\n  const newClasses =\r\n    !strCurrentClasses.indexOf(classname) > -1\r\n      ? `${strCurrentClasses} ${classname}`\r\n      : strCurrentClasses;\r\n  return {\r\n    type: MENU_CONTAINER_ADD_CLASSNAME,\r\n    payload: newClasses,\r\n  };\r\n};\r\n\r\nexport const clickOnMobileMenu = (strCurrentClasses) => {\r\n  const currentClasses = strCurrentClasses\r\n    ? strCurrentClasses\r\n        .split(' ')\r\n        .filter((x) => x !== '' && x !== 'sub-show-temporary')\r\n    : '';\r\n  let nextClasses = '';\r\n  if (currentClasses.includes('main-show-temporary')) {\r\n    nextClasses = currentClasses\r\n      .filter((x) => x !== 'main-show-temporary')\r\n      .join(' ');\r\n  } else {\r\n    nextClasses = `${currentClasses.join(' ')} main-show-temporary`;\r\n  }\r\n  return {\r\n    type: MENU_CLICK_MOBILE_MENU,\r\n    payload: { containerClassnames: nextClasses, menuClickCount: 0 },\r\n  };\r\n};\r\n\r\nexport const setContainerClassnames = (\r\n  clickIndex,\r\n  strCurrentClasses,\r\n  selectedMenuHasSubItems\r\n) => {\r\n  const currentClasses = strCurrentClasses\r\n    ? strCurrentClasses.split(' ').filter((x) => x !== '')\r\n    : '';\r\n  let nextClasses = '';\r\n  if (!selectedMenuHasSubItems) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      (clickIndex % 4 === 0 || clickIndex % 4 === 3)\r\n    ) {\r\n      clickIndex = 1;\r\n    }\r\n    if (currentClasses.includes('menu-sub-hidden') && clickIndex % 4 === 2) {\r\n      clickIndex = 0;\r\n    }\r\n    if (\r\n      currentClasses.includes('menu-hidden') &&\r\n      (clickIndex % 4 === 2 || clickIndex % 4 === 3)\r\n    ) {\r\n      clickIndex = 0;\r\n    }\r\n  }\r\n\r\n  if (clickIndex % 4 === 0) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden';\r\n    }\r\n    clickIndex = 0;\r\n  } else if (clickIndex % 4 === 1) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden main-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default sub-hidden';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden main-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden main-show-temporary';\r\n    }\r\n  } else if (clickIndex % 4 === 2) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default main-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden main-show-temporary sub-show-temporary';\r\n    }\r\n  } else if (clickIndex % 4 === 3) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden sub-show-temporary';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default sub-hidden';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden sub-show-temporary';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden main-show-temporary';\r\n    }\r\n  }\r\n  if (currentClasses.includes('menu-mobile')) {\r\n    nextClasses += ' menu-mobile';\r\n  }\r\n  return {\r\n    type: MENU_SET_CLASSNAMES,\r\n    payload: { containerClassnames: nextClasses, menuClickCount: clickIndex },\r\n  };\r\n};\r\n","import { setCurrentLanguage } from 'helpers/Utils';\r\nimport { CHANGE_LOCALE } from '../contants';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const changeLocale = (locale) => {\r\n  setCurrentLanguage(locale);\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    payload: locale,\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from \"reactstrap\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport IntlMessages from \"helpers/IntlMessages\";\r\nimport { resetPassword } from \"redux/actions\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { authService } from \"services/authservice\";\r\n\r\nconst validateNewPassword = (values) => {\r\n  const { newPassword, confirmPassword } = values;\r\n  const errors = {};\r\n  if (confirmPassword && newPassword !== confirmPassword) {\r\n    errors.confirmPassword = \"Please check your new password\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst ResetPassword = ({\r\n  // location,\r\n  // history,\r\n  loading,\r\n  error,\r\n  // resetPasswordAction,\r\n  email,\r\n}) => {\r\n  const [newPassword] = useState(\"\");\r\n  const [confirmPassword] = useState(\"\");\r\n  const [resetLoading, setResetLoading] = useState(false);\r\n  // console.log(\"emailv\",email)\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      NotificationManager.warning(\r\n        error,\r\n        \"Forgot Password Error\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n    } else if (!loading && newPassword === \"success\")\r\n      NotificationManager.success(\r\n        \"Please login with your new password.\",\r\n        \"Reset Password Success\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n    // history.push(\"/login\")\r\n  }, [error, loading, newPassword]);\r\n\r\n  // const onResetPassword = (values) => {\r\n  //   if (!loading) {\r\n  //     // const params = new URLSearchParams(location.search);\r\n  //     // const oobCode = params.get('oobCode');\r\n\r\n  //       if (values.newPassword !== '') {\r\n  //       //   resetPasswordAction({\r\n  //       //     newPassword: values.newPassword,\r\n  //       //     confirmPassword: values.confirmPassword,\r\n  //       //     email,\r\n  //       //     // history\r\n  //       //   });\r\n  //       // }\r\n  //       const response = await authService.confirmPasswordReset(\r\n  //         newPassword,\r\n  //           confirmPassword,\r\n  //           email,\r\n  //       ) ;if (response && response.status === 200) {\r\n  //         setIsSubmitted(true)\r\n  //         console.log(\"resetsuccess\")\r\n  //         // history.push('/login');\r\n  //     }\r\n  //      else {\r\n  //       NotificationManager.warning(\r\n  //         'Please check your email url.',\r\n  //         'Reset Password Error',\r\n  //         3000,\r\n  //         null,\r\n  //         null,\r\n  //         ''\r\n  //       );\r\n  //     }\r\n  //   }\r\n  // };\r\n  const onResetPassword = async (values) => {\r\n    setResetLoading(true);\r\n    if (!loading) {\r\n      try {\r\n        if (values.newPassword !== \"\") {\r\n          const response = await authService.confirmPasswordReset({\r\n            newPassword: values.newPassword,\r\n            confirmPassword: values.confirmPassword,\r\n            email,\r\n          });\r\n\r\n          if (response && response.status === 200) {\r\n            // setIsSubmitted(true);\r\n            // console.log(\"Reset success\");\r\n            // history.push(\"/login\");\r\n              response.data.statuses.forEach((status) => {\r\n                NotificationManager.success(\r\n                  status.message,\r\n                  status.status,\r\n                  6000,\r\n                  null,\r\n                  null,\r\n                  \"\"\r\n                );\r\n              });\r\n              history.push(\"/login\");\r\n              setResetLoading(false);\r\n          } else {\r\n            NotificationManager.warning(\r\n              \"Please check your email url.\",\r\n              \"Reset Password Error\",\r\n              3000,\r\n              null,\r\n              null,\r\n              \"\"\r\n            );\r\n          }\r\n        }\r\n      } catch (er) {\r\n        console.error(\"An error occurred during password reset:\", er);\r\n        NotificationManager.error(\r\n          \"An unexpected error occurred.\",\r\n          \"Reset Password Error\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const initialValues = { newPassword, confirmPassword };\r\n\r\n  return (\r\n    <Row className=\"h-100\">\r\n      <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\r\n        <Card className=\"auth-card\">\r\n          <div className=\"position-relative image-side \">\r\n            <p className=\"text-white h2\">MAGIC IS IN THE DETAILS</p>\r\n            <p className=\"white mb-0\">\r\n              Please use your e-mail to reset your password. <br />\r\n              If you are not a member, please{\" \"}\r\n              <NavLink to=\"/register\" className=\"white\">\r\n                register\r\n              </NavLink>\r\n              .\r\n            </p>\r\n          </div>\r\n          <div className=\"form-side\">\r\n            <NavLink to=\"/\" className=\"white\">\r\n              <span className=\"logo-single\" />\r\n            </NavLink>\r\n            <CardTitle className=\"mb-4\">Reset password</CardTitle>\r\n\r\n            <Formik\r\n              validate={validateNewPassword}\r\n              initialValues={initialValues}\r\n              onSubmit={onResetPassword}\r\n            >\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                  <FormGroup className=\"form-group has-float-label\">\r\n                    <Label>New password</Label>\r\n                    <Field\r\n                      className=\"form-control\"\r\n                      name=\"newPassword\"\r\n                      type=\"password\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup className=\"form-group has-float-label\">\r\n                    <Label>Confirm new password</Label>\r\n                    <Field\r\n                      className=\"form-control\"\r\n                      name=\"confirmPassword\"\r\n                      type=\"password\"\r\n                    />\r\n                    {errors.confirmPassword && touched.confirmPassword && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.confirmPassword}\r\n                      </div>\r\n                    )}\r\n                  </FormGroup>\r\n\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <NavLink to=\"/login\">Back to login</NavLink>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        resetLoading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                      size=\"lg\"\r\n                    >\r\n                      <span className=\"spinner d-inline-block\">\r\n                        <span className=\"bounce1\" />\r\n                        <span className=\"bounce2\" />\r\n                        <span className=\"bounce3\" />\r\n                      </span>\r\n                      <span className=\"label\">\r\n                        <IntlMessages id=\"user.reset-password-button\" />\r\n                      </span>\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const { newPassword, resetPasswordCode, loading, error } = authUser;\r\n  return { newPassword, resetPasswordCode, loading, error };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  resetPasswordAction: resetPassword,\r\n})(ResetPassword);\r\n"],"sourceRoot":""}