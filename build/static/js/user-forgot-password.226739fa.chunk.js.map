{"version":3,"sources":["components/common/CustomBootstrap.js","helpers/IntlMessages.js","redux/menu/actions.js","redux/settings/actions.js","../node_modules/reactstrap/es/Input.js","views/user/reset-password.js","views/user/forgot-password.js"],"names":["Colxx","props","_jsx","Col","_objectSpread","widths","injectIntl","FormattedMessage","withRef","changeSelectedMenuHasSubItems","payload","type","MENU_CHANGE_HAS_SUB_ITEM_STATUS","changeDefaultClassnames","strCurrentClasses","MENU_CHANGE_DEFAULT_CLASSES","addContainerClassname","classname","newClasses","indexOf","concat","MENU_CONTAINER_ADD_CLASSNAME","clickOnMobileMenu","currentClasses","split","filter","x","nextClasses","includes","join","MENU_CLICK_MOBILE_MENU","containerClassnames","menuClickCount","setContainerClassnames","clickIndex","selectedMenuHasSubItems","MENU_SET_CLASSNAMES","changeLocale","locale","setCurrentLanguage","CHANGE_LOCALE","_excluded","propTypes","children","PropTypes","node","string","size","oneOfType","number","bsSize","valid","bool","invalid","tag","tagPropType","innerRef","object","func","plaintext","addon","className","cssModule","Input","_React$Component","_this","call","this","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","ref","render","_this$props","attributes","_objectWithoutPropertiesLoose","checkInput","isNotaNumber","RegExp","Tag","formControlClass","test","warnOnce","classes","mapToCssModules","classNames","React","createElement","_extends","Component","defaultProps","validateNewPassword","values","newPassword","confirmPassword","errors","connect","_ref3","authUser","resetPasswordCode","loading","error","resetPasswordAction","resetPassword","_ref","email","useState","resetLoading","setResetLoading","history","useHistory","useEffect","NotificationManager","warning","success","initialValues","Row","xxs","md","_jsxs","Card","NavLink","to","CardTitle","Formik","validate","onSubmit","async","response","authService","confirmPasswordReset","status","data","statuses","forEach","message","push","er","console","_ref2","touched","Form","FormGroup","Label","Field","name","Button","color","IntlMessages","id","validateEmail","value","forgotUserMail","forgotPasswordAction","forgotPassword","setEmail","otp","setOtp","isSubmitted","setIsSubmitted","otpLoading","setOtpLoading","otpSubmitted","setOtpSubmitted","ResetPassword","sendPasswordResetEmail","onChange","e","target","onClick","url","baseUrl","axios","post","setTimeout"],"mappings":"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","file":"static/js/user-forgot-password.226739fa.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col } from 'reactstrap';\r\n\r\nconst Colxx = (props) => (\r\n  <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = ({ className }) => (\r\n  <div className={`separator ${className}`} />\r\n);\r\nexport { Colxx, Separator };\r\n","import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nconst InjectMassage = (props) => <FormattedMessage {...props} />;\r\n\r\nexport default injectIntl(InjectMassage, {\r\n  withRef: false,\r\n});\r\n","/* eslint-disable no-param-reassign */\r\nimport {\r\n  MENU_SET_CLASSNAMES,\r\n  MENU_CONTAINER_ADD_CLASSNAME,\r\n  MENU_CLICK_MOBILE_MENU,\r\n  MENU_CHANGE_DEFAULT_CLASSES,\r\n  MENU_CHANGE_HAS_SUB_ITEM_STATUS,\r\n} from '../contants';\r\n\r\nexport const changeSelectedMenuHasSubItems = (payload) => {\r\n  return {\r\n    type: MENU_CHANGE_HAS_SUB_ITEM_STATUS,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const changeDefaultClassnames = (strCurrentClasses) => {\r\n  return {\r\n    type: MENU_CHANGE_DEFAULT_CLASSES,\r\n    payload: strCurrentClasses,\r\n  };\r\n};\r\n\r\nexport const addContainerClassname = (classname, strCurrentClasses) => {\r\n  const newClasses =\r\n    !strCurrentClasses.indexOf(classname) > -1\r\n      ? `${strCurrentClasses} ${classname}`\r\n      : strCurrentClasses;\r\n  return {\r\n    type: MENU_CONTAINER_ADD_CLASSNAME,\r\n    payload: newClasses,\r\n  };\r\n};\r\n\r\nexport const clickOnMobileMenu = (strCurrentClasses) => {\r\n  const currentClasses = strCurrentClasses\r\n    ? strCurrentClasses\r\n        .split(' ')\r\n        .filter((x) => x !== '' && x !== 'sub-show-temporary')\r\n    : '';\r\n  let nextClasses = '';\r\n  if (currentClasses.includes('main-show-temporary')) {\r\n    nextClasses = currentClasses\r\n      .filter((x) => x !== 'main-show-temporary')\r\n      .join(' ');\r\n  } else {\r\n    nextClasses = `${currentClasses.join(' ')} main-show-temporary`;\r\n  }\r\n  return {\r\n    type: MENU_CLICK_MOBILE_MENU,\r\n    payload: { containerClassnames: nextClasses, menuClickCount: 0 },\r\n  };\r\n};\r\n\r\nexport const setContainerClassnames = (\r\n  clickIndex,\r\n  strCurrentClasses,\r\n  selectedMenuHasSubItems\r\n) => {\r\n  const currentClasses = strCurrentClasses\r\n    ? strCurrentClasses.split(' ').filter((x) => x !== '')\r\n    : '';\r\n  let nextClasses = '';\r\n  if (!selectedMenuHasSubItems) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      (clickIndex % 4 === 0 || clickIndex % 4 === 3)\r\n    ) {\r\n      clickIndex = 1;\r\n    }\r\n    if (currentClasses.includes('menu-sub-hidden') && clickIndex % 4 === 2) {\r\n      clickIndex = 0;\r\n    }\r\n    if (\r\n      currentClasses.includes('menu-hidden') &&\r\n      (clickIndex % 4 === 2 || clickIndex % 4 === 3)\r\n    ) {\r\n      clickIndex = 0;\r\n    }\r\n  }\r\n\r\n  if (clickIndex % 4 === 0) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden';\r\n    }\r\n    clickIndex = 0;\r\n  } else if (clickIndex % 4 === 1) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden main-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default sub-hidden';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden main-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden main-show-temporary';\r\n    }\r\n  } else if (clickIndex % 4 === 2) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default main-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden main-show-temporary sub-show-temporary';\r\n    }\r\n  } else if (clickIndex % 4 === 3) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden sub-show-temporary';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default sub-hidden';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden sub-show-temporary';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden main-show-temporary';\r\n    }\r\n  }\r\n  if (currentClasses.includes('menu-mobile')) {\r\n    nextClasses += ' menu-mobile';\r\n  }\r\n  return {\r\n    type: MENU_SET_CLASSNAMES,\r\n    payload: { containerClassnames: nextClasses, menuClickCount: clickIndex },\r\n  };\r\n};\r\n","import { setCurrentLanguage } from 'helpers/Utils';\r\nimport { CHANGE_LOCALE } from '../contants';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const changeLocale = (locale) => {\r\n  setCurrentLanguage(locale);\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    payload: locale,\r\n  };\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"];\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from \"reactstrap\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport IntlMessages from \"helpers/IntlMessages\";\r\nimport { resetPassword } from \"redux/actions\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { authService } from \"services/authservice\";\r\n\r\nconst validateNewPassword = (values) => {\r\n  const { newPassword, confirmPassword } = values;\r\n  const errors = {};\r\n  if (confirmPassword && newPassword !== confirmPassword) {\r\n    errors.confirmPassword = \"Please check your new password\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst ResetPassword = ({\r\n  // location,\r\n  // history,\r\n  loading,\r\n  error,\r\n  // resetPasswordAction,\r\n  email,\r\n}) => {\r\n  const [newPassword] = useState(\"\");\r\n  const [confirmPassword] = useState(\"\");\r\n  const [resetLoading, setResetLoading] = useState(false);\r\n  // console.log(\"emailv\",email)\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      NotificationManager.warning(\r\n        error,\r\n        \"Forgot Password Error\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n    } else if (!loading && newPassword === \"success\")\r\n      NotificationManager.success(\r\n        \"Please login with your new password.\",\r\n        \"Reset Password Success\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n    // history.push(\"/login\")\r\n  }, [error, loading, newPassword]);\r\n\r\n  // const onResetPassword = (values) => {\r\n  //   if (!loading) {\r\n  //     // const params = new URLSearchParams(location.search);\r\n  //     // const oobCode = params.get('oobCode');\r\n\r\n  //       if (values.newPassword !== '') {\r\n  //       //   resetPasswordAction({\r\n  //       //     newPassword: values.newPassword,\r\n  //       //     confirmPassword: values.confirmPassword,\r\n  //       //     email,\r\n  //       //     // history\r\n  //       //   });\r\n  //       // }\r\n  //       const response = await authService.confirmPasswordReset(\r\n  //         newPassword,\r\n  //           confirmPassword,\r\n  //           email,\r\n  //       ) ;if (response && response.status === 200) {\r\n  //         setIsSubmitted(true)\r\n  //         console.log(\"resetsuccess\")\r\n  //         // history.push('/login');\r\n  //     }\r\n  //      else {\r\n  //       NotificationManager.warning(\r\n  //         'Please check your email url.',\r\n  //         'Reset Password Error',\r\n  //         3000,\r\n  //         null,\r\n  //         null,\r\n  //         ''\r\n  //       );\r\n  //     }\r\n  //   }\r\n  // };\r\n  const onResetPassword = async (values) => {\r\n    setResetLoading(true);\r\n    if (!loading) {\r\n      try {\r\n        if (values.newPassword !== \"\") {\r\n          const response = await authService.confirmPasswordReset({\r\n            newPassword: values.newPassword,\r\n            confirmPassword: values.confirmPassword,\r\n            email,\r\n          });\r\n\r\n          if (response && response.status === 200) {\r\n            // setIsSubmitted(true);\r\n            // console.log(\"Reset success\");\r\n            // history.push(\"/login\");\r\n              response.data.statuses.forEach((status) => {\r\n                NotificationManager.success(\r\n                  status.message,\r\n                  status.status,\r\n                  6000,\r\n                  null,\r\n                  null,\r\n                  \"\"\r\n                );\r\n              });\r\n              history.push(\"/login\");\r\n              setResetLoading(false);\r\n          } else {\r\n            NotificationManager.warning(\r\n              \"Please check your email url.\",\r\n              \"Reset Password Error\",\r\n              3000,\r\n              null,\r\n              null,\r\n              \"\"\r\n            );\r\n          }\r\n        }\r\n      } catch (er) {\r\n        console.error(\"An error occurred during password reset:\", er);\r\n        NotificationManager.error(\r\n          \"An unexpected error occurred.\",\r\n          \"Reset Password Error\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const initialValues = { newPassword, confirmPassword };\r\n\r\n  return (\r\n    <Row className=\"h-100\">\r\n      <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\r\n        <Card className=\"auth-card\">\r\n          <div className=\"position-relative image-side \">\r\n            <p className=\"text-white h2\">MAGIC IS IN THE DETAILS</p>\r\n            <p className=\"white mb-0\">\r\n              Please use your e-mail to reset your password. <br />\r\n              If you are not a member, please{\" \"}\r\n              <NavLink to=\"/register\" className=\"white\">\r\n                register\r\n              </NavLink>\r\n              .\r\n            </p>\r\n          </div>\r\n          <div className=\"form-side\">\r\n            <NavLink to=\"/\" className=\"white\">\r\n              <span className=\"logo-single\" />\r\n            </NavLink>\r\n            <CardTitle className=\"mb-4\">Reset password</CardTitle>\r\n\r\n            <Formik\r\n              validate={validateNewPassword}\r\n              initialValues={initialValues}\r\n              onSubmit={onResetPassword}\r\n            >\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                  <FormGroup className=\"form-group has-float-label\">\r\n                    <Label>New password</Label>\r\n                    <Field\r\n                      className=\"form-control\"\r\n                      name=\"newPassword\"\r\n                      type=\"password\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup className=\"form-group has-float-label\">\r\n                    <Label>Confirm new password</Label>\r\n                    <Field\r\n                      className=\"form-control\"\r\n                      name=\"confirmPassword\"\r\n                      type=\"password\"\r\n                    />\r\n                    {errors.confirmPassword && touched.confirmPassword && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.confirmPassword}\r\n                      </div>\r\n                    )}\r\n                  </FormGroup>\r\n\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <NavLink to=\"/login\">Back to login</NavLink>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        resetLoading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                      size=\"lg\"\r\n                    >\r\n                      <span className=\"spinner d-inline-block\">\r\n                        <span className=\"bounce1\" />\r\n                        <span className=\"bounce2\" />\r\n                        <span className=\"bounce3\" />\r\n                      </span>\r\n                      <span className=\"label\">\r\n                        <IntlMessages id=\"user.reset-password-button\" />\r\n                      </span>\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const { newPassword, resetPasswordCode, loading, error } = authUser;\r\n  return { newPassword, resetPasswordCode, loading, error };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  resetPasswordAction: resetPassword,\r\n})(ResetPassword);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardTitle,\r\n  Label,\r\n  FormGroup,\r\n  Button,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport IntlMessages from \"helpers/IntlMessages\";\r\nimport { forgotPassword } from \"redux/actions\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { authService } from \"services/authservice\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport ResetPassword from \"./reset-password\";\r\n\r\nconst validateEmail = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter your email address\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n    error = \"Invalid email address\";\r\n  }\r\n  return error;\r\n};\r\n\r\nconst ForgotPassword = ({\r\n  // history,\r\n  // forgotUserMail,\r\n  loading,\r\n  // error,\r\n  // forgotPasswordAction,\r\n}) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [otp, setOtp] = useState(0);\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  // const [isFormSubmitted, setIsFormSubmitted] = useState(false);\r\n  const [otpLoading, setOtpLoading] = useState(false);\r\n  const [otpSubmitted, setOtpSubmitted] = useState(false);\r\n\r\n  const onForgotPassword = async (values) => {\r\n    if (!loading) {\r\n      setEmail(values.email);\r\n      if (values.email !== \"\") {\r\n        // setIsFormSubmitted(true);\r\n        // forgotPasswordAction(values.email, history);\r\n        const response = await authService.sendPasswordResetEmail(\r\n           values.email\r\n        );\r\n        if (response && response.status === 200) {\r\n          setIsSubmitted(true);\r\n          // setIsFormSubmitted(false);\r\n        } else {\r\n          console.error(\"forgot email post Failed:\", response);\r\n          // setIsFormSubmitted(false);\r\n          response.data.statuses.forEach((status) => {\r\n            NotificationManager.warning(status.message, status.status, 5000, null, null, '');\r\n        });\r\n          \r\n        }\r\n      } \r\n      }\r\n    \r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (isFormSubmitted) {\r\n  //     if (error) {\r\n        // NotificationManager.warning(\r\n        //   error,\r\n        //   \"Forgot Password Error\",\r\n        //   3000,\r\n        //   null,\r\n        //   null,\r\n        //   \"\"\r\n        // );\r\n      //   setIsFormSubmitted(false);\r\n      // } else if (!loading && forgotUserMail === \"success\") {\r\n        // NotificationManager.success(\r\n        //   \"Please check your email.\",\r\n        //   \"Forgot Password Success\",\r\n        //   3000,\r\n        //   null,\r\n        //   null,\r\n        //   \"\"\r\n        // );\r\n  //       setIsSubmitted(true);\r\n  //       setIsFormSubmitted(false);\r\n  //     }\r\n  //   }\r\n  // }, [error, forgotUserMail, loading, isFormSubmitted]);\r\n\r\n  const handleOtpSend = async () => {\r\n    setOtpLoading(true);\r\n    try {\r\n      const data = { email, otp };\r\n      const url = `${baseUrl}/api/verifyotp`;\r\n      const response = await axios.post(url, data);\r\n      if (response.data.statuses[0].status === \"success\") {\r\n          setOtpSubmitted(true);\r\n          setOtpLoading(false);\r\n          response.data.statuses.forEach((status) => {\r\n            NotificationManager.success(\r\n              status.message,\r\n              status.status,\r\n              6000,\r\n              null,\r\n              null,\r\n              \"\"\r\n            );\r\n          });\r\n      }\r\n    } catch (er) {\r\n      console.error(\r\n        \"Error Submitting OTP:\",\r\n        er.response ? er.response.data : er.message\r\n      );\r\n\r\n      setTimeout(() => {\r\n        NotificationManager.warning(\r\n          \"Error Submitting OTP\",\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n        setOtpLoading(false);\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const initialValues = { email };\r\n\r\n  return !otpSubmitted ? (\r\n    <Row className=\"h-100\">\r\n      <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\r\n        <Card className=\"auth-card\">\r\n          <div className=\"position-relative image-side\">\r\n            <p className=\"text-white h2\">MAGIC IS IN THE DETAILS</p>\r\n            <p className=\"white mb-0\">\r\n              Please use your e-mail to reset your password. <br />\r\n              If you are not a member, please{\" \"}\r\n              <NavLink to=\"/user/register\" className=\"white\">\r\n                register\r\n              </NavLink>\r\n              .\r\n            </p>\r\n          </div>\r\n          <div className=\"form-side\">\r\n            <NavLink to=\"/\" className=\"white\">\r\n              <span className=\"logo-single\" />\r\n            </NavLink>\r\n            <CardTitle className=\"mb-4\">\r\n              <IntlMessages id=\"user.forgot-password\" />\r\n            </CardTitle>\r\n\r\n            <Formik initialValues={initialValues} onSubmit={onForgotPassword}>\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                  <FormGroup className=\"form-group has-float-label\">\r\n                    <Label>\r\n                      <IntlMessages id=\"user.email\" />\r\n                    </Label>\r\n                    <Field\r\n                      className=\"form-control\"\r\n                      name=\"email\"\r\n                      validate={validateEmail}\r\n                    />\r\n                    {errors.email && touched.email && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.email}\r\n                      </div>\r\n                    )}\r\n                  </FormGroup>\r\n                  {!isSubmitted && (\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                      <NavLink to=\"/login\">Back to login</NavLink>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          loading ? \"show-spinner\" : \"\"\r\n                        }`}\r\n                        size=\"lg\"\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">Submit</span>\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n\r\n            {isSubmitted && (\r\n              <FormGroup className=\"form-group has-float-label mt-4\">\r\n                <Label>Enter OTP</Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  name=\"otp\"\r\n                  type=\"number\"\r\n                  onChange={(e) => setOtp(e.target.value)}\r\n                />\r\n                <div className=\"text-right\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    className={`mt-3 btn-shadow btn-multiple-state ${\r\n                      otpLoading ? \"show-spinner\" : \"\"\r\n                    }`}\r\n                    size=\"lg\"\r\n                    onClick={handleOtpSend}\r\n                  >\r\n                    <span className=\"spinner d-inline-block\">\r\n                      <span className=\"bounce1\" />\r\n                      <span className=\"bounce2\" />\r\n                      <span className=\"bounce3\" />\r\n                    </span>\r\n                    <span className=\"label\">Submit OTP</span>\r\n                  </Button>\r\n                </div>\r\n              </FormGroup>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  ) : (\r\n    <ResetPassword email={email} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const { forgotUserMail, loading, error } = authUser;\r\n  return { forgotUserMail, loading, error };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  forgotPasswordAction: forgotPassword,\r\n})(ForgotPassword);\r\n"],"sourceRoot":""}