{"version":3,"sources":["components/common/CustomBootstrap.js","views/app/myapp/notifications/ToasterComponent.js","components/cards/ThumbnailLetters.js","views/app/myapp/Calculation/TimestampConverter.js","containers/pages/Pagination.js","helpers/IntlMessages.js","views/app/myapp/my-login/Country.js","redux/menu/actions.js","redux/settings/actions.js","views/app/myapp/Listing/ListingData.js","views/app/myapp/my-login/Languages.js","views/app/myapp/CommonCardList/IdentityStatusList.js","components/common/Rating.js","components/common/CustomSelectInput.js","views/app/myapp/AlumniRegister/validation.js","views/app/myapp/Chat/ThumbnailLetters.js","components/common/SliderTooltips.js","components/carousel/GlideComponent.js","views/app/myapp/mentorship/MentorFilter.js","views/app/myapp/Reviews/ReviewsComponent.js","views/app/myapp/BigCalendar/DateRangePicker.js","views/app/myapp/AlumniRegister/Languages.js","views/app/myapp/AlumniRegister/DomainList.js","views/app/myapp/mentorship/MentorTabCard.js","components/wizard/TopNavigation.js","views/app/myapp/my-login/validation.js","views/app/myapp/AlumniRegister/Country.js","views/app/myapp/Listing/JobPosting.js","views/app/myapp/Listing/OtherPosting.js","views/app/myapp/Listing/StayPosting.js","containers/pages/DataListView-personal.js","services/services.js","views/app/myapp/my-details/data/educationalInformation-data.js","views/app/myapp/my-details/input/educationalInformation-input.js","views/app/myapp/my-details/educational-information.js","views/app/myapp/my-details/data/personalInformation-data.js","views/app/myapp/my-details/input/personalInformation-input.js","views/app/myapp/my-details/personal-information.js","views/app/myapp/my-details/data/professionalInformation-data.js","views/app/myapp/my-details/input/professionalInformation-input.js","views/app/myapp/my-details/professional-information.js","views/app/myapp/my-details/my-details.js","views/app/myapp/my-documents/data/admission-documents-data.js","views/app/myapp/my-documents/upload-data.js","views/app/myapp/my-documents/admission-documents.js","views/app/myapp/my-documents/data/financial-documents-data.js","views/app/myapp/my-documents/financial-documents.js","views/app/myapp/my-documents/data/supporting-documents-data.js","views/app/myapp/my-documents/supporting-documents.js","views/app/myapp/my-documents/my-documents.js","views/app/myapp/my-applications/show-allUser-application.js","views/app/myapp/my-applications/select-college-modal.js","views/app/myapp/my-applications/my-applications.js","views/app/myapp/my-applications/applications-data.js","views/app/myapp/DashBoard/DashBoard.js","views/app/myapp/mentorship/mentorcard.js","views/app/myapp/mentorship/MentorProfile.js","views/app/myapp/mentorship/MentorAnswers.js","views/app/myapp/mentorship/MentorConsult.js","views/app/myapp/mentorship/MentorCreatedSlot.js","views/app/myapp/mentorship/FilterQuestions.js","views/app/myapp/mentorship/AskQuestion.js","views/app/myapp/mentorship/myQandA.js","views/app/myapp/BigCalendar/MentorSessionList.js","views/app/myapp/mentorship/MentorSessionUpcoming.js","views/app/myapp/my-profile/MyProfile.js","views/app/myapp/my-wallet/MyWallet.js","views/app/myapp/Listing/ViewOtherListing.js","views/app/myapp/Listing/ViewJobListing.js","views/app/myapp/Listing/ViewStayListing.js","views/app/myapp/Lawyer/LawQuestionAnswer.js","views/app/myapp/Lawyer/JobList.js","views/app/myapp/Lawyer/LawyerJobList.js","views/app/myapp/Lawyer/AddReview.js","views/app/myapp/VideoCall/VideoCallCompletedPage.js","views/app/myapp/Classroom/AgoraClass.js","views/app/myapp/Lawyer/LawyerMyProfile.js","views/app/myapp/Mentee/MenteeMyProfile.js","views/app/myapp/Mentee/MenteeProfile.js","views/app/myapp/Mentee/StudentList.js","views/app/myapp/Mentee/StudentViewProfile.js","views/app/myapp/Alumni/AlumniMyProfile.js","views/app/myapp/Alumni/AlumniCalendar.js","views/app/myapp/Alumni/AlumniSessionLists.js","views/app/myapp/Mentee/ApplyAsUser.js","views/app/myapp/Settings/Settings.js","views/app/myapp/Alumni/AlumniLists.js","views/app/myapp/Alumni/AlumniProfile.js","containers/navs/Footer.js","constants/menu.js","containers/navs/Sidebar.js","components/svg/MenuIcon.js","components/svg/MobileMenuIcon.js","containers/navs/Topnav.DarkSwitch.js","containers/navs/Topnav.Notifications.js","containers/navs/Topnav.js","layout/AppLayout.js","views/app/index.js","views/app/myapp/Listing/All.js","views/app/myapp/Listing/JobListing.js","views/app/myapp/notifications/DesktopNotifications.js","views/app/myapp/Listing/OtherListing.js","views/app/myapp/Listing/StayListing.js","views/app/myapp/Listing/Listing.js","views/app/myapp/VideoCall/RTCVideoCall/settings.js","views/app/myapp/VideoCall/RTCVideoCall/Controls.js","views/app/myapp/VideoCall/RTCVideoCall/Video.js","views/app/myapp/VideoCall/RTCVideoCall/VideoCallCtrl.js","views/app/myapp/VideoCall/RTCVideoCall/VideoCall.js","components/applications/SaySomething.js","components/common/ApplicationMenu.js","views/app/myapp/Chat/ChatHeading.js","views/app/myapp/Chat/Chat.js","views/app/myapp/AlumniRegister/ApplyAsAlumniAbout.js","views/app/myapp/AlumniRegister/ApplyAsAlumniExperience.js","views/app/myapp/AlumniRegister/ApplyAsAlumniProfile.js","views/app/myapp/AlumniRegister/ApplyAlumni.js","views/app/myapp/HumanResource/HRRegistration/ApplyAsHrAbout.js","views/app/myapp/HumanResource/HRRegistration/ApplyAsHrExperience.js","views/app/myapp/HumanResource/HRRegistration/ApplyAsHrProfile.js","views/app/myapp/HumanResource/HRRegistration/ApplyHR.js","views/app/myapp/Listing/MyJobListing.js","views/app/myapp/Listing/MyOtherListing.js","views/app/myapp/Listing/MyStayListing.js","views/app/myapp/Listing/MyListing.js","views/app/myapp/RealEstateAgent/RealEstateAgentRegistration/RealEstateAgentAbout.js","views/app/myapp/RealEstateAgent/RealEstateAgentRegistration/RealEstateAgentExperience.js","views/app/myapp/RealEstateAgent/RealEstateAgentRegistration/RealEstateAgentProfile.js","views/app/myapp/RealEstateAgent/RealEstateAgentRegistration/RealEstateAgentApply.js","views/app/myapp/my-login/BottomNavigation.js","views/app/myapp/BigCalendar/PopupWizard.js","views/app/myapp/BigCalendar/Month.js","views/app/myapp/Notes/LawyerJobNotes.js","views/app/myapp/Lawyer/UploadDropZone.js","views/app/myapp/Lawyer/JobDetails.js","views/app/myapp/notifications/show-notifications.js","views/app/myapp/index.js","views/app/myapp/my-login/CategoryData.js","views/app/myapp/my-login/ApplyMentor.js","views/app/myapp/lawyer-login/ValidationsPart.js","views/app/myapp/lawyer-login/ApplyAsLawyer.js","views/app/myapp/Lawyer/LawyerCardFilter.js","views/app/myapp/Lawyer/UserCard.js","views/app/myapp/Lawyer/LawyerTabCard.js","views/app/myapp/Lawyer/LawyerProfile.js","views/app/myapp/Lawyer/BottomNavigationWizard.js","views/app/myapp/Lawyer/PaymentWizard.js"],"names":["Colxx","props","_jsx","Col","widths","ToasterComponent","type","messages","title","arguments","length","undefined","duration","forEach","message","NotificationManager","success","status","warning","error","info","ThumbnailLetters","_ref","text","color","className","rounded","small","letters","indexOf","split","map","word","slice","classnames","children","React","memo","TimestampConverter","timeStamp","format","formattedDateTime","formatDateTime","time","Date","parseInt","Hours","String","getHours","padStart","Minutes","getMinutes","Period","Month","getMonth","Day","getDate","Year","getFullYear","getDayWithSuffix","day","_jsxs","_Fragment","isToday","today","isYesterday","yesterday","setDate","Pagination","totalPage","currentPage","numberLimit","lastIsActive","firstIsActive","onChangePage","startPoint","endPoint","points","i","push","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","xxs","Nav","NavItem","NavLink","onClick","injectIntl","FormattedMessage","withRef","country","changeSelectedMenuHasSubItems","payload","MENU_CHANGE_HAS_SUB_ITEM_STATUS","changeDefaultClassnames","strCurrentClasses","MENU_CHANGE_DEFAULT_CLASSES","addContainerClassname","classname","newClasses","MENU_CONTAINER_ADD_CLASSNAME","clickOnMobileMenu","currentClasses","filter","x","nextClasses","includes","join","MENU_CLICK_MOBILE_MENU","containerClassnames","menuClickCount","setContainerClassnames","clickIndex","selectedMenuHasSubItems","MENU_SET_CLASSNAMES","changeLocale","locale","setCurrentLanguage","CHANGE_LOCALE","ApartmentTypeData","label","value","BHKData","FloorData","RoomTypeData","WorkPlaceTypeData","EmploymentTypeData","RoomMateType","parkingOptions","language","indentityStatusList","Star","starProps","nameMap","isDisabled","isActive","isActiveHalf","willBeActive","Object","keys","prop","defaultProps","Rating","Rater","CustomSelectInput","customProps","autoCorrect","autoCapitalize","components","Input","validateLocation","validateDomain","validateIdentityStatus","validateBio","extraSmall","appliedStyles","width","height","fontSize","padding","style","sliderHandle","dragging","index","offset","restProps","positionStyle","position","left","Slider","Handle","SliderTooltip","handle","RangeTooltip","Range","resizeTimeOut","mountTimeOut","GlideComponent","carousel","glideCarousel","onResize","clearTimeout","setTimeout","update","useEffect","Glide","settings","direction","getDirection","mount","on","event","document","createEvent","initEvent","window","dispatchEvent","destroy","ref","node","hideNav","renderDots","total","Children","count","dots","MentorFilter","_country$find","_country$find2","_DomainList$find","onSkillsChange","onToolsChange","onIndustryChange","onUniversityChange","onPriceChange","onLocationChange","onDomainChange","selectedSkills","selectedLocation","selectedIndustry","selectedUniversity","selectedTools","userRole","dropdownBasicOpen","setDropdownBasicOpen","useState","dropdownBasicOpen1","setDropdownBasicOpen1","dropdownBasicOpen2","setDropdownBasicOpen2","dropdownBasicOpen3","setDropdownBasicOpen3","dropdownBasicOpen4","setDropdownBasicOpen4","dropdownBasicOpen5","setDropdownBasicOpen5","dropdownBasicOpen6","setDropdownBasicOpen6","priceRange","setPriceRange","selectedDomain","setSelectedDomain","getApiEndpoint","endpointType","baseUrl","Error","handleSkillSelect","skill","handleToolSelect","tool","handleIndustrySelect","industry","handleUniversitySelect","university","handleLocationSelect","location","handleDomainSelect","domain","handleAfterChange","useCallback","finalRange","searchText","setSearchText","searchText1","setSearchText1","searchCompanies","setSearchCompanies","searchUniversities","setSearchUniversities","searchTools","setSearchTools","searchSkills","setSearchSkills","filteredCountry","setFilteredCountry","filteredDomain","setFilteredDomain","DomainList","viewFilters","setViewFilters","skillsData","setSkillsData","companyData","setCompanyData","universityData","setUniversityData","toolsData","setToolsData","paginationMeta","setPaginationMeta","companyPaginationMeta","setCompanyPaginationMeta","universityPaginationMeta","setUniversityPaginationMeta","toolsPaginationMeta","setToolsPaginationMeta","size","setSize","companySize","setCompanySize","universitySize","setUniversitySize","toolsSize","setToolsSize","skillsFetched","setSkillsFetched","toolsFetched","setToolsFetched","companiesFetched","setCompaniesFetched","universityFetched","setUniversitiesFetched","isMobile","setIsMobile","checkIfMobile","innerWidth","addEventListener","removeEventListener","async","params","page","response","axios","get","data","console","FetchSkills","company","FetchCompanies","FetchUniversities","FetchTools","Row","sm","md","lg","Button","outline","handleViewFilters","right","top","transform","Dropdown","isOpen","toggle","DropdownToggle","caret","DropdownMenu","placeholder","onChange","target","PerfectScrollbar","maxHeight","options","suppressScrollX","wheelPropagation","DropdownItem","Card","c","last","cursor","handleUniversityLoadMore","s","handleLoadMore","t","handleToolsLoadMore","handleCompanyLoadMore","min","max","defaultValue","allowCross","pushable","step","onAfterChange","find","iso_code","name","newText","toLowerCase","ReviewsComponent","revieweeId","category","averageStar","setAverageStar","totalRatings","setTotalRatings","totalFeedBack","setTotalFeedBack","reviews","setReviews","starRatings","setStarRatings","oneStar","twoStar","threeStar","fourStar","fiveStar","metaRatingUrl","ratingUrl","reviewData","ReviewDetails","fetchData","calculatePercentage","starCount","xl","CardBody","rating","interactive","Progress","barStyle","backgroundColor","rv","href","reviewerId","imageUrl","src","alt","objectFit","to","dangerouslySetInnerHTML","__html","feedBack","star","selectedDate","setSelectedDate","DatePicker","selected","date","MentorTabCard","handleConnectClick","chatUserId","price","activeFirstTab","setActiveFirstTab","role","localStorage","getItem","history","useHistory","xs","CardHeader","tabs","active","TabContent","activeTab","TabPane","tabId","CardTitle","Math","floor","toLocaleString","handleChatClick","adminRoot","TopNavigation","disableNav","topNavClick","getClassName","steps","stepItem","isDone","WithWizard","render","_ref2","next","previous","go","hideTopNav","itemClick","desc","validateCategory","validateStudent","validateCompany","validateJobTitle","validateLinkedinUrl","test","validateReasonForMentor","validateAchievement","quillModules","toolbar","list","indent","quillFormats","JobPosting","closeModal","initialData","onEdit","id","jobTitle","workPlaceType","workPlaceTypeValue","jobLocation","employmentType","employmentTypeValue","identityStatus","description","skillsTag","skills","isLoading","setIsLoading","selectedFile2","setSelectedFile2","url","token","handleFileChange2","file","files","maxWidth","Formik","initialValues","validate","values","errors","trim","onSubmit","setSubmitting","formData","FormData","append","Blob","JSON","stringify","post","headers","Authorization","statuses","_ref3","isValid","touched","setFieldValue","handleSubmit","setFieldTouched","Form","FormGroup","Label","Field","_ref4","alphabeticValue","replace","required","e","as","disabled","option","TagsInput","tags","addOnBlur","addKeys","InputGroup","getElementById","click","ReactQuill","theme","val","onBlur","modules","formats","OtherPosting","job","_ref5","StayPosting","availableFrom","setAvailableFrom","getTime","monthlyMaintenance","setMonthlyMaintenance","maintenanceAmount","setMaintenanceAmount","handleDateChange","timestampInMilliseconds","selectedFiles","setSelectedFiles","BHKType","bhkTypeValue","floorValue","apartmentType","apartmentTypeValue","roomType","roomTypeValue","roomMate","roomMateValue","expectedRent","expectedDeposit","email","ownerName","mobileNumber","parking","parkingValue","stayCategory","parkingCount","bhkType","log","InputGroupAddon","addonType","owenerName","multiple","DataListViewpersonal","product","onCheckItem","ContextMenuTrigger","boxShadow","paddingLeft","getEducationalInformation","then","res","catch","postEducationalInformation","body","getPersonalInformation","postPersonalInformation","getProfessionalInformation","postProfessionalInformation","educationalInformationData","statusColor","bachelorDgDomainCourseOptions","InputEducationalInformation","setData","TwelfthPercentage","TenthPercentage","TwelfthGroup","BachelorDegreeName","BachelorDegreeDomainCourse","BachelorPercentage","Backlogs","open","setOpen","toggleModalFunction","oldValue","handleChange","prevValue","margin","Modal","centered","display","justifyContent","ModalHeader","alignSelf","ModalBody","inline","course","ModalFooter","EducationalInformation","setToggle","marginRight","Collapse","flexWrap","flex","DataListViewPersonal","isSelect","collect","personalInformationData","InputPersonalInformation","firstName","lastName","Gender","Age","dateOfBirth","addressLane1","addressLane2","zipCode","state","adhaarNumber","scrollable","PersonalInformation","professionalInformationData","InputProfessionalInformation","Organization","Role","StartDate","EndDate","TerminationReason","ProfessinalInformation","MyDetails","AdmissionDocumentsData","UploadData","MenuOptions","dropDownValue","setDropDownValue","dropDowsState","setDropDownState","handleUploadData","ButtonDropdown","innerHTML","AdmissionDocuments","justifySelf","marginTop","FinancialDocumetsData","FinancialDocumets","classNames","SupportingDocumentsData","SupportingDocuments","MyDocuments","AllUserApplications","userType","currentItem","expand","onSetToggle","handleClickScroll","element","scrollIntoView","behavior","Container","collegeName","createdAt","Table","applnEventLogs","subItem","eventName","updatedAt","applnMsgLogs","Fragment","senderName","created_at","borderColor","SelectCollegeModal","InputGroupButtonDropdown","MyApplications","selectedElement","item","DashBoard","_currentJobList$image","modalBasic","setModalBasic","currentSessionIndex","setCurrentSessionIndex","currentMentorIndex","setCurrentMentorIndex","currentLawyerIndex","setCurrentLawyerIndex","currentAlumniIndex","setCurrentAlumniIndex","currentJobIndex","setCurrentJobIndex","currentStayIndex","setCurrentStayIndex","currentBatchMateIndex","setCurrentBatchMateIndex","walletBalance","setWalletBalance","profileStatus","setProfileStatus","recentSessions","setRecentSessions","mentors","setMentors","experience","lawyers","setLawyers","services","languages","alumni","setAlumni","experienceYears","newSession","setNewSession","chatStatus","fromTimeStamp","toTimeStamp","mentorUserId","mode","recentChats","setRecentChats","dashboardQuestions","setDashboardQuestions","jobList","setJobList","stayList","setStaylist","batchMates","setBatchMates","inputkey","setInputKey","selectedCategory","setSelectedCategory","pathname","walletUrl","profileStatusUrl","mentorsUrl","sessionsUrl","lawyersUrl","batchUrl","alumniUrl","newSessionUrl","recentChatsDataUrl","questionsUrl","joblistUrl","staylistUrl","fetchProfileStatus","balance","fetchWalletBalance","fetchRecentSessions","fetchMentors","fetchBatchMates","fetchLawyers","fetchAlumni","fetchNewsession","fetchRecentChats","fetchLatestQuestions","fetchJobList","fetchStayList","currentSession","currentMentor","currentLawyer","currentAlumni","currentJobList","currentStayList","currentBatchMate","interval","setInterval","prevIndex","clearInterval","formatDate","timestamp","zIndex","Select","classNamePrefix","key","background","handleProfileClick","borderRadius","alignItems","minWidth","minHeight","border","percentage","handleWalletClick","handlePrevious","textDecoration","handleNext","TransitionGroup","CSSTransition","timeout","handleViewMentors","handleMentorPrevious","overflow","handleMentorNext","CardText","renderMentorsDots","handleViewLawyers","handleLawyerPrevious","handleLawyerNext","lang","_language$find","l","renderLawyerDots","handleViewAlumnis","handleAlumniPrevious","handleAlumniNext","renderAlumniDots","CardImg","images","interestedCount","renderStayListDots","image","postedOn","renderJobListDots","gap","perView","items","questionHeading","questionHeadingBrief","views","handleViewBatchmates","handleBatchMatePrevious","handleBatchMateNext","renderBatchMateDots","sessions","chats","username","MentorCard","_locationCategory$sta","setSelectedSkills","setSelectedTools","setSelectedIndustry","selectedPrice","setSelectedPrice","setSelectedLocation","setCurrentPage","useLocation","isMentorCardFetched","setIsMentorCardFetched","url2","mentordetails","setMentorDetails","truncateBio","bio","lineCount","words","truncatedBio","tools","minPrice","at","maxPrice","mentorCardDetails","paddingRight","Array","isArray","textAlign","columnGap","Badge","pill","consultations","ratings","rel","first","MentorProfile","mid","useParams","url1","mentorprofiledetails1","setMentorProfileDetails1","loading","setLoading","skillsSectionRef","useRef","showAll","setShowAll","scrollToSkills","current","y","getBoundingClientRect","pageYOffset","scrollTo","toggleShowAll","prevShowAll","mentorReviews","mentorProfile","remainingSkillsCount","countryName","videoUrl","introVideo","thumbnailUrl","regex","match","achievement","mentorId","featuredArticle","MentorAnswers","questionId","answers","setAnswers","answers1","setAnswers1","editing","setEditing","editedQuestion","setEditedQuestion","editedAnswer1","setEditedAnswer1","editStates","setEditStates","loadingStates","setLoadingStates","questionLoadingStates","setQuestionLoadingStates","updateTrigger","setUpdateTrigger","textQuillStandart","setTextQuillStandart","AnswersByMentors","AnswersByMentors1","roleRes","userId","menteeUserId","put","prevAnswers","Spinner","handleCancel","handleEdit","deleteUrl","delete","animation","block","answer","an","mentorName","mentorRole","answered","prev","updatedAnswer","answerText","updatedAnswers","ans","prevState","handleSave1","handleCancel1","answerToUpdate","handleEdit1","answerId","handleDeleteAnswer","szie","strippedAnswerText","DOMParser","parseFromString","textContent","updatedResponse","isArrayOfLength","MentorConsult","inputkey1","setInputKey1","MentorCreatedSlot","mentoravailable","setMentorAvailable","currentWeekStart","setCurrentWeekStart","URLSearchParams","search","selectedHourDropdown","setSelectedHourDropdown","selectedHourDropdown1","setSelectedHourDropdown1","minutedrop","setMinutedrop","minutedrop1","setMinutedrop1","modalSmall","setModalSmall","selectedfromampm","setSelectedFromAmPm","selectedfromampm1","setSelectedFromAmPm1","fetchMentorSlotsCreate","fromTime","toTime","availability","startOfWeekTimestamp","setHours","endOfWeekTimestamp","newUrl","origin","replaceState","startOfWeek","getStartOfWeek","currentDate","getDay","diff","generateDropdownItemsSelect","formattedHour","generateMinuteDropdownItems","minute","formattedMinute","generateDropdownItems1","generateMinuteDropdownItems1","goToPreviousWeek","newStartDate","goToNextWeek","month","isPreviousWeekDisabled","currentWeekStartDate","storedWeekStart","handleTimeSlotClick","handleAddSlotClick","handleDeleteSlotClick","confirm","selectedDateTime","selectedHourFrom","toDateTime","selectedHourTo","deleteMentorSlot","handleCloseIconClick","stopPropagation","selectData","minutesSelectData","toHoursSelectData","toMinutesSelectData","fromAmPmSelectData","generateAmPmDropdownItems","amPm","toAmPmSelectData","generateAmPmDropdownItems1","opacity","onKeyDown","tabIndex","bordered","getWeekDates","weekDates","startDate","hasSlotsForDay","slots","availableSlots","avail","toDateString","FromDate","ToDate","isPastTime","onMouseEnter","currentTarget","classList","add","onMouseLeave","remove","every","some","bookedSlots","row","DateRangePicker","selectedHour","selectedMinute","selectedAmPmFrom","selectedAmPmTo","slot","redirectToSessionLists1","FilterQuestions","isQuestionFetched","setIsQuestionFetched","multiquestions","setMultiQuestions","originalQuestions","setOriginalQuestions","selectedValue","setSelectedValue","selectedCategories","setSelectedCategories","handleSelect","handleCategoryChange","checked","prevQuestions","q","oq","sort","categories","FilterMultiQuestions","CustomInput","qs","newValue","questionToUpdate","handleSave","questionToEdit","question","AskQuestion","MyQandA","myanswers","setMyAnswers","answerPagination","setAnswerPagination","myquestions","setMyQuestions","currentPage1","setCurrentPage1","pagination","setPagination","MyAnswers","MyQuestions","totalQuestions","questions","qdate","qsdateformat","totalAnswers","MentorSessionList","session","setSession","upcomingsession","setUpcomingSession","sessionPagination","setSessionPagination","showSuccessCard","setShowSuccessCard","setMentorName","upcomingSessionsUrl","sessionHistoryUrl","SessionHistroy","queryParams","upcomingSessions","SessionUpcomingHistroy","up","fromtime","totime","updateformat","timeOptions","hour","toLocaleTimeString","handleJoinCall","fullUrl","sh","shdateformat","durationInMs","toFixed","MentorSessionUpcoming","upcomingSession","appointment","menteeId","MyProfile","isEditing","setIsEditing","isEditingAbout","setIsEditingAbout","isEditingButton","setIsEditingButton","isEditingPrice","setIsEditingPrice","setImage","setFirstName","setJobTitle","resumeFileName","setResumeFileName","resumeFileId","setResumeFileId","setExperience","setLocation","newInputSkill","setNewInputSkill","setSkills","setUserId","setLastName","setEmail","setCompany","setCategory","setBio","setPrice","linkedinUrl","setLinkedinUrl","twitterHandle","setTwitterHandle","website","setWebsite","setIntroVideo","setFeaturedArticle","reasonForMentor","setReasonForMentor","setAchievement","setProfileLoading","skillValidationMessage","setSkillValidationMessage","isProfileUpdated","setIsProfileUpdated","imageEditModal","setImageEditModal","selectedFile","setSelectedFile","selectedFileBase64","setSelectedFileBase64","fileError","setFileError","endUrl","inputUrl","imageEditUrl","mentorProfileDetails","userData","documentName","documentId","inputData","mentorProfileDetails1","updateMEntorProfile","updatedData","_error$response","_error$response$data","postImageData","handleAddSkill","newSkill","dropdownOpen","setDropdownOpen","borderBottom","reader","FileReader","onloadend","base64Image","result","readAsDataURL","for","toggleDropdown","viewUrl","fileId","handleView","_error$response2","_error$response2$data","handleDelete","fileType","fileSize","uploadUrl","handleFileChange1","borderTop","ReactSortable","setList","_","handleRemoveSkill","MyWallet","setBalance","transactions","setTransactions","rechargeAmount","setRechargeAmount","fetchDataFromServer","walletData","newBalance","newTransactions","handleAmountButtonClick","amount","prevAmount","parseFloat","toString","preventDefault","handleRecharge","postData","transaction","abs","paymentmethod","ViewOtherListing","copied","setCopied","navigator","clipboard","writeText","xmlns","fill","viewBox","fillRule","d","ViewJobListing","contact","LawQuestionAnswer","listClassName","PaginationItem","PaginationLink","JobList","joblist","LawyerJobsList","inProgress","j","createdAtDate","formattedDate","toLocaleDateString","modifiedAtDate","modifiedAt","formattedModifiedAt","lawyerName","lawyerId","onKeyPress","handleKeyPress","path","jobName","completed","LawyerJobList","clientName","clientId","clientUserId","AddReview","setRating","setFeedBack","setPost","Reviewurl","onRate","ratingVal","handleBackToLawyerJobsClick","VideoCallCompletedPage","submissionStatus","setSubmissionStatus","setName","setFromTime","setToTime","setMode","setDuration","waitingForData","setWaitingForData","sid","getUrl","intervalId","attempts","dur","Jumbotron","handleMentorClick","handleDashboardClick","MyComponent","LawyerMyProfile","newInputTopics","setNewInputTopics","setImageUrl","setLanguages","topic","setTopic","setRatings","setStar","about","setAbout","packages","setPackages","topicValidationMessage","setTopicValidationMessage","isPosted","setIsPosted","isEditingLanguages","setIsEditingLanguages","isEditingTopics","setIsEditingTopics","isEditingPackages","setIsEditingPackages","isAddPackage","setIsAddPackage","pid","setPid","editPackage","setEditPackage","serviceName","newPackage","setNewPackage","packageURL","topicName","LawyerPackage","fetchedPackages","handleAddTopics","newTopics","languageOptions","selectedLanguages","setSelectedLanguages","selectedOptions","languagesArray","newLanguages","currentPackage","setCurrentPackage","headline","handleInputChange","listStyle","content","isMulti","_language$find2","handleRemoveLanguages","handleLanguagesSave","handleLanguagesCancel","handleRemoveTopics","handleSaveTopics","handleTopicCancel","pack","handlePackageEditClick","prevPackages","handleAddPackageCancel","deleteURL","handlePackageDeleteClick","updateURL","handlePackageCancelEdit","currentYear","years","year","linkedInUrl","setLinkedInUrl","personalWebsite","setPersonalWebsite","education","setEducation","work","setWork","goal","setGoal","certifications","setCertifications","seekingFor","setSeekingFor","newInputCertifications","setNewInputCertifications","certificationsValidationMessage","setCertificationsValidationMessage","uid","profileData","setProfileData","modalEditProfile","setModalEditProfile","modalEditExperience","setModalEditExperience","modalEditSkills","setModalEditSkills","modalEditLanguage","setModalEditLanguage","modalEditEducation","setModalEditEducation","modalAbout","setModalAbout","profileUpdate","setProfileUpdate","modalEditCertifications","setModalEditCertifications","experienceEditOpen","setExperienceEditOpen","educationEditOpen","setEducationEditOpen","selectedIndex","setSelectedIndex","selectedWorkIndex","setSelectedWorkIndex","newWork","setNewWork","newEducation","setNewEducation","userPhotoUrl","updateMentorProfile","updatedEducation","updatedWork","handleAddCertifications","newCertification","handleImagePost","w","endDate","handleAddWork","yr","prevWork","newWorkArray","handleEditWork","certification","handleRemoveCertifications","college","degree","department","handleAddEducation","handleSaveEducation","prevEducation","newEducationArray","handleEditEducation","UserProfile","linkedIn","handleLinkedInClick","handleTwitterClick","twitterUrl","StudentList","studentListData","setStudentListData","isStudentCardFetched","setIsStudentCardFetched","getStudentData","students","StudentViewProfile","studentProfileDetails","setStudentProfileDetails","StudentProfileDetails","edc","AlumniMyProfile","_college$","_college$2","_college$3","_experience$editingIn","_experience$editingIn2","_experience$editingIn3","_experience$editingIn4","_experience$editingIn5","_experience$editingIn6","isEditingExp","setIsEditingExp","setCollege","isEditingSkills","setIsEditingSkills","isEditingEducation","setIsEditingEducation","isEditingEducationSecond","setIsEditingEducationSecond","expId","setExpId","collegeId","setCollegeId","isEditingExpSecond","setIsEditingExpSecond","editingIndex","setEditingIndex","colleges","addExperienceUrl","field","updatedExperience","addEducationUrl","handleInputEducationChange","updatedCollege","handleDeleteEducation","collegeToDelete","prevCollege","visibility","handlePersonalWebsiteClick","startsWith","rows","jobtitle","startYear","endYear","handleEditExperience","experienceToDelete","prevExperience","handleDeleteExperience","handleSaveExp","currentExperience","experienceData","updateUrl","updateExperience","handleCancelEditExp","newCollegeEntry","currentCollege","Number","educationUpdateUrl","newCollegeId","entry","updateEducation","handleCancelEditEducation","handleSaveSkill","handleSkillCancel","AlumniCalendar","AlumniSessionLists","ApplyAsMentor","forms","createRef","currentStep","setCurrentStep","file1","setFile1","setSkillsTag","certificationsTag","setCertificationsTag","imageError","setImageError","imageErrorMessage","setImageErrorMessage","aboutLoading","setAboutLoading","profileLoading","experienceLoading","setExperienceLoading","aboutField","setAboutField","certificateInputValue","setCertificateInputValue","studentTypeOptions","handleNextStep","handlePrevStep","handleFileChange","validateFile","userProfileUrl","ImageUrl","mentorExperienceUrl","userAboutUrl","ResumeUploadUrl","imageError1","setImageError1","imageErrorMessage1","setImageErrorMessage1","addEducation","addWorkExperience","previousEducation","edu","handleWorkInputChange","previousWorkExperience","works","handleTagsChange","newSkills","handleCertificationsChange","newCertifications","studentType","userProfile","setItem","code","postDataUserProfile","Alert","autoComplete","FormText","innerRef","postExperience","validateOnMount","service","_errors$education","_errors$education$ind","_touched$education","_touched$education$in","_errors$education2","_errors$education2$in","_touched$education2","_touched$education2$i","_errors$education3","_errors$education3$in","_touched$education3","_touched$education3$i","_errors$education4","_errors$education4$in","_touched$education4","_touched$education4$i","_errors$education5","_errors$education5$in","_touched$education5","_touched$education5$i","splice","removeEducation","_errors$education6","_errors$education6$in","_touched$education6","_touched$education6$i","_errors$education7","_errors$education7$in","_touched$education7","_touched$education7$i","_errors$education8","_errors$education8$in","_touched$education8","_touched$education8$i","_errors$education9","_errors$education9$in","_touched$education9","_touched$education9$i","_errors$education10","_errors$education10$i","_touched$education10","_touched$education10$","_errors$education11","_errors$education11$i","_touched$education11","_touched$education11$","newWorkExperience","removeWorkExperience","postDataExp","postAboutData","inputProps","renderInput","addTag","other","endsWith","newTag","handleCertificateChangeInput","Settings","AlumniLists","setSelectedUniversity","AlumniProfile","alumniprofiledetails","setAlumniProfileDetails","backgroundImage","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","Footer","icon","roles","subs","Sidebar","Component","constructor","super","handleWindowResize","isTrusted","this","getMenuClassesForResize","handleDocumentClick","container","getContainer","isMenuClick","contains","parentElement","setState","viewingParentMenu","classes","menuHiddenBreakpoint","subHiddenBreakpoint","windowWidth","ReactDOM","findDOMNode","hasSubItems","getIsHasSubItem","handleProps","addEvents","removeEvents","setSelectedLiActive","callback","oldli","querySelector","oldliSub","selectedSublink","selectedlink","selectedParentMenu","getAttribute","selectedParentNoSubItem","menuItems","setHasSubItemStatus","hasSubmenu","menuItem","openSubMenu","selectedParent","hasSubMenu","toggleMenuCollapse","menuKey","collapsedMenus","filteredList","currentUser","componentDidUpdate","prevProps","componentDidMount","componentWillUnmount","vertical","newWindow","IntlMessages","sub","thirdSub","thirdIndex","withRouter","connect","menu","authUser","MenuIcon","MobileMenuIcon","TopnavDarkSwitch","switchChecked","setSwitchChecked","tooltipOpen","setTooltipOpen","getCurrentColor","Switch","changeMode","setCurrentColor","reload","Tooltip","placement","TopnavNotifications","notifications","setNotifications","clicked","setClicked","fetchNotifications","UncontrolledDropdown","handleClick","notification","setContainerClassnamesAction","clickOnMobileMenuAction","logoutUserAction","logoutUser","changeLocaleAction","searchKeyword","setSearchKeyword","timeUntilExpiration","now","myProfile","clear","handleMySessionsClick","handleMySlots","userName","menuButtonClick","_clickCount","_conClassnames","mobileMenuButtonClick","_containerClassnames","isDarkSwitchActive","handleSettingsClick","divider","removeItem","TopNav","ViewMyApp","lazy","ViewMyApplications","ViewDashBoard","ViewMyDetails","ViewMyDocuments","ProfilePage","MentorCreatedSlots","ViewMyChat","ViewActivities","MentorListSessions","ViewMylogin","ViewLawyerlogin","ViewAlumnilogin","ViewHrlogin","ViewMyProfile","ViewMyWallet","ViewMyListing","ViewVideoCall","ViewListingTab","ViewStayListingTab","ViewJobListingTab","ViewOtherListingTab","ViewStayListing","ViewLawyer","ViewUserCard","ViewLawyerProfile","ViewLawyerPayment","ViewJobDetail","ViewJobList","ViewLawyerJobList","ViewLawyerReviews","ViewCallCompleted","ViewClassRoom","ViewLawyerMyProfile","ViewUserMyProfile","ViewUserProfile","ViewStudentList","ViewStudentProfile","ViewAlumniMyProfile","ViewAlumniCalendar","ViewMyAlumniSessions","ViewUserApply","ViewSettings","ViewAlumniLists","ViewAlumniProfile","ViewRealEstateAgentApply","statusRes","redirectTo","AppLayout","Suspense","fallback","Redirect","exact","from","Route","JobListing","isLoaded","setIsLoaded","setItems","expandedIndex","setExpandedIndex","sortedData","a","b","CardSubtitle","toggleExpand","setTotalPage","isFirst","setIsFirst","isLast","setIsLast","interestedClickUrl","currentUserId","currentUserRole","currentUserName","jobLists","removeTags","str","_data$description","isCurrentlyInterested","itemId","interestedUsers","loggedInUserInterested","user","jobListingId","interested","handleInterestedButtonClick","DesktopNotifications","permission","setPermission","Notification","showNotification","requestPermission","clickedCardTitle","setClickedCardTitle","copiedId","setCopiedId","noData","setNoData","isHovered","setIsHovered","otherposts","otherPostId","handleShareButtonClick","StayListing","isOwnerInfoVisible","setIsOwnerInfoVisible","stayrooms","toggleOwnerInfo","prevId","transition","pointerEvents","stayroomId","DetailsAltPages","setActiveTab","modal","setModal","modalTitle","setModalTitle","listingType","setListingType","toggleModal","toggleModalState","pop","changeTab","tab","All","OtherListing","config","codec","appId","useClient","createClient","useMicrophoneAndCameraTracks","createMicrophoneAndCameraTracks","Controls","client","tracks","setStart","setInCall","setStatus","trackState","setTrackState","video","audio","mute","setEnabled","ps","fluid","leave","removeAllListeners","close","leaveChannel","Video","users","bookedByName","createdByName","otherUser","AgoraVideoPlayer","videoTrack","bottom","VideoCallCtrl","setUsers","start","callStartTime","setCallStartTime","endTime","setEndTime","timeRemaining","setTimeRemaining","channelName","setChannelName","rtcToken","setRtcToken","setAppId","setBookedByName","setCreatedByName","ready","readyForCall","setReadyForCall","getToken","remainingDuration","init","mediaType","subscribe","prevUsers","audioTrack","play","stop","User","publish","iTime","initiatedTime","timerId","prevTime","minutesRemaining1","setMinutesRemaining1","updateRemainingTime","callCurrentTime","callTimeRemaining","minutesRemaining","VideoCall","inCall","timer","SaySomething","messageInput","handleChatInputPress","handleChatInputChange","handleSendButtonClick","ApplicationMenu","containerRef","setIsOpen","ChatHeading","thumb","lastSeenDate","chatApp","allContacts","conversations","loadingConversations","loadingContacts","selectedUser","selectedUserId","getContactsAction","getContacts","getConversationsAction","getConversations","changeConversationAction","changeConversation","addMessageToConversationAction","addMessageToConversation","setMessageInput","scrollBarRef","focusScrollBottom","_ps","scrollTop","contentHeight","selectedConversation","connection","setConnection","setToken","peerId","setPeerId","tokenRes","fullName","setFullName","UserNameUrl","chatUserName","err","peerMessage","setPeerMessage","logs","setLogs","serverConversations","setServerConversations","loadingConversation","setLoadingConversation","chatLoading","setChatLoading","conversationIds","setConversationIds","conversationFullName","setConversationFullName","ids","conversation","conversationId","timeoutId","conn","AC","appKey","addEventHandler","onConnected","getServerConversations","pageSize","getHistoryMessages","targetId","chatType","searchDirection","searchOptions","msgTypes","startTime","newLogs","msg","prevLogs","onTextMessage","addLog","onTokenWillExpire","onTokenExpired","onError","agoraToken","handleSendMessage","create","send","handleConversationClick","ApplyAsAlumniAbout","fields","mentorAboutUrl","imageUploadUrl","alumniResumePostUrl","postProfileData","alumniProfile","postImage","postResumeData","ApplyAsAlumniexperience","experiences","alumniExperienceUrl","exp","_e$target","ApplyAsAlumniProfile","alumniProfileUrl","fieldStudy","ApplyAlumni","ApplyAsHrAbout","hrAboutUrl","hrResumePostUrl","residentType","jobType","HRAbout","ApplyAsHrExperience","hrExperienceUrl","ApplyAsHrProfile","hrProfileUrl","hrProfile","ApplyHR","MyJobListing","deleteJobPost","setDeleteJobPost","interestUsersModal","setInterestedUsersModal","selectedJob","setSelectedJob","jobId","setJobId","request","fetchMyJobListingData","handleEditJob","editUrl","jobData","handleMyJobListDelete","stayDeleteUrl","deletePost","interestedPeopleUrl","handleModalToggle","ListGroup","flush","datas","ListGroupItem","tag","lowerCaseRole","handleUserClick","MyOtherListing","deleteStayPost","setDeleteStayPost","selectedOther","setSelectedOther","fetchMyOtherListingData","handleEditOthers","othersData","handleMyOtherListDelete","otherDeleteUrl","MyStayListing","selectedStay","setSelectedStay","fetchMyStayListingData","handleEditStay","stayData","handleMyStayListDelete","MyListing","RealEstateAgentAbout","RealEstateAgentExperience","RealEstateAgentProfile","RealEstateAgentApply","BottomNavigation","onClickPrev","prevLabel","onClickNext","nextLabel","licenseBalance","redirectToSessionLists","selectedradiobutton","setSelectedRadioButton","license","setLicense","handleLicenseNextButtonClick","newData","queryString","encodeURIComponent","LicenseDetails","Wizard","Steps","Step","sessionPrice","availableBalance","balanceAfterDeducation","goToNext","handleNextButtonClick","handleCheckAvailability","availabilityUrl","alert","goToPrev","searchParams","fetchMentorAvailability","nextWeekStart","nextWeekEnd","PopupWizard","LawyerJobNotes","notes","setNotes","newNote","setNewNote","newTitle","setNewTitle","editModal","setEditModal","editNoteId","setEditNoteId","editedTitle","setEditedTitle","editedText","setEditedText","setUpdate","notsFetched","setNotesFetched","addNoteLoading","setAddNoteLoading","saveLoading","setSaveLoading","deleteLoading","setDeleteLoading","addModal","setAddModal","notesUrl","fetchNotes","toggleAddModal","toggleEditModal","wrapClassName","backdrop","newNoteData","details","handleAddNote","note","noteToEdit","handleEditNote","updatedNotes","handleDeleteNote","updatedNote","saveEditedNote","ReactDOMServer","require","dropzoneConfig","thumbnailHeight","maxFilesize","previewTemplate","renderToStaticMarkup","DropzoneExample","myDropzone","removeAllFiles","stepNo","dropzoneComponentConfig","postUrl","DropzoneComponent","djsConfig","eventHandlers","dropzone","doneByData","jobStatusData","JobDetails","selectedStep","setSelectedStep","jobdetails","setJobDetails","jid","editMode","setEditMode","isHovered1","setIsHovered1","jobeditmode","setJobEditMode","isNewStep","setIsNewStep","jobstatuseditmode","setJobStatusEditMode","userstep","setUserStep","jobstatuschange","setJobStatusChange","editData","setEditData","stepName","doneBy","upload","LawyerJobsDetails","isFormFilled","handleAddStepCard","newStepNumber","newCard","stepNumber","updatedJobDetails","handleStepClick","handleEditChange","ApproveJobStatusByClient","approveUrl","RejectJobStatusByClient","dataToSend","existingStepNumbers","selectedStepNumber","postResponse","saveEdits1","warn","saveEdits","downloadDocument","updateUrl1","deleteDocument","handleKeyDown","action","isLawyer","navigateToProfile","handleSaveJobName","saveJobs","handleCancelClick","updateJobStatusUrl","selectedKey","saveJobStatus","handleCancelStatusClick","jobStatus","fontWeight","documentList","updateStatusUrl","saveStatus","ShowNotifications","MyApp","CategoryData","short","ApplyMentor","setAmount","toolsTag","setToolsTag","skillError","setSkillError","skillErrorMessage","setSkillErrorMessage","setWorks","updatedWorks","handleFileChangeResume","mentorProfileUrl","experienceUrl","mentorResumeUrl","postDataAbout","imageData","handleError","handleSliderChange","handleToolsTagsChange","newTools","postDataProfile","postDataExperience","_errors$experiences","_errors$experiences$i","_touched$experiences","_touched$experiences$","_errors$experiences2","_errors$experiences2$","_touched$experiences2","_touched$experiences3","_errors$experiences3","_errors$experiences3$","_touched$experiences4","_touched$experiences5","_errors$experiences4","_errors$experiences4$","_touched$experiences6","_touched$experiences7","_errors$experiences5","_errors$experiences5$","_touched$experiences8","_touched$experiences9","_errors$experiences6","_errors$experiences6$","_touched$experiences10","_touched$experiences11","validatePackageTopic","validateAbout","validatePackageDescription","validateServiceName","ApplyAsLawyer","topicsTag","setTopicsTag","AboutLoading","servicesLoading","setServicesLoading","topicsInputValue","setTopicsInputValue","topics","setServices","addService","lawyerAboutUrl","lawyerProfileUrl","packageUrl","lawyerImagePostUrl","lawyerResumePostUrl","handleTopicsTagsChange","prevServices","handleTopicsChangeInput","services1","postServices","_errors$services","_errors$services$inde","_touched$services","_touched$services$ind","_errors$services2","_errors$services2$ind","_touched$services2","_touched$services2$in","_errors$services3","_errors$services3$ind","_touched$services3","_touched$services3$in","newServices","removeService","LawyerCardFilter","onTopicsChange","onLanguageChange","selectedTopics","selectedLanguage","topicSearchUrl","topicsSize","setTopicsSize","topicsPaginationMeta","setTopicsPaginationMeta","topicsData","setTopicsData","topicsFetched","setTopicsFetched","handleTopicsSelect","handleLanguageSelect","filteredLanguage","setFilteredLanguage","searchLanguage","setSearchLanguage","searchTopics","setSearchTopics","FetchTopics","handleTopicsLoadMore","UserCard","setSelectedTopics","setSelectedLanguage","isLawyerCardFetched","setIsLawyerCardFetched","userdetails","setUserDetails","LawyerCardDetails","LawyerTabCard","handlePurchase","LawyerProfile","lawyerprofile","setLawyerProfile","packageId","ProfileLawyer","BottomNavigationWizard","paymentButtonType","paymentMethod","handlePayFullyFromOnline","handlePayFromWallet","intl","walletamount","setWalletAmount","getWalletAmountUrl","WalletAmountGet","calculateBalanceAfterDeduction","balanceAfterDeduction","calculateRemainingAmountToPay","mg"],"mappings":"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AAY,GACZD,WAAY,QAEd,CACEzrB,QACE,8FACF0rB,WAAY,GACZD,WAAY,QAEd,CACEzrB,QACE,iZACF0rB,WAAY,GACZD,WAAY,UAIlB,CACEhO,GAAI,EACJwN,UAAW,GACXD,YAAa,MACbG,eAAgB,CACd,CACEE,UAAW,cACXC,UAAW,GAEb,CACED,UAAW,UACXC,UAAW,GAEb,CACED,UAAW,gBACXC,UAAW,GAEb,CACED,UAAW,OACXC,UAAW,GAEb,CACED,UAAW,UACXC,UAAW,IAGfC,aAAc,CACZ,CACEvrB,QACE,oEACF0rB,WAAY,GACZD,WAAY,QAEd,CACEzrB,QAAS,6DACT0rB,WAAY,GACZD,WAAY,QAEd,CACEzrB,QACE,8FACF0rB,WAAY,GACZD,WAAY,QAEd,CACEzrB,QACE,iZACF0rB,WAAY,GACZD,WAAY,UAIlB,CACEhO,GAAI,EACJwN,UAAW,GACXD,YAAa,MACbG,eAAgB,CACd,CACEE,UAAW,cACXC,UAAW,GAEb,CACED,UAAW,UACXC,UAAW,GAEb,CACED,UAAW,gBACXC,UAAW,GAEb,CACED,UAAW,OACXC,UAAW,GAEb,CACED,UAAW,UACXC,UAAW,IAGfC,aAAc,CACZ,CACEvrB,QACE,oEACF0rB,WAAY,GACZD,WAAY,QAEd,CACEzrB,QAAS,6DACT0rB,WAAY,GACZD,WAAY,QAEd,CACEzrB,QACE,8FACF0rB,WAAY,GACZD,WAAY,QAEd,CACEzrB,QACE,iZACF0rB,WAAY,GACZD,WAAY,UAIlB,CACEhO,GAAI,EACJwN,UAAW,GACXD,YAAa,MACbG,eAAgB,CACd,CACEE,UAAW,cACXC,UAAW,GAEb,CACED,UAAW,UACXC,UAAW,GAEb,CACED,UAAW,gBACXC,UAAW,GAEb,CACED,UAAW,OACXC,UAAW,GAEb,CACED,UAAW,UACXC,UAAW,IAGfC,aAAc,CACZ,CACEvrB,QACE,oEACF0rB,WAAY,GACZD,WAAY,QAEd,CACEzrB,QAAS,6DACT0rB,WAAY,GACZD,WAAY,QAEd,CACEzrB,QACE,8FACF0rB,WAAY,GACZD,WAAY,QAEd,CACEzrB,QACE,iZACF0rB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","file":"static/js/views-app.e7783ce0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col } from 'reactstrap';\r\n\r\nconst Colxx = (props) => (\r\n  <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = ({ className }) => (\r\n  <div className={`separator ${className}`} />\r\n);\r\nexport { Colxx, Separator };\r\n","import { NotificationManager } from 'components/common/react-notifications';\r\n\r\nconst ToasterComponent = (type, messages, title = \"\", duration = 3000) => {\r\n  messages.forEach((message) => {\r\n    switch (type) {\r\n      case \"success\":\r\n        NotificationManager.success(\r\n          message.message,\r\n          title || message.status,\r\n          duration,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n        break;\r\n      case \"warning\":\r\n        NotificationManager.warning(\r\n          message.message,\r\n          title || \"Warning\",\r\n          duration,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n        break;\r\n      case \"error\":\r\n        NotificationManager.error(\r\n          message.message,\r\n          title || \"Error\",\r\n          duration,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n        break;\r\n      default:\r\n        NotificationManager.info(\r\n          message.message,\r\n          title || \"Info\",\r\n          duration,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default ToasterComponent;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nconst ThumbnailLetters = ({ text, color, className, rounded, small }) => {\r\n  let letters = '';\r\n  if (text.indexOf(' ') > -1) {\r\n    text.split(' ').map((word) => {\r\n      if (word.length > 1) letters += word.slice(0, 1);\r\n      return '';\r\n    });\r\n  } else {\r\n    letters += text.slice(0, 2);\r\n  }\r\n\r\n  if (letters.length > 2) {\r\n    letters = letters.slice(0, 2);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`align-self-center list-thumbnail-letters ${\r\n        color ? `btn-${color}` : ''\r\n      }  ${className}  ${classnames({\r\n        'rounded-circle': rounded,\r\n        small,\r\n      })}`}\r\n      title={text}\r\n    >\r\n      {letters}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ThumbnailLetters);\r\n","const TimestampConverter = ({ timeStamp, format }) => {\r\n  const formatDateTime = () => {\r\n    const time = new Date(parseInt(timeStamp, 10));\r\n    const Hours = String(time.getHours() % 12 || 12).padStart(2, \"0\");\r\n    const Minutes = String(time.getMinutes()).padStart(2, \"0\");\r\n    const Period = time.getHours() < 12 ? \"am\" : \"pm\";\r\n    const MonthNames = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    const Month = MonthNames[time.getMonth()];\r\n    const Day = time.getDate();\r\n    const Year = time.getFullYear();\r\n\r\n    const getDayWithSuffix = (day) => {\r\n      if (day > 3 && day < 21)\r\n        return (\r\n          <>\r\n            {day}\r\n            <sup>th</sup>\r\n          </>\r\n        );\r\n      switch (day % 10) {\r\n        case 1:\r\n          return (\r\n            <>\r\n              {day}\r\n              <sup>st</sup>\r\n            </>\r\n          );\r\n        case 2:\r\n          return (\r\n            <>\r\n              {day}\r\n              <sup>nd</sup>\r\n            </>\r\n          );\r\n        case 3:\r\n          return (\r\n            <>\r\n              {day}\r\n              <sup>rd</sup>\r\n            </>\r\n          );\r\n        default:\r\n          return (\r\n            <>\r\n              {day}\r\n              <sup>th</sup>\r\n            </>\r\n          );\r\n      }\r\n    };\r\n\r\n    const isToday = () => {\r\n      const today = new Date();\r\n      return (\r\n        today.getDate() === time.getDate() &&\r\n        today.getMonth() === time.getMonth() &&\r\n        today.getFullYear() === time.getFullYear()\r\n      );\r\n    };\r\n\r\n    const isYesterday = () => {\r\n      const yesterday = new Date();\r\n      yesterday.setDate(yesterday.getDate() - 1);\r\n      return (\r\n        yesterday.getDate() === time.getDate() &&\r\n        yesterday.getMonth() === time.getMonth() &&\r\n        yesterday.getFullYear() === time.getFullYear()\r\n      );\r\n    };\r\n\r\n    switch (format) {\r\n      case \"time\":\r\n        return `${Hours}:${Minutes} ${Period}`;\r\n      case \"datetime\":\r\n        if (isToday()) {\r\n          return `Today ${Hours}:${Minutes} ${Period}`;\r\n        }\r\n        if (isYesterday()) {\r\n          return `Yesterday ${Hours}:${Minutes} ${Period}`;\r\n        }\r\n        return (\r\n          <span>\r\n            {getDayWithSuffix(Day)} {Month} {Year} {Hours}:{Minutes} {Period}\r\n          </span>\r\n        );\r\n      case \"date\":\r\n        if (isToday()) {\r\n          return \"Today\";\r\n        }\r\n        if (isYesterday()) {\r\n          return \"Yesterday\";\r\n        }\r\n        return (\r\n          <span>\r\n            {getDayWithSuffix(Day)} {Month} {Year}\r\n          </span>\r\n        );\r\n      default:\r\n        return \"Invalid format\";\r\n    }\r\n  };\r\n\r\n  const formattedDateTime = formatDateTime();\r\n\r\n  return <span className=\"mx-1\">{formattedDateTime}</span>;\r\n};\r\n\r\n// <TimestampConverter timeStamp={timestamp} format=\"time\" />   For Time only\r\n// <TimestampConverter timeStamp={timestamp} format=\"datetime\" />   For Date and Time\r\n// <TimestampConverter timeStamp={timestamp} format=\"date\" />   For Date only\r\n\r\nexport default TimestampConverter;\r\n","import React from 'react';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\n\r\nconst Pagination = ({\r\n  totalPage = 0,\r\n  currentPage = 1,\r\n  numberLimit = 5,\r\n  lastIsActive = true,\r\n  firstIsActive = true,\r\n  onChangePage,\r\n}) => {\r\n  let startPoint = 1;\r\n  let endPoint = numberLimit;\r\n\r\n  if (numberLimit > totalPage) {\r\n    startPoint = 1;\r\n    endPoint = totalPage;\r\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\r\n    startPoint = 1;\r\n    endPoint = numberLimit;\r\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\r\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\r\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\r\n  } else {\r\n    startPoint = totalPage - (numberLimit - 1);\r\n    endPoint = totalPage;\r\n  }\r\n  startPoint = startPoint === 0 ? 1 : startPoint;\r\n  const points = [];\r\n  for (let i = startPoint; i <= endPoint; i += 1) {\r\n    points.push(i);\r\n  }\r\n\r\n  const firstPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\r\n  const lastPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\r\n  const prevPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\r\n  const nextPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\r\n  return totalPage > 1 ? (\r\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\r\n      <Nav className=\"pagination justify-content-center\">\r\n        {firstIsActive && (\r\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link first c-pointer\"\r\n              onClick={() => onChangePage(1)}\r\n            >\r\n              <i className=\"simple-icon-control-start\" />\r\n            </NavLink>\r\n          </NavItem>\r\n        )}\r\n\r\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\r\n          <NavLink\r\n            className=\"page-link prev c-pointer\"\r\n            onClick={() => onChangePage(currentPage - 1)}\r\n          >\r\n            <i className=\"simple-icon-arrow-left\" />\r\n          </NavLink>\r\n        </NavItem>\r\n        {points.map((i) => {\r\n          return (\r\n            <NavItem\r\n              key={i}\r\n              className={`page-item ${currentPage === i && 'active'}`}\r\n            >\r\n              <NavLink\r\n                className=\"page-link c-pointer\"\r\n                onClick={() => onChangePage(i)}\r\n              >\r\n                {i}\r\n              </NavLink>\r\n            </NavItem>\r\n          );\r\n        })}\r\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\r\n          <NavLink\r\n            className=\"page-link next c-pointer\"\r\n            onClick={() => onChangePage(currentPage + 1)}\r\n          >\r\n            <i className=\"simple-icon-arrow-right\" />\r\n          </NavLink>\r\n        </NavItem>\r\n        {lastIsActive && (\r\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link last c-pointer\"\r\n              onClick={() => onChangePage(totalPage)}\r\n            >\r\n              <i className=\"simple-icon-control-end\" />\r\n            </NavLink>\r\n          </NavItem>\r\n        )}\r\n      </Nav>\r\n    </Colxx>\r\n  ) : (\r\n    <Colxx xxs=\"12\" className=\"mt-2\" />\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nconst InjectMassage = (props) => <FormattedMessage {...props} />;\r\n\r\nexport default injectIntl(InjectMassage, {\r\n  withRef: false,\r\n});\r\n","const country = [\r\n    {\r\n        \"name\": \"Afghanistan\",\r\n        \"iso_code\": \"AF\"\r\n    },\r\n    {\r\n        \"name\": \"Albania\",\r\n        \"iso_code\": \"AL\"\r\n    },\r\n    {\r\n        \"name\": \"Algeria\",\r\n        \"iso_code\": \"DZ\"\r\n    },\r\n    {\r\n        \"name\": \"American Samoa\",\r\n        \"iso_code\": \"AS\"\r\n    },\r\n    {\r\n        \"name\": \"Andorra\",\r\n        \"iso_code\": \"AD\"\r\n    },\r\n    {\r\n        \"name\": \"Angola\",\r\n        \"iso_code\": \"AO\"\r\n    },\r\n    {\r\n        \"name\": \"Anguilla\",\r\n        \"iso_code\": \"AI\"\r\n    },\r\n    {\r\n        \"name\": \"Antarctica\",\r\n        \"iso_code\": \"AQ\"\r\n    },\r\n    {\r\n        \"name\": \"Antigua and Barbuda\",\r\n        \"iso_code\": \"AG\"\r\n    },\r\n    {\r\n        \"name\": \"Argentina\",\r\n        \"iso_code\": \"AR\"\r\n    },\r\n    {\r\n        \"name\": \"Armenia\",\r\n        \"iso_code\": \"AM\"\r\n    },\r\n    {\r\n        \"name\": \"Aruba\",\r\n        \"iso_code\": \"AW\"\r\n    },\r\n    {\r\n        \"name\": \"Australia\",\r\n        \"iso_code\": \"AU\"\r\n    },\r\n    {\r\n        \"name\": \"Austria\",\r\n        \"iso_code\": \"AT\"\r\n    },\r\n    {\r\n        \"name\": \"Azerbaijan\",\r\n        \"iso_code\": \"AZ\"\r\n    },\r\n    {\r\n        \"name\": \"Bahamas The\",\r\n        \"iso_code\": \"BS\"\r\n    },\r\n    {\r\n        \"name\": \"Bahrain\",\r\n        \"iso_code\": \"BH\"\r\n    },\r\n    {\r\n        \"name\": \"Bangladesh\",\r\n        \"iso_code\": \"BD\"\r\n    },\r\n    {\r\n        \"name\": \"Barbados\",\r\n        \"iso_code\": \"BB\"\r\n    },\r\n    {\r\n        \"name\": \"Belarus\",\r\n        \"iso_code\": \"BY\"\r\n    },\r\n    {\r\n        \"name\": \"Belgium\",\r\n        \"iso_code\": \"BE\"\r\n    },\r\n    {\r\n        \"name\": \"Belize\",\r\n        \"iso_code\": \"BZ\"\r\n    },\r\n    {\r\n        \"name\": \"Benin\",\r\n        \"iso_code\": \"BJ\"\r\n    },\r\n    {\r\n        \"name\": \"Bermuda\",\r\n        \"iso_code\": \"BM\"\r\n    },\r\n    {\r\n        \"name\": \"Bhutan\",\r\n        \"iso_code\": \"BT\"\r\n    },\r\n    {\r\n        \"name\": \"Bolivia\",\r\n        \"iso_code\": \"BO\"\r\n    },\r\n    {\r\n        \"name\": \"Bosnia and Herzegovina\",\r\n        \"iso_code\": \"BA\"\r\n    },\r\n    {\r\n        \"name\": \"Botswana\",\r\n        \"iso_code\": \"BW\"\r\n    },\r\n    {\r\n        \"name\": \"Bouvet Island\",\r\n        \"iso_code\": \"BV\"\r\n    },\r\n    {\r\n        \"name\": \"Brazil\",\r\n        \"iso_code\": \"BR\"\r\n    },\r\n    {\r\n        \"name\": \"British Indian Ocean Territory\",\r\n        \"iso_code\": \"IO\"\r\n    },\r\n    {\r\n        \"name\": \"Brunei\",\r\n        \"iso_code\": \"BN\"\r\n    },\r\n    {\r\n        \"name\": \"Bulgaria\",\r\n        \"iso_code\": \"BG\"\r\n    },\r\n    {\r\n        \"name\": \"Burkina Faso\",\r\n        \"iso_code\": \"BF\"\r\n    },\r\n    {\r\n        \"name\": \"Burundi\",\r\n        \"iso_code\": \"BI\"\r\n    },\r\n    {\r\n        \"name\": \"Cambodia\",\r\n        \"iso_code\": \"KH\"\r\n    },\r\n    {\r\n        \"name\": \"Cameroon\",\r\n        \"iso_code\": \"CM\"\r\n    },\r\n    {\r\n        \"name\": \"Canada\",\r\n        \"iso_code\": \"CA\"\r\n    },\r\n    {\r\n        \"name\": \"Cape Verde\",\r\n        \"iso_code\": \"CV\"\r\n    },\r\n    {\r\n        \"name\": \"Cayman Islands\",\r\n        \"iso_code\": \"KY\"\r\n    },\r\n    {\r\n        \"name\": \"Central African Republic\",\r\n        \"iso_code\": \"CF\"\r\n    },\r\n    {\r\n        \"name\": \"Chad\",\r\n        \"iso_code\": \"TD\"\r\n    },\r\n    {\r\n        \"name\": \"Chile\",\r\n        \"iso_code\": \"CL\"\r\n    },\r\n    {\r\n        \"name\": \"China\",\r\n        \"iso_code\": \"CN\"\r\n    },\r\n    {\r\n        \"name\": \"Christmas Island\",\r\n        \"iso_code\": \"CX\"\r\n    },\r\n    {\r\n        \"name\": \"Cocos (Keeling) Islands\",\r\n        \"iso_code\": \"CC\"\r\n    },\r\n    {\r\n        \"name\": \"Colombia\",\r\n        \"iso_code\": \"CO\"\r\n    },\r\n    {\r\n        \"name\": \"Comoros\",\r\n        \"iso_code\": \"KM\"\r\n    },\r\n    {\r\n        \"name\": \"Congo\",\r\n        \"iso_code\": \"CG\"\r\n    },\r\n    {\r\n        \"name\": \"Congo The Democratic Republic Of The\",\r\n        \"iso_code\": \"CD\"\r\n    },\r\n    {\r\n        \"name\": \"Cook Islands\",\r\n        \"iso_code\": \"CK\"\r\n    },\r\n    {\r\n        \"name\": \"Costa Rica\",\r\n        \"iso_code\": \"CR\"\r\n    },\r\n    {\r\n        \"name\": \"Cote D'Ivoire (Ivory Coast)\",\r\n        \"iso_code\": \"CI\"\r\n    },\r\n    {\r\n        \"name\": \"Croatia (Hrvatska)\",\r\n        \"iso_code\": \"HR\"\r\n    },\r\n    {\r\n        \"name\": \"Cuba\",\r\n        \"iso_code\": \"CU\"\r\n    },\r\n    {\r\n        \"name\": \"Cyprus\",\r\n        \"iso_code\": \"CY\"\r\n    },\r\n    {\r\n        \"name\": \"Czech Republic\",\r\n        \"iso_code\": \"CZ\"\r\n    },\r\n    {\r\n        \"name\": \"Denmark\",\r\n        \"iso_code\": \"DK\"\r\n    },\r\n    {\r\n        \"name\": \"Djibouti\",\r\n        \"iso_code\": \"DJ\"\r\n    },\r\n    {\r\n        \"name\": \"Dominica\",\r\n        \"iso_code\": \"DM\"\r\n    },\r\n    {\r\n        \"name\": \"Dominican Republic\",\r\n        \"iso_code\": \"DO\"\r\n    },\r\n    {\r\n        \"name\": \"East Timor\",\r\n        \"iso_code\": \"TP\"\r\n    },\r\n    {\r\n        \"name\": \"Ecuador\",\r\n        \"iso_code\": \"EC\"\r\n    },\r\n    {\r\n        \"name\": \"Egypt\",\r\n        \"iso_code\": \"EG\"\r\n    },\r\n    {\r\n        \"name\": \"El Salvador\",\r\n        \"iso_code\": \"SV\"\r\n    },\r\n    {\r\n        \"name\": \"Equatorial Guinea\",\r\n        \"iso_code\": \"GQ\"\r\n    },\r\n    {\r\n        \"name\": \"Eritrea\",\r\n        \"iso_code\": \"ER\"\r\n    },\r\n    {\r\n        \"name\": \"Estonia\",\r\n        \"iso_code\": \"EE\"\r\n    },\r\n    {\r\n        \"name\": \"Ethiopia\",\r\n        \"iso_code\": \"ET\"\r\n    },\r\n    {\r\n        \"name\": \"External Territories of Australia\",\r\n        \"iso_code\": \"XA\"\r\n    },\r\n    {\r\n        \"name\": \"Falkland Islands\",\r\n        \"iso_code\": \"FK\"\r\n    },\r\n    {\r\n        \"name\": \"Faroe Islands\",\r\n        \"iso_code\": \"FO\"\r\n    },\r\n    {\r\n        \"name\": \"Fiji Islands\",\r\n        \"iso_code\": \"FJ\"\r\n    },\r\n    {\r\n        \"name\": \"Finland\",\r\n        \"iso_code\": \"FI\"\r\n    },\r\n    {\r\n        \"name\": \"France\",\r\n        \"iso_code\": \"FR\"\r\n    },\r\n    {\r\n        \"name\": \"French Guiana\",\r\n        \"iso_code\": \"GF\"\r\n    },\r\n    {\r\n        \"name\": \"French Polynesia\",\r\n        \"iso_code\": \"PF\"\r\n    },\r\n    {\r\n        \"name\": \"French Southern Territories\",\r\n        \"iso_code\": \"TF\"\r\n    },\r\n    {\r\n        \"name\": \"Gabon\",\r\n        \"iso_code\": \"GA\"\r\n    },\r\n    {\r\n        \"name\": \"Gambia The\",\r\n        \"iso_code\": \"GM\"\r\n    },\r\n    {\r\n        \"name\": \"Georgia\",\r\n        \"iso_code\": \"GE\"\r\n    },\r\n    {\r\n        \"name\": \"Germany\",\r\n        \"iso_code\": \"DE\"\r\n    },\r\n    {\r\n        \"name\": \"Ghana\",\r\n        \"iso_code\": \"GH\"\r\n    },\r\n    {\r\n        \"name\": \"Gibraltar\",\r\n        \"iso_code\": \"GI\"\r\n    },\r\n    {\r\n        \"name\": \"Greece\",\r\n        \"iso_code\": \"GR\"\r\n    },\r\n    {\r\n        \"name\": \"Greenland\",\r\n        \"iso_code\": \"GL\"\r\n    },\r\n    {\r\n        \"name\": \"Grenada\",\r\n        \"iso_code\": \"GD\"\r\n    },\r\n    {\r\n        \"name\": \"Guadeloupe\",\r\n        \"iso_code\": \"GP\"\r\n    },\r\n    {\r\n        \"name\": \"Guam\",\r\n        \"iso_code\": \"GU\"\r\n    },\r\n    {\r\n        \"name\": \"Guatemala\",\r\n        \"iso_code\": \"GT\"\r\n    },\r\n    {\r\n        \"name\": \"Guernsey and Alderney\",\r\n        \"iso_code\": \"XU\"\r\n    },\r\n    {\r\n        \"name\": \"Guinea\",\r\n        \"iso_code\": \"GN\"\r\n    },\r\n    {\r\n        \"name\": \"Guinea-Bissau\",\r\n        \"iso_code\": \"GW\"\r\n    },\r\n    {\r\n        \"name\": \"Guyana\",\r\n        \"iso_code\": \"GY\"\r\n    },\r\n    {\r\n        \"name\": \"Haiti\",\r\n        \"iso_code\": \"HT\"\r\n    },\r\n    {\r\n        \"name\": \"Heard and McDonald Islands\",\r\n        \"iso_code\": \"HM\"\r\n    },\r\n    {\r\n        \"name\": \"Honduras\",\r\n        \"iso_code\": \"HN\"\r\n    },\r\n    {\r\n        \"name\": \"Hong Kong S.A.R.\",\r\n        \"iso_code\": \"HK\"\r\n    },\r\n    {\r\n        \"name\": \"Hungary\",\r\n        \"iso_code\": \"HU\"\r\n    },\r\n    {\r\n        \"name\": \"Iceland\",\r\n        \"iso_code\": \"IS\"\r\n    },\r\n    {\r\n        \"name\": \"India\",\r\n        \"iso_code\": \"IN\"\r\n    },\r\n    {\r\n        \"name\": \"Indonesia\",\r\n        \"iso_code\": \"ID\"\r\n    },\r\n    {\r\n        \"name\": \"Iran\",\r\n        \"iso_code\": \"IR\"\r\n    },\r\n    {\r\n        \"name\": \"Iraq\",\r\n        \"iso_code\": \"IQ\"\r\n    },\r\n    {\r\n        \"name\": \"Ireland\",\r\n        \"iso_code\": \"IE\"\r\n    },\r\n    {\r\n        \"name\": \"Israel\",\r\n        \"iso_code\": \"IL\"\r\n    },\r\n    {\r\n        \"name\": \"Italy\",\r\n        \"iso_code\": \"IT\"\r\n    },\r\n    {\r\n        \"name\": \"Jamaica\",\r\n        \"iso_code\": \"JM\"\r\n    },\r\n    {\r\n        \"name\": \"Japan\",\r\n        \"iso_code\": \"JP\"\r\n    },\r\n    {\r\n        \"name\": \"Jersey\",\r\n        \"iso_code\": \"XJ\"\r\n    },\r\n    {\r\n        \"name\": \"Jordan\",\r\n        \"iso_code\": \"JO\"\r\n    },\r\n    {\r\n        \"name\": \"Kazakhstan\",\r\n        \"iso_code\": \"KZ\"\r\n    },\r\n    {\r\n        \"name\": \"Kenya\",\r\n        \"iso_code\": \"KE\"\r\n    },\r\n    {\r\n        \"name\": \"Kiribati\",\r\n        \"iso_code\": \"KI\"\r\n    },\r\n    {\r\n        \"name\": \"Korea North\",\r\n        \"iso_code\": \"KP\"\r\n    },\r\n    {\r\n        \"name\": \"Korea South\",\r\n        \"iso_code\": \"KR\"\r\n    },\r\n    {\r\n        \"name\": \"Kuwait\",\r\n        \"iso_code\": \"KW\"\r\n    },\r\n    {\r\n        \"name\": \"Kyrgyzstan\",\r\n        \"iso_code\": \"KG\"\r\n    },\r\n    {\r\n        \"name\": \"Laos\",\r\n        \"iso_code\": \"LA\"\r\n    },\r\n    {\r\n        \"name\": \"Latvia\",\r\n        \"iso_code\": \"LV\"\r\n    },\r\n    {\r\n        \"name\": \"Lebanon\",\r\n        \"iso_code\": \"LB\"\r\n    },\r\n    {\r\n        \"name\": \"Lesotho\",\r\n        \"iso_code\": \"LS\"\r\n    },\r\n    {\r\n        \"name\": \"Liberia\",\r\n        \"iso_code\": \"LR\"\r\n    },\r\n    {\r\n        \"name\": \"Libya\",\r\n        \"iso_code\": \"LY\"\r\n    },\r\n    {\r\n        \"name\": \"Liechtenstein\",\r\n        \"iso_code\": \"LI\"\r\n    },\r\n    {\r\n        \"name\": \"Lithuania\",\r\n        \"iso_code\": \"LT\"\r\n    },\r\n    {\r\n        \"name\": \"Luxembourg\",\r\n        \"iso_code\": \"LU\"\r\n    },\r\n    {\r\n        \"name\": \"Macau S.A.R.\",\r\n        \"iso_code\": \"MO\"\r\n    },\r\n    {\r\n        \"name\": \"Macedonia\",\r\n        \"iso_code\": \"MK\"\r\n    },\r\n    {\r\n        \"name\": \"Madagascar\",\r\n        \"iso_code\": \"MG\"\r\n    },\r\n    {\r\n        \"name\": \"Malawi\",\r\n        \"iso_code\": \"MW\"\r\n    },\r\n    {\r\n        \"name\": \"Malaysia\",\r\n        \"iso_code\": \"MY\"\r\n    },\r\n    {\r\n        \"name\": \"Maldives\",\r\n        \"iso_code\": \"MV\"\r\n    },\r\n    {\r\n        \"name\": \"Mali\",\r\n        \"iso_code\": \"ML\"\r\n    },\r\n    {\r\n        \"name\": \"Malta\",\r\n        \"iso_code\": \"MT\"\r\n    },\r\n    {\r\n        \"name\": \"Man (Isle of)\",\r\n        \"iso_code\": \"XM\"\r\n    },\r\n    {\r\n        \"name\": \"Marshall Islands\",\r\n        \"iso_code\": \"MH\"\r\n    },\r\n    {\r\n        \"name\": \"Martinique\",\r\n        \"iso_code\": \"MQ\"\r\n    },\r\n    {\r\n        \"name\": \"Mauritania\",\r\n        \"iso_code\": \"MR\"\r\n    },\r\n    {\r\n        \"name\": \"Mauritius\",\r\n        \"iso_code\": \"MU\"\r\n    },\r\n    {\r\n        \"name\": \"Mayotte\",\r\n        \"iso_code\": \"YT\"\r\n    },\r\n    {\r\n        \"name\": \"Mexico\",\r\n        \"iso_code\": \"MX\"\r\n    },\r\n    {\r\n        \"name\": \"Micronesia\",\r\n        \"iso_code\": \"FM\"\r\n    },\r\n    {\r\n        \"name\": \"Moldova\",\r\n        \"iso_code\": \"MD\"\r\n    },\r\n    {\r\n        \"name\": \"Monaco\",\r\n        \"iso_code\": \"MC\"\r\n    },\r\n    {\r\n        \"name\": \"Mongolia\",\r\n        \"iso_code\": \"MN\"\r\n    },\r\n    {\r\n        \"name\": \"Montserrat\",\r\n        \"iso_code\": \"MS\"\r\n    },\r\n    {\r\n        \"name\": \"Morocco\",\r\n        \"iso_code\": \"MA\"\r\n    },\r\n    {\r\n        \"name\": \"Mozambique\",\r\n        \"iso_code\": \"MZ\"\r\n    },\r\n    {\r\n        \"name\": \"Myanmar\",\r\n        \"iso_code\": \"MM\"\r\n    },\r\n    {\r\n        \"name\": \"Namibia\",\r\n        \"iso_code\": \"NA\"\r\n    },\r\n    {\r\n        \"name\": \"Nauru\",\r\n        \"iso_code\": \"NR\"\r\n    },\r\n    {\r\n        \"name\": \"Nepal\",\r\n        \"iso_code\": \"NP\"\r\n    },\r\n    {\r\n        \"name\": \"Netherlands Antilles\",\r\n        \"iso_code\": \"AN\"\r\n    },\r\n    {\r\n        \"name\": \"Netherlands The\",\r\n        \"iso_code\": \"NL\"\r\n    },\r\n    {\r\n        \"name\": \"New Caledonia\",\r\n        \"iso_code\": \"NC\"\r\n    },\r\n    {\r\n        \"name\": \"New Zealand\",\r\n        \"iso_code\": \"NZ\"\r\n    },\r\n    {\r\n        \"name\": \"Nicaragua\",\r\n        \"iso_code\": \"NI\"\r\n    },\r\n    {\r\n        \"name\": \"Niger\",\r\n        \"iso_code\": \"NE\"\r\n    },\r\n    {\r\n        \"name\": \"Nigeria\",\r\n        \"iso_code\": \"NG\"\r\n    },\r\n    {\r\n        \"name\": \"Niue\",\r\n        \"iso_code\": \"NU\"\r\n    },\r\n    {\r\n        \"name\": \"Norfolk Island\",\r\n        \"iso_code\": \"NF\"\r\n    },\r\n    {\r\n        \"name\": \"Northern Mariana Islands\",\r\n        \"iso_code\": \"MP\"\r\n    },\r\n    {\r\n        \"name\": \"Norway\",\r\n        \"iso_code\": \"NO\"\r\n    },\r\n    {\r\n        \"name\": \"Oman\",\r\n        \"iso_code\": \"OM\"\r\n    },\r\n    {\r\n        \"name\": \"Pakistan\",\r\n        \"iso_code\": \"PK\"\r\n    },\r\n    {\r\n        \"name\": \"Palau\",\r\n        \"iso_code\": \"PW\"\r\n    },\r\n    {\r\n        \"name\": \"Palestinian Territory Occupied\",\r\n        \"iso_code\": \"PS\"\r\n    },\r\n    {\r\n        \"name\": \"Panama\",\r\n        \"iso_code\": \"PA\"\r\n    },\r\n    {\r\n        \"name\": \"Papua new Guinea\",\r\n        \"iso_code\": \"PG\"\r\n    },\r\n    {\r\n        \"name\": \"Paraguay\",\r\n        \"iso_code\": \"PY\"\r\n    },\r\n    {\r\n        \"name\": \"Peru\",\r\n        \"iso_code\": \"PE\"\r\n    },\r\n    {\r\n        \"name\": \"Philippines\",\r\n        \"iso_code\": \"PH\"\r\n    },\r\n    {\r\n        \"name\": \"Pitcairn Island\",\r\n        \"iso_code\": \"PN\"\r\n    },\r\n    {\r\n        \"name\": \"Poland\",\r\n        \"iso_code\": \"PL\"\r\n    },\r\n    {\r\n        \"name\": \"Portugal\",\r\n        \"iso_code\": \"PT\"\r\n    },\r\n    {\r\n        \"name\": \"Puerto Rico\",\r\n        \"iso_code\": \"PR\"\r\n    },\r\n    {\r\n        \"name\": \"Qatar\",\r\n        \"iso_code\": \"QA\"\r\n    },\r\n    {\r\n        \"name\": \"Reunion\",\r\n        \"iso_code\": \"RE\"\r\n    },\r\n    {\r\n        \"name\": \"Romania\",\r\n        \"iso_code\": \"RO\"\r\n    },\r\n    {\r\n        \"name\": \"Russia\",\r\n        \"iso_code\": \"RU\"\r\n    },\r\n    {\r\n        \"name\": \"Rwanda\",\r\n        \"iso_code\": \"RW\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Helena\",\r\n        \"iso_code\": \"SH\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Kitts And Nevis\",\r\n        \"iso_code\": \"KN\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Lucia\",\r\n        \"iso_code\": \"LC\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Pierre and Miquelon\",\r\n        \"iso_code\": \"PM\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Vincent And The Grenadines\",\r\n        \"iso_code\": \"VC\"\r\n    },\r\n    {\r\n        \"name\": \"Samoa\",\r\n        \"iso_code\": \"WS\"\r\n    },\r\n    {\r\n        \"name\": \"San Marino\",\r\n        \"iso_code\": \"SM\"\r\n    },\r\n    {\r\n        \"name\": \"Sao Tome and Principe\",\r\n        \"iso_code\": \"ST\"\r\n    },\r\n    {\r\n        \"name\": \"Saudi Arabia\",\r\n        \"iso_code\": \"SA\"\r\n    },\r\n    {\r\n        \"name\": \"Senegal\",\r\n        \"iso_code\": \"SN\"\r\n    },\r\n    {\r\n        \"name\": \"Serbia\",\r\n        \"iso_code\": \"RS\"\r\n    },\r\n    {\r\n        \"name\": \"Seychelles\",\r\n        \"iso_code\": \"SC\"\r\n    },\r\n    {\r\n        \"name\": \"Sierra Leone\",\r\n        \"iso_code\": \"SL\"\r\n    },\r\n    {\r\n        \"name\": \"Singapore\",\r\n        \"iso_code\": \"SG\"\r\n    },\r\n    {\r\n        \"name\": \"Slovakia\",\r\n        \"iso_code\": \"SK\"\r\n    },\r\n    {\r\n        \"name\": \"Slovenia\",\r\n        \"iso_code\": \"SI\"\r\n    },\r\n    {\r\n        \"name\": \"Smaller Territories of the UK\",\r\n        \"iso_code\": \"XG\"\r\n    },\r\n    {\r\n        \"name\": \"Solomon Islands\",\r\n        \"iso_code\": \"SB\"\r\n    },\r\n    {\r\n        \"name\": \"Somalia\",\r\n        \"iso_code\": \"SO\"\r\n    },\r\n    {\r\n        \"name\": \"South Africa\",\r\n        \"iso_code\": \"ZA\"\r\n    },\r\n    {\r\n        \"name\": \"South Georgia\",\r\n        \"iso_code\": \"GS\"\r\n    },\r\n    {\r\n        \"name\": \"South Sudan\",\r\n        \"iso_code\": \"SS\"\r\n    },\r\n    {\r\n        \"name\": \"Spain\",\r\n        \"iso_code\": \"ES\"\r\n    },\r\n    {\r\n        \"name\": \"Sri Lanka\",\r\n        \"iso_code\": \"LK\"\r\n    },\r\n    {\r\n        \"name\": \"Sudan\",\r\n        \"iso_code\": \"SD\"\r\n    },\r\n    {\r\n        \"name\": \"Suriname\",\r\n        \"iso_code\": \"SR\"\r\n    },\r\n    {\r\n        \"name\": \"Svalbard And Jan Mayen Islands\",\r\n        \"iso_code\": \"SJ\"\r\n    },\r\n    {\r\n        \"name\": \"Swaziland\",\r\n        \"iso_code\": \"SZ\"\r\n    },\r\n    {\r\n        \"name\": \"Sweden\",\r\n        \"iso_code\": \"SE\"\r\n    },\r\n    {\r\n        \"name\": \"Switzerland\",\r\n        \"iso_code\": \"CH\"\r\n    },\r\n    {\r\n        \"name\": \"Syria\",\r\n        \"iso_code\": \"SY\"\r\n    },\r\n    {\r\n        \"name\": \"Taiwan\",\r\n        \"iso_code\": \"TW\"\r\n    },\r\n    {\r\n        \"name\": \"Tajikistan\",\r\n        \"iso_code\": \"TJ\"\r\n    },\r\n    {\r\n        \"name\": \"Tanzania\",\r\n        \"iso_code\": \"TZ\"\r\n    },\r\n    {\r\n        \"name\": \"Thailand\",\r\n        \"iso_code\": \"TH\"\r\n    },\r\n    {\r\n        \"name\": \"Togo\",\r\n        \"iso_code\": \"TG\"\r\n    },\r\n    {\r\n        \"name\": \"Tokelau\",\r\n        \"iso_code\": \"TK\"\r\n    },\r\n    {\r\n        \"name\": \"Tonga\",\r\n        \"iso_code\": \"TO\"\r\n    },\r\n    {\r\n        \"name\": \"Trinidad And Tobago\",\r\n        \"iso_code\": \"TT\"\r\n    },\r\n    {\r\n        \"name\": \"Tunisia\",\r\n        \"iso_code\": \"TN\"\r\n    },\r\n    {\r\n        \"name\": \"Turkey\",\r\n        \"iso_code\": \"TR\"\r\n    },\r\n    {\r\n        \"name\": \"Turkmenistan\",\r\n        \"iso_code\": \"TM\"\r\n    },\r\n    {\r\n        \"name\": \"Turks And Caicos Islands\",\r\n        \"iso_code\": \"TC\"\r\n    },\r\n    {\r\n        \"name\": \"Tuvalu\",\r\n        \"iso_code\": \"TV\"\r\n    },\r\n    {\r\n        \"name\": \"Uganda\",\r\n        \"iso_code\": \"UG\"\r\n    },\r\n    {\r\n        \"name\": \"Ukraine\",\r\n        \"iso_code\": \"UA\"\r\n    },\r\n    {\r\n        \"name\": \"United Arab Emirates\",\r\n        \"iso_code\": \"AE\"\r\n    },\r\n    {\r\n        \"name\": \"United Kingdom\",\r\n        \"iso_code\": \"GB\"\r\n    },\r\n    {\r\n        \"name\": \"United States\",\r\n        \"iso_code\": \"US\"\r\n    },\r\n    {\r\n        \"name\": \"United States Minor Outlying Islands\",\r\n        \"iso_code\": \"UM\"\r\n    },\r\n    {\r\n        \"name\": \"Uruguay\",\r\n        \"iso_code\": \"UY\"\r\n    },\r\n    {\r\n        \"name\": \"Uzbekistan\",\r\n        \"iso_code\": \"UZ\"\r\n    },\r\n    {\r\n        \"name\": \"Vanuatu\",\r\n        \"iso_code\": \"VU\"\r\n    },\r\n    {\r\n        \"name\": \"Vatican City State (Holy See)\",\r\n        \"iso_code\": \"VA\"\r\n    },\r\n    {\r\n        \"name\": \"Venezuela\",\r\n        \"iso_code\": \"VE\"\r\n    },\r\n    {\r\n        \"name\": \"Vietnam\",\r\n        \"iso_code\": \"VN\"\r\n    },\r\n    {\r\n        \"name\": \"Virgin Islands (British)\",\r\n        \"iso_code\": \"VG\"\r\n    },\r\n    {\r\n        \"name\": \"Virgin Islands (US)\",\r\n        \"iso_code\": \"VI\"\r\n    },\r\n    {\r\n        \"name\": \"Wallis And Futuna Islands\",\r\n        \"iso_code\": \"WF\"\r\n    },\r\n    {\r\n        \"name\": \"Western Sahara\",\r\n        \"iso_code\": \"EH\"\r\n    },\r\n    {\r\n        \"name\": \"Yemen\",\r\n        \"iso_code\": \"YE\"\r\n    },\r\n    {\r\n        \"name\": \"Yugoslavia\",\r\n        \"iso_code\": \"YU\"\r\n    },\r\n    {\r\n        \"name\": \"Zambia\",\r\n        \"iso_code\": \"ZM\"\r\n    },\r\n    {\r\n        \"name\": \"Zimbabwe\",\r\n        \"iso_code\": \"ZW\"\r\n    }\r\n]\r\n\r\nexport default country;\r\n","/* eslint-disable no-param-reassign */\r\nimport {\r\n  MENU_SET_CLASSNAMES,\r\n  MENU_CONTAINER_ADD_CLASSNAME,\r\n  MENU_CLICK_MOBILE_MENU,\r\n  MENU_CHANGE_DEFAULT_CLASSES,\r\n  MENU_CHANGE_HAS_SUB_ITEM_STATUS,\r\n} from '../contants';\r\n\r\nexport const changeSelectedMenuHasSubItems = (payload) => {\r\n  return {\r\n    type: MENU_CHANGE_HAS_SUB_ITEM_STATUS,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const changeDefaultClassnames = (strCurrentClasses) => {\r\n  return {\r\n    type: MENU_CHANGE_DEFAULT_CLASSES,\r\n    payload: strCurrentClasses,\r\n  };\r\n};\r\n\r\nexport const addContainerClassname = (classname, strCurrentClasses) => {\r\n  const newClasses =\r\n    !strCurrentClasses.indexOf(classname) > -1\r\n      ? `${strCurrentClasses} ${classname}`\r\n      : strCurrentClasses;\r\n  return {\r\n    type: MENU_CONTAINER_ADD_CLASSNAME,\r\n    payload: newClasses,\r\n  };\r\n};\r\n\r\nexport const clickOnMobileMenu = (strCurrentClasses) => {\r\n  const currentClasses = strCurrentClasses\r\n    ? strCurrentClasses\r\n        .split(' ')\r\n        .filter((x) => x !== '' && x !== 'sub-show-temporary')\r\n    : '';\r\n  let nextClasses = '';\r\n  if (currentClasses.includes('main-show-temporary')) {\r\n    nextClasses = currentClasses\r\n      .filter((x) => x !== 'main-show-temporary')\r\n      .join(' ');\r\n  } else {\r\n    nextClasses = `${currentClasses.join(' ')} main-show-temporary`;\r\n  }\r\n  return {\r\n    type: MENU_CLICK_MOBILE_MENU,\r\n    payload: { containerClassnames: nextClasses, menuClickCount: 0 },\r\n  };\r\n};\r\n\r\nexport const setContainerClassnames = (\r\n  clickIndex,\r\n  strCurrentClasses,\r\n  selectedMenuHasSubItems\r\n) => {\r\n  const currentClasses = strCurrentClasses\r\n    ? strCurrentClasses.split(' ').filter((x) => x !== '')\r\n    : '';\r\n  let nextClasses = '';\r\n  if (!selectedMenuHasSubItems) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      (clickIndex % 4 === 0 || clickIndex % 4 === 3)\r\n    ) {\r\n      clickIndex = 1;\r\n    }\r\n    if (currentClasses.includes('menu-sub-hidden') && clickIndex % 4 === 2) {\r\n      clickIndex = 0;\r\n    }\r\n    if (\r\n      currentClasses.includes('menu-hidden') &&\r\n      (clickIndex % 4 === 2 || clickIndex % 4 === 3)\r\n    ) {\r\n      clickIndex = 0;\r\n    }\r\n  }\r\n\r\n  if (clickIndex % 4 === 0) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden';\r\n    }\r\n    clickIndex = 0;\r\n  } else if (clickIndex % 4 === 1) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden main-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default sub-hidden';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden main-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden main-show-temporary';\r\n    }\r\n  } else if (clickIndex % 4 === 2) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default main-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden main-show-temporary sub-show-temporary';\r\n    }\r\n  } else if (clickIndex % 4 === 3) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden sub-show-temporary';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default sub-hidden';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden sub-show-temporary';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden main-show-temporary';\r\n    }\r\n  }\r\n  if (currentClasses.includes('menu-mobile')) {\r\n    nextClasses += ' menu-mobile';\r\n  }\r\n  return {\r\n    type: MENU_SET_CLASSNAMES,\r\n    payload: { containerClassnames: nextClasses, menuClickCount: clickIndex },\r\n  };\r\n};\r\n","import { setCurrentLanguage } from 'helpers/Utils';\r\nimport { CHANGE_LOCALE } from '../contants';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const changeLocale = (locale) => {\r\n  setCurrentLanguage(locale);\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    payload: locale,\r\n  };\r\n};\r\n","export const ApartmentTypeData = [\r\n  { label: \"Independent House/Villa\", value: 0 },\r\n  { label: \"Gated Community Villa\", value: 1 },\r\n  { label: \"Apartment\", value: 2 },\r\n];\r\n\r\nexport const BHKData = [\r\n  { label: \"1 BHK\", value: 0 },\r\n  { label: \"2 BHK\", value: 1 },\r\n  { label: \"3 BHK\", value: 2 },\r\n];\r\n\r\nexport const FloorData = [\r\n  { label: \"Ground Floor\", value: 0 },\r\n  { label: \"1\", value: 1 },\r\n  { label: \"2\", value: 2 },\r\n  { label: \"3\", value: 3 },\r\n  { label: \"4\", value: 4 },\r\n  { label: \"5\", value: 5 },\r\n  { label: \"6\", value: 6 },\r\n];\r\n\r\nexport const RoomTypeData = [\r\n  { label: \"Single Room\", value: 0 },\r\n  { label: \"Shared Room\", value: 1 },\r\n];\r\n\r\nexport const WorkPlaceTypeData = [\r\n  { label: \"Onsite\", value: 0 },\r\n  { label: \"Hybrid\", value: 1 },\r\n  { label: \"Remote\", value: 2 },\r\n];\r\n\r\nexport const EmploymentTypeData = [\r\n  { label: \"Full time\", value: 0 },\r\n  { label: \"Part time\", value: 1 },\r\n  { label: \"Temporary\", value: 2 },\r\n  { label: \"Volunteer\", value: 3 },\r\n  { label: \"Internship\", value: 4 },\r\n  { label: \"Contract\", value: 5 },\r\n];\r\n\r\nexport const RoomMateType = [\r\n  { label: \"Male\", value: 0 },\r\n  { label: \"Female\", value: 1 },\r\n];\r\n\r\nexport const parkingOptions = [\r\n  { label: \"Car\", value: 0 },\r\n  { label: \"Bike\", value: 1 },\r\n  { label: \"Car and Bike\", value: 2 },\r\n  { label: \"NO\", value: 3 },\r\n];\r\n","const language = [\r\n    {\r\n        \"name\": \"Tamil\",\r\n        \"iso_code\": \"TA\"\r\n    },{\r\n        \"name\": \"English\",\r\n        \"iso_code\": \"EN\"\r\n    },\r\n    {\r\n        \"name\": \"Malayalam\",\r\n        \"iso_code\": \"ML\"\r\n    },\r\n    {\r\n        \"name\": \"Hindi\",\r\n        \"iso_code\": \"HI\"\r\n    },\r\n    {\r\n        \"name\": \"Bengali\",\r\n        \"iso_code\": \"BN\"\r\n    },\r\n    {\r\n        \"name\": \"Marathi\",\r\n        \"iso_code\": \"MR\"\r\n    },\r\n    {\r\n        \"name\": \"Telugu\",\r\n        \"iso_code\": \"TE\"\r\n    },\r\n    {\r\n        \"name\": \"Gujarati\",\r\n        \"iso_code\": \"GU\"\r\n    },\r\n    {\r\n        \"name\": \"Urdu\",\r\n        \"iso_code\": \"UR\"\r\n    },\r\n    {\r\n        \"name\": \"Kannada\",\r\n        \"iso_code\": \"KA\"\r\n    },\r\n    {\r\n        \"name\": \"Odia\",\r\n        \"iso_code\": \"OR\"\r\n    },\r\n    {\r\n        \"name\": \"Punjabi\",\r\n        \"iso_code\": \"PA\"\r\n    },\r\n    {\r\n        \"name\": \"Assamese\",\r\n        \"iso_code\": \"AS\"\r\n    },\r\n    {\r\n        \"name\": \"Maithili\",\r\n        \"iso_code\": \"MI\"\r\n    },\r\n    {\r\n        \"name\": \"Bhili/Bhilodi\",\r\n        \"iso_code\": \"BH\"\r\n    },\r\n    {\r\n        \"name\": \"Santali\",\r\n        \"iso_code\": \"SA\"\r\n    },\r\n    {\r\n        \"name\": \"Kashmiri\",\r\n        \"iso_code\": \"KS\"\r\n    },\r\n    {\r\n        \"name\": \"Nepali\",\r\n        \"iso_code\": \"NE\"\r\n    },\r\n    {\r\n        \"name\": \"Sindhi\",\r\n        \"iso_code\": \"SD\"\r\n    },\r\n    {\r\n        \"name\": \"Dogri\",\r\n        \"iso_code\": \"DO\"\r\n    },\r\n    {\r\n        \"name\": \"Konkani\",\r\n        \"iso_code\": \"KN\"\r\n    },\r\n    {\r\n        \"name\": \"Bodo\",\r\n        \"iso_code\": \"BO\"\r\n    },\r\n    {\r\n        \"name\": \"Manipuri\",\r\n        \"iso_code\": \"MN\"\r\n    },\r\n    {\r\n        \"name\": \"Mandarin Chinese\",\r\n        \"iso_code\": \"ZH\"\r\n    },\r\n    {\r\n        \"name\": \"Spanish\",\r\n        \"iso_code\": \"ES\"\r\n    },\r\n    {\r\n        \"name\": \"French\",\r\n        \"iso_code\": \"FR\"\r\n    },\r\n    {\r\n        \"name\": \"German\",\r\n        \"iso_code\": \"DE\"\r\n    },\r\n    {\r\n        \"name\": \"Portuguese\",\r\n        \"iso_code\": \"PT\"\r\n    },\r\n    {\r\n        \"name\": \"Russian\",\r\n        \"iso_code\": \"RU\"\r\n    },\r\n    {\r\n        \"name\": \"Japanese\",\r\n        \"iso_code\": \"JA\"\r\n    },\r\n    {\r\n        \"name\": \"Korean\",\r\n        \"iso_code\": \"KO\"\r\n    },\r\n    {\r\n        \"name\": \"Italian\",\r\n        \"iso_code\": \"IT\"\r\n    },\r\n    {\r\n        \"name\": \"Dutch\",\r\n        \"iso_code\": \"NL\"\r\n    },\r\n    {\r\n        \"name\": \"Greek\",\r\n        \"iso_code\": \"EL\"\r\n    },\r\n    {\r\n        \"name\": \"Turkish\",\r\n        \"iso_code\": \"TR\"\r\n    },\r\n    {\r\n        \"name\": \"Swedish\",\r\n        \"iso_code\": \"SV\"\r\n    },\r\n    {\r\n        \"name\": \"Polish\",\r\n        \"iso_code\": \"PL\"\r\n    },\r\n    {\r\n        \"name\": \"Ukrainian\",\r\n        \"iso_code\": \"UK\"\r\n    },\r\n    {\r\n        \"name\": \"Hebrew\",\r\n        \"iso_code\": \"HE\"\r\n    },\r\n    {\r\n        \"name\": \"Arabic\",\r\n        \"iso_code\": \"AR\"\r\n    },\r\n    {\r\n        \"name\": \"Hungarian\",\r\n        \"iso_code\": \"HU\"\r\n    },\r\n    {\r\n        \"name\": \"Thai\",\r\n        \"iso_code\": \"TH\"\r\n    },\r\n    {\r\n        \"name\": \"Czech\",\r\n        \"iso_code\": \"CS\"\r\n    },\r\n    {\r\n        \"name\": \"Finnish\",\r\n        \"iso_code\": \"FI\"\r\n    },\r\n    {\r\n        \"name\": \"Danish\",\r\n        \"iso_code\": \"DA\"\r\n    },\r\n    {\r\n        \"name\": \"Norwegian\",\r\n        \"iso_code\": \"NO\"\r\n    },\r\n    {\r\n        \"name\": \"Vietnamese\",\r\n        \"iso_code\": \"VI\"\r\n    }\r\n]\r\n\r\n\r\nexport default language;\r\n","const indentityStatusList = [\r\n  { value: \"IMMIGRANT\", label: \"IMMIGRANT\" },\r\n  { value: \"PR_CITIZEN\", label: \"PR_CITIZEN\" },\r\n];\r\nexport default indentityStatusList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Rater from 'react-rater';\r\nimport 'react-rater/lib/react-rater.css';\r\n\r\nconst Rating = (props) => (\r\n  <Rater {...props}>\r\n    <Star />\r\n  </Rater>\r\n);\r\n\r\nconst Star = (props) => {\r\n  const starProps = { ...props };\r\n  const nameMap = {\r\n    isDisabled: 'is-disabled',\r\n    isActive: 'is-active',\r\n    isActiveHalf: 'is-active-half',\r\n    willBeActive: 'will-be-active',\r\n  };\r\n\r\n  const className = Object.keys(nameMap)\r\n    // eslint-disable-next-line\r\n    .filter((prop) => (delete starProps[prop], props[prop]))\r\n    .map((prop) => nameMap[prop])\r\n    .join(' ');\r\n  return <div className={`react-rater-star ${className}`} {...starProps} />;\r\n};\r\n\r\nStar.defaultProps = {\r\n  willBeActive: false,\r\n  isActive: false,\r\n  isActiveHalf: false,\r\n  isDisabled: false,\r\n};\r\n\r\nStar.propTypes = {\r\n  isActive: PropTypes.bool,\r\n  isActiveHalf: PropTypes.bool,\r\n  willBeActive: PropTypes.bool,\r\n  isDisabled: PropTypes.bool,\r\n};\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport { components } from 'react-select';\r\n\r\nconst CustomSelectInput = (props) => {\r\n  const customProps = { ...props };\r\n  delete customProps.autoCorrect;\r\n  delete customProps.autoCapitalize;\r\n  return <components.Input {...customProps} />;\r\n};\r\n\r\nexport default CustomSelectInput;\r\n","// import react from \"react\";\r\n\r\nconst validateFirstName = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter your first name\";\r\n  } else if (!/^[a-zA-Z]+$/.test(value)) {\r\n    error = \"Only alphabets are allowed\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n\r\n  return error;\r\n};\r\n\r\nconst validateLastName = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter your first name\";\r\n  } else if (!/^[a-zA-Z]+$/.test(value)) {\r\n    error = \"Only alphabets are allowed\";\r\n  } else if (value.length < 1) {\r\n    error = \"Must be longer than 1 characters\";\r\n  }\r\n\r\n  return error;\r\n};\r\n\r\nconst validateEmail = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter your email address\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n    error = \"Invalid email address\";\r\n  }\r\n  return error;\r\n};\r\n\r\nconst validatePassword = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please choose a password\";\r\n  } else if (value.length < 6) {\r\n    error = \"Password must be longer than 6 characters\";\r\n  }\r\n  return error;\r\n};\r\nfunction validateCategory(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a category\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateLocation(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a location\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateDomain(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a domain\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateIdentityStatus(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a identity status\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateCompany(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please provide the company name\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateJobTitle(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter a job title\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\n// function validateSkills(value) {\r\n//   let error;\r\n//   if (!value) {\r\n//     error = \"Please specify a skill\";\r\n//   } else if (value.length < 2) {\r\n//       error = \"Must be longer than 2 characters\";\r\n//     }\r\n//   return error;\r\n// }\r\n// function validateSkills(value) {\r\n//   let error;\r\n//   if (!value || value.length === 0) {\r\n//      error = \"Please specify a skill\";\r\n//   } else if (value.some(tag => tag.length < 2)) {\r\n//      error = \"Each skill must be longer than 2 characters\";\r\n//   }\r\n//   return error;\r\n//  }\r\n\r\nconst validateSkills = (value) => {\r\n  if (!Array.isArray(value)) {\r\n    return \"Skills must be an array of strings\";\r\n  }\r\n\r\n  if (value.length === 0) {\r\n    return \"Please add at least one skill\";\r\n  }\r\n\r\n  const isString = value.every((skill) => typeof skill === \"string\");\r\n  if (!isString) {\r\n    return \"Skills must be strings\";\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nfunction validateBio(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please provide a bio\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateLinkedinUrl(value) {\r\n  let error;\r\n\r\n  if (!value) {\r\n    error = \"Please provide your LinkedIn URL\";\r\n  } else if (\r\n    !/^https?:\\/\\/(?:www\\.)?linkedin\\.com\\/(?:[a-z]{2,3}\\.)?in\\/[a-zA-Z0-9_-]+\\/?$/i.test(\r\n      value\r\n    )\r\n  ) {\r\n    error = \"Invalid LinkedIn URL format\";\r\n  }\r\n  return error;\r\n}\r\n\r\n// function validateLinkedinUrl(value) {\r\n//   let error;\r\n\r\n//   if (!value) {\r\n//       error = \"Please provide your LinkedIn URL\";\r\n//   } else if (!/^linkedin\\.(com|in)\\/(in|pub|profile|company)\\/[a-zA-Z0-9_-]+\\/?$/i.test(value)) {\r\n//       error = \"Invalid LinkedIn URL format\";\r\n//   }\r\n//   return error;\r\n// }\r\n\r\nfunction validateReasonForMentor(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateAchievement(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\n\r\n// function validateFile(value) {\r\n//   let error;\r\n//   if (!value) {\r\n//     error = \"This field is required.\";\r\n//   }\r\n//   //  else if (![\"image/jpeg\", \"image/png\"].includes(file.type)) {\r\n//   //   error = \"Unsupported file type. Only JPEG and PNG images are allowed\";\r\n//   // }\r\n//   return error;\r\n// }\r\n// function validateFile(value) {\r\n//   let error;\r\n\r\n//   if (!value) {\r\n//     error = \"This field is required.\";\r\n//   } else {\r\n//     const fileType = value.type;\r\n//     if (![\"image/jpeg\", \"image/png\"].includes(fileType)) {\r\n//       error = \"Unsupported file type. Only JPEG and PNG images are allowed\";\r\n//     }\r\n//   }\r\n\r\n//   return error;\r\n// }\r\nconst validateFile = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select an image file\";\r\n  } else if (!value.type.startsWith(\"image/\")) {\r\n    error = \"Please select a valid image file\";\r\n  }\r\n  return error;\r\n};\r\n\r\nexport {\r\n  validateAchievement,\r\n  validateBio,\r\n  validateCategory,\r\n  validateCompany,\r\n  validateDomain,\r\n  validateEmail,\r\n  validateFile,\r\n  validateFirstName,\r\n  validateIdentityStatus,\r\n  validateJobTitle,\r\n  validateLastName,\r\n  validateLinkedinUrl,\r\n  validateLocation,\r\n  validatePassword,\r\n  validateReasonForMentor,\r\n  validateSkills,\r\n};\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nconst ThumbnailLetters = ({ text, color, className, rounded, small, extraSmall }) => {\r\n  let letters = '';\r\n  if (text.indexOf(' ') > -1) {\r\n    text.split(' ').forEach((word) => {\r\n      if (word.length > 1) letters += word.slice(0, 1);\r\n    });\r\n  } else {\r\n    letters += text.slice(0, 2);\r\n  }\r\n\r\n  if (letters.length > 2) {\r\n    letters = letters.slice(0, 2);\r\n  }\r\n\r\n  // Define inline styles for extra small size\r\n  const extraSmallStyles = {\r\n    width: '40px',\r\n    height: '40px',\r\n    fontSize: '1.0em',\r\n    padding: '.7em',\r\n  };\r\n\r\n  // Define inline styles for small size\r\n  const smallStyles = {\r\n    width: '50px',\r\n    height: '50px',\r\n    fontSize: '0.75em',\r\n    padding: '0.25em',\r\n  };\r\n\r\n  let appliedStyles = {};\r\n  if (extraSmall) {\r\n    appliedStyles = extraSmallStyles;\r\n  } else if (small) {\r\n    appliedStyles = smallStyles;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`align-self-center list-thumbnail-letters ${\r\n        color ? `btn-${color}` : ''\r\n      } ${className} ${classnames({\r\n        'rounded-circle': rounded,\r\n      })}`}\r\n      title={text}\r\n      style={appliedStyles}\r\n    >\r\n      {letters}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ThumbnailLetters);\r\n","/* eslint-disable react/destructuring-assignment */\r\nimport Slider, { Range } from \"rc-slider\";\r\nimport \"rc-slider/assets/index.css\";\r\n\r\nconst sliderHandle = ({ value, dragging, index, offset, ...restProps }) => {\r\n  const positionStyle = {\r\n    position: \"absolute\",\r\n    left: `${offset}%`,\r\n  };\r\n  return (\r\n    <span key={index}>\r\n      <div className=\"rc-slider-tooltip \" style={positionStyle}>\r\n        {`₹${value}`}\r\n      </div>\r\n      <Slider.Handle value={value} offset={offset} {...restProps} />\r\n    </span>\r\n  );\r\n};\r\n\r\nconst SliderTooltip = (props) => {\r\n  return <Slider handle={props.handle || sliderHandle} {...props} />;\r\n};\r\n\r\nconst RangeTooltip = (props) => {\r\n  return <Range handle={props.handle || sliderHandle} {...props} />;\r\n};\r\nexport { RangeTooltip, SliderTooltip };\r\n","// eslint-disable react/forbid-prop-types\r\nimport React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Glide from '@glidejs/glide';\r\nimport { getDirection } from 'helpers/Utils';\r\nimport '@glidejs/glide/dist/css/glide.core.min.css';\r\n\r\nlet resizeTimeOut = -1;\r\nlet mountTimeOut = -1;\r\n\r\nfunction GlideComponent(props) {\r\n  let carousel;\r\n  let glideCarousel;\r\n\r\n  const onResize = () => {\r\n    clearTimeout(resizeTimeOut);\r\n    resizeTimeOut = setTimeout(() => {\r\n      glideCarousel.update();\r\n      resizeTimeOut = -1;\r\n    }, 500);\r\n  };\r\n\r\n  const initGlide = () => {\r\n    glideCarousel = new Glide(carousel, {\r\n      /* eslint-disable-next-line react/destructuring-assignment */\r\n      ...props.settings,\r\n      direction: getDirection().direction,\r\n    });\r\n    glideCarousel.mount();\r\n    glideCarousel.on('resize', onResize);\r\n    mountTimeOut = setTimeout(() => {\r\n      const event = document.createEvent('HTMLEvents');\r\n      event.initEvent('resize', false, false);\r\n      window.dispatchEvent(event);\r\n    }, 500);\r\n  };\r\n\r\n  const destroyGlide = () => {\r\n    clearTimeout(resizeTimeOut);\r\n    clearTimeout(mountTimeOut);\r\n    if (glideCarousel) {\r\n      glideCarousel.destroy();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    initGlide();\r\n    return () => {\r\n      destroyGlide();\r\n    };\r\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\r\n  }, []);\r\n\r\n  const renderDots = () => {\r\n    /* eslint-disable-next-line react/destructuring-assignment */\r\n    const total = React.Children.count(props.children);\r\n    const dots = [];\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < total; i++) {\r\n      dots.push(\r\n        <button\r\n          type=\"button\"\r\n          className=\"glide__bullet slider-dot\"\r\n          key={i}\r\n          data-glide-dir={`=${i}`}\r\n        />\r\n      );\r\n    }\r\n    return dots;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* eslint-disable-next-line no-return-assign */}\r\n      <div className=\"glide\" ref={(node) => (carousel = node)}>\r\n        <div data-glide-el=\"track\" className=\"glide__track\">\r\n          {/* eslint-disable-next-line react/destructuring-assignment */}\r\n          <div className=\"glide__slides\">{props.children}</div>\r\n        </div>\r\n        {/* eslint-disable-next-line react/destructuring-assignment */}\r\n        {!props.settings.hideNav && (\r\n          <div className=\"glide__arrows slider-nav\" data-glide-el=\"controls\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"glide__arrow glide__arrow--left left-arrow btn btn-link\"\r\n              data-glide-dir=\"<\"\r\n            >\r\n              <i className=\"simple-icon-arrow-left\" />\r\n            </button>\r\n\r\n            <div\r\n              className=\"glide__bullets slider-dot-container\"\r\n              data-glide-el=\"controls[nav]\"\r\n            >\r\n              {renderDots()}\r\n            </div>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"glide__arrow glide__arrow--right right-arrow btn btn-link\"\r\n              data-glide-dir=\">\"\r\n            >\r\n              <i className=\"simple-icon-arrow-right\" />\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nGlideComponent.defaultProps = {\r\n  settings: {},\r\n};\r\n\r\nGlideComponent.propTypes = {\r\n  settings: PropTypes.shape({\r\n    type: PropTypes.string,\r\n    startAt: PropTypes.number,\r\n    perView: PropTypes.number,\r\n    focusAt: PropTypes.oneOf([PropTypes.number, PropTypes.string]),\r\n    gap: PropTypes.number,\r\n    autoplay: PropTypes.bool,\r\n    hoverpause: PropTypes.bool,\r\n    keyboard: PropTypes.bool,\r\n    bound: PropTypes.bool,\r\n    swipeThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\r\n    dragThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\r\n    perTouch: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\r\n    touchRatio: PropTypes.number,\r\n    touchAngle: PropTypes.number,\r\n    animationDuration: PropTypes.number,\r\n    rewind: PropTypes.bool,\r\n    rewindDuration: PropTypes.number,\r\n    animationTimingFunc: PropTypes.string,\r\n    direction: PropTypes.string,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    peek: PropTypes.object,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    breakpoints: PropTypes.object,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    classes: PropTypes.object,\r\n    throttle: PropTypes.number,\r\n  }),\r\n  // id: PropTypes.string,\r\n  // className: PropTypes.string,\r\n};\r\n\r\nexport default GlideComponent;\r\n","/* eslint-disable react/no-array-index-key */\r\nimport axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { RangeTooltip } from \"components/common/SliderTooltips\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  // CustomInput,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  // FormGroup,\r\n  // Label,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport DomainList from \"../AlumniRegister/DomainList\";\r\nimport country from \"../my-login/Country\";\r\n\r\nconst MentorFilter = ({\r\n  onSkillsChange,\r\n  onToolsChange,\r\n  onIndustryChange,\r\n  onUniversityChange,\r\n  onPriceChange,\r\n  onLocationChange,\r\n  onDomainChange,\r\n  selectedSkills,\r\n  selectedLocation,\r\n  selectedIndustry,\r\n  selectedUniversity,\r\n  selectedTools,\r\n  userRole,\r\n}) => {\r\n  const [dropdownBasicOpen, setDropdownBasicOpen] = useState(false);\r\n  const [dropdownBasicOpen1, setDropdownBasicOpen1] = useState(false);\r\n  const [dropdownBasicOpen2, setDropdownBasicOpen2] = useState(false);\r\n  const [dropdownBasicOpen3, setDropdownBasicOpen3] = useState(false);\r\n  const [dropdownBasicOpen4, setDropdownBasicOpen4] = useState(false);\r\n  const [dropdownBasicOpen5, setDropdownBasicOpen5] = useState(false);\r\n  const [dropdownBasicOpen6, setDropdownBasicOpen6] = useState(false);\r\n  const [priceRange, setPriceRange] = useState([500, 15000]);\r\n  const [selectedDomain, setSelectedDomain] = useState(\"\");\r\n\r\n  // const searchUrl = `${baseUrl}/api/mentor/search/skills`;\r\n  // const companySearchUrl = `${baseUrl}/api/mentor/search/company`;\r\n  // const toolsSearchUrl = `${baseUrl}/api/mentor/search/tools`;\r\n\r\n  const getApiEndpoint = (endpointType) => {\r\n    switch (userRole) {\r\n      case \"alumni\":\r\n        switch (endpointType) {\r\n          case \"skills\":\r\n            return `${baseUrl}/api/alumni/search/skills`;\r\n          case \"company\":\r\n            return `${baseUrl}/api/alumni/search/company`;\r\n          case \"university\":\r\n            return `${baseUrl}/api/alumni/search/university`;\r\n          default:\r\n            throw new Error(`Invalid endpoint type for alumni role`);\r\n        }\r\n      case \"mentor\":\r\n        switch (endpointType) {\r\n          case \"skills\":\r\n            return `${baseUrl}/api/mentor/search/skills`;\r\n          case \"company\":\r\n            return `${baseUrl}/api/mentor/search/company`;\r\n          case \"tools\":\r\n            return `${baseUrl}/api/mentor/search/tools`;\r\n          default:\r\n            throw new Error(`Invalid endpoint type for mentor role`);\r\n        }\r\n      default:\r\n        throw new Error(`Invalid user role`);\r\n    }\r\n  };\r\n\r\n  const handleSkillSelect = (skill) => {\r\n    onSkillsChange(skill);\r\n  };\r\n\r\n  const handleToolSelect = (tool) => {\r\n    onToolsChange(tool);\r\n  };\r\n\r\n  const handleIndustrySelect = (industry) => {\r\n    onIndustryChange(industry);\r\n  };\r\n  const handleUniversitySelect = (university) => {\r\n    onUniversityChange(university);\r\n  };\r\n\r\n  const handleLocationSelect = (location) => {\r\n    onLocationChange(location);\r\n  };\r\n  const handleDomainSelect = (domain) => {\r\n    onDomainChange(domain);\r\n    setSelectedDomain(domain);\r\n  };\r\n\r\n  const handleSliderChange = (value) => {\r\n    setPriceRange(value);\r\n  };\r\n  const handleAfterChange = useCallback((finalRange) => {\r\n    onPriceChange(finalRange);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // const tools = [\r\n  //   \"VSCode\",\r\n  //   \"Git\",\r\n  //   \"GitHub\",\r\n  //   \"Docker\",\r\n  //   \"Postman\",\r\n  //   \"Jenkins\",\r\n  //   \"Webpack\",\r\n  //   \"ESLint\",\r\n  //   \"Sublime Text\",\r\n  //   \"JIRA\",\r\n  //   \"Slack\",\r\n  //   \"Figma\"\r\n  // ]\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchText1, setSearchText1] = useState(\"\");\r\n  const [searchCompanies, setSearchCompanies] = useState(\"\");\r\n  const [searchUniversities, setSearchUniversities] = useState(\"\");\r\n  const [searchTools, setSearchTools] = useState(\"\");\r\n  const [searchSkills, setSearchSkills] = useState(\"\");\r\n  const [filteredCountry, setFilteredCountry] = useState(country);\r\n  const [filteredDomain, setFilteredDomain] = useState(DomainList);\r\n  // const [filteredTools, setFilteredTools] = useState(tools);\r\n  // const [filteredCompanies, setFilteredCompanies] = useState(companies);\r\n  // const [filteredSkills, setFilteredSkills] = useState(skills);\r\n  const [viewFilters, setViewFilters] = useState(false);\r\n\r\n  const [skillsData, setSkillsData] = useState([]);\r\n  const [companyData, setCompanyData] = useState([]);\r\n  const [universityData, setUniversityData] = useState([]);\r\n  const [toolsData, setToolsData] = useState([]);\r\n\r\n  const [paginationMeta, setPaginationMeta] = useState([]);\r\n  const [companyPaginationMeta, setCompanyPaginationMeta] = useState([]);\r\n  const [universityPaginationMeta, setUniversityPaginationMeta] = useState([]);\r\n  const [toolsPaginationMeta, setToolsPaginationMeta] = useState([]);\r\n\r\n  const [size, setSize] = useState(10);\r\n  const [companySize, setCompanySize] = useState(10);\r\n  const [universitySize, setUniversitySize] = useState(10);\r\n  const [toolsSize, setToolsSize] = useState(10);\r\n\r\n  const [skillsFetched, setSkillsFetched] = useState(false);\r\n  const [toolsFetched, setToolsFetched] = useState(false);\r\n  const [companiesFetched, setCompaniesFetched] = useState(false);\r\n  const [universityFetched, setUniversitiesFetched] = useState(false);\r\n\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkIfMobile = () => {\r\n      setIsMobile(window.innerWidth < 992);\r\n    };\r\n\r\n    checkIfMobile();\r\n    window.addEventListener(\"resize\", checkIfMobile);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", checkIfMobile);\r\n    };\r\n  }, []);\r\n\r\n  const handleSearchChange = (event) => {\r\n    const newText = event.target.value.toLowerCase();\r\n    setSearchText(newText);\r\n    setFilteredCountry(\r\n      country.filter((c) => c.name.toLowerCase().includes(newText))\r\n    );\r\n  };\r\n  const handleSearchDomainChange = (event) => {\r\n    const newText = event.target.value.toLowerCase();\r\n    setSearchText1(newText);\r\n    setFilteredDomain(\r\n      DomainList.filter((c) => c.name.toLowerCase().includes(newText))\r\n    );\r\n  };\r\n\r\n  const handleSearchCompanies = (event) => {\r\n    // const newText = event.target.value.toLowerCase();\r\n    setSearchCompanies(event.target.value);\r\n    // setFilteredCompanies(companies.filter((c) => c.toLowerCase().includes(newText)));\r\n  };\r\n  const handleSearchUniversities = (event) => {\r\n    setSearchUniversities(event.target.value);\r\n  };\r\n  const handleSearchTools = (event) => {\r\n    // const newText = event.target.value.toLowerCase();\r\n    setSearchTools(event.target.value);\r\n    // setFilteredTools(tools.filter((t) => t.toLowerCase().includes(newText)));\r\n  };\r\n  const handleSearchSkills = (event) => {\r\n    // const newText = event.target.value.toLowerCase();\r\n    setSearchSkills(event.target.value);\r\n    // setFilteredSkills(skills.filter((s) => s.toLowerCase().includes(newText)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const FetchSkills = async () => {\r\n      // const params = {\r\n      //   company: selectedIndustry,\r\n      //   location: selectedLocation,\r\n      //   skills: selectedSkills,\r\n      // };\r\n      const params = {};\r\n\r\n      if (searchSkills) {\r\n        params.skill = searchSkills;\r\n      }\r\n\r\n      params.size = size;\r\n      params.page = 0;\r\n      try {\r\n        const response = await axios.get(getApiEndpoint(\"skills\"), { params });\r\n        setSkillsData(response.data.data);\r\n        setPaginationMeta(response.data.paginationMeta);\r\n        setSkillsFetched(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setSkillsFetched(false);\r\n      }\r\n    };\r\n    FetchSkills();\r\n  }, [searchSkills, size]);\r\n\r\n  useEffect(() => {\r\n    const FetchCompanies = async () => {\r\n      // const params = {\r\n      //   company: selectedIndustry,\r\n      //   location: selectedLocation,\r\n      //   skills: selectedSkills,\r\n      // };\r\n      const params = {};\r\n\r\n      if (searchCompanies) {\r\n        params.company = searchCompanies;\r\n      }\r\n\r\n      // params.size = companySize;\r\n      if (companySize) {\r\n        params.size = companySize;\r\n      }\r\n      params.page = 0;\r\n      try {\r\n        const response = await axios.get(getApiEndpoint(\"company\"), { params });\r\n        setCompanyData(response.data.data);\r\n        setCompanyPaginationMeta(response.data.paginationMeta);\r\n        setCompaniesFetched(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setCompaniesFetched(false);\r\n      }\r\n    };\r\n    FetchCompanies();\r\n  }, [searchCompanies, companySize]);\r\n\r\n  useEffect(() => {\r\n    const FetchUniversities = async () => {\r\n      // const params = {\r\n      //   company: selectedIndustry,\r\n      //   location: selectedLocation,\r\n      //   skills: selectedSkills,\r\n      // };\r\n      const params = {};\r\n\r\n      if (searchUniversities) {\r\n        params.university = searchUniversities;\r\n      }\r\n\r\n      // params.size = companySize;\r\n      if (universitySize) {\r\n        params.size = universitySize;\r\n      }\r\n      params.page = 0;\r\n      try {\r\n        const response = await axios.get(getApiEndpoint(\"university\"), {\r\n          params,\r\n        });\r\n        setUniversityData(response.data.data);\r\n        setUniversityPaginationMeta(response.data.paginationMeta);\r\n        setUniversitiesFetched(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setUniversitiesFetched(false);\r\n      }\r\n    };\r\n    FetchUniversities();\r\n  }, [searchUniversities, universitySize]);\r\n\r\n  useEffect(() => {\r\n    const FetchTools = async () => {\r\n      const params = {};\r\n\r\n      if (searchTools) {\r\n        params.tool = searchTools;\r\n      }\r\n\r\n      params.size = toolsSize;\r\n      params.page = 0;\r\n      try {\r\n        const response = await axios.get(getApiEndpoint(\"tools\"), { params });\r\n        setToolsData(response.data.data);\r\n        setToolsPaginationMeta(response.data.paginationMeta);\r\n        setToolsFetched(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setToolsFetched(false);\r\n      }\r\n    };\r\n    FetchTools();\r\n  }, [searchTools, toolsSize]);\r\n\r\n  const handleViewFilters = () => {\r\n    setViewFilters(!viewFilters);\r\n  };\r\n\r\n  const handleLoadMore = () => setSize(size + 5);\r\n  const handleCompanyLoadMore = () => setCompanySize(companySize + 5);\r\n  const handleUniversityLoadMore = () => setUniversitySize(universitySize + 5);\r\n  const handleToolsLoadMore = () => setToolsSize(toolsSize + 5);\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"mb-4\">\r\n        <Colxx xxs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" className=\" \">\r\n          <div className=\"\">\r\n            <div className=\"d-flex flex-wrap my-3\">\r\n              {/* <Dropdown\r\n                isOpen={dropdownBasicOpen}\r\n                toggle={() => setDropdownBasicOpen(!dropdownBasicOpen)}\r\n                className=\"mb-5 mx-2 col-lg-auto col-sm-12 \"\r\n              ><DropdownToggle className=\"col-lg-auto col-sm-12\" caret color=\"primary\" outline>\r\n              Check\r\n              </DropdownToggle></Dropdown> */}\r\n              {isMobile && (\r\n                <Button\r\n                  size=\"sm\"\r\n                  color=\"primary\"\r\n                  outline\r\n                  className=\"d-block d-lg-none col-sm-12 mb-3 position-relative\"\r\n                  onClick={handleViewFilters}\r\n                >\r\n                  {viewFilters ? (\r\n                    <span>\r\n                      Close filters\r\n                      <i\r\n                        className=\"simple-icon-arrow-up mr-0 icon-right\"\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          right: \"10px\",\r\n                          top: \"50%\",\r\n                          transform: \"translateY(-50%)\",\r\n                        }}\r\n                      />\r\n                    </span>\r\n                  ) : (\r\n                    <span>\r\n                      View filters\r\n                      <i\r\n                        className=\"simple-icon-arrow-down icon-right\"\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          right: \"10px\",\r\n                          top: \"50%\",\r\n                          transform: \"translateY(-50%)\",\r\n                        }}\r\n                      />\r\n                    </span>\r\n                  )}\r\n                </Button>\r\n              )}\r\n\r\n              {(!isMobile || viewFilters) && (\r\n                <>\r\n                  {/* university filter starts */}\r\n                  {userRole === \"alumni\" && (\r\n                    <Dropdown\r\n                      isOpen={dropdownBasicOpen6}\r\n                      toggle={() => setDropdownBasicOpen6(!dropdownBasicOpen6)}\r\n                      className=\"mb-3  col-lg-auto col-sm-12\"\r\n                    >\r\n                      <DropdownToggle\r\n                        size=\"sm\"\r\n                        className=\"col-lg-auto col-sm-12\"\r\n                        caret\r\n                        color=\"primary\"\r\n                        outline\r\n                      >\r\n                        {selectedUniversity || <span>Universities</span>}\r\n                      </DropdownToggle>\r\n                      <DropdownMenu className=\"col-lg-auto col-sm-12\">\r\n                        <div className=\"search-sm mr-1 ml-1 mb-1 align-top\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control \"\r\n                            placeholder=\"Search University\"\r\n                            value={searchUniversities}\r\n                            onChange={handleSearchUniversities}\r\n                          />\r\n                        </div>\r\n                        <PerfectScrollbar\r\n                          style={{ maxHeight: \"200px\" }}\r\n                          options={{\r\n                            suppressScrollX: true,\r\n                            wheelPropagation: false,\r\n                          }}\r\n                        >\r\n                          {selectedUniversity && (\r\n                            <DropdownItem\r\n                              onClick={() => handleUniversitySelect(\"\")}\r\n                              className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                            >\r\n                              <span>{selectedUniversity}</span>\r\n                              <i className=\"iconsminds-close ml-auto\" />\r\n                            </DropdownItem>\r\n                          )}\r\n                          {universityFetched && universityData.length === 0 && (\r\n                            <Card className=\" d-flex justify-content-between align-items-center\">\r\n                              {searchUniversities} was not found\r\n                            </Card>\r\n                          )}\r\n                          {!universityFetched && (\r\n                            <Card className=\" d-flex justify-content-between align-items-center\">\r\n                              Failed to load data!\r\n                            </Card>\r\n                          )}\r\n                          {universityData.map((c, index) => (\r\n                            <DropdownItem\r\n                              key={index}\r\n                              onClick={() => handleUniversitySelect(c)}\r\n                            >\r\n                              {c}\r\n                            </DropdownItem>\r\n                          ))}\r\n                          {!universityPaginationMeta.last &&\r\n                            universityFetched && (\r\n                              <Card\r\n                                style={{ cursor: \"pointer\" }}\r\n                                onClick={handleUniversityLoadMore}\r\n                                className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                              >\r\n                                load more\r\n                              </Card>\r\n                            )}\r\n                        </PerfectScrollbar>\r\n                      </DropdownMenu>\r\n                    </Dropdown>\r\n                  )}\r\n\r\n                  {/* university filter ends */}\r\n                  <Dropdown\r\n                    isOpen={dropdownBasicOpen}\r\n                    toggle={() => setDropdownBasicOpen(!dropdownBasicOpen)}\r\n                    className=\"mb-3  col-lg-auto col-sm-12 \"\r\n                  >\r\n                    <DropdownToggle\r\n                      size=\"sm\"\r\n                      className=\"col-lg-auto col-sm-12 \"\r\n                      caret\r\n                      color=\"primary\"\r\n                      outline\r\n                    >\r\n                      {selectedSkills[0] ? selectedSkills : <span>Skills</span>}\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                      <div className=\"search-sm mr-1 ml-1 mb-1 align-top\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"Search skills\"\r\n                          value={searchSkills}\r\n                          onChange={handleSearchSkills}\r\n                        />\r\n                      </div>\r\n                      <PerfectScrollbar\r\n                        style={{ maxHeight: \"200px\" }}\r\n                        options={{\r\n                          suppressScrollX: true,\r\n                          wheelPropagation: false,\r\n                        }}\r\n                      >\r\n                        {selectedSkills[0] && (\r\n                          <DropdownItem\r\n                            onClick={() => handleSkillSelect(\"\")}\r\n                            className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                          >\r\n                            <span>{selectedSkills}</span>\r\n                            <i className=\"iconsminds-close ml-auto\" />\r\n                          </DropdownItem>\r\n                        )}\r\n                        {skillsFetched && skillsData.length === 0 && (\r\n                          <Card className=\" d-flex justify-content-between align-items-center\">\r\n                            {searchSkills} was not found\r\n                          </Card>\r\n                        )}\r\n                        {!skillsFetched && (\r\n                          <Card className=\" d-flex justify-content-between align-items-center\">\r\n                            Failed to load data!\r\n                          </Card>\r\n                        )}\r\n                        {skillsData.map((s, index) => (\r\n                          <DropdownItem\r\n                            key={index}\r\n                            onClick={() => handleSkillSelect(s)}\r\n                          >\r\n                            {s}\r\n                          </DropdownItem>\r\n                        ))}\r\n                        {!paginationMeta.last && skillsFetched && (\r\n                          <Card\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={handleLoadMore}\r\n                            className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                          >\r\n                            load more\r\n                          </Card>\r\n                        )}\r\n                      </PerfectScrollbar>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n\r\n                  {userRole !== \"alumni\" && userRole !== \"user\" && (\r\n                    <Dropdown\r\n                      isOpen={dropdownBasicOpen1}\r\n                      toggle={() => setDropdownBasicOpen1(!dropdownBasicOpen1)}\r\n                      className=\"mb-3  col-lg-auto col-sm-12\"\r\n                    >\r\n                      <DropdownToggle\r\n                        size=\"sm\"\r\n                        className=\"col-lg-auto col-sm-12\"\r\n                        caret\r\n                        color=\"primary\"\r\n                        outline\r\n                      >\r\n                        {selectedTools[0] ? selectedTools : <span>Tools</span>}\r\n                      </DropdownToggle>\r\n                      <DropdownMenu>\r\n                        <div className=\"search-sm mr-1 ml-1 mb-1 align-top\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control \"\r\n                            placeholder=\"Search tools\"\r\n                            value={searchTools}\r\n                            onChange={handleSearchTools}\r\n                          />\r\n                        </div>\r\n                        <PerfectScrollbar\r\n                          style={{ maxHeight: \"200px\" }}\r\n                          options={{\r\n                            suppressScrollX: true,\r\n                            wheelPropagation: false,\r\n                          }}\r\n                        >\r\n                          {selectedTools[0] && (\r\n                            <DropdownItem\r\n                              onClick={() => handleToolSelect(\"\")}\r\n                              className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                            >\r\n                              <span>{selectedTools}</span>\r\n                              <i className=\"iconsminds-close ml-auto\" />\r\n                            </DropdownItem>\r\n                          )}\r\n                          {toolsFetched && toolsData.length === 0 && (\r\n                            <Card className=\" d-flex justify-content-between align-items-center\">\r\n                              {searchTools} was not found\r\n                            </Card>\r\n                          )}\r\n                          {!toolsFetched && (\r\n                            <Card className=\" d-flex justify-content-between align-items-center\">\r\n                              Failed to load data!\r\n                            </Card>\r\n                          )}\r\n                          {toolsData.map((t, index) => (\r\n                            <DropdownItem\r\n                              key={index}\r\n                              onClick={() => handleToolSelect(t)}\r\n                            >\r\n                              {t}\r\n                            </DropdownItem>\r\n                          ))}\r\n                          {!toolsPaginationMeta.last && toolsFetched && (\r\n                            <Card\r\n                              style={{ cursor: \"pointer\" }}\r\n                              onClick={handleToolsLoadMore}\r\n                              className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                            >\r\n                              load more\r\n                            </Card>\r\n                          )}\r\n                        </PerfectScrollbar>\r\n                      </DropdownMenu>\r\n                    </Dropdown>\r\n                  )}\r\n\r\n                  {userRole !== \"user\" && (\r\n                    <Dropdown\r\n                      isOpen={dropdownBasicOpen2}\r\n                      toggle={() => setDropdownBasicOpen2(!dropdownBasicOpen2)}\r\n                      className=\"mb-3  col-lg-auto col-sm-12\"\r\n                    >\r\n                      <DropdownToggle\r\n                        size=\"sm\"\r\n                        className=\"col-lg-auto col-sm-12\"\r\n                        caret\r\n                        color=\"primary\"\r\n                        outline\r\n                      >\r\n                        {selectedIndustry || <span>Companies</span>}\r\n                      </DropdownToggle>\r\n                      <DropdownMenu className=\"col-lg-auto col-sm-12\">\r\n                        <div className=\"search-sm mr-1 ml-1 mb-1 align-top\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control \"\r\n                            placeholder=\"Search Company\"\r\n                            value={searchCompanies}\r\n                            onChange={handleSearchCompanies}\r\n                          />\r\n                        </div>\r\n                        <PerfectScrollbar\r\n                          style={{ maxHeight: \"200px\" }}\r\n                          options={{\r\n                            suppressScrollX: true,\r\n                            wheelPropagation: false,\r\n                          }}\r\n                        >\r\n                          {selectedIndustry && (\r\n                            <DropdownItem\r\n                              onClick={() => handleIndustrySelect(\"\")}\r\n                              className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                            >\r\n                              <span>{selectedIndustry}</span>\r\n                              <i className=\"iconsminds-close ml-auto\" />\r\n                            </DropdownItem>\r\n                          )}\r\n                          {companiesFetched && companyData.length === 0 && (\r\n                            <Card className=\" d-flex justify-content-between align-items-center\">\r\n                              {searchCompanies} was not found\r\n                            </Card>\r\n                          )}\r\n                          {!companiesFetched && (\r\n                            <Card className=\" d-flex justify-content-between align-items-center\">\r\n                              Failed to load data!\r\n                            </Card>\r\n                          )}\r\n                          {companyData.map((c, index) => (\r\n                            <DropdownItem\r\n                              key={index}\r\n                              onClick={() => handleIndustrySelect(c)}\r\n                            >\r\n                              {c}\r\n                            </DropdownItem>\r\n                          ))}\r\n                          {!companyPaginationMeta.last && companiesFetched && (\r\n                            <Card\r\n                              style={{ cursor: \"pointer\" }}\r\n                              onClick={handleCompanyLoadMore}\r\n                              className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                            >\r\n                              load more\r\n                            </Card>\r\n                          )}\r\n                        </PerfectScrollbar>\r\n                      </DropdownMenu>\r\n                    </Dropdown>\r\n                  )}\r\n\r\n                  {userRole !== \"user\" && (\r\n                    <Dropdown\r\n                      isOpen={dropdownBasicOpen3}\r\n                      toggle={() => setDropdownBasicOpen3(!dropdownBasicOpen3)}\r\n                      className=\"mb-3  col-lg-auto col-sm-12\"\r\n                    >\r\n                      <DropdownToggle\r\n                        size=\"sm\"\r\n                        className=\"col-lg-auto col-sm-12\"\r\n                        caret\r\n                        color=\"primary\"\r\n                        outline\r\n                      >\r\n                        Price\r\n                      </DropdownToggle>\r\n                      <DropdownMenu>\r\n                        <DropdownItem className=\"no-bg-price\">\r\n                          {/* <SliderExamples onChange={onPriceChange} /> */}\r\n                          <Row>\r\n                            <Colxx xxs=\"12\" sm=\"12\">\r\n                              <RangeTooltip\r\n                                min={500}\r\n                                max={15000}\r\n                                className=\"mb-5\"\r\n                                defaultValue={[500, 15000]}\r\n                                allowCross={false}\r\n                                pushable={100}\r\n                                step={500}\r\n                                value={priceRange}\r\n                                onChange={handleSliderChange}\r\n                                onAfterChange={handleAfterChange}\r\n                              />\r\n                            </Colxx>\r\n                          </Row>\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </Dropdown>\r\n                  )}\r\n\r\n                  <Dropdown\r\n                    isOpen={dropdownBasicOpen4}\r\n                    toggle={() => setDropdownBasicOpen4(!dropdownBasicOpen4)}\r\n                    className=\"mb-3  col-lg-auto col-sm-12\"\r\n                  >\r\n                    <DropdownToggle\r\n                      size=\"sm\"\r\n                      className=\"col-lg-auto col-sm-12\"\r\n                      caret\r\n                      color=\"primary\"\r\n                      outline\r\n                    >\r\n                      {selectedLocation ? (\r\n                        country.find((c) => c.iso_code === selectedLocation)\r\n                          ?.name\r\n                      ) : (\r\n                        <span>Location</span>\r\n                      )}\r\n                    </DropdownToggle>\r\n\r\n                    <DropdownMenu>\r\n                      <div className=\"search-sm mr-1 ml-1 mb-1 align-top\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"Search Country\"\r\n                          value={searchText}\r\n                          onChange={handleSearchChange}\r\n                        />\r\n                      </div>\r\n                      <PerfectScrollbar\r\n                        style={{ maxHeight: \"200px\" }}\r\n                        options={{\r\n                          suppressScrollX: true,\r\n                          wheelPropagation: false,\r\n                        }}\r\n                      >\r\n                        {selectedLocation && (\r\n                          <DropdownItem\r\n                            onClick={() => handleLocationSelect(\"\")}\r\n                            className=\" d-flex justify-content-between align-items-center\"\r\n                          >\r\n                            <span>\r\n                              {\r\n                                country.find(\r\n                                  (c) => c.iso_code === selectedLocation\r\n                                )?.name\r\n                              }\r\n                            </span>\r\n                            <i className=\"iconsminds-close ml-auto\" />\r\n                          </DropdownItem>\r\n                        )}\r\n                        {filteredCountry.length === 0 && (\r\n                          <Card className=\"bg-light d-flex justify-content-between align-items-center\">\r\n                            {searchText} was not found\r\n                          </Card>\r\n                        )}\r\n                        {filteredCountry.map((c, index) => (\r\n                          <DropdownItem\r\n                            key={index}\r\n                            onClick={() => handleLocationSelect(c.iso_code)}\r\n                          >\r\n                            {c.name}\r\n                          </DropdownItem>\r\n                        ))}\r\n                      </PerfectScrollbar>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                  {/* domain filter starts */}\r\n                  {userRole === \"alumni\" && (\r\n                    <Dropdown\r\n                      isOpen={dropdownBasicOpen5}\r\n                      toggle={() => setDropdownBasicOpen5(!dropdownBasicOpen5)}\r\n                      className=\"mb-3  col-lg-auto col-sm-12\"\r\n                    >\r\n                      <DropdownToggle\r\n                        size=\"sm\"\r\n                        className=\"col-lg-auto col-sm-12\"\r\n                        caret\r\n                        color=\"primary\"\r\n                        outline\r\n                      >\r\n                        {selectedDomain || <span>Domain</span>}\r\n                      </DropdownToggle>\r\n\r\n                      <DropdownMenu>\r\n                        <div className=\"search-sm mr-1 ml-1 mb-1 align-top\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control \"\r\n                            placeholder=\"Search Domain\"\r\n                            value={searchText1}\r\n                            onChange={handleSearchDomainChange}\r\n                          />\r\n                        </div>\r\n                        <PerfectScrollbar\r\n                          style={{ maxHeight: \"200px\" }}\r\n                          options={{\r\n                            suppressScrollX: true,\r\n                            wheelPropagation: false,\r\n                          }}\r\n                        >\r\n                          {selectedDomain && (\r\n                            <DropdownItem\r\n                              onClick={() => handleDomainSelect(\"\")}\r\n                              className=\" d-flex justify-content-between align-items-center \"\r\n                            >\r\n                              <span>\r\n                                {\r\n                                  DomainList.find(\r\n                                    (c) => c.name === selectedDomain\r\n                                  )?.name\r\n                                }\r\n                              </span>\r\n                              <i className=\"iconsminds-close ml-auto \" />\r\n                            </DropdownItem>\r\n                          )}\r\n                          {filteredDomain.length === 0 && (\r\n                            <Card className=\"bg-light d-flex justify-content-between align-items-center\">\r\n                              {searchText1} was not found\r\n                            </Card>\r\n                          )}\r\n                          {filteredDomain.map((c) => (\r\n                            <DropdownItem\r\n                              key={c.name}\r\n                              onClick={() => handleDomainSelect(c.name)}\r\n                            >\r\n                              {c.name}\r\n                            </DropdownItem>\r\n                          ))}\r\n                        </PerfectScrollbar>\r\n                      </DropdownMenu>\r\n                    </Dropdown>\r\n                  )}\r\n                  {/* domain filter ends */}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Colxx>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MentorFilter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport Rating from \"components/common/Rating\";\r\n\r\nimport { Card, CardBody, Col, NavLink, Progress, Row } from \"reactstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport axios from \"axios\";\r\n// import ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\nimport ThumbnailLetters from \"../Chat/ThumbnailLetters\";\r\n\r\nconst ReviewsComponent = ({revieweeId,category}) => {\r\n  // console.log(\"prop chk\", props);\r\n  // const rid = props;\r\n  // const revieweeId = rid.id;\r\n  const [averageStar, setAverageStar] = useState(0);\r\n  const [totalRatings, setTotalRatings] = useState(0);\r\n  const [totalFeedBack, setTotalFeedBack] = useState(0);\r\n  const [reviews, setReviews] = useState([]);\r\n  const [starRatings, setStarRatings] = useState({\r\n    oneStar: 0,\r\n    twoStar: 0,\r\n    threeStar: 0,\r\n    fourStar: 0,\r\n    fiveStar: 0,\r\n  });\r\n  const metaRatingUrl = `${baseUrl}/api/${category}/rating/meta/${revieweeId}`;\r\n  const ratingUrl = `${baseUrl}/api/${category}/rating/${revieweeId}`;\r\n  useEffect(() => {\r\n    const ReviewDetails = async () => {\r\n      try {\r\n        const response = await axios.get(metaRatingUrl);\r\n        const reviewData = response.data;\r\n        // console.log(\"reviewData:\", reviewData);\r\n        // console.log(\"reviewData1:\", reviewData.averageStar);\r\n        if (reviewData) {\r\n          setAverageStar(reviewData.averageStar);\r\n          setTotalRatings(reviewData.totalRatings);\r\n          setTotalFeedBack(reviewData.totalFeedBack);\r\n          setStarRatings({\r\n            oneStar: reviewData.oneStar,\r\n            twoStar: reviewData.twoStar,\r\n            threeStar: reviewData.threeStar,\r\n            fourStar: reviewData.fourStar,\r\n            fiveStar: reviewData.fiveStar,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    ReviewDetails();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await axios.get(ratingUrl);\r\n        const response = res.data;\r\n        // console.log(response);\r\n        setReviews(response);\r\n        // setIsLoaded(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n\r\n        // setIsLoaded(true);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const calculatePercentage = (starCount) => {\r\n    return (starCount / totalRatings) * 100;\r\n  };\r\n\r\n\r\n  \r\n//   function removeTags(str) {\r\n//     if (str === null || str === '') {\r\n//         return false;\r\n//     }\r\n//     const newStr = str.toString();\r\n//     return newStr.replace(/(<([^>]+)>)/ig, '');\r\n// }\r\n\r\n\r\n\r\n  return (\r\n    <Colxx xl=\"12\" lg=\"12\" md=\"12\" className=\"mb-4\">\r\n            <h1 className=\"fw-bold mb-4\">Ratings & Reviews</h1>\r\n      {totalRatings > 0 && (\r\n        <Card className=\"mb-3 col-lg-4 col-12\" >\r\n          <CardBody>\r\n            {/* <h3 className=\"fw-bold\">Ratings & Reviews</h3> */}\r\n\r\n            <Row xxs=\"12\" sm=\"6\">\r\n              <Col>\r\n                <Rating total={5} rating={averageStar} interactive={false} />\r\n              </Col>\r\n              <Col>\r\n                <h4>{averageStar} out of 5 stars</h4>\r\n              </Col>\r\n            </Row>\r\n            <h4>\r\n              {totalRatings} ratings & {totalFeedBack} Reviews\r\n            </h4>\r\n            <div className=\"mb-4\">\r\n              <p className=\"mb-2\">\r\n                5 Star\r\n                <span className=\"float-right text-muted\">\r\n                  {starRatings.fiveStar}\r\n                </span>\r\n              </p>\r\n              <Progress value={calculatePercentage(starRatings.fiveStar)} />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <p className=\"mb-2\">\r\n                4 Star\r\n                <span className=\"float-right text-muted\">\r\n                  {starRatings.fourStar}\r\n                </span>\r\n              </p>\r\n              <Progress value={calculatePercentage(starRatings.fourStar)} />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <p className=\"mb-2\">\r\n                3 Star\r\n                <span className=\"float-right text-muted\">\r\n                  {starRatings.threeStar}\r\n                </span>\r\n              </p>\r\n              <Progress value={calculatePercentage(starRatings.threeStar)} />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <p className=\"mb-2\">\r\n                2 Star\r\n                <span className=\"float-right text-muted\">\r\n                  {starRatings.twoStar}\r\n                </span>\r\n              </p>\r\n              <Progress value={calculatePercentage(starRatings.twoStar)} />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <p className=\"mb-2\">\r\n                1 Star\r\n                <span className=\"float-right text-muted\">\r\n                  {starRatings.oneStar}\r\n                </span>\r\n              </p>\r\n              <Progress\r\n                value={calculatePercentage(starRatings.oneStar)}\r\n                barStyle={{ backgroundColor: \"primary\" }}\r\n              />\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      )}\r\n      {reviews.length > 0 ? (\r\n      <div className=\"\">\r\n        {reviews &&\r\n          reviews.map((rv) => {\r\n            <hr />;\r\n            return (\r\n\r\n              <div\r\n                  key={rv.reviewerId}\r\n                  className=\"d-flex flex-row   border-bottom \"\r\n                >\r\n                  <NavLink href={`/app/user/profile/${rv.reviewerId}`}>\r\n                  {!rv.imageUrl ? (\r\n                  <ThumbnailLetters\r\n                      rounded\r\n                      extraSmall\r\n                      text={rv.name}\r\n                      className=\"\"\r\n                    />\r\n                    ) : (\r\n                     <img\r\n                      src={`${baseUrl}/${rv.imageUrl}`}\r\n                      alt={rv.name}\r\n                      // className=\"img-thumbnail border-0 rounded-circle list-thumbnail align-self-center xsmall\"\r\n                      className=\" rounded-circle img-thumbnail border\"\r\n                      style={{ width: \"40px\", height: \"40px\", objectFit: \"cover\"  }}\r\n                    /> \r\n                    )}\r\n                  </NavLink>\r\n\r\n                  <div className=\" pr-2\">\r\n                    <NavLink to='#'>\r\n                      {/* <p className=\"font-weight-medium mb-0\">{removeTags(rv.feedBack)}</p> */}\r\n                      <div className=\"\"  dangerouslySetInnerHTML={{ __html: rv.feedBack }} />\r\n                      <p className=\"text-muted mb-0 text-small\">\r\n                      {rv.name} | {\" \"}\r\n                      <span>\r\n                        <TimestampConverter timeStamp={rv.time} format=\"datetime\" />\r\n                      </span>\r\n                      </p>\r\n                      {/* {displayRate && ( */}\r\n                        <div className=\"form-group mb-1 mt-2\">\r\n                          <Rating total={5} rating={rv.star} interactive={false} />\r\n                        </div>\r\n                      {/* )} */}\r\n                    </NavLink>\r\n                  </div>\r\n                </div>\r\n\r\n              // <div\r\n              //   className=\"d-flex  justify-content-start my-4\"\r\n              //   key={rv.reviewerId}\r\n              // >\r\n              //   <div>\r\n              //     <NavLink className=\"\">\r\n              //       <ThumbnailLetters\r\n              //         rounded\r\n              //         small\r\n              //         text={rv.name}\r\n              //         className=\"\"\r\n              //       />\r\n              //     </NavLink>\r\n              //   </div>\r\n              //   <div className=\"ml-2\">\r\n              //     <h6 className=\"font-weight-bold\">{rv.name}</h6>\r\n              //     {/* <h6>country</h6> */}\r\n\r\n              //     <div className=\"d-flex align-items-center my-2\">\r\n              //       <Rating total={5} rating={rv.star} interactive={false} />\r\n              //       <p className=\"text-small  mb-0 d-inline-block ml-2\">\r\n              //         {rv.star}\r\n              //       </p>\r\n              //     </div>\r\n              //     {/* <p>{rv.feedBack}</p> */}\r\n              //     {/* <div>{rv.feedBack}</div> */}\r\n              //     <div>{removeTags(rv.feedBack)}</div>\r\n              //     {/* <p>{timeConvert(rv.time)}</p> */}\r\n              //     <p><TimestampConverter timeStamp={rv.time} format=\"datetime\" /></p>\r\n              //     <div className=\"d-flex font-weight-medium\">\r\n              //       <p>Helpful?</p>\r\n              //       <div className=\"d-flex \">\r\n              //         <span className=\" ml-2\">\r\n              //           <i className=\"simple-icon-like mr-2\" />\r\n              //           yes\r\n              //         </span>\r\n              //         <span className=\" ml-2\">\r\n              //           <i className=\"simple-icon-dislike mr-2\" />\r\n              //           no\r\n              //         </span>\r\n              //       </div>\r\n              //       <hr />\r\n              //     </div>\r\n              //   </div>\r\n              // </div>\r\n            );\r\n          })}\r\n      </div>\r\n      ): (\r\n        // <Button>Be the first to write a review</Button>\r\n        <div className=\"ml-4\">No reviews available</div>    \r\n      )}\r\n    </Colxx>\r\n  );\r\n};\r\n\r\nexport default ReviewsComponent;\r\n","import React from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { injectIntl } from 'react-intl';\r\n\r\n\r\nconst DateRangePicker = ({selectedDate,setSelectedDate}) => {\r\n    // const [startDate, setStartDate] = useState(new Date());\r\n    // const [startDate, setStartDate] = useState(selectedDate);\r\n    // const { messages } = intl;\r\n    const handleDateChange = (date) => {\r\n      setSelectedDate(date);\r\n    };\r\n  return (\r\n    <div>\r\n       <div className=\"\">\r\n              <DatePicker\r\n                // selected={startDate}\r\n                selected={selectedDate}\r\n                // onChange={setStartDate}\r\n                // onChange={date => setSelectedDate(date)}\r\n                onChange={handleDateChange} // Pass the handler function to onChange\r\n                // setSelectedDate={setSelectedDate} \r\n                // placeholderText={messages['forms.date']}\r\n                // placeholderText='MM/DD/YYYY'\r\n              />\r\n            </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default  injectIntl(DateRangePicker);\r\n","const language = [\r\n    {\r\n        \"name\": \"Tamil\",\r\n        \"iso_code\": \"TA\"\r\n    },{\r\n        \"name\": \"English\",\r\n        \"iso_code\": \"EN\"\r\n    },\r\n    {\r\n        \"name\": \"Malayalam\",\r\n        \"iso_code\": \"ML\"\r\n    },\r\n    {\r\n        \"name\": \"Hindi\",\r\n        \"iso_code\": \"HI\"\r\n    },\r\n    {\r\n        \"name\": \"Bengali\",\r\n        \"iso_code\": \"BN\"\r\n    },\r\n    {\r\n        \"name\": \"Marathi\",\r\n        \"iso_code\": \"MR\"\r\n    },\r\n    {\r\n        \"name\": \"Telugu\",\r\n        \"iso_code\": \"TE\"\r\n    },\r\n    {\r\n        \"name\": \"Gujarati\",\r\n        \"iso_code\": \"GU\"\r\n    },\r\n    {\r\n        \"name\": \"Urdu\",\r\n        \"iso_code\": \"UR\"\r\n    },\r\n    {\r\n        \"name\": \"Kannada\",\r\n        \"iso_code\": \"KA\"\r\n    },\r\n    {\r\n        \"name\": \"Odia\",\r\n        \"iso_code\": \"OR\"\r\n    },\r\n    {\r\n        \"name\": \"Punjabi\",\r\n        \"iso_code\": \"PA\"\r\n    },\r\n    {\r\n        \"name\": \"Assamese\",\r\n        \"iso_code\": \"AS\"\r\n    },\r\n    {\r\n        \"name\": \"Maithili\",\r\n        \"iso_code\": \"MI\"\r\n    },\r\n    {\r\n        \"name\": \"Bhili/Bhilodi\",\r\n        \"iso_code\": \"BH\"\r\n    },\r\n    {\r\n        \"name\": \"Santali\",\r\n        \"iso_code\": \"SA\"\r\n    },\r\n    {\r\n        \"name\": \"Kashmiri\",\r\n        \"iso_code\": \"KS\"\r\n    },\r\n    {\r\n        \"name\": \"Nepali\",\r\n        \"iso_code\": \"NE\"\r\n    },\r\n    {\r\n        \"name\": \"Sindhi\",\r\n        \"iso_code\": \"SD\"\r\n    },\r\n    {\r\n        \"name\": \"Dogri\",\r\n        \"iso_code\": \"DO\"\r\n    },\r\n    {\r\n        \"name\": \"Konkani\",\r\n        \"iso_code\": \"KN\"\r\n    },\r\n    {\r\n        \"name\": \"Bodo\",\r\n        \"iso_code\": \"BO\"\r\n    },\r\n    {\r\n        \"name\": \"Manipuri\",\r\n        \"iso_code\": \"MN\"\r\n    },\r\n    {\r\n        \"name\": \"Mandarin Chinese\",\r\n        \"iso_code\": \"ZH\"\r\n    },\r\n    {\r\n        \"name\": \"Spanish\",\r\n        \"iso_code\": \"ES\"\r\n    },\r\n    {\r\n        \"name\": \"French\",\r\n        \"iso_code\": \"FR\"\r\n    },\r\n    {\r\n        \"name\": \"German\",\r\n        \"iso_code\": \"DE\"\r\n    },\r\n    {\r\n        \"name\": \"Portuguese\",\r\n        \"iso_code\": \"PT\"\r\n    },\r\n    {\r\n        \"name\": \"Russian\",\r\n        \"iso_code\": \"RU\"\r\n    },\r\n    {\r\n        \"name\": \"Japanese\",\r\n        \"iso_code\": \"JA\"\r\n    },\r\n    {\r\n        \"name\": \"Korean\",\r\n        \"iso_code\": \"KO\"\r\n    },\r\n    {\r\n        \"name\": \"Italian\",\r\n        \"iso_code\": \"IT\"\r\n    },\r\n    {\r\n        \"name\": \"Dutch\",\r\n        \"iso_code\": \"NL\"\r\n    },\r\n    {\r\n        \"name\": \"Greek\",\r\n        \"iso_code\": \"EL\"\r\n    },\r\n    {\r\n        \"name\": \"Turkish\",\r\n        \"iso_code\": \"TR\"\r\n    },\r\n    {\r\n        \"name\": \"Swedish\",\r\n        \"iso_code\": \"SV\"\r\n    },\r\n    {\r\n        \"name\": \"Polish\",\r\n        \"iso_code\": \"PL\"\r\n    },\r\n    {\r\n        \"name\": \"Ukrainian\",\r\n        \"iso_code\": \"UK\"\r\n    },\r\n    {\r\n        \"name\": \"Hebrew\",\r\n        \"iso_code\": \"HE\"\r\n    },\r\n    {\r\n        \"name\": \"Arabic\",\r\n        \"iso_code\": \"AR\"\r\n    },\r\n    {\r\n        \"name\": \"Hungarian\",\r\n        \"iso_code\": \"HU\"\r\n    },\r\n    {\r\n        \"name\": \"Thai\",\r\n        \"iso_code\": \"TH\"\r\n    },\r\n    {\r\n        \"name\": \"Czech\",\r\n        \"iso_code\": \"CS\"\r\n    },\r\n    {\r\n        \"name\": \"Finnish\",\r\n        \"iso_code\": \"FI\"\r\n    },\r\n    {\r\n        \"name\": \"Danish\",\r\n        \"iso_code\": \"DA\"\r\n    },\r\n    {\r\n        \"name\": \"Norwegian\",\r\n        \"iso_code\": \"NO\"\r\n    },\r\n    {\r\n        \"name\": \"Vietnamese\",\r\n        \"iso_code\": \"VI\"\r\n    }\r\n]\r\n\r\n\r\nexport default language;\r\n","const DomainList = [\r\n  {\r\n    name: \"IT\",\r\n  },\r\n  {\r\n    name: \"AGRICULTURE\",\r\n  },\r\n  {\r\n    name: \"MEDICAL\",\r\n  },\r\n  {\r\n    name: \"FINANCE\",\r\n  },\r\n  {\r\n    name: \"EDUCATION\",\r\n  },\r\n  {\r\n    name: \"MARKETING\",\r\n  },\r\n  {\r\n    name: \"ENGINEERING\",\r\n  },\r\n  {\r\n    name: \"LAW\",\r\n  },\r\n  {\r\n    name: \"DESIGN\",\r\n  },\r\n  {\r\n    name: \"HUMAN_RESOURCES\",\r\n  },\r\n];\r\nexport default DomainList;\r\n","import { useState } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Nav,\r\n  NavItem,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\n\r\nimport classnames from \"classnames\";\r\n\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { adminRoot } from \"constants/defaultValues\";\r\n\r\nconst MentorTabCard = ({ handleConnectClick, chatUserId, price }) => {\r\n  const [activeFirstTab, setActiveFirstTab] = useState(\"3\");\r\n  const role = localStorage.getItem(\"roleRes\");\r\n\r\n  const history = useHistory();\r\n  const handleChatClick = () => {\r\n    history.push(`${adminRoot}/chat/${chatUserId}`);\r\n  };\r\n  return (\r\n    <Row className=\"mt-4\">\r\n      <Colxx xxs=\"12\">\r\n        <Row>\r\n          <Colxx xxs=\"12\" xs=\"12\" lg=\"12\">\r\n            <Card className=\"mb-4 \">\r\n              <CardHeader>\r\n                <Nav tabs className=\"card-header-tabs \">\r\n                  {/* <NavItem>\r\n                    <NavLink\r\n                      to=\"#\"\r\n                      location={{}}\r\n                      className={classnames({\r\n                        active: activeFirstTab === '1',\r\n                        'nav-link': true,\r\n                      })}\r\n                      onClick={() => {\r\n                        setActiveFirstTab('1');\r\n                      }}\r\n                    >\r\n                      6 months\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      to=\"#\"\r\n                      location={{}}\r\n                      className={classnames({\r\n                        active: activeFirstTab === '2',\r\n                        'nav-link': true,\r\n                      })}\r\n                      onClick={() => {\r\n                        setActiveFirstTab('2');\r\n                      }}\r\n                    >\r\n                      3 months\r\n                    </NavLink>\r\n                  </NavItem> */}\r\n                  <NavItem>\r\n                    <NavLink\r\n                      to=\"#\"\r\n                      location={{}}\r\n                      className={classnames({\r\n                        active: activeFirstTab === \"3\",\r\n                        \"nav-link\": true,\r\n                      })}\r\n                      onClick={() => {\r\n                        setActiveFirstTab(\"3\");\r\n                      }}\r\n                    >\r\n                      Hourly plan\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  {/* <NavItem>\r\n                    <NavLink\r\n                      to=\"#\"\r\n                      location={{}}\r\n                      className={classnames({\r\n                        active: activeFirstTab === '4',\r\n                        'nav-link': true,\r\n                      })}\r\n                      onClick={() => {\r\n                        setActiveFirstTab('4');\r\n                      }}\r\n                    >\r\n                      Premium1\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      to=\"#\"\r\n                      location={{}}\r\n                      className={classnames({\r\n                        active: activeFirstTab === '5',\r\n                        'nav-link': true,\r\n                      })}\r\n                      onClick={() => {\r\n                        setActiveFirstTab('5');\r\n                      }}\r\n                    >\r\n                      Premium2\r\n                    </NavLink>\r\n                  </NavItem> */}\r\n                </Nav>\r\n              </CardHeader>\r\n\r\n              <TabContent activeTab={activeFirstTab}>\r\n                {/* <TabPane tabId=\"1\">\r\n                <Row>\r\n                    <Colxx sm=\"12\">\r\n                      <CardBody>\r\n                        <CardTitle className=\"mb-4\">\r\n                        <h2>₹12500</h2>\r\n                          <h5>Premium package</h5>\r\n                        </CardTitle>\r\n                       \r\n                      </CardBody>\r\n                    </Colxx>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tabId=\"2\">\r\n                  <Row>\r\n                    <Colxx sm=\"12\">\r\n                      <CardBody>\r\n                        <CardTitle className=\"mb-4\">\r\n                        <h2>₹8500</h2>\r\n                          <h5>Standard package</h5>\r\n                        </CardTitle>\r\n                       \r\n                      </CardBody>\r\n                    </Colxx>\r\n                  </Row>\r\n                </TabPane> */}\r\n                <TabPane tabId=\"3\">\r\n                  <Row>\r\n                    <Colxx sm=\"12\">\r\n                      <CardBody>\r\n                        <CardTitle className=\"mb-4\">\r\n                          {price && (\r\n                            <h2>₹{Math.floor(price).toLocaleString()}</h2>\r\n                          )}\r\n                          <h5>Basic package</h5>\r\n                          <div className=\"mt-4 \">\r\n                            <div className=\"\">\r\n                              {role.includes(\"USER\") && (\r\n                                <Row>\r\n                                  <Button\r\n                                    onClick={handleConnectClick}\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    className=\" font-weight-semibold mx-2 \"\r\n                                    size=\"large\"\r\n                                  >\r\n                                    <span className=\"font-weight-semibold  text-one\">\r\n                                      Connect\r\n                                    </span>\r\n                                  </Button>\r\n                                  <Button\r\n                                    onClick={handleChatClick}\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    className=\" font-weight-semibold mx-2 \"\r\n                                    size=\"large\"\r\n                                  >\r\n                                    <span className=\"font-weight-semibold  text-one\">\r\n                                      Contact\r\n                                    </span>\r\n                                  </Button>\r\n                                </Row>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </CardTitle>\r\n                      </CardBody>\r\n                    </Colxx>\r\n                  </Row>\r\n                </TabPane>\r\n                {/* <TabPane tabId=\"4\">\r\n                  <Row>\r\n                    <Colxx sm=\"12\">\r\n                      <CardBody>\r\n                        <CardTitle className=\"mb-4\">\r\n                        <h2>₹12500</h2>\r\n                          <h5>Premium package 1</h5>\r\n                        </CardTitle>\r\n                       \r\n                      </CardBody>\r\n                    </Colxx>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tabId=\"5\">\r\n                  <Row>\r\n                    <Colxx sm=\"12\">\r\n                      <CardBody>\r\n                        <CardTitle className=\"mb-4\">\r\n                        <h2>₹15500</h2>\r\n                          <h5>Premium package 2</h5>\r\n                        </CardTitle>\r\n                       \r\n                      </CardBody>\r\n                    </Colxx>\r\n                  </Row>\r\n                </TabPane> */}\r\n              </TabContent>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default MentorTabCard;\r\n","/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-param-reassign */\r\nimport React from 'react';\r\nimport { WithWizard } from 'react-albus';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst TopNavigation = ({ className, disableNav, topNavClick }) => {\r\n  const getClassName = (steps, step, index, stepItem) => {\r\n    if (steps.indexOf(step) === index) {\r\n      return 'step-doing';\r\n    }\r\n    if (steps.indexOf(step) > index || stepItem.isDone) {\r\n      stepItem.isDone = true;\r\n      return 'step-done';\r\n    }\r\n    return 'step';\r\n  };\r\n\r\n  const itemClick = (stepItem, push) => {\r\n    if (disableNav) {\r\n      return;\r\n    }\r\n    topNavClick(stepItem, push);\r\n  };\r\n\r\n  return (\r\n    <WithWizard\r\n      render={({ next, previous, step, steps, go, push }) => (\r\n        <ul\r\n          className={`nav nav-tabs ${className}${\r\n            disableNav ? ' disabled' : ''\r\n          }`}\r\n        >\r\n          {steps.map((stepItem, index) => {\r\n            if (!stepItem.hideTopNav) {\r\n              return (\r\n                <li\r\n                  key={`topNavStep_${index}`}\r\n                  className={`nav-item ${getClassName(\r\n                    steps,\r\n                    step,\r\n                    index,\r\n                    stepItem\r\n                  )}`}\r\n                >\r\n                  <NavLink\r\n                    to=\"#\"\r\n                    location={{}}\r\n                    className=\"nav-link\"\r\n                    onClick={() => itemClick(stepItem, push)}\r\n                  >\r\n                    <span>{stepItem.name}</span>\r\n                    <small>{stepItem.desc}</small>\r\n                  </NavLink>\r\n                </li>\r\n              );\r\n            }\r\n            return <span key={`topNavStep_${index}`} />;\r\n          })}\r\n          {/* <li>\r\n            <h1>Hello</h1>\r\n          </li> */}\r\n        </ul>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TopNavigation;\r\n","// import react from \"react\";\r\n\r\nconst validateFirstName = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter your first name\";\r\n  } else if (!/^[a-zA-Z]+$/.test(value)) {\r\n    error = \"Only alphabets are allowed\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n\r\n  return error;\r\n};\r\n\r\nconst validateLastName = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter your first name\";\r\n  } else if (!/^[a-zA-Z]+$/.test(value)) {\r\n    error = \"Only alphabets are allowed\";\r\n  } else if (value.length < 1) {\r\n    error = \"Must be longer than 1 characters\";\r\n  }\r\n\r\n  return error;\r\n};\r\n\r\nconst validateEmail = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter your email address\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n    error = \"Invalid email address\";\r\n  }\r\n  return error;\r\n};\r\n\r\nconst validatePassword = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please choose a password\";\r\n  } else if (value.length < 6) {\r\n    error = \"Password must be longer than 6 characters\";\r\n  }\r\n  return error;\r\n};\r\nfunction validateCategory(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a category\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateLocation(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a location\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateStudent(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a student type\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateCompany(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please provide the company name\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateIdentityStatus(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a identity status\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateJobTitle(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter a job title\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\n// function validateSkills(value) {\r\n//   let error;\r\n//   if (!value) {\r\n//     error = \"Please specify a skill\";\r\n//   } else if (value.length < 2) {\r\n//       error = \"Must be longer than 2 characters\";\r\n//     }\r\n//   return error;\r\n// }\r\n// function validateSkills(value) {\r\n//   let error;\r\n//   if (!value || value.length === 0) {\r\n//      error = \"Please specify a skill\";\r\n//   } else if (value.some(tag => tag.length < 2)) {\r\n//      error = \"Each skill must be longer than 2 characters\";\r\n//   }\r\n//   return error;\r\n//  }\r\n\r\nconst validateSkills = (value) => {\r\n  if (!Array.isArray(value)) {\r\n    return \"Skills must be an array of strings\";\r\n  }\r\n\r\n  if (value.length === 0) {\r\n    return \"Please add at least one skill\";\r\n  }\r\n\r\n  const isString = value.every((skill) => typeof skill === \"string\");\r\n  if (!isString) {\r\n    return \"Skills must be strings\";\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nfunction validateBio(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please provide a bio\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateLinkedinUrl(value) {\r\n  let error;\r\n\r\n  if (!value) {\r\n    error = \"Please provide your LinkedIn URL\";\r\n  } else if (\r\n    !/^https?:\\/\\/(?:www\\.)?linkedin\\.com\\/(?:[a-z]{2,3}\\.)?in\\/[a-zA-Z0-9_-]+\\/?$/i.test(\r\n      value\r\n    )\r\n  ) {\r\n    error = \"Invalid LinkedIn URL format\";\r\n  }\r\n  return error;\r\n}\r\n\r\n// function validateLinkedinUrl(value) {\r\n//   let error;\r\n\r\n//   if (!value) {\r\n//       error = \"Please provide your LinkedIn URL\";\r\n//   } else if (!/^linkedin\\.(com|in)\\/(in|pub|profile|company)\\/[a-zA-Z0-9_-]+\\/?$/i.test(value)) {\r\n//       error = \"Invalid LinkedIn URL format\";\r\n//   }\r\n//   return error;\r\n// }\r\n\r\nfunction validateReasonForMentor(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateAchievement(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\n\r\n// function validateFile(value) {\r\n//   let error;\r\n//   if (!value) {\r\n//     error = \"This field is required.\";\r\n//   }\r\n//   //  else if (![\"image/jpeg\", \"image/png\"].includes(file.type)) {\r\n//   //   error = \"Unsupported file type. Only JPEG and PNG images are allowed\";\r\n//   // }\r\n//   return error;\r\n// }\r\n// function validateFile(value) {\r\n//   let error;\r\n\r\n//   if (!value) {\r\n//     error = \"This field is required.\";\r\n//   } else {\r\n//     const fileType = value.type;\r\n//     if (![\"image/jpeg\", \"image/png\"].includes(fileType)) {\r\n//       error = \"Unsupported file type. Only JPEG and PNG images are allowed\";\r\n//     }\r\n//   }\r\n\r\n//   return error;\r\n// }\r\nconst validateFile = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select an image file\";\r\n  } else if (!value.type.startsWith(\"image/\")) {\r\n    error = \"Please select a valid image file\";\r\n  }\r\n  return error;\r\n};\r\n\r\nexport {\r\n  validateAchievement,\r\n  validateBio,\r\n  validateCategory,\r\n  validateCompany,\r\n  validateEmail,\r\n  validateFile,\r\n  validateFirstName,\r\n  validateIdentityStatus,\r\n  validateJobTitle,\r\n  validateLastName,\r\n  validateLinkedinUrl,\r\n  validateLocation,\r\n  validatePassword,\r\n  validateReasonForMentor,\r\n  validateSkills,\r\n  validateStudent,\r\n};\r\n","const country = [\r\n    {\r\n        \"name\": \"Afghanistan\",\r\n        \"iso_code\": \"AF\"\r\n    },\r\n    {\r\n        \"name\": \"Albania\",\r\n        \"iso_code\": \"AL\"\r\n    },\r\n    {\r\n        \"name\": \"Algeria\",\r\n        \"iso_code\": \"DZ\"\r\n    },\r\n    {\r\n        \"name\": \"American Samoa\",\r\n        \"iso_code\": \"AS\"\r\n    },\r\n    {\r\n        \"name\": \"Andorra\",\r\n        \"iso_code\": \"AD\"\r\n    },\r\n    {\r\n        \"name\": \"Angola\",\r\n        \"iso_code\": \"AO\"\r\n    },\r\n    {\r\n        \"name\": \"Anguilla\",\r\n        \"iso_code\": \"AI\"\r\n    },\r\n    {\r\n        \"name\": \"Antarctica\",\r\n        \"iso_code\": \"AQ\"\r\n    },\r\n    {\r\n        \"name\": \"Antigua and Barbuda\",\r\n        \"iso_code\": \"AG\"\r\n    },\r\n    {\r\n        \"name\": \"Argentina\",\r\n        \"iso_code\": \"AR\"\r\n    },\r\n    {\r\n        \"name\": \"Armenia\",\r\n        \"iso_code\": \"AM\"\r\n    },\r\n    {\r\n        \"name\": \"Aruba\",\r\n        \"iso_code\": \"AW\"\r\n    },\r\n    {\r\n        \"name\": \"Australia\",\r\n        \"iso_code\": \"AU\"\r\n    },\r\n    {\r\n        \"name\": \"Austria\",\r\n        \"iso_code\": \"AT\"\r\n    },\r\n    {\r\n        \"name\": \"Azerbaijan\",\r\n        \"iso_code\": \"AZ\"\r\n    },\r\n    {\r\n        \"name\": \"Bahamas The\",\r\n        \"iso_code\": \"BS\"\r\n    },\r\n    {\r\n        \"name\": \"Bahrain\",\r\n        \"iso_code\": \"BH\"\r\n    },\r\n    {\r\n        \"name\": \"Bangladesh\",\r\n        \"iso_code\": \"BD\"\r\n    },\r\n    {\r\n        \"name\": \"Barbados\",\r\n        \"iso_code\": \"BB\"\r\n    },\r\n    {\r\n        \"name\": \"Belarus\",\r\n        \"iso_code\": \"BY\"\r\n    },\r\n    {\r\n        \"name\": \"Belgium\",\r\n        \"iso_code\": \"BE\"\r\n    },\r\n    {\r\n        \"name\": \"Belize\",\r\n        \"iso_code\": \"BZ\"\r\n    },\r\n    {\r\n        \"name\": \"Benin\",\r\n        \"iso_code\": \"BJ\"\r\n    },\r\n    {\r\n        \"name\": \"Bermuda\",\r\n        \"iso_code\": \"BM\"\r\n    },\r\n    {\r\n        \"name\": \"Bhutan\",\r\n        \"iso_code\": \"BT\"\r\n    },\r\n    {\r\n        \"name\": \"Bolivia\",\r\n        \"iso_code\": \"BO\"\r\n    },\r\n    {\r\n        \"name\": \"Bosnia and Herzegovina\",\r\n        \"iso_code\": \"BA\"\r\n    },\r\n    {\r\n        \"name\": \"Botswana\",\r\n        \"iso_code\": \"BW\"\r\n    },\r\n    {\r\n        \"name\": \"Bouvet Island\",\r\n        \"iso_code\": \"BV\"\r\n    },\r\n    {\r\n        \"name\": \"Brazil\",\r\n        \"iso_code\": \"BR\"\r\n    },\r\n    {\r\n        \"name\": \"British Indian Ocean Territory\",\r\n        \"iso_code\": \"IO\"\r\n    },\r\n    {\r\n        \"name\": \"Brunei\",\r\n        \"iso_code\": \"BN\"\r\n    },\r\n    {\r\n        \"name\": \"Bulgaria\",\r\n        \"iso_code\": \"BG\"\r\n    },\r\n    {\r\n        \"name\": \"Burkina Faso\",\r\n        \"iso_code\": \"BF\"\r\n    },\r\n    {\r\n        \"name\": \"Burundi\",\r\n        \"iso_code\": \"BI\"\r\n    },\r\n    {\r\n        \"name\": \"Cambodia\",\r\n        \"iso_code\": \"KH\"\r\n    },\r\n    {\r\n        \"name\": \"Cameroon\",\r\n        \"iso_code\": \"CM\"\r\n    },\r\n    {\r\n        \"name\": \"Canada\",\r\n        \"iso_code\": \"CA\"\r\n    },\r\n    {\r\n        \"name\": \"Cape Verde\",\r\n        \"iso_code\": \"CV\"\r\n    },\r\n    {\r\n        \"name\": \"Cayman Islands\",\r\n        \"iso_code\": \"KY\"\r\n    },\r\n    {\r\n        \"name\": \"Central African Republic\",\r\n        \"iso_code\": \"CF\"\r\n    },\r\n    {\r\n        \"name\": \"Chad\",\r\n        \"iso_code\": \"TD\"\r\n    },\r\n    {\r\n        \"name\": \"Chile\",\r\n        \"iso_code\": \"CL\"\r\n    },\r\n    {\r\n        \"name\": \"China\",\r\n        \"iso_code\": \"CN\"\r\n    },\r\n    {\r\n        \"name\": \"Christmas Island\",\r\n        \"iso_code\": \"CX\"\r\n    },\r\n    {\r\n        \"name\": \"Cocos (Keeling) Islands\",\r\n        \"iso_code\": \"CC\"\r\n    },\r\n    {\r\n        \"name\": \"Colombia\",\r\n        \"iso_code\": \"CO\"\r\n    },\r\n    {\r\n        \"name\": \"Comoros\",\r\n        \"iso_code\": \"KM\"\r\n    },\r\n    {\r\n        \"name\": \"Congo\",\r\n        \"iso_code\": \"CG\"\r\n    },\r\n    {\r\n        \"name\": \"Congo The Democratic Republic Of The\",\r\n        \"iso_code\": \"CD\"\r\n    },\r\n    {\r\n        \"name\": \"Cook Islands\",\r\n        \"iso_code\": \"CK\"\r\n    },\r\n    {\r\n        \"name\": \"Costa Rica\",\r\n        \"iso_code\": \"CR\"\r\n    },\r\n    {\r\n        \"name\": \"Cote D'Ivoire (Ivory Coast)\",\r\n        \"iso_code\": \"CI\"\r\n    },\r\n    {\r\n        \"name\": \"Croatia (Hrvatska)\",\r\n        \"iso_code\": \"HR\"\r\n    },\r\n    {\r\n        \"name\": \"Cuba\",\r\n        \"iso_code\": \"CU\"\r\n    },\r\n    {\r\n        \"name\": \"Cyprus\",\r\n        \"iso_code\": \"CY\"\r\n    },\r\n    {\r\n        \"name\": \"Czech Republic\",\r\n        \"iso_code\": \"CZ\"\r\n    },\r\n    {\r\n        \"name\": \"Denmark\",\r\n        \"iso_code\": \"DK\"\r\n    },\r\n    {\r\n        \"name\": \"Djibouti\",\r\n        \"iso_code\": \"DJ\"\r\n    },\r\n    {\r\n        \"name\": \"Dominica\",\r\n        \"iso_code\": \"DM\"\r\n    },\r\n    {\r\n        \"name\": \"Dominican Republic\",\r\n        \"iso_code\": \"DO\"\r\n    },\r\n    {\r\n        \"name\": \"East Timor\",\r\n        \"iso_code\": \"TP\"\r\n    },\r\n    {\r\n        \"name\": \"Ecuador\",\r\n        \"iso_code\": \"EC\"\r\n    },\r\n    {\r\n        \"name\": \"Egypt\",\r\n        \"iso_code\": \"EG\"\r\n    },\r\n    {\r\n        \"name\": \"El Salvador\",\r\n        \"iso_code\": \"SV\"\r\n    },\r\n    {\r\n        \"name\": \"Equatorial Guinea\",\r\n        \"iso_code\": \"GQ\"\r\n    },\r\n    {\r\n        \"name\": \"Eritrea\",\r\n        \"iso_code\": \"ER\"\r\n    },\r\n    {\r\n        \"name\": \"Estonia\",\r\n        \"iso_code\": \"EE\"\r\n    },\r\n    {\r\n        \"name\": \"Ethiopia\",\r\n        \"iso_code\": \"ET\"\r\n    },\r\n    {\r\n        \"name\": \"External Territories of Australia\",\r\n        \"iso_code\": \"XA\"\r\n    },\r\n    {\r\n        \"name\": \"Falkland Islands\",\r\n        \"iso_code\": \"FK\"\r\n    },\r\n    {\r\n        \"name\": \"Faroe Islands\",\r\n        \"iso_code\": \"FO\"\r\n    },\r\n    {\r\n        \"name\": \"Fiji Islands\",\r\n        \"iso_code\": \"FJ\"\r\n    },\r\n    {\r\n        \"name\": \"Finland\",\r\n        \"iso_code\": \"FI\"\r\n    },\r\n    {\r\n        \"name\": \"France\",\r\n        \"iso_code\": \"FR\"\r\n    },\r\n    {\r\n        \"name\": \"French Guiana\",\r\n        \"iso_code\": \"GF\"\r\n    },\r\n    {\r\n        \"name\": \"French Polynesia\",\r\n        \"iso_code\": \"PF\"\r\n    },\r\n    {\r\n        \"name\": \"French Southern Territories\",\r\n        \"iso_code\": \"TF\"\r\n    },\r\n    {\r\n        \"name\": \"Gabon\",\r\n        \"iso_code\": \"GA\"\r\n    },\r\n    {\r\n        \"name\": \"Gambia The\",\r\n        \"iso_code\": \"GM\"\r\n    },\r\n    {\r\n        \"name\": \"Georgia\",\r\n        \"iso_code\": \"GE\"\r\n    },\r\n    {\r\n        \"name\": \"Germany\",\r\n        \"iso_code\": \"DE\"\r\n    },\r\n    {\r\n        \"name\": \"Ghana\",\r\n        \"iso_code\": \"GH\"\r\n    },\r\n    {\r\n        \"name\": \"Gibraltar\",\r\n        \"iso_code\": \"GI\"\r\n    },\r\n    {\r\n        \"name\": \"Greece\",\r\n        \"iso_code\": \"GR\"\r\n    },\r\n    {\r\n        \"name\": \"Greenland\",\r\n        \"iso_code\": \"GL\"\r\n    },\r\n    {\r\n        \"name\": \"Grenada\",\r\n        \"iso_code\": \"GD\"\r\n    },\r\n    {\r\n        \"name\": \"Guadeloupe\",\r\n        \"iso_code\": \"GP\"\r\n    },\r\n    {\r\n        \"name\": \"Guam\",\r\n        \"iso_code\": \"GU\"\r\n    },\r\n    {\r\n        \"name\": \"Guatemala\",\r\n        \"iso_code\": \"GT\"\r\n    },\r\n    {\r\n        \"name\": \"Guernsey and Alderney\",\r\n        \"iso_code\": \"XU\"\r\n    },\r\n    {\r\n        \"name\": \"Guinea\",\r\n        \"iso_code\": \"GN\"\r\n    },\r\n    {\r\n        \"name\": \"Guinea-Bissau\",\r\n        \"iso_code\": \"GW\"\r\n    },\r\n    {\r\n        \"name\": \"Guyana\",\r\n        \"iso_code\": \"GY\"\r\n    },\r\n    {\r\n        \"name\": \"Haiti\",\r\n        \"iso_code\": \"HT\"\r\n    },\r\n    {\r\n        \"name\": \"Heard and McDonald Islands\",\r\n        \"iso_code\": \"HM\"\r\n    },\r\n    {\r\n        \"name\": \"Honduras\",\r\n        \"iso_code\": \"HN\"\r\n    },\r\n    {\r\n        \"name\": \"Hong Kong S.A.R.\",\r\n        \"iso_code\": \"HK\"\r\n    },\r\n    {\r\n        \"name\": \"Hungary\",\r\n        \"iso_code\": \"HU\"\r\n    },\r\n    {\r\n        \"name\": \"Iceland\",\r\n        \"iso_code\": \"IS\"\r\n    },\r\n    {\r\n        \"name\": \"India\",\r\n        \"iso_code\": \"IN\"\r\n    },\r\n    {\r\n        \"name\": \"Indonesia\",\r\n        \"iso_code\": \"ID\"\r\n    },\r\n    {\r\n        \"name\": \"Iran\",\r\n        \"iso_code\": \"IR\"\r\n    },\r\n    {\r\n        \"name\": \"Iraq\",\r\n        \"iso_code\": \"IQ\"\r\n    },\r\n    {\r\n        \"name\": \"Ireland\",\r\n        \"iso_code\": \"IE\"\r\n    },\r\n    {\r\n        \"name\": \"Israel\",\r\n        \"iso_code\": \"IL\"\r\n    },\r\n    {\r\n        \"name\": \"Italy\",\r\n        \"iso_code\": \"IT\"\r\n    },\r\n    {\r\n        \"name\": \"Jamaica\",\r\n        \"iso_code\": \"JM\"\r\n    },\r\n    {\r\n        \"name\": \"Japan\",\r\n        \"iso_code\": \"JP\"\r\n    },\r\n    {\r\n        \"name\": \"Jersey\",\r\n        \"iso_code\": \"XJ\"\r\n    },\r\n    {\r\n        \"name\": \"Jordan\",\r\n        \"iso_code\": \"JO\"\r\n    },\r\n    {\r\n        \"name\": \"Kazakhstan\",\r\n        \"iso_code\": \"KZ\"\r\n    },\r\n    {\r\n        \"name\": \"Kenya\",\r\n        \"iso_code\": \"KE\"\r\n    },\r\n    {\r\n        \"name\": \"Kiribati\",\r\n        \"iso_code\": \"KI\"\r\n    },\r\n    {\r\n        \"name\": \"Korea North\",\r\n        \"iso_code\": \"KP\"\r\n    },\r\n    {\r\n        \"name\": \"Korea South\",\r\n        \"iso_code\": \"KR\"\r\n    },\r\n    {\r\n        \"name\": \"Kuwait\",\r\n        \"iso_code\": \"KW\"\r\n    },\r\n    {\r\n        \"name\": \"Kyrgyzstan\",\r\n        \"iso_code\": \"KG\"\r\n    },\r\n    {\r\n        \"name\": \"Laos\",\r\n        \"iso_code\": \"LA\"\r\n    },\r\n    {\r\n        \"name\": \"Latvia\",\r\n        \"iso_code\": \"LV\"\r\n    },\r\n    {\r\n        \"name\": \"Lebanon\",\r\n        \"iso_code\": \"LB\"\r\n    },\r\n    {\r\n        \"name\": \"Lesotho\",\r\n        \"iso_code\": \"LS\"\r\n    },\r\n    {\r\n        \"name\": \"Liberia\",\r\n        \"iso_code\": \"LR\"\r\n    },\r\n    {\r\n        \"name\": \"Libya\",\r\n        \"iso_code\": \"LY\"\r\n    },\r\n    {\r\n        \"name\": \"Liechtenstein\",\r\n        \"iso_code\": \"LI\"\r\n    },\r\n    {\r\n        \"name\": \"Lithuania\",\r\n        \"iso_code\": \"LT\"\r\n    },\r\n    {\r\n        \"name\": \"Luxembourg\",\r\n        \"iso_code\": \"LU\"\r\n    },\r\n    {\r\n        \"name\": \"Macau S.A.R.\",\r\n        \"iso_code\": \"MO\"\r\n    },\r\n    {\r\n        \"name\": \"Macedonia\",\r\n        \"iso_code\": \"MK\"\r\n    },\r\n    {\r\n        \"name\": \"Madagascar\",\r\n        \"iso_code\": \"MG\"\r\n    },\r\n    {\r\n        \"name\": \"Malawi\",\r\n        \"iso_code\": \"MW\"\r\n    },\r\n    {\r\n        \"name\": \"Malaysia\",\r\n        \"iso_code\": \"MY\"\r\n    },\r\n    {\r\n        \"name\": \"Maldives\",\r\n        \"iso_code\": \"MV\"\r\n    },\r\n    {\r\n        \"name\": \"Mali\",\r\n        \"iso_code\": \"ML\"\r\n    },\r\n    {\r\n        \"name\": \"Malta\",\r\n        \"iso_code\": \"MT\"\r\n    },\r\n    {\r\n        \"name\": \"Man (Isle of)\",\r\n        \"iso_code\": \"XM\"\r\n    },\r\n    {\r\n        \"name\": \"Marshall Islands\",\r\n        \"iso_code\": \"MH\"\r\n    },\r\n    {\r\n        \"name\": \"Martinique\",\r\n        \"iso_code\": \"MQ\"\r\n    },\r\n    {\r\n        \"name\": \"Mauritania\",\r\n        \"iso_code\": \"MR\"\r\n    },\r\n    {\r\n        \"name\": \"Mauritius\",\r\n        \"iso_code\": \"MU\"\r\n    },\r\n    {\r\n        \"name\": \"Mayotte\",\r\n        \"iso_code\": \"YT\"\r\n    },\r\n    {\r\n        \"name\": \"Mexico\",\r\n        \"iso_code\": \"MX\"\r\n    },\r\n    {\r\n        \"name\": \"Micronesia\",\r\n        \"iso_code\": \"FM\"\r\n    },\r\n    {\r\n        \"name\": \"Moldova\",\r\n        \"iso_code\": \"MD\"\r\n    },\r\n    {\r\n        \"name\": \"Monaco\",\r\n        \"iso_code\": \"MC\"\r\n    },\r\n    {\r\n        \"name\": \"Mongolia\",\r\n        \"iso_code\": \"MN\"\r\n    },\r\n    {\r\n        \"name\": \"Montserrat\",\r\n        \"iso_code\": \"MS\"\r\n    },\r\n    {\r\n        \"name\": \"Morocco\",\r\n        \"iso_code\": \"MA\"\r\n    },\r\n    {\r\n        \"name\": \"Mozambique\",\r\n        \"iso_code\": \"MZ\"\r\n    },\r\n    {\r\n        \"name\": \"Myanmar\",\r\n        \"iso_code\": \"MM\"\r\n    },\r\n    {\r\n        \"name\": \"Namibia\",\r\n        \"iso_code\": \"NA\"\r\n    },\r\n    {\r\n        \"name\": \"Nauru\",\r\n        \"iso_code\": \"NR\"\r\n    },\r\n    {\r\n        \"name\": \"Nepal\",\r\n        \"iso_code\": \"NP\"\r\n    },\r\n    {\r\n        \"name\": \"Netherlands Antilles\",\r\n        \"iso_code\": \"AN\"\r\n    },\r\n    {\r\n        \"name\": \"Netherlands The\",\r\n        \"iso_code\": \"NL\"\r\n    },\r\n    {\r\n        \"name\": \"New Caledonia\",\r\n        \"iso_code\": \"NC\"\r\n    },\r\n    {\r\n        \"name\": \"New Zealand\",\r\n        \"iso_code\": \"NZ\"\r\n    },\r\n    {\r\n        \"name\": \"Nicaragua\",\r\n        \"iso_code\": \"NI\"\r\n    },\r\n    {\r\n        \"name\": \"Niger\",\r\n        \"iso_code\": \"NE\"\r\n    },\r\n    {\r\n        \"name\": \"Nigeria\",\r\n        \"iso_code\": \"NG\"\r\n    },\r\n    {\r\n        \"name\": \"Niue\",\r\n        \"iso_code\": \"NU\"\r\n    },\r\n    {\r\n        \"name\": \"Norfolk Island\",\r\n        \"iso_code\": \"NF\"\r\n    },\r\n    {\r\n        \"name\": \"Northern Mariana Islands\",\r\n        \"iso_code\": \"MP\"\r\n    },\r\n    {\r\n        \"name\": \"Norway\",\r\n        \"iso_code\": \"NO\"\r\n    },\r\n    {\r\n        \"name\": \"Oman\",\r\n        \"iso_code\": \"OM\"\r\n    },\r\n    {\r\n        \"name\": \"Pakistan\",\r\n        \"iso_code\": \"PK\"\r\n    },\r\n    {\r\n        \"name\": \"Palau\",\r\n        \"iso_code\": \"PW\"\r\n    },\r\n    {\r\n        \"name\": \"Palestinian Territory Occupied\",\r\n        \"iso_code\": \"PS\"\r\n    },\r\n    {\r\n        \"name\": \"Panama\",\r\n        \"iso_code\": \"PA\"\r\n    },\r\n    {\r\n        \"name\": \"Papua new Guinea\",\r\n        \"iso_code\": \"PG\"\r\n    },\r\n    {\r\n        \"name\": \"Paraguay\",\r\n        \"iso_code\": \"PY\"\r\n    },\r\n    {\r\n        \"name\": \"Peru\",\r\n        \"iso_code\": \"PE\"\r\n    },\r\n    {\r\n        \"name\": \"Philippines\",\r\n        \"iso_code\": \"PH\"\r\n    },\r\n    {\r\n        \"name\": \"Pitcairn Island\",\r\n        \"iso_code\": \"PN\"\r\n    },\r\n    {\r\n        \"name\": \"Poland\",\r\n        \"iso_code\": \"PL\"\r\n    },\r\n    {\r\n        \"name\": \"Portugal\",\r\n        \"iso_code\": \"PT\"\r\n    },\r\n    {\r\n        \"name\": \"Puerto Rico\",\r\n        \"iso_code\": \"PR\"\r\n    },\r\n    {\r\n        \"name\": \"Qatar\",\r\n        \"iso_code\": \"QA\"\r\n    },\r\n    {\r\n        \"name\": \"Reunion\",\r\n        \"iso_code\": \"RE\"\r\n    },\r\n    {\r\n        \"name\": \"Romania\",\r\n        \"iso_code\": \"RO\"\r\n    },\r\n    {\r\n        \"name\": \"Russia\",\r\n        \"iso_code\": \"RU\"\r\n    },\r\n    {\r\n        \"name\": \"Rwanda\",\r\n        \"iso_code\": \"RW\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Helena\",\r\n        \"iso_code\": \"SH\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Kitts And Nevis\",\r\n        \"iso_code\": \"KN\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Lucia\",\r\n        \"iso_code\": \"LC\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Pierre and Miquelon\",\r\n        \"iso_code\": \"PM\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Vincent And The Grenadines\",\r\n        \"iso_code\": \"VC\"\r\n    },\r\n    {\r\n        \"name\": \"Samoa\",\r\n        \"iso_code\": \"WS\"\r\n    },\r\n    {\r\n        \"name\": \"San Marino\",\r\n        \"iso_code\": \"SM\"\r\n    },\r\n    {\r\n        \"name\": \"Sao Tome and Principe\",\r\n        \"iso_code\": \"ST\"\r\n    },\r\n    {\r\n        \"name\": \"Saudi Arabia\",\r\n        \"iso_code\": \"SA\"\r\n    },\r\n    {\r\n        \"name\": \"Senegal\",\r\n        \"iso_code\": \"SN\"\r\n    },\r\n    {\r\n        \"name\": \"Serbia\",\r\n        \"iso_code\": \"RS\"\r\n    },\r\n    {\r\n        \"name\": \"Seychelles\",\r\n        \"iso_code\": \"SC\"\r\n    },\r\n    {\r\n        \"name\": \"Sierra Leone\",\r\n        \"iso_code\": \"SL\"\r\n    },\r\n    {\r\n        \"name\": \"Singapore\",\r\n        \"iso_code\": \"SG\"\r\n    },\r\n    {\r\n        \"name\": \"Slovakia\",\r\n        \"iso_code\": \"SK\"\r\n    },\r\n    {\r\n        \"name\": \"Slovenia\",\r\n        \"iso_code\": \"SI\"\r\n    },\r\n    {\r\n        \"name\": \"Smaller Territories of the UK\",\r\n        \"iso_code\": \"XG\"\r\n    },\r\n    {\r\n        \"name\": \"Solomon Islands\",\r\n        \"iso_code\": \"SB\"\r\n    },\r\n    {\r\n        \"name\": \"Somalia\",\r\n        \"iso_code\": \"SO\"\r\n    },\r\n    {\r\n        \"name\": \"South Africa\",\r\n        \"iso_code\": \"ZA\"\r\n    },\r\n    {\r\n        \"name\": \"South Georgia\",\r\n        \"iso_code\": \"GS\"\r\n    },\r\n    {\r\n        \"name\": \"South Sudan\",\r\n        \"iso_code\": \"SS\"\r\n    },\r\n    {\r\n        \"name\": \"Spain\",\r\n        \"iso_code\": \"ES\"\r\n    },\r\n    {\r\n        \"name\": \"Sri Lanka\",\r\n        \"iso_code\": \"LK\"\r\n    },\r\n    {\r\n        \"name\": \"Sudan\",\r\n        \"iso_code\": \"SD\"\r\n    },\r\n    {\r\n        \"name\": \"Suriname\",\r\n        \"iso_code\": \"SR\"\r\n    },\r\n    {\r\n        \"name\": \"Svalbard And Jan Mayen Islands\",\r\n        \"iso_code\": \"SJ\"\r\n    },\r\n    {\r\n        \"name\": \"Swaziland\",\r\n        \"iso_code\": \"SZ\"\r\n    },\r\n    {\r\n        \"name\": \"Sweden\",\r\n        \"iso_code\": \"SE\"\r\n    },\r\n    {\r\n        \"name\": \"Switzerland\",\r\n        \"iso_code\": \"CH\"\r\n    },\r\n    {\r\n        \"name\": \"Syria\",\r\n        \"iso_code\": \"SY\"\r\n    },\r\n    {\r\n        \"name\": \"Taiwan\",\r\n        \"iso_code\": \"TW\"\r\n    },\r\n    {\r\n        \"name\": \"Tajikistan\",\r\n        \"iso_code\": \"TJ\"\r\n    },\r\n    {\r\n        \"name\": \"Tanzania\",\r\n        \"iso_code\": \"TZ\"\r\n    },\r\n    {\r\n        \"name\": \"Thailand\",\r\n        \"iso_code\": \"TH\"\r\n    },\r\n    {\r\n        \"name\": \"Togo\",\r\n        \"iso_code\": \"TG\"\r\n    },\r\n    {\r\n        \"name\": \"Tokelau\",\r\n        \"iso_code\": \"TK\"\r\n    },\r\n    {\r\n        \"name\": \"Tonga\",\r\n        \"iso_code\": \"TO\"\r\n    },\r\n    {\r\n        \"name\": \"Trinidad And Tobago\",\r\n        \"iso_code\": \"TT\"\r\n    },\r\n    {\r\n        \"name\": \"Tunisia\",\r\n        \"iso_code\": \"TN\"\r\n    },\r\n    {\r\n        \"name\": \"Turkey\",\r\n        \"iso_code\": \"TR\"\r\n    },\r\n    {\r\n        \"name\": \"Turkmenistan\",\r\n        \"iso_code\": \"TM\"\r\n    },\r\n    {\r\n        \"name\": \"Turks And Caicos Islands\",\r\n        \"iso_code\": \"TC\"\r\n    },\r\n    {\r\n        \"name\": \"Tuvalu\",\r\n        \"iso_code\": \"TV\"\r\n    },\r\n    {\r\n        \"name\": \"Uganda\",\r\n        \"iso_code\": \"UG\"\r\n    },\r\n    {\r\n        \"name\": \"Ukraine\",\r\n        \"iso_code\": \"UA\"\r\n    },\r\n    {\r\n        \"name\": \"United Arab Emirates\",\r\n        \"iso_code\": \"AE\"\r\n    },\r\n    {\r\n        \"name\": \"United Kingdom\",\r\n        \"iso_code\": \"GB\"\r\n    },\r\n    {\r\n        \"name\": \"United States\",\r\n        \"iso_code\": \"US\"\r\n    },\r\n    {\r\n        \"name\": \"United States Minor Outlying Islands\",\r\n        \"iso_code\": \"UM\"\r\n    },\r\n    {\r\n        \"name\": \"Uruguay\",\r\n        \"iso_code\": \"UY\"\r\n    },\r\n    {\r\n        \"name\": \"Uzbekistan\",\r\n        \"iso_code\": \"UZ\"\r\n    },\r\n    {\r\n        \"name\": \"Vanuatu\",\r\n        \"iso_code\": \"VU\"\r\n    },\r\n    {\r\n        \"name\": \"Vatican City State (Holy See)\",\r\n        \"iso_code\": \"VA\"\r\n    },\r\n    {\r\n        \"name\": \"Venezuela\",\r\n        \"iso_code\": \"VE\"\r\n    },\r\n    {\r\n        \"name\": \"Vietnam\",\r\n        \"iso_code\": \"VN\"\r\n    },\r\n    {\r\n        \"name\": \"Virgin Islands (British)\",\r\n        \"iso_code\": \"VG\"\r\n    },\r\n    {\r\n        \"name\": \"Virgin Islands (US)\",\r\n        \"iso_code\": \"VI\"\r\n    },\r\n    {\r\n        \"name\": \"Wallis And Futuna Islands\",\r\n        \"iso_code\": \"WF\"\r\n    },\r\n    {\r\n        \"name\": \"Western Sahara\",\r\n        \"iso_code\": \"EH\"\r\n    },\r\n    {\r\n        \"name\": \"Yemen\",\r\n        \"iso_code\": \"YE\"\r\n    },\r\n    {\r\n        \"name\": \"Yugoslavia\",\r\n        \"iso_code\": \"YU\"\r\n    },\r\n    {\r\n        \"name\": \"Zambia\",\r\n        \"iso_code\": \"ZM\"\r\n    },\r\n    {\r\n        \"name\": \"Zimbabwe\",\r\n        \"iso_code\": \"ZW\"\r\n    }\r\n]\r\n\r\nexport default country;\r\n","import { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Field, Formik } from \"formik\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport indentityStatusList from \"../CommonCardList/IdentityStatusList\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\nimport { EmploymentTypeData, WorkPlaceTypeData } from \"./ListingData\";\r\n\r\nconst quillModules = {\r\n  toolbar: [\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    // [\"link\", \"image\"],\r\n    // [\"clean\"],\r\n  ],\r\n};\r\nconst quillFormats = [\r\n  \"header\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n];\r\n\r\n// const WorkPlaceTypeData = [\r\n//   { label: \"Onsite\", value: 0 },\r\n//   { label: \"Hybrid\", value: 1 },\r\n//   { label: \"Remote\", value: 2 },\r\n// ];\r\n\r\n// const EmploymentTypeData = [\r\n//   { label: \"Full time\", value: 0 },\r\n//   { label: \"Part time\", value: 1 },\r\n//   { label: \"Temporary\", value: 2 },\r\n//   { label: \"Volunteer\", value: 3 },\r\n//   { label: \"Internship\", value: 4 },\r\n//   { label: \"Contract\", value: 5 },\r\n// ];\r\n\r\n// const validateJobTitle = (value) => {\r\n//   let error;\r\n//   if (!value) {\r\n//      error = 'Job title is required';\r\n//   }\r\n//   return error;\r\n//  };\r\n\r\n// const validateDescription = (value) => {\r\n//   let error;\r\n//   if (!value) {\r\n//     error = \"Description is required\";\r\n//   }\r\n//   return error;\r\n// };\r\n\r\nconst JobPosting = ({ closeModal, initialData, onEdit }) => {\r\n  const [id] = useState(initialData?.id || 0);\r\n  const [title] = useState(initialData?.title || \"\");\r\n  const [jobTitle] = useState(initialData?.jobTitle || \"\");\r\n  const [company] = useState(initialData?.company || \"\");\r\n  const [workPlaceType] = useState(initialData?.workPlaceTypeValue || null);\r\n  const [jobLocation] = useState(initialData?.jobLocation || \"\");\r\n  const [employmentType] = useState(initialData?.employmentTypeValue || null);\r\n  const [identityStatus] = useState(initialData?.identityStatus || null);\r\n  const [description] = useState(initialData?.description || \"\");\r\n  const [skillsTag] = useState(initialData?.skills || []);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedFile2, setSelectedFile2] = useState(null);\r\n\r\n  const url = `${baseUrl}/api/posts/job-post/`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  const handleFileChange2 = (event) => {\r\n    // const file = event.target.files[0];\r\n    // setSelectedFile2(file);\r\n    const file = event.target.files[0];\r\n\r\n    if (!file) return; // No file selected\r\n\r\n    // if (!(file.type === \"application/pdf\")) {\r\n    //   // alert(\"Please select a valid PDF file.\");\r\n    //   setImageError1(true);\r\n    //   setImageErrorMessage1(\"Please upload a PDF file.\");\r\n    //   return;\r\n    // }\r\n    if (file) {\r\n      setSelectedFile2(file);\r\n    }\r\n    // const fileSizeMB = file.size / (1024 * 1024); // Convert bytes to MB\r\n\r\n    // if (fileSizeMB > 2) {\r\n    //   // alert(\"File size exceeds 2MB limit.\");\r\n    //   setImageError1(true);\r\n    //   setImageErrorMessage1(\"File size must be less than  2MB\");\r\n\r\n    //   return;\r\n    // }\r\n\r\n    setSelectedFile2(file);\r\n    // setImageError1(false);\r\n    // setImageErrorMessage1(\"\");\r\n  };\r\n\r\n  // const handleSubmit = async () => {\r\n  //   setIsLoading(true);\r\n  //   try {\r\n  //     const data = {\r\n  //       id,\r\n  //       title,\r\n  //       jobTitle,\r\n  //       company,\r\n  //       workPlaceType,\r\n  //       jobLocation,\r\n  //       employmentType,\r\n  //       description,\r\n  //       skills: skillsTag,\r\n  //     };\r\n  //     if (initialData) {\r\n  //       await onEdit(data);\r\n  //     } else {\r\n  //       const response = await axios.post(url, data, {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${token}`,\r\n  //         },\r\n  //       });\r\n  //       ToasterComponent(\"success\", response.data.statuses);\r\n  //     }\r\n  //     closeModal();\r\n  //     setIsLoading(false);\r\n  //   } catch (error) {\r\n  //     setIsLoading(false);\r\n  //     if (\r\n  //       error.response &&\r\n  //       error.response.data &&\r\n  //       error.response.data.statuses\r\n  //     ) {\r\n  //       ToasterComponent(\"error\", error.response.data.statuses);\r\n  //     } else {\r\n  //       console.error(\"Error posting/editing job:\", error);\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  // const handleTagsChange = (newSkills) => {\r\n  //   // setSkillError(false);\r\n  //   setSkillsTag(newSkills);\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"mx-auto my-4 p-3\" style={{ maxWidth: \"900px\" }}>\r\n        {/* <h1 className=\"font-weight-semibold\">Create a job post</h1> */}\r\n        <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"mx-auto \">\r\n          <Formik\r\n            initialValues={{\r\n              title: title || \"\",\r\n              jobTitle: jobTitle || \"\",\r\n              company: company || \"\",\r\n              workPlaceType: workPlaceType || \"\",\r\n              jobLocation: jobLocation || \"\",\r\n              employmentType: employmentType || \"\",\r\n              identityStatus: identityStatus || \"\",\r\n              description: description || \"\",\r\n              skills: skillsTag || [],\r\n            }}\r\n            validate={(values) => {\r\n              const errors = {};\r\n              if (!values.title.trim()) {\r\n                errors.title = \"Title is required\";\r\n              }\r\n              if (!values.jobTitle.trim()) {\r\n                errors.jobTitle = \"Job title is required\";\r\n              }\r\n\r\n              if (!values.jobLocation.trim()) {\r\n                errors.jobLocation = \"Job location is required\";\r\n              }\r\n              if (!values.company.trim()) {\r\n                errors.company = \"Company is required\";\r\n              }\r\n              if (!values.employmentType.trim()) {\r\n                errors.employmentType = \"employment type is required\";\r\n              }\r\n              if (!values.identityStatus.trim()) {\r\n                errors.employmentType = \"identity status is required\";\r\n              }\r\n              if (!values.workPlaceType.trim()) {\r\n                errors.workPlaceType = \"workplace type is required\";\r\n              }\r\n\r\n              if (!values.description.trim()) {\r\n                errors.description = \"Description is required\";\r\n              }\r\n              if (values.skills.length === 0) {\r\n                errors.skills = \"At least one skill is required\";\r\n              }\r\n              return errors;\r\n            }}\r\n            onSubmit={async (values, { setSubmitting }) => {\r\n              setIsLoading(true);\r\n\r\n              try {\r\n                const data = {\r\n                  id,\r\n                  title: values.title,\r\n                  jobTitle: values.jobTitle,\r\n                  company: values.company,\r\n                  workPlaceType: values.workPlaceType,\r\n                  jobLocation: values.jobLocation,\r\n                  employmentType: values.employmentType,\r\n                  identityStatus: values.identityStatus,\r\n                  description: values.description,\r\n                  skills: values.skills,\r\n                };\r\n                const formData = new FormData();\r\n                // formData.append(\"jobListing\", JSON.stringify(data));\r\n                formData.append(\r\n                  \"jobListing\",\r\n                  new Blob([JSON.stringify(data)], {\r\n                    type: \"application/json\",\r\n                  })\r\n                );\r\n                if (selectedFile2) {\r\n                  formData.append(\"images\", selectedFile2);\r\n                }\r\n\r\n                if (initialData) {\r\n                  await onEdit(data);\r\n                } else {\r\n                  const response = await axios.post(url, formData, {\r\n                    headers: {\r\n                      Authorization: `Bearer ${token}`,\r\n                    },\r\n                  });\r\n                  ToasterComponent(\"success\", response.data.statuses);\r\n                  // if (selectedFile2) {\r\n                  //   const formData = new FormData();\r\n                  //   formData.append(\"image\", selectedFile2);\r\n\r\n                  //   const imageUploadUrl = `${baseUrl}/api/posts/job-post/image`;\r\n                  //   await axios.post(imageUploadUrl, formData, {\r\n                  //     headers: {\r\n                  //       Authorization: `Bearer ${token}`,\r\n                  //       // \"Content-Type\": \"multipart/form-data\",\r\n                  //     },\r\n                  //   });\r\n\r\n                  //   ToasterComponent(\"success\", \"Image uploaded successfully\");\r\n                  // }\r\n                }\r\n                closeModal();\r\n                setIsLoading(false);\r\n              } catch (error) {\r\n                setIsLoading(false);\r\n                if (\r\n                  error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.statuses\r\n                ) {\r\n                  ToasterComponent(\"error\", error.response.data.statuses);\r\n                } else {\r\n                  console.error(\"Error posting/editing job:\", error);\r\n                }\r\n              }\r\n              setSubmitting(false);\r\n            }}\r\n          >\r\n            {({\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldValue,\r\n              handleSubmit,\r\n              setFieldTouched,\r\n              values,\r\n            }) => (\r\n              <Form className=\"av-tooltip tooltip-label-right\">\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Title*</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"title\"\r\n                        onChange={({ target: { value } }) => {\r\n                          const alphabeticValue = value.replace(\r\n                            /[^a-zA-Z ]/g,\r\n                            \"\"\r\n                          );\r\n                          setFieldValue(\"title\", alphabeticValue);\r\n                        }}\r\n                        value={values.title}\r\n                        required\r\n                      />\r\n                      {errors.title && touched.title && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.title}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Job Title*</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"jobTitle\"\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"jobTitle\", e.target.value)\r\n                        }\r\n                        value={values.jobTitle}\r\n                        required\r\n                      />\r\n                      {errors.jobTitle && touched.jobTitle && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.jobTitle}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Company*</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"company\"\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"company\", e.target.value)\r\n                        }\r\n                        value={values.company}\r\n                        required\r\n                      />\r\n                      {errors.company && touched.company && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.company}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Workplace Type*</Label>\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"workPlaceType\"\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"workPlaceType\", e.target.value)\r\n                        }\r\n                        className=\"form-control\"\r\n                        value={values.workPlaceType}\r\n                      >\r\n                        <option value=\"\" disabled>\r\n                          Select Workplace Type\r\n                        </option>\r\n                        {WorkPlaceTypeData &&\r\n                          WorkPlaceTypeData.map((option) => (\r\n                            <option key={option} value={option.value}>\r\n                              {option.label}\r\n                            </option>\r\n                          ))}\r\n                      </Field>\r\n                      {errors.workPlaceType && touched.workPlaceType && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.workPlaceType}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Job Location*</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"jobLocation\"\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"jobLocation\", e.target.value)\r\n                        }\r\n                        value={values.jobLocation}\r\n                        required\r\n                      />\r\n                      {errors.jobLocation && touched.jobLocation && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.jobLocation}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Employment Type*</Label>\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"employmentType\"\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"employmentType\", e.target.value)\r\n                        }\r\n                        className=\"form-control\"\r\n                        value={values.employmentType}\r\n                      >\r\n                        <option value=\"\" disabled>\r\n                          Select Employment Type\r\n                        </option>\r\n                        {EmploymentTypeData &&\r\n                          EmploymentTypeData.map((option) => (\r\n                            <option key={option} value={option.value}>\r\n                              {option.label}\r\n                            </option>\r\n                          ))}\r\n                      </Field>\r\n                      {errors.employmentType && touched.employmentType && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.employmentType}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Label>Employment Category*</Label>\r\n                    <Field\r\n                      as=\"select\"\r\n                      name=\"identityStatus\"\r\n                      // validate={validateIdentityStatus}\r\n                      onChange={(e) =>\r\n                        setFieldValue(\"identityStatus\", e.target.value)\r\n                      }\r\n                      className=\"form-control\"\r\n                      value={values.identityStatus}\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select Employment Category\r\n                      </option>\r\n                      {indentityStatusList.map((option) => (\r\n                        <option key={option.name} value={option.name}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))}\r\n                    </Field>\r\n                    {errors.identityStatus && touched.identityStatus && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.identityStatus}\r\n                      </div>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Skills*</Label>\r\n                      <TagsInput\r\n                        value={values.skills}\r\n                        onChange={(tags) => setFieldValue(\"skills\", tags)}\r\n                        addOnBlur\r\n                        addKeys={[13, 188]}\r\n                      />\r\n                      {errors.skills && touched.skills && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.skills}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Label>Image</Label>\r\n                    {/* {imageError1 && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {imageErrorMessage1}\r\n                          </div>\r\n                        )} */}\r\n\r\n                    <InputGroup className=\"\">\r\n                      <div className=\"\">\r\n                        <Button\r\n                          className=\"default\"\r\n                          color=\"primary\"\r\n                          onClick={() =>\r\n                            document\r\n                              .getElementById(\"file-upload-resume\")\r\n                              .click()\r\n                          }\r\n                        >\r\n                          Upload Photo <i className=\"iconsminds-upload ml-2\" />\r\n                        </Button>\r\n                        {/* <Form> */}\r\n                        <Input\r\n                          id=\"file-upload-resume\"\r\n                          type=\"file\"\r\n                          className=\"d-none\"\r\n                          onChange={handleFileChange2}\r\n                          // validate={validateFile}\r\n                        />\r\n                      </div>\r\n                    </InputGroup>\r\n                    <div\r\n                      className=\"  my-2 \"\r\n                      // style={{\r\n                      //   border: \"1px solid #ccc\",\r\n                      //   minWidth: \"200px\",\r\n                      // }}\r\n                    >\r\n                      {/* {selectedFile2 ? selectedFile2.name : \"\"} */}\r\n                      {selectedFile2\r\n                        ? `selected file is ${selectedFile2.name}`\r\n                        : \"\"}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <FormGroup className=\"error-l-75\">\r\n                  <Label>Description*</Label>\r\n                  <ReactQuill\r\n                    theme=\"snow\"\r\n                    value={values.description}\r\n                    onChange={(val) => setFieldValue(\"description\", val)}\r\n                    onBlur={() => setFieldTouched(\"description\", true)}\r\n                    modules={quillModules}\r\n                    formats={quillFormats}\r\n                  />\r\n                  {errors.description && touched.description && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.description}\r\n                    </div>\r\n                  )}\r\n                </FormGroup>\r\n\r\n                <div className=\"mt-3 d-flex justify-content-end\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    className={`col-12 col-md-3 btn-shadow btn-multiple-state ${\r\n                      isLoading ? \"show-spinner\" : \"\"\r\n                    }`}\r\n                    onClick={handleSubmit}\r\n                    type=\"submit\"\r\n                    disabled={!isValid} // Disable the button if the form is invalid\r\n                  >\r\n                    <span className=\"spinner d-inline-block\">\r\n                      <span className=\"bounce1\" />\r\n                      <span className=\"bounce2\" />\r\n                      <span className=\"bounce3\" />\r\n                    </span>\r\n                    <span className=\"label\">\r\n                      {initialData ? \"Submit\" : \"Post a job\"}\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Colxx>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobPosting;\r\n","import { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport { Button, Card, Col, Form, FormGroup, Label, Row } from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Field, Formik } from \"formik\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst quillModules = {\r\n  toolbar: [\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    // [\"link\", \"image\"],\r\n    // [\"clean\"],\r\n  ],\r\n};\r\nconst quillFormats = [\r\n  \"header\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n];\r\n// const validate = (values) => {\r\n//   const errors = {};\r\n//   if (!values.title) {\r\n//     errors.title = \"Title is required\";\r\n//   }\r\n//   return errors;\r\n// };\r\n\r\nconst OtherPosting = ({ closeModal, initialData, onEdit }) => {\r\n  const [id] = useState(initialData?.id || 0);\r\n  const [title] = useState(initialData?.title || \"\");\r\n  const [job] = useState(initialData?.job || \"\");\r\n  const [description] = useState(initialData?.description || \"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // const [skills, setSkills] = useState([]);\r\n\r\n  const url = `${baseUrl}/api/posts/other-post/`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  // const handleSubmit = async () => {\r\n  //   setIsLoading(true);\r\n  //   try {\r\n  //     const data = {\r\n  //       id,\r\n  //       title,\r\n  //       job,\r\n  //       description,\r\n  //     };\r\n  //     if (initialData) {\r\n  //       await onEdit(data);\r\n  //     } else {\r\n  //      const response = await axios.post(url, data, {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${token}`,\r\n  //         },\r\n  //       });\r\n  //     ToasterComponent('success', response.data.statuses);\r\n\r\n  //     }\r\n  //     setIsLoading(false);\r\n  //     closeModal();\r\n  //     // console.log(\"job posted successfully\");\r\n  //   } catch (error) {\r\n  //     if (\r\n  //       error.response &&\r\n  //       error.response.data &&\r\n  //       error.response.data.statuses\r\n  //     ) {\r\n  //       ToasterComponent(\"error\", error.response.data.statuses);\r\n  //     } else {\r\n  //       console.error(\"Error posting\", error);\r\n  //     }\r\n  //     setIsLoading(false);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"mx-auto my-4 p-3\" style={{ maxWidth: \"900px\" }}>\r\n        {/* <h1 className=\"font-weight-semibold\">Other Post</h1> */}\r\n        <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"mx-auto \">\r\n          <Formik\r\n            initialValues={{\r\n              // title,\r\n              title: title || \"\",\r\n              // job,\r\n              job: job || \"\",\r\n              // description,\r\n              description: description || \"\",\r\n            }}\r\n            // validate={validate}\r\n            validate={(values) => {\r\n              const errors = {};\r\n              if (!values.title.trim()) {\r\n                errors.title = \"Title is required\";\r\n              }\r\n              if (!values.job.trim()) {\r\n                errors.job = \"Job  is required\";\r\n              }\r\n\r\n              if (!values.description.trim()) {\r\n                errors.description = \"Description is required\";\r\n              }\r\n\r\n              return errors;\r\n            }}\r\n            onSubmit={async (values, { setSubmitting }) => {\r\n              setIsLoading(true);\r\n              try {\r\n                const data = {\r\n                  id,\r\n                  title: values.title,\r\n                  job: values.job,\r\n\r\n                  description: values.description,\r\n                };\r\n                if (initialData) {\r\n                  await onEdit(data);\r\n                } else {\r\n                  const response = await axios.post(url, data, {\r\n                    headers: {\r\n                      Authorization: `Bearer ${token}`,\r\n                    },\r\n                  });\r\n                  ToasterComponent(\"success\", response.data.statuses);\r\n                }\r\n                closeModal();\r\n                setIsLoading(false);\r\n              } catch (error) {\r\n                setIsLoading(false);\r\n                if (\r\n                  error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.statuses\r\n                ) {\r\n                  ToasterComponent(\"error\", error.response.data.statuses);\r\n                } else {\r\n                  console.error(\"Error posting/editing job:\", error);\r\n                }\r\n              }\r\n              setSubmitting(false);\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              touched,\r\n              isValid,\r\n              setFieldTouched,\r\n              handleSubmit,\r\n              setFieldValue,\r\n              values,\r\n            }) => (\r\n              <Form className=\"av-tooltip tooltip-label-right \">\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Title*</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"title\"\r\n                        // onChange={(e) => setTitle(e.target.value)}\r\n                        // validate={validate}\r\n                        onChange={({ target: { value } }) => {\r\n                          const alphabeticValue = value.replace(\r\n                            /[^a-zA-Z ]/g,\r\n                            \"\"\r\n                          );\r\n                          setFieldValue(\"title\", alphabeticValue);\r\n                        }}\r\n                        value={values.title}\r\n                      />\r\n                      {errors.title && touched.title && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.title}\r\n                        </div>\r\n                      )}\r\n                      {/* <ErrorMessage name=\"title\" component=\"div\" className=\"invalid-feedback d-block\" /> */}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Job*</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"job\"\r\n                        value={values.job}\r\n                        // onChange={(e) => setJob(e.target.value)}\r\n                        // onChange={(e) => setFieldValue(\"job\", e.target.value)}\r\n                        onChange={({ target: { value } }) => {\r\n                          const alphabeticValue = value.replace(\r\n                            /[^a-zA-Z ]/g,\r\n                            \"\"\r\n                          );\r\n                          setFieldValue(\"job\", alphabeticValue);\r\n                        }}\r\n                        required\r\n                        //   validate={}\r\n                      />\r\n                      {/* {errors.company && touched.company && (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.company}\r\n                              </div>\r\n                            )} */}\r\n                      {errors.job && touched.job && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.job}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <div className=\"mt-4\">\r\n                  <h6 className=\"font-weight-semibold\">Add a description*</h6>\r\n                  {/* <p className='text-muted'>Include all the information would need to answer your question</p> */}\r\n                  <Row className=\"mb-4\">\r\n                    <Colxx xxs=\"12\">\r\n                      <ReactQuill\r\n                        theme=\"snow\"\r\n                        value={values.description}\r\n                        onChange={(val) => setFieldValue(\"description\", val)}\r\n                        onBlur={() => setFieldTouched(\"description\", true)}\r\n                        modules={quillModules}\r\n                        formats={quillFormats}\r\n                      />\r\n                      {errors.description && touched.description && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.description}\r\n                        </div>\r\n                      )}\r\n                    </Colxx>\r\n                  </Row>\r\n                </div>\r\n                {/* <div className=\"mt-2\">\r\n                <h6 className=\"font-weight-semibold\">Add Skills</h6> */}\r\n                {/* <p className=\"text-muted\">\r\n              Add up to 5 tags to decribe what your question is about\r\n            </p> */}\r\n                {/* <input\r\n                  type=\"text\"\r\n                  className=\"form-control shadow-none border-none  text-one font-weight-medium my-3\"\r\n                  placeholder=\"\" */}\r\n                {/* //   value={inputkey1}\r\n              //     onChange={(e) => setSkills(e.target.value)}\r\n              //   />\r\n              // </div> */}\r\n\r\n                <div className=\"mt-3 d-flex justify-content-end\">\r\n                  {/* <Button\r\n                  color=\"primary \"\r\n                  className=\"default  py-2 \"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Post\r\n                </Button> */}\r\n                  {/* <Button\r\n                    color=\"primary\"\r\n                    // className=\"py-2\"\r\n                    className={`col-12 col-md-3 btn-shadow btn-multiple-state ${\r\n                      isLoading ? \"show-spinner\" : \"\"\r\n                    }`}\r\n                    // disabled={!isValid}\r\n                    onClick={() => {\r\n                      handleSubmit();\r\n                      // closeModal();\r\n                    }}\r\n                  >\r\n                    <span className=\"spinner d-inline-block\">\r\n                      <span className=\"bounce1\" />\r\n                      <span className=\"bounce2\" />\r\n                      <span className=\"bounce3\" />\r\n                    </span>\r\n                    <span className=\"label\">\r\n                      {initialData ? \"Submit\" : \"Post\"}\r\n                    </span>\r\n                  </Button> */}\r\n                  <Button\r\n                    color=\"primary\"\r\n                    className={`col-12 col-md-3 btn-shadow btn-multiple-state ${\r\n                      isLoading ? \"show-spinner\" : \"\"\r\n                    }`}\r\n                    onClick={handleSubmit}\r\n                    type=\"submit\"\r\n                    disabled={!isValid} // Disable the button if the form is invalid\r\n                  >\r\n                    <span className=\"spinner d-inline-block\">\r\n                      <span className=\"bounce1\" />\r\n                      <span className=\"bounce2\" />\r\n                      <span className=\"bounce3\" />\r\n                    </span>\r\n                    <span className=\"label\">\r\n                      {initialData ? \"Submit\" : \"Post\"}\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Colxx>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtherPosting;\r\n","import { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Field, Formik } from \"formik\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport indentityStatusList from \"../CommonCardList/IdentityStatusList\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\nimport {\r\n  ApartmentTypeData,\r\n  BHKData,\r\n  FloorData,\r\n  RoomMateType,\r\n  RoomTypeData,\r\n  parkingOptions,\r\n} from \"./ListingData\";\r\n\r\nconst quillModules = {\r\n  toolbar: [\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    // [\"link\", \"image\"],\r\n    // [\"clean\"],\r\n  ],\r\n};\r\nconst quillFormats = [\r\n  \"header\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n];\r\n\r\n// const ApartmentTypeData = [\r\n//   { label: \"Independent House/Villa\", value: 0 },\r\n//   { label: \"Gated Community Villa\", value: 1 },\r\n//   { label: \"Apartment\", value: 2 },\r\n// ];\r\n\r\n// const BHKData = [\r\n//   { label: \"1 BHK\", value: 0 },\r\n//   { label: \"2 BHK\", value: 1 },\r\n//   { label: \"3 BHK\", value: 2 },\r\n// ];\r\n\r\n// const FloorData = [\r\n//   { label: \"Ground Floor\", value: 0 },\r\n//   { label: \"1\", value: 1 },\r\n//   { label: \"2\", value: 2 },\r\n//   { label: \"3\", value: 3 },\r\n//   { label: \"4\", value: 4 },\r\n//   { label: \"5\", value: 5 },\r\n//   { label: \"6\", value: 6 },\r\n// ];\r\n\r\n// const RoomTypeData = [\r\n//   { label: \"Single Room\", value: 0 },\r\n//   { label: \"Shared Room\", value: 1 },\r\n// ];\r\n\r\nconst StayPosting = ({ closeModal, initialData, onEdit }) => {\r\n  const [id] = useState(initialData?.id || 0);\r\n  const [availableFrom, setAvailableFrom] = useState(\r\n    initialData?.availableFrom || new Date().getTime()\r\n  );\r\n  // const [title] = useState(initialData?.title || \"\");\r\n  // const [apartmentType] = useState(initialData?.apartmentTypeValue || null);\r\n  // const [BHKType] = useState(initialData?.bhkTypeValue || null);\r\n  // const [floor] = useState(initialData?.floorValue || null);\r\n  // const [roomType] = useState(initialData?.roomTypeValue || null);\r\n  // const [roomMate] = useState(initialData?.roomMateValue || null);\r\n  // const [expectedRent] = useState(initialData?.expectedRent || null);\r\n  // const [expectedDeposit] = useState(initialData?.expectedDeposit || null);\r\n  const [monthlyMaintenance, setMonthlyMaintenance] = useState(\r\n    initialData?.monthlyMaintenance || false\r\n  );\r\n  const [maintenanceAmount, setMaintenanceAmount] = useState(\r\n    initialData?.maintenanceAmount || null\r\n  );\r\n  // const [parking] = useState(initialData?.parkingValue || null);\r\n  // const [contact, setContact] = useState(initialData?.contact || \"\");\r\n  // const [email, setEmail] = useState(initialData?.email || \"\");\r\n  // const [mobileNumber, setMobileNumber] = useState(\r\n  //   initialData?.mobileNumber || \"\"\r\n  // );\r\n  // const [ownerName, setOwnerName] = useState(initialData?.ownerName || \"\");\r\n  // const [location, setLocation] = useState(initialData?.location || \"\");\r\n  // const [description, setDescription] = useState(\r\n  //   initialData?.description || \"\"\r\n  // );\r\n  // console.log(\"init\",initialData)\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!monthlyMaintenance) {\r\n      setMaintenanceAmount(null);\r\n    }\r\n  }, [monthlyMaintenance]);\r\n\r\n  const url = `${baseUrl}/api/posts/stay-post/`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  // const handleSubmit = async () => {\r\n  //   setIsLoading(true);\r\n  //   try {\r\n  //     const data = {\r\n  //       id,\r\n  //       title,\r\n  //       apartmentType,\r\n  //       bhkType: BHKType,\r\n  //       floor,\r\n  //       roomType,\r\n  //       roomMate,\r\n  //       expectedRent,\r\n  //       expectedDeposit,\r\n  //       availableFrom,\r\n  //       monthlyMaintenance,\r\n  //       maintenanceAmount: monthlyMaintenance ? maintenanceAmount : null,\r\n  //       parking,\r\n  //       contact,\r\n  //       description,\r\n  //     };\r\n  //     if (initialData) {\r\n  //       await onEdit(data);\r\n  //     } else {\r\n  //       const response = await axios.post(url, data, {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${token}`,\r\n  //         },\r\n  //       });\r\n  //       ToasterComponent(\"success\", response.data.statuses);\r\n  //     }\r\n  //     closeModal();\r\n  //     setIsLoading(false);\r\n  //     // console.log(\"job posted successfully\");\r\n  //   } catch (error) {\r\n  //     setIsLoading(false);\r\n  //     if (\r\n  //       error.response &&\r\n  //       error.response.data &&\r\n  //       error.response.data.statuses\r\n  //     ) {\r\n  //       ToasterComponent(\"error\", error.response.data.statuses);\r\n  //     } else {\r\n  //       console.error(\"Error posting job:\", error);\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  const handleDateChange = (date) => {\r\n    setAvailableFrom(date);\r\n    // const timestampInSeconds = date ? Math.floor(date.getTime() / 1000) : null;\r\n    const timestampInMilliseconds = date ? date.getTime() : null;\r\n\r\n    // console.log(timestampInSeconds);\r\n    setAvailableFrom(timestampInMilliseconds);\r\n  };\r\n\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleFileChange2 = (e) => {\r\n    setSelectedFiles([...e.target.files]); // Converts FileList to an array\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"mx-auto my-4 p-3\" style={{ maxWidth: \"900px\" }}>\r\n        {/* <h1 className=\"font-weight-semibold\">Create a Room Stay post</h1> */}\r\n        {/* <Card className=\"mt-3 p-3\"> */}\r\n        <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"mx-auto \">\r\n          <Formik\r\n            initialValues={{\r\n              title: initialData?.title || \"\",\r\n              BHKType: initialData?.bhkTypeValue || \"\",\r\n              floor: initialData?.floorValue || \"\",\r\n              apartmentType: initialData?.apartmentTypeValue || \"\",\r\n              roomType: initialData?.roomTypeValue || \"\",\r\n              roomMate: initialData?.roomMateValue || \"\",\r\n              expectedRent: initialData?.expectedRent || \"\",\r\n              expectedDeposit: initialData?.expectedDeposit || \"\",\r\n              // contact: initialData?.contact || \"\",\r\n              email: initialData?.email || \"\",\r\n              location: initialData?.location || \"\",\r\n              ownerName: initialData?.ownerName || \"\",\r\n              mobileNumber: initialData?.mobileNumber || \"\",\r\n              monthlyMaintenance: initialData?.monthlyMaintenance || false,\r\n              maintenanceAmount: initialData?.maintenanceAmount || null,\r\n              parking: initialData?.parkingValue || \"\",\r\n              description: initialData?.description || \"\",\r\n              stayCategory: initialData?.stayCategory || \"\",\r\n              parkingCount: initialData?.parkingCount || \"\",\r\n            }}\r\n            validate={(values) => {\r\n              const errors = {};\r\n              if (!values.title.trim()) {\r\n                errors.title = \"Title is required\";\r\n              }\r\n              if (!values.parkingCount.trim()) {\r\n                errors.parkingCount = \"Parking count is required\";\r\n              }\r\n              // if (!values.jobTitle.trim()) {\r\n              //   errors.jobTitle = \"Job title is required\";\r\n              // }\r\n\r\n              // if (!values.jobLocation.trim()) {\r\n              //   errors.jobLocation = \"Job location is required\";\r\n              // }\r\n              // if (!values.company.trim()) {\r\n              //   errors.company = \"Company is required\";\r\n              // }\r\n\r\n              if (!values.description.trim()) {\r\n                errors.description = \"Description is required\";\r\n              }\r\n              if (!values.BHKType.trim()) {\r\n                errors.BHKType = \"BHK type is required\";\r\n              }\r\n              if (!values.roomMate.trim()) {\r\n                errors.roomMate = \"Room mate is required\";\r\n              }\r\n              if (!values.apartmentType.trim()) {\r\n                errors.apartmentType = \"Apartment type is required\";\r\n              }\r\n              if (!values.floor.trim()) {\r\n                errors.floor = \"Floor type is required\";\r\n              }\r\n              if (!values.expectedRent.trim()) {\r\n                errors.expectedRent = \"Expected rent is required\";\r\n              }\r\n              if (!values.parking.trim()) {\r\n                errors.parking = \"parking is required\";\r\n              }\r\n              if (!values.stayCategory.trim()) {\r\n                errors.stayCategory = \"stay category is required\";\r\n              }\r\n              // if (values.skills.length === 0) {\r\n              //   errors.skills = \"At least one skill is required\";\r\n              // }\r\n              return errors;\r\n            }}\r\n            onSubmit={async (values, { setSubmitting }) => {\r\n              setIsLoading(true);\r\n              try {\r\n                const formData = new FormData();\r\n                // formData.append(\r\n                //   \"images\",\r\n                //   // selectedFiles.map((file) => file)\r\n                //   selectedFiles\r\n                // );\r\n                // const data = {\r\n                //   id,\r\n                //   title: values.title,\r\n                //   apartmentType: values.apartmentType,\r\n                //   bhkType: values.BHKType,\r\n                //   floor: values.floor,\r\n                //   roomType: values.roomType,\r\n                //   roomMate: values.roomMate,\r\n                //   expectedRent: values.expectedRent,\r\n                //   expectedDeposit: values.expectedDeposit,\r\n                //   availableFrom,\r\n                //   monthlyMaintenance,\r\n                //   maintenanceAmount: monthlyMaintenance\r\n                //     ? maintenanceAmount\r\n                //     : null,\r\n                //   parking: values.parking,\r\n                //   parkingCount: values.parkingCount,\r\n                //   contact,\r\n                //   description: values.description,\r\n                //   // stayCategory: values.stayCategory,\r\n                // };\r\n                // const data = {\r\n                //   id,\r\n                //   title: values.title,\r\n                //   apartmentType: parseInt(values.apartmentType, 10),\r\n                //   bhkType: parseInt(values.BHKType, 10),\r\n                //   floor: parseInt(values.floor, 10),\r\n                //   roomType: parseInt(values.roomType, 10),\r\n                //   roomMate: parseInt(values.roomMate, 10),\r\n                //   expectedRent: parseInt(values.expectedRent, 10),\r\n                //   expectedDeposit: parseInt(values.expectedDeposit, 10),\r\n                //   availableFrom: parseInt(availableFrom, 10),\r\n                //   monthlyMaintenance: values.monthlyMaintenance,\r\n                //   maintenanceAmount: values.monthlyMaintenance\r\n                //     ? parseInt(maintenanceAmount, 10)\r\n                //     : null,\r\n                //   parking: parseInt(values.parking, 10),\r\n                //   parkingCount: parseInt(values.parkingCount, 10),\r\n                //   ownerName: values.ownerName,\r\n                //   mobileNumber: parseInt(values.mobileNumber, 10),\r\n                //   email: values.email,\r\n                //   location: values.location,\r\n                //   description: values.description,\r\n                // };\r\n                const data = {\r\n                  id,\r\n                  title: values.title,\r\n                  apartmentType: parseInt(values.apartmentType, 10),\r\n                  bhkType: parseInt(values.BHKType, 10),\r\n                  floor: parseInt(values.floor, 10),\r\n                  roomType: parseInt(values.roomType, 10),\r\n                  roomMate: parseInt(values.roomMate, 10),\r\n                  expectedRent: parseInt(values.expectedRent, 10),\r\n                  expectedDeposit: parseInt(values.expectedDeposit, 10),\r\n                  availableFrom: parseInt(availableFrom, 10),\r\n                  monthlyMaintenance: values.monthlyMaintenance,\r\n                  maintenanceAmount: monthlyMaintenance\r\n                    ? parseInt(maintenanceAmount, 10)\r\n                    : null,\r\n                  parking: parseInt(values.parking, 10),\r\n                  parkingCount: parseInt(values.parkingCount, 10),\r\n                  // contact,\r\n                  ownerName: values.ownerName,\r\n                  // mobileNumber: parseInt(values.mobileNumber, 10),\r\n                  mobileNumber: `+91${parseInt(values.mobileNumber, 10)}`,\r\n                  // mobileNumber: +${values.mobileNumber},\r\n                  identityStatus: values.stayCategory,\r\n                  // };\r\n                  email: values.email,\r\n                  location: values.location,\r\n                  description: values.description,\r\n                };\r\n\r\n                // selectedFiles.forEach((file) => {\r\n                //   formData.append(\"images\", file);\r\n                // });\r\n\r\n                // formData.append(\r\n                //   \"stayRoom\",\r\n                //   // new Blob([JSON.stringify(data)], { type: \"application/json\" })\r\n                //   JSON.stringify(data)\r\n                // );\r\n\r\n                // formData.append(\"stayRoom\", JSON.stringify(data));\r\n                formData.append(\r\n                  \"stayRoom\",\r\n                  new Blob([JSON.stringify(data)], {\r\n                    type: \"application/json\",\r\n                  })\r\n                );\r\n\r\n                // formData.append(\r\n                //   \"stayRoom\",\r\n                //   new Blob([JSON.stringify(data)], { type: \"application/json\" })\r\n                // );\r\n\r\n                // Then append each file in selectedFiles as \"images\"\r\n                // selectedFiles.forEach((file) => {\r\n                //   formData.append(\"images\", file);\r\n                // });\r\n                console.log(\"Selected files:\", selectedFiles);\r\n                if (selectedFiles && selectedFiles.length > 0) {\r\n                  selectedFiles.forEach((file) => {\r\n                    console.log(\"File:\", file);\r\n                    formData.append(\"images\", file);\r\n                  });\r\n                }\r\n\r\n                console.log(\"FormData being sent: \", formData);\r\n                if (initialData) {\r\n                  await onEdit(data);\r\n                } else {\r\n                  const response = await axios.post(url, formData, {\r\n                    headers: {\r\n                      Authorization: `Bearer ${token}`,\r\n                    },\r\n                  });\r\n                  ToasterComponent(\"success\", response.data.statuses);\r\n                }\r\n                closeModal();\r\n                setIsLoading(false);\r\n              } catch (error) {\r\n                setIsLoading(false);\r\n                if (\r\n                  error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.statuses\r\n                ) {\r\n                  ToasterComponent(\"error\", error.response.data.statuses);\r\n                } else {\r\n                  console.error(\"Error posting/editing job:\", error);\r\n                }\r\n              }\r\n              setSubmitting(false);\r\n            }}\r\n          >\r\n            {({\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldValue,\r\n              handleSubmit,\r\n              setFieldTouched,\r\n              values,\r\n            }) => (\r\n              <Form className=\"av-tooltip tooltip-label-right \">\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Title*</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"title\"\r\n                        placeholder=\"\"\r\n                        value={values.title}\r\n                        // onChange={(e) => setTitle(e.target.value)}\r\n                        onChange={(e) => setFieldValue(\"title\", e.target.value)}\r\n                        required\r\n                        //   validate={}\r\n                      />\r\n\r\n                      {/* {errors.apartmentType && touched.apartmentType && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.apartmentType}\r\n                          </div>\r\n                        )} */}\r\n                      {errors.title && touched.title && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.title}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>BHK Type*</Label>\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"BHKType\"\r\n                        // onChange={(e) => setBHKType(e.target.value)}\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"BHKType\", e.target.value)\r\n                        }\r\n                        //   validate={}\r\n                        className=\"form-control\"\r\n                        // value={BHKType || \"\"}\r\n                        value={values.BHKType}\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select BHK type\r\n                        </option>\r\n                        {BHKData.map((option, index) => (\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          <option key={index} value={option.value}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Field>\r\n                      {errors.BHKType && touched.BHKType && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.BHKType}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Floor*</Label>\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"floor\"\r\n                        // onChange={(e) => setFloor(e.target.value)}\r\n                        onChange={(e) => setFieldValue(\"floor\", e.target.value)}\r\n                        //   validate={}\r\n                        className=\"form-control\"\r\n                        // value={floor || \"\"}\r\n                        value={values.floor}\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select Floor\r\n                        </option>\r\n                        {FloorData.map((option, index) => (\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          <option key={index} value={option.value}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Field>\r\n                      {errors.floor && touched.floor && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.floor}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Apartment Type*</Label>\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"apartmentType\"\r\n                        // onChange={(e) => setApartmentType(e.target.value)}\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"apartmentType\", e.target.value)\r\n                        }\r\n                        //   validate={}\r\n                        className=\"form-control\"\r\n                        // value={apartmentType || \"\"}\r\n                        value={values.apartmentType}\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select Apartment type\r\n                        </option>\r\n                        {ApartmentTypeData.map((option, index) => (\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          <option key={index} value={option.value}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Field>\r\n                      {errors.apartmentType && touched.apartmentType && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.apartmentType}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Room Type</Label>\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"roomType\"\r\n                        // onChange={(e) => setRoomType(e.target.value)}\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"roomType\", e.target.value)\r\n                        }\r\n                        //   validate={}\r\n                        className=\"form-control\"\r\n                        // value={roomType || \"\"}\r\n                        value={values.roomType}\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select Room Type\r\n                        </option>\r\n                        {RoomTypeData.map((option, index) => (\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          <option key={index} value={option.value}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Field>\r\n                      {errors.roomType && touched.roomType && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.roomType}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Room Mate*</Label>\r\n\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"roomMate\"\r\n                        // onChange={(e) => setRoomMate(e.target.value)}\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"roomMate\", e.target.value)\r\n                        }\r\n                        className=\"form-control\"\r\n                        // value={roomMate || \"\"}\r\n                        value={values.roomMate}\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select Room Mate\r\n                        </option>\r\n                        {RoomMateType.map((option, index) => (\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          <option key={index} value={option.value}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Field>\r\n\r\n                      {errors.roomMate && touched.roomMate && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.roomMate}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Expected Rent*</Label>\r\n\r\n                      <InputGroup className=\"mb-3\">\r\n                        <InputGroupAddon addonType=\"prepend\">₹</InputGroupAddon>\r\n                        <Input\r\n                          type=\"number\"\r\n                          placeholder=\"Enter Amount\"\r\n                          //   value={}\r\n                          // onChange={(e) => setExpectedRent(e.target.value)}\r\n                          onChange={(e) =>\r\n                            setFieldValue(\"expectedRent\", e.target.value)\r\n                          }\r\n                          //   className=\"col-12 col-md-3\"\r\n                          // value={expectedRent}\r\n                          value={values.expectedRent}\r\n                        />\r\n                      </InputGroup>\r\n                      {errors.expectedRent && touched.expectedRent && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.expectedRent}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Expected Deposit</Label>\r\n                      <InputGroup className=\"mb-3\">\r\n                        <InputGroupAddon addonType=\"prepend\">₹</InputGroupAddon>\r\n                        <Input\r\n                          type=\"number\"\r\n                          placeholder=\"Enter Amount\"\r\n                          //   value={}\r\n                          // onChange={(e) => setExpectedDeposit(e.target.value)}\r\n                          onChange={(e) =>\r\n                            setFieldValue(\"expectedDeposit\", e.target.value)\r\n                          }\r\n                          //   className=\"col-12 col-md-3\"\r\n                          // value={expectedDeposit}\r\n                          value={values.expectedDeposit}\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Monthly Maintenance</Label>\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"monthlyMaintenance\"\r\n                        // onChange={(e) => setMonthlyMaintenance(e.target.value)}\r\n                        onChange={(e) =>\r\n                          setMonthlyMaintenance(e.target.value === \"extra\")\r\n                        }\r\n                        // onChange={(e) =>\r\n                        //     setFieldValue(\"monthlyMaintenence\", e.target.value)\r\n                        //   }\r\n                        //   validate={}\r\n                        className=\"form-control\"\r\n                        value={monthlyMaintenance ? \"extra\" : \"include\"}\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select\r\n                        </option>\r\n                        <option key=\"include\" value=\"include\">\r\n                          Include\r\n                        </option>\r\n                        <option key=\"Extra\" value=\"extra\">\r\n                          Extra\r\n                        </option>\r\n                      </Field>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Maintenance Amount</Label>\r\n                      <InputGroup className=\"mb-3\">\r\n                        <InputGroupAddon addonType=\"prepend\">₹</InputGroupAddon>\r\n                        <Input\r\n                          type=\"number\"\r\n                          placeholder=\"Enter Amount\"\r\n                          disabled={!monthlyMaintenance}\r\n                          //   value={}\r\n                          value={maintenanceAmount || \"\"}\r\n                          onChange={(e) => setMaintenanceAmount(e.target.value)}\r\n                          //   className=\"col-12 col-md-3\"\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Owner name</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"ownerName\"\r\n                        placeholder=\"Enter owner name\"\r\n                        // onChange={(e) => setOwnerName(e.target.value)}\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"ownerName\", e.target.value)\r\n                        }\r\n                        value={values.owenerName}\r\n                        //   validate={}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Mobile number</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"mobile\"\r\n                        placeholder=\"Enter mobile number\"\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"mobileNumber\", e.target.value)\r\n                        }\r\n                        value={values.mobileNumber}\r\n                        //   validate={}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Email</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"company\"\r\n                        placeholder=\"Enter your email \"\r\n                        onChange={(e) => setFieldValue(\"email\", e.target.value)}\r\n                        value={values.email}\r\n                        //   validate={}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Available From</Label>\r\n                      <DatePicker\r\n                        selected={availableFrom}\r\n                        onChange={handleDateChange}\r\n                        // placeholderText={messages['forms.date']}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Parking</Label>\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"parking\"\r\n                        // onChange={(e) => setParking(e.target.value)}\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"parking\", e.target.value)\r\n                        }\r\n                        //   validate={}\r\n                        className=\"form-control\"\r\n                        // value={parking || \"\"}\r\n                        value={values.parking}\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select\r\n                        </option>\r\n\r\n                        {parkingOptions.map((option, index) => (\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          <option key={index} value={option.value}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Field>\r\n                      {errors.parking && touched.parking && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.parking}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Label>Stay Category*</Label>\r\n                    <Field\r\n                      as=\"select\"\r\n                      name=\"stayCategory\"\r\n                      // validate={validateIdentityStatus}\r\n                      onChange={(e) =>\r\n                        setFieldValue(\"stayCategory\", e.target.value)\r\n                      }\r\n                      className=\"form-control\"\r\n                      value={values.stayCategory}\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select Stay Category\r\n                      </option>\r\n                      {indentityStatusList.map((option) => (\r\n                        <option key={option.name} value={option.name}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))}\r\n                    </Field>\r\n                    {errors.stayCategory && touched.stayCategory && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.stayCategory}\r\n                      </div>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Parking Count*</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"parkingCount\"\r\n                        placeholder=\"\"\r\n                        value={values.parkingCount}\r\n                        // onChange={(e) => setTitle(e.target.value)}\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"parkingCount\", e.target.value)\r\n                        }\r\n                        required\r\n                        //   validate={}\r\n                      />\r\n\r\n                      {errors.parkingCount && touched.parkingCount && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.parkingCount}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Location</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"company\"\r\n                        placeholder=\"Enter your location\"\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"location\", e.target.value)\r\n                        }\r\n                        value={values.location}\r\n                        //   validate={}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Label>Image</Label>\r\n                    {/* Image Error Message */}\r\n                    {/* {imageError1 && (\r\n    <div className=\"invalid-feedback d-block\">\r\n      {imageErrorMessage1}\r\n    </div>\r\n  )} */}\r\n\r\n                    <InputGroup>\r\n                      <div>\r\n                        <Button\r\n                          className=\"default\"\r\n                          color=\"primary\"\r\n                          onClick={() =>\r\n                            document\r\n                              .getElementById(\"file-upload-resume\")\r\n                              .click()\r\n                          }\r\n                        >\r\n                          Upload Photos <i className=\"iconsminds-upload ml-2\" />\r\n                        </Button>\r\n                        <Input\r\n                          id=\"file-upload-resume\"\r\n                          type=\"file\"\r\n                          multiple\r\n                          className=\"d-none\"\r\n                          onChange={handleFileChange2}\r\n                        />\r\n                      </div>\r\n                    </InputGroup>\r\n                    <div className=\"my-2\">\r\n                      {selectedFiles.length > 0 ? (\r\n                        <ul>\r\n                          {selectedFiles.map((file) => (\r\n                            <li key={file}>Selected file: {file.name}</li>\r\n                          ))}\r\n                        </ul>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Description*</Label>\r\n                      <ReactQuill\r\n                        theme=\"snow\"\r\n                        value={values.description}\r\n                        onChange={(val) => setFieldValue(\"description\", val)}\r\n                        onBlur={() => setFieldTouched(\"description\", true)}\r\n                        modules={quillModules}\r\n                        formats={quillFormats}\r\n                      />\r\n                      {errors.description && touched.description && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.description}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <div className=\"mt-3 d-flex justify-content-end\">\r\n                  <Button\r\n                    color=\"primary \"\r\n                    className={`col-12 col-md-3 btn-shadow btn-multiple-state ${\r\n                      isLoading ? \"show-spinner\" : \"\"\r\n                    }`}\r\n                    // onClick={() => {\r\n                    //   handleSubmit();\r\n                    //   // closeModal();\r\n                    // }}\r\n                    onClick={handleSubmit}\r\n                    type=\"submit\"\r\n                    disabled={!isValid}\r\n                  >\r\n                    <span className=\"spinner d-inline-block\">\r\n                      <span className=\"bounce1\" />\r\n                      <span className=\"bounce2\" />\r\n                      <span className=\"bounce3\" />\r\n                    </span>\r\n                    <span className=\"label\">\r\n                      {initialData ? \"Submit\" : \"List a Room\"}\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Colxx>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StayPosting;\r\n","import React from 'react';\r\nimport { Card } from 'reactstrap'; // import CustomInput for using checkbox\r\n// import { NavLink } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport { ContextMenuTrigger } from 'react-contextmenu';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\n\r\nconst DataListViewpersonal = ({\r\n  product,\r\n  onCheckItem,\r\n  // isSelect, collect, onCheckItem\r\n}) => {\r\n  return (\r\n    <Colxx xs=\"4\" className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={product.id}>\r\n        <Card\r\n          onClick={(event) => onCheckItem(event, product.id)}\r\n          style={{ boxShadow: 'none' }}\r\n          className={classnames('d-flex flex-row', {\r\n            // active: isSelect,\r\n          })}\r\n        >\r\n          <p\r\n            style={{ paddingLeft: '5%' }}\r\n            className=\"list-item-heading mb-1 truncate warp\"\r\n          >\r\n            {`${product.title}    :   ${product.value}`}\r\n          </p>\r\n\r\n          {/* <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\"> */}\r\n          {/* <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\"> */}\r\n          {/* <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\r\n              </NavLink> */}\r\n          {/* <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                {product.category}\r\n                </p>\r\n                <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                {product.date}\r\n            </p> */}\r\n          {/* <p className=\"w-15 w-sm-100 \">\r\n              {product.value}\r\n              <Badge color={product.statusColor} pill>\r\n              </Badge>\r\n              </p> \r\n             */}\r\n          {/* </div> */}\r\n          {/* <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\r\n              <CustomInput\r\n              className=\"item-check mb-0\"\r\n              type=\"checkbox\"\r\n              id={`check_${product.id}`}\r\n              checked={isSelect}\r\n              onChange={() => {}}\r\n              label=\"\"\r\n              />\r\n            </div> */}\r\n          {/* </div> */}\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\r\nexport default React.memo(DataListViewpersonal);\r\n","import axios from 'axios';\r\nimport { baseUrl } from 'constants/defaultValues';\r\n\r\nexport const documentsService = {};\r\nexport const myDetailsService = {\r\n  async getEducationalInformation() {\r\n    // https://api.sampleapis.com/baseball/hitsSingleSeason\r\n    const url = `${baseUrl}api/student/edu/info`;\r\n    try {\r\n      return await axios\r\n        .get(url)\r\n        .then((res) => {\r\n          console.log('Response getEducationalInformation', res);\r\n          return res;\r\n        })\r\n        .catch((error) => {\r\n          return error;\r\n        });\r\n    } catch (e) {\r\n      return e;\r\n    }\r\n  },\r\n  async postEducationalInformation(body) {\r\n    const url = `${baseUrl}api/student/info`;\r\n    try {\r\n      return await axios\r\n        .post(url, body)\r\n        .then((res) => {\r\n          console.log('Response', res);\r\n          return res;\r\n        })\r\n        .catch((error) => {\r\n          console.log('err on post ', error);\r\n          return error;\r\n        });\r\n    } catch (e) {\r\n      return e;\r\n    }\r\n  },\r\n  async getPersonalInformation() {\r\n    const url = `${baseUrl}api/student/personal/info`;\r\n    try {\r\n      return await axios\r\n        .get(url)\r\n        .then((res) => {\r\n          console.log('Response', res);\r\n          return res;\r\n        })\r\n        .catch((error) => {\r\n          return error;\r\n        });\r\n    } catch (e) {\r\n      return e;\r\n    }\r\n  },\r\n  async postPersonalInformation(body) {\r\n    const url = `${baseUrl}api/student/personal/info`;\r\n    try {\r\n      return await axios\r\n        .post(url, body)\r\n        .then((res) => {\r\n          console.log('Response', res);\r\n          return res;\r\n        })\r\n        .catch((error) => {\r\n          return error;\r\n        });\r\n    } catch (e) {\r\n      return e;\r\n    }\r\n  },\r\n  async getProfessionalInformation() {\r\n    const url = `${baseUrl}api/student/prof/info`;\r\n    try {\r\n      return await axios\r\n        .get(url)\r\n        .then((res) => {\r\n          console.log('Response', res);\r\n          return res;\r\n        })\r\n        .catch((error) => {\r\n          return error;\r\n        });\r\n    } catch (e) {\r\n      return e;\r\n    }\r\n  },\r\n  async postProfessionalInformation(body) {\r\n    const url = `${baseUrl}api/student/prof/info`;\r\n    try {\r\n      return await axios\r\n        .post(url, body)\r\n        .then((res) => {\r\n          console.log('Response', res);\r\n          return res;\r\n        })\r\n        .catch((error) => {\r\n          return error;\r\n        });\r\n    } catch (e) {\r\n      return e;\r\n    }\r\n  },\r\n};\r\n","import { myDetailsService } from '../../../../../services/services';\r\n// import { jobService } from '../../../../../services/jobservice';\r\n\r\n// myDetailsService.postEducationalInformation({\r\n//   bachelorDegName: 'BS 2',\r\n//   bachelorDomain: 2,\r\n//   bachelorPercent: 210,\r\n//   backlogs: 23,\r\n//   tenthPercent: 215,\r\n//   twelfthGroup: 'group 1',\r\n//   twelfthPercent: 14,\r\n//   userId: 1,\r\n// });\r\n\r\n// jobService.getJob().then((res) => {\r\n//   console.log(res);\r\n// });\r\n\r\nmyDetailsService.getEducationalInformation();\r\n\r\nconst educationalInformationData = {\r\n  id: 0,\r\n  payload: [\r\n    {\r\n      id: 0,\r\n      title: 'Tenth Percentage',\r\n      value: `92.3`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 1,\r\n      title: 'Twelveth Percentage',\r\n      value: `83`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Twelveth Group',\r\n      value: 'Group1',\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Bachelor Degree',\r\n      value: 'CS',\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Bachelor Domain Course',\r\n      value: 'Computer',\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Bachelors Percentage',\r\n      value: `3.8`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Backlogs',\r\n      value: 0,\r\n      statusColor: 'red',\r\n    },\r\n  ],\r\n};\r\n\r\nexport default educationalInformationData;\r\n\r\n// Section 2: Educational Information\r\n// 1. tenth_percent float\r\n// 2. twelfth_percent float\r\n// 3. twelfth_group varchar\r\n// 4. bachelor_deg_name varchar\r\n// 5. bachelor_domain course_category\r\n// 6. bachelor_percent float\r\n// 7. backlogs int\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from 'reactstrap';\r\nimport educationalInformationData from '../data/educationalInformation-data';\r\n// import classNames from 'classnames';\r\n\r\nconst bachelorDgDomainCourseOptions = [\r\n  'Select',\r\n  'pf',\r\n  'oop',\r\n  'databse',\r\n  'psycology',\r\n  'calculus',\r\n  'discrete math',\r\n  'communication skill',\r\n  'technical writing',\r\n  'functional english',\r\n  'ISL',\r\n  'PS',\r\n  'Human resource management',\r\n];\r\n\r\nconst { payload } = educationalInformationData;\r\nfunction InputEducationalInformation() {\r\n  const [data, setData] = useState({\r\n    TwelfthPercentage: '',\r\n    TenthPercentage: '',\r\n    TwelfthGroup: '',\r\n    BachelorDegreeName: '',\r\n    BachelorDegreeDomainCourse: '',\r\n    BachelorPercentage: '',\r\n    Backlogs: '',\r\n  });\r\n\r\n  const [open, setOpen] = useState(false);\r\n  function toggleModalFunction() {\r\n    setOpen((oldValue) => !oldValue);\r\n  }\r\n\r\n  function handleChange(event) {\r\n    switch (event.target.name) {\r\n      case 'twelfth_percent':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, TwelfthPercentage: event.target.value };\r\n        });\r\n\r\n        break;\r\n      case 'tenth_percent':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, TenthPercentage: event.target.value };\r\n        });\r\n        break;\r\n      case 'twelfth_group':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, TwelfthGroup: event.target.value };\r\n        });\r\n        break;\r\n      case 'bachelor_degName':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, BachelorDegreeName: event.target.value };\r\n        });\r\n        break;\r\n      case 'bachelor_degDomain_course':\r\n        setData((prevValue) => {\r\n          return {\r\n            ...prevValue,\r\n            BachelorDegreeDomainCourse: event.target.value,\r\n          };\r\n        });\r\n        break;\r\n      case 'bachelor_degPercentage':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, BachelorPercentage: event.target.value };\r\n        });\r\n        break;\r\n      case 'Backlogs':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, Backlogs: event.target.value };\r\n        });\r\n        break;\r\n\r\n      default:\r\n        console.log('default ran');\r\n        break;\r\n    }\r\n    setTimeout(() => {\r\n      console.log(data);\r\n    }, 2000);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"d-flex flex-row-reverse justify-content-between\">\r\n        <Button\r\n          outline\r\n          style={{ margin: '0 3% 3% 0' }}\r\n          onClick={() => {\r\n            toggleModalFunction();\r\n          }}\r\n        >\r\n          {payload.title === null ? 'Enter' : 'Edit'}\r\n        </Button>\r\n      </span>\r\n\r\n      <div>\r\n        <Modal\r\n          style={{ maxWidth: '70%', maxHeight: '80%' }}\r\n          isOpen={open}\r\n          toggle={() => {\r\n            toggleModalFunction();\r\n          }}\r\n          centered={!false}\r\n        >\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <ModalHeader\r\n              style={{\r\n                display: 'inline',\r\n                alignSelf: 'flex-end',\r\n              }}\r\n            >\r\n              Educational Information\r\n            </ModalHeader>\r\n\r\n            <Button\r\n              onClick={() => {\r\n                toggleModalFunction();\r\n              }}\r\n              outline\r\n              style={{ height: '2rem' }}\r\n              color=\"danger\"\r\n            >\r\n              <i className=\"iconsminds-close\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <ModalBody>\r\n            <Form>\r\n              {/* <div\r\n        style={{\r\n          display: 'flex',\r\n          flexBasis: '40%',\r\n          flexWrap: 'wrap',\r\n          rowGap: '10px',\r\n          justifyContent: 'space-evenly',\r\n          alignContent: 'space-between',\r\n        }}\r\n        > */}\r\n              {/* <div\r\n            style={{ width: '50%' }}\r\n          > */}\r\n              <FormGroup inline>\r\n                <Row>\r\n                  <Col xs=\"6\">\r\n                    <Label>Twelfth Percentage</Label>\r\n                    <Input\r\n                      // style={{ width: '50%' }}\r\n                      type=\"text\"\r\n                      name=\"twelfth_percent\"\r\n                      id=\"twelfth_percent\"\r\n                      placeholder=\"eg 80\"\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  {/* </FormGroup>\r\n                <FormGroup> */}\r\n                  <Col xs=\"6\">\r\n                    <Label>Tenth Percentage</Label>\r\n                    <Input\r\n                      // style={{ width: '50%' }}\r\n                      type=\"text\"\r\n                      name=\"tenth_percent\"\r\n                      id=\"tenthth_percent\"\r\n                      placeholder=\"eg 80\"\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label>Twelfth Group</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"twelfth_group\"\r\n                  id=\"twelfth_group\"\r\n                  placeholder=\"eg A\"\r\n                  onChange={(e) => {\r\n                    handleChange(e);\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col xs=\"6\">\r\n                    <Label>Bachelor Degree Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"bachelor_degName\"\r\n                      id=\"bachelor_degName\"\r\n                      placeholder=\"eg Computer Science\"\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  {/* </FormGroup> */}\r\n                  {/* </div> */}\r\n                  {/* <div style={{ width: '50%' }}> */}\r\n                  {/* <FormGroup> */}\r\n                  <Col xs=\"6\">\r\n                    <Label>Bachelor Degree Domain Course</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"bachelor_degDomain_course\"\r\n                      id=\"bachelor_degDomain_course\"\r\n                      placeholder=\"eg Computer Science\"\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                    >\r\n                      {bachelorDgDomainCourseOptions.map((course, id) => {\r\n                        // random key generation\r\n                        let i = id;\r\n                        i += 17;\r\n                        return <option key={i}>{course}</option>;\r\n                      })}\r\n                    </Input>\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col xs=\"6\">\r\n                    <Label>Bachelor Percentage</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"bachelor_degPercentage\"\r\n                      id=\"bachelor_degPercentage\"\r\n                      placeholder=\"eg 80\"\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  {/* </FormGroup>\r\n              <FormGroup> */}\r\n                  <Col xs=\"6\">\r\n                    <Label>Backlogs</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"Backlogs\"\r\n                      id=\"Backlogs\"\r\n                      placeholder=\"0\"\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              {/* </div> */}\r\n              {/* </div> */}\r\n            </Form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              //   type=\"submit\"\r\n              onClick={() => {\r\n                console.log('pushed : ', data);\r\n                setOpen(false);\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputEducationalInformation;\r\n","import React, {\r\n  // useEffect,\r\n  useState,\r\n} from 'react';\r\n// import { myDetailsService } from 'services/services';\r\nimport DataListViewPersonal from 'containers/pages/DataListView-personal';\r\nimport { Collapse, Card, Button } from 'reactstrap';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\nimport { ContextMenuTrigger } from 'react-contextmenu';\r\nimport educationalInformationData from './data/educationalInformation-data';\r\nimport InputEducationalInformation from './input/educationalInformation-input';\r\n\r\nconst title = 'Educational Information';\r\n\r\nconst EducationalInformation = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n  function onSetToggle() {\r\n    setToggle((prevValue) => {\r\n      return !prevValue;\r\n    });\r\n  }\r\n  const { payload } = educationalInformationData;\r\n  return (\r\n    <Colxx xxs=\"12\" className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={title}>\r\n        <Card>\r\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row  min-width-zero align-items-lg-center\">\r\n              <span className=\"d-flex \">\r\n                <h1 style={{ marginRight: '1rem' }}>{title}</h1>\r\n                {toggle && <InputEducationalInformation />}\r\n              </span>\r\n            </div>\r\n            <div className=\"align-self-center\">\r\n              <Button\r\n                color=\"link\"\r\n                size=\"lg\"\r\n                onClick={() => {\r\n                  onSetToggle();\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    toggle === !false\r\n                      ? 'iconsminds-arrow-up'\r\n                      : 'iconsminds-arrow-down'\r\n                  }\r\n                />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <Collapse isOpen={toggle}>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', flex: '0 0 73%' }}>\r\n              {payload.map((product) => {\r\n                return (\r\n                  <DataListViewPersonal\r\n                    key={product.id}\r\n                    product={product}\r\n                    isSelect={() => {\r\n                      console.log('isSelect ran');\r\n                    }}\r\n                    onCheckItem={() => {\r\n                      console.log('onCheckitem ran');\r\n                    }}\r\n                    collect={() => {\r\n                      console.log('collect ran');\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </Collapse>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\nexport default EducationalInformation;\r\n","const personalInformationData = {\r\n  id: 0,\r\n  payload: [\r\n    {\r\n      id: 0,\r\n      title: 'First Name',\r\n      value: `Test`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 1,\r\n      title: 'Last Name',\r\n      value: `User`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Age',\r\n      value: `20`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Date of Birth',\r\n      value: `20-03-1999`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Adress Lane 1',\r\n      value: `346 Walton Street Newyork city`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Adress Lane 2',\r\n      value: `Newyork `,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 7,\r\n      title: 'ZipCode',\r\n      value: 56770,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 8,\r\n      title: 'State',\r\n      value: `California`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 9,\r\n      title: 'Country ',\r\n      value: `USA`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 10,\r\n      title: 'ADHAAR',\r\n      value: `0000548618961885`,\r\n      statusColor: 'red',\r\n    },\r\n  ],\r\n};\r\n\r\nexport default personalInformationData;\r\n\r\n// Section 1: Personal Information\r\n// 1. first_name varchar\r\n// 2. last_name varchar\r\n// 3. gender varchar\r\n// 4. age int\r\n// 5. dob date\r\n// 6. address_l1 varchar\r\n// 7. address_l2 varchar\r\n// 8. zip_code bigint\r\n// 9. state varchar\r\n// 10. country varchar\r\n// 11. adhaar_no bigint\r\n","import React, { useState } from 'react'; //\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from 'reactstrap';\r\nimport personalInformationData from '../data/personalInformation-data';\r\n\r\nconst bachelorDgDomainCourseOptions = ['Select', 'Male', 'Female', 'Other'];\r\nconst { payload } = personalInformationData;\r\n\r\nfunction InputPersonalInformation() {\r\n  const [data, setData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    Gender: '',\r\n    Age: 0,\r\n    dateOfBirth: '',\r\n    addressLane1: '',\r\n    addressLane2: '',\r\n    zipCode: 0,\r\n    state: '',\r\n    country: '',\r\n    adhaarNumber: '',\r\n  });\r\n\r\n  const [open, setOpen] = useState(false);\r\n  function toggleModalFunction() {\r\n    setOpen((oldValue) => !oldValue);\r\n  }\r\n  function handleChange(event) {\r\n    switch (event.target.name) {\r\n      case 'first_name':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, firstName: event.target.value };\r\n        });\r\n\r\n        break;\r\n      case 'last_name':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, lastName: event.target.value };\r\n        });\r\n        break;\r\n      case 'age':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, Age: event.target.value };\r\n        });\r\n        break;\r\n      case 'date_of_birth':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, dateOfBirth: event.target.value };\r\n        });\r\n        break;\r\n      case 'address_L1':\r\n        setData((prevValue) => {\r\n          return {\r\n            ...prevValue,\r\n            addressLane1: event.target.value,\r\n          };\r\n        });\r\n        break;\r\n      case 'address_L2':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, addressLane2: event.target.value };\r\n        });\r\n        break;\r\n      case 'gender':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, Gender: event.target.value };\r\n        });\r\n        break;\r\n      case 'state':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, state: event.target.value };\r\n        });\r\n        break;\r\n      case 'country':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, country: event.target.value };\r\n        });\r\n        break;\r\n      case 'zip_code':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, zipCode: event.target.value };\r\n        });\r\n        break;\r\n      case 'adhaar_number':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, adhaarNumber: event.target.value };\r\n        });\r\n        break;\r\n\r\n      default:\r\n        console.log('default ran');\r\n        break;\r\n    }\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"d-flex flex-row-reverse justify-content-between\">\r\n        <Button\r\n          outline\r\n          style={{ margin: '0 3% 3% 0' }}\r\n          onClick={() => {\r\n            toggleModalFunction();\r\n          }}\r\n        >\r\n          {payload.title === null ? 'Enter' : 'Edit'}\r\n        </Button>\r\n      </span>\r\n      <Modal\r\n        scrollable={!false}\r\n        style={{ maxWidth: '70%', maxHeight: '80%' }}\r\n        isOpen={open}\r\n        toggle={() => {\r\n          toggleModalFunction();\r\n        }}\r\n        centered={!false}\r\n      >\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <ModalHeader\r\n            style={{\r\n              display: 'inline',\r\n              alignSelf: 'flex-end',\r\n            }}\r\n          >\r\n            Personal Information\r\n          </ModalHeader>\r\n\r\n          <Button\r\n            onClick={() => {\r\n              toggleModalFunction();\r\n            }}\r\n            outline\r\n            style={{ height: '2rem' }}\r\n            color=\"danger\"\r\n          >\r\n            <i className=\"iconsminds-close\" />\r\n          </Button>\r\n        </div>\r\n\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Row>\r\n                <Col xs=\"6\">\r\n                  <Label>First Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"first_name\"\r\n                    id=\"first_name\"\r\n                    placeholder=\"Alex\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                {/* </FormGroup>\r\n            <FormGroup> */}\r\n                <Col xs=\"6\">\r\n                  <Label>Last Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"last_name\"\r\n                    id=\"last_name\"\r\n                    placeholder=\"Murfy\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Row>\r\n                <Col xs=\"6\">\r\n                  <Label>Age</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"age\"\r\n                    id=\"age\"\r\n                    placeholder=\"eg. 18\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                {/* </FormGroup>\r\n            <FormGroup> */}\r\n                <Col xs=\"6\">\r\n                  <Label>Gender</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"gender\"\r\n                    id=\"gender\"\r\n                    placeholder=\"\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  >\r\n                    {bachelorDgDomainCourseOptions.map((course, id) => {\r\n                      // random key generation\r\n                      let i = id;\r\n                      i += 17;\r\n                      return <option key={i}>{course}</option>;\r\n                    })}\r\n                  </Input>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Date Of Birth</Label>\r\n              <Input\r\n                type=\"date\"\r\n                name=\"date_of_birth\"\r\n                id=\"date_of_birth\"\r\n                placeholder=\"\"\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Address Lane 1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"address_L1\"\r\n                id=\"address_L1\"\r\n                placeholder=\"...\"\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Address Lane 2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"address_L2\"\r\n                id=\"address_L2\"\r\n                placeholder=\"...\"\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                }}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Row>\r\n                <Col xs=\"6\">\r\n                  <Label>State</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"state\"\r\n                    id=\"state\"\r\n                    placeholder=\"California\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                {/* </FormGroup>\r\n            <FormGroup> */}\r\n                <Col xs=\"6\">\r\n                  <Label>Country</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"country\"\r\n                    id=\"country\"\r\n                    placeholder=\"USA\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Row>\r\n                <Col xs=\"6\">\r\n                  <Label>ZIP Code</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"zip_code\"\r\n                    id=\"zip_code\"\r\n                    placeholder=\"54770\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                {/* </FormGroup>\r\n            <FormGroup> */}\r\n                <Col xs=\"6\">\r\n                  <Label>ADHAAR Number</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"adhaar_number\"\r\n                    id=\"adhaar_number\"\r\n                    placeholder=\"0\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            //   type=\"submit\"\r\n            onClick={() => {\r\n              console.log('pushed : ', data);\r\n              setOpen(false);\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputPersonalInformation;\r\n","import React, { useState } from 'react';\r\nimport DataListViewPersonal from 'containers/pages/DataListView-personal';\r\nimport { Collapse, Card, Button } from 'reactstrap';\r\nimport { ContextMenuTrigger } from 'react-contextmenu';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\nimport personalInformationData from './data/personalInformation-data';\r\nimport InputPersonalInformation from './input/personalInformation-input';\r\n\r\nconst title = 'Personal Information';\r\n\r\nconst PersonalInformation = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n  function onSetToggle() {\r\n    setToggle((prevValue) => {\r\n      return !prevValue;\r\n    });\r\n  }\r\n  const { payload } = personalInformationData;\r\n\r\n  return (\r\n    <Colxx xxs=\"12\" className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={title}>\r\n        <Card>\r\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n              <span className=\"d-flex \">\r\n                <h1 style={{ marginRight: '1rem' }}>{title}</h1>\r\n\r\n                {toggle && <InputPersonalInformation />}\r\n              </span>\r\n            </div>\r\n            <div className=\"align-self-center\">\r\n              <Button\r\n                color=\"link\"\r\n                size=\"lg\"\r\n                onClick={() => {\r\n                  onSetToggle();\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    toggle === !false\r\n                      ? 'iconsminds-arrow-up'\r\n                      : 'iconsminds-arrow-down'\r\n                  }\r\n                />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <Collapse isOpen={toggle}>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n              {payload.map((product) => {\r\n                return (\r\n                  <DataListViewPersonal\r\n                    key={product.id}\r\n                    product={product}\r\n                    isSelect={() => {\r\n                      console.log('isSelect ran');\r\n                    }}\r\n                    onCheckItem={() => {\r\n                      console.log('onCheckitem ran');\r\n                    }}\r\n                    collect={() => {\r\n                      console.log('collect ran');\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </Collapse>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\nexport default PersonalInformation;\r\n","const professionalInformationData = {\r\n  id: 0,\r\n  payload: [\r\n    {\r\n      id: 0,\r\n      title: 'Organisation Name',\r\n      value: `XYZ`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 1,\r\n      title: 'Role',\r\n      value: `Student`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Start Date',\r\n      value: `20-09-2020`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'End Date',\r\n      value: `20-03-2026`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Termination Reason',\r\n      value: `RSN`,\r\n      statusColor: 'red',\r\n    },\r\n  ],\r\n};\r\n\r\nexport default professionalInformationData;\r\n\r\n// Section 3: Professional Information\r\n// 1. organisation varchar\r\n// 2. role varchar\r\n// 3. start_date date\r\n// 4. end_date date\r\n// 5. terminatn_rsn varchar\r\n","import React, { useState } from 'react'; //\r\n\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from 'reactstrap';\r\nimport professionalInformationData from '../data/professionalInformation-data';\r\n\r\nfunction InputProfessionalInformation() {\r\n  const [data, setData] = useState({\r\n    Organization: '',\r\n    Role: '',\r\n    StartDate: '',\r\n    EndDate: '',\r\n    TerminationReason: '',\r\n  });\r\n  const { payload } = professionalInformationData;\r\n  const [open, setOpen] = useState(false);\r\n  function toggleModalFunction() {\r\n    setOpen((oldValue) => !oldValue);\r\n  }\r\n\r\n  function handleChange(event) {\r\n    switch (event.target.name) {\r\n      case 'organization':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, Organization: event.target.value };\r\n        });\r\n\r\n        break;\r\n      case 'role':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, Role: event.target.value };\r\n        });\r\n        break;\r\n      case 'start_date':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, StartDate: event.target.value };\r\n        });\r\n        break;\r\n      case 'end_date':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, EndDate: event.target.value };\r\n        });\r\n        break;\r\n      case 'termination_rsn':\r\n        setData((prevValue) => {\r\n          return {\r\n            ...prevValue,\r\n            TerminationReason: event.target.value,\r\n          };\r\n        });\r\n        break;\r\n      default:\r\n        console.log('default ran');\r\n        break;\r\n    }\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"d-flex flex-row-reverse justify-content-between\">\r\n        <Button\r\n          style={{ margin: '0 3% 3% 0' }}\r\n          outline\r\n          onClick={() => {\r\n            toggleModalFunction();\r\n          }}\r\n        >\r\n          {payload.title === null ? 'Enter' : 'Edit'}\r\n        </Button>\r\n      </span>\r\n      <Modal\r\n        scrollable={!false}\r\n        style={{ maxWidth: '70%', maxHeight: '80%' }}\r\n        isOpen={open}\r\n        toggle={() => {\r\n          toggleModalFunction();\r\n        }}\r\n        centered={!false}\r\n      >\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <ModalHeader\r\n            style={{\r\n              display: 'inline',\r\n              alignSelf: 'flex-end',\r\n            }}\r\n          >\r\n            Professional Information\r\n          </ModalHeader>\r\n\r\n          <Button\r\n            onClick={() => {\r\n              toggleModalFunction();\r\n            }}\r\n            outline\r\n            style={{ height: '2rem' }}\r\n            color=\"danger\"\r\n          >\r\n            <i className=\"iconsminds-close\" />\r\n          </Button>\r\n        </div>\r\n\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Row>\r\n                <Col xs=\"6\">\r\n                  <Label>Organization</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"organization\"\r\n                    id=\"organization\"\r\n                    placeholder=\"NUST\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                {/* </FormGroup>\r\n            <FormGroup> */}\r\n                <Col xs=\"6\">\r\n                  <Label>Role</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"role\"\r\n                    id=\"role\"\r\n                    placeholder=\"Professor\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Row>\r\n                <Col xs=\"6\">\r\n                  <Label>Start Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"start_date\"\r\n                    id=\"start_date\"\r\n                    placeholder=\"\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                {/* </FormGroup>\r\n            <FormGroup> */}\r\n                <Col xs=\"6\">\r\n                  <Label>End Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"end_date\"\r\n                    id=\"end_date\"\r\n                    placeholder=\"\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Termination Reason</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"termination_rsn\"\r\n                id=\"termination_rsn\"\r\n                placeholder=\"bad manners\"\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                }}\r\n              />\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            //   type=\"submit\"\r\n            onClick={() => {\r\n              console.log('pushed : ', data);\r\n              setOpen(false);\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputProfessionalInformation;\r\n","import React, { useState } from 'react';\r\nimport DataListViewPersonal from 'containers/pages/DataListView-personal';\r\nimport { Collapse, Card, Button } from 'reactstrap';\r\nimport { ContextMenuTrigger } from 'react-contextmenu';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\nimport professionalInformationData from './data/professionalInformation-data';\r\nimport InputProfessionalInformation from './input/professionalInformation-input';\r\n\r\nconst title = 'Professional Information';\r\nconst ProfessinalInformation = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n  function onSetToggle() {\r\n    setToggle(!toggle);\r\n  }\r\n\r\n  const { payload } = professionalInformationData;\r\n\r\n  return (\r\n    <Colxx xxs=\"12\" className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={title}>\r\n        <Card>\r\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n              <span className=\"d-flex \">\r\n                <h1 style={{ marginRight: '1rem' }}>{title}</h1>\r\n                {toggle && <InputProfessionalInformation />}\r\n              </span>\r\n            </div>\r\n            <div className=\"align-self-center\">\r\n              <Button\r\n                color=\"link\"\r\n                size=\"lg\"\r\n                onClick={() => {\r\n                  onSetToggle();\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    toggle === !false\r\n                      ? 'iconsminds-arrow-up'\r\n                      : 'iconsminds-arrow-down'\r\n                  }\r\n                />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <Collapse isOpen={toggle}>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', flex: '0 0 33%' }}>\r\n              {payload.map((product) => {\r\n                return (\r\n                  <DataListViewPersonal\r\n                    key={product.id}\r\n                    product={product}\r\n                    isSelect={() => {\r\n                      console.log('isSelect ran');\r\n                    }}\r\n                    onCheckItem={() => {\r\n                      console.log('onCheckitem ran');\r\n                    }}\r\n                    collect={() => {\r\n                      console.log('collect ran');\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </Collapse>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\nexport default ProfessinalInformation;\r\n","import React from 'react';\r\nimport EducationalInformation from './educational-information';\r\nimport PersonalInformation from './personal-information';\r\nimport ProfessinalInformation from './professional-information';\r\n// import InputEducationalInformation from './input/educationalInformation-input';\r\n// import InputProfessionalInformation from './input/professionalInformation-input';\r\n// import InputPersonalInformation from './input/personalInformation-input';\r\n\r\nconst MyDetails = () => {\r\n  return (\r\n    <div>\r\n      <h1>MyDetails</h1>\r\n      <EducationalInformation />\r\n      {/* <InputEducationalInformation /> */}\r\n      <ProfessinalInformation />\r\n      {/* <InputProfessionalInformation /> */}\r\n      <PersonalInformation />\r\n      {/* <InputPersonalInformation /> */}\r\n      {/* <ul>\r\n        <li></li>\r\n        <li></li>\r\n        <br />\r\n        <li></li>\r\n        <li></li>\r\n        <br />\r\n        <li></li>\r\n        <li></li>\r\n        <br />\r\n      </ul> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyDetails;\r\n","const AdmissionDocumentsData = {\r\n  id: 0,\r\n  payload: [\r\n    {\r\n      id: 0,\r\n      title: 'SOP',\r\n      value: `Value`,\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 1,\r\n      title: 'ENG exam Marksheet',\r\n      value: `Value`,\r\n      date: '15-03-2021',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'APT exam Marksheet',\r\n      value: 'Value',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'LOR',\r\n      value: 'CS',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'COE',\r\n      value: 'value',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Admission Essay',\r\n      value: `Submitted`,\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Personal Statement',\r\n      value: 'submitted',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 7,\r\n      title: 'Cond Offer Letter',\r\n      value: 'none',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 8,\r\n      title: 'uncond Offer letter',\r\n\r\n      value: 'none',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 9,\r\n      title: 'Record of Achievement',\r\n      value: 'none',\r\n      date: '15-03-2022',\r\n    },\r\n  ],\r\n};\r\n\r\nexport default AdmissionDocumentsData;\r\n\r\n//   Section 2: Admission documents\r\n// 1. sop varchar\r\n// 2. english_exm_mrksheet varchar\r\n// 3. apt_exam_mrksheet varchar\r\n// 4. lor varchar\r\n// 5. coe varchar\r\n// 6. addm_eaasy varchar\r\n// 7. personal_stmt varchar\r\n// 8. cond_offer_ltr varchar\r\n// 9. uncond_offer_ltr varchar\r\n// 10. record_of_achvmnt varchar\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n  ButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  Row,\r\n  Col,\r\n} from 'reactstrap';\r\n\r\nfunction UploadData(props) {\r\n  const { MenuOptions } = props;\r\n  const [dropDownValue, setDropDownValue] = useState('Document Type');\r\n  const [dropDowsState, setDropDownState] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [data, setData] = useState({\r\n    file: '',\r\n    type: '',\r\n  });\r\n\r\n  function handleUploadData(type, value) {\r\n    switch (type) {\r\n      case 'documentTypeSelect':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, type: value };\r\n        });\r\n        break;\r\n      case 'fileName':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, file: value };\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function toggleModalFunction() {\r\n    setOpen((oldValue) => !oldValue);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"d-flex flex-row-reverse justify-content-between\">\r\n        <Button\r\n          outline\r\n          style={{ margin: '0 3% 3% 0' }}\r\n          onClick={() => {\r\n            toggleModalFunction();\r\n          }}\r\n        >\r\n          {MenuOptions.title === null ? 'Upload Document' : 'Edit'}\r\n        </Button>\r\n      </span>\r\n\r\n      <div>\r\n        <Modal\r\n          style={{ maxWidth: '70%' }}\r\n          isOpen={open}\r\n          toggle={() => {\r\n            toggleModalFunction();\r\n          }}\r\n          centered={!false}\r\n        >\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <ModalHeader\r\n              style={{\r\n                display: 'inline',\r\n                alignSelf: 'flex-end',\r\n              }}\r\n            >\r\n              Upload Document\r\n            </ModalHeader>\r\n\r\n            <Button\r\n              onClick={() => {\r\n                toggleModalFunction();\r\n              }}\r\n              outline\r\n              style={{ height: '2rem' }}\r\n              color=\"danger\"\r\n            >\r\n              <i className=\"iconsminds-close\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <ModalBody>\r\n            <Row>\r\n              <Col xs=\"6\">\r\n                <Input\r\n                  onChange={(e) => {\r\n                    console.log(e.target.files);\r\n                    handleUploadData('fileName', e.target.files);\r\n                  }}\r\n                  type=\"file\"\r\n                />\r\n              </Col>\r\n              <Col xs=\"6\">\r\n                <ButtonDropdown\r\n                  direction=\"right\"\r\n                  isOpen={dropDowsState}\r\n                  toggle={() => {\r\n                    setDropDownState((prevValue) => {\r\n                      return !prevValue;\r\n                    });\r\n                  }}\r\n                >\r\n                  <DropdownToggle caret>{dropDownValue}</DropdownToggle>\r\n                  <DropdownMenu>\r\n                    {MenuOptions.map((product) => {\r\n                      return (\r\n                        <DropdownItem\r\n                          name=\"documentTypeSelect\"\r\n                          onClick={(e) => {\r\n                            console.log(e);\r\n                            setDropDownValue(e.target.innerHTML);\r\n                            handleUploadData(\r\n                              'documentTypeSelect',\r\n                              e.target.innerHTML\r\n                            );\r\n                          }}\r\n                          key={product.id}\r\n                        >\r\n                          {product.title}\r\n                        </DropdownItem>\r\n                      );\r\n                    })}\r\n                  </DropdownMenu>\r\n                </ButtonDropdown>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              //   type=\"submit\"\r\n              onClick={() => {\r\n                console.log('pushed : ', data);\r\n                setOpen(false);\r\n              }}\r\n            >\r\n              Upload\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadData;\r\n","import React, { useState } from 'react';\r\n// import DataListViewPersonal from 'containers/pages/DataListView-personal';\r\nimport { Collapse, Card, Button, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\nimport { ContextMenuTrigger } from 'react-contextmenu';\r\nimport AdmissionDocumentsData from './data/admission-documents-data';\r\nimport UploadData from './upload-data';\r\n\r\nconst title = 'Admission Documents';\r\nconst { payload } = AdmissionDocumentsData;\r\n\r\nconst AdmissionDocuments = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n  function onSetToggle() {\r\n    setToggle((prevValue) => {\r\n      return !prevValue;\r\n    });\r\n  }\r\n  return (\r\n    <Colxx xxs=\"12\" className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={title}>\r\n        <Card>\r\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n              <span className=\"d-flex \">\r\n                <p\r\n                  style={{ marginRight: '1rem' }}\r\n                  className=\"h3 mb-1 truncate align-self-end\"\r\n                >\r\n                  {title}\r\n                </p>\r\n                {toggle && <UploadData MenuOptions={payload} />}\r\n              </span>\r\n              <div className=\"align-self-center\">\r\n                <Button\r\n                  color=\"link\"\r\n                  size=\"lg\"\r\n                  onClick={() => {\r\n                    onSetToggle();\r\n                  }}\r\n                >\r\n                  <i\r\n                    className={\r\n                      toggle === !false\r\n                        ? 'iconsminds-arrow-up'\r\n                        : 'iconsminds-arrow-down'\r\n                    }\r\n                  />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Collapse isOpen={toggle}>\r\n            <div\r\n              style={{ padding: '5px' }}\r\n              className=\"d-flex justify-content-end mr-3 pb-3\"\r\n            >\r\n              <Button>List Documents</Button>\r\n            </div>\r\n            <div>\r\n              {payload.map((product) => {\r\n                return (\r\n                  <div key={product.id}>\r\n                    <Colxx xs=\"12\" className=\"mb-5\">\r\n                      <ContextMenuTrigger id=\"menu_id\" data={product.id}>\r\n                        <Card\r\n                          onClick={(event) => console.log(event)}\r\n                          style={{ boxShadow: 'none' }}\r\n                          className={classnames('d-flex flex-row', {})}\r\n                        >\r\n                          <Card className=\"w-100 d-flex flex-row\">\r\n                            <Col xs=\"4\">\r\n                              <h3\r\n                                style={{ padding: '5px', justifySelf: 'start' }}\r\n                              >\r\n                                {`${product.title}    :   ${product.value}`}\r\n                              </h3>\r\n                            </Col>\r\n                            <Col xs=\"4\">\r\n                              <p\r\n                                style={{\r\n                                  marginTop: '10px',\r\n                                }}\r\n                                className=\"text-center\"\r\n                              >\r\n                                {product.date}\r\n                              </p>\r\n                            </Col>\r\n                            <Col xs=\"4\" className=\"d-flex flex-row-reverse\">\r\n                              <Button\r\n                                style={{\r\n                                  maxWidth: 'fit-content',\r\n                                }}\r\n                                outline\r\n                                color=\"info\"\r\n                              >\r\n                                <i className=\"iconsminds-download\" />\r\n                              </Button>\r\n                            </Col>\r\n                          </Card>\r\n                        </Card>\r\n                      </ContextMenuTrigger>\r\n                    </Colxx>\r\n                  </div>\r\n                );\r\n\r\n                // return (\r\n                //   <DataListViewPersonal\r\n                //     key={product.id}\r\n                //     product={product}\r\n                //     isSelect={() => {\r\n                //       console.log('isSelect ran');\r\n                //     }}\r\n                //     onCheckItem={() => {\r\n                //       console.log('onCheckitem ran');\r\n                //     }}\r\n                //     collect={() => {\r\n                //       console.log('collect ran');\r\n                //     }}\r\n                //   />\r\n                // );\r\n              })}\r\n            </div>\r\n          </Collapse>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\nexport default AdmissionDocuments;\r\n","const FinancialDocumetsData = {\r\n  id: 0,\r\n  payload: [\r\n    {\r\n      id: 0,\r\n      title: 'PF Letter',\r\n      value: `Value`,\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 1,\r\n      title: 'Bank Account DTMT',\r\n      value: `Value`,\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Loan Approve Letter',\r\n      value: 'Value',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Scolorship Approval',\r\n      value: 'CS',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Sponser Affidevit',\r\n      value: 'value',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Loan Capability',\r\n      value: `Submitted`,\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Ca CERT',\r\n      value: 'submitted',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 7,\r\n      title: 'Prop Evaluation',\r\n      value: 'none',\r\n      date: '15-03-2022',\r\n    },\r\n  ],\r\n};\r\n\r\nexport default FinancialDocumetsData;\r\n\r\n// Section 3: Financial Documents\r\n// 1. pf_letter varchar\r\n// 2. bank_acc_dtmt varchar\r\n// 3. loan_appr_ltr varchar\r\n// 4. scholarship_ltr varchar\r\n// 5. sponsor_affidavit varchar\r\n// 6. loan_capability_ltr varchar\r\n// 7. ca_cert varchar\r\n// 8. prop_eval_report varchar\r\n","import React, { useState } from 'react';\r\nimport { Collapse, Card, Button, Col } from 'reactstrap';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\nimport { ContextMenuTrigger } from 'react-contextmenu';\r\nimport classNames from 'classnames';\r\nimport FinancialDocumetsData from './data/financial-documents-data';\r\nimport UploadData from './upload-data';\r\n\r\nconst title = 'Financial Documents';\r\nconst { payload } = FinancialDocumetsData;\r\n\r\nconst FinancialDocumets = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  function onSetToggle() {\r\n    setToggle((prevValue) => {\r\n      return !prevValue;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Colxx xxs=\"12\" className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={title}>\r\n        <Card>\r\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n              <span className=\"d-flex \">\r\n                <p\r\n                  style={{ marginRight: '1rem' }}\r\n                  className=\"h3 mb-1 truncate align-self-end\"\r\n                >\r\n                  {title}\r\n                </p>\r\n                {toggle && <UploadData MenuOptions={payload} />}\r\n              </span>\r\n              <div className=\"align-self-center\">\r\n                <Button\r\n                  color=\"link\"\r\n                  size=\"lg\"\r\n                  onClick={() => {\r\n                    onSetToggle();\r\n                  }}\r\n                >\r\n                  <i\r\n                    className={\r\n                      toggle === !false\r\n                        ? 'iconsminds-arrow-up'\r\n                        : 'iconsminds-arrow-down'\r\n                    }\r\n                  />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Collapse isOpen={toggle}>\r\n            <div\r\n              // style={{ padding: '5px' }}\r\n              className=\"d-flex justify-content-end mr-3 pb-3 \"\r\n            >\r\n              <Button>List Documents</Button>\r\n            </div>\r\n            <div>\r\n              {payload.map((product) => {\r\n                return (\r\n                  <div key={product.id}>\r\n                    <Colxx xs=\"12\" className=\"mb-5\">\r\n                      <ContextMenuTrigger id=\"menu_id\" data={product.id}>\r\n                        <Card\r\n                          onClick={(event) => console.log(event)}\r\n                          style={{ boxShadow: 'none' }}\r\n                          className={classNames('d-flex flex-row', {})}\r\n                        >\r\n                          <Card className=\"w-100 d-flex flex-row\">\r\n                            <Col xs=\"4\">\r\n                              <h3\r\n                                style={{ padding: '5px', justifySelf: 'start' }}\r\n                              >\r\n                                {`${product.title}    :   ${product.value}`}\r\n                              </h3>\r\n                            </Col>\r\n                            <Col xs=\"4\">\r\n                              <p\r\n                                style={{\r\n                                  marginTop: '10px',\r\n                                }}\r\n                                className=\"text-center\"\r\n                              >\r\n                                {product.date}\r\n                              </p>\r\n                            </Col>\r\n                            <Col xs=\"4\" className=\"d-flex flex-row-reverse\">\r\n                              <Button\r\n                                style={{\r\n                                  maxWidth: 'fit-content',\r\n                                }}\r\n                                outline\r\n                                color=\"info\"\r\n                              >\r\n                                <i className=\"iconsminds-download\" />\r\n                              </Button>\r\n                            </Col>\r\n                          </Card>\r\n                        </Card>\r\n                      </ContextMenuTrigger>\r\n                    </Colxx>\r\n                  </div>\r\n                );\r\n\r\n                // return (\r\n                //   <DataListViewPersonal\r\n                //     key={product.id}\r\n                //     product={product}\r\n                //     isSelect={() => {\r\n                //       console.log('isSelect ran');\r\n                //     }}\r\n                //     onCheckItem={() => {\r\n                //       console.log('onCheckitem ran');\r\n                //     }}\r\n                //     collect={() => {\r\n                //       console.log('collect ran');\r\n                //     }}\r\n                //   />\r\n                // );\r\n              })}\r\n            </div>\r\n          </Collapse>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n\r\n  // return (\r\n  //   <Colxx xxs=\"12\" className=\"mb-3\">\r\n  //     <ContextMenuTrigger id=\"menu_id\" data={title}>\r\n  //       <Card\r\n  //         onClick={() => {\r\n  //           onSetToggle();\r\n  //         }}\r\n  //       >\r\n  //         <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n  //           <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n  //             <h1 className=\"list-item-heading mb-1 truncate\">{title}</h1>\r\n  //           </div>\r\n  //         </div>\r\n  //         <Collapse isOpen={toggle}>\r\n  //           <div style={{ display: 'flex', flexWrap: 'wrap', flex: '0 0 73%' }}>\r\n  //             {payload.map((product) => {\r\n  //               return (\r\n  //                 <DataListViewPersonal\r\n  //                   key={product.id}\r\n  //                   product={product}\r\n  //                   isSelect={() => {\r\n  //                     console.log('isSelect ran');\r\n  //                   }}\r\n  //                   onCheckItem={() => {\r\n  //                     console.log('onCheckitem ran');\r\n  //                   }}\r\n  //                   collect={() => {\r\n  //                     console.log('collect ran');\r\n  //                   }}\r\n  //                 />\r\n  //               );\r\n  //             })}\r\n  //           </div>\r\n  //         </Collapse>\r\n  //       </Card>\r\n  //     </ContextMenuTrigger>\r\n  //   </Colxx>\r\n  // );\r\n};\r\nexport default FinancialDocumets;\r\n","const SupportingDocumentsData = {\r\n  id: 0,\r\n  payload: [\r\n    {\r\n      id: 0,\r\n      title: 'Photo',\r\n      value: `Value`,\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 1,\r\n      title: 'ID proff',\r\n      value: `Value`,\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'ADHARR',\r\n      value: 'Value',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Bachelor Certificate',\r\n      value: 'CS',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Tenth Certificate',\r\n      value: 'value',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Tweleveth Certificate',\r\n      value: `Submitted`,\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Residance Proff',\r\n      value: 'submitted',\r\n      date: '15-03-2022',\r\n    },\r\n  ],\r\n};\r\n\r\nexport default SupportingDocumentsData;\r\n\r\n// Section 1: Supporting documents\r\n// 1. photo varchar\r\n// 2. id_proof varchar\r\n// 3. adhaar_card varchar\r\n// 4. bachelor_cert varchar\r\n// 5. tenth_cert varchar\r\n// 6. twelfth_cert varchar\r\n// 7. residense_proof varchar\r\n","import React, { useState } from 'react';\r\n// import DataListViewPersonal from 'containers/pages/DataListView-personal';\r\nimport { Collapse, Card, Col, Button } from 'reactstrap';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\nimport { ContextMenuTrigger } from 'react-contextmenu';\r\nimport classNames from 'classnames';\r\nimport SupportingDocumentsData from './data/supporting-documents-data';\r\nimport UploadData from './upload-data';\r\n\r\nconst title = 'Supporting Documents';\r\nconst { payload } = SupportingDocumentsData;\r\n\r\nconst SupportingDocuments = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  function onSetToggle() {\r\n    setToggle((prevValue) => {\r\n      return !prevValue;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Colxx xxs=\"12\" className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={title}>\r\n        <Card>\r\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n              <span className=\"d-flex \">\r\n                <p\r\n                  style={{ marginRight: '1rem' }}\r\n                  className=\"h3 mb-1 truncate align-self-end\"\r\n                >\r\n                  {title}\r\n                </p>\r\n                {toggle && <UploadData MenuOptions={payload} />}\r\n              </span>\r\n              <div className=\"align-self-center\">\r\n                <Button\r\n                  color=\"link\"\r\n                  size=\"lg\"\r\n                  onClick={() => {\r\n                    onSetToggle();\r\n                  }}\r\n                >\r\n                  <i\r\n                    className={\r\n                      toggle === !false\r\n                        ? 'iconsminds-arrow-up'\r\n                        : 'iconsminds-arrow-down'\r\n                    }\r\n                  />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Collapse isOpen={toggle}>\r\n            <div\r\n              style={{ padding: '5px' }}\r\n              className=\"d-flex justify-content-end mr-3 pb-3  \"\r\n            >\r\n              <Button>List Documents</Button>\r\n            </div>\r\n            <div>\r\n              {payload.map((product) => {\r\n                return (\r\n                  <div key={product.id}>\r\n                    <Colxx xs=\"12\" className=\"mb-5\">\r\n                      <ContextMenuTrigger id=\"menu_id\" data={product.id}>\r\n                        <Card\r\n                          onClick={(event) => console.log(event)}\r\n                          style={{ boxShadow: 'none' }}\r\n                          className={classNames('d-flex flex-row', {})}\r\n                        >\r\n                          <Card className=\"w-100 d-flex flex-row\">\r\n                            <Col xs=\"4\">\r\n                              <h3\r\n                                style={{ padding: '5px', justifySelf: 'start' }}\r\n                              >\r\n                                {`${product.title}    :   ${product.value}`}\r\n                              </h3>\r\n                            </Col>\r\n                            <Col xs=\"4\">\r\n                              <p\r\n                                style={{\r\n                                  margin: '10px 0',\r\n                                }}\r\n                                className=\"text-center\"\r\n                              >\r\n                                {product.date}\r\n                              </p>\r\n                            </Col>\r\n                            <Col xs=\"4\" className=\"d-flex flex-row-reverse\">\r\n                              <Button\r\n                                style={{\r\n                                  maxWidth: 'fit-content',\r\n                                }}\r\n                                outline\r\n                                color=\"info\"\r\n                              >\r\n                                <i className=\"iconsminds-download\" />\r\n                              </Button>\r\n                            </Col>\r\n                          </Card>\r\n                        </Card>\r\n                      </ContextMenuTrigger>\r\n                    </Colxx>\r\n                  </div>\r\n                );\r\n\r\n                // return (\r\n                //   <DataListViewPersonal\r\n                //     key={product.id}\r\n                //     product={product}\r\n                //     isSelect={() => {\r\n                //       console.log('isSelect ran');\r\n                //     }}\r\n                //     onCheckItem={() => {\r\n                //       console.log('onCheckitem ran');\r\n                //     }}\r\n                //     collect={() => {\r\n                //       console.log('collect ran');\r\n                //     }}\r\n                //   />\r\n                // );\r\n              })}\r\n            </div>\r\n          </Collapse>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n\r\n  // return (\r\n  //   <Colxx xxs=\"12\" className=\"mb-3\">\r\n  //     <ContextMenuTrigger id=\"menu_id\" data={title}>\r\n  //       <Card\r\n  //         onClick={() => {\r\n  //           onSetToggle();\r\n  //         }}\r\n  //       >\r\n  //         <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n  //           <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n  //             <h1 className=\"list-item-heading mb-1 truncate\">{title}</h1>\r\n  //           </div>\r\n  //         </div>\r\n  //         <Collapse isOpen={toggle}>\r\n  //           <div style={{ display: 'flex', flexWrap: 'wrap', flex: '0 0 73%' }}>\r\n  //             {payload.map((product) => {\r\n  //               return (\r\n  //                 <DataListViewPersonal\r\n  //                   key={product.id}\r\n  //                   product={product}\r\n  //                   isSelect={() => {\r\n  //                     console.log('isSelect ran');\r\n  //                   }}\r\n  //                   onCheckItem={() => {\r\n  //                     console.log('onCheckitem ran');\r\n  //                   }}\r\n  //                   collect={() => {\r\n  //                     console.log('collect ran');\r\n  //                   }}\r\n  //                 />\r\n  //               );\r\n  //             })}\r\n  //           </div>\r\n  //         </Collapse>\r\n  //       </Card>\r\n  //     </ContextMenuTrigger>\r\n  //   </Colxx>\r\n  // );\r\n};\r\nexport default SupportingDocuments;\r\n","import React from 'react';\r\nimport AdmissionDocuments from './admission-documents';\r\nimport FinancialDocumets from './financial-documents';\r\nimport SupportingDocuments from './supporting-documents';\r\n\r\nconst MyDocuments = () => {\r\n  return (\r\n    <div>\r\n      <h1>MyDocuments</h1>\r\n      <AdmissionDocuments />\r\n      <FinancialDocumets />\r\n      <SupportingDocuments />\r\n    </div>\r\n  );\r\n};\r\nexport default MyDocuments;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Table,\r\n  InputGroup,\r\n  Input,\r\n  InputGroupAddon,\r\n} from 'reactstrap';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\nimport { ContextMenuTrigger } from 'react-contextmenu';\r\n\r\nconst AllUserApplications = (props) => {\r\n  const userType = localStorage.getItem('userType');\r\n\r\n  const { currentItem, expand } = props;\r\n  console.log(props);\r\n  const [toggle, onSetToggle] = useState(expand);\r\n  function onButtonClick() {\r\n    onSetToggle((prevValue) => !prevValue);\r\n  }\r\n  const title = 'Application';\r\n\r\n  const handleClickScroll = () => {\r\n    const element = document.getElementById('9');\r\n    if (element) {\r\n      element.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      handleClickScroll();\r\n    }, 200);\r\n  }, []);\r\n\r\n  return (\r\n    <div id={`${currentItem.id}`}>\r\n      <Colxx xxs=\"12\" className=\"mb-3\" key={currentItem.id}>\r\n        <ContextMenuTrigger id=\"menu_id\" data={title}>\r\n          <Card>\r\n            <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n              <div className=\"card-body align-self-center d-flex flex-column flex-lg-row  min-width-zero align-items-lg-center\">\r\n                <span className=\"d-flex \">\r\n                  <p className=\"h4\" style={{ marginRight: '1rem' }}>\r\n                    {`${title} ${currentItem.id}`}\r\n                  </p>\r\n                </span>\r\n              </div>\r\n              <div className=\"align-self-center\">\r\n                {userType === 'COORDINATOR' && toggle === true && (\r\n                  <Button outline>Update Status</Button>\r\n                )}\r\n                <Button\r\n                  color=\"link\"\r\n                  size=\"lg\"\r\n                  onClick={() => {\r\n                    onButtonClick();\r\n                  }}\r\n                >\r\n                  <i\r\n                    className={\r\n                      toggle === !false\r\n                        ? 'iconsminds-arrow-up'\r\n                        : 'iconsminds-arrow-down'\r\n                    }\r\n                  />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <Collapse isOpen={toggle}>\r\n              <div\r\n                className=\"pl-4\"\r\n                style={{\r\n                  display: 'flex',\r\n                  flexWrap: 'wrap',\r\n                  flex: '0 0 73%',\r\n                }}\r\n              >\r\n                <Container>\r\n                  <Row className=\"mr-3\">\r\n                    <Col xs=\"4\">\r\n                      <p className=\"h6\">Application Id : {currentItem.id}</p>\r\n                    </Col>\r\n                    <Col xs=\"4\">\r\n                      <p className=\"h6\">\r\n                        College Name : {currentItem.collegeName}\r\n                      </p>\r\n                    </Col>\r\n                    <Col xs=\"4\">\r\n                      <p className=\"h6\">\r\n                        Applied Date : {currentItem.createdAt}\r\n                      </p>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mr-3 mt-3\">\r\n                    <Col xs=\"8\">\r\n                      <p className=\"h5\">Status</p>\r\n                      <Card>\r\n                        <Table>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>#</th>\r\n                              <th>Event</th>\r\n                              <th>Updated at</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {currentItem.applnEventLogs.map((subItem) => {\r\n                              return (\r\n                                <tr key={subItem.updatedAt}>\r\n                                  <td>\r\n                                    <i className=\"iconsminds-yes\" />\r\n                                  </td>\r\n                                  <td>{subItem.eventName}</td>\r\n                                  <td>{subItem.updatedAt} pm</td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\" mt-5 mb-5 \">\r\n                    <Col xs=\"8\">\r\n                      <p className=\"h5\">Comments</p>\r\n                      <Card>\r\n                        <Table>\r\n                          <tbody>\r\n                            {currentItem.applnMsgLogs.map((subItem) => {\r\n                              return (\r\n                                <React.Fragment key={subItem.created_at}>\r\n                                  <tr>\r\n                                    <th>{subItem.senderName}</th>\r\n                                    <th className=\"text-right\">\r\n                                      {subItem.created_at}pm\r\n                                    </th>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>{subItem.message}</td>\r\n                                  </tr>\r\n                                </React.Fragment>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </Table>\r\n                        <InputGroup className=\"p-3\">\r\n                          <Input\r\n                            placeholder=\"New Comment\"\r\n                            style={{ borderColor: '#4556ac' }}\r\n                          />\r\n                          <InputGroupAddon addonType=\"append\">\r\n                            <Button\r\n                              onClick={() => {\r\n                                console.log('i was clicked');\r\n                              }}\r\n                            >\r\n                              Post\r\n                            </Button>\r\n                          </InputGroupAddon>\r\n                        </InputGroup>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </div>\r\n            </Collapse>\r\n          </Card>\r\n        </ContextMenuTrigger>\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllUserApplications;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  InputGroup,\r\n  InputGroupButtonDropdown,\r\n  Row,\r\n  Col,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n} from 'reactstrap';\r\n\r\nconst MenuOptions = [\r\n  {\r\n    id: 0,\r\n    name: 'UCP',\r\n  },\r\n  {\r\n    id: 1,\r\n    name: 'UOL',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'BNU',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'ITU',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'GCU',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'GUL',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'LUMS',\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'ATC',\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'PU',\r\n  },\r\n];\r\n\r\nfunction SelectCollegeModal() {\r\n  const [open, setOpen] = useState(false);\r\n  const [dropDowsState, setDropDownState] = useState(false);\r\n  const [dropDownValue, setDropDownValue] = useState('Select College');\r\n\r\n  //   const [data, setData] = useState({\r\n  //     value: '',\r\n  //   });\r\n  function toggleModalFunction() {\r\n    setOpen((oldValue) => !oldValue);\r\n  }\r\n  //   function handleUploadData(e) {\r\n  //     setData(e.target.value);\r\n  //   }\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        outline\r\n        // style={{ margin: '0 3% 3% 0' }}\r\n        onClick={() => {\r\n          toggleModalFunction();\r\n        }}\r\n      >\r\n        Add New\r\n      </Button>\r\n\r\n      <div>\r\n        <Modal\r\n          style={{ maxWidth: '30%' }}\r\n          isOpen={open}\r\n          toggle={() => {\r\n            toggleModalFunction();\r\n          }}\r\n          centered={!false}\r\n        >\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <ModalHeader\r\n              style={{\r\n                display: 'inline',\r\n                alignSelf: 'flex-end',\r\n              }}\r\n            >\r\n              College Name\r\n            </ModalHeader>\r\n\r\n            <Button\r\n              onClick={() => {\r\n                toggleModalFunction();\r\n              }}\r\n              outline\r\n              style={{ height: '2rem' }}\r\n              color=\"danger\"\r\n            >\r\n              <i className=\"iconsminds-close\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <ModalBody>\r\n            <Row>\r\n              <Col xs=\"12\">\r\n                <InputGroup>\r\n                  <InputGroupButtonDropdown\r\n                    addonType=\"prepend\"\r\n                    isOpen={dropDowsState}\r\n                    toggle={() => {\r\n                      setDropDownState((prevValue) => {\r\n                        return !prevValue;\r\n                      });\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      outline\r\n                      color={\r\n                        dropDownValue === 'Select College'\r\n                          ? 'danger'\r\n                          : 'secondary'\r\n                      }\r\n                    >\r\n                      {dropDownValue}\r\n                    </Button>\r\n                    <DropdownToggle\r\n                      split\r\n                      outline\r\n                      color={\r\n                        dropDownValue === 'Select College'\r\n                          ? 'danger'\r\n                          : 'secondary'\r\n                      }\r\n                    />\r\n                    <DropdownMenu>\r\n                      {MenuOptions.map((product) => {\r\n                        return (\r\n                          <DropdownItem\r\n                            key={product.id}\r\n                            onClick={(e) => {\r\n                              setDropDownValue(e.target.innerHTML);\r\n                            }}\r\n                          >\r\n                            {product.name}\r\n                          </DropdownItem>\r\n                        );\r\n                      })}\r\n                    </DropdownMenu>\r\n                  </InputGroupButtonDropdown>\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              onClick={() => {\r\n                console.log('Selected College : ', dropDownValue);\r\n                setOpen(false);\r\n              }}\r\n            >\r\n              Add\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectCollegeModal;\r\n","import React from 'react'; //  ,{ useRef }\r\n\r\nimport { Row } from 'reactstrap';\r\nimport AllUserApplications from './show-allUser-application';\r\nimport SelectCollegeModal from './select-college-modal';\r\nimport applicationInformationData from './applications-data';\r\n\r\nconst payload = applicationInformationData;\r\n\r\nconst MyApplications = () => {\r\n  const selectedApp = 10;\r\n  const selectedElement = document.getElementById(`10`);\r\n  // setTimeout(() => {\r\n  //   document.getElementById(10).scrollIntoView();\r\n  // }, 3000);\r\n  // const myRef = useRef(selectedApp);\r\n  // console.log(myRef);\r\n  // const executeScroll = () => myRef.current.scrollIntoView();\r\n  // executeScroll();\r\n  if (selectedElement) {\r\n    selectedElement.scrollIntoView();\r\n  }\r\n  return (\r\n    <div>\r\n      <Row className=\" ml-3 mr-3 mb-3 justify-content-between\">\r\n        <h1>MyApplications</h1>\r\n        <SelectCollegeModal />\r\n      </Row>\r\n      {payload.map((item) => {\r\n        return (\r\n          <div id=\"10\" key={item.id}>\r\n            <AllUserApplications\r\n              expand={selectedApp === item.id}\r\n              currentItem={item}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n      {/* <AllUserApplications /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyApplications;\r\n","const applicationInformationData = [\r\n  {\r\n    id: 1,\r\n    createdAt: 10,\r\n    collegeName: 'UCP',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'Completed',\r\n        updatedAt: 4,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 3,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 2,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 1,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 0,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 10,\r\n        senderName: 'Alex',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 11,\r\n        senderName: 'Max',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 12,\r\n        senderName: 'Alex',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 14,\r\n        senderName: 'Max',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    createdAt: 20,\r\n    collegeName: 'UOL',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'UnCompleted',\r\n        updatedAt: 9,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 8,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 7,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 6,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 5,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 20,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 22,\r\n        senderName: 'Aria',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 24,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 26,\r\n        senderName: 'Aria',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    createdAt: 20,\r\n    collegeName: 'UOL',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'UnCompleted',\r\n        updatedAt: 9,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 8,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 7,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 6,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 5,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 20,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 22,\r\n        senderName: 'Aria',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 24,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 26,\r\n        senderName: 'Aria',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 4,\r\n    createdAt: 20,\r\n    collegeName: 'UOL',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'UnCompleted',\r\n        updatedAt: 9,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 8,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 7,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 6,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 5,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 20,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 22,\r\n        senderName: 'Aria',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 24,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 26,\r\n        senderName: 'Aria',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 5,\r\n    createdAt: 20,\r\n    collegeName: 'UOL',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'UnCompleted',\r\n        updatedAt: 9,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 8,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 7,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 6,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 5,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 20,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 22,\r\n        senderName: 'Aria',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 24,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 26,\r\n        senderName: 'Aria',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 6,\r\n    createdAt: 20,\r\n    collegeName: 'UOL',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'UnCompleted',\r\n        updatedAt: 9,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 8,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 7,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 6,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 5,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 20,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 22,\r\n        senderName: 'Aria',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 24,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 26,\r\n        senderName: 'Aria',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 7,\r\n    createdAt: 20,\r\n    collegeName: 'UOL',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'UnCompleted',\r\n        updatedAt: 9,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 8,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 7,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 6,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 5,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 20,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 22,\r\n        senderName: 'Aria',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 24,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 26,\r\n        senderName: 'Aria',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 8,\r\n    createdAt: 20,\r\n    collegeName: 'UOL',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'UnCompleted',\r\n        updatedAt: 9,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 8,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 7,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 6,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 5,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 20,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 22,\r\n        senderName: 'Aria',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 24,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 26,\r\n        senderName: 'Aria',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 9,\r\n    createdAt: 20,\r\n    collegeName: 'UOL',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'UnCompleted',\r\n        updatedAt: 9,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 8,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 7,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 6,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 5,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 20,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 22,\r\n        senderName: 'Aria',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 24,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 26,\r\n        senderName: 'Aria',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 10,\r\n    createdAt: 20,\r\n    collegeName: 'UOL',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'UnCompleted',\r\n        updatedAt: 9,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 8,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 7,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 6,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 5,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 20,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 22,\r\n        senderName: 'Aria',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 24,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 26,\r\n        senderName: 'Aria',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default applicationInformationData;\r\n\r\n// Enum appln_status { open, completed ,pending ,user_canceled, rejected ,await_cond_offer_ltr, recd_cond_offer_ltr, await_uncond_offer_ltr, recd_uncond_offer_ltr, fee_paid, await_visa, visa_processed, coe_received }\r\n","import \"@glidejs/glide/dist/css/glide.core.min.css\";\r\nimport axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport GlideComponent from \"components/carousel/GlideComponent\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport CustomSelectInput from \"components/common/CustomSelectInput\";\r\nimport Rating from \"components/common/Rating\";\r\nimport { adminRoot, baseUrl } from \"constants/defaultValues\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardText,\r\n  CardTitle,\r\n  Col,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  NavLink,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\nimport language from \"../my-login/Languages\";\r\n\r\n// import { alumniData } from \"./Data\";\r\n\r\nconst DashBoard = () => {\r\n  const [modalBasic, setModalBasic] = useState(false);\r\n  const [currentSessionIndex, setCurrentSessionIndex] = useState(0);\r\n  const [currentMentorIndex, setCurrentMentorIndex] = useState(0);\r\n  const [currentLawyerIndex, setCurrentLawyerIndex] = useState(0);\r\n  const [currentAlumniIndex, setCurrentAlumniIndex] = useState(0);\r\n  const [currentJobIndex, setCurrentJobIndex] = useState(0);\r\n  const [currentStayIndex, setCurrentStayIndex] = useState(0);\r\n  const [currentBatchMateIndex, setCurrentBatchMateIndex] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const [walletBalance, setWalletBalance] = useState(0);\r\n  const [profileStatus, setProfileStatus] = useState(0);\r\n  const [recentSessions, setRecentSessions] = useState([]);\r\n  const [mentors, setMentors] = useState([\r\n    {\r\n      imageUrl: \"\",\r\n      company: \"\",\r\n      price: 0,\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      jobTitle: \"\",\r\n      experience: 0,\r\n    },\r\n  ]);\r\n  const [lawyers, setLawyers] = useState([\r\n    {\r\n      imageUrl: \"\",\r\n      firstName: \"\",\r\n      price: 0,\r\n      lastName: \"\",\r\n      services: [],\r\n      languages: [],\r\n    },\r\n  ]);\r\n  // const [alumni, setAlumni] = useState(alumniData);\r\n  const [alumni, setAlumni] = useState([\r\n    {\r\n      imageUrl: \"\",\r\n      company: \"\",\r\n      price: 0,\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      jobTitle: \"\",\r\n      experienceYears: 0,\r\n    },\r\n  ]);\r\n  const [newSession, setNewSession] = useState([\r\n    {\r\n      id: 0,\r\n      chatStatus: \"\",\r\n      fromTimeStamp: 0,\r\n      toTimeStamp: 0,\r\n      mentorUserId: 0,\r\n      mode: \"\",\r\n      name: \"\",\r\n      imageUrl: \"\",\r\n    },\r\n  ]);\r\n  const [recentChats, setRecentChats] = useState([]);\r\n  const [dashboardQuestions, setDashboardQuestions] = useState([]);\r\n  const [jobList, setJobList] = useState(\"\");\r\n  const [stayList, setStaylist] = useState(\"\");\r\n  const [batchMates, setBatchMates] = useState(\"\");\r\n  const [inputkey, setInputKey] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n\r\n  const SelectedCategoryOptions = [\r\n    { label: \"IT\", value: \"IT\", key: 0 },\r\n    {\r\n      label: \"MANUFACTURING_MECHANICAL\",\r\n      value: \"MANUFACTURING_MECHANICAL\",\r\n      key: 1,\r\n    },\r\n    { label: \"CIVIL\", value: \"CIVIL\", key: 2 },\r\n    { label: \"INTERVIEW_PREPARATION\", value: \"INTERVIEW_PREPARATION\", key: 3 },\r\n    { label: \"UNIV_ADMISSIONS\", value: \"UNIV_ADMISSIONS\", key: 4 },\r\n    { label: \"RESUMES_WRITTING\", value: \"RESUMES_WRITTING\", key: 5 },\r\n    { label: \"VISA_ASSITANCE\", value: \"VISA_ASSITANCE\", key: 6 },\r\n  ];\r\n\r\n  // useEffect(() => {\r\n  //   if (selectedCategory?.value === \"VISA_ASSITANCE\") {\r\n  //     history.push(\"/app/lawyer/list\");\r\n  //   }\r\n  // }, [selectedCategory]);\r\n\r\n  useEffect(() => {\r\n    if (selectedCategory?.value === \"VISA_ASSITANCE\") {\r\n      history.push(\"/app/lawyer/list\");\r\n    } else if (selectedCategory) {\r\n      history.push({\r\n        pathname: \"/app/mentor/list\",\r\n        state: { category: selectedCategory },\r\n      });\r\n    }\r\n  }, [selectedCategory, history]);\r\n  console.log(\"selected\", selectedCategory);\r\n\r\n  const walletUrl = `${baseUrl}/api/wallet/balance`;\r\n  const profileStatusUrl = `${baseUrl}/api/userprofile/dashboard/status/profile-completion`;\r\n  const mentorsUrl = `${baseUrl}/api/mentor/cards?page=0&size=10`;\r\n  const sessionsUrl = `${baseUrl}/api/calendar/dashboard/appointment/session-history`;\r\n  const lawyersUrl = `${baseUrl}/api/lawyer/lawyercards?page=0&size=10`;\r\n  // const alumniUrl = `${baseUrl}/api/dashboard/alumni`;\r\n  const batchUrl = `${baseUrl}/api/userprofile/dashboard/batchmates`;\r\n  const alumniUrl = `${baseUrl}/api/alumni/cards?page=0&size=10`;\r\n  const newSessionUrl = `${baseUrl}/api/calendar/dashboard/appointment/upcoming-bookedslots`;\r\n  const recentChatsDataUrl = `${baseUrl}/api/chat/recent-contact`;\r\n  const questionsUrl = `${baseUrl}/api/dashboard/latest`;\r\n  const joblistUrl = `${baseUrl}/api/posts/job-post/dashboard`;\r\n  const staylistUrl = `${baseUrl}/api/posts/stay-post/dashboard`;\r\n\r\n  // console.log(\"mentors\",mentors)\r\n  useEffect(() => {\r\n    const fetchProfileStatus = async () => {\r\n      try {\r\n        const response = await axios.get(profileStatusUrl);\r\n        setProfileStatus(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching profile status:\", error);\r\n      }\r\n    };\r\n    fetchProfileStatus();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchWalletBalance = async () => {\r\n      try {\r\n        const response = await axios.get(walletUrl);\r\n        setWalletBalance(response.data.balance);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching Balance:\", error);\r\n      }\r\n    };\r\n    fetchWalletBalance();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchRecentSessions = async () => {\r\n      try {\r\n        const response = await axios.get(sessionsUrl);\r\n        setRecentSessions(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching RecentSessions:\", error);\r\n      }\r\n    };\r\n    fetchRecentSessions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchMentors = async () => {\r\n      try {\r\n        const response = await axios.get(mentorsUrl);\r\n        setMentors(response.data.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching Mentors:\", error);\r\n      }\r\n    };\r\n    fetchMentors();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchBatchMates = async () => {\r\n      try {\r\n        const response = await axios.get(batchUrl);\r\n        setBatchMates(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching Mentors:\", error);\r\n      }\r\n    };\r\n    fetchBatchMates();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchLawyers = async () => {\r\n      try {\r\n        const response = await axios.get(lawyersUrl);\r\n        setLawyers(response.data.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching Lawyers:\", error);\r\n      }\r\n    };\r\n    fetchLawyers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchAlumni = async () => {\r\n      try {\r\n        const response = await axios.get(alumniUrl);\r\n        setAlumni(response.data.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching Alumni:\", error);\r\n      }\r\n    };\r\n    fetchAlumni();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchNewsession = async () => {\r\n      try {\r\n        const response = await axios.get(newSessionUrl);\r\n        setNewSession(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching Newsession:\", error);\r\n      }\r\n    };\r\n    fetchNewsession();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchRecentChats = async () => {\r\n      try {\r\n        const response = await axios.get(recentChatsDataUrl);\r\n        setRecentChats(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching RecentChats:\", error);\r\n      }\r\n    };\r\n    fetchRecentChats();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchLatestQuestions = async () => {\r\n      try {\r\n        const response = await axios.get(questionsUrl);\r\n        setDashboardQuestions(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching questions and answers\", error);\r\n      }\r\n    };\r\n    fetchLatestQuestions();\r\n  }, []);\r\n  useEffect(() => {\r\n    const fetchJobList = async () => {\r\n      try {\r\n        const response = await axios.get(joblistUrl);\r\n        setJobList(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching joblist status:\", error);\r\n      }\r\n    };\r\n    fetchJobList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchStayList = async () => {\r\n      try {\r\n        const response = await axios.get(staylistUrl);\r\n        setStaylist(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching Staylist status:\", error);\r\n      }\r\n    };\r\n    fetchStayList();\r\n  }, []);\r\n\r\n  const renderDots = () => {\r\n    // const total = React.Children.count(props.children);\r\n    const total = newSession.length;\r\n    const dots = [];\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < total; i++) {\r\n      dots.push(\r\n        <button\r\n          type=\"button\"\r\n          className={`glide__bullet slider-dot ${\r\n            i === currentSessionIndex ? \"bg-primary\" : \"bg-light\"\r\n          }`}\r\n          key={i}\r\n          data-glide-dir={`=${i}`}\r\n          onClick={() => setCurrentSessionIndex(i)}\r\n        />\r\n      );\r\n    }\r\n    return dots;\r\n  };\r\n  const renderMentorsDots = () => {\r\n    // const total = React.Children.count(props.children);\r\n    const total = mentors.length;\r\n    const dots = [];\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < total; i++) {\r\n      dots.push(\r\n        <button\r\n          type=\"button\"\r\n          className={`glide__bullet slider-dot ${\r\n            i === currentMentorIndex ? \"bg-primary\" : \"bg-light\"\r\n          }`}\r\n          key={i}\r\n          data-glide-dir={`=${i}`}\r\n          onClick={() => setCurrentMentorIndex(i)}\r\n        />\r\n      );\r\n    }\r\n    return dots;\r\n  };\r\n  const renderBatchMateDots = () => {\r\n    // const total = React.Children.count(props.children);\r\n    const total = batchMates.length;\r\n    const dots = [];\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < total; i++) {\r\n      dots.push(\r\n        <button\r\n          type=\"button\"\r\n          className={`glide__bullet slider-dot ${\r\n            i === currentBatchMateIndex ? \"bg-primary\" : \"bg-light\"\r\n          }`}\r\n          key={i}\r\n          data-glide-dir={`=${i}`}\r\n          onClick={() => setCurrentBatchMateIndex(i)}\r\n        />\r\n      );\r\n    }\r\n    return dots;\r\n  };\r\n  const renderLawyerDots = () => {\r\n    // const total = React.Children.count(props.children);\r\n    const total = lawyers.length;\r\n    const dots = [];\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < total; i++) {\r\n      dots.push(\r\n        <button\r\n          type=\"button\"\r\n          className={`glide__bullet slider-dot ${\r\n            i === currentLawyerIndex ? \"bg-primary\" : \"bg-light\"\r\n          }`}\r\n          key={i}\r\n          data-glide-dir={`=${i}`}\r\n          onClick={() => setCurrentLawyerIndex(i)}\r\n        />\r\n      );\r\n    }\r\n    return dots;\r\n  };\r\n  const renderAlumniDots = () => {\r\n    // const total = React.Children.count(props.children);\r\n    const total = alumni.length;\r\n    const dots = [];\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < total; i++) {\r\n      dots.push(\r\n        <button\r\n          type=\"button\"\r\n          className={`glide__bullet slider-dot ${\r\n            i === currentAlumniIndex ? \"bg-primary\" : \"bg-light\"\r\n          }`}\r\n          key={i}\r\n          data-glide-dir={`=${i}`}\r\n          onClick={() => setCurrentAlumniIndex(i)}\r\n        />\r\n      );\r\n    }\r\n    return dots;\r\n  };\r\n\r\n  const renderJobListDots = () => {\r\n    // const total = React.Children.count(props.children);\r\n    const total = jobList.length;\r\n    const dots = [];\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < total; i++) {\r\n      dots.push(\r\n        <button\r\n          type=\"button\"\r\n          className={`glide__bullet slider-dot ${\r\n            i === currentJobIndex ? \"bg-primary\" : \"bg-light\"\r\n          }`}\r\n          key={i}\r\n          data-glide-dir={`=${i}`}\r\n          onClick={() => setCurrentJobIndex(i)}\r\n        />\r\n      );\r\n    }\r\n    return dots;\r\n  };\r\n\r\n  const renderStayListDots = () => {\r\n    // const total = React.Children.count(props.children);\r\n    const total = stayList.length;\r\n    const dots = [];\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < total; i++) {\r\n      dots.push(\r\n        <button\r\n          type=\"button\"\r\n          className={`glide__bullet slider-dot ${\r\n            i === currentStayIndex ? \"bg-primary\" : \"bg-light\"\r\n          }`}\r\n          key={i}\r\n          data-glide-dir={`=${i}`}\r\n          onClick={() => setCurrentStayIndex(i)}\r\n        />\r\n      );\r\n    }\r\n    return dots;\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentSessionIndex((prevIndex) =>\r\n      prevIndex > 0 ? prevIndex - 1 : newSession.length - 1\r\n    );\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentSessionIndex((prevIndex) =>\r\n      prevIndex < newSession.length - 1 ? prevIndex + 1 : 0\r\n    );\r\n  };\r\n\r\n  const handleMentorPrevious = () => {\r\n    setCurrentMentorIndex((prevIndex) =>\r\n      prevIndex > 0 ? prevIndex - 1 : mentors.length - 1\r\n    );\r\n  };\r\n\r\n  const handleMentorNext = () => {\r\n    setCurrentMentorIndex((prevIndex) =>\r\n      prevIndex < mentors.length - 1 ? prevIndex + 1 : 0\r\n    );\r\n  };\r\n\r\n  const handleBatchMatePrevious = () => {\r\n    setCurrentBatchMateIndex((prevIndex) =>\r\n      prevIndex > 0 ? prevIndex - 1 : batchMates.length - 1\r\n    );\r\n  };\r\n\r\n  const handleBatchMateNext = () => {\r\n    setCurrentBatchMateIndex((prevIndex) =>\r\n      prevIndex < batchMates.length - 1 ? prevIndex + 1 : 0\r\n    );\r\n  };\r\n\r\n  const handleLawyerPrevious = () => {\r\n    setCurrentLawyerIndex((prevIndex) =>\r\n      prevIndex > 0 ? prevIndex - 1 : lawyers.length - 1\r\n    );\r\n  };\r\n\r\n  const handleLawyerNext = () => {\r\n    setCurrentLawyerIndex((prevIndex) =>\r\n      prevIndex < lawyers.length - 1 ? prevIndex + 1 : 0\r\n    );\r\n  };\r\n\r\n  const handleAlumniPrevious = () => {\r\n    setCurrentAlumniIndex((prevIndex) =>\r\n      prevIndex > 0 ? prevIndex - 1 : alumni.length - 1\r\n    );\r\n  };\r\n\r\n  const handleAlumniNext = () => {\r\n    setCurrentAlumniIndex((prevIndex) =>\r\n      prevIndex < alumni.length - 1 ? prevIndex + 1 : 0\r\n    );\r\n  };\r\n\r\n  // const handleJobPrevious = () => {\r\n  //   setCurrentJobIndex((prevIndex) =>\r\n  //     prevIndex > 0 ? prevIndex - 1 : jobList.length - 1\r\n  //   );\r\n  // };\r\n\r\n  // const handleJobNext = () => {\r\n  //   setCurrentJobIndex((prevIndex) =>\r\n  //     prevIndex < alumni.length - 1 ? prevIndex + 1 : 0\r\n  //   );\r\n  // };\r\n\r\n  const currentSession = newSession[currentSessionIndex];\r\n  const currentMentor = mentors[currentMentorIndex];\r\n  // const currentMentor = mentors && currentMentorIndex >= 0 && currentMentorIndex < mentors.length ? mentors[currentMentorIndex] : null;\r\n  const currentLawyer = lawyers[currentLawyerIndex];\r\n  // const currentLawyer = lawyers && currentLawyerIndex >= 0 && currentLawyerIndex < lawyers.length ? lawyers[currentLawyerIndex] : null;\r\n\r\n  const currentAlumni = alumni[currentAlumniIndex];\r\n  const currentJobList = jobList[currentJobIndex];\r\n  const currentStayList = stayList[currentStayIndex];\r\n  const currentBatchMate = batchMates[currentBatchMateIndex];\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentSessionIndex((prevIndex) =>\r\n        prevIndex < newSession.length - 1 ? prevIndex + 1 : 0\r\n      );\r\n    }, 3300);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentMentorIndex((prevIndex) =>\r\n        prevIndex < mentors.length - 1 ? prevIndex + 1 : 0\r\n      );\r\n    }, 3600);\r\n    return () => clearInterval(interval);\r\n  }, [mentors]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentBatchMateIndex((prevIndex) =>\r\n        prevIndex < batchMates.length - 1 ? prevIndex + 1 : 0\r\n      );\r\n    }, 3000);\r\n    return () => clearInterval(interval);\r\n  }, [batchMates]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentLawyerIndex((prevIndex) =>\r\n        prevIndex < lawyers.length - 1 ? prevIndex + 1 : 0\r\n      );\r\n    }, 3600);\r\n    return () => clearInterval(interval);\r\n  }, [lawyers]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentAlumniIndex((prevIndex) =>\r\n        prevIndex < alumni.length - 1 ? prevIndex + 1 : 0\r\n      );\r\n    }, 3800);\r\n    return () => clearInterval(interval);\r\n  }, [alumni]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentJobIndex((prevIndex) =>\r\n        prevIndex < jobList.length - 1 ? prevIndex + 1 : 0\r\n      );\r\n    }, 3800);\r\n    return () => clearInterval(interval);\r\n  }, [jobList]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentStayIndex((prevIndex) =>\r\n        prevIndex < stayList.length - 1 ? prevIndex + 1 : 0\r\n      );\r\n    }, 3800);\r\n    return () => clearInterval(interval);\r\n  }, [stayList]);\r\n\r\n  const formatDate = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return `${String(date.getDate()).padStart(2, \"0\")}-${String(\r\n      date.getMonth() + 1\r\n    ).padStart(2, \"0\")}-${date.getFullYear()}`;\r\n  };\r\n\r\n  const handleViewMentors = () => history.push(\"/app/mentor/list\");\r\n  const handleViewLawyers = () => history.push(\"/app/lawyer/list\");\r\n  const handleViewAlumnis = () => history.push(\"/app/alumni/alumnilists\");\r\n  const handleWalletClick = () => history.push(\"/app/mywallet\");\r\n  const handleProfileClick = () => history.push(\"/app/user/myprofile\");\r\n  const handleNewSessionClick = () => history.push(\"/app/sessionlists\");\r\n  const handleViewBatchmates = () => history.push(\"/app/student/list\");\r\n\r\n  console.log(\"Current Mentor:\", currentMentor);\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"mx-auto\" style={{ maxWidth: \"1000px\" }}>\r\n        <Col xs={12} lg={12} className=\"mb-3 mb-lg-0\">\r\n          <div className=\"form-group\">\r\n            <div className=\"input-group\">\r\n              <div\r\n                style={{ position: \"relative\" }}\r\n                className=\"col-12 col-lg-12 col-md-12\"\r\n              >\r\n                <i\r\n                  className=\"simple-icon-magnifier mr-3\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: \"50%\",\r\n                    right: \"15px\",\r\n                    transform: \"translateY(-50%)\",\r\n                    zIndex: 2,\r\n                    color: \"#aaa\",\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control rounded p-2\"\r\n                  placeholder=\"Search by Category\"\r\n                  value={inputkey}\r\n                  onChange={(e) => setInputKey(e.target.value)}\r\n                  // style={{ paddingRight: \"2.5rem\" }}\r\n                  onClick={() => setModalBasic(true)}\r\n                />\r\n\r\n                <Modal\r\n                  isOpen={modalBasic}\r\n                  toggle={() => setModalBasic(!modalBasic)}\r\n                >\r\n                  <ModalHeader>\r\n                    <h1>Category</h1>\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <Label>Category</Label>\r\n                    <Select\r\n                      components={{ Input: CustomSelectInput }}\r\n                      className=\"react-select\"\r\n                      classNamePrefix=\"react-select\"\r\n                      name=\"form-field-name\"\r\n                      value={selectedCategory}\r\n                      onChange={setSelectedCategory}\r\n                      options={SelectedCategoryOptions}\r\n                    />\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      onClick={() => setModalBasic(false)}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mx-auto\" style={{ maxWidth: \"1000px\" }}>\r\n        <Col xs={12} lg={3} className=\"mb-3 mb-lg-0\">\r\n          <Card\r\n            className=\"h-100\"\r\n            style={{\r\n              background: \"linear-gradient(to right, #7B42C5, #AA5D93)\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            <div className=\"p-3 d-flex flex-column h-100\">\r\n              <Row className=\"d-flex align-items-center justify-content-between\">\r\n                <Col>\r\n                  <h3 className=\"mb-2 fw-bold\">Profile Status</h3>\r\n                </Col>\r\n                <Col className=\"col-auto\" xs=\"auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"icon-button\"\r\n                    color=\"light\"\r\n                    onClick={handleProfileClick}\r\n                    style={{\r\n                      padding: \"0.05rem 0.15rem\",\r\n                      fontSize: \"0.4rem\",\r\n                      borderRadius: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      width: \"1.5rem\",\r\n                      height: \"1.5rem\",\r\n                      minWidth: \"1.5rem\",\r\n                      minHeight: \"1.5rem\",\r\n                      border: \"none\",\r\n                      outline: \"none\",\r\n                    }}\r\n                  >\r\n                    <i\r\n                      className=\"simple-icon-pencil text-primary\"\r\n                      style={{ fontSize: \"0.6rem\" }}\r\n                    />\r\n                  </button>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"mt-auto\">\r\n                <h1 className=\"mb-0 fw-bold display-6\">\r\n                  {profileStatus.percentage}{\" \"}\r\n                </h1>\r\n                <span> % completed</span>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n        <Col xs={12} lg={3} className=\"mb-3 mb-lg-0\">\r\n          <Card\r\n            className=\"h-100\"\r\n            style={{\r\n              background: \"linear-gradient(to right, #7B42C5, #AA5D93)\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            <div className=\"p-3 d-flex flex-column h-100\">\r\n              <Row className=\"d-flex align-items-center justify-content-between\">\r\n                <Col>\r\n                  <h3 className=\"mb-2 fw-bold\">Wallet Balance</h3>\r\n                </Col>\r\n                <Col className=\"col-auto\" xs=\"auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"icon-button\"\r\n                    color=\"light\"\r\n                    onClick={handleWalletClick}\r\n                    style={{\r\n                      padding: \"0.05rem 0.15rem\",\r\n                      fontSize: \"0.4rem\",\r\n                      borderRadius: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      width: \"1.5rem\",\r\n                      height: \"1.5rem\",\r\n                      minWidth: \"1.5rem\",\r\n                      minHeight: \"1.5rem\",\r\n                      border: \"none\",\r\n                      outline: \"none\",\r\n                    }}\r\n                  >\r\n                    {/* <i className=\"iconsminds-add text-primary\" style={{ fontSize: '0.8rem' }} /> */}\r\n                    <span\r\n                      className=\"text-primary\"\r\n                      style={{ fontSize: \"0.9rem\" }}\r\n                    >\r\n                      <strong>+</strong>\r\n                    </span>\r\n                  </button>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"mt-auto\">\r\n                <h1 className=\"mb-0 fw-bold display-6\">₹{walletBalance} </h1>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n        <Col xs={12} lg={6} className=\"mb-3 mb-lg-0\">\r\n          <Card className=\"h-100\">\r\n            <div className=\"p-3 d-flex flex-column h-100\">\r\n              <Row className=\"\">\r\n                <Col>\r\n                  {\" \"}\r\n                  <h3 className=\"mb-3 fw-bold\">New Session</h3>\r\n                </Col>\r\n                {currentSession && currentSession.length > 1 && (\r\n                  <Col className=\"d-flex justify-content-end\">\r\n                    <button\r\n                      onClick={handlePrevious}\r\n                      type=\"button\"\r\n                      className=\" left-arrow btn btn-link btn-xs\"\r\n                      style={{ textDecoration: \"none\", padding: \"5px\" }}\r\n                      // data-glide-dir=\"<\"\r\n                    >\r\n                      <i className=\"simple-icon-arrow-left\" />\r\n                    </button>\r\n                    <button\r\n                      onClick={handleNext}\r\n                      type=\"button\"\r\n                      className=\"glide__arrow glide__arrow--right right-arrow btn btn-link btn-xs\"\r\n                      data-glide-dir=\">\"\r\n                      style={{ textDecoration: \"none\", padding: \"5px\" }}\r\n                    >\r\n                      <i className=\"simple-icon-arrow-right\" />\r\n                    </button>\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n              {currentSession ? (\r\n                <TransitionGroup>\r\n                  <CSSTransition classNames=\"card\" timeout={500}>\r\n                    <div className=\"d-flex flex-row mt-auto glide-item card-transition\">\r\n                      <img\r\n                        className=\"rounded-circle me-3\"\r\n                        alt=\"Profile\"\r\n                        src={`${baseUrl}/${currentSession.imageUrl}`}\r\n                        style={{\r\n                          width: \"40px\",\r\n                          height: \"40px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                      />\r\n                      <div className=\"d-flex flex-grow-1 min-width-zero\">\r\n                        <div className=\"pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\r\n                          <div className=\"min-width-zero ml-2\">\r\n                            <h4 className=\"mb-1\">{currentSession.name}</h4>\r\n                            <h5 className=\"text-muted text-small mb-0\">\r\n                              {currentSession.chatStatus}\r\n                            </h5>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <Col xs=\"auto\">\r\n                        <Button\r\n                          onClick={() => handleNewSessionClick()}\r\n                          color=\"primary\"\r\n                          size=\"xs\"\r\n                          outline\r\n                        >\r\n                          <span>\r\n                            <TimestampConverter\r\n                              timeStamp={currentSession.fromTimeStamp}\r\n                              format=\"datetime\"\r\n                            />\r\n                          </span>\r\n                        </Button>\r\n                      </Col>\r\n                    </div>\r\n                  </CSSTransition>\r\n                </TransitionGroup>\r\n              ) : (\r\n                <div className=\"d-flex justify-content-center\">\r\n                  There is no new sessions\r\n                </div>\r\n              )}\r\n              <div className=\"d-flex justify-content-center\">\r\n                <div\r\n                  className=\"glide__bullets slider-dot-container\"\r\n                  data-glide-el=\"controls[nav]\"\r\n                >\r\n                  {renderDots()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mx-auto my-4 \" style={{ maxWidth: \"1000px\" }}>\r\n        <Colxx md=\"6\" sm=\"6\" lg=\"4\" xxs=\"12\">\r\n          <Card className=\"mb-2\">\r\n            {currentMentor && (\r\n              <CardBody>\r\n                <Row className=\"mb-3 align-items-center\">\r\n                  <Col>\r\n                    <h3 className=\"mb-0 fw-bold\">\r\n                      <strong>Mentors</strong>\r\n                    </h3>\r\n                  </Col>\r\n                  <Col xs=\"auto\">\r\n                    <Button\r\n                      size=\"xs\"\r\n                      color=\"primary\"\r\n                      onClick={handleViewMentors}\r\n                    >\r\n                      <span>View all</span>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <div className=\"text-center\">\r\n                  <Row>\r\n                    <Col className=\"d-flex align-items-center\">\r\n                      <button\r\n                        onClick={handleMentorPrevious}\r\n                        type=\"button\"\r\n                        className=\"glide__arrow glide__arrow--left left-arrow btn btn-link btn-xs\"\r\n                        data-glide-dir=\"<\"\r\n                        style={{ textDecoration: \"none\" }}\r\n                      >\r\n                        <i className=\"simple-icon-arrow-left\" />\r\n                      </button>\r\n                    </Col>\r\n                    <Col className=\"d-flex justify-content-center align-items-center\">\r\n                      {/* <CardImg\r\n                  top\r\n                  src={`${baseUrl}/${currentMentor.imageUrl}`}\r\n                  alt=\"Card image cap\"\r\n                  className=\"img-thumbnail border-0 rounded-circle mb-2 list-thumbnail\"\r\n                /> */}\r\n                      {!currentMentor.imageUrl ? (\r\n                        <ThumbnailLetters\r\n                          // small\r\n                          rounded\r\n                          text={currentMentor.firstName}\r\n                          className=\"mx-2 mb-3\"\r\n                          color=\"secondary\"\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          src={`${baseUrl}/${currentMentor.imageUrl}`}\r\n                          className=\" rounded-circle mb-2\"\r\n                          style={{\r\n                            width: \"90px\",\r\n                            height: \"90px\",\r\n                            objectFit: \"cover\",\r\n                            overflow: \"hidden\",\r\n                          }}\r\n                          alt=\"img\"\r\n                        />\r\n                      )}\r\n                    </Col>\r\n                    <Col className=\"d-flex align-items-center justify-content-end\">\r\n                      <button\r\n                        onClick={handleMentorNext}\r\n                        type=\"button\"\r\n                        className=\"glide__arrow glide__arrow--right right-arrow btn btn-link btn-xs\"\r\n                        data-glide-dir=\">\"\r\n                        style={{ textDecoration: \"none\" }}\r\n                      >\r\n                        <i className=\"simple-icon-arrow-right\" />\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                  <NavLink to=\"#\">\r\n                    <h3 className=\"mb-0\">\r\n                      <strong>\r\n                        {currentMentor.firstName} {currentMentor.lastName}\r\n                      </strong>\r\n                    </h3>\r\n                  </NavLink>\r\n                  <CardText className=\"text-muted text-small mb-2\">\r\n                    {currentMentor.jobTitle} | {currentMentor.company}\r\n                  </CardText>\r\n                  <span>\r\n                    {currentMentor.experience === undefined ||\r\n                    currentMentor.experience === 0\r\n                      ? \"No experience\"\r\n                      : `${currentMentor.experience} years of experience`}\r\n                  </span>\r\n\r\n                  <div className=\"separator mb-2 mt-2\" />\r\n                  <h3 className=\"mb-0 fw-bold\">\r\n                    <strong>\r\n                      ₹{Math.floor(currentMentor.price).toLocaleString()}/hr\r\n                    </strong>\r\n                  </h3>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <div\r\n                    className=\"glide__bullets slider-dot-container\"\r\n                    data-glide-el=\"controls[nav]\"\r\n                  >\r\n                    {renderMentorsDots()}\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            )}\r\n          </Card>\r\n        </Colxx>\r\n        <Colxx md=\"6\" sm=\"6\" lg=\"4\" xxs=\"12\">\r\n          <Card className=\"mb-2\">\r\n            <CardBody>\r\n              <Row className=\"mb-3 align-items-center\">\r\n                <Col>\r\n                  <h3 className=\"mb-0 fw-bold\">\r\n                    <strong>Lawyers</strong>\r\n                  </h3>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Button size=\"xs\" color=\"primary\" onClick={handleViewLawyers}>\r\n                    <span>View all</span>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"text-center\">\r\n                <Row>\r\n                  <Col className=\"d-flex align-items-center\">\r\n                    <button\r\n                      onClick={handleLawyerPrevious}\r\n                      type=\"button\"\r\n                      className=\"glide__arrow glide__arrow--left left-arrow btn btn-link btn-xs\"\r\n                      data-glide-dir=\"<\"\r\n                      style={{ textDecoration: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-arrow-left\" />\r\n                    </button>\r\n                  </Col>\r\n                  <Col className=\"d-flex justify-content-center align-items-center\">\r\n                    {/* <CardImg\r\n                  top\r\n                  src={currentLawyer.imageUrl}\r\n                  alt=\"Card image cap\"\r\n                  className=\"img-thumbnail border-0 rounded-circle mb-2 list-thumbnail\"\r\n                /> */}\r\n                    {!currentLawyer.imageUrl ? (\r\n                      <ThumbnailLetters\r\n                        // small\r\n                        rounded\r\n                        text={currentLawyer.firstName}\r\n                        className=\"mx-2 mb-3\"\r\n                        color=\"secondary\"\r\n                      />\r\n                    ) : (\r\n                      <img\r\n                        src={`${baseUrl}/${currentLawyer.imageUrl}`}\r\n                        className=\" rounded-circle mb-2\"\r\n                        style={{\r\n                          width: \"90px\",\r\n                          height: \"90px\",\r\n                          objectFit: \"cover\",\r\n                          overflow: \"hidden\",\r\n                        }}\r\n                        alt=\"img\"\r\n                      />\r\n                    )}\r\n                  </Col>\r\n                  <Col className=\"d-flex align-items-center justify-content-end\">\r\n                    <button\r\n                      onClick={handleLawyerNext}\r\n                      type=\"button\"\r\n                      className=\"glide__arrow glide__arrow--right right-arrow btn btn-link btn-xs\"\r\n                      data-glide-dir=\">\"\r\n                      style={{ textDecoration: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-arrow-right\" />\r\n                    </button>\r\n                  </Col>\r\n                </Row>\r\n                <NavLink to=\"#\">\r\n                  <h3 className=\"mb-0\">\r\n                    <strong>\r\n                      {currentLawyer.firstName} {currentLawyer.lastName}\r\n                    </strong>\r\n                  </h3>\r\n                </NavLink>\r\n                {!currentLawyer === null ? (\r\n                  <CardText className=\"text-muted text-small mb-2 text-truncate\">\r\n                    {currentLawyer.services.map((s, index) => (\r\n                      <>\r\n                        <span key={s}>{s}</span>\r\n                        {index < currentLawyer.services.length - 1 && \" | \"}\r\n                      </>\r\n                    ))}\r\n                  </CardText>\r\n                ) : (\r\n                  <CardText className=\"text-muted text-small mb-2 text-truncate\">\r\n                    No services\r\n                  </CardText>\r\n                )}\r\n                <span className=\"text-truncate\">\r\n                  {currentLawyer.languages.length > 0 ? (\r\n                    currentLawyer.languages.map((lang, index) => (\r\n                      <React.Fragment key={lang}>\r\n                        <span>\r\n                          {language.find((l) => l.iso_code === lang)?.name}\r\n                        </span>\r\n                        {index < currentLawyer.languages.length - 1 && \" | \"}\r\n                      </React.Fragment>\r\n                    ))\r\n                  ) : (\r\n                    <span>-</span>\r\n                  )}\r\n                </span>\r\n                <div className=\"separator mb-2 mt-2\" />\r\n                <h3 className=\"mb-0 fw-bold\">\r\n                  <strong>\r\n                    ₹{Math.floor(currentLawyer.price).toLocaleString()}/mo\r\n                  </strong>\r\n                </h3>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <div\r\n                  className=\"glide__bullets slider-dot-container\"\r\n                  data-glide-el=\"controls[nav]\"\r\n                >\r\n                  {renderLawyerDots()}\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n        <Colxx md=\"6\" sm=\"6\" lg=\"4\" xxs=\"12\">\r\n          <Card className=\"mb-2\">\r\n            <CardBody>\r\n              <Row className=\"mb-3 align-items-center\">\r\n                <Col>\r\n                  <h3 className=\"mb-0 fw-bold\">\r\n                    <strong>Alumni</strong>\r\n                  </h3>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Button size=\"xs\" color=\"primary\" onClick={handleViewAlumnis}>\r\n                    <span>View all</span>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"text-center\">\r\n                <Row>\r\n                  <Col className=\"d-flex align-items-center\">\r\n                    <button\r\n                      onClick={handleAlumniPrevious}\r\n                      type=\"button\"\r\n                      className=\"glide__arrow glide__arrow--left left-arrow btn btn-link btn-xs\"\r\n                      data-glide-dir=\"<\"\r\n                      style={{ textDecoration: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-arrow-left\" />\r\n                    </button>\r\n                  </Col>\r\n                  <Col className=\"d-flex justify-content-center align-items-center\">\r\n                    {/* <CardImg\r\n                  top\r\n                  src={currentAlumni.imageUrl}\r\n                  alt=\"Card image cap\"\r\n                  className=\"img-thumbnail border-0 rounded-circle mb-2 list-thumbnail\"\r\n                /> */}\r\n                    {!currentAlumni.imageUrl ? (\r\n                      <ThumbnailLetters\r\n                        // small\r\n                        rounded\r\n                        text={currentAlumni.firstName}\r\n                        className=\"mx-2 mb-3\"\r\n                        color=\"secondary\"\r\n                      />\r\n                    ) : (\r\n                      <img\r\n                        // src={currentAlumni.imageUrl}\r\n                        src={`${baseUrl}/${currentAlumni.imageUrl}`}\r\n                        className=\" rounded-circle mb-2\"\r\n                        style={{\r\n                          width: \"90px\",\r\n                          height: \"90px\",\r\n                          objectFit: \"cover\",\r\n                          overflow: \"hidden\",\r\n                        }}\r\n                        alt=\"img\"\r\n                      />\r\n                    )}\r\n                  </Col>\r\n                  <Col className=\"d-flex align-items-center justify-content-end\">\r\n                    <button\r\n                      onClick={handleAlumniNext}\r\n                      type=\"button\"\r\n                      className=\"glide__arrow glide__arrow--right right-arrow btn btn-link btn-xs\"\r\n                      data-glide-dir=\">\"\r\n                      style={{ textDecoration: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-arrow-right\" />\r\n                    </button>\r\n                  </Col>\r\n                </Row>\r\n                <NavLink to=\"#\">\r\n                  <h3 className=\"mb-0\">\r\n                    <strong>{currentAlumni.firstName}</strong>\r\n                  </h3>\r\n                </NavLink>\r\n                <CardText className=\"text-muted text-small mb-2\">\r\n                  {currentAlumni.jobTitle} | {currentAlumni.company}\r\n                </CardText>\r\n                <span>{currentAlumni.experienceYears} years of experience</span>\r\n                <div className=\"separator mb-2 mt-2\" />\r\n                <h3 className=\"mb-0 fw-bold\">\r\n                  <strong>\r\n                    ₹{Math.floor(currentAlumni.price).toLocaleString()}/mo\r\n                  </strong>\r\n                </h3>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <div\r\n                  className=\"glide__bullets slider-dot-container\"\r\n                  data-glide-el=\"controls[nav]\"\r\n                >\r\n                  {renderAlumniDots()}\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n      {/* job and stay listing starts */}\r\n      <Row className=\"mx-auto  \" style={{ maxWidth: \"1000px\" }}>\r\n        <Colxx lg=\"6\" md=\"12\" sm=\"12\">\r\n          <Card className=\"mb-2\" style={{ height: \"500px\" }}>\r\n            {currentStayList ? (\r\n              <CardBody>\r\n                <div className=\"p-4 position-relative\">\r\n                  <Button\r\n                    className=\"rounded-circle px-2 py-0   text-one bg-white position-absolute \"\r\n                    style={{\r\n                      border: \"3px solid #a16390\",\r\n                      top: \"30px\",\r\n                      right: \"30px\",\r\n                      cursor: \"pointer\",\r\n                      zIndex: 10,\r\n                    }}\r\n                    // onClick={toggleOwnerInfo}\r\n                  >\r\n                    <i\r\n                      className=\"fa-solid fa-user\"\r\n                      color=\"secondary\"\r\n                      style={{ color: \"#a16390\" }}\r\n                    />\r\n                  </Button>\r\n                  <CardImg\r\n                    top\r\n                    // src=\"/assets/img/cards/thumb-1.jpg\"\r\n                    // src=\"https://images.pexels.com/photos/106399/pexels-photo-106399.jpeg\"\r\n                    src={\r\n                      currentStayList.images.length > 0\r\n                        ? `${baseUrl}/${currentStayList.images[0].imageUrl}` // Use the first image URL\r\n                        : \"https://via.placeholder.com/300x200?text=No+Image\" // Fallback image\r\n                    }\r\n                    alt=\"Card image cap\"\r\n                    className=\"mb-2\"\r\n                    style={{ height: \"250px\", objectFit: \"fill\" }}\r\n                    // style={{\r\n                    //   opacity: isOwnerInfoVisible ? 0.1 : 1, // Reduce opacity when info is visible\r\n                    //   transition: \"opacity 0.3s ease-in-out\", // Add a transition effect\r\n                    // }}\r\n                  />\r\n\r\n                  {/* <span\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"100px\",\r\n                  right: \"80px\",\r\n\r\n                  padding: \"10px\",\r\n                  borderRadius: \"5px\",\r\n                  \r\n                }}\r\n                className=\"font-weight-bold\"\r\n              >\r\n                <h2 className=\"text-large\">Owner: Prakash Raj</h2>\r\n                <h4 className=\"\">\r\n                  \r\n                  <i className=\"fa-solid fa-phone mr-2\" />\r\n                  9876543210\r\n                </h4>\r\n                <h4\r\n                  className=\"d-inline-flex align-items-center\"\r\n                  style={{ display: \"inline-flex\" }}\r\n                >\r\n               \r\n                  <i className=\"fa-solid fa-envelope mr-2\" /> prakash@gmail.com\r\n                </h4>\r\n              </span> */}\r\n\r\n                  <Row>\r\n                    <Col xs=\"12\" sm=\"12\" className=\"d-flex align-items-center\">\r\n                      <h3 className=\"font-weight-bold mt-2 text-one \">\r\n                        Rent: <span className=\"text-primary\">₹</span>\r\n                        <span data-toggle=\"tooltip\" title=\"Expected Rent\">\r\n                          {currentStayList.expectedRent}\r\n                        </span>\r\n                      </h3>\r\n                      <Button\r\n                        color=\"light\"\r\n                        className=\" font-weight-semibold mx-2\"\r\n                        size=\"xs\"\r\n                      >\r\n                        {currentStayList.apartmentType}\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  {/* icons tstart */}\r\n                  <Row className=\"my-2\">\r\n                    <Col className=\"d-flex flex-wrap\">\r\n                      <Button\r\n                        color=\"light\"\r\n                        className=\"font-weight-bold mr-1 my-1\"\r\n                        size=\"sm\"\r\n                      >\r\n                        <i className=\"fas fa-bed \" />{\" \"}\r\n                        {currentStayList.bhkTypeValue}\r\n                      </Button>\r\n                      <Button\r\n                        color=\"light\"\r\n                        className=\"font-weight-bold m-1\"\r\n                        size=\"sm\"\r\n                      >\r\n                        <i className=\"fa-solid fa-shower\" />{\" \"}\r\n                        {currentStayList.bhkTypeValue}\r\n                      </Button>\r\n                      <Button\r\n                        color=\"light\"\r\n                        className=\"font-weight-bold m-1\"\r\n                        size=\"sm\"\r\n                      >\r\n                        <i className=\"fa-solid fa-car\" />{\" \"}\r\n                        {currentStayList.parkingValue}\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  {/* icons end */}\r\n\r\n                  <Row className=\"mt-2\">\r\n                    <Col className=\"text-start text-sm-left\" xs={12} sm={6}>\r\n                      <div className=\"text-muted mt-2\">\r\n                        {/* {data.interestedCount} liked this property */}{\" \"}\r\n                        {currentStayList.interestedCount} liked this property\r\n                      </div>\r\n                    </Col>\r\n                    <Col\r\n                      className=\"text-sm-right texr-start mt-sm-0 mt-2\"\r\n                      xs={12}\r\n                      sm={6}\r\n                    >\r\n                      <Button\r\n                        // onClick={() => handleInterestedButtonClick(data.id)}\r\n                        outline\r\n                        color=\"primary\"\r\n                        size=\"xs\"\r\n                        // active={data.loggedInUserInterested}\r\n                      >\r\n                        I&apos;m interested\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <div\r\n                    className=\"glide__bullets slider-dot-container\"\r\n                    data-glide-el=\"controls[nav]\"\r\n                  >\r\n                    {renderStayListDots()}\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            ) : (\r\n              <CardBody className=\"h-100 d-flex justify-content-center align-items-center\">\r\n                <h1 className=\"text-center mx-auto\">There is no stay list</h1>\r\n              </CardBody>\r\n            )}\r\n          </Card>\r\n        </Colxx>\r\n        {/* <Colxx lg=\"6\" md=\"6\">\r\n          <Card className=\" my-2\">\r\n            <CardBody className=\"p-3\">\r\n              <CardImg\r\n                top\r\n                \r\n                src=\"https://images.pexels.com/photos/269077/pexels-photo-269077.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\"\r\n                alt=\"Card image cap\"\r\n                style={{ height: \"250px\" }}\r\n              />\r\n\r\n              <Row>\r\n                <Col>\r\n                  <h3 className=\"font-weight-bold mt-2 text-large\">\r\n                    developer\r\n                  </h3>\r\n                  <h6>TCS</h6>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col>\r\n                  <Button\r\n                    color=\"light\"\r\n                    className=\"mb-2 font-weight-semibold\"\r\n                    size=\"xs\"\r\n                  >\r\n                    job\r\n                  </Button>\r\n                  <Button\r\n                    color=\"light\"\r\n                    className=\"mb-2 font-weight-semibold mx-1\"\r\n                    size=\"xs\"\r\n                  >\r\n                    fresher\r\n                  </Button>\r\n                  <Button\r\n                    color=\"light\"\r\n                    className=\"mb-2 font-weight-semibold mx-1\"\r\n                    size=\"xs\"\r\n                  >\r\n                    fffffff\r\n                  </Button>\r\n                  <Button\r\n                    color=\"light\"\r\n                    className=\"mb-2 font-weight-semibold mx-1\"\r\n                    size=\"xs\"\r\n                  >\r\n                    chennai\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mt-2 text-one\">\r\n                <Col className=\"\" xs={12} sm={8}>\r\n                  <span className=\"text-muted \">\r\n                    Posted on\r\n                    <TimestampConverter\r\n                                timeStamp={data.postedOn}\r\n                                format=\"datetime\"\r\n                              />\r\n                  </span>\r\n                </Col>\r\n                <Col\r\n                  // className=\"text-sm-right text-start mt-sm-0 mt-2\"\r\n                  className=\"d-flex justify-content-sm-end justify-content-start align-items-center mt-sm-0 mt-2\"\r\n                  xs={12}\r\n                  sm={4}\r\n                >\r\n                  <Button\r\n                    outline\r\n                    // className=\"d-none d-lg-block\"\r\n                    color=\"primary\"\r\n                    size=\"xs\"\r\n                  >\r\n                    I&apos;m interested\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx> */}\r\n        <Colxx lg=\"6\" md=\"12\" sm=\"12\">\r\n          <Card className=\"mb-2\" style={{ height: \"500px\" }}>\r\n            {currentJobList ? (\r\n              <CardBody>\r\n                <div className=\"text-center d-flex justify-content-center align-items-center\">\r\n                  <Row>\r\n                    {/* <Col className=\"text-center d-flex align-items-center\">\r\n                      <button\r\n                        onClick={handleJobPrevious}\r\n                        type=\"button\"\r\n                        className=\"glide__arrow glide__arrow--left left-arrow btn btn-link btn-xs\"\r\n                        data-glide-dir=\"<\"\r\n                        style={{ textDecoration: \"none\" }}\r\n                      >\r\n                        <i className=\"simple-icon-arrow-left\" />\r\n                      </button>\r\n                    </Col> */}\r\n                    <Col md={12}>\r\n                      <div className=\"\">\r\n                        <CardImg\r\n                          top\r\n                          // src=\"/assets/img/cards/thumb-1.jpg\"\r\n                          // src=\"https://images.pexels.com/photos/269077/pexels-photo-269077.jpeg\"\r\n                          src={\r\n                            currentJobList?.image?.imageUrl\r\n                              ? `${baseUrl}/${currentJobList.image.imageUrl}`\r\n                              : \"https://placehold.co/300x200?text=No%20Image\" // Fallback image\r\n                          }\r\n                          alt=\"Card image cap\"\r\n                          style={{ height: \"250px\", objectFit: \"fill\" }}\r\n                        />\r\n\r\n                        <Row>\r\n                          <Col>\r\n                            <h3 className=\"font-weight-bold mt-2 text-large\">\r\n                              {currentJobList.jobTitle}\r\n                            </h3>\r\n                            <h6>{currentJobList.company}</h6>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                          <Col>\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"mb-2 font-weight-semibold\"\r\n                              size=\"xs\"\r\n                            >\r\n                              {currentJobList.jobTitle}\r\n                            </Button>\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"mb-2 font-weight-semibold mx-1\"\r\n                              size=\"xs\"\r\n                            >\r\n                              {currentJobList.workPlaceType}\r\n                            </Button>\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"mb-2 font-weight-semibold mx-1\"\r\n                              size=\"xs\"\r\n                            >\r\n                              {currentJobList.employmentType}\r\n                            </Button>\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"mb-2 font-weight-semibold mx-1\"\r\n                              size=\"xs\"\r\n                            >\r\n                              {currentJobList.jobLocation}\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"mt-2 \">\r\n                          <Col className=\"\" xs={12} sm={8}>\r\n                            <span className=\"text-muted \">\r\n                              Posted on\r\n                              <TimestampConverter\r\n                                timeStamp={currentJobList.postedOn}\r\n                                format=\"datetime\"\r\n                              />\r\n                            </span>\r\n                          </Col>\r\n                          <Col\r\n                            // className=\"text-sm-right text-start mt-sm-0 mt-2\"\r\n                            className=\"d-flex justify-content-sm-end justify-content-start align-items-center mt-sm-0 mt-2\"\r\n                            xs={12}\r\n                            sm={4}\r\n                          >\r\n                            <Button\r\n                              outline\r\n                              // className=\"d-none d-lg-block\"\r\n                              color=\"primary\"\r\n                              size=\"xs\"\r\n                            >\r\n                              I&apos;m interested\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    </Col>\r\n                    {/* <Col className=\"text-center d-flex align-items-center\">\r\n                      <button\r\n                        onClick={handleJobNext}\r\n                        type=\"button\"\r\n                        className=\"glide__arrow glide__arrow--right right-arrow btn btn-link btn-xs\"\r\n                        data-glide-dir=\">\"\r\n                        style={{ textDecoration: \"none\" }}\r\n                      >\r\n                        <i className=\"simple-icon-arrow-right\" />\r\n                      </button>\r\n                    </Col> */}\r\n                  </Row>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <div\r\n                    className=\"glide__bullets slider-dot-container\"\r\n                    data-glide-el=\"controls[nav]\"\r\n                  >\r\n                    {renderJobListDots()}\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            ) : (\r\n              <CardBody className=\"h-100 d-flex justify-content-center align-items-center\">\r\n                <h1 className=\"text-center mx-auto\">There is no job list</h1>\r\n              </CardBody>\r\n            )}\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n\r\n      {/* job and stay listing ends */}\r\n      {/* Q and A starts */}\r\n      <Row className=\"mx-auto\" style={{ maxWidth: \"1008px\" }}>\r\n  <Colxx lg=\"7\" md=\"6\" className=\"mb-2\">\r\n    <Card>\r\n      <CardBody>\r\n        {dashboardQuestions && dashboardQuestions.length > 0 ? (\r\n          <GlideComponent\r\n            settings={{\r\n              gap: 5,\r\n              perView: 1,\r\n              type: \"carousel\",\r\n            }}\r\n          >\r\n            {dashboardQuestions.map((items) => (\r\n              <div key={items.id}>\r\n                <Card>\r\n                  <div>\r\n                    <CardTitle>\r\n                      <strong className=\"text-large\">Q&A</strong>\r\n                    </CardTitle>\r\n                    <div>\r\n                      <div className=\"d-flex align-items-center justify-content-between\">\r\n                        <h2 className=\"font-weight-semi-bold text-large py-1\">\r\n                          {items.questionHeading}\r\n                        </h2>\r\n                        <p className=\"text-muted\">\r\n                          {formatDate(items.time)}\r\n                        </p>\r\n                      </div>\r\n                      <p className=\"text-one font-weight-semibold text-muted py-1\">\r\n                        {items.questionHeadingBrief}\r\n                      </p>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"d-flex align-items-center justify-content-between my-2\">\r\n                      <span className=\"text-one\">\r\n                        {items.views} views\r\n                      </span>\r\n                      <span className=\"text-one\">\r\n                        <i\r\n                          className=\"simple-icon-envelope\"\r\n                          color=\"primary\"\r\n                        />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"w-full d-flex\">\r\n                      <Button\r\n                        className=\"text-center mx-auto\"\r\n                        color=\"primary\"\r\n                        size=\"sm\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() =>\r\n                          history.push(`/app/questions/${items.id}`)\r\n                        }\r\n                      >\r\n                        View all answers\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Card>\r\n              </div>\r\n            ))}\r\n          </GlideComponent>\r\n        ) : (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <h2>No Q&A Available</h2>\r\n          </div>\r\n        )}\r\n      </CardBody>\r\n    </Card>\r\n  </Colxx>\r\n\r\n    <Colxx lg=\"5\" md=\"6\" className=\"mb-2\">\r\n    <Card style={{ height: \"360px\" }}>\r\n      <CardBody>\r\n        {currentBatchMate ? (\r\n          <>\r\n            <div className=\"d-flex align-items-center justify-content-between mb-3\">\r\n              <h3 className=\"mb-0 fw-bold\">\r\n                <strong>Batch Mates</strong>\r\n              </h3>\r\n              <Button\r\n                size=\"xs\"\r\n                color=\"primary\"\r\n                onClick={handleViewBatchmates}\r\n              >\r\n                <span>View all</span>\r\n              </Button>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <Row>\r\n                <Col className=\"d-flex align-items-center\">\r\n                  <button\r\n                    onClick={handleBatchMatePrevious}\r\n                    type=\"button\"\r\n                    className=\"glide__arrow glide__arrow--left left-arrow btn btn-link btn-xs\"\r\n                    data-glide-dir=\"<\"\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    <i className=\"simple-icon-arrow-left\" />\r\n                  </button>\r\n                </Col>\r\n                <Col className=\"d-flex justify-content-center align-items-center\">\r\n                  {!currentBatchMate.imageUrl ? (\r\n                    <ThumbnailLetters\r\n                      rounded\r\n                      text={currentBatchMate.firstName}\r\n                      className=\"mx-2 mb-3\"\r\n                      color=\"secondary\"\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      src={`${baseUrl}/${currentBatchMate.imageUrl}`}\r\n                      className=\"rounded-circle mb-2\"\r\n                      style={{\r\n                        width: \"90px\",\r\n                        height: \"90px\",\r\n                        objectFit: \"cover\",\r\n                        overflow: \"hidden\",\r\n                      }}\r\n                      alt=\"img\"\r\n                    />\r\n                  )}\r\n                </Col>\r\n                <Col className=\"d-flex align-items-center justify-content-end\">\r\n                  <button\r\n                    onClick={handleBatchMateNext}\r\n                    type=\"button\"\r\n                    className=\"glide__arrow glide__arrow--right right-arrow btn btn-link btn-xs\"\r\n                    data-glide-dir=\">\"\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    <i className=\"simple-icon-arrow-right\" />\r\n                  </button>\r\n                </Col>\r\n              </Row>\r\n              <NavLink to=\"#\">\r\n                <h3 className=\"mb-0\">\r\n                  <strong>\r\n                    {currentBatchMate.firstName} {currentBatchMate.lastName}\r\n                  </strong>\r\n                </h3>\r\n              </NavLink>\r\n              <CardText className=\"text-muted text-small mb-2\">\r\n                {currentBatchMate.jobTitle} | {currentBatchMate.company}\r\n              </CardText>\r\n              <div className=\"separator mb-2 mt-2\" />\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <div\r\n                className=\"glide__bullets slider-dot-container\"\r\n                data-glide-el=\"controls[nav]\"\r\n              >\r\n                {renderBatchMateDots()}\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <h2>No Batchmates</h2>\r\n          </div>\r\n        )}\r\n      </CardBody>\r\n    </Card>\r\n  </Colxx>\r\n</Row>\r\n      {/* Q and A ends */}\r\n\r\n      <Row className=\"mx-auto  \" style={{ maxWidth: \"1008px\" }}>\r\n        <Colxx lg=\"7\" md=\"6\" className=\"mb-2\">\r\n          {/* <Col lg={7}> */}\r\n          <Card>\r\n            <CardBody>\r\n              <CardTitle>\r\n                <strong>Recent Sessions</strong>\r\n              </CardTitle>\r\n              <div className=\"dashboard-list-with-user\">\r\n                <PerfectScrollbar\r\n                  options={{ suppressScrollX: true, wheelPropagation: false }}\r\n                >\r\n                  {recentSessions.length > 0 ? (\r\n                    <>\r\n                      {recentSessions &&\r\n                        recentSessions.map((sessions, index) => {\r\n                          return (\r\n                            <div\r\n                              // eslint-disable-next-line react/no-array-index-key\r\n                              key={index}\r\n                              className=\"d-flex flex-row mb-2 pb-2 border-bottom\"\r\n                            >\r\n                              <Row className=\"w-100\">\r\n                                <NavLink href=\"#\">\r\n                                  <img\r\n                                    src={`${baseUrl}/${sessions.imageUrl}`}\r\n                                    alt={sessions.name}\r\n                                    className=\" rounded-circle img-thumbnail border\"\r\n                                    style={{\r\n                                      width: \"50px\",\r\n                                      height: \"50px\",\r\n                                      objectFit: \"cover\",\r\n                                      overflow: \"hidden\",\r\n                                    }}\r\n                                  />\r\n                                </NavLink>\r\n                                <Col>\r\n                                  {/* <div className=\"pl-2 pr-2\"> */}\r\n                                  <NavLink to=\"#\">\r\n                                    <p className=\"font-weight-medium mb-0 \">\r\n                                      {sessions.name}\r\n                                    </p>\r\n                                    <p className=\"text-muted mb-0 text-small\">\r\n                                      {sessions.chatStatus}\r\n                                    </p>\r\n                                  </NavLink>\r\n                                  {/* </div> */}\r\n                                </Col>\r\n                                <Col className=\"mt-3  d-flex flex-column align-items-center\">\r\n                                  {/* <div className=\"mt-3 pr-2 ml-4\"> */}\r\n                                  <p className=\"text-muted mb-0 text-small\">\r\n                                    <TimestampConverter\r\n                                      timeStamp={sessions.fromTimeStamp}\r\n                                      format=\"date\"\r\n                                    />\r\n                                  </p>\r\n                                  <p className=\"text-muted mb-0 text-small\">\r\n                                    <TimestampConverter\r\n                                      timeStamp={sessions.fromTimeStamp}\r\n                                      format=\"time\"\r\n                                    />{\" \"}\r\n                                    -{\" \"}\r\n                                    <TimestampConverter\r\n                                      timeStamp={sessions.toTimeStamp}\r\n                                      format=\"time\"\r\n                                    />\r\n                                  </p>\r\n                                  {/* </div> */}\r\n                                </Col>\r\n                                <Col className=\"mt-3\">\r\n                                  {/* <div className=\"d-flex justify-end ml-4 mr-2 pr-2 mt-3\"> */}\r\n                                  <Rating\r\n                                    total={5}\r\n                                    rating={sessions.star}\r\n                                    interactive={false}\r\n                                  />\r\n                                  {/* </div> */}\r\n                                </Col>\r\n                              </Row>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                    </>\r\n                  ) : (\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      There is no recent sessions\r\n                    </div>\r\n                  )}\r\n                </PerfectScrollbar>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n          {/* </Col> */}\r\n        </Colxx>\r\n        <Colxx lg=\"5\" md=\"6\" className=\"mb-2\">\r\n          {/* <Col lg={5}> */}\r\n          <Card>\r\n            <CardBody>\r\n              <CardTitle>\r\n                <strong>Recent Chats</strong>\r\n              </CardTitle>\r\n              <div className=\"dashboard-list-with-user\">\r\n                <PerfectScrollbar\r\n                  options={{ suppressScrollX: true, wheelPropagation: false }}\r\n                >\r\n                  {recentChats.length > 0 ? (\r\n                    <>\r\n                      {recentChats &&\r\n                        recentChats.map((chats, index) => {\r\n                          return (\r\n                            <div\r\n                              // eslint-disable-next-line react/no-array-index-key\r\n                              key={index}\r\n                              className=\"d-flex flex-row mb-2 pb-2 border-bottom\"\r\n                            >\r\n                              <NavLink\r\n                                href={`${adminRoot}/chat/${chats.username}`}\r\n                              >\r\n                                <img\r\n                                  src={`${baseUrl}/${chats.imageUrl}`}\r\n                                  alt={chats.name}\r\n                                  // className=\"img-thumbnail border-0 rounded-circle list-thumbnail align-self-center xsmall\"\r\n                                  className=\" rounded-circle img-thumbnail border\"\r\n                                  style={{\r\n                                    width: \"50px\",\r\n                                    height: \"50px\",\r\n                                    objectFit: \"cover\",\r\n                                    overflow: \"hidden\",\r\n                                  }}\r\n                                />\r\n                              </NavLink>\r\n\r\n                              <div className=\"pl-3 pr-2 mt-2\">\r\n                                <NavLink\r\n                                  href={`${adminRoot}/chat/${chats.username}`}\r\n                                >\r\n                                  <p className=\"font-weight-medium mb-0 \">\r\n                                    {chats.name}\r\n                                  </p>\r\n                                  <p\r\n                                    className=\"text-muted mb-0 text-small w-100 text-truncate\"\r\n                                    style={{ maxWidth: \"170px\" }}\r\n                                  >\r\n                                    {chats.chatStatus}\r\n                                  </p>\r\n                                </NavLink>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                    </>\r\n                  ) : (\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      There is no recent chats\r\n                    </div>\r\n                  )}\r\n                </PerfectScrollbar>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n          {/* </Col> */}\r\n        </Colxx>\r\n      </Row>\r\n      {/* recent chats and recent sessions end */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashBoard;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import IntlMessages from 'helpers/IntlMessages';\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Badge, Button, Card, CardBody, CardText, Row } from \"reactstrap\";\r\n// import RatingExamples from './RatingExamples';\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport Rating from \"components/common/Rating\";\r\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport MentorFilter from \"./MentorFilter\";\r\nimport \"./mentorcard.css\";\r\n// import MentorDropDown from './MentorDropDown';\r\n\r\nconst MentorCard = () => {\r\n  const [selectedSkills, setSelectedSkills] = useState([]);\r\n  const [selectedTools, setSelectedTools] = useState(\"\");\r\n  const [selectedIndustry, setSelectedIndustry] = useState(\"\");\r\n  const [selectedPrice, setSelectedPrice] = useState([]);\r\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [paginationMeta, setPaginationMeta] = useState([]);\r\n\r\n  const locationCategory = useLocation();\r\n  const category = locationCategory.state?.category;\r\n\r\n  // const [searchClick, setSearchClick] = useState(\"\")\r\n  // const [searchClicked, setSearchClicked] = useState(false)\r\n\r\n  // const [pageSize, setPageSize] = useState(2)\r\n  // console.log(paginationMeta.totalPage)\r\n  // console.log(paginationMeta.first)\r\n  // console.log(paginationMeta.last)\r\n\r\n  const handleSkillsChange = (skills) => setSelectedSkills(skills);\r\n  const handleToolsChange = (tools) => setSelectedTools(tools);\r\n  const handleIndustryChange = (industry) => setSelectedIndustry(industry);\r\n  const handlePriceChange = (price) => setSelectedPrice(price);\r\n  const handleLocationChange = (location) => setSelectedLocation(location);\r\n\r\n  // console.log(\"skills\",selectedSkills)\r\n  // console.log(\"selectedTools\",selectedTools)\r\n  // console.log(\"selectedIndustry\",selectedIndustry)\r\n  // console.log(\"selectedPrice\", selectedPrice);\r\n  // console.log(\"selectedLocation\", selectedLocation);\r\n\r\n  const [isMentorCardFetched, setIsMentorCardFetched] = useState(false);\r\n\r\n  // const url1=`${baseUrl}/mentorDetails`\r\n  // const url1=`${baseUrl}/api/mentor`\r\n  const url2 = `${baseUrl}/api/mentor/cards`;\r\n  // const imageUrl = `${baseUrl}/api/public/images`;\r\n  // To change to backend api url uncomment the below line\r\n  // const url1=`${baseUrl}/api/mentor`\r\n  // const history = useHistory();\r\n\r\n  const [mentordetails, setMentorDetails] = useState([]);\r\n  // const[mentorfilter,setMentorFilter]=useState([]);\r\n  // const [image]=useState('');\r\n  const [inputkey, setInputKey] = useState(\"\");\r\n\r\n  // const [filteredMentors, setFilteredMentors] = useState([]);\r\n  const truncateBio = (bio, lineCount) => {\r\n    if (!bio) return \"\";\r\n    const words = bio.split(\" \");\r\n\r\n    const truncatedBio = words.slice(0, lineCount).join(\" \");\r\n\r\n    if (words.length > lineCount) {\r\n      return `${truncatedBio}...`;\r\n    }\r\n    return truncatedBio;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsMentorCardFetched(false);\r\n    const mentorCardDetails = async () => {\r\n      const params = {};\r\n\r\n      if (selectedIndustry) {\r\n        params.company = selectedIndustry;\r\n      }\r\n      if (selectedLocation) {\r\n        params.location = selectedLocation;\r\n      }\r\n      if (selectedSkills) {\r\n        params.skills = selectedSkills;\r\n      }\r\n      if (selectedTools) {\r\n        params.tools = selectedTools;\r\n      }\r\n      if (selectedPrice) {\r\n        params.minPrice = selectedPrice.at(0);\r\n        params.maxPrice = selectedPrice.at(1);\r\n      }\r\n      if (inputkey) {\r\n        params.firstName = inputkey;\r\n      }\r\n      if (category) {\r\n        params.category = category.value; // Adding selectedCategory.value\r\n      }\r\n      params.size = 10;\r\n      params.page = currentPage - 1;\r\n      try {\r\n        const response = await axios.get(url2, { params });\r\n        setMentorDetails(response.data.data);\r\n        setPaginationMeta(response.data.paginationMeta);\r\n        setIsMentorCardFetched(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setIsMentorCardFetched(true);\r\n      }\r\n    };\r\n    mentorCardDetails();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    selectedLocation,\r\n    selectedIndustry,\r\n    selectedSkills,\r\n    selectedTools,\r\n    selectedPrice,\r\n    currentPage,\r\n    inputkey,\r\n  ]);\r\n\r\n  return (\r\n    <div>\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n        <div>\r\n          <div className=\"\">\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group\">\r\n                <div\r\n                  style={{ position: \"relative\" }}\r\n                  className=\"col-12 col-lg-8 col-md-8\"\r\n                >\r\n                  <i\r\n                    className=\"simple-icon-magnifier mr-3\"\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: \"50%\",\r\n                      right: \"15px\",\r\n                      transform: \"translateY(-50%)\",\r\n                      zIndex: 2,\r\n                      color: \"#aaa\",\r\n                    }}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control rounded py-2\"\r\n                    placeholder=\"Search by name\"\r\n                    value={inputkey}\r\n                    onChange={(e) => setInputKey(e.target.value)}\r\n                    style={{ paddingRight: \"2.5rem\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <MentorFilter\r\n                onSkillsChange={handleSkillsChange}\r\n                onToolsChange={handleToolsChange}\r\n                onIndustryChange={handleIndustryChange}\r\n                onPriceChange={handlePriceChange}\r\n                onLocationChange={handleLocationChange}\r\n                selectedSkills={selectedSkills}\r\n                selectedLocation={selectedLocation}\r\n                selectedIndustry={selectedIndustry}\r\n                selectedTools={selectedTools}\r\n                userRole=\"mentor\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Colxx>\r\n\r\n      {/* searchbar ends */}\r\n      {!isMentorCardFetched ? (\r\n        <div className=\"loading\" />\r\n      ) : (\r\n        <>\r\n          <div>\r\n            {mentordetails.length === 0 ? (\r\n              <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n                <Card>\r\n                  <CardBody>\r\n                    <h2 className=\"text-center text-large \">No mentors</h2>\r\n                  </CardBody>\r\n                </Card>\r\n              </Colxx>\r\n            ) : (\r\n              Array.isArray(mentordetails) &&\r\n              mentordetails.map((mentors) => {\r\n                return (\r\n                  <Colxx xxs=\"12\" key={mentors.id}>\r\n                    <Row>\r\n                      <Colxx\r\n                        sm=\"12\"\r\n                        md=\"12\"\r\n                        lg=\"9\"\r\n                        xxs=\"12\"\r\n                        className=\"mx-auto\"\r\n                      >\r\n                        <Card\r\n                          className=\"flex-row flex-wrap flex-sm-nowrap listing-card-container my-3 p-3\"\r\n                          style={{ gap: \"16px\" }}\r\n                        >\r\n                          <div className=\"d-block mentor-card-img-container\">\r\n                            {/* <img\r\n                      className=\"card-img-left\"\r\n                      src={mentors.image}\r\n                      alt=\"Card\"\r\n                      style={{minWidth:'150px',minHeight:\"300px\"}}\r\n                    /> */}\r\n                            {mentors.imageUrl == null ? (\r\n                              <div\r\n                                className=\"card-img-left bg-primary \r\n                 d-flex align-items-center justify-content-center\"\r\n                                style={{\r\n                                  width: \"200px\",\r\n                                  height: \"250px\",\r\n                                  borderRadius: \"0.75rem\",\r\n                                }}\r\n                              >\r\n                                <ThumbnailLetters\r\n                                  rounded\r\n                                  text={mentors.firstName}\r\n                                  className=\"text-xlarge border border-1\"\r\n                                  style={{ textAlign: \"center\" }}\r\n                                />\r\n                              </div>\r\n                            ) : (\r\n                              <img\r\n                                className=\"mentor-card-width\"\r\n                                // src={`${baseUrl}/api/public/images/${mentors.id}/profile-pic`}\r\n                                src={`${baseUrl}/${mentors.imageUrl}`}\r\n                                // src={`${baseUrl/${mentors.imageUrl}`}\r\n                                alt=\"Card\"\r\n                              />\r\n                            )}\r\n                          </div>\r\n\r\n                          {/* <div className=\"d-flex flex-fill\"> */}\r\n                          <CardBody className=\"d-flex flex-column flex-fill p-0\">\r\n                            {/* <CardText className=\" font-weight-semibold text-xlarge text-sm-small mb-4\">\r\n                     {mentors.firstName} {mentors.lastName}\r\n                    </CardText> */}\r\n                            <div\r\n                              className=\"d-flex flex-wrap justify-content-between mb-1\"\r\n                              style={{ columnGap: \"24px\" }}\r\n                            >\r\n                              <div\r\n                                className=\"d-flex flex-wrap align-items-center\"\r\n                                style={{ gap: \"10px\" }}\r\n                              >\r\n                                <div className=\"font-weight-semibold text-large text-capitalize\">\r\n                                  {mentors.firstName}\r\n                                </div>\r\n                                <div className=\"font-weight-semibold text-large text-capitalize\">\r\n                                  {mentors.lastName}\r\n                                </div>\r\n                                <div className=\"mx-2\">\r\n                                  <Badge\r\n                                    pill\r\n                                    style={{\r\n                                      background: \"#fcba0a\",\r\n                                    }}\r\n                                    color=\"#fcba0a\"\r\n                                    className=\"py-1 px-2 text-one text-dark\"\r\n                                  >\r\n                                    {mentors.consultations} consultants\r\n                                  </Badge>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <CardText\r\n                                className=\"text-one d-flex align-items-center flex-wrap\"\r\n                                style={{ gap: \"4px\" }}\r\n                              >\r\n                                <span className=\"font-weight-semibold mt-md-0 mt-2\">\r\n                                  <Rating\r\n                                    total={5}\r\n                                    rating={mentors.star}\r\n                                    interactive={false}\r\n                                  />\r\n                                </span>\r\n                                <span className=\"font-weight-semibold\">\r\n                                  {mentors.star}\r\n                                </span>\r\n                                <span> ({mentors.ratings} reviews)</span>\r\n                              </CardText>\r\n                            </div>\r\n                            <div className=\"d-flex\" style={{ gap: \"8px\" }}>\r\n                              <CardText className=\"text-one text-muted mb-2\">\r\n                                {mentors.jobTitle}\r\n                              </CardText>\r\n                              <div>|</div>\r\n                              <CardText className=\"text-one text-primary mb-2\">\r\n                                {mentors.company}\r\n                              </CardText>\r\n                            </div>\r\n                            <CardText\r\n                              className=\"text-one mb-2\"\r\n                              style={{ maxHeight: \"62px\", overflow: \"hidden\" }}\r\n                            >\r\n                              {/* {mentors.bio} */}\r\n                              {truncateBio(mentors.bio, 20)}\r\n                            </CardText>\r\n\r\n                            <div>\r\n                              <CardText>\r\n                                <p className=\"text-muted \">Ready to offer</p>\r\n                              </CardText>\r\n\r\n                              <CardText className=\"d-flex flex-wrap\">\r\n                                {/* {mentordetails.skills&&mentordetails.skills.map((skill) => (\r\n              <span key={skill} className=\"\">{skill}</span>\r\n            ))} */}\r\n\r\n                                {mentors.skills &&\r\n                                  mentors.skills.slice(0, 3).map((skill) => (\r\n                                    <div\r\n                                      key={skill}\r\n                                      className=\"pr-2\"\r\n                                      id=\"btn.rounded\"\r\n                                    >\r\n                                      <Badge color=\"light\">{skill}</Badge>\r\n                                    </div>\r\n                                  ))}\r\n                              </CardText>\r\n                            </div>\r\n\r\n                            <div\r\n                              className=\"d-flex justify-content-between align-items-center mt-auto flex-wrap\"\r\n                              style={{ columnGap: \"24px\" }}\r\n                            >\r\n                              {/* <NavLink href={`/app/mentorprofile/${mentors.id}`}>\r\n                       <Button color=\"primary \" className=\"default w-80 py-2  rounded\" >\r\n                        View Profile\r\n              </Button>\r\n              </NavLink> */}\r\n                              <div className=\"text-primary\">\r\n                                <span className=\"text-xlarge font-weight-semibold\">\r\n                                  ₹{Math.floor(mentors.price).toLocaleString()}\r\n                                </span>\r\n                                /Hour\r\n                              </div>\r\n                              {/* <Button\r\n                                color=\"primary\"\r\n                                onClick={() =>\r\n                                  history.push(\r\n                                    `/app/mentorprofile/${mentors.id}`\r\n                                  )\r\n                                }\r\n                                className=\"rounded\"\r\n                              >\r\n                                View Profile\r\n                              </Button> */}\r\n                              <a\r\n                                href={`/app/mentorprofile/${mentors.id}`}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                              >\r\n                                <Button color=\"primary\" className=\"rounded\">\r\n                                  View Profile\r\n                                </Button>\r\n                              </a>\r\n                            </div>\r\n                          </CardBody>\r\n                          {/* </div> */}\r\n                        </Card>\r\n                      </Colxx>\r\n                    </Row>\r\n                  </Colxx>\r\n                );\r\n              })\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {isMentorCardFetched && (\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPage={paginationMeta.totalPage}\r\n          onChangePage={(i) => setCurrentPage(i)}\r\n          lastIsActive={paginationMeta.last}\r\n          firstIsActive={paginationMeta.first}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MentorCard;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Card, CardBody, CardImg, NavLink, Row } from \"reactstrap\";\r\nimport ThumbnailLetters from \"../Chat/ThumbnailLetters\";\r\nimport ReviewsComponent from \"../Reviews/ReviewsComponent\";\r\nimport country from \"../my-login/Country\";\r\nimport MentorTabCard from \"./MentorTabCard\";\r\n\r\nconst MentorProfile = () => {\r\n  const { mid } = useParams();\r\n  // console.log('Mentor Profile ID:', mid);\r\n  // const url=`${baseUrl}/mentor/profile`;\r\n  // const url1=`${baseUrl}/mentor/cards/${mid}`;\r\n  // const url=`${baseUrl}/mentorDetails/${mid}`;\r\n  //  const url1=`${baseUrl}/mentorProfile/${mid}`;\r\n\r\n  //  To change url to backend please uncomment the below line\r\n  const url1 = `${baseUrl}/api/mentor/${mid}`;\r\n  const ratingUrl = `${baseUrl}/api/mentorship/rating/meta/${mid}`;\r\n\r\n  //  const url1=`${baseUrl}/mentor/myprofile`;\r\n  // const[mentorprofiledetails,setMentorProfileDetails]=useState([]);\r\n  const [mentorprofiledetails1, setMentorProfileDetails1] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [reviews, setReviews] = useState(\"\");\r\n  const skillsSectionRef = useRef(null);\r\n\r\n  const history = useHistory();\r\n\r\n  const [showAll, setShowAll] = useState(false);\r\n\r\n  const scrollToSkills = useCallback(() => {\r\n    const yOffset = -60;\r\n\r\n    if (skillsSectionRef.current) {\r\n      const y =\r\n        skillsSectionRef.current.getBoundingClientRect().top +\r\n        window.pageYOffset +\r\n        yOffset;\r\n      window.scrollTo({ top: y, behavior: \"smooth\" });\r\n      return;\r\n    }\r\n\r\n    const element = document.getElementById(\"skillsSection\");\r\n    if (element) {\r\n      const y =\r\n        element.getBoundingClientRect().top + window.pageYOffset + yOffset;\r\n      window.scrollTo({ top: y, behavior: \"smooth\" });\r\n    } else {\r\n      console.error(\"unable to scroll\");\r\n    }\r\n  }, []);\r\n\r\n  const toggleShowAll = useCallback(() => {\r\n    setShowAll((prevShowAll) => !prevShowAll);\r\n\r\n    setTimeout(scrollToSkills, 100);\r\n  }, [scrollToSkills]);\r\n\r\n  // const handleConnectClick = () => {\r\n  //   // Construct the URL with mentor's name as query parameter\r\n  //   const mentorName = `${mentorprofiledetails.firstName} ${mentorprofiledetails.lastName}`;\r\n  //   const url2 = `/app/calendar?mentorName=${mentorName}`;\r\n\r\n  //   // Navigate to the Month component with the mentor's name as a query parameter\r\n  //   history.push(url2);\r\n  // };\r\n  // const handleConnectClick = () => {\r\n  //   // Construct the URL with mentor's ID and name as query parameters\r\n  //   const mentorId = mentorprofiledetails1.id;\r\n  //   const mentorName = `${mentorprofiledetails1.firstName} ${mentorprofiledetails1.lastName}`;\r\n  //   const role = mentorprofiledetails1.role;\r\n  //   const url2 = `/app/calendar?mentorId=${mentorId}&mentorName=${mentorName}&role=${role}`;\r\n\r\n  //   // Navigate to the Month component with the mentor's ID and name as query parameters\r\n  //   history.push(url2);\r\n  // };\r\n  const handleConnectClick = () => {\r\n    // Destructure the properties from mentorprofiledetails1\r\n    const { id: mentorId, firstName, lastName, role } = mentorprofiledetails1;\r\n    console.log(\"Role:\", role);\r\n\r\n    // Construct the mentorName using destructured values\r\n    const mentorName = `${firstName} ${lastName}`;\r\n\r\n    // Construct the URL with mentor's ID and name as query parameters\r\n    const url2 = `/app/calendar?mentorId=${mentorId}&mentorName=${mentorName}&role=${role}`;\r\n\r\n    // Navigate to the Month component with the mentor's ID and name as query parameters\r\n    history.push(url2);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // const mentorProfileDetails = async () => {\r\n\r\n    //   try {\r\n    //     const response = await axios.get(url);\r\n    //     setMentorProfileDetails(response.data);\r\n    //   } catch (error) {\r\n    //     console.error('Error fetching data:', error);\r\n    //   }\r\n    // };\r\n    // mentorProfileDetails();\r\n    const mentorReviews = async () => {\r\n      try {\r\n        const response = await axios.get(ratingUrl);\r\n        setReviews(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    mentorReviews();\r\n\r\n    const mentorProfile = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await axios.get(url1);\r\n        setMentorProfileDetails1(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    mentorProfile();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (showAll && skillsSectionRef.current) {\r\n      skillsSectionRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [showAll]);\r\n\r\n  const remainingSkillsCount = mentorprofiledetails1.skills\r\n    ? mentorprofiledetails1.skills.length - 3\r\n    : 0;\r\n  // const handleLinkedInClick = () => {\r\n  //   // Assuming mentorprofiledetails1 contains the LinkedIn URL of the mentor\r\n  //   const linkedInUrl = mentorprofiledetails1.linkedinUrl;\r\n\r\n  //   // Open the mentor's LinkedIn profile in a new tab/window\r\n  //   window.open(linkedInUrl, \"_blank\");\r\n  // };\r\n  const countryName = country.find(\r\n    (c) => c.iso_code === mentorprofiledetails1.location\r\n  )?.name;\r\n  const chatUserId = mentorprofiledetails1.username;\r\n  const videoUrl = mentorprofiledetails1.introVideo;\r\n  let thumbnailUrl = \"\";\r\n  if (videoUrl) {\r\n    const regex =\r\n      /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?/\\s]{11})/;\r\n    const match = videoUrl.match(regex);\r\n    if (match && match[1]) {\r\n      const videoID = match[1];\r\n      thumbnailUrl = `https://img.youtube.com/vi/${videoID}/0.jpg`;\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"mentor-profile\">\r\n      {loading ? (\r\n        <div className=\"loading\" />\r\n      ) : (\r\n        <div className=\"\">\r\n          <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"\">\r\n            <div className=\"\">\r\n              <Row className=\"h-100\">\r\n                <div className=\"w-100 py-3 position-relative bg-primary d-flex justify-content-between align-items-center\">\r\n                  <div className=\"d-flex align-items-center \">\r\n                    {mentorprofiledetails1.imageUrl == null ? (\r\n                      <div\r\n                        style={{\r\n                          width: \"110px\",\r\n                          height: \"110px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                        className=\"mx-2 rounded-circle border img-thumbnail\"\r\n                      >\r\n                        <ThumbnailLetters\r\n                          rounded\r\n                          small\r\n                          text={mentorprofiledetails1.firstName}\r\n                          // className=\"border border-1 mx-2\"\r\n                          className=\"w-100 h-100\"\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <img\r\n                        src={`${baseUrl}/${mentorprofiledetails1.imageUrl}`}\r\n                        // className=' col-2 mx-2 w-60 rounded-circle img-thumbnail border'\r\n                        className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                        alt=\"\"\r\n                        style={{\r\n                          width: \"110px\",\r\n                          height: \"110px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                      />\r\n                    )}\r\n\r\n                    <Button\r\n                      color=\"light\"\r\n                      className=\" font-weight-semibold mx-2\"\r\n                      size=\"large\"\r\n                      style={{ cursor: \"default\" }}\r\n                    >\r\n                      <span\r\n                        className=\"font-weight-semibold text-one\"\r\n                        style={{ cursor: \"default\" }}\r\n                      >\r\n                        <i className=\"iconsminds-thunder text-primary\" />\r\n                        {mentorprofiledetails1.achievement}\r\n                      </span>\r\n                    </Button>\r\n\r\n                    {/* <img  src={`${baseUrl}/api/public/images/${mid}/profile-pic`} className=' col-2 mx-2 w-60 rounded-circle\r\n              img-thumbnail border    ' alt=\"\" /> */}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-sm-5 mt-4 \">\r\n                  <h1 className=\"font-weight-semibold text-xlarge\">\r\n                    {mentorprofiledetails1.firstName}{\" \"}\r\n                    {mentorprofiledetails1.lastName}\r\n                  </h1>\r\n                  {/* <h1 className='font-weight-semibold text-xlarge'>{mentorprofiledetails1.firstName} {mentorprofiledetails1.lastName}</h1> */}\r\n                  <h3 className=\"text-large  text-muted  \">\r\n                    {mentorprofiledetails1.jobTitle}\r\n                  </h3>\r\n                  <h2 className=\"text-one  text-primary\">\r\n                    {mentorprofiledetails1.company}\r\n                  </h2>\r\n                  <p className=\"text-one font-weight-medium text-primary\">\r\n                    {mentorprofiledetails1.bio}\r\n                  </p>\r\n\r\n                  <h5 className=\"font-weight-medium\">\r\n                    <i className=\"simple-icon-location-pin text-primary\" />\r\n                    <span className=\"ml-2\">{countryName}</span>\r\n                  </h5>\r\n                  {/* <h6 className=''><i className='simple-icon-star text-primary '/><span className='ml-2'>{mentorprofiledetails1.star} ({mentorprofiledetails1.ratings} reviews)</span></h6> */}\r\n                  <h6 className=\"\">\r\n                    <i className=\"simple-icon-star text-primary \" />\r\n                    <span className=\"ml-2\">\r\n                      {reviews.averageStar} ({reviews.totalRatings} reviews)\r\n                    </span>\r\n                  </h6>\r\n                  {/* <h6 className=''><i className='simple-icon-clock text-primary'/><span className='ml-2'>Last Seen</span></h6> */}\r\n                </div>\r\n\r\n                <div className=\"col-sm-7 mt-4\">\r\n                  <h2 className=\"mx-2\">Skills</h2>\r\n\r\n                  {/* <div className='d-flex'>\r\n              {mentorprofiledetails.skills&&mentorprofiledetails.skills.map((skill)=>{\r\n               \r\n                \r\n               return (\r\n               \r\n\r\n                <div  key={skill}>\r\n                <Button color=\"light\" className=\"mb-2 font-weight-semibold mx-2\" size='xs'>\r\n                {skill}\r\n              </Button>\r\n                </div>\r\n               )\r\n              })}\r\n            </div> */}\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <div className=\"d-flex\">\r\n                      {mentorprofiledetails1.skills &&\r\n                        mentorprofiledetails1.skills\r\n                          .slice(0, 3)\r\n                          .map((skill) => (\r\n                            <div key={skill}>\r\n                              <Button\r\n                                color=\"light\"\r\n                                className=\"mb-2 font-weight-semibold mx-2\"\r\n                                size=\"xs\"\r\n                              >\r\n                                {skill}\r\n                              </Button>\r\n                            </div>\r\n                          ))}\r\n                    </div>\r\n                    {mentorprofiledetails1.skills &&\r\n                      mentorprofiledetails1.skills.length > 3 && (\r\n                        <div className=\"\">\r\n                          <Button\r\n                            color=\"link\"\r\n                            className=\"text-one font-weight-bold \"\r\n                            style={{ textDecoration: \"underline\" }}\r\n                            onClick={toggleShowAll}\r\n                          >\r\n                            + {remainingSkillsCount}more\r\n                          </Button>\r\n                        </div>\r\n                      )}\r\n                  </div>\r\n                  {/* <div className='mt-2'>\r\n            <h2 className='mx-2'>Topics</h2>\r\n              <Button color=\"light\" className=\"mb-2 font-weight-semibold mx-2\" size='xs'>\r\n                Change jobs\r\n              </Button>\r\n              <Button color=\"light\" className=\"mb-2 font-weight-semibold mx-2\" size='xs'>\r\n                Learn a new Skill\r\n              </Button>\r\n              <Button color=\"light\" className=\"mb-2 font-weight-semibold mx-2\" size='xs'>\r\n                Grow your career\r\n              </Button>\r\n            </div> */}\r\n                  {/* <div className='mt-2 '>\r\n            <NavLink className=''  onClick={handleConnectClick}>\r\n              <Button outline color=\"primary\" className=\" font-weight-semibold mx-2 \" size='large'>\r\n                <span className='font-weight-semibold  text-one'>Connect</span>\r\n                <i className='simple-icon-social-linkedin text-primary font-weight-semibold text-one  '/>\r\n              </Button>\r\n              </NavLink>\r\n            </div> */}\r\n                  <MentorTabCard\r\n                    handleConnectClick={handleConnectClick}\r\n                    chatUserId={chatUserId}\r\n                    price={mentorprofiledetails1.price}\r\n                  />\r\n                </div>\r\n              </Row>\r\n              <hr />\r\n              <Colxx className='sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" mt-5'>\r\n                <Row>\r\n                  <div className=\"w-100 \">\r\n                    <h1 className=\"font-weight-semibold text-large\">About</h1>\r\n\r\n                    <p className=\"text-one font-weight-medium \">\r\n                      {mentorprofiledetails1.bio}\r\n                    </p>\r\n                  </div>\r\n                </Row>\r\n                <hr />\r\n                {(mentorprofiledetails1.featuredArticle ||\r\n                  mentorprofiledetails1.introVideo) && (\r\n                  // <Colxx className='sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" mt-5'>\r\n                  <Row>\r\n                    <div>\r\n                      <h1>\r\n                        Get to know {mentorprofiledetails1.firstName}{\" \"}\r\n                        {mentorprofiledetails1.lastName}\r\n                      </h1>\r\n                    </div>\r\n                    {/* <h3 className='font-weight-semibold text-large'>Get to Know Arun Prasad</h3> */}\r\n                  </Row>\r\n                )}\r\n                {/* </Colxx> */}\r\n                {/* <Colxx xxs=\"12\"> */}\r\n\r\n                <Row>\r\n                  {mentorprofiledetails1 &&\r\n                    mentorprofiledetails1.featuredArticle && (\r\n                      <Colxx xxs=\"12\" xs=\"12\" lg=\"4\" md=\"6\">\r\n                        <NavLink href={mentorprofiledetails1.featuredArticle}>\r\n                          <Card className=\"mb-4 \">\r\n                            {/* <div className=\"position-relative\">\r\n             <CardImg\r\n               top\r\n               src=\"/assets/img/profiles/2.jpg\"\r\n               alt=\"Card image cap\"\r\n             />\r\n            \r\n           </div> */}\r\n                            <CardBody>\r\n                              <h4 className=\"font-weight-semibold text-one text-center\">\r\n                                Featured Article\r\n                              </h4>\r\n                              <h4 className=\"color-theme-2 mt-4 text-center\">\r\n                                LINK\r\n                              </h4>\r\n                              {/* <CardSubtitle className=\"mb-4 text-one text-muted\">\r\n             Yeah, you read that right. Titles are not something which should\r\n              drive your decision to join a new company.\r\n             </CardSubtitle> */}\r\n                            </CardBody>\r\n                          </Card>\r\n                        </NavLink>\r\n                      </Colxx>\r\n                    )}\r\n                  {mentorprofiledetails1 &&\r\n                    mentorprofiledetails1.introVideo && (\r\n                      <Colxx xxs=\"12\" xs=\"12\" lg=\"4\" md=\"6\">\r\n                        <NavLink href={mentorprofiledetails1.introVideo}>\r\n                          <Card className=\"mb-4 w-80\">\r\n                            {thumbnailUrl && (\r\n                              <div className=\"position-relative\">\r\n                                <CardImg\r\n                                  top\r\n                                  src={thumbnailUrl}\r\n                                  alt=\"Card image cap\"\r\n                                  className=\"\"\r\n                                />\r\n                              </div>\r\n                            )}\r\n                            <CardBody>\r\n                              {!thumbnailUrl && (\r\n                                <h4 className=\"font-weight-semibold text-one text-center mb-4\">\r\n                                  Intro video\r\n                                </h4>\r\n                              )}\r\n                              <h4 className=\"color-theme-2  text-center\">\r\n                                VIDEO\r\n                              </h4>\r\n                              {/* <h4 className='font-weight-semibold text-one'>Concatenating Strings\r\n                 Mock Interview (Senior MAANG Engineer)\r\n                </h4>\r\n                <CardSubtitle className=\"mb-4 text-one text-muted\">\r\n                Dont leave your software engineering career to chance. \r\n                Sign up for Exponents SWE interview course today:Concatenating strings is …\r\n                </CardSubtitle> */}\r\n                            </CardBody>\r\n                          </Card>\r\n                        </NavLink>\r\n                      </Colxx>\r\n                    )}\r\n                  {/* <Colxx xxs=\"12\" xs=\"6\" lg=\"4\">\r\n            <Card className=\"mb-4\">\r\n              <CardBody>\r\n                <CardSubtitle className=\"mb-4\">\r\n                  Homemade Cheesecake with Fresh Berries and Mint\r\n                </CardSubtitle>\r\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\r\n                  09.04.2018\r\n                </CardText>\r\n              </CardBody>\r\n              <div className=\"position-relative\">\r\n                <CardImg\r\n                  bottom\r\n                  src=\"/assets/img/cards/thumb-1.jpg\"\r\n                  alt=\"Card image cap\"\r\n                />\r\n                <Badge\r\n                  color=\"primary\"\r\n                  pill\r\n                  className=\"position-absolute badge-top-left\"\r\n                >\r\n                  NEW\r\n                </Badge>\r\n                <Badge\r\n                  color=\"secondary\"\r\n                  pill\r\n                  className=\"position-absolute badge-top-left-2\"\r\n                >\r\n                  TRENDING\r\n                </Badge>\r\n              </div>\r\n            </Card>\r\n          </Colxx> */}\r\n                  {/* {showAll && (\r\n          <Colxx  lg={7} className=\"my-4\" id=\"skillsSection\">\r\n            <h1>Skills</h1>\r\n            <div className='d-flex flex-wrap '>\r\n              {mentorprofiledetails.skills && mentorprofiledetails.skills.map((skill) => (\r\n                <div key={skill}>\r\n              <Button color=\"light\" className=\"mb-2 font-weight-semibold mx-2\" size='md'>\r\n                {skill}\r\n              </Button>\r\n            </div>\r\n              ))}\r\n            </div>\r\n          </Colxx>\r\n        )} */}\r\n                  <div id=\"skillsSection\" />\r\n                  <Colxx lg={7} className=\"my-4\" ref={skillsSectionRef}>\r\n                    <Row>\r\n                      <h1 className=\"font-weight-semibold text-large\">\r\n                        Skills{\" \"}\r\n                      </h1>\r\n                    </Row>\r\n                    <Row>\r\n                      <div className=\"d-flex flex-wrap \">\r\n                        {mentorprofiledetails1.skills &&\r\n                          mentorprofiledetails1.skills.map((skill) => (\r\n                            <div key={skill}>\r\n                              <Button\r\n                                color=\"light\"\r\n                                className=\"mb-2 font-weight-semibold mr-2\"\r\n                                size=\"md\"\r\n                              >\r\n                                {skill}\r\n                              </Button>\r\n                            </div>\r\n                          ))}\r\n                      </div>\r\n                    </Row>\r\n                  </Colxx>\r\n                </Row>\r\n                {/* </Colxx> */}\r\n              </Colxx>\r\n            </div>\r\n          </Colxx>\r\n\r\n          <ReviewsComponent\r\n            category=\"mentorship\" // for lawyer profile \"law\"\r\n            revieweeId={mid}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MentorProfile;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Card, CardBody, NavLink, Row, Spinner } from \"reactstrap\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst quillModules = {\r\n  toolbar: [\r\n    // [{ header: [1, 2, false] }],\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    // [\"link\", \"image\"],\r\n    // [\"clean\"],\r\n  ],\r\n};\r\nconst quillFormats = [\r\n  \"header\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n];\r\n\r\nconst MentorAnswers = () => {\r\n  const { questionId } = useParams();\r\n  const history = useHistory();\r\n\r\n  // Backend url\r\n  const url1 = `${baseUrl}/api/mentee/multipleQuestions/${questionId}`;\r\n  const url = `${baseUrl}/api/mentorAnswers/${questionId}`;\r\n  const [answers, setAnswers] = useState([]);\r\n  const [answers1, setAnswers1] = useState([]);\r\n  const [editing, setEditing] = useState(false);\r\n  const [editedQuestion, setEditedQuestion] = useState(\"\");\r\n  const [editedAnswer1, setEditedAnswer1] = useState(\"\");\r\n  const [editStates, setEditStates] = useState({});\r\n  const [loadingStates, setLoadingStates] = useState({});\r\n  const [questionLoadingStates, setQuestionLoadingStates] = useState(false);\r\n\r\n  const [updateTrigger, setUpdateTrigger] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const isArrayOfLength = (value, length) => {\r\n    return Array.isArray(value) && value.length > length;\r\n  };\r\n\r\n  const [textQuillStandart, setTextQuillStandart] = useState(\"\");\r\n  const AnswersByMentors = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(url1);\r\n      setAnswers(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setLoading(false); // Set loading to false once data is fetched or error occurs\r\n    }\r\n  };\r\n  const AnswersByMentors1 = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(url);\r\n      setAnswers1(response.data);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    AnswersByMentors();\r\n    AnswersByMentors1();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleEdit = () => {\r\n    setEditedQuestion(answers.questionHeadingBrief);\r\n    setEditing(true);\r\n  };\r\n\r\n  function getRoleRes() {\r\n    return localStorage.getItem(\"roleRes\");\r\n  }\r\n  const roleRes = getRoleRes();\r\n  const userId = localStorage.getItem(\"userId\");\r\n\r\n  const handleSave = async () => {\r\n    setQuestionLoadingStates(true);\r\n    try {\r\n      // await axios.put(`${baseUrl}/multipleQuestions/${questionId}`,\r\n      const response = await axios.put(`${baseUrl}/api/mentee/question`, {\r\n        id: questionId,\r\n        questionHeading: answers.questionHeading,\r\n        questionHeadingBrief: editedQuestion,\r\n        views: answers.views, // Keep the views unchanged\r\n        time: answers.time, // Keep the time unchanged\r\n      });\r\n      setAnswers((prevAnswers) => ({\r\n        ...prevAnswers,\r\n        questionHeadingBrief: editedQuestion,\r\n      }));\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n    } catch (error) {\r\n      console.error(\"Error updating question:\", error);\r\n    }\r\n    setEditing(false);\r\n    setQuestionLoadingStates(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditedQuestion(\"\");\r\n    setEditing(false);\r\n  };\r\n\r\n  //   const handleEdit1 = (id) => {\r\n  //     const answerToUpdate = answers1.answer.find(answer => answer.id === id);\r\n  //     setEditedAnswer1(answerToUpdate.answerText); // Update the edited answer text\r\n  //     setEditStates(prevState => ({\r\n  //       ...prevState,\r\n  //       [id]: !prevState[id]\r\n  //     }));\r\n  //   };\r\n  // ;\r\n  const handleEdit1 = (id) => {\r\n    const answerToUpdate = answers1.answer.find((answer) => answer.id === id);\r\n    if (answerToUpdate) {\r\n      setEditedAnswer1(answerToUpdate.answered); // Use answered to initialize editedAnswer1\r\n      setEditStates((prevState) => ({\r\n        ...prevState,\r\n        [id]: true, // Set edit mode to true\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSave1 = async (id) => {\r\n    setLoadingStates((prev) => ({ ...prev, [id]: true }));\r\n    try {\r\n      const updatedAnswer = {\r\n        id,\r\n        answerText: editedAnswer1,\r\n      };\r\n\r\n      const response = await axios.put(\r\n        `${baseUrl}/api/mentor/answer`,\r\n        updatedAnswer\r\n      );\r\n\r\n      if (response.status === 201) {\r\n        // or 200, depending on your API\r\n        // Log the response to check if it contains the updated data\r\n        console.log(\"Server response:\", response.data);\r\n\r\n        // Update the local state with the data from the server\r\n        const updatedAnswers = answers1.answer.map((ans) =>\r\n          ans.id === id\r\n            ? { ...ans, answerText: response.data.answerText || editedAnswer1 }\r\n            : ans\r\n        );\r\n        setAnswers1((prevAnswers) => ({\r\n          ...prevAnswers,\r\n          answer: updatedAnswers,\r\n        }));\r\n\r\n        // Force a re-render\r\n        setUpdateTrigger((prev) => !prev);\r\n\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n\r\n        // Refresh the answers from the server\r\n        await AnswersByMentors1();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating answer:\", error);\r\n      ToasterComponent(\"error\", \"Failed to update answer. Please try again.\");\r\n    } finally {\r\n      setEditStates((prevState) => ({\r\n        ...prevState,\r\n        [id]: false,\r\n      }));\r\n      setLoadingStates((prev) => ({ ...prev, [id]: false }));\r\n    }\r\n  };\r\n\r\n  const handleCancel1 = (id) => {\r\n    setEditStates((prevState) => ({\r\n      ...prevState,\r\n      [id]: false,\r\n    }));\r\n  };\r\n\r\n  const handleDeleteAnswer = async (answerId) => {\r\n    setLoadingStates((prev) => ({ ...prev, [answerId]: true }));\r\n    try {\r\n      // Construct the URL for deleting the answer\r\n      // const deleteUrl = `${baseUrl}/mentorAnswers/${questionId}/answer/${answerId}`;\r\n      const deleteUrl = `${baseUrl}/api/mentor/${answerId}/answer`;\r\n\r\n      const response = await axios.delete(deleteUrl);\r\n\r\n      if (response.status === 200) {\r\n        NotificationManager.success(\r\n          `Answer successfully deleted`,\r\n          \"Success\",\r\n          3000\r\n        );\r\n        setAnswers1((prevState) => ({\r\n          ...prevState,\r\n          answer: prevState.answer.filter((answer) => answer.id !== answerId),\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting answer:\", error);\r\n    }\r\n    setLoadingStates((prev) => ({ ...prev, [answerId]: false }));\r\n  };\r\n  const handleDeleteQuestion = async () => {\r\n    setQuestionLoadingStates(true);\r\n    try {\r\n      const deleteUrl = `${baseUrl}/api/mentee/${questionId}/question`;\r\n\r\n      const response = await axios.delete(deleteUrl);\r\n      if (response.status === 200) {\r\n        NotificationManager.success(\r\n          `Question successfully deleted`,\r\n          \"Success\",\r\n          3000\r\n        );\r\n        // setAnswers1(prevState => ({\r\n        //   ...prevState,\r\n        //   question: prevState.question.filter(question => question.id !== questionsId)\r\n        // }));\r\n        history.push(\"/app/questions\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting question:\", error);\r\n    }\r\n    setQuestionLoadingStates(false);\r\n  };\r\n\r\n  const handlePostAnswer = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const doc = new DOMParser().parseFromString(\r\n        textQuillStandart,\r\n        \"text/html\"\r\n      );\r\n      const strippedAnswerText = doc.body.textContent || \"\";\r\n\r\n      await axios.post(`${baseUrl}/api/mentor/${questionId}/answer`, {\r\n        answerText: strippedAnswerText,\r\n      });\r\n      NotificationManager.success(\r\n        `Answer posted successfully`,\r\n        \"Success\",\r\n        3000\r\n      );\r\n    } catch (error) {\r\n      NotificationManager.error(`Error posting answer`, \"Error\", 3000);\r\n      console.error(\"Error posting answer:\", error);\r\n    }\r\n    try {\r\n      const updatedResponse = await axios.get(\r\n        `${baseUrl}/api/mentorAnswers/${questionId}`\r\n      );\r\n      setAnswers1(updatedResponse.data.answer);\r\n      await AnswersByMentors();\r\n      await AnswersByMentors1();\r\n      setTextQuillStandart(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error fecting answer:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAnswers1(answers1);\r\n  }, [answers1, editStates]);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n        <div className=\"form-group\">\r\n          {/*  Questions card starts */}\r\n          <Card className=\"mt-3\">\r\n            <CardBody>\r\n              <div className=\"d-flex justify-content-between\">\r\n                <h3 className=\"font-weight-semibold\">\r\n                  {answers.questionHeading}\r\n                </h3>\r\n                {/* {roleRes.includes(\"USER\") && ( */}\r\n                {+userId === answers.menteeUserId && (\r\n                  <div className=\"d-flex \">\r\n                    {editing ? (\r\n                      <>\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          onClick={handleSave}\r\n                          className=\"mr-2\"\r\n                        >\r\n                          {questionLoadingStates ? (\r\n                            <Spinner size=\"sm\" color=\"primary\" />\r\n                          ) : (\r\n                            \"Save\"\r\n                          )}\r\n                        </Button>\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          onClick={handleCancel}\r\n                          className=\"mr-2\"\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"mr-2\"\r\n                          onClick={handleEdit}\r\n                        >\r\n                          <i className=\"simple-icon-pencil\" />\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          onClick={handleDeleteQuestion}\r\n                        >\r\n                          {questionLoadingStates ? (\r\n                            <Spinner size=\"sm\" color=\"primary\" />\r\n                          ) : (\r\n                            <i className=\"simple-icon-trash\" />\r\n                          )}\r\n                        </Button>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                {/* )} */}\r\n              </div>\r\n\r\n              {editing ? (\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control my-2 py-2\"\r\n                  value={editedQuestion}\r\n                  onChange={(e) => setEditedQuestion(e.target.value)}\r\n                />\r\n              ) : (\r\n                <p className=\"text-one\">{answers.questionHeadingBrief}</p>\r\n              )}\r\n              {loading ? (\r\n                <div\r\n                  className=\"d-flex justify-content-center align-items-center\"\r\n                  style={{ height: \"100px\" }}\r\n                >\r\n                  <Spinner animation=\"border\" size=\"sm\" color=\"primary\" />\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <h6 className=\"text-muted\">\r\n                    Asked on {new Date(answers.time).toLocaleString()}\r\n                  </h6>\r\n                  <hr />\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <h6 className=\"font-weight-semibold\">\r\n                      {answers.views}\r\n                      <span className=\"text-muted\"> views</span>\r\n                    </h6>\r\n                    {/* <span className=\"text-one\">\r\n                  <i className=\"iconsminds-mail-inbox\" />\r\n                </span> */}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n\r\n          <div className=\"w-100\">\r\n            <NavLink href=\"/app/askquestions\">\r\n              <Button\r\n                color=\"primary\"\r\n                outline\r\n                block\r\n                className=\"default mt-3 mb-2 text-one py-3 w-100\"\r\n              >\r\n                Ask a Free Question\r\n              </Button>\r\n            </NavLink>\r\n          </div>\r\n\r\n          {/*  Questions  card ends  */}\r\n          {isArrayOfLength(answers1.answer, 0) && (\r\n            <div\r\n              className=\" mt-3 d-flex justify-content-between font-weight-medium\"\r\n              style={{ gap: \"16px\" }}\r\n            >\r\n              <h6 className=\"text-nowrap\">\r\n                Answers {answers1.answer && answers1.answer.length}\r\n              </h6>\r\n\r\n              {/* <h6>\r\n                Like the answers? Consult privately with the Mentor of your\r\n                choice\r\n              </h6> */}\r\n            </div>\r\n          )}\r\n          {/*  answer starts  */}\r\n\r\n          {/* {answers1.answer &&\r\n            answers1.answer.map((an) => {\r\n              return (\r\n                <Card key={updateTrigger} className=\"mt-3 \">\r\n                  <CardBody>\r\n                    <div className=\"d-flex w-100 justify-content-between\">\r\n                      <div className=\" \">\r\n                        <h3>{an.mentorName}</h3>\r\n                        <p className=\"text-one text-muted\">{an.mentorRole}</p>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {editStates[an.id] ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control py-2 my-2\"\r\n                        value={editedAnswer1}\r\n                        onChange={(e) => setEditedAnswer1(e.target.value)}\r\n                      />\r\n                    ) : (\r\n                      <p>{an.answered}</p>\r\n                    )}\r\n                    <p>Answered {an.answeredYear} years ago</p>\r\n\r\n                    <hr />\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <div>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          {+userId === an.mentorId && (\r\n                            <>\r\n                              {editStates[an.id] ? (\r\n                                <>\r\n                                  <Button\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    onClick={() => handleSave1(an.id)}\r\n                                    className=\"mr-2\"\r\n                                    disabled={loadingStates[an.id]}\r\n                                  >\r\n                                    {loadingStates[an.id] ? (\r\n                                      <Spinner size=\"sm\" color=\"primary\" />\r\n                                    ) : (\r\n                                      \"Save\"\r\n                                    )}\r\n                                  </Button>\r\n                                  <Button\r\n                                    className=\"mr-2\"\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    onClick={() => handleCancel1(an.id)}\r\n                                  >\r\n                                    Cancel\r\n                                  </Button>\r\n                                </>\r\n                              ) : (\r\n                                <>\r\n                                  <Button\r\n                                    className=\"mr-2\"\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    onClick={() => handleEdit1(an.id)}\r\n                                  >\r\n                                    <i className=\"simple-icon-pencil\" />\r\n                                  </Button>\r\n                                  <Button\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    onClick={() => handleDeleteAnswer(an.id)}\r\n                                  >\r\n                                    {loadingStates[an.id] ? (\r\n                                      <Spinner size=\"sm\" />\r\n                                    ) : (\r\n                                      <i className=\"simple-icon-trash\" />\r\n                                    )}\r\n                                  </Button>\r\n                                </>\r\n                              )}\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n              );\r\n            })} */}\r\n          {answers1.answer ? (\r\n            answers1.answer.map((an) => (\r\n              <Card key={updateTrigger} className=\"mt-3\">\r\n                <CardBody>\r\n                  <div className=\"d-flex w-100 justify-content-between\">\r\n                    <div>\r\n                      <h3>{an.mentorName}</h3>\r\n                      <p className=\"text-one text-muted\">{an.mentorRole}</p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {editStates[an.id] ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control py-2 my-2\"\r\n                      value={editedAnswer1}\r\n                      onChange={(e) => setEditedAnswer1(e.target.value)}\r\n                    />\r\n                  ) : (\r\n                    <p>{an.answered}</p>\r\n                  )}\r\n                  {/* <p>Answered {an.answeredYear} years ago</p> */}\r\n\r\n                  <hr />\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <div>\r\n                      <div className=\"d-flex align-items-center\">\r\n                        {+userId === an.mentorId && (\r\n                          <>\r\n                            {editStates[an.id] ? (\r\n                              <>\r\n                                <Button\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  onClick={() => handleSave1(an.id)}\r\n                                  className=\"mr-2\"\r\n                                  disabled={loadingStates[an.id]}\r\n                                >\r\n                                  {loadingStates[an.id] ? (\r\n                                    <Spinner\r\n                                      size=\"sm\"\r\n                                      animation=\"border\"\r\n                                      color=\"primary\"\r\n                                    />\r\n                                  ) : (\r\n                                    \"Save\"\r\n                                  )}\r\n                                </Button>\r\n                                <Button\r\n                                  className=\"mr-2\"\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  onClick={() => handleCancel1(an.id)}\r\n                                >\r\n                                  Cancel\r\n                                </Button>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <Button\r\n                                  className=\"mr-2\"\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  onClick={() => handleEdit1(an.id)}\r\n                                >\r\n                                  <i className=\"simple-icon-pencil\" />\r\n                                </Button>\r\n                                <Button\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  onClick={() => handleDeleteAnswer(an.id)}\r\n                                >\r\n                                  {loadingStates[an.id] ? (\r\n                                    <Spinner size=\"sm\" animation=\"border\" />\r\n                                  ) : (\r\n                                    <i className=\"simple-icon-trash\" />\r\n                                  )}\r\n                                </Button>\r\n                              </>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            ))\r\n          ) : (\r\n            <div\r\n              className=\"d-flex justify-content-center align-items-center\"\r\n              style={{ height: \"100px\" }}\r\n            >\r\n              <Spinner size=\"sm\" animation=\"border\" color=\"primary\" />\r\n            </div>\r\n          )}\r\n\r\n          {/*  answer ends  */}\r\n          {roleRes.includes(\"USER\") ? (\r\n            <></>\r\n          ) : (\r\n            <div className=\"mt-4\">\r\n              <h5 className=\"font-weight-semibold\">Your Answer</h5>\r\n              <Row className=\"mb-4\">\r\n                <Colxx xxs=\"12\">\r\n                  <ReactQuill\r\n                    theme=\"snow\"\r\n                    value={textQuillStandart}\r\n                    onChange={(val) => setTextQuillStandart(val)}\r\n                    modules={quillModules}\r\n                    formats={quillFormats}\r\n                  />\r\n                  <div>\r\n                    <Button\r\n                      className=\"mt-2\"\r\n                      szie=\"xs\"\r\n                      color=\"primary\"\r\n                      onClick={handlePostAnswer}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? \"Posting...\" : \"Post your answer\"}\r\n                    </Button>\r\n                  </div>\r\n                </Colxx>\r\n              </Row>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MentorAnswers;\r\n","import { Colxx } from 'components/common/CustomBootstrap';\r\nimport React,{useState} from 'react';\r\nimport {Button, Card, CardBody } from 'reactstrap';\r\n\r\nconst MentorConsult = () => {\r\n    const [inputkey,setInputKey]=useState('')\r\n    const [inputkey1,setInputKey1]=useState('')\r\n  return (\r\n    <div>\r\n        <Colxx  sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className='mx-auto '>\r\n         <Card>\r\n            <CardBody>\r\n             <h1 className='font-weight-semibold'>Chat with the mentor</h1>\r\n             <Card className='my-3 w-50'>\r\n                <CardBody>\r\n                    <h3>Mentor Name</h3>\r\n                    <h4>Mentor qualification</h4>\r\n                    <h4>Mentor role</h4>\r\n                    <h4>Mentor experience</h4>\r\n                </CardBody>\r\n             </Card>\r\n             <div>\r\n             <h3>Student Name</h3>\r\n             <div className='input-group my-3'>\r\n       <input\r\n            type=\"text\"\r\n            className=\"form-control  py-3\"\r\n            placeholder ='Enter student name'\r\n            value={inputkey}\r\n            onChange={(e) =>setInputKey(e.target.value)}\r\n          />\r\n         \r\n       </div>\r\n       <h3>Mobile Number</h3>\r\n             <div className='input-group my-3'>\r\n       <input\r\n            type=\"text\"\r\n            className=\"form-control   py-3\"\r\n            placeholder ='Enter mobile number'\r\n            value={inputkey1}\r\n            onChange={(e) =>setInputKey1(e.target.value)}\r\n          />\r\n         \r\n       </div>\r\n       <p className='text-muted'>A verification code will be sent to this number</p>\r\n             </div>\r\n             <Button color=\"primary\" outline size='lg' className=\" default\">\r\n              Continue\r\n              </Button>\r\n            </CardBody>\r\n         </Card>\r\n        </Colxx>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MentorConsult;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport CustomSelectInput from \"components/common/CustomSelectInput\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  // FormGroup,\r\n  //   Dropdown,\r\n  // DropdownToggle,\r\n  // DropdownItem,\r\n  // DropdownMenu,CustomInput,\r\n  FormGroup,\r\n  // Form,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  Row,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport DateRangePicker from \"../BigCalendar/DateRangePicker\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst MentorCreatedSlot = () => {\r\n  // const url=`${baseUrl}/mentorSlotAvailablity`;\r\n\r\n  // To change the url to backend uncomment the below line\r\n  const url = `${baseUrl}/api/calendar/appointment/mentor`;\r\n\r\n  const [mentoravailable, setMentorAvailable] = useState([]);\r\n  const [currentWeekStart, setCurrentWeekStart] = useState(new Date());\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  // const mentorName = searchParams.get('mentorName');\r\n  const mentorId = searchParams.get(\"mentorId\");\r\n  const history = useHistory();\r\n  // const redirectToSessionLists1 = () => {\r\n  //   // Redirect to the specified URL with the query parameter\r\n  //   history.push('/app/sessionmentor');\r\n  // };\r\n\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  // const [selectedDate, setSelectedDate] = useState('');\r\n  // const [selectedDates, setSelectedDates] = useState([]);\r\n  // const [dropdownBasicOpen, setDropdownBasicOpen] = useState(false);\r\n  // const [dropdownBasicOpen1, setDropdownBasicOpen1] = useState(false);\r\n  // const [dropdownBasicOpen2, setDropdownBasicOpen2] = useState(false);\r\n  // const [dropdownBasicOpen3, setDropdownBasicOpen3] = useState(false);\r\n  // const [dropdownBasicOpen4, setDropdownBasicOpen4] = useState(false);\r\n  // const [dropdownBasicOpen5, setDropdownBasicOpen5] = useState(false);\r\n  const [selectedHourDropdown, setSelectedHourDropdown] = useState(null); // Renamed state variable\r\n  const [selectedHourDropdown1, setSelectedHourDropdown1] = useState(null); // Renamed state variable\r\n  //  const [upcomingSessions] = useState([]);\r\n  const [minutedrop, setMinutedrop] = useState(null);\r\n  const [minutedrop1, setMinutedrop1] = useState(null);\r\n  const [modalSmall, setModalSmall] = useState(false);\r\n  const [selectedfromampm, setSelectedFromAmPm] = useState(null); // State for AM selection\r\n  const [selectedfromampm1, setSelectedFromAmPm1] = useState(null); // State for AM selection\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  function getRoleRes() {\r\n    return localStorage.getItem(\"roleRes\");\r\n  }\r\n  const roleRes = getRoleRes();\r\n\r\n  const redirectToSessionLists1 = () => {\r\n    // Redirect to the specified URL with the query parameter\r\n    history.push(\"/app/sessionmentor\");\r\n  };\r\n\r\n  // Function to get the start date of the current week\r\n  const getStartOfWeek = () => {\r\n    const currentDate = new Date();\r\n    const day = currentDate.getDay();\r\n    const diff = currentDate.getDate() - day + (day === 0 ? -6 : 1); // Adjust when day is Sunday\r\n    return new Date(currentDate.setDate(diff));\r\n  };\r\n\r\n  const fetchMentorSlotsCreate = async (fromTime, toTime) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${url}?&fromTime=${fromTime}&toTime=${toTime}`\r\n      );\r\n\r\n      const availability = response.data;\r\n      setMentorAvailable(availability);\r\n      // console.log(availability);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleOkButtonClick = async () => {\r\n    setLoading(true);\r\n    // Ensure selectedDate is not null\r\n    if (!selectedDate) {\r\n      console.error(\"Selected date is null\");\r\n      return;\r\n    }\r\n\r\n    // Convert selected date to UTC timestamp\r\n    const selectedDateTime = new Date(selectedDate);\r\n\r\n    // Set the hours and minutes for the selected date\r\n    const selectedHourFrom =\r\n      (selectedHourDropdown % 12) + (selectedfromampm === \"PM\" ? 12 : 0); // Adjust for PM\r\n    selectedDateTime.setHours(selectedHourFrom, minutedrop, 0, 0);\r\n    const fromTimeStamp = selectedDateTime.getTime(); // Get the UTC timestamp for 'from' time\r\n\r\n    // Calculate 'to' time\r\n    const toDateTime = new Date(selectedDateTime); // Create a new Date object based on 'from' time\r\n    const selectedHourTo =\r\n      (selectedHourDropdown1 % 12) + (selectedfromampm1 === \"PM\" ? 12 : 0); // Adjust for PM\r\n    toDateTime.setHours(selectedHourTo, minutedrop1, 0, 0); // Set the 'to' hour\r\n    const toTimeStamp = toDateTime.getTime(); // Get the UTC timestamp for 'to' time\r\n\r\n    // Create an object with the required structure\r\n    const slot = {\r\n      fromTimeStamp,\r\n      toTimeStamp,\r\n    };\r\n\r\n    // Make the POST request\r\n    try {\r\n      const response = await axios.post(url, [slot]);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      // console.log('Data saved successfully:', response.data);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      }\r\n      console.error(\"Error saving data:\", error);\r\n    }\r\n\r\n    setLoading(false);\r\n    setModalSmall(false);\r\n\r\n    // window.location.reload();\r\n    const startOfWeekTimestamp = new Date(currentWeekStart);\r\n    startOfWeekTimestamp.setHours(0, 0, 0, 0);\r\n    const endOfWeekTimestamp = new Date(currentWeekStart);\r\n    endOfWeekTimestamp.setDate(endOfWeekTimestamp.getDate() + 6);\r\n    endOfWeekTimestamp.setHours(23, 59, 59, 999);\r\n    fetchMentorSlotsCreate(\r\n      startOfWeekTimestamp.getTime(),\r\n      endOfWeekTimestamp.getTime()\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Set the time of currentWeekStart to 12:00 PM (noon)\r\n    const startOfWeekTimestamp = new Date(currentWeekStart);\r\n    startOfWeekTimestamp.setHours(0, 0, 0, 0);\r\n\r\n    // Set the time of endOfWeekTimestamp to 11:59 PM\r\n    const endOfWeekTimestamp = new Date(currentWeekStart);\r\n    endOfWeekTimestamp.setDate(endOfWeekTimestamp.getDate() + 6); // Set to end of week\r\n    endOfWeekTimestamp.setHours(23, 59, 59, 999);\r\n\r\n    const newUrl = `${window.location.origin}${\r\n      window.location.pathname\r\n    }?&fromTime=${startOfWeekTimestamp.getTime()}&toTime=${endOfWeekTimestamp.getTime()}`;\r\n    window.history.replaceState(null, \"\", newUrl);\r\n\r\n    fetchMentorSlotsCreate(\r\n      startOfWeekTimestamp.getTime(),\r\n      endOfWeekTimestamp.getTime()\r\n    );\r\n  }, [currentWeekStart, mentorId]);\r\n\r\n  useEffect(() => {\r\n    const startOfWeek = getStartOfWeek();\r\n    setCurrentWeekStart(startOfWeek);\r\n  }, []);\r\n\r\n  // const handleDropdownItemClick = (selectedHour) => {\r\n  //   // Handle the selected hour as needed\r\n  //   setSelectedHourDropdown(selectedHour);\r\n\r\n  //   console.log(`Selected hour: ${selectedHour}`);\r\n  //   // setSelectedHourDropdown(selectedHour);\r\n  // };\r\n  // const handleDropdownItemClick1 = (selectedMinute) => {\r\n  //   // Handle the selected minutes as needed\r\n  //   setMinutedrop(selectedMinute);\r\n  // //  setMinutedrop1(selectedMinute);\r\n  //   // console.log(`Selected minute: ${selectedMinute}`);\r\n  //   // setMinuteDrop(selectedMinute);\r\n  // };\r\n  // const handleDropdownItemClick2 = (selectedHour) => {\r\n  //   // Handle the selected hour as needed\r\n  //   setSelectedHourDropdown1(selectedHour)\r\n  //   // console.log(`Selected hour: ${selectedHour}`);\r\n  //   // setSelectedHourDropdown(selectedHour);\r\n  // };\r\n  // const handleDropdownItemClick3 = (selectedMinute) => {\r\n  //   // Handle the selected minutes as needed\r\n  //   setMinutedrop1(selectedMinute);\r\n  //   // console.log(`Selected minute: ${selectedMinute}`);\r\n  //   // setMinuteDrop(selectedMinute);\r\n  // };\r\n  // const handleDropdownItemClick4 = (selectedAmPmFrom) => {\r\n  //   // Handle the selected minutes as needed\r\n  //   setSelectedFromAmPm(selectedAmPmFrom);\r\n  //   // console.log(`Selected from AM/PM: ${selectedAmPmFrom}`);\r\n  //   // setMinuteDrop(selectedMinute);\r\n  // };\r\n  // const handleDropdownItemClick5 = (selectedAmPmTo) => {\r\n  //   // Handle the selected minutes as needed\r\n  //   setSelectedFromAmPm1(selectedAmPmTo);\r\n\r\n  //   // setMinuteDrop(selectedMinute);\r\n  // };\r\n  // const generateDropdownItems = () => {\r\n  //   const items = [];\r\n  //   for (let i = 1; i <= 12; i+=1) {\r\n  //     const formattedHour = i < 10 ? `0${i}` : i;\r\n  //     items.push(\r\n  //       <DropdownItem key={i} onClick={() => handleDropdownItemClick(i)} >\r\n  //         {formattedHour}\r\n  //       </DropdownItem>\r\n  //     );\r\n  //   }\r\n  //   return items;\r\n  // };\r\n  // const generateMinuteDropdownItems = () => {\r\n  //   const minutes = [0, 15, 30, 45];\r\n  //   const items = minutes.map((minute) => {\r\n  //     const formattedMinute = minute < 10 ? `0${minute}` : minute;\r\n  //     return (\r\n  //       <DropdownItem key={minute} onClick={() => handleDropdownItemClick1(minute)}>\r\n  //         {formattedMinute}\r\n  //       </DropdownItem>\r\n  //     );\r\n  //   });\r\n  //   return items;\r\n  // };\r\n  // const generateDropdownItems1 = () => {\r\n  //   const items = [];\r\n  //   for (let i = 1; i <= 12; i+=1) {\r\n  //     const formattedHour = i < 10 ? `0${i}` : i;\r\n  //     items.push(\r\n  //       <DropdownItem key={i} onClick={() => handleDropdownItemClick2(i)} >\r\n  //         {formattedHour}\r\n  //       </DropdownItem>\r\n  //     );\r\n  //   }\r\n  //   return items;\r\n  // };\r\n\r\n  // const generateMinuteDropdownItems1 = () => {\r\n  //   const minutes = [0, 15, 30, 45];\r\n  //   const items = minutes.map((minute) => {\r\n  //     const formattedMinute = minute < 10 ? `0${minute}` : minute;\r\n  //     return (\r\n  //       <DropdownItem key={minute} onClick={() => handleDropdownItemClick3(minute)}>\r\n  //         {formattedMinute}\r\n  //       </DropdownItem>\r\n  //     );\r\n  //   });\r\n  //   return items;\r\n  // };\r\n  // const generateAmPmDropdownItems = () => {\r\n  //   const amPmOptions = ['AM', 'PM'];\r\n  //   return amPmOptions.map((amPm) => (\r\n  //     <DropdownItem key={amPm} onClick={() => handleDropdownItemClick4(amPm)}>\r\n  //       {amPm}\r\n  //     </DropdownItem>\r\n  //   ));\r\n  // };\r\n  // const generateAmPmDropdownItems1 = () => {\r\n  //   const amPmOptions = ['AM', 'PM'];\r\n  //   return amPmOptions.map((amPm) => (\r\n  //     <DropdownItem key={amPm} onClick={() => handleDropdownItemClick5(amPm)}>\r\n  //       {amPm}\r\n  //     </DropdownItem>\r\n  //   ));\r\n  // };\r\n\r\n  // weeklist functions start\r\n  const handleDropdownItemClick = (selectedHour) => {\r\n    setSelectedHourDropdown(selectedHour.value);\r\n\r\n    console.log(`Selected hour: ${selectedHour.value}`);\r\n  };\r\n\r\n  const handleDropdownItemClick1 = (selectedMinute) => {\r\n    setMinutedrop(selectedMinute.value);\r\n  };\r\n\r\n  const handleDropdownItemClick2 = (selectedHour) => {\r\n    setSelectedHourDropdown1(selectedHour.value);\r\n  };\r\n  const handleDropdownItemClick3 = (selectedMinute) => {\r\n    setMinutedrop1(selectedMinute.value);\r\n  };\r\n\r\n  const handleDropdownItemClick4 = (selectedAmPmFrom) => {\r\n    setSelectedFromAmPm(selectedAmPmFrom.value);\r\n    console.log(`Selected from AM/PM: ${selectedAmPmFrom.value}`);\r\n  };\r\n  const handleDropdownItemClick5 = (selectedAmPmTo) => {\r\n    setSelectedFromAmPm1(selectedAmPmTo.value);\r\n    console.log(`Selected from AM/PM: ${selectedAmPmTo.value}`);\r\n  };\r\n  const generateDropdownItemsSelect = () => {\r\n    const items = [];\r\n    for (let i = 1; i <= 12; i += 1) {\r\n      const formattedHour = i < 10 ? `0${i}` : i;\r\n      items.push({ value: formattedHour, label: formattedHour });\r\n    }\r\n    return items;\r\n  };\r\n  const generateMinuteDropdownItems = () => {\r\n    const minutes = [0, 15, 30, 45];\r\n    const items = [];\r\n\r\n    minutes.forEach((minute) => {\r\n      const formattedMinute = minute < 10 ? `0${minute}` : `${minute}`;\r\n      items.push({ value: formattedMinute, label: formattedMinute });\r\n    });\r\n\r\n    return items;\r\n  };\r\n  const generateAmPmDropdownItems1 = () => {\r\n    const amPmOptions = [\"AM\", \"PM\"];\r\n    const items = [];\r\n\r\n    amPmOptions.forEach((amPm) => {\r\n      items.push({ value: amPm, label: amPm });\r\n    });\r\n\r\n    return items;\r\n  };\r\n  const generateDropdownItems1 = () => {\r\n    const items = [];\r\n    for (let i = 1; i <= 12; i += 1) {\r\n      const formattedHour = i < 10 ? `0${i}` : i;\r\n      items.push({ value: formattedHour, label: formattedHour });\r\n    }\r\n    return items;\r\n  };\r\n  const generateMinuteDropdownItems1 = () => {\r\n    const minutes = [0, 15, 30, 45];\r\n    const items = [];\r\n\r\n    minutes.forEach((minute) => {\r\n      const formattedMinute = minute < 10 ? `0${minute}` : `${minute}`;\r\n      items.push({ value: formattedMinute, label: formattedMinute });\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n  const generateAmPmDropdownItems = () => {\r\n    const amPmOptions = [\"AM\", \"PM\"];\r\n    const items = [];\r\n\r\n    amPmOptions.forEach((amPm) => {\r\n      items.push({ value: amPm, label: amPm });\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n  const goToPreviousWeek = () => {\r\n    const newStartDate = new Date(currentWeekStart);\r\n    newStartDate.setDate(newStartDate.getDate() - 7);\r\n    setCurrentWeekStart(newStartDate);\r\n  };\r\n\r\n  const goToNextWeek = () => {\r\n    const newStartDate = new Date(currentWeekStart);\r\n    newStartDate.setDate(newStartDate.getDate() + 7);\r\n    setCurrentWeekStart(newStartDate);\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    const monthNames = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    const month = monthNames[date.getMonth()];\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    return `${day}-${month}-${date.getFullYear()}`;\r\n  };\r\n  const getWeekDates = () => {\r\n    const weekDates = [];\r\n    const startDate = new Date(currentWeekStart);\r\n    for (let i = 0; i < 7; i += 1) {\r\n      const currentDate = new Date(startDate);\r\n      currentDate.setDate(startDate.getDate() + i);\r\n      weekDates.push(currentDate);\r\n    }\r\n    return weekDates;\r\n  };\r\n\r\n  const isPreviousWeekDisabled = () => {\r\n    // Disable the button if you're already in the current week\r\n    const today = new Date();\r\n    const currentWeekStartDate = new Date(today);\r\n    const day = today.getDay(); // Get the day of the week (0 = Sunday, 1 = Monday, ..., 6 = Saturday)\r\n\r\n    if (day === 0) {\r\n      // If today is Sunday, subtract 6 days to get the start of the current week\r\n      currentWeekStartDate.setDate(today.getDate() - 6);\r\n    } else {\r\n      // Otherwise, subtract the number of days from the current day to get the start of the current week\r\n      currentWeekStartDate.setDate(today.getDate() - (day - 1));\r\n    }\r\n\r\n    // Set hours, minutes, seconds, and milliseconds to zero\r\n    currentWeekStartDate.setHours(0, 0, 0, 0);\r\n\r\n    const storedWeekStart = new Date(currentWeekStart);\r\n    storedWeekStart.setHours(0, 0, 0, 0); // Set hours, minutes, seconds, and milliseconds to zero\r\n\r\n    const disabled =\r\n      currentWeekStartDate.getTime() === storedWeekStart.getTime();\r\n\r\n    return disabled;\r\n  };\r\n\r\n  const handleTimeSlotClick = (date) => {\r\n    setSelectedDate(date);\r\n\r\n    setModalSmall(true); // Optionally open the modal when a time slot is clicked\r\n  };\r\n\r\n  const handleAddSlotClick = (date) => {\r\n    setSelectedDate(date); // Set the selected date\r\n    setModalSmall(true); // Show the modal\r\n  };\r\n  const deleteMentorSlot = async (id, fromTime, toTime) => {\r\n    try {\r\n      await axios.delete(`${baseUrl}/api/calendar/delete/${id}`);\r\n      // Fetch the updated slots after deletion\r\n      await fetchMentorSlotsCreate(fromTime, toTime);\r\n    } catch (error) {\r\n      console.error(\"Error deleting slot:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSlotClick = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this slot?\")) {\r\n      // Use selected date and time from state\r\n      const selectedDateTime = new Date(selectedDate);\r\n\r\n      // Set the hours and minutes for the selected date\r\n      const selectedHourFrom =\r\n        (selectedHourDropdown % 12) + (selectedfromampm === \"PM\" ? 12 : 0); // Adjust for PM\r\n      selectedDateTime.setHours(selectedHourFrom, minutedrop, 0, 0);\r\n      const fromTime = selectedDateTime.getTime(); // Get the UTC timestamp for 'from' time\r\n\r\n      // Calculate 'to' time\r\n      const toDateTime = new Date(selectedDateTime); // Create a new Date object based on 'from' time\r\n      const selectedHourTo =\r\n        (selectedHourDropdown1 % 12) + (selectedfromampm1 === \"PM\" ? 12 : 0); // Adjust for PM\r\n      toDateTime.setHours(selectedHourTo, minutedrop1, 0, 0); // Set the 'to' hour\r\n      const toTime = toDateTime.getTime(); // Get the UTC timestamp for 'to' time\r\n\r\n      deleteMentorSlot(id, fromTime, toTime);\r\n    }\r\n  };\r\n\r\n  const handleCloseIconClick = (e, id) => {\r\n    e.stopPropagation();\r\n    handleDeleteSlotClick(id);\r\n  };\r\n\r\n  const selectData = generateDropdownItemsSelect();\r\n  const minutesSelectData = generateMinuteDropdownItems();\r\n  const toHoursSelectData = generateDropdownItems1();\r\n  const toMinutesSelectData = generateMinuteDropdownItems1();\r\n  const fromAmPmSelectData = generateAmPmDropdownItems();\r\n  const toAmPmSelectData = generateAmPmDropdownItems1();\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Colxx xxs=\"8\" className=\"mx-auto\">\r\n          {/* <h1 className='py-4 text-large'> {mentorName} availability</h1> */}\r\n          <h1 className=\"py-4 text-large\">My slots</h1>\r\n\r\n          <div className=\"font-weight-semibold d-flex justify-content-center align-items-center\">\r\n            <span\r\n              className=\"font-weight-semibold text-xlarge mr-2 cursor-pointer\"\r\n              style={{\r\n                cursor: isPreviousWeekDisabled() ? \"not-allowed\" : \"pointer\",\r\n                opacity: isPreviousWeekDisabled() ? 0.5 : 1, // Lower opacity for disabled state\r\n              }}\r\n              onClick={!isPreviousWeekDisabled() ? goToPreviousWeek : undefined}\r\n              onKeyDown={(e) => {\r\n                if (\r\n                  !isPreviousWeekDisabled() &&\r\n                  (e.key === \"Enter\" || e.key === \" \")\r\n                ) {\r\n                  goToPreviousWeek();\r\n                }\r\n              }}\r\n              role=\"button\"\r\n              tabIndex={!isPreviousWeekDisabled() ? 0 : -1}\r\n              aria-disabled={isPreviousWeekDisabled()}\r\n            >\r\n              {/* <i className='simple-icon-arrow-left' /> */}\r\n              <i\r\n                className={`simple-icon-arrow-left ${\r\n                  isPreviousWeekDisabled() ? \"disabled\" : \"\"\r\n                }`}\r\n              />\r\n            </span>\r\n\r\n            <div>\r\n              <h4 className=\" font-weight-semibold\">\r\n                {formatDate(currentWeekStart)} -{\" \"}\r\n                {formatDate(\r\n                  new Date(currentWeekStart.getTime() + 6 * 24 * 60 * 60 * 1000)\r\n                )}\r\n              </h4>\r\n            </div>\r\n            <span\r\n              className=\"ml-2 font-weight-semibold text-xlarge\"\r\n              role=\"button\"\r\n              tabIndex={0}\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={goToNextWeek}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\" || e.key === \" \") {\r\n                  goToNextWeek();\r\n                }\r\n              }}\r\n            >\r\n              <i className=\"simple-icon-arrow-right\" />\r\n            </span>\r\n            {/* <Button className='ml-5 font-weight-semibold text-one' color=\"primary\" onClick={goToNextWeek} ><i className='simple-icon-arrow-right '/></Button> */}\r\n          </div>\r\n          <Card className=\"mb-4 mt-4\">\r\n            <CardBody>\r\n              <Table bordered>\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-one\">Date</th>\r\n                    <th className=\"text-center text-one\">Availablilty time</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {getWeekDates().map((date) => (\r\n                    <tr key={date.getTime()}>\r\n                      {/* <td>{getMonthName(date.getMonth())} {formatDate(date)}</td> */}\r\n                      <td> {formatDate(date)}</td>\r\n\r\n                      <td>\r\n                        {/*  new one */}\r\n\r\n                        {/* {mentoravailable.map((availability) => (\r\n  availability.availableSlots.map((avail) => {\r\n    const availDate = new Date(avail.fromTimeStamp);\r\n    if (availDate.toDateString() === date.toDateString()) {\r\n      const FromDate = new Date(avail.fromTimeStamp);\r\n      const ToDate = new Date(avail.toTimeStamp);\r\n      \r\n      const fromHours = FromDate.getHours() % 12 || 12; \r\n      const fromMinutes = String(FromDate.getMinutes()).padStart(2, '0');\r\n      const fromPeriod = FromDate.getHours() < 12 ? 'AM' : 'PM';\r\n      \r\n      const toHours = ToDate.getHours() % 12 || 12; \r\n      const toMinutes = String(ToDate.getMinutes()).padStart(2, '0');\r\n      const toPeriod = ToDate.getHours() < 12 ? 'AM' : 'PM';\r\n      \r\n      const fromTime = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n      const toTime = `${toHours}:${toMinutes} ${toPeriod}`;\r\n\r\n      const isPastTime = ToDate < new Date();\r\n\r\n      return (\r\n        <>\r\n         \r\n    \r\n          <div\r\n      key={date.getTime()}\r\n      role=\"button\" // Add role attribute for accessibility\r\n      tabIndex={0}   // Add tabIndex for keyboard accessibility\r\n      className={`text-center ${isPastTime ? 'cursor-not-allowed' : 'cursor-pointer'} py-2 mt-2`}\r\n      style={{ outline: `1px solid black`,cursor:\"pointer\" }} // Remove default focus outline if needed\r\n      onClick={() => handleTimeSlotClick(date)}\r\n      onKeyDown={(e) => {\r\n        if (e.key === 'Enter' || e.key === ' ') {\r\n          handleTimeSlotClick(date);\r\n        }\r\n      }}\r\n      onMouseEnter={(e) => { e.currentTarget.classList.add('bg-primary'); }}\r\n  onMouseLeave={(e) => { e.currentTarget.classList.remove('bg-primary'); }} \r\n    >\r\n      <span className='d-flex gap-5 justify-content-center align-items-center'> {fromTime} to {toTime} <i className='simple-icon-close ml-4'/></span> \r\n    </div>\r\n    <div className='mt-2 text-center mx-auto' key={`edit-${date.getTime()}`}>\r\n          <Button\r\n            size='sm'\r\n            className='text-center mx-auto my-4 '\r\n            onClick={()=>handleAddSlotClick(date)}\r\n            key={`edit-${date.getTime()}`}\r\n            outline\r\n            color=\"primary\"\r\n            block\r\n          >\r\n            +\r\n          </Button>\r\n        </div>\r\n        </>\r\n      );\r\n    }\r\n   \r\n   return  null;\r\n    \r\n  })\r\n \r\n \r\n))} */}\r\n                        {/* {date>=new Date()&&(\r\n  <>\r\n  {\r\n  mentoravailable.map((availability) => {\r\n    let hasSlotsForDay = false; // Flag to track if there are slots for the particular day\r\n\r\n    const slots = availability.availableSlots.map((avail) => {\r\n      const availDate = new Date(avail.fromTimeStamp);\r\n      if (availDate.toDateString() === date.toDateString()) {\r\n        hasSlotsForDay = true; // Set flag true if there's at least one slot for the day\r\n\r\n        const FromDate = new Date(avail.fromTimeStamp);\r\n        const ToDate = new Date(avail.toTimeStamp);\r\n        \r\n        const fromHours = FromDate.getHours() % 12 || 12; \r\n        const fromMinutes = String(FromDate.getMinutes()).padStart(2, '0');\r\n        const fromPeriod = FromDate.getHours() < 12 ? 'AM' : 'PM';\r\n        \r\n        const toHours = ToDate.getHours() % 12 || 12; \r\n        const toMinutes = String(ToDate.getMinutes()).padStart(2, '0');\r\n        const toPeriod = ToDate.getHours() < 12 ? 'AM' : 'PM';\r\n        \r\n        const fromTime = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n        const toTime = `${toHours}:${toMinutes} ${toPeriod}`;\r\n\r\n        const isPastTime = ToDate < new Date();\r\n\r\n        return (\r\n          <div\r\n            key={avail.fromTimeStamp} // Updated key to use timestamp to ensure it is unique\r\n            role=\"button\"\r\n            tabIndex={0}\r\n            className={`text-center ${isPastTime ? 'cursor-not-allowed' : 'cursor-pointer'} py-2 mt-2`}\r\n            style={{ outline: `1px solid black`, cursor: \"pointer\" }}\r\n            onClick={() => handleTimeSlotClick(avail.fromTimeStamp)}\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter' || e.key === ' ') {\r\n                handleTimeSlotClick(avail.fromTimeStamp);\r\n              }\r\n            }}\r\n            onMouseEnter={(e) => { e.currentTarget.classList.add('bg-primary'); }}\r\n            onMouseLeave={(e) => { e.currentTarget.classList.remove('bg-primary'); }}\r\n          >\r\n            <span className='d-flex gap-5 justify-content-center align-items-center'>\r\n              {fromTime} to {toTime} <i className='simple-icon-close ml-4'/>\r\n            </span> \r\n          </div>\r\n        );\r\n      }\r\n      return null;\r\n    });\r\n\r\n    // Add slot button only once per date\r\n    return (\r\n      <>\r\n        {slots}\r\n        {hasSlotsForDay && (\r\n          <div className='mt-2 text-center mx-auto' key={`add-slot-${date.getTime()}`}>\r\n            <Button\r\n              size='sm'\r\n              className='text-center mx-auto my-4'\r\n              onClick={() => handleAddSlotClick(date)}\r\n              outline\r\n              color=\"primary\"\r\n              block\r\n            >\r\n              +\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  })\r\n}\r\n{mentoravailable.every(availability => (\r\n        !availability.availableSlots.some(avail => new Date(avail.fromTimeStamp).toDateString() === date.toDateString())\r\n      ))  &&(\r\n        <div className='mt-2 text-center mx-auto' key={`edit-${date.getTime()}`}>\r\n          <Button\r\n            size='sm'\r\n            className='text-center mx-auto my-4 '\r\n            onClick={()=>handleAddSlotClick(date)}\r\n            key={`edit-${date.getTime()}`}\r\n            outline\r\n            color=\"primary\"\r\n            block\r\n          >\r\n            +\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n{mentoravailable.map((availability) => (\r\n  availability.bookedSlots.map((avail) => {\r\n    const availDate = new Date(avail.fromTimeStamp);\r\n    if (availDate.toDateString() === date.toDateString()) {\r\n      const FromDate = new Date(avail.fromTimeStamp);\r\n      const ToDate = new Date(avail.toTimeStamp);\r\n      \r\n      const fromHours = FromDate.getHours() % 12 || 12; \r\n      const fromMinutes = String(FromDate.getMinutes()).padStart(2, '0');\r\n      const fromPeriod = FromDate.getHours() < 12 ? 'AM' : 'PM';\r\n      \r\n      const toHours = ToDate.getHours() % 12 || 12; \r\n      const toMinutes = String(ToDate.getMinutes()).padStart(2, '0');\r\n      const toPeriod = ToDate.getHours() < 12 ? 'AM' : 'PM';\r\n      \r\n      const fromTime = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n      const toTime = `${toHours}:${toMinutes} ${toPeriod}`;\r\n\r\n      const isPastTime = ToDate < new Date();\r\n\r\n      return (\r\n        <>\r\n          \r\n\r\n    <div\r\n      key={date.getTime()}\r\n      role=\"button\" // Add role attribute for accessibility\r\n      tabIndex={0}   // Add tabIndex for keyboard accessibility\r\n      className={`text-center ${isPastTime ? 'cursor-not-allowed' : 'cursor-pointer'} bg-primary py-2 mt-2`}\r\n      style={{ outline: 'none'}} // Remove default focus outline if needed\r\n      // onClick={() => handleTimeSlotClick(date)}\r\n      onKeyDown={(e) => {\r\n        if (e.key === 'Enter' || e.key === ' ') {\r\n          handleTimeSlotClick(date);\r\n        }\r\n      }}\r\n    >\r\n      <span className='d-flex gap-5 justify-content-center align-items-center'> {fromTime} to {toTime}<i className='iconsminds-full-view-2 ml-4'/></span> \r\n    </div>\r\n    \r\n\r\n         \r\n        </>\r\n      );\r\n    }\r\n   \r\n  return null;\r\n  })\r\n))}\r\n  </>\r\n)} */}\r\n                        {mentoravailable.map((availability) => {\r\n                          let hasSlotsForDay = false; // Flag to track if there are slots for the particular day\r\n\r\n                          const slots = availability.availableSlots.map(\r\n                            (avail) => {\r\n                              const availDate = new Date(avail.fromTimeStamp);\r\n                              if (\r\n                                availDate.toDateString() === date.toDateString()\r\n                              ) {\r\n                                hasSlotsForDay = true; // Set flag true if there's at least one slot for the day\r\n\r\n                                const FromDate = new Date(avail.fromTimeStamp);\r\n                                const ToDate = new Date(avail.toTimeStamp);\r\n\r\n                                const fromHours =\r\n                                  FromDate.getHours() % 12 || 12;\r\n                                const fromMinutes = String(\r\n                                  FromDate.getMinutes()\r\n                                ).padStart(2, \"0\");\r\n                                const fromPeriod =\r\n                                  FromDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                                const toHours = ToDate.getHours() % 12 || 12;\r\n                                const toMinutes = String(\r\n                                  ToDate.getMinutes()\r\n                                ).padStart(2, \"0\");\r\n                                const toPeriod =\r\n                                  ToDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                                const fromTime = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n                                const toTime = `${toHours}:${toMinutes} ${toPeriod}`;\r\n\r\n                                const isPastTime = ToDate < new Date();\r\n\r\n                                return (\r\n                                  <div\r\n                                    key={avail.fromTimeStamp} // Updated key to use timestamp to ensure it is unique\r\n                                    role=\"button\"\r\n                                    tabIndex={0}\r\n                                    className={`text-center ${\r\n                                      isPastTime\r\n                                        ? \"cursor-not-allowed\"\r\n                                        : \"cursor-pointer\"\r\n                                    } py-2 mt-2`}\r\n                                    style={{\r\n                                      outline: `1px solid black`,\r\n                                      cursor: \"pointer\",\r\n                                    }}\r\n                                    onClick={() =>\r\n                                      handleTimeSlotClick(avail.fromTimeStamp)\r\n                                    }\r\n                                    onKeyDown={(e) => {\r\n                                      if (e.key === \"Enter\" || e.key === \" \") {\r\n                                        handleTimeSlotClick(\r\n                                          avail.fromTimeStamp\r\n                                        );\r\n                                      }\r\n                                    }}\r\n                                    onMouseEnter={(e) => {\r\n                                      e.currentTarget.classList.add(\r\n                                        \"bg-primary\"\r\n                                      );\r\n                                    }}\r\n                                    onMouseLeave={(e) => {\r\n                                      e.currentTarget.classList.remove(\r\n                                        \"bg-primary\"\r\n                                      );\r\n                                    }}\r\n                                  >\r\n                                    <span className=\"d-flex gap-5 justify-content-center align-items-center\">\r\n                                      {fromTime} to {toTime}\r\n                                      <i\r\n                                        className=\"simple-icon-close ml-4 text-one\"\r\n                                        role=\"button\"\r\n                                        tabIndex={0}\r\n                                        onClick={(e) =>\r\n                                          handleCloseIconClick(e, avail.id)\r\n                                        }\r\n                                        onKeyDown={(e) => {\r\n                                          if (\r\n                                            e.key === \"Enter\" ||\r\n                                            e.key === \" \"\r\n                                          ) {\r\n                                            handleCloseIconClick(e, avail.id);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    </span>\r\n                                  </div>\r\n                                );\r\n                              }\r\n                              return null;\r\n                            }\r\n                          );\r\n\r\n                          // Add slot button only once per date\r\n                          return (\r\n                            <>\r\n                              {slots}\r\n                              {hasSlotsForDay && (\r\n                                <div\r\n                                  className=\"mt-2 text-center mx-auto\"\r\n                                  key={`add-slot-${date.getTime()}`}\r\n                                >\r\n                                  <Button\r\n                                    size=\"sm\"\r\n                                    className=\"text-center mx-auto my-4\"\r\n                                    onClick={() => handleAddSlotClick(date)}\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    block\r\n                                    style={{ borderRadius: \"0px\" }}\r\n                                  >\r\n                                    +\r\n                                  </Button>\r\n                                </div>\r\n                              )}\r\n                            </>\r\n                          );\r\n                        })}\r\n                        {mentoravailable.every(\r\n                          (availability) =>\r\n                            !availability.availableSlots.some(\r\n                              (avail) =>\r\n                                new Date(avail.fromTimeStamp).toDateString() ===\r\n                                date.toDateString()\r\n                            )\r\n                        ) && (\r\n                          <div\r\n                            className=\"mt-2 text-center mx-auto\"\r\n                            key={`edit-${date.getTime()}`}\r\n                          >\r\n                            <Button\r\n                              size=\"sm\"\r\n                              className=\"text-center mx-auto my-4\"\r\n                              onClick={() => handleAddSlotClick(date)}\r\n                              key={`edit-${date.getTime()}`}\r\n                              outline\r\n                              color=\"primary\"\r\n                              block\r\n                              style={{ borderRadius: \"0px\" }}\r\n                            >\r\n                              +\r\n                            </Button>\r\n                          </div>\r\n                        )}\r\n\r\n                        {mentoravailable.map((availability) =>\r\n                          availability.bookedSlots.map((avail) => {\r\n                            const availDate = new Date(avail.fromTimeStamp);\r\n                            if (\r\n                              availDate.toDateString() === date.toDateString()\r\n                            ) {\r\n                              const FromDate = new Date(avail.fromTimeStamp);\r\n                              const ToDate = new Date(avail.toTimeStamp);\r\n\r\n                              const fromHours = FromDate.getHours() % 12 || 12;\r\n                              const fromMinutes = String(\r\n                                FromDate.getMinutes()\r\n                              ).padStart(2, \"0\");\r\n                              const fromPeriod =\r\n                                FromDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                              const toHours = ToDate.getHours() % 12 || 12;\r\n                              const toMinutes = String(\r\n                                ToDate.getMinutes()\r\n                              ).padStart(2, \"0\");\r\n                              const toPeriod =\r\n                                ToDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                              const fromTime = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n                              const toTime = `${toHours}:${toMinutes} ${toPeriod}`;\r\n\r\n                              const isPastTime = ToDate < new Date();\r\n\r\n                              return (\r\n                                <>\r\n                                  <div\r\n                                    key={date.getTime()}\r\n                                    role=\"button\" // Add role attribute for accessibility\r\n                                    tabIndex={0} // Add tabIndex for keyboard accessibility\r\n                                    className={`text-center ${\r\n                                      isPastTime\r\n                                        ? \"cursor-not-allowed\"\r\n                                        : \"cursor-pointer\"\r\n                                    } bg-primary py-2 mt-2`}\r\n                                    style={{ outline: \"none\" }} // Remove default focus outline if needed\r\n                                    // onClick={() => handleTimeSlotClick(date)}\r\n                                    onKeyDown={(e) => {\r\n                                      if (e.key === \"Enter\" || e.key === \" \") {\r\n                                        handleTimeSlotClick(date);\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    <span className=\"d-flex gap-5 justify-content-center align-items-center\">\r\n                                      {\" \"}\r\n                                      {fromTime} to {toTime}\r\n                                      <i className=\"iconsminds-full-view-2 ml-4\" />\r\n                                    </span>\r\n                                  </div>\r\n                                </>\r\n                              );\r\n                            }\r\n\r\n                            return null;\r\n                          })\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n\r\n              <div className=\"mb-4\">\r\n                <div>\r\n                  <div className=\"\">\r\n                    <Modal\r\n                      isOpen={modalSmall}\r\n                      toggle={() => setModalSmall(!modalSmall)}\r\n                      className=\"mt-5\"\r\n                    >\r\n                      <ModalBody>\r\n                        {/* <div className='text-right p-2'>\r\n                  \r\n                   <span style={{cursor:'pointer'}} \r\n            className='mt-2'\r\n            role='button'\r\n            tabIndex={0}\r\n            onClick={() => setModalSmall(false)}\r\n            onKeyDown={(e) => {\r\n                if (e.key === 'Enter' || e.key === ' ') {\r\n                    setModalSmall(false);\r\n                }\r\n            }}\r\n        >\r\n            <i className='simple-icon-close text-large' />\r\n        </span>\r\n          \r\n          <div>\r\n            <Form className='mt-4'>\r\n            <FormGroup row className=''>\r\n                  <Label  sm={2} className='font-weight-bold'>\r\n                    Date\r\n                  </Label>\r\n                  <Colxx sm={10}>\r\n                  <DateRangePicker  selectedDate={selectedDate} setSelectedDate={setSelectedDate}/>\r\n                  </Colxx>\r\n                </FormGroup>\r\n            <FormGroup row>\r\n                  <Label  sm={2} className='font-weight-bold'>\r\n                    From\r\n                  </Label>\r\n                  <Colxx sm={10}>\r\n                  <div>\r\n       <div className='d-flex '>\r\n    \r\n       <Dropdown direction=\"down\"\r\n  isOpen={dropdownBasicOpen}\r\n  toggle={() => setDropdownBasicOpen(!dropdownBasicOpen)}\r\n  className=\"mb-5  \"\r\n  \r\n \r\n>\r\n\r\n  <DropdownToggle caret color=\"primary\" outline className=''>\r\n    \r\n    \r\n    {selectedHourDropdown !== null ? selectedHourDropdown : 'Hours'} \r\n  </DropdownToggle>\r\n  <DropdownMenu className='' style={{ maxHeight: '200px', overflowY: 'auto'}}>\r\n  {generateDropdownItems()}\r\n  </DropdownMenu>\r\n</Dropdown>\r\n<Dropdown direction='down'\r\n            isOpen={dropdownBasicOpen1}\r\n            toggle={() => setDropdownBasicOpen1(!dropdownBasicOpen1)}\r\n            className=\"mb-5 ml-3\"\r\n           \r\n          >\r\n            <DropdownToggle caret color=\"primary\" outline>\r\n           \r\n              {minutedrop !== null ? minutedrop : 'Minutes'} \r\n   \r\n            </DropdownToggle>\r\n            <DropdownMenu style={{ maxHeight: '200px', overflowY: 'auto' }}>\r\n             {generateMinuteDropdownItems()}\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n          <Dropdown direction=\"down\"\r\n  isOpen={dropdownBasicOpen4}\r\n  toggle={() => setDropdownBasicOpen4(!dropdownBasicOpen4)}\r\n  className=\"mb-5 \"\r\n  \r\n \r\n>\r\n<DropdownToggle caret color=\"primary\" outline className='ml-3'>\r\n{selectedfromampm !==null ? selectedfromampm : 'AM /PM' }\r\n<DropdownMenu className=''>\r\n  { generateAmPmDropdownItems ()}\r\n  </DropdownMenu>\r\n</DropdownToggle>\r\n      \r\n  </Dropdown>\r\n       </div>\r\n     </div>\r\n                  </Colxx>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label  sm={2} className='font-weight-bold'>\r\n                    To\r\n                  </Label>\r\n                  <Colxx sm={10}>\r\n                  <div className=''>\r\n       \r\n       <div className='d-flex'>\r\n       <Dropdown direction=\"down\"\r\n  isOpen={dropdownBasicOpen2}\r\n  toggle={() => setDropdownBasicOpen2(!dropdownBasicOpen2)}\r\n  className=\"mb-5\"\r\n  \r\n \r\n>\r\n\r\n  <DropdownToggle caret color=\"primary\" outline className='' >\r\n    \r\n    \r\n    {selectedHourDropdown1 !== null ? selectedHourDropdown1 : 'Hours'} \r\n  </DropdownToggle>\r\n  <DropdownMenu className='' style={{ maxHeight: '200px', overflowY: 'auto'}}>\r\n  {generateDropdownItems1()}\r\n  </DropdownMenu>\r\n</Dropdown>\r\n<Dropdown direction='down'\r\n            isOpen={dropdownBasicOpen3}\r\n            toggle={() => setDropdownBasicOpen3(!dropdownBasicOpen3)}\r\n            className=\"mb-5 ml-3\"\r\n           \r\n          >\r\n            <DropdownToggle caret color=\"primary\" outline>\r\n           \r\n              {minutedrop1 !== null ? minutedrop1 : 'Minutes'} \r\n   \r\n            </DropdownToggle>\r\n            <DropdownMenu style={{ maxHeight: '200px', overflowY: 'auto' }}>\r\n             {generateMinuteDropdownItems1()}\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n          <Dropdown direction=\"down\"\r\n  isOpen={dropdownBasicOpen5}\r\n  toggle={() => setDropdownBasicOpen5(!dropdownBasicOpen5)}\r\n  className=\"mb-5 \"\r\n  \r\n \r\n>\r\n<DropdownToggle caret color=\"primary\" outline className='ml-3'>\r\n{selectedfromampm1 !==null ? selectedfromampm1 : 'AM /PM' }\r\n<DropdownMenu className=''>\r\n  { generateAmPmDropdownItems1 ()}\r\n  </DropdownMenu>\r\n</DropdownToggle>\r\n      \r\n  </Dropdown>\r\n       </div>\r\n       <Button onClick={handleOkButtonClick} color='primary'>OK</Button>\r\n     </div>\r\n                  </Colxx>\r\n                </FormGroup>\r\n            </Form>\r\n          </div>\r\n                 </div> */}\r\n\r\n                        <div className=\"\">\r\n                          <div>\r\n                            <span\r\n                              style={{ cursor: \"pointer\" }}\r\n                              className=\"mt-2\"\r\n                              role=\"button\"\r\n                              tabIndex={0}\r\n                              onClick={() => setModalSmall(false)}\r\n                              onKeyDown={(e) => {\r\n                                if (e.key === \"Enter\" || e.key === \" \") {\r\n                                  setModalSmall(false);\r\n                                }\r\n                              }}\r\n                            >\r\n                              <i className=\"simple-icon-close text-large\" />\r\n                            </span>\r\n\r\n                            <div>\r\n                              <Form className=\"mt-4\">\r\n                                <FormGroup row className=\"\">\r\n                                  <Label sm={2} className=\"font-weight-bold\">\r\n                                    Date\r\n                                  </Label>\r\n                                  <Colxx sm={10}>\r\n                                    <DateRangePicker\r\n                                      selectedDate={selectedDate}\r\n                                      setSelectedDate={setSelectedDate}\r\n                                    />\r\n                                  </Colxx>\r\n                                </FormGroup>\r\n                              </Form>\r\n                            </div>\r\n\r\n                            <Label className=\"text-one font-weight-bold\">\r\n                              From\r\n                            </Label>\r\n                            <Row>\r\n                              <Col md={4} sm={12} lg={4}>\r\n                                <div className=\"form-group has-float-label\">\r\n                                  <Label>Hours</Label>\r\n\r\n                                  <Select\r\n                                    components={{ Input: CustomSelectInput }}\r\n                                    className=\"react-select\"\r\n                                    classNamePrefix=\"react-select\"\r\n                                    name=\"form-field-name\"\r\n                                    value={generateDropdownItemsSelect().find(\r\n                                      (option) =>\r\n                                        option.value === selectedHourDropdown\r\n                                    )}\r\n                                    onChange={handleDropdownItemClick}\r\n                                    options={[\r\n                                      {\r\n                                        value: \"\",\r\n                                        label: \"Hours\",\r\n                                        isDisabled: true,\r\n                                      },\r\n                                      ...selectData,\r\n                                    ]}\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n                              <Col md={4} sm={12} lg={4}>\r\n                                <div className=\"form-group has-float-label\">\r\n                                  <Label>Minutes</Label>\r\n\r\n                                  <Select\r\n                                    components={{ Input: CustomSelectInput }}\r\n                                    className=\"react-select\"\r\n                                    classNamePrefix=\"react-select\"\r\n                                    name=\"form-field-name\"\r\n                                    value={generateMinuteDropdownItems().find(\r\n                                      (option) => option.value === minutedrop\r\n                                    )}\r\n                                    onChange={handleDropdownItemClick1}\r\n                                    options={[\r\n                                      {\r\n                                        value: \"\",\r\n                                        label: \"Minutes\",\r\n                                        isDisabled: true,\r\n                                      },\r\n                                      ...minutesSelectData,\r\n                                    ]}\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n                              <Col md={4} sm={12} lg={4}>\r\n                                <div className=\"form-group has-float-label\">\r\n                                  <Label>AM/PM</Label>\r\n\r\n                                  <Select\r\n                                    components={{ Input: CustomSelectInput }}\r\n                                    className=\"react-select\"\r\n                                    classNamePrefix=\"react-select\"\r\n                                    name=\"form-field-name\"\r\n                                    // value={selectedfromampm}\r\n                                    value={fromAmPmSelectData.find(\r\n                                      (option) =>\r\n                                        option.value === selectedfromampm\r\n                                    )}\r\n                                    onChange={handleDropdownItemClick4}\r\n                                    options={[\r\n                                      {\r\n                                        value: \"\",\r\n                                        label: \"AM/PM\",\r\n                                        isDisabled: true,\r\n                                      },\r\n                                      ...fromAmPmSelectData,\r\n                                    ]}\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n                            </Row>\r\n                          </div>\r\n\r\n                          <div className=\"\">\r\n                            <Label className=\"text-one font-weight-bold\">\r\n                              To\r\n                            </Label>\r\n                            <div className=\"\">\r\n                              <Row>\r\n                                <Col md={4} lg={4} sm={12}>\r\n                                  <div className=\"form-group has-float-label\">\r\n                                    <Label>Hours</Label>\r\n\r\n                                    <Select\r\n                                      components={{ Input: CustomSelectInput }}\r\n                                      className=\"react-select\"\r\n                                      classNamePrefix=\"react-select\"\r\n                                      name=\"form-field-name\"\r\n                                      value={generateDropdownItems1().find(\r\n                                        (option) =>\r\n                                          option.value === selectedHourDropdown1\r\n                                      )}\r\n                                      onChange={handleDropdownItemClick2}\r\n                                      options={[\r\n                                        {\r\n                                          value: \"\",\r\n                                          label: \"Hours\",\r\n                                          isDisabled: true,\r\n                                        },\r\n                                        ...toHoursSelectData,\r\n                                      ]}\r\n                                    />\r\n                                  </div>\r\n                                </Col>\r\n                                <Col md={4} lg={4} sm={12}>\r\n                                  <div className=\"form-group has-float-label\">\r\n                                    <Label>Minutes</Label>\r\n\r\n                                    <Select\r\n                                      components={{ Input: CustomSelectInput }}\r\n                                      className=\"react-select\"\r\n                                      classNamePrefix=\"react-select\"\r\n                                      name=\"form-field-name\"\r\n                                      value={generateMinuteDropdownItems1().find(\r\n                                        (option) =>\r\n                                          option.value === selectedHourDropdown1\r\n                                      )}\r\n                                      onChange={handleDropdownItemClick3}\r\n                                      options={[\r\n                                        {\r\n                                          value: \"\",\r\n                                          label: \"Minutes\",\r\n                                          isDisabled: true,\r\n                                        },\r\n                                        ...toMinutesSelectData,\r\n                                      ]}\r\n                                    />\r\n                                  </div>\r\n                                </Col>\r\n                                <Col md={4} lg={4} sm={12}>\r\n                                  <div>\r\n                                    <div className=\"form-group has-float-label\">\r\n                                      <Label>AM/PM</Label>\r\n\r\n                                      <Select\r\n                                        components={{\r\n                                          Input: CustomSelectInput,\r\n                                        }}\r\n                                        className=\"react-select\"\r\n                                        classNamePrefix=\"react-select\"\r\n                                        name=\"form-field-name\"\r\n                                        // value={selectedfromampm}\r\n                                        value={toAmPmSelectData.find(\r\n                                          (option) =>\r\n                                            option.value === selectedfromampm1\r\n                                        )}\r\n                                        onChange={handleDropdownItemClick5}\r\n                                        options={[\r\n                                          {\r\n                                            value: \"\",\r\n                                            label: \"AM/PM\",\r\n                                            isDisabled: true,\r\n                                          },\r\n                                          ...toAmPmSelectData,\r\n                                        ]}\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                </Col>\r\n                              </Row>\r\n                              <Row>\r\n                                <Col>\r\n                                  <div className=\"row justify-content-center\">\r\n                                    <Button\r\n                                      onClick={handleOkButtonClick}\r\n                                      className={`btn-shadow btn-multiple-state ${\r\n                                        loading ? \"show-spinner\" : \"\"\r\n                                      }`}\r\n                                      color=\"primary\"\r\n                                    >\r\n                                      <span className=\"spinner d-inline-block\">\r\n                                        <span className=\"bounce1\" />\r\n                                        <span className=\"bounce2\" />\r\n                                        <span className=\"bounce3\" />\r\n                                      </span>\r\n                                      <span className=\"label\">OK</span>\r\n                                    </Button>\r\n                                  </div>\r\n                                </Col>\r\n                              </Row>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* <PopupWizard selectedDate={selectedDate} setSelectedDate={setSelectedDate} \r\n        mentorName={mentorName} mentorId={mentorId} /> */}\r\n                      </ModalBody>\r\n                    </Modal>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n\r\n          <Card style={{ cursor: \"pointer\" }} className=\"my-2 text-center\">\r\n            <CardBody onClick={redirectToSessionLists1}>\r\n              {roleRes.includes(\"MENTOR\") ? (\r\n                <h5 className=\"font-weight-bold text-primary\">\r\n                  My Mentorship Sessions\r\n                </h5>\r\n              ) : (\r\n                <h5 className=\"font-weight-bold text-primary\">My Sessions</h5>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n          {/* <Button className='' onClick={redirectToSessionLists1}>My Sessions</Button> */}\r\n\r\n          {/* <PopupWizard/> */}\r\n        </Colxx>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MentorCreatedSlot;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CustomInput,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  NavLink,\r\n  Spinner,\r\n} from \"reactstrap\";\r\n\r\nconst FilterQuestions = () => {\r\n  const [isQuestionFetched, setIsQuestionFetched] = useState(false);\r\n  const [dropdownBasicOpen, setDropdownBasicOpen] = useState(false);\r\n  const [dropdownBasicOpen1, setDropdownBasicOpen1] = useState(false);\r\n\r\n  // Backend url below\r\n  const url = `${baseUrl}/api/questions`;\r\n\r\n  const [multiquestions, setMultiQuestions] = useState([]);\r\n  const [editing, setEditing] = useState(false);\r\n  const [editedQuestion, setEditedQuestion] = useState(\"\");\r\n  const [originalQuestions, setOriginalQuestions] = useState([]);\r\n  const [loadingStates, setLoadingStates] = useState({});\r\n  const [editStates, setEditStates] = useState({});\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [paginationMeta, setPaginationMeta] = useState([]);\r\n  const [inputkey, setInputKey] = useState(\"\");\r\n  const [selectedValue, setSelectedValue] = useState(\"Sort by\"); // Default value\r\n  const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n  const userId = localStorage.getItem(\"userId\");\r\n\r\n  // Handle dropdown item click\r\n  const handleSelect = (value) => {\r\n    setSelectedValue(value); // Update the selected value\r\n  };\r\n\r\n  const handleCategoryChange = (e) => {\r\n    const { id, checked } = e.target;\r\n    if (checked) {\r\n      setSelectedCategories([...selectedCategories, id]);\r\n    } else {\r\n      setSelectedCategories(\r\n        selectedCategories.filter((category) => category !== id)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleDeleteAnswer = async (questionId) => {\r\n    setLoadingStates((prev) => ({ ...prev, [questionId]: true }));\r\n    try {\r\n      const deleteUrl = `${baseUrl}/api/mentee/${questionId}/question`;\r\n\r\n      const response = await axios.delete(deleteUrl);\r\n\r\n      if (response.status === 200) {\r\n        NotificationManager.success(\r\n          `Question successfully deleted`,\r\n          \"Success\",\r\n          3000\r\n        );\r\n        // Update the state locally\r\n        setMultiQuestions((prevQuestions) =>\r\n          prevQuestions.filter((question) => question.id !== questionId)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting answer:\", error);\r\n      NotificationManager.error(\"Failed to delete question\", \"Error\", 3000);\r\n    }\r\n    setLoadingStates((prev) => ({ ...prev, [questionId]: false }));\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    const questionToEdit = multiquestions.find(\r\n      (question) => question.id === id\r\n    );\r\n    if (questionToEdit) {\r\n      setEditedQuestion(questionToEdit);\r\n      setEditStates((prevState) => ({\r\n        ...prevState,\r\n        [id]: true,\r\n      }));\r\n    }\r\n    setEditing(true);\r\n  };\r\n\r\n  // const handleSave = async () => {\r\n  //   try {\r\n  //     // await axios.put(`${baseUrl}/multipleQuestions/${questionId}`,\r\n  //     await axios.put(`${baseUrl}/api/mentee/question`, {\r\n  //       id: questionId,\r\n  //       questionHeading: answers.questionHeading,\r\n  //       questionHeadingBrief: editedQuestion,\r\n  //       views: answers.views, // Keep the views unchanged\r\n  //       time: answers.time, // Keep the time unchanged\r\n  //     });\r\n  //     setAnswers((prevAnswers) => ({\r\n  //       ...prevAnswers,\r\n  //       questionHeadingBrief: editedQuestion,\r\n  //     }));\r\n  //   } catch (error) {\r\n  //     console.error(\"Error updating question:\", error);\r\n  //   }\r\n  //   setEditing(false);\r\n  // };\r\n  const categories = [\r\n    { id: \"c1\", label: \"Category 1\" },\r\n    { id: \"c2\", label: \"Category 2\" },\r\n    { id: \"c3\", label: \"Category 3\" },\r\n    { id: \"c4\", label: \"Category 4\" },\r\n    { id: \"c5\", label: \"Category 5\" },\r\n  ];\r\n\r\n  const handleSave = async (id) => {\r\n    const questionToUpdate = multiquestions.find((q) => q.id === id);\r\n    if (!questionToUpdate) return;\r\n\r\n    setLoadingStates((prev) => ({ ...prev, [id]: true }));\r\n\r\n    try {\r\n      const response = await axios.put(`${baseUrl}/api/mentee/question`, {\r\n        id: questionToUpdate.id,\r\n        questionHeading: questionToUpdate.questionHeading,\r\n        questionHeadingBrief: questionToUpdate.questionHeadingBrief,\r\n        views: questionToUpdate.views,\r\n        time: questionToUpdate.time,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        // Update the original questions state\r\n        setOriginalQuestions((prevQuestions) =>\r\n          prevQuestions.map((q) => (q.id === id ? questionToUpdate : q))\r\n        );\r\n\r\n        // Update edit states\r\n        setEditStates((prevState) => ({\r\n          ...prevState,\r\n          [id]: false,\r\n        }));\r\n\r\n        setEditing(false);\r\n        setEditedQuestion(null);\r\n\r\n        NotificationManager.success(\r\n          \"Question successfully updated\",\r\n          \"Success\",\r\n          3000\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating question:\", error);\r\n      NotificationManager.error(\"Failed to update question\", \"Error\", 3000);\r\n    } finally {\r\n      setLoadingStates((prev) => ({ ...prev, [id]: false }));\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (editedQuestion) {\r\n      setMultiQuestions((prevQuestions) =>\r\n        prevQuestions.map((q) =>\r\n          q.id === editedQuestion.id\r\n            ? originalQuestions.find((oq) => oq.id === q.id)\r\n            : q\r\n        )\r\n      );\r\n      setEditStates((prevState) => ({\r\n        ...prevState,\r\n        [editedQuestion.id]: false,\r\n      }));\r\n    }\r\n    setEditing(false);\r\n    setEditedQuestion(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const FilterMultiQuestions = async () => {\r\n      const params = {};\r\n      if (inputkey) {\r\n        params.q = inputkey;\r\n      }\r\n      params.size = 10;\r\n      params.page = currentPage - 1;\r\n\r\n      // Add the sort parameter based on the selected dropdown option\r\n      if (selectedValue === \"Most liked\") {\r\n        params.sort = \"likes\";\r\n      } else if (selectedValue === \"Most Viewed\") {\r\n        params.sort = \"views\";\r\n      }\r\n\r\n      if (selectedCategories.length > 0) {\r\n        params.categories = selectedCategories.join(\",\"); // Join selected categories into a comma-separated string\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(url, { params });\r\n        setMultiQuestions(response.data.data);\r\n        setOriginalQuestions(response.data.data);\r\n        setPaginationMeta(response.data.paginationMeta);\r\n        setIsQuestionFetched(true);\r\n        console.log(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    FilterMultiQuestions();\r\n  }, [inputkey, currentPage, selectedValue, selectedCategories]);\r\n\r\n  return (\r\n    <div>\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n        <NavLink href=\"/app/askquestions\">\r\n          <Button\r\n            color=\"primary\"\r\n            outline\r\n            block\r\n            className=\"default mt-3 mb-2 text-one py-3 w-100\"\r\n          >\r\n            Ask a Free Question\r\n          </Button>\r\n        </NavLink>\r\n        <div className=\"input-group\">\r\n          <div\r\n            style={{ position: \"relative\" }}\r\n            className=\"col-12 col-lg-12 col-md-12\"\r\n          >\r\n            <i\r\n              className=\"simple-icon-magnifier mr-3\"\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"40%\",\r\n                right: \"15px\",\r\n                transform: \"translateY(-50%)\",\r\n                zIndex: 2,\r\n                color: \"#aaa\",\r\n              }}\r\n            />\r\n            {/* <input\r\n              type=\"text\"\r\n              className=\"form-control text-one py-3\"\r\n              placeholder=\"Search questions\"\r\n              value={inputkey}\r\n              onChange={(e) => setInputKey(e.target.value)}\r\n              style={{ paddingRight: \"2.5rem\" }}\r\n            /> */}\r\n\r\n            <InputGroup className=\"mb-3 \">\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <Dropdown\r\n                  isOpen={dropdownBasicOpen}\r\n                  toggle={() => setDropdownBasicOpen(!dropdownBasicOpen)}\r\n                  className=\" default\"\r\n                  style={{\r\n                    borderRadius: \"0px\",\r\n                    height: \"100%\",\r\n                  }}\r\n                >\r\n                  <DropdownToggle\r\n                    caret\r\n                    color=\"primary\"\r\n                    outline\r\n                    style={{\r\n                      borderRadius: \"0px\",\r\n                      height: \"100%\",\r\n                    }}\r\n                  >\r\n                    {/* Sort by */}\r\n                    {selectedValue}\r\n                  </DropdownToggle>\r\n                  <DropdownMenu>\r\n                    {/* <DropdownItem>Most liked</DropdownItem>\r\n                    <DropdownItem>Most Viewed</DropdownItem>\r\n                    <DropdownItem>Category</DropdownItem> */}\r\n                    <DropdownItem onClick={() => handleSelect(\"Most liked\")}>\r\n                      Most liked\r\n                    </DropdownItem>\r\n                    <DropdownItem onClick={() => handleSelect(\"Most Viewed\")}>\r\n                      Most Viewed\r\n                    </DropdownItem>\r\n                    {/* <DropdownItem onClick={() => handleSelect(\"Category\")}>\r\n                      Category\r\n                    </DropdownItem> */}\r\n                  </DropdownMenu>\r\n                </Dropdown>\r\n                {/* caategory filter */}\r\n                <Dropdown\r\n                  isOpen={dropdownBasicOpen1}\r\n                  toggle={() => setDropdownBasicOpen1(!dropdownBasicOpen1)}\r\n                  className=\" default\"\r\n                  style={{\r\n                    borderRadius: \"0px\",\r\n                    height: \"100%\",\r\n                  }}\r\n                >\r\n                  <DropdownToggle\r\n                    caret\r\n                    color=\"primary\"\r\n                    outline\r\n                    style={{\r\n                      borderRadius: \"0px\",\r\n                      height: \"100%\",\r\n                    }}\r\n                  >\r\n                    Category\r\n                  </DropdownToggle>\r\n                  <DropdownMenu>\r\n                    {categories.map((category) => (\r\n                      <CustomInput\r\n                        key={category.id}\r\n                        className=\"ml-2 \"\r\n                        type=\"checkbox\"\r\n                        id={category.id}\r\n                        label={category.label}\r\n                        onChange={handleCategoryChange}\r\n                      />\r\n                    ))}\r\n                  </DropdownMenu>\r\n                </Dropdown>\r\n              </InputGroupAddon>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control text-one py-3\"\r\n                placeholder=\"Search questions\"\r\n                value={inputkey}\r\n                onChange={(e) => setInputKey(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n          </div>\r\n        </div>\r\n        {!isQuestionFetched ? (\r\n          <div className=\"loading\" />\r\n        ) : (\r\n          <>\r\n            {multiquestions.length > 0 ? (\r\n              <Card className=\"my-3\">\r\n                <CardBody>\r\n                  <h1 className=\"font-weight-semibold\">\r\n                    Recently Answered Questions on topics\r\n                  </h1>\r\n                  <hr />\r\n                  {multiquestions.map((qs) => {\r\n                    const date = new Date(qs.time);\r\n                    return (\r\n                      <div key={qs.id}>\r\n                        {editStates[qs.id] ? (\r\n                          <>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control py-2 my-2\"\r\n                              value={qs.questionHeading}\r\n                              onChange={(e) => {\r\n                                const newValue = e.target.value;\r\n                                setMultiQuestions((prevQuestions) =>\r\n                                  prevQuestions.map((q) =>\r\n                                    q.id === qs.id\r\n                                      ? { ...q, questionHeading: newValue }\r\n                                      : q\r\n                                  )\r\n                                );\r\n                              }}\r\n                            />\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control py-2 my-2\"\r\n                              value={qs.questionHeadingBrief}\r\n                              onChange={(e) => {\r\n                                const newValue = e.target.value;\r\n                                setMultiQuestions((prevQuestions) =>\r\n                                  prevQuestions.map((q) =>\r\n                                    q.id === qs.id\r\n                                      ? { ...q, questionHeadingBrief: newValue }\r\n                                      : q\r\n                                  )\r\n                                );\r\n                              }}\r\n                            />\r\n                          </>\r\n                        ) : (\r\n                          <NavLink href={`/app/questions/${qs.id}`}>\r\n                            <h2 className=\"font-weight-medium\">\r\n                              {qs.questionHeading}\r\n                            </h2>\r\n                            <p>{qs.questionHeadingBrief}</p>\r\n                            <h6 className=\"text-muted\">{qs.views} views</h6>\r\n                            <h6 className=\"text-muted\">\r\n                              Asked on {date.toLocaleString()}\r\n                            </h6>\r\n                          </NavLink>\r\n                        )}\r\n                        {+userId === qs.menteeUserId && (\r\n                          <>\r\n                            {editing ? (\r\n                              <>\r\n                                <Button\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  onClick={() => handleSave(qs.id)}\r\n                                  className=\"mr-2\"\r\n                                  disabled={loadingStates[qs.id]}\r\n                                >\r\n                                  {loadingStates[qs.id] ? (\r\n                                    <Spinner size=\"sm\" color=\"primary\" />\r\n                                  ) : (\r\n                                    \"Save\"\r\n                                  )}\r\n                                </Button>\r\n                                <Button\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  onClick={handleCancel}\r\n                                  className=\"mr-2\"\r\n                                >\r\n                                  Cancel\r\n                                </Button>\r\n                              </>\r\n                            ) : (\r\n                              <div className=\"d-flex align-items-center justify-content-end\">\r\n                                <Button\r\n                                  className=\"mr-2\"\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  onClick={() => handleEdit(qs.id)}\r\n                                >\r\n                                  <i className=\"simple-icon-pencil\" />\r\n                                </Button>\r\n\r\n                                <Button\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  onClick={() => handleDeleteAnswer(qs.id)}\r\n                                >\r\n                                  {loadingStates[qs.id] ? (\r\n                                    <Spinner size=\"sm\" />\r\n                                  ) : (\r\n                                    <i className=\"simple-icon-trash\" />\r\n                                  )}\r\n                                </Button>\r\n                              </div>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                        <hr />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </CardBody>\r\n              </Card>\r\n            ) : (\r\n              <Card className=\"my-3\">\r\n                <CardBody>\r\n                  <h1 className=\"font-weight-semibold\">\r\n                    No Answered Questions Found\r\n                    <span className=\"ml-2\">\r\n                      <i className=\"simple-icon-ban\" />\r\n                    </span>\r\n                  </h1>\r\n                </CardBody>\r\n              </Card>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {isQuestionFetched && (\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            totalPage={paginationMeta.totalPage}\r\n            onChangePage={(i) => setCurrentPage(i)}\r\n            lastIsActive={paginationMeta.last}\r\n            firstIsActive={paginationMeta.first}\r\n          />\r\n        )}\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterQuestions;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Card, Row } from \"reactstrap\";\r\n\r\nconst quillModules = {\r\n  toolbar: [\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    // [\"link\", \"image\"],\r\n    // [\"clean\"],\r\n  ],\r\n};\r\nconst quillFormats = [\r\n  \"header\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n];\r\n\r\nconst AskQuestion = () => {\r\n  const [inputkey, setInputKey] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  // const [inputkey1,setInputKey1]=useState('')\r\n  const [textQuillStandart, setTextQuillStandart] = useState(\"\");\r\n  const history = useHistory();\r\n  const handleSubmit = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const doc = new DOMParser().parseFromString(\r\n        textQuillStandart,\r\n        \"text/html\"\r\n      );\r\n      const strippedAnswerText = doc.body.textContent || \"\";\r\n      const response = await axios.post(`${baseUrl}/api/mentee/question`, {\r\n        questionHeading: inputkey,\r\n        questionHeadingBrief: strippedAnswerText,\r\n      });\r\n      NotificationManager.success(\r\n        `Question posted successfully`,\r\n        \"Success\",\r\n        3000\r\n      );\r\n      if (response.status === 200) {\r\n        history.push(\"/app/questions\");\r\n      }\r\n      console.log(\"Response:\", response);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"font-weight-semibold\">Ask a public question</h1>\r\n      <Card className=\"mt-3\">\r\n        <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"mx-auto \">\r\n          <div className=\"mt-2\">\r\n            <h6 className=\"font-weight-semibold\">Title</h6>\r\n            <p className=\"text-muted\">\r\n              Be specific and imagine you are asking question to another person\r\n            </p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control shadow-none border-none  text-one font-weight-medium\"\r\n              placeholder=\"Type questions here\"\r\n              value={inputkey}\r\n              onChange={(e) => setInputKey(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mt-4\">\r\n            <h6 className=\"font-weight-semibold\">Body</h6>\r\n            <p className=\"text-muted\">\r\n              Include all the information would need to answer your question\r\n            </p>\r\n            <Row className=\"mb-4\">\r\n              <Colxx xxs=\"12\">\r\n                <ReactQuill\r\n                  theme=\"snow\"\r\n                  value={textQuillStandart}\r\n                  onChange={(val) => setTextQuillStandart(val)}\r\n                  modules={quillModules}\r\n                  formats={quillFormats}\r\n                />\r\n              </Colxx>\r\n            </Row>\r\n          </div>\r\n          {/* <div className='mt-2'>\r\n        <h6 className='font-weight-semibold'>Tags</h6>\r\n        <p className='text-muted'>Add up to 5 tags to decribe what your question is about</p>\r\n        <input\r\n            type=\"text\"\r\n            className=\"form-control shadow-none border-none  text-one font-weight-medium my-3\"\r\n            placeholder ='Type questions here'\r\n            value={inputkey1}\r\n            onChange={(e) =>setInputKey1(e.target.value)}\r\n          />\r\n       </div> */}\r\n        </Colxx>\r\n      </Card>\r\n      <div className=\"mt-3\">\r\n        <Button\r\n          color=\"primary \"\r\n          className=\"default  py-2 \"\r\n          onClick={handleSubmit}\r\n          disabled={loading}\r\n        >\r\n          {loading ? \"Posting...\" : \"Post your question\"}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AskQuestion;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Card, CardBody, NavLink, Row } from \"reactstrap\";\r\n\r\nconst MyQandA = () => {\r\n  const [myanswers, setMyAnswers] = useState(\"\");\r\n  const [answerPagination, setAnswerPagination] = useState(\"\");\r\n  const [myquestions, setMyQuestions] = useState(\"\");\r\n  const url = `${baseUrl}/api/mentor/myAnswers`;\r\n  const url1 = `${baseUrl}/api/mentee/myQuestions`;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentPage1, setCurrentPage1] = useState(1);\r\n  const [pagination, setPagination] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const MyAnswers = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${url}?_page=${currentPage1}&_limit=5`\r\n        );\r\n        setMyAnswers(response.data.data);\r\n        setAnswerPagination(response.data.paginationMeta);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    MyAnswers();\r\n    const MyQuestions = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${url1}?_page=${currentPage}&_size=3`\r\n        );\r\n        setMyQuestions(response.data.data);\r\n        setPagination(response.data.paginationMeta);\r\n        console.log(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    MyQuestions();\r\n  }, []);\r\n\r\n  function getRoleRes() {\r\n    return localStorage.getItem(\"roleRes\");\r\n  }\r\n\r\n  const roleRes = getRoleRes();\r\n\r\n  return (\r\n    <div>\r\n      <Colxx lg=\"8\" className=\"mx-auto\">\r\n        <Row>\r\n          {/* Pass myquestions array */}\r\n          <Colxx>\r\n            <h1 className=\"text-center text-large w-100 py-2\">\r\n              My questions and answers\r\n            </h1>\r\n            <div>\r\n              <div className=\"mt-2\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <h2 className=\"font-weight-semibold\">Questions</h2>\r\n                </div>\r\n\r\n                {myquestions && myquestions?.totalQuestions === 0 ? (\r\n                  <></>\r\n                ) : (\r\n                  <h3 className=\"my-2\">\r\n                    View all\r\n                    <span className=\"font-weight-bold px-1\">\r\n                      {myquestions.totalQuestions}\r\n                    </span>\r\n                    questions\r\n                  </h3>\r\n                )}\r\n              </div>\r\n              <div className=\"\">\r\n                <div className=\"\">\r\n                  {myquestions &&\r\n                  myquestions.questions &&\r\n                  myquestions.questions.length > 0 ? (\r\n                    myquestions.questions.map((qs) => {\r\n                      const qdate = new Date(qs.timestamp);\r\n                      const qsdateformat = `${qdate.getDate()}/${\r\n                        qdate.getMonth() + 1\r\n                      }/${qdate.getFullYear()}`;\r\n                      return (\r\n                        <Card key={qs.questionId} className=\"mb-3\">\r\n                          <NavLink\r\n                            href={`/app/questions/${qs.questionId}`}\r\n                            className=\"d-flex justify-content-between\"\r\n                          >\r\n                            <CardBody>\r\n                              <div className=\"d-flex justify-content-between\">\r\n                                <NavLink\r\n                                  href={`/app/questions/${qs.questionId}`}\r\n                                  className=\"d-flex justify-content-between\"\r\n                                >\r\n                                  <h3>{qs.question}</h3>\r\n                                </NavLink>\r\n                                <h3>{qsdateformat}</h3>\r\n                              </div>\r\n                            </CardBody>\r\n                          </NavLink>\r\n                        </Card>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <Card>\r\n                      <CardBody>\r\n                        <h3>No questions</h3>\r\n                      </CardBody>\r\n                    </Card>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Colxx>\r\n        </Row>\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPage={pagination.totalPage}\r\n          onChangePage={(i) => setCurrentPage(i)}\r\n          lastIsActive={pagination.last}\r\n          firstIsActive={pagination.first}\r\n        />\r\n        <div className=\"mt-5\" />\r\n        <hr />\r\n        {roleRes &&\r\n        (roleRes.includes(\"MENTOR\") ||\r\n          roleRes.includes(\"ALUMNI\") ||\r\n          roleRes.includes(\"LAWYER\")) ? (\r\n          <>\r\n            <Row>\r\n              <Colxx xxs=\"12\">\r\n                <div>\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <h2 className=\"font-weight-semibold\">Answers</h2>\r\n                    </div>\r\n\r\n                    {myanswers?.totalAnswers !== 0 ? (\r\n                      <h3 className=\"my-2\">\r\n                        View all\r\n                        <span className=\"font-weight-bold px-1\">\r\n                          {myanswers.totalAnswers}\r\n                        </span>\r\n                        answers\r\n                      </h3>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </div>\r\n                  {myanswers &&\r\n                  myanswers.questions &&\r\n                  myanswers.questions.length > 0 ? (\r\n                    myanswers.questions.map((qs) => {\r\n                      const qdate = new Date(qs.timestamp);\r\n                      const qsdateformat = `${qdate.getDate()}/${\r\n                        qdate.getMonth() + 1\r\n                      }/${qdate.getFullYear()}`;\r\n                      return (\r\n                        <Card key={qs.questionId} className=\"mb-3\">\r\n                          <NavLink\r\n                            href={`/app/questions/${qs.questionId}`}\r\n                            className=\"d-flex justify-content-between\"\r\n                          >\r\n                            <CardBody>\r\n                              <div className=\"d-flex justify-content-between\">\r\n                                <h3>{qs.question}</h3>\r\n                                <h3>{qsdateformat}</h3>\r\n                              </div>\r\n                            </CardBody>\r\n                          </NavLink>\r\n                        </Card>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <Card>\r\n                      <CardBody>\r\n                        <h3>No answers</h3>\r\n                      </CardBody>\r\n                    </Card>\r\n                  )}\r\n                </div>\r\n              </Colxx>\r\n            </Row>\r\n            <Pagination\r\n              currentPage={currentPage1}\r\n              totalPage={answerPagination.totalPage}\r\n              onChangePage={(i) => setCurrentPage1(i)}\r\n              lastIsActive={answerPagination.last}\r\n              firstIsActive={answerPagination.first}\r\n            />\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyQandA;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Label,\r\n  NavLink,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nconst MentorSessionList = () => {\r\n  // const { sessions } = location.state || {}; // Retrieve sessions from location state\r\n  const [session, setSession] = useState(\"\");\r\n  const [upcomingsession, setUpcomingSession] = useState(\"\");\r\n  const [sessionPagination, setSessionPagination] = useState(\"\");\r\n  const [showSuccessCard, setShowSuccessCard] = useState(false);\r\n  const [mentorName, setMentorName] = useState(\"\");\r\n\r\n  \r\n  const upcomingSessionsUrl = `${baseUrl}/api/calendar/user/upcoming-bookedslots`;\r\n  const sessionHistoryUrl = `${baseUrl}/api/calendar/user/session-history`;\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentPage1, setCurrentPage1] = useState(1);\r\n  const [pagination, setPagination] = useState(\"\");\r\n\r\n  \r\n  const location = useLocation();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleJoinCall = (userId, id) => {\r\n    const fullUrl = `/app/videocall/${userId}/${id}`;\r\n    history.push(fullUrl);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const SessionHistroy = async () => {\r\n      try {\r\n         const response = await axios.get(`${sessionHistoryUrl}?page=${currentPage1 -1}&size=10&role=MENTOR`);\r\n         setSession(response.data.data);\r\n         setSessionPagination(response.data.paginationMeta);\r\n      \r\n\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    \r\n    const SessionUpcomingHistroy = async () => {\r\n      try {\r\n        const response = await axios.get(`${upcomingSessionsUrl}?page=${currentPage -1}&size=10&role=MENTOR`);\r\n        setUpcomingSession(response.data.data );\r\n        setPagination(response.data.paginationMeta );\r\n      \r\n        const queryParams = new URLSearchParams(location.search);\r\n        const appointment = queryParams.get(\"appointment\");\r\n        // setShowSuccessCard(appointment === 'true');\r\n        if (\r\n          appointment === \"true\" &&\r\n          response.data.data.upcomingSessions.length > 0\r\n        ) {\r\n          setMentorName(response.data.data.upcomingSessions[0].name);\r\n          setShowSuccessCard(true);\r\n        } else {\r\n          setShowSuccessCard(false);\r\n        }\r\n        console.log(\"Upcoming Session Data:\", response);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    SessionHistroy();\r\n    SessionUpcomingHistroy();\r\n  }, [currentPage, currentPage1, location.search]);\r\n\r\n\r\n  // const [currentTime, setCurrentTime] = useState(new Date())\r\n  // useEffect(() => {\r\n  //   const intervalId = setInterval(() => {\r\n  //     setCurrentTime(new Date());\r\n  //   }, 30000);\r\n\r\n  //   return () => clearInterval(intervalId);\r\n  // }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Colxx sm=\"12\" md=\"12\" lg=\"7\" xxs=\"12\" className=\"mx-auto \">\r\n          {/* <Card className='my-2' >\r\n          <CardBody className='text-center'>\r\n          <span className='text-xlarge text-primary'><i className='simple-icon-check'/></span>\r\n           <h3 className='text-center'>You have successfully scheduled appointment with mentorName</h3>\r\n          </CardBody>\r\n        </Card> */}\r\n          {showSuccessCard && (\r\n            <Card className=\"my-2\">\r\n              <CardBody className=\"text-center\">\r\n                <span className=\"text-xlarge text-primary\">\r\n                  <i className=\"simple-icon-check\" />\r\n                </span>\r\n                <h3 className=\"text-center\">\r\n                  You have successfully scheduled appointment with {mentorName}\r\n                </h3>\r\n              </CardBody>\r\n            </Card>\r\n          )}\r\n          <div className=\"my-3\">\r\n            <h2 className=\"font-weight-medium\">Upcoming sessions</h2>\r\n\r\n            <div>\r\n              {/* <div  className=''>\r\n       {upcomingsession.upcomingSessions&&upcomingsession.upcomingSessions.map((up)=>{\r\n        const date=new Date(up.fromtimestamp);\r\n            const fromtime = new Date(up.fromtimestamp);\r\n            const totime=new Date(up.totimestamp);\r\n            const updateformat = `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\r\n            const timeOptions = { hour: '2-digit', minute: '2-digit' };\r\n          \r\n          return (\r\n            <div key={up.mentorId}>\r\n            <Card className='my-4'>\r\n        <Badge\r\n                  color=\"primary\"\r\n                  pill\r\n                  className=\"position-absolute badge-top-right\"\r\n                >\r\n                  NEW\r\n                </Badge>\r\n          \r\n          <CardBody className='d-flex justify-content-between' >\r\n                <div className='d-flex justify-content-between flex-column'>\r\n                <NavLink href={`/app/mentorprofile/${up.mentorId}`}>\r\n                <h4 className='text-large text-primary'>{up.name}</h4>\r\n                </NavLink>\r\n                <div className='d-flex'>\r\n                <Label className='text-one '>Date:</Label>\r\n                 <h4 className='ml-2  font-weight-bold'>{updateformat}</h4>\r\n                  </div>\r\n              \r\n                </div>\r\n                <div className='d-flex justify-content-around flex-column '>\r\n          \r\n                  <div className='d-flex justify-content-between'>\r\n                  <h4 className='mr-2'>From:</h4>\r\n                  <h4 className='mr-2 font-weight-bold'> {fromtime.toLocaleTimeString([], timeOptions)}</h4>\r\n                  <h4>to</h4>\r\n                  <h4 className=' font-weight-bold mx-2'>  {totime.toLocaleTimeString([],timeOptions)}</h4>\r\n                  </div>\r\n                  <div className='d-flex'>\r\n                  <Label className='text-one mr-2 '>Mode:</Label>\r\n                  <h4 className='font-weight-bold'>{up.mode}</h4>\r\n                  </div>\r\n                \r\n                      <Button outline color='primary' className='mt-2 text-one' onClick={() => handleJoinCall(up.name)}>Join Call</Button> \r\n              \r\n                 \r\n                </div>\r\n              </CardBody>\r\n        </Card>\r\n            </div>\r\n          )\r\n          \r\n        })\r\n        }\r\n        \r\n       </div> */}\r\n\r\n              <div className=\"\">\r\n                {\r\n                upcomingsession.length > 0 ? (\r\n                  upcomingsession.map((up) => {\r\n                    const date = new Date(up.fromTimeStamp);\r\n                    const fromtime = new Date(up.fromTimeStamp);\r\n                    const totime = new Date(up.toTimeStamp);\r\n                    const updateformat = `${date.getDate()}/${\r\n                      date.getMonth() + 1\r\n                    }/${date.getFullYear()}`;\r\n                    const timeOptions = { hour: \"2-digit\", minute: \"2-digit\" };\r\n\r\n                    // const isWithinFiveMinutes = (fromTimeStamp) => {\r\n                    //   const fiveMinutesInMs = 5 * 60 * 1000;\r\n                    //   // const currentTime = new Date().getTime();\r\n                    //   const fromTime = new Date(fromTimeStamp).getTime();\r\n                    //   const timeDiff = fromTime - currentTime;\r\n\r\n                    //   return timeDiff >= 0 && timeDiff <= fiveMinutesInMs;\r\n                    // };\r\n\r\n                    return (\r\n                      <div key={up.mentorId}>\r\n                        <Card className=\"my-4 \">\r\n                          <Badge\r\n                            color=\"primary\"\r\n                            pill\r\n                            className=\"position-absolute badge-top-right\"\r\n                          >\r\n                            NEW\r\n                          </Badge>\r\n\r\n                          <CardBody className=\"d-flex justify-content-between flex-wrap\">\r\n                            {/* <div className='d-flex justify-content-between flex-column'>\r\n                \r\n              <NavLink href={`/app/mentorprofile/${up.mentorId}`} className='d-flex align-items-center'>\r\n              <ThumbnailImage\r\n                rounded\r\n                small\r\n                src=\"/assets/img/profiles/l-1.jpg\"\r\n                alt=\"profile\"\r\n                className=\"text-start\"\r\n              />\r\n              <h4 className='text-large text-primary ml-2'>{up.name}</h4>\r\n            </NavLink>\r\n            <div className='d-flex align-items-center'>\r\n              <Label className='text-one mr-2'>Date:</Label>\r\n              <h4 className='font-weight-bold'>{updateformat}</h4>\r\n            </div>\r\n              </div> */}\r\n                            <Row className=\"\">\r\n                              <Col className=\"d-flex\">\r\n                                <NavLink\r\n                                  href={`/app/mentorprofile/${up.mentorId}`}\r\n                                  className=\"d-flex align-items-center\"\r\n                                >\r\n                                  {/* <ThumbnailImage\r\n                  rounded\r\n                  // src=\"/assets/img/profiles/l-1.jpg\"\r\n                  // src={`${baseUrl}/api/public/images/${up.mentorId}/profile-pic`}\r\n                \r\n                  src={`${baseUrl}/${up.imageUrl}`}\r\n                  alt=\"Card image cap\"\r\n                  className=\"m-4\"\r\n                /> */}{\" \"}\r\n                                  {up.imageUrl === null ? (\r\n                                    <ThumbnailLetters\r\n                                      rounded\r\n                                      text={up.name}\r\n                                      alt=\"Card image cap\"\r\n                                      className=\"m-4\"\r\n                                    />\r\n                                  ) : (\r\n                                    <img\r\n                                      style={{\r\n                                        height: \"140px\",\r\n                                        width: \"140px\",\r\n                                      }}\r\n                                      src={`${baseUrl}/${up.imageUrl}`}\r\n                                      alt=\"Card  cap\"\r\n                                      className=\"m-4 rounded-circle\"\r\n                                    />\r\n                                  )}\r\n                                  {/* <img\r\n                                    style={{ height: \"140px\", width: \"140px\" }}\r\n                                    src={`${baseUrl}/${up.imageUrl}`}\r\n                                    alt=\"Card  cap\"\r\n                                    className=\"m-4 rounded-circle\"\r\n                                  /> */}\r\n                                  <h4 className=\"text-large text-primary ml-2\">\r\n                                    {up.name}\r\n                                  </h4>\r\n                                </NavLink>\r\n                              </Col>\r\n                            </Row>\r\n\r\n                            <div className=\"d-flex justify-content-around flex-column \">\r\n                              <div className=\"d-flex \">\r\n                                <Label className=\"text-one mr-2\">Date:</Label>\r\n                                <h4 className=\"font-weight-bold \">\r\n                                  {updateformat}\r\n                                </h4>\r\n                              </div>\r\n                              <div className=\"d-flex justify-content-between\">\r\n                                <h4 className=\"mr-2\">From:</h4>\r\n                                <h4 className=\"mr-2 font-weight-bold\">\r\n                                  {fromtime.toLocaleTimeString([], timeOptions)}\r\n                                </h4>\r\n                                <h4>to</h4>\r\n                                <h4 className=\"font-weight-bold mx-2\">\r\n                                  {totime.toLocaleTimeString([], timeOptions)}\r\n                                </h4>\r\n                              </div>\r\n                              <div className=\"d-flex\">\r\n                                <Label className=\"text-one mr-2\">Mode:</Label>\r\n                                <h4 className=\"font-weight-bold\">{up.mode}</h4>\r\n                              </div>\r\n                              <Button\r\n                                outline\r\n                                color=\"primary\"\r\n                                className=\"mt-2 text-one \"\r\n                                onClick={() =>\r\n                                  handleJoinCall(up.mentorId, up.id)\r\n                                }\r\n                              >\r\n                                Join Call\r\n                              </Button>\r\n                            </div>\r\n                          </CardBody>\r\n                        </Card>\r\n                      </div>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <Card>\r\n                    <CardBody>\r\n                      <h3>No upcoming sessions</h3>\r\n                    </CardBody>\r\n                  </Card>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            totalPage={pagination.totalPage}\r\n            onChangePage={(i) => setCurrentPage(i)}\r\n            lastIsActive={pagination.last}\r\n            firstIsActive={pagination.first}\r\n          />\r\n          <div className=\"my-3 mt-4\">\r\n            <h2 className=\"font-weight-medium\">Session history</h2>\r\n            {/* <div>\r\n           {session.history&&session.history.map((sh)=>{\r\n            const date=new Date(sh.fromtimestamp);\r\n            const fromtime = new Date(sh.fromtimestamp);\r\n            const totime=new Date(sh.totimestamp);\r\n            const timeOptions = { hour: '2-digit', minute: '2-digit' };\r\n            const shdateformat = `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\r\n            return(\r\n              \r\n              <Card className='my-2 ' key={sh.mentorId}>\r\n              <CardBody className='d-flex justify-content-between' >\r\n                <div className='d-flex justify-content-between flex-column'>\r\n                <NavLink href={`/app/mentorprofile/${sh.mentorId}`}>\r\n                <h4 className='text-large text-primary'>{sh.name}</h4>\r\n                </NavLink>\r\n                 \r\n                \r\n                  <div className='d-flex'>\r\n                  <Label className='text-one'>Date:</Label>\r\n                  <h4 className='ml-2 font-weight-bold'>{shdateformat}</h4>\r\n                  </div>\r\n                 \r\n                </div>\r\n                <div className='d-flex justify-content-around flex-column '>\r\n                <div className='d-flex'>\r\n                  <Label className='text-one mr-2'>Duration:</Label>\r\n                  <h4 className='font-weight-bold'>{sh.duration}</h4>\r\n                </div>\r\n                 \r\n                  <div className='d-flex justify-content-between'>\r\n                  <div className='d-flex'>\r\n                  <h4 className=' mr-2'>From:</h4>\r\n                  <h4 className='font-weight-bold'>{fromtime.toLocaleTimeString([], timeOptions)}</h4>\r\n                  <h4 className='mx-2'>to</h4>\r\n                  <h4 className='font-weight-bold'>{totime.toLocaleTimeString([],timeOptions)}</h4>\r\n                </div>\r\n                 \r\n                  </div>\r\n                  <div className='d-flex'>\r\n                  <Label className='mr-2 text-one'>Mode:</Label>\r\n                  <h4 className='font-weight-bold '>{sh.mode}</h4>\r\n                  </div>\r\n          \r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n            )\r\n           })}\r\n           \r\n          </div> */}\r\n            <div>\r\n              {session && session.length > 0 ? (\r\n                session.map((sh) => {\r\n                  const date = new Date(sh.fromTimeStamp);\r\n                  const fromtime = new Date(sh.fromTimeStamp);\r\n                  const totime = new Date(sh.toTimeStamp);\r\n                  const timeOptions = { hour: \"2-digit\", minute: \"2-digit\" };\r\n                  const shdateformat = `${date.getDate()}/${\r\n                    date.getMonth() + 1\r\n                  }/${date.getFullYear()}`;\r\n\r\n                  // Calculate duration in minutes\r\n                  /* const durationInMs = totime.getTime() - fromtime.getTime(); */\r\n                  /* const durationInMinutes = Math.floor(durationInMs / (1000 * 60));  */\r\n                  const formatDuration = (durationInMs) => {\r\n                    const durationInMinutes = durationInMs / (1000 * 60);\r\n                    return durationInMinutes.toFixed(2); // Formats the number to two decimal places\r\n                  };\r\n\r\n                  return (\r\n                    <Card className=\"my-2\" key={sh.mentorId}>\r\n                      {/* <CardBody className='d-flex justify-content-between'>\r\n            <div className='d-flex justify-content-between flex-column'>\r\n              <NavLink href={`/app/mentorprofile/${sh.mentorId}`}>\r\n                <h4 className='text-large text-primary'>{sh.name}</h4>\r\n              </NavLink>\r\n\r\n              <div className='d-flex'>\r\n                <Label className='text-one'>Date:</Label>\r\n                <h4 className='ml-2 font-weight-bold'>{shdateformat}</h4>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='d-flex justify-content-around flex-column '>\r\n              <div className='d-flex'>\r\n                <Label className='text-one mr-2'>Duration:</Label>\r\n                <h4 className='font-weight-bold'>{sh.duration/60000} minutes</h4>\r\n                <h4 className='font-weight-bold'>{durationInMinutes}</h4>\r\n                <h4 className='font-weight-bold'>{formatDuration(sh.duration)} minutes</h4>\r\n              </div>\r\n\r\n              <div className='d-flex justify-content-between'>\r\n                <div className='d-flex'>\r\n                  <h4 className=' mr-2'>From:</h4>\r\n                  <h4 className='font-weight-bold'>{fromtime.toLocaleTimeString([], timeOptions)}</h4>\r\n                  <h4 className='mx-2'>to</h4>\r\n                  <h4 className='font-weight-bold'>{totime.toLocaleTimeString([], timeOptions)}</h4>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='d-flex'>\r\n                <Label className='mr-2 text-one'>Mode:</Label>\r\n                <h4 className='font-weight-bold '>{sh.mode}</h4>\r\n              </div>\r\n            </div>\r\n          </CardBody> */}\r\n\r\n                      <CardBody className=\"d-flex justify-content-between flex-wrap\">\r\n                        <Row className=\"\">\r\n                          <Col className=\"d-flex\">\r\n                            <NavLink\r\n                              href={`/app/mentorprofile/${sh.mentorId}`}\r\n                              className=\"d-flex align-items-center\"\r\n                            >\r\n                              {/* <ThumbnailImage\r\n                                rounded\r\n                                // src=\"/assets/img/profiles/l-1.jpg\"\r\n                                // src={`${baseUrl}/api/public/images/${sh.mentorId}/profile-pic`}\r\n                                // src={sh.imageUrl}\r\n                                src={`${baseUrl}/${sh.imageUrl}`}\r\n                                alt=\"Card image cap\"\r\n                                className=\"m-4\"\r\n                              /> */}\r\n                              {sh.imageUrl === null ? (\r\n                                <ThumbnailLetters\r\n                                  rounded\r\n                                  text={sh.name}\r\n                                  alt=\"Card image cap\"\r\n                                  className=\"m-4\"\r\n                                />\r\n                              ) : (\r\n                                <img\r\n                                  style={{ height: \"140px\", width: \"140px\" }}\r\n                                  src={`${baseUrl}/${sh.imageUrl}`}\r\n                                  alt=\"Card  cap\"\r\n                                  className=\"m-4 rounded-circle\"\r\n                                />\r\n                              )}\r\n\r\n                              <h4 className=\"text-large text-primary ml-2\">\r\n                                {sh.name}\r\n                              </h4>\r\n                            </NavLink>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <div className=\"d-flex justify-content-around flex-column \">\r\n                          <div className=\"d-flex \">\r\n                            <Label className=\"text-one mr-2\">Date:</Label>\r\n                            <h4 className=\"font-weight-bold \">\r\n                              {shdateformat}\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <Label className=\"text-one mr-2\">Duration:</Label>\r\n\r\n                            <h4 className=\"font-weight-bold\">\r\n                              {formatDuration(sh.duration)} minutes\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <h4 className=\"mr-2\">From:</h4>\r\n                            <h4 className=\"mr-2 font-weight-bold\">\r\n                              {fromtime.toLocaleTimeString([], timeOptions)}\r\n                            </h4>\r\n                            <h4>to</h4>\r\n                            <h4 className=\"font-weight-bold mx-2\">\r\n                              {totime.toLocaleTimeString([], timeOptions)}\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <Label className=\"text-one mr-2\">Mode:</Label>\r\n                            <h4 className=\"font-weight-bold\">{sh.mode}</h4>\r\n                          </div>\r\n                        </div>\r\n                      </CardBody>\r\n                    </Card>\r\n                  );\r\n                })\r\n              ) : (\r\n                <Card>\r\n                  <CardBody>\r\n                    <h3>No session history</h3>\r\n                  </CardBody>\r\n                </Card>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Colxx>\r\n      </Row>\r\n      <Pagination\r\n        currentPage={currentPage1}\r\n        totalPage={sessionPagination.totalPage}\r\n        onChangePage={(i) => setCurrentPage1(i)}\r\n        lastIsActive={sessionPagination.last}\r\n        firstIsActive={sessionPagination.first}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MentorSessionList;\r\n","// import axios from \"axios\";\r\n// import ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\n// import { Colxx } from \"components/common/CustomBootstrap\";\r\n// import { baseUrl } from \"constants/defaultValues\";\r\n// import { useEffect, useState } from \"react\";\r\n// import Pagination from \"containers/pages/Pagination\";\r\n// import { useHistory, useLocation } from \"react-router-dom\";\r\n// import {\r\n//   Badge,\r\n//   Button,\r\n//   Card,\r\n//   CardBody,\r\n//   Col,\r\n//   Label,\r\n//   NavLink,\r\n//   Row,\r\n// } from \"reactstrap\";\r\n\r\n// const MentorSessionUpcoming = () => {\r\n//   const [session, setSession] = useState(\"\");\r\n//   const [sessionPagination, setSessionPagination] = useState(\"\");\r\n//   const [upcomingSession, setUpcomingSession] = useState(\"\");\r\n//   const [pagination, setPagination] = useState(\"\");\r\n//   const [showSuccessCard, setShowSuccessCard] = useState(false);\r\n//   const location = useLocation();\r\n//   const history = useHistory();\r\n//   const [currentPage, setCurrentPage] = useState(1); // Start from page 1\r\n//   const [currentPage1, setCurrentPage1] = useState(1); // Start from page 1\r\n\r\n//   const upcomingSessionsUrl = `${baseUrl}/api/calendar/partner/upcoming-bookedslots`;\r\n//   const sessionHistoryUrl = `${baseUrl}/api/calendar/partner/session-history`;\r\n\r\n\r\n\r\n//   const handleJoinCall = (userId, id) => {\r\n//     const fullUrl = `/app/videocall/${userId}/${id}`;\r\n//     history.push(fullUrl);\r\n//   };\r\n    \r\n// useEffect(() => {\r\n//   const fetchSessionHistory = async () => {\r\n//     try {\r\n//       const response = await axios.get(`${sessionHistoryUrl}?page=${currentPage1 -1}&size=10&role=MENTOR`);\r\n//       setSession(response.data.data );\r\n//       setSessionPagination(response.data.paginationMeta );\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching session history:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const fetchUpcomingSessions = async () => {\r\n//     try {\r\n//       const response = await axios.get(`${upcomingSessionsUrl}?page=${currentPage -1}&size=10&role=MENTOR`);\r\n//       setUpcomingSession(response.data.data );\r\n//       setPagination(response.data.paginationMeta );\r\n\r\n//       const queryParams = new URLSearchParams(location.search);\r\n//       setShowSuccessCard(queryParams.get(\"appointment\") === \"true\");\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching upcoming sessions:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // const [currentTime, setCurrentTime] = useState(new Date())\r\n//   // useEffect(() => {\r\n//   //   const intervalId = setInterval(() => {\r\n//   //     setCurrentTime(new Date());\r\n//   //   }, 30000);\r\n\r\n//   //   return () => clearInterval(intervalId);\r\n//   // }, []);\r\n//   fetchSessionHistory();\r\n//   fetchUpcomingSessions();\r\n// }, [currentPage, currentPage1, location.search]);\r\n\r\n  \r\n//   return (\r\n//     <div>\r\n//       <Row>\r\n//         <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n//           {showSuccessCard && (\r\n//             <Card className=\"my-2\">\r\n//               <CardBody className=\"text-center\">\r\n//                 <span className=\"text-xlarge text-primary\">\r\n//                   <i className=\"simple-icon-check\" />\r\n//                 </span>\r\n//                 <h3 className=\"text-center\">\r\n//                   You have successfully scheduled appointment with mentorName\r\n//                 </h3>\r\n//               </CardBody>\r\n//             </Card>\r\n//           )}\r\n//           <div className=\"my-3\">\r\n//             <h2 className=\"font-weight-medium\">Upcoming sessions</h2>\r\n\r\n//             <div>\r\n//               <div className=\"\">\r\n//                 {upcomingSession.length > 0 ? (\r\n//                   upcomingSession.map((up) => {\r\n//                     const date = new Date(up.fromTimeStamp);\r\n//                     const fromtime = new Date(up.fromTimeStamp);\r\n//                     const totime = new Date(up.toTimeStamp);\r\n//                     const updateformat = `${date.getDate()}/${\r\n//                       date.getMonth() + 1\r\n//                     }/${date.getFullYear()}`;\r\n//                     const timeOptions = { hour: \"2-digit\", minute: \"2-digit\" };\r\n//                     return (\r\n//                       <div key={up.menteeId}>\r\n//                         <Card className=\"my-4\">\r\n//                           <Badge\r\n//                             color=\"primary\"\r\n//                             pill\r\n//                             className=\"position-absolute badge-top-right\"\r\n//                           >\r\n//                             NEW\r\n//                           </Badge>\r\n//                             <Row className=\"\">\r\n//                               <Col className=\"d-flex\">\r\n//                                 <NavLink\r\n//                                   href={`/app/student/profile/${up.menteeId}`}\r\n//                                   className=\"d-flex align-items-center\"\r\n//                                 >\r\n//                                   {up.imageUrl === null ? (\r\n//                                     <ThumbnailLetters\r\n//                                       rounded\r\n//                                       text={up.name}\r\n//                                       alt=\"Card image cap\"\r\n//                                       className=\"m-4\"\r\n//                                     />\r\n//                                   ) : (\r\n//                                     <img\r\n//                                       style={{\r\n//                                         height: \"140px\",\r\n//                                         width: \"140px\",\r\n//                                       }}\r\n//                                       src={`${baseUrl}/${up.imageUrl}`}\r\n//                                       alt=\"Card  cap\"\r\n//                                       className=\"m-4 rounded-circle\"\r\n//                                     />\r\n//                                   )}\r\n\r\n//                                   <h4 className=\"text-large text-primary ml-2\">\r\n//                                     {up.name}\r\n//                                   </h4>\r\n//                                 </NavLink>\r\n//                               </Col>\r\n//                             </Row>\r\n//                             <div className=\"d-flex justify-content-around flex-column \">\r\n//                               <div className=\"d-flex\">\r\n//                                 <Label className=\"text-one\">Date:</Label>\r\n//                                 <h4 className=\"ml-2 font-weight-bold\">\r\n//                                   {updateformat}\r\n//                                 </h4>\r\n//                               </div>\r\n//                               <div className=\"d-flex justify-content-between\">\r\n//                                 <h4 className=\"mr-2\">From:</h4>\r\n//                                 <h4 className=\"mr-2 font-weight-bold\">\r\n//                                   {fromtime.toLocaleTimeString([], timeOptions)}\r\n//                                 </h4>\r\n//                                 <h4>to</h4>\r\n//                                 <h4 className=\"font-weight-bold mx-2\">\r\n//                                   {totime.toLocaleTimeString([], timeOptions)}\r\n//                                 </h4>\r\n//                               </div>\r\n//                               <div className=\"d-flex\">\r\n//                                 <Label className=\"text-one mr-2\">Mode:</Label>\r\n//                                 <h4 className=\"font-weight-bold\">{up.mode}</h4>\r\n//                               </div>\r\n//                               <Button\r\n//                                 outline\r\n//                                 color=\"primary\"\r\n//                                 className=\"mt-2 text-one \"\r\n//                                 onClick={() =>\r\n//                                   handleJoinCall(up.menteeId, up.id)\r\n//                                 }\r\n//                               >\r\n//                                 Join Call\r\n//                               </Button>\r\n//                             </div>\r\n//                           </CardBody>\r\n//                         </Card>\r\n//                       </div>\r\n//                     );\r\n//                   })\r\n//                 ) : (\r\n//                   <Card>\r\n//                     <CardBody>\r\n//                       <h3>No upcoming sessions</h3>\r\n//                     </CardBody>\r\n//                   </Card>\r\n//                 )}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n// <Pagination\r\n//             currentPage={currentPage}\r\n//             totalPage={pagination.totalPage || 1}\r\n//             onChangePage={(i) => setCurrentPage(i)}\r\n//             lastIsActive={pagination.last}\r\n//             firstIsActive={pagination.first}\r\n//           />\r\n\r\n\r\n\r\n//           <div className=\"my-3 mt-4\">\r\n//             <h2 className=\"font-weight-medium\">Session history</h2>\r\n\r\n//             <div>\r\n//               {session && session.length > 0 ? (\r\n//                 session.map((sh) => {\r\n//                   const date = new Date(sh.fromTimeStamp);\r\n//                   const fromtime = new Date(sh.fromTimeStamp);\r\n//                   const totime = new Date(sh.toTimeStamp);\r\n//                   const timeOptions = { hour: \"2-digit\", minute: \"2-digit\" };\r\n//                   const shdateformat = `${date.getDate()}/${\r\n//                     date.getMonth() + 1\r\n//                   }/${date.getFullYear()}`;\r\n//                   const formatDuration = (durationInMs) => {\r\n//                     const durationInMinutes = durationInMs / (1000 * 60);\r\n//                     return durationInMinutes.toFixed(2); // Formats the number to two decimal places\r\n//                   };\r\n\r\n//                   return (\r\n//                     <Card className=\"my-2\" key={sh.menteeId}>\r\n//                       <CardBody className=\"d-flex justify-content-between flex-wrap\">\r\n\r\n\r\n//                         {/* </div> */}\r\n                      \r\n//                         {/* </div> */}\r\n\r\n//                         <Row className=\"\">\r\n//                           <Col className=\"d-flex\">\r\n//                             <NavLink\r\n//                               href={`/app/user/profile/${sh.menteeId}`}\r\n//                               className=\"d-flex align-items-center\"\r\n//                             >\r\n//                               {sh.imageUrl === null ? (\r\n//                                 <ThumbnailLetters\r\n//                                   rounded\r\n//                                   text={sh.name}\r\n//                                   alt=\"Card image cap\"\r\n//                                   className=\"m-4\"\r\n//                                 />\r\n//                               ) : (\r\n//                                 <img\r\n//                                   style={{ height: \"140px\", width: \"140px\" }}\r\n//                                   src={`${baseUrl}/${sh.imageUrl}`}\r\n//                                   alt=\"Card  cap\"\r\n//                                   className=\"m-4 rounded-circle\"\r\n//                                 />\r\n//                               )}\r\n\r\n//                               <h4 className=\"text-large text-primary ml-2\">\r\n//                                 {sh.name}\r\n//                               </h4>\r\n//                             </NavLink>\r\n//                           </Col>\r\n//                         </Row>\r\n\r\n//                         <div className=\"d-flex justify-content-around flex-column \">\r\n//                           <div className=\"d-flex\">\r\n//                             <Label className=\"text-one\">Date:</Label>\r\n//                             <h4 className=\"ml-2 font-weight-bold\">\r\n//                               {shdateformat}\r\n//                             </h4>\r\n//                           </div>\r\n//                           <div className=\"d-flex\">\r\n//                             <Label className=\"text-one mr-2\">Duration:</Label>\r\n//                             {/* <h4 className='font-weight-bold'>{sh.duration/60000} minutes</h4> */}\r\n//                             <h4 className=\"font-weight-bold\">\r\n//                               {formatDuration(sh.duration)} minutes\r\n//                             </h4>\r\n//                           </div>\r\n\r\n//                           <div className=\"d-flex justify-content-between\">\r\n//                             <div className=\"d-flex\">\r\n//                               <h4 className=\" mr-2\">From:</h4>\r\n//                               <h4 className=\"font-weight-bold\">\r\n//                                 {fromtime.toLocaleTimeString([], timeOptions)}\r\n//                               </h4>\r\n//                               <h4 className=\"mx-2\">to</h4>\r\n//                               <h4 className=\"font-weight-bold\">\r\n//                                 {totime.toLocaleTimeString([], timeOptions)}\r\n//                               </h4>\r\n//                             </div>\r\n//                           </div>\r\n\r\n//                           <div className=\"d-flex\">\r\n//                             <Label className=\"mr-2 text-one\">Mode:</Label>\r\n//                             <h4 className=\"font-weight-bold \">{sh.mode}</h4>\r\n//                           </div>\r\n//                         </div>\r\n//                       </CardBody>\r\n//                     </Card>\r\n//                   );\r\n//                 })\r\n//               ) : (\r\n//                 <Card>\r\n//                   <CardBody>\r\n//                     <h3>No session history</h3>\r\n//                   </CardBody>\r\n//                 </Card>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         </Colxx>\r\n//        </Row>\r\n// <Pagination\r\n// currentPage={currentPage1}\r\n// totalPage={sessionPagination.totalPage}\r\n// onChangePage={(i) => setCurrentPage1(i)}\r\n// lastIsActive={sessionPagination.last}\r\n// firstIsActive={sessionPagination.first}\r\n// />\r\n\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default MentorSessionUpcoming;\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Label,\r\n  NavLink,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\n// This is mentor view for the upcoming sessions\r\nconst MentorSessionUpcoming = () => {\r\n  // const { sessions } = location.state || {}; // Retrieve sessions from location state\r\n  const [session, setSession] = useState(\"\");\r\n  const [sessionPagination, setSessionPagination] = useState(\"\");\r\n  const [pagination, setPagination] = useState(\"\");\r\n  \r\n  const [upcomingSession, setUpcomingSession] = useState(\"\");\r\n  const [showSuccessCard, setShowSuccessCard] = useState(false);\r\n  const location = useLocation();\r\n  const [currentPage, setCurrentPage] = useState(1); // Start from page 1\r\n  const [currentPage1, setCurrentPage1] = useState(1); // Start from page 1\r\n\r\n\r\n  // const url1=`${baseUrl}/mentorSessionUpcomingHistory`;\r\n\r\n  // if you want to change the url to backend uncomment the below line\r\n  // const url1 = `${baseUrl}/api/calendar/mentor/upcoming-bookedslots-session-history`;\r\n\r\n  const upcomingSessionsUrl = `${baseUrl}/api/calendar/partner/upcoming-bookedslots`;\r\n  const sessionHistoryUrl = `${baseUrl}/api/calendar/partner/session-history`;\r\n\r\n\r\n  //  const deployType = 'dev'; // 'dev' or 'production'\r\n\r\n  // const urls = {\r\n  //     dev: {\r\n  //         \"baseUrl\":'localhost:3001',\r\n  //         \"mentorApp\": \"mentorSessionUpcomingHistory\"\r\n\r\n  //     },\r\n  //     production: {\r\n  //         \"baseUrl\": \"localhost:9091\",\r\n  //         \"mentorApp\": \"/api/calendar/mentor/upcoming-bookedslots-session-history\"\r\n\r\n  //     }\r\n  // };\r\n\r\n  // const { baseUrl, mentorApp } = urls[deployType];\r\n  // const getURL = (urlSlug) => {\r\n  //   return urls[deployType][urlSlug]\r\n\r\n  // };\r\n  // const urlnew=`${baseUrl}` / getURL(\"mentorApp\");\r\n  const history = useHistory();\r\n\r\n  const handleJoinCall = (userId, id) => {\r\n    const fullUrl = `/app/videocall/${userId}/${id}`;\r\n    history.push(fullUrl);\r\n  };\r\n  useEffect(() => {\r\n    //   console.log(\"Deploy Type:\", deployType);\r\n    // console.log(\"Base URL:\", urls[deployType].baseUrl);\r\n    // console.log(\"Mentor App URL:\", urls[deployType].mentorApp);\r\n\r\n    const SessionHistroy = async () => {\r\n      try {\r\n        const response = await axios.get(`${sessionHistoryUrl}?page=${currentPage1 -1}&size=10&role=MENTOR`);\r\n      setSession(response.data.data );\r\n      setSessionPagination(response.data.paginationMeta );\r\n    } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    SessionHistroy();\r\n    const SessionUpcomingHistroy = async () => {\r\n      try {\r\n        const response = await axios.get(`${upcomingSessionsUrl}?page=${currentPage -1}&size=10&role=MENTOR`);\r\n        setUpcomingSession(response.data.data );\r\n        setPagination(response.data.paginationMeta );\r\n        const queryParams = new URLSearchParams(location.search);\r\n        const appointment = queryParams.get(\"appointment\");\r\n        setShowSuccessCard(appointment === \"true\");\r\n        console.log(\"Upcoming Session Data:\", response);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    SessionUpcomingHistroy();\r\n  }, [currentPage, currentPage1, location.search]);\r\n\r\n  // const [currentTime, setCurrentTime] = useState(new Date())\r\n  // useEffect(() => {\r\n  //   const intervalId = setInterval(() => {\r\n  //     setCurrentTime(new Date());\r\n  //   }, 30000);\r\n\r\n  //   return () => clearInterval(intervalId);\r\n  // }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n          {showSuccessCard && (\r\n            <Card className=\"my-2\">\r\n              <CardBody className=\"text-center\">\r\n                <span className=\"text-xlarge text-primary\">\r\n                  <i className=\"simple-icon-check\" />\r\n                </span>\r\n                <h3 className=\"text-center\">\r\n                  You have successfully scheduled appointment with mentorName\r\n                </h3>\r\n              </CardBody>\r\n            </Card>\r\n          )}\r\n          <div className=\"my-3\">\r\n            <h2 className=\"font-weight-medium\">Upcoming sessions</h2>\r\n\r\n            <div>\r\n              <div className=\"\">\r\n                {upcomingSession.length > 0 ? (\r\n                  upcomingSession.map((up) => {\r\n                    const date = new Date(up.fromTimeStamp);\r\n                    const fromtime = new Date(up.fromTimeStamp);\r\n                    const totime = new Date(up.toTimeStamp);\r\n                    const updateformat = `${date.getDate()}/${\r\n                      date.getMonth() + 1\r\n                    }/${date.getFullYear()}`;\r\n                    const timeOptions = { hour: \"2-digit\", minute: \"2-digit\" };\r\n\r\n                    // const isWithinFiveMinutes = (fromTimeStamp) => {\r\n                    //   const fiveMinutesInMs = 5 * 60 * 1000;\r\n                    //   // const currentTime = new Date().getTime();\r\n                    //   const fromTime = new Date(fromTimeStamp).getTime();\r\n                    //   const timeDiff = fromTime - currentTime;\r\n\r\n                    //   return timeDiff >= 0 && timeDiff <= fiveMinutesInMs;\r\n                    // };\r\n\r\n                    return (\r\n                      <div key={up.menteeId}>\r\n                        <Card className=\"my-4\">\r\n                          <Badge\r\n                            color=\"primary\"\r\n                            pill\r\n                            className=\"position-absolute badge-top-right\"\r\n                          >\r\n                            NEW\r\n                          </Badge>\r\n\r\n                          <CardBody className=\"d-flex justify-content-between flex-wrap\">\r\n                            {/* <div className='d-flex justify-content-between flex-column'>\r\n              \r\n                <h4 className='text-large text-primary'>{up.name}</h4>\r\n                \r\n              </div> */}\r\n                            <Row className=\"\">\r\n                              <Col className=\"d-flex\">\r\n                                <NavLink\r\n                                  href={`/app/student/profile/${up.menteeId}`}\r\n                                  className=\"d-flex align-items-center\"\r\n                                >\r\n                                  {up.imageUrl === null ? (\r\n                                    <ThumbnailLetters\r\n                                      rounded\r\n                                      text={up.name}\r\n                                      alt=\"Card image cap\"\r\n                                      className=\"m-4\"\r\n                                    />\r\n                                  ) : (\r\n                                    <img\r\n                                      style={{\r\n                                        height: \"140px\",\r\n                                        width: \"140px\",\r\n                                      }}\r\n                                      src={`${baseUrl}/${up.imageUrl}`}\r\n                                      alt=\"Card  cap\"\r\n                                      className=\"m-4 rounded-circle\"\r\n                                    />\r\n                                  )}\r\n\r\n                                  <h4 className=\"text-large text-primary ml-2\">\r\n                                    {up.name}\r\n                                  </h4>\r\n                                </NavLink>\r\n                              </Col>\r\n                            </Row>\r\n                            <div className=\"d-flex justify-content-around flex-column \">\r\n                              <div className=\"d-flex\">\r\n                                <Label className=\"text-one\">Date:</Label>\r\n                                <h4 className=\"ml-2 font-weight-bold\">\r\n                                  {updateformat}\r\n                                </h4>\r\n                              </div>\r\n                              <div className=\"d-flex justify-content-between\">\r\n                                <h4 className=\"mr-2\">From:</h4>\r\n                                <h4 className=\"mr-2 font-weight-bold\">\r\n                                  {fromtime.toLocaleTimeString([], timeOptions)}\r\n                                </h4>\r\n                                <h4>to</h4>\r\n                                <h4 className=\"font-weight-bold mx-2\">\r\n                                  {totime.toLocaleTimeString([], timeOptions)}\r\n                                </h4>\r\n                              </div>\r\n                              <div className=\"d-flex\">\r\n                                <Label className=\"text-one mr-2\">Mode:</Label>\r\n                                <h4 className=\"font-weight-bold\">{up.mode}</h4>\r\n                              </div>\r\n                              <Button\r\n                                outline\r\n                                color=\"primary\"\r\n                                className=\"mt-2 text-one \"\r\n                                onClick={() =>\r\n                                  handleJoinCall(up.menteeId, up.id)\r\n                                }\r\n                              >\r\n                                Join Call\r\n                              </Button>\r\n                            </div>\r\n                          </CardBody>\r\n                        </Card>\r\n                      </div>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <Card>\r\n                    <CardBody>\r\n                      <h3>No upcoming sessions</h3>\r\n                    </CardBody>\r\n                  </Card>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n<Pagination\r\n            currentPage={currentPage}\r\n            totalPage={pagination.totalPage || 1}\r\n            onChangePage={(i) => setCurrentPage(i)}\r\n            lastIsActive={pagination.last}\r\n            firstIsActive={pagination.first}\r\n          />\r\n\r\n          <div className=\"my-3 mt-4\">\r\n            <h2 className=\"font-weight-medium\">Session history</h2>\r\n\r\n            <div>              \r\n              {session && session.length > 0 ? (\r\n                session.map((sh) => {\r\n                  const date = new Date(sh.fromTimeStamp);\r\n                  const fromtime = new Date(sh.fromTimeStamp);\r\n                  const totime = new Date(sh.toTimeStamp);\r\n                  const timeOptions = { hour: \"2-digit\", minute: \"2-digit\" };\r\n                  const shdateformat = `${date.getDate()}/${\r\n                    date.getMonth() + 1\r\n                  }/${date.getFullYear()}`;\r\n                  const formatDuration = (durationInMs) => {\r\n                    const durationInMinutes = durationInMs / (1000 * 60);\r\n                    return durationInMinutes.toFixed(2); // Formats the number to two decimal places\r\n                  };\r\n\r\n                  return (\r\n                    <Card className=\"my-2\" key={sh.menteeId}>\r\n                      <CardBody className=\"d-flex justify-content-between flex-wrap\">\r\n                        {/* <div className='d-flex justify-content-between flex-column'> */}\r\n                        {/* <NavLink href={`/app/mentorprofile/${sh.mentorId}`}>\r\n                <h4 className='text-large text-primary'>{sh.name}</h4>\r\n              </NavLink> */}\r\n                        {/* <h4 className='text-large text-primary'>{sh.name}</h4> */}\r\n\r\n                        {/* </div> */}\r\n\r\n                        <Row className=\"\">\r\n                          <Col className=\"d-flex\">\r\n                            <NavLink\r\n                              href={`/app/user/profile/${sh.menteeId}`}\r\n                              className=\"d-flex align-items-center\"\r\n                            >\r\n                              {sh.imageUrl === null ? (\r\n                                <ThumbnailLetters\r\n                                  rounded\r\n                                  text={sh.name}\r\n                                  alt=\"Card image cap\"\r\n                                  className=\"m-4\"\r\n                                />\r\n                              ) : (\r\n                                <img\r\n                                  style={{ height: \"140px\", width: \"140px\" }}\r\n                                  src={`${baseUrl}/${sh.imageUrl}`}\r\n                                  alt=\"Card  cap\"\r\n                                  className=\"m-4 rounded-circle\"\r\n                                />\r\n                              )}\r\n\r\n                              <h4 className=\"text-large text-primary ml-2\">\r\n                                {sh.name}\r\n                              </h4>\r\n                            </NavLink>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <div className=\"d-flex justify-content-around flex-column \">\r\n                          <div className=\"d-flex\">\r\n                            <Label className=\"text-one\">Date:</Label>\r\n                            <h4 className=\"ml-2 font-weight-bold\">\r\n                              {shdateformat}\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <Label className=\"text-one mr-2\">Duration:</Label>\r\n                            {/* <h4 className='font-weight-bold'>{sh.duration/60000} minutes</h4> */}\r\n                            <h4 className=\"font-weight-bold\">\r\n                              {formatDuration(sh.duration)} minutes\r\n                            </h4>\r\n                          </div>\r\n\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <div className=\"d-flex\">\r\n                              <h4 className=\" mr-2\">From:</h4>\r\n                              <h4 className=\"font-weight-bold\">\r\n                                {fromtime.toLocaleTimeString([], timeOptions)}\r\n                              </h4>\r\n                              <h4 className=\"mx-2\">to</h4>\r\n                              <h4 className=\"font-weight-bold\">\r\n                                {totime.toLocaleTimeString([], timeOptions)}\r\n                              </h4>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"d-flex\">\r\n                            <Label className=\"mr-2 text-one\">Mode:</Label>\r\n                            <h4 className=\"font-weight-bold \">{sh.mode}</h4>\r\n                          </div>\r\n                        </div>\r\n                      </CardBody>\r\n                    </Card>\r\n                  );\r\n                })\r\n              ) : (\r\n                <Card>\r\n                  <CardBody>\r\n                    <h3>No session history</h3>\r\n                  </CardBody>\r\n                </Card>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Colxx>\r\n      </Row>\r\n      <Pagination\r\ncurrentPage={currentPage1}\r\ntotalPage={sessionPagination.totalPage}\r\nonChangePage={(i) => setCurrentPage1(i)}\r\nlastIsActive={sessionPagination.last}\r\nfirstIsActive={sessionPagination.first}\r\n/>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MentorSessionUpcoming;","import axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport {\r\n  Button,\r\n  // Card,\r\n  // CardBody,\r\n  // CardSubtitle,\r\n  // CardImg,\r\n  ButtonDropdown,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n} from \"reactstrap\";\r\n// import { NotificationManager } from 'components/common/react-notifications';\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport country from \"../my-login/Country\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst MyProfile = () => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isEditingAbout, setIsEditingAbout] = useState(false);\r\n  const [isEditingButton, setIsEditingButton] = useState(false);\r\n  const [isEditingPrice, setIsEditingPrice] = useState(false);\r\n  const [image, setImage] = useState(null);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [jobTitle, setJobTitle] = useState(\"\");\r\n  // const [experience, setExperience] = useState(\"\");\r\n  const [resumeFileName, setResumeFileName] = useState(\"\");\r\n  const [resumeFileId, setResumeFileId] = useState(\"\");\r\n  const [setExperience] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [newInputSkill, setNewInputSkill] = useState(\"\");\r\n  const [skills, setSkills] = useState([]);\r\n  const [userId, setUserId] = useState(null);\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [linkedinUrl, setLinkedinUrl] = useState(\"\");\r\n  const [twitterHandle, setTwitterHandle] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n  const [introVideo, setIntroVideo] = useState(\"\");\r\n  const [featuredArticle, setFeaturedArticle] = useState(\"\");\r\n  const [reasonForMentor, setReasonForMentor] = useState(\"\");\r\n  const [achievement, setAchievement] = useState(\"\");\r\n  const [totalRatings, setTotalRatings] = useState(0);\r\n  const [averageStar, setAverageStar] = useState(0);\r\n  // const [profileLoading, setProfileLoading] = useState(true);\r\n  const [setProfileLoading] = useState(true);\r\n  // const [languages, setLanguages] = useState([]);\r\n  const [languages] = useState([]);\r\n  const [skillValidationMessage, setSkillValidationMessage] = useState(\"\");\r\n  const [isProfileUpdated, setIsProfileUpdated] = useState(false);\r\n  const [imageEditModal, setImageEditModal] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [selectedFileBase64, setSelectedFileBase64] = useState(null);\r\n  const [fileError, setFileError] = useState(\"\");\r\n\r\n  // const Id = 1;\r\n\r\n  // const url = `${baseUrl}/user`;\r\n  // const url = `${baseUrl}/api/mentor/11/details/profile`;\r\n  // const url1 = `${baseUrl}/mentor/profile${userId}`;\r\n  // const endUrl = `${baseUrl}/api/mentor/${Id}/details/profile`;\r\n  // const endUrl = `${baseUrl}/myprofile`;\r\n  const endUrl = `${baseUrl}/api/mentor/myprofile`;\r\n  const inputUrl = `${baseUrl}/inputs`;\r\n  const imageEditUrl = `${baseUrl}/api/mentor/profile-image`;\r\n  const mentorProfileDetails = async () => {\r\n    try {\r\n      const response = await axios.get(endUrl);\r\n      const userData = response.data;\r\n      // console.log(\"userData:\", userData);\r\n      if (userData) {\r\n        setImage(userData.imageUrl);\r\n        setFirstName(userData.firstName);\r\n        // setJobRole(userData.jobRole);\r\n        setJobTitle(userData.jobTitle);\r\n        setCompany(userData.company);\r\n        setLocation(userData.location);\r\n        setResumeFileName(userData.documentName);\r\n        setResumeFileId(userData.documentId);\r\n        // setAbout(userData.bio);\r\n        setSkills(userData.skills);\r\n        setUserId(userData.id);\r\n        // setLastseen(userData.lastSeen);\r\n        // setRatings(userData[0].ratings)\r\n        // console.log(response)\r\n        // console.log(\"Username:\", userData[1].jobRole);\r\n        setLastName(userData.lastName);\r\n        setEmail(userData.email);\r\n        // setPassword(userData.password);\r\n        setCategory(userData.category);\r\n        setBio(userData.bio);\r\n        setPrice(userData.price);\r\n        setLinkedinUrl(userData.linkedinUrl);\r\n        setTwitterHandle(userData.twitterHandle);\r\n        setWebsite(userData.website);\r\n        setIntroVideo(userData.introVideo);\r\n        setFeaturedArticle(userData.featuredArticle);\r\n        setReasonForMentor(userData.reasonForMentor);\r\n        setAchievement(userData.achievement);\r\n        setProfileLoading(false);\r\n        // setReviews(userData.reviews)\r\n        // setPrice(userData.price)\r\n        // setExperience(userData.experience)\r\n        // setTopics(userData.topics);\r\n        // setStar(userData.star);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    mentorProfileDetails();\r\n  }, [isProfileUpdated]);\r\n  useEffect(() => {\r\n    const mentorReviews = async () => {\r\n      const ratingUrl = `${baseUrl}/api/mentorship/rating/meta/${userId}`;\r\n\r\n      try {\r\n        const response = await axios.get(ratingUrl);\r\n        setTotalRatings(response.data.totalRatings);\r\n        setAverageStar(response.data.averageStar);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    mentorReviews();\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    const mentorProfileDetails1 = async () => {\r\n      try {\r\n        const response = await axios.get(inputUrl);\r\n        const inputData = response.data;\r\n        // console.log(\"inputData:\", inputData);\r\n        if (inputData) {\r\n          // setReviews(inputData.reviews)\r\n          // setPrice(inputData.price)\r\n          setExperience(inputData.experience);\r\n          // setTopics(inputData.topics);\r\n          // setStar(inputData.star);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    mentorProfileDetails1();\r\n  }, []);\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n  // console.log(token);\r\n\r\n  const updateMEntorProfile = async () => {\r\n    try {\r\n      const updatedData = {\r\n        image,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        jobTitle,\r\n        company,\r\n        location,\r\n        category,\r\n        languages,\r\n        skills,\r\n        bio,\r\n        price,\r\n        linkedinUrl,\r\n        twitterHandle,\r\n        website,\r\n        introVideo,\r\n        featuredArticle,\r\n        reasonForMentor,\r\n        achievement,\r\n        // reviews,\r\n        // star,\r\n        // topics,\r\n        // price,\r\n        // experience,\r\n      };\r\n\r\n      // console.log(\"Updated Data:\", updatedData);\r\n      // const response =\r\n\r\n      const response = await axios.put(endUrl, updatedData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      // console.log(\"Response\", response.data.statuses[0].message);\r\n      //   response.data.statuses.forEach((status) => {\r\n      //    const responseMessage = status.message;\r\n      //     NotificationManager.success(responseMessage, 'Great!', 3000, null, null, '');\r\n      // });\r\n      setIsProfileUpdated(!isProfileUpdated);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      // console.log(\"Profile updated successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error updating profile\", error);\r\n      // if (error.response && error.response.data.statuses[0]) {\r\n      //   ToasterComponent(\"warning\", error.response.data.statuses);\r\n      // }\r\n      if (error?.response?.data?.statuses[0]) {\r\n        ToasterComponent(\"warning\", error.response.data.statuses);\r\n      } else {\r\n        ToasterComponent(\"error\", [\r\n          { message: \"An unexpected error occurred\" },\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const postImageData = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", selectedFile);\r\n\r\n      const response = await axios.post(imageEditUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      setTimeout(() => {}, 2000);\r\n      // console.log(`resres ${response.status}`);\r\n      if (response.status === 200) {\r\n        await mentorProfileDetails();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleImageClick = () => setImageEditModal(true);\r\n\r\n  const handleImagePost = () => {\r\n    postImageData();\r\n    setSelectedFile(null);\r\n    setImageEditModal(false);\r\n  };\r\n\r\n  const handleImageDelete = () => {\r\n    // setSelectedFile(image);\r\n    setImageEditModal(false);\r\n  };\r\n\r\n  const handleAddSkill = (newSkill) => {\r\n    if (!newSkill.trim()) {\r\n      setSkillValidationMessage(\"Skill cannot be empty\");\r\n    } else {\r\n      setSkillValidationMessage(\"\");\r\n      setSkills([...skills, newSkill]);\r\n    }\r\n  };\r\n\r\n  // const handleEditAboutClick = () => {\r\n  //   setIsEditingAbout(true);\r\n  // };\r\n\r\n  const handleSaveAbout = () => {\r\n    setIsEditingAbout(false);\r\n    updateMEntorProfile();\r\n  };\r\n  const handleSavePrice = () => {\r\n    setIsEditingPrice(false);\r\n    updateMEntorProfile();\r\n  };\r\n\r\n  // const handleCancelEditAbout = () => {\r\n  //   setIsEditingAbout(false);\r\n  // };\r\n\r\n  // const handleEditButton = () => {\r\n  //   setIsEditingButton(true);\r\n  // };\r\n  const handleSaveButton = () => {\r\n    if (skills.length === 0) {\r\n      setSkillValidationMessage(\"At least one skill is required.\");\r\n    } else {\r\n      setIsEditingButton(false);\r\n      updateMEntorProfile();\r\n    }\r\n  };\r\n\r\n  // const handleCancelButton = () => {\r\n  //   if (skills.length === 0) {\r\n  //     setSkillValidationMessage(\"At least one skill is required.\");\r\n  //   } else {\r\n  //     setIsEditingButton(false);\r\n  //   }\r\n  // };\r\n\r\n  // const handleEditClick = () => {\r\n  //   setIsEditing(true);\r\n  // };\r\n  const handleFileChange1 = async (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    if (file) {\r\n      const fileType = file.type;\r\n      const fileSize = file.size;\r\n\r\n      // Check if the file is a PDF\r\n      if (fileType !== \"application/pdf\") {\r\n        setFileError(\"Please upload a PDF file.\");\r\n        setResumeFileName(\"\"); // Clear the file name if invalid\r\n        return;\r\n      }\r\n\r\n      // Check if the file size is more than 2MB\r\n      if (fileSize > 2 * 1024 * 1024) {\r\n        setFileError(\"File size should be less than 2MB.\");\r\n        setResumeFileName(\"\"); // Clear the file name if invalid\r\n        return;\r\n      }\r\n\r\n      // If valid, clear the error and set the file name\r\n      setFileError(\"\");\r\n      setResumeFileName(file.name);\r\n      const formData = new FormData();\r\n      formData.append(\"resume\", file);\r\n\r\n      // Post the file to the given URL\r\n      const uploadUrl = `${baseUrl}/api/resume?role=MENTOR`;\r\n\r\n      try {\r\n        const response = await axios.post(uploadUrl, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        });\r\n\r\n        // Handle successful response\r\n        if (response.status === 200) {\r\n          ToasterComponent(\"success\", response.data.statuses);\r\n          console.log(\"Resume uploaded successfully\", response.data);\r\n          setResumeFileId(response.data.documentId);\r\n        } else {\r\n          ToasterComponent(\"error\", \"Failed to upload resume\");\r\n          console.error(\"Failed to upload resume\", response.data);\r\n        }\r\n      } catch (error) {\r\n        // Handle errors\r\n        if (error.response) {\r\n          ToasterComponent(\r\n            \"error\",\r\n            error.response.data.message || \"Upload failed\"\r\n          );\r\n          console.error(\"Error uploading resume:\", error.response);\r\n        } else {\r\n          ToasterComponent(\"error\", \"An error occurred while uploading\");\r\n          console.error(\"Error uploading resume:\", error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setIsEditing(false);\r\n    updateMEntorProfile();\r\n    postImageData();\r\n  };\r\n\r\n  // const handleCancel = () => {\r\n  //   setIsEditing(false);\r\n  // };\r\n\r\n  const handleRemoveSkill = (index) => {\r\n    setSkills(skills.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        setSelectedFileBase64(base64Image);\r\n\r\n        // setAboutField({ ...aboutField, image: base64Image });\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const countryName = country.find((c) => c.iso_code === location)?.name;\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\r\n\r\n  const handleView = async (fileId) => {\r\n    const viewUrl = `${baseUrl}/api/resume/${fileId}`; // Replace with your actual API endpoint\r\n\r\n    try {\r\n      const response = await axios.get(viewUrl, {\r\n        // This is important for downloading binary files\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Include authorization if required\r\n        },\r\n      });\r\n      // const response = await axios.get(viewUrl);\r\n\r\n      if (response.status === 200) {\r\n        // Create a URL for the binary response\r\n        // const fileUrl = window.URL.createObjectURL(new Blob([response.data]));\r\n        // const blobUrl = window.URL.createObjectURL(new Blob([response.data]));\r\n\r\n        // Open the file in a new tab\r\n        window.open(viewUrl, \"_blank\");\r\n      } else {\r\n        ToasterComponent(\"error\", \"Failed to view resume\");\r\n        console.error(\"Failed to view resume\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.message || \"View failed\");\r\n        console.error(\"Error viewing resume:\", error.response);\r\n      } else {\r\n        ToasterComponent(\"error\", \"An error occurred while viewing\");\r\n        console.error(\"Error viewing resume:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (fileId) => {\r\n    const deleteUrl = `${baseUrl}/api/resume/${fileId}?role=MENTOR`; // Replace with your actual delete API endpoint\r\n\r\n    try {\r\n      const response = await axios.delete(deleteUrl);\r\n\r\n      if (response.status === 200) {\r\n        // Assuming the deletion is successful\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n        console.log(\"File deleted successfully\");\r\n        // Add any other logic here like updating the state or UI\r\n        setResumeFileName(\"\");\r\n      } else {\r\n        console.error(\"Failed to delete the file\", \"Error\");\r\n      }\r\n    } catch (error) {\r\n      // Handle the error here\r\n      // if (\r\n      //   error.response &&\r\n      //   error.response.data &&\r\n      //   error.response.data.statuses\r\n      // ) {\r\n      //   ToasterComponent(\"error\", error.response.data.statuses);\r\n      // }\r\n      if (error?.response?.data?.statuses) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error deleting the file:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mentor-profile\">\r\n      {/* <div className=\"\"> */}\r\n\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"\">\r\n        {/* new design starts */}\r\n        {/* profile section starts */}\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <CardBody\r\n                style={{\r\n                  background: \"linear-gradient(to right, #7B42C5, #AA5D93)\",\r\n                  color: \"white\",\r\n                  borderRadius: \"9px 9px 0 0\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"position-relative\"\r\n                  style={{ position: \"relative\", top: \"5px\", textAlign: \"end\" }}\r\n                >\r\n                  <Button\r\n                    color=\"primary\"\r\n                    outline\r\n                    className=\"icon-button  bg-light\"\r\n                    style={{ border: \"none\" }}\r\n                    size=\"sm\"\r\n                    onClick={() => handleImageClick()}\r\n                  >\r\n                    <i className=\"simple-icon-pencil\" />\r\n                  </Button>\r\n                </div>\r\n                <div\r\n                  className=\"position-relative\"\r\n                  style={{ position: \"relative\", top: \"70px\" }}\r\n                >\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn p-0\"\r\n                    style={{ border: \"none\", background: \"none\" }}\r\n                    // onClick={() => handleImageClick()}\r\n                    aria-label=\"Profile image\"\r\n                  >\r\n                    {image === null ? (\r\n                      <ThumbnailLetters\r\n                        // small\r\n                        rounded\r\n                        text={firstName}\r\n                        className=\"mx-2\"\r\n                        color=\"secondary\"\r\n                      />\r\n                    ) : (\r\n                      <img\r\n                        src={`${baseUrl}/${image}`}\r\n                        className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                        style={{\r\n                          width: \"110px\",\r\n                          height: \"110px\",\r\n                          objectFit: \"cover\",\r\n                          overflow: \"hidden\",\r\n                        }}\r\n                        alt=\"img\"\r\n                      />\r\n                    )}\r\n                  </button>\r\n                  <Modal\r\n                    isOpen={imageEditModal}\r\n                    toggle={() => setImageEditModal(!imageEditModal)}\r\n                    className=\"\"\r\n                    size=\"lg\"\r\n                    style={{\r\n                      borderRadius: \"10px\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                      <h2 className=\"font-weight-bold\">Profile photo</h2>\r\n                    </ModalHeader>\r\n                    <ModalBody className=\"d-flex justify-content-center align-items-center\">\r\n                      {/* <img\r\n                        src={selectedFileBase64 || `${baseUrl}/${image}`}\r\n                        className=\"rounded-circle img-thumbnail border border-3\"\r\n                        style={{\r\n                          width: \"130px\",\r\n                          height: \"130px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                        alt=\"img\"\r\n                      /> */}\r\n                      {image === null ? (\r\n                        <ThumbnailLetters\r\n                          rounded\r\n                          text={firstName}\r\n                          className=\"mx-2\"\r\n                          color=\"secondary\"\r\n                          style={{\r\n                            width: \"130px\",\r\n                            height: \"130px\",\r\n                            objectFit: \"cover\",\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          src={selectedFileBase64 || `${baseUrl}/${image}`}\r\n                          className=\"rounded-circle img-thumbnail border border-3\"\r\n                          style={{\r\n                            width: \"130px\",\r\n                            height: \"130px\",\r\n                            objectFit: \"cover\",\r\n                          }}\r\n                          alt=\"img\"\r\n                        />\r\n                      )}\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter className=\"d-flex align-items-center justify-content-center\">\r\n                      {selectedFile ? (\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          onClick={() => handleImagePost()}\r\n                          className=\"icon-button\"\r\n                          style={{ border: \"none\" }}\r\n                        >\r\n                          <i className=\"iconsminds-upload \" />\r\n                        </Button>\r\n                      ) : (\r\n                        <InputGroup\r\n                          className=\"\"\r\n                          style={{\r\n                            width: \"auto\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <div className=\"\">\r\n                            <Button\r\n                              outline\r\n                              className=\"icon-button\"\r\n                              color=\"primary\"\r\n                              style={{ border: \"none\" }}\r\n                              onClick={() =>\r\n                                document.getElementById(\"file-upload\").click()\r\n                              }\r\n                            >\r\n                              <i className=\"simple-icon-pencil\" />\r\n                            </Button>\r\n\r\n                            <Input\r\n                              id=\"file-upload\"\r\n                              type=\"file\"\r\n                              className=\"d-none\"\r\n                              onChange={handleFileChange}\r\n                            />\r\n                          </div>\r\n                        </InputGroup>\r\n                      )}\r\n\r\n                      <Button\r\n                        color=\"primary\"\r\n                        outline\r\n                        onClick={() => handleImageDelete()}\r\n                        className=\"icon-button\"\r\n                        style={{ border: \"none\" }}\r\n                      >\r\n                        <i className=\"simple-icon-trash\" />\r\n                      </Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n                </div>\r\n\r\n                {/* Modal for update profile starts */}\r\n                <Modal\r\n                  isOpen={isEditing}\r\n                  toggle={() => setIsEditing(!isEditing)}\r\n                  className=\"\"\r\n                  size=\"lg\"\r\n                  style={{\r\n                    borderRadius: \"10px\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                    <h2 className=\"font-weight-bold\">Edit Profile</h2>\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <Row className=\"\">\r\n                      <Col md=\"6\">\r\n                        <Label for=\"firstName\" className=\"text-muted\">\r\n                          <h4>First Name</h4>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"firstName\"\r\n                          value={firstName}\r\n                          onChange={(e) => setFirstName(e.target.value)}\r\n                          className=\" text-one\"\r\n                        />\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                        <Label for=\"lastName\" className=\"text-muted\">\r\n                          <h4>Last Name</h4>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"lastName\"\r\n                          value={lastName}\r\n                          onChange={(e) => setLastName(e.target.value)}\r\n                          className=\" text-one\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <br />\r\n\r\n                    <>\r\n                      <Label for=\"jobtitle\" className=\"text-muted\">\r\n                        <h4>Job Title</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"jobtitle\"\r\n                        value={jobTitle}\r\n                        onChange={(e) => setJobTitle(e.target.value)}\r\n                        className=\" text-one\"\r\n                      />\r\n                      <br />\r\n                    </>\r\n                    <>\r\n                      <Label for=\"company\" className=\"text-muted\">\r\n                        <h4>Company</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"company\"\r\n                        value={company}\r\n                        onChange={(e) => setCompany(e.target.value)}\r\n                        className=\" text-one\"\r\n                      />\r\n                      <br />\r\n                    </>\r\n\r\n                    <>\r\n                      <Label for=\"location\" className=\"text-muted\">\r\n                        <h4>Location</h4>\r\n                      </Label>\r\n\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"location\"\r\n                        value={location}\r\n                        // validate={validateLocation}\r\n                        onChange={(e) => setLocation(e.target.value)}\r\n                        className=\"form-control text-one\"\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          Select Location\r\n                        </option>\r\n                        {country.map((option) => (\r\n                          <option key={option.iso_code} value={option.iso_code}>\r\n                            {option.name}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      <br />\r\n                    </>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <>\r\n                          <Label for=\"resume\" className=\"text-muted\">\r\n                            <h4>CV</h4>\r\n                          </Label>\r\n                          <div\r\n                            className=\" p-2 my-2 d-flex text-one align-items-center justify-content-between\"\r\n                            style={{\r\n                              border: \"1px solid #ccc\",\r\n                              minWidth: \"200px\",\r\n                            }}\r\n                          >\r\n                            {resumeFileName || \"no file selected\"}\r\n                            <ButtonDropdown\r\n                              isOpen={dropdownOpen}\r\n                              toggle={toggleDropdown}\r\n                            >\r\n                              <DropdownToggle\r\n                                caret\r\n                                style={{\r\n                                  backgroundColor: \"transparent\",\r\n                                  border: \"none\",\r\n                                  padding: 0,\r\n                                }}\r\n                              >\r\n                                <i\r\n                                  className=\"fa-solid fa-ellipsis\"\r\n                                  style={{\r\n                                    color: \"#333\",\r\n                                    cursor: \"pointer\",\r\n                                  }}\r\n                                />\r\n                              </DropdownToggle>\r\n\r\n                              <DropdownMenu>\r\n                                <DropdownItem\r\n                                  onClick={() => handleView(resumeFileId)}\r\n                                >\r\n                                  view\r\n                                </DropdownItem>\r\n                                <DropdownItem\r\n                                  onClick={() => handleDelete(resumeFileId)}\r\n                                >\r\n                                  delete\r\n                                </DropdownItem>\r\n                              </DropdownMenu>\r\n                            </ButtonDropdown>\r\n                          </div>\r\n                          <InputGroup className=\"\">\r\n                            <div className=\"\">\r\n                              <button\r\n                                type=\"button\"\r\n                                style={{\r\n                                  cursor: \"pointer\",\r\n\r\n                                  background: \"none\",\r\n                                  border: \"none\",\r\n                                }}\r\n                                onClick={() =>\r\n                                  document.getElementById(\"file-upload\").click()\r\n                                }\r\n                              >\r\n                                <h5>+ Add your Resume</h5>\r\n                              </button>\r\n                              {/* <Form> */}\r\n                              <Input\r\n                                id=\"file-upload\"\r\n                                type=\"file\"\r\n                                className=\"d-none\"\r\n                                // onChange={handleFileChange1}\r\n                                // validate={validateFile}\r\n                                onChange={(e) => handleFileChange1(e)}\r\n                              />\r\n                            </div>\r\n                          </InputGroup>\r\n                          <br />\r\n                          {fileError && (\r\n                            <p style={{ color: \"red\" }}>{fileError}</p>\r\n                          )}\r\n                        </>\r\n                      </Col>\r\n                    </Row>\r\n                  </ModalBody>\r\n                  <ModalFooter\r\n                    style={{ borderTop: \"none\" }}\r\n                    className=\"d-flex align-items-center justify-content-center\"\r\n                  >\r\n                    <Button color=\"primary\" onClick={() => handleSave()}>\r\n                      Save\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      onClick={() => setIsEditing(false)}\r\n                      className=\"\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n                {/* Modal for update profile ends */}\r\n              </CardBody>\r\n              <CardBody>\r\n                <div className=\" mt-2\">\r\n                  <div className=\"text-end w-100  d-flex justify-content-end\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      style={{ border: \"none\" }}\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditing(true)}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"\">\r\n                    {/* {linkedinUrl && (\r\n                  <NavLink className=\"d-none d-md-inline-block\">\r\n                    <Button\r\n                      color=\"light\"\r\n                      className=\"font-weight-semibold icon-button\"\r\n                      size=\"large\"\r\n                      onClick={handleLinkedInClick}\r\n                    >\r\n                      <i className=\"simple-icon-social-linkedin text-primary font-weight-semibold text-one\" />\r\n                    </Button>\r\n                  </NavLink>\r\n                )}\r\n                {twitterHandle && (\r\n                  <NavLink className=\"d-none d-md-inline-block\">\r\n                    <Button\r\n                      color=\"light\"\r\n                      className=\"font-weight-semibold icon-button\"\r\n                      size=\"large\"\r\n                      onClick={handleTwitterClick}\r\n                    >\r\n                      <i className=\"simple-icon-social-twitter text-primary font-weight-semibold text-one\" />\r\n                    </Button>\r\n                  </NavLink>\r\n                )}\r\n                {website && (\r\n                  <NavLink className=\"d-none d-md-inline-block\">\r\n                    <Button\r\n                      color=\"light\"\r\n                      className=\"font-weight-semibold icon-button\"\r\n                      size=\"large\"\r\n                      onClick={handlePersonalWebsiteClick}\r\n                    >\r\n                      <i className=\"simple-icon-globe text-primary font-weight-semibold text-one\" />\r\n                    </Button>\r\n                  </NavLink>\r\n                )} */}\r\n\r\n                    <div className=\"mt-4\">\r\n                      <h2 className=\"font-weight-bold\">\r\n                        {firstName} {lastName}\r\n                      </h2>\r\n                      <h3 className=\"text-one\">\r\n                        {jobTitle} | {company}\r\n                      </h3>\r\n                      <h5 className=\"font-weight-medium\">\r\n                        <i className=\"simple-icon-location-pin text-primary\" />\r\n\r\n                        <span className=\"ml-2\">{countryName}</span>\r\n                      </h5>\r\n                      <h6 className=\"\">\r\n                        <i className=\"simple-icon-star text-primary \" />\r\n                        <span className=\"ml-2\">{`${averageStar} (${totalRatings} reviews)`}</span>\r\n                      </h6>\r\n                      <h6 className=\"text-muted\">{resumeFileName}</h6>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* profile section ends */}\r\n\r\n        {/* about section starts */}\r\n        <Row className=\"my-4 \">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row className=\"align-items-center\">\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">About</h2>\r\n\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingAbout(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <div>\r\n                  <p className=\"text-muted\">{bio}</p>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {/* about modal  */}\r\n        <Modal\r\n          isOpen={isEditingAbout}\r\n          toggle={() => setIsEditingAbout(!isEditingAbout)}\r\n          className=\"\"\r\n          size=\"lg\"\r\n          style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n        >\r\n          <ModalHeader style={{ borderBottom: \"none\" }}>\r\n            <h2 className=\"font-weight-bold\">About</h2>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <br />\r\n\r\n            <>\r\n              <Label for=\"about\" className=\"text-muted\">\r\n                <h4>About Me</h4>\r\n              </Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                id=\"about\"\r\n                value={bio}\r\n                onChange={(e) => setBio(e.target.value)}\r\n                className=\" text-one\"\r\n              />\r\n              <br />\r\n            </>\r\n\r\n            <>\r\n              <Label for=\"linkedInUrl\" className=\"text-muted\">\r\n                <h4>LinkedIn URL</h4>\r\n              </Label>\r\n              <Input\r\n                type=\"text\"\r\n                id=\"linkedInUrl\"\r\n                value={linkedinUrl}\r\n                onChange={(e) => setLinkedinUrl(e.target.value)}\r\n                className=\" text-one\"\r\n              />\r\n              <br />\r\n            </>\r\n            <>\r\n              <Label for=\"email\" className=\"text-muted\">\r\n                <h4>Twitter URL</h4>\r\n              </Label>\r\n              <Input\r\n                type=\"text\"\r\n                id=\"twitterHandle\"\r\n                value={twitterHandle}\r\n                onChange={(e) => setTwitterHandle(e.target.value)}\r\n                className=\" text-one\"\r\n              />\r\n              <p className=\"text-muted mt-1\">\r\n                Omit the &ldquo;@&rdquo; -e.g. &ldquo;dqmonn&rdquo;\r\n              </p>\r\n              <br />\r\n            </>\r\n            <>\r\n              <Label for=\"website\" className=\"text-muted\">\r\n                <h4>Personal Website URL</h4>\r\n              </Label>\r\n              <Input\r\n                type=\"text\"\r\n                id=\"website\"\r\n                value={website}\r\n                onChange={(e) => setWebsite(e.target.value)}\r\n                className=\" text-one\"\r\n              />\r\n              <br />\r\n            </>\r\n          </ModalBody>\r\n          <ModalFooter\r\n            style={{ borderTop: \"none\" }}\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n          >\r\n            <Button color=\"primary\" onClick={() => handleSaveAbout()}>\r\n              Save\r\n            </Button>{\" \"}\r\n            <Button\r\n              color=\"primary\"\r\n              outline\r\n              onClick={() => setIsEditingAbout(false)}\r\n              className=\"\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n        {/* about section ends */}\r\n\r\n        {/* skill section starts */}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row className=\"align-items-center\">\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Skills</h2>\r\n\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      style={{ border: \"none\" }}\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingButton(true)}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <div\r\n                      className=\"d-flex flex-wrap\"\r\n                      style={{ gap: \"10px\", marginTop: \"10px\" }}\r\n                    >\r\n                      {skills.map((skill, index) => (\r\n                        <Button\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          key={index}\r\n                          color={index < 3 ? \"primary\" : \"light\"}\r\n                          size=\"sm\"\r\n                        >\r\n                          {skill}\r\n                        </Button>\r\n                      ))}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n\r\n              <Modal\r\n                isOpen={isEditingButton}\r\n                toggle={() => setIsEditingButton(!isEditingButton)}\r\n                className=\"\"\r\n                size=\"lg\"\r\n                style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n              >\r\n                <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                  <h2 className=\"font-weight-bold\">Skills</h2>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                  <Row className=\"w-100 mb-3\">\r\n                    <>\r\n                      <InputGroup className=\"mb-3\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          placeholder=\"New skill\"\r\n                          value={newInputSkill}\r\n                          onChange={(e) => setNewInputSkill(e.target.value)}\r\n                          onKeyDown={(event) => {\r\n                            if (event.key === \"Enter\") {\r\n                              handleAddSkill(newInputSkill);\r\n                              setNewInputSkill(\"\");\r\n                            }\r\n                          }}\r\n                        />\r\n                        <InputGroupAddon addonType=\"append\">\r\n                          <Button\r\n                            outline\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              handleAddSkill(newInputSkill);\r\n                              setNewInputSkill(\"\");\r\n                            }}\r\n                          >\r\n                            Add Skill\r\n                          </Button>\r\n                        </InputGroupAddon>\r\n                      </InputGroup>\r\n                      {skillValidationMessage && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {skillValidationMessage}\r\n                        </div>\r\n                      )}\r\n                    </>\r\n                  </Row>\r\n                  <Row>\r\n                    <ReactSortable\r\n                      list={skills}\r\n                      setList={setSkills}\r\n                      options={{ handle: \".handle\" }}\r\n                      className=\"d-flex flex-wrap ml-2\"\r\n                    >\r\n                      {skills.map((skill, index) => (\r\n                        <Button\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          key={index}\r\n                          outline={index >= 3}\r\n                          color=\"light\"\r\n                          // color={index < 3 ? 'primary' : 'light'}\r\n                          className=\"ml-2 font-weight-semibold mx-2 d-flex align-items-center text-dark\"\r\n                          size=\"sm\"\r\n                          onClick={() => handleRemoveSkill(index)}\r\n                        >\r\n                          {skill}\r\n                          <i className=\"iconsminds-close ml-2 text-dark\" />\r\n                        </Button>\r\n                      ))}\r\n                    </ReactSortable>\r\n                    {/* <p className=\"ml-3 text-muted mt-3\">Drag skills to set top 3 (the top 3 skills will be displayed on mentor cards)</p> */}\r\n                  </Row>\r\n                </ModalBody>\r\n\r\n                <ModalFooter\r\n                  style={{ borderTop: \"none\" }}\r\n                  className=\"d-flex align-items-center justify-content-center\"\r\n                >\r\n                  <Button color=\"primary\" onClick={() => handleSaveButton()}>\r\n                    Save\r\n                  </Button>{\" \"}\r\n                  <Button\r\n                    color=\"primary\"\r\n                    outline\r\n                    onClick={() => setIsEditingButton(false)}\r\n                    className=\"\"\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </ModalFooter>\r\n              </Modal>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {/* skill section ends */}\r\n        {/* price section starts */}\r\n        <Row className=\"my-4 \">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row className=\"align-items-center\">\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Price</h2>\r\n\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingPrice(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <div>\r\n                  <h2 className=\"font-weight-semi-bold \">₹ {price}</h2>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          {/* price modal starts */}\r\n          <Modal\r\n            isOpen={isEditingPrice}\r\n            toggle={() => setIsEditingPrice(!isEditingPrice)}\r\n            className=\"\"\r\n            size=\"lg\"\r\n            style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n          >\r\n            <ModalHeader style={{ borderBottom: \"none\" }}>\r\n              <h2 className=\"font-weight-bold\">Price</h2>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <br />\r\n\r\n              <>\r\n                <Label for=\"about\" className=\"text-muted\">\r\n                  <h4>Price</h4>\r\n                </Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"about\"\r\n                  value={price}\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                  className=\" text-one\"\r\n                />\r\n                <br />\r\n              </>\r\n            </ModalBody>\r\n            <ModalFooter\r\n              style={{ borderTop: \"none\" }}\r\n              className=\"d-flex align-items-center justify-content-center\"\r\n            >\r\n              <Button color=\"primary\" onClick={() => handleSavePrice()}>\r\n                Save\r\n              </Button>{\" \"}\r\n              <Button\r\n                color=\"primary\"\r\n                outline\r\n                onClick={() => setIsEditingPrice(false)}\r\n                className=\"\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n          {/* price modal ends */}\r\n        </Row>\r\n        {/* price section ends */}\r\n        {/* new design ends */}\r\n      </Colxx>\r\n    </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default MyProfile;\r\n","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Form,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  //   ListGroup,\r\n  //   ListGroupItem,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\n// check\r\n\r\nconst MyWallet = () => {\r\n  const [balance, setBalance] = useState(0);\r\n  // const [transactionIdCounter, setTransactionIdCounter] = useState(1);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [rechargeAmount, setRechargeAmount] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // const url = `${baseUrl}/wallets`;\r\n  // const url = `${baseUrl}/wallets`;\r\n  const url1 = `${baseUrl}/api/transactions`;\r\n\r\n  const fetchDataFromServer = async () => {\r\n    try {\r\n      const response = await axios.get(url1);\r\n      const walletData = response.data;\r\n      setBalance(walletData.newBalance);\r\n      setTransactions(walletData.newTransactions);\r\n    } catch (error) {\r\n      console.error(\"Error while fetching data from the server\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDataFromServer();\r\n  }, []);\r\n\r\n  // const updateBalance = async () => {\r\n  //     try {\r\n  //       const updatedBalance = {\r\n  //         newBalance: balance\r\n  //       };\r\n\r\n  //       await axios.put(url1, updatedBalance);\r\n\r\n  //     } catch (error) {\r\n  //       console.error(\"Error updating profile\", error);\r\n  //     }\r\n  //   };\r\n\r\n  const postData = async (amount) => {\r\n    const url2 = `${baseUrl}/api/paytm/makePayment?amount=${amount}`;\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await axios.post(url2);\r\n\r\n      // console.log(\"recharge\",response)\r\n\r\n      // setTimeout(() => {\r\n      fetchDataFromServer();\r\n      // NotificationManager.success(response.data.statuses[0].message, 'Great!', 3000, null, null, '');\r\n      response.data.statuses.forEach((status) => {\r\n        NotificationManager.success(\r\n          status.message,\r\n          status.status,\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      });\r\n      setIsLoading(false);\r\n      // }, 3000);\r\n    } catch (error) {\r\n      console.error(\"Error making payment\", error);\r\n      // setTimeout(() => {\r\n      NotificationManager.warning(\r\n        \"Something went wrong\",\r\n        \"Oops!\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n      setIsLoading(false);\r\n      // }, 3000);\r\n    }\r\n  };\r\n  const handleRecharge = () => {\r\n    const amount = parseFloat(rechargeAmount);\r\n    // console.log(\"rech\", amount)\r\n\r\n    // if (!Number.isNaN(amount) && amount > 0) {\r\n    //   const newBalance = balance + amount;\r\n    //   const newTransactions = {\r\n    //     id: transactionIdCounter,\r\n    //     type: \"Recharge\",\r\n    //     amount,\r\n    //     status: \"Success\",\r\n    //     paymentmethod: \"UPI\",\r\n    //     date: new Date(),\r\n    //   };\r\n\r\n    //   setBalance(newBalance);\r\n    //   setTransactions((prevTransactions) => [\r\n    //     newTransactions,\r\n    //     ...prevTransactions,\r\n    // ]);\r\n    //   setTransactionIdCounter((prevCounter) => prevCounter + 1);\r\n    setRechargeAmount(\"\");\r\n    //   updateBalance()\r\n\r\n    postData(amount);\r\n  };\r\n\r\n  const handleRechargeSubmit = (e) => {\r\n    e.preventDefault();\r\n    // handleRecharge();\r\n  };\r\n\r\n  const handleAmountButtonClick = (amount) => {\r\n    setRechargeAmount((prevAmount) =>\r\n      (parseFloat(prevAmount || 0) + amount).toString()\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mt-4\">\r\n      <Container className=\"p-4\">\r\n        <h1>\r\n          Wallet Balance: <span className=\"font-weight-bold\">₹{balance}</span>\r\n        </h1>\r\n\r\n        <Form onSubmit={handleRechargeSubmit} className=\"mb-3\">\r\n          <InputGroup className=\"mb-3\">\r\n            <InputGroupAddon addonType=\"prepend\">₹</InputGroupAddon>\r\n            <Input\r\n              type=\"number\"\r\n              placeholder=\"Enter Amount\"\r\n              value={rechargeAmount}\r\n              // onChange={(e) => setRechargeAmount(e.target.value)}\r\n              onChange={({ target: { value } }) => {\r\n                // Convert to a valid positive number string or empty value\r\n                if (/^\\d*$/.test(value)) {\r\n                  setRechargeAmount(value);\r\n                }\r\n              }}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"-\" || e.key === \"+\" || e.key === \"e\") {\r\n                  e.preventDefault(); // Prevent these characters from being entered\r\n                }\r\n              }}\r\n              className=\"col-12 col-md-3\"\r\n            />\r\n          </InputGroup>\r\n          <Row>\r\n            <Button\r\n              color=\"primary\"\r\n              outline\r\n              className=\"mr-2 ml-4 mb-4\"\r\n              onClick={() => handleAmountButtonClick(500)}\r\n            >\r\n              + ₹500\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              outline\r\n              className=\"mr-2 mb-4\"\r\n              onClick={() => handleAmountButtonClick(1000)}\r\n            >\r\n              + ₹1000\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              outline\r\n              className=\"mb-4\"\r\n              onClick={() => handleAmountButtonClick(1500)}\r\n            >\r\n              + ₹1500\r\n            </Button>\r\n          </Row>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            onClick={handleRecharge}\r\n            className={`col-12 col-md-3 btn-shadow btn-multiple-state ${\r\n              isLoading ? \"show-spinner\" : \"\"\r\n            }`}\r\n          >\r\n            <span className=\"spinner d-inline-block\">\r\n              <span className=\"bounce1\" />\r\n              <span className=\"bounce2\" />\r\n              <span className=\"bounce3\" />\r\n            </span>\r\n            <span className=\"label\">Add money to Wallet</span>\r\n          </Button>\r\n        </Form>\r\n\r\n        <div className=\"mt-4\">\r\n          <h2>Recent Transactions</h2>\r\n          {/* <ListGroup> */}\r\n          {transactions.map((transaction) => (\r\n            <Card key={transaction.id} className=\"mb-4 p-2\">\r\n              <div className=\"d-flex flex-wrap\">\r\n                <div className=\"mr-2\">\r\n                  <strong>Transaction id:</strong> {transaction.id}\r\n                </div>\r\n                <div className=\"mr-2\">\r\n                  <strong>Amount:</strong> ₹{Math.abs(transaction.amount)}\r\n                </div>\r\n                <div className=\"mr-2\">\r\n                  <strong>Status:</strong> {transaction.status}\r\n                </div>\r\n                <div className=\" mr-2\">\r\n                  <strong>Payment Method:</strong> {transaction.paymentmethod}\r\n                </div>\r\n                <div className=\" mr-2\">\r\n                  <strong>Date:</strong>{\" \"}\r\n                  <TimestampConverter\r\n                    timeStamp={transaction.date}\r\n                    format=\"datetime\"\r\n                  />\r\n                </div>\r\n                <div className=\"mr-2\">\r\n                  <strong>Description:</strong> {transaction.description}\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          ))}\r\n          {/* </ListGroup> */}\r\n        </div>\r\n      </Container>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MyWallet;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  //   CardTitle,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\n\r\nconst ViewOtherListing = () => {\r\n  const [data, setData] = useState();\r\n  const [copied, setCopied] = useState(false);\r\n  const { id } = useParams();\r\n  const url = `${baseUrl}/api/posts/other-post/${id}`;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await axios.get(url);\r\n        setData(res.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  const handleCopyLink = async () => {\r\n    try {\r\n      if (data) {\r\n        await navigator.clipboard.writeText(window.location.href);\r\n        setCopied(true);\r\n      }\r\n      setTimeout(() => {\r\n        setCopied(false);\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error(\"Error copying link:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row className=\"mb-2\">\r\n      <Colxx xxs=\"12\">\r\n        <Card className=\"mx-auto\" style={{ maxWidth: \"900px\" }}>\r\n          <CardBody className=\"p-4\">\r\n            {data && (\r\n              <>\r\n                <Row>\r\n                  <Col className=\"d-flex flex-row mb-3\">\r\n                    <NavLink to=\"#\" location={{}}>\r\n                      <img\r\n                        src=\"https://gogo-react.coloredstrategies.com/assets/img/profiles/l-1.jpg\"\r\n                        alt=\"thumbnail\"\r\n                        className=\"img-thumbnail border-0 rounded-circle list-thumbnail align-self-center xsmall\"\r\n                      />\r\n                    </NavLink>\r\n                    <div className=\"pl-3\">\r\n                      <NavLink to=\"#\" location={{}}>\r\n                        <p className=\"font-weight-medium mb-0 \">Name</p>\r\n                        <p className=\"text-muted mb-0 text-small\">\r\n                          Posted on{\" \"}\r\n                          <TimestampConverter\r\n                            timeStamp={data.postedOn}\r\n                            format=\"datetime\"\r\n                          />\r\n                        </p>\r\n                      </NavLink>\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"text-right\">\r\n                    {copied && (\r\n                      <span className=\"text-success mr-2\">\r\n                        Link copied to clipboard!\r\n                      </span>\r\n                    )}\r\n                    <Button\r\n                      outline\r\n                      color=\"primary\"\r\n                      className=\"mr-2\"\r\n                      size=\"xs\"\r\n                      onClick={handleCopyLink}\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        className=\"bi bi-copy\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z\"\r\n                        />\r\n                      </svg>{\" \"}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <h1>{data.title}</h1>\r\n\r\n                {/* <div>{data.description}</div> */}\r\n                <div dangerouslySetInnerHTML={{ __html: data.description }} />\r\n                <Row className=\"\">\r\n                  <Col className=\"\">\r\n                    {data.interestedCount && (\r\n                      <div className=\"text-muted mt-2\">\r\n                        {data.interestedCount} people have shown interest\r\n                      </div>\r\n                    )}\r\n                  </Col>\r\n                  <Col className=\"text-right\">\r\n                    <Button\r\n                      outline\r\n                      color=\"primary\"\r\n                      size=\"xs\"\r\n                      //   onClick={() => handleInterest(data.title)}\r\n                    >\r\n                      I&apos;m interested\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ViewOtherListing;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  //   CardTitle,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\n\r\nconst ViewJobListing = () => {\r\n  const [copied, setCopied] = useState(false);\r\n  const [data, setData] = useState();\r\n  const { id } = useParams();\r\n  const url = `${baseUrl}/api/posts/job-post/${id}`;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await axios.get(url);\r\n        setData(res.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  const handleCopyLink = async () => {\r\n    try {\r\n      if (data) {\r\n        await navigator.clipboard.writeText(window.location.href);\r\n        setCopied(true);\r\n      }\r\n      setTimeout(() => {\r\n        setCopied(false);\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error(\"Error copying link:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row className=\"mb-2\">\r\n      <Colxx xxs=\"12\">\r\n        <Card className=\"mx-auto\" style={{ maxWidth: \"900px\" }}>\r\n          <CardBody className=\"p-4\">\r\n            {data && (\r\n              <>\r\n                <Row>\r\n                  <Col className=\"d-flex flex-row mb-3\">\r\n                    <NavLink to=\"#\" location={{}}>\r\n                      <img\r\n                        src=\"https://gogo-react.coloredstrategies.com/assets/img/profiles/l-1.jpg\"\r\n                        alt=\"thumbnail\"\r\n                        className=\"img-thumbnail border-0 rounded-circle list-thumbnail align-self-center xsmall\"\r\n                      />\r\n                    </NavLink>\r\n                    <div className=\"pl-3\">\r\n                      <NavLink to=\"#\" location={{}}>\r\n                        <p className=\"font-weight-medium mb-0 \">Name</p>\r\n                        <p className=\"text-muted mb-0 text-small\">\r\n                          Posted on{\" \"}\r\n                          <TimestampConverter\r\n                            timeStamp={data.postedOn}\r\n                            format=\"datetime\"\r\n                          />\r\n                        </p>\r\n                      </NavLink>\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"text-right\">\r\n                    {copied && (\r\n                      <span className=\"text-success mr-2\">\r\n                        Link copied to clipboard!\r\n                      </span>\r\n                    )}\r\n                    <Button\r\n                      outline\r\n                      color=\"primary\"\r\n                      className=\"mr-2\"\r\n                      size=\"xs\"\r\n                      onClick={handleCopyLink}\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        className=\"bi bi-copy\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z\"\r\n                        />\r\n                      </svg>{\" \"}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <h1>{data.title}</h1>\r\n\r\n                <Row className=\"mt-2 mb-2\">\r\n                  <Col>\r\n                    <i className=\"iconsminds-office text-primary\" />{\" \"}\r\n                    {data.company}\r\n                  </Col>\r\n                  <Col>\r\n                    <i className=\"iconsminds-engineering text-primary\" />{\" \"}\r\n                    {data.jobTitle}\r\n                  </Col>\r\n                  <Col>\r\n                    {\" \"}\r\n                    <i className=\"simple-icon-location-pin text-primary\" />{\" \"}\r\n                    {data.jobLocation}\r\n                  </Col>\r\n                  <Col>\r\n                    {\" \"}\r\n                    <i className=\"iconsminds-building text-primary\" />{\" \"}\r\n                    {data.workPlaceType}\r\n                  </Col>\r\n                  <Col>\r\n                    {\" \"}\r\n                    <i className=\"simple-icon-briefcase text-primary\" />{\" \"}\r\n                    {data.employmentType}\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"mt-3\">\r\n                  <Col>\r\n                    {data.skills.map((skill) => (\r\n                      <Button\r\n                        key={skill}\r\n                        color=\"light\"\r\n                        className=\"mb-2 font-weight-semibold mx-2\"\r\n                        size=\"xs\"\r\n                      >\r\n                        {skill}\r\n                      </Button>\r\n                    ))}\r\n                  </Col>\r\n                </Row>\r\n                <div\r\n                  className=\"mt-2\"\r\n                  dangerouslySetInnerHTML={{ __html: data.description }}\r\n                />\r\n                <Row className=\"\">\r\n                  <Col className=\"\">\r\n                    <div className=\"text-muted mt-2\">\r\n                      {data.interestedCount} people have shown interest\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"text-right\">\r\n                    <Button\r\n                      outline\r\n                      color=\"primary\"\r\n                      size=\"xs\"\r\n                      //   onClick={() => handleInterest(data.title)}\r\n                    >\r\n                      I&apos;m interested\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ViewJobListing;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  //   CardTitle,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\n\r\nconst ViewOtherListing = () => {\r\n  const [data, setData] = useState();\r\n  const [copied, setCopied] = useState(false);\r\n  const { id } = useParams();\r\n  const url = `${baseUrl}/api/posts/stay-post/${id}`;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await axios.get(url);\r\n        setData(res.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  const handleCopyLink = async () => {\r\n    try {\r\n      if (data) {\r\n        await navigator.clipboard.writeText(window.location.href);\r\n        setCopied(true);\r\n      }\r\n      setTimeout(() => {\r\n        setCopied(false);\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error(\"Error copying link:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row className=\"mb-2\">\r\n      <Colxx xxs=\"12\">\r\n        <Card className=\"mx-auto\" style={{ maxWidth: \"900px\" }}>\r\n          <CardBody className=\"p-4\">\r\n            {data && (\r\n              <>\r\n                <Row>\r\n                  <Col className=\"d-flex flex-row mb-3\">\r\n                    <NavLink to=\"#\" location={{}}>\r\n                      <img\r\n                        src=\"https://gogo-react.coloredstrategies.com/assets/img/profiles/l-1.jpg\"\r\n                        alt=\"thumbnail\"\r\n                        className=\"img-thumbnail border-0 rounded-circle list-thumbnail align-self-center xsmall\"\r\n                      />\r\n                    </NavLink>\r\n                    <div className=\"pl-3\">\r\n                      <NavLink to=\"#\" location={{}}>\r\n                        <p className=\"font-weight-medium mb-0 \">Name</p>\r\n                        <p className=\"text-muted mb-0 text-small\">\r\n                          Posted on{\" \"}\r\n                          <TimestampConverter\r\n                            timeStamp={data.postedOn}\r\n                            format=\"datetime\"\r\n                          />\r\n                        </p>\r\n                      </NavLink>\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"text-right\">\r\n                    {copied && (\r\n                      <span className=\"text-success mr-2\">\r\n                        Link copied to clipboard!\r\n                      </span>\r\n                    )}\r\n                    <Button\r\n                      outline\r\n                      color=\"primary\"\r\n                      className=\"mr-2\"\r\n                      size=\"xs\"\r\n                      onClick={handleCopyLink}\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        className=\"bi bi-copy\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z\"\r\n                        />\r\n                      </svg>{\" \"}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <h1>{data.title}</h1>\r\n\r\n                <Row className=\"mb-2\">\r\n                  <Col md={5}>\r\n                    <i className=\"iconsminds-office text-primary\" />{\" \"}\r\n                    <span data-toggle=\"tooltip\" title=\"Apartment Type\">\r\n                      {data.apartmentType}\r\n                    </span>{\" \"}\r\n                    |{\" \"}\r\n                    <span data-toggle=\"tooltip\" title=\"Floor\">\r\n                      {data.floor}\r\n                    </span>{\" \"}\r\n                    |{\" \"}\r\n                    <span data-toggle=\"tooltip\" title=\"BHK Type\">\r\n                      {data.bhkType}\r\n                    </span>\r\n                  </Col>\r\n                  {/* <Col>\r\n                    <i className=\"iconsminds-engineering text-primary\" />{\" \"}\r\n                    {data.BHKType}\r\n                  </Col> */}\r\n                  <Col>\r\n                    {\" \"}\r\n                    <i className=\"simple-icon-people text-primary\" />{\" \"}\r\n                    <span data-toggle=\"tooltip\" title=\"Room mate\">\r\n                      {data.roomMate}\r\n                    </span>\r\n                  </Col>\r\n                  <Col>\r\n                    {\" \"}\r\n                    {/* <i className=\"iconsminds-building text-primary\" /> */}\r\n                    <span className=\"text-primary\">₹</span>{\" \"}\r\n                    <span data-toggle=\"tooltip\" title=\"Expected Rent\">\r\n                      {data.expectedRent}\r\n                    </span>\r\n                  </Col>\r\n                  <Col>\r\n                    {/* <a href=\"#\" class=\"btn btn-primary\" title=\"This is a hover tooltip\">Hover me!</a> */}{\" \"}\r\n                    <i className=\"iconsminds-car text-primary\" />\r\n                    {/* <i className=\"iconsminds-motorcycle text-primary\"/> */}\r\n                    {\"  \"}\r\n                    <span data-toggle=\"tooltip\" title=\"Parking\">\r\n                      {data.parking}\r\n                    </span>\r\n                  </Col>\r\n                </Row>\r\n                {/* <div className=\"mt-2\">{data.description}</div> */}\r\n                <div dangerouslySetInnerHTML={{ __html: data.description }} />\r\n                <div className=\"mt-2\">\r\n                  <strong>Contact details :</strong> {data.contact}\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                  <strong>Expected deposit amount :</strong>{\" \"}\r\n                  {data.expectedDeposit}\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                  <strong>Maintenance amount :</strong> {data.maintenanceAmount}\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                  <strong>Available from: </strong>\r\n                  <TimestampConverter\r\n                    timeStamp={data.availableFrom}\r\n                    format=\"date\"\r\n                  />\r\n                </div>\r\n\r\n                <Row className=\"\">\r\n                  <Col className=\"\">\r\n                    {data.interestedCount && (\r\n                      <div className=\"text-muted mt-2\">\r\n                        {data.interestedCount} people have shown interest\r\n                      </div>\r\n                    )}\r\n                  </Col>\r\n                  <Col className=\"text-right\">\r\n                    <Button\r\n                      outline\r\n                      color=\"primary\"\r\n                      size=\"xs\"\r\n                      //   onClick={() => handleInterest(data.title)}\r\n                    >\r\n                      I&apos;m interested\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ViewOtherListing;\r\n","import { Colxx } from 'components/common/CustomBootstrap';\r\nimport React from 'react';\r\nimport { Button, Card,CardBody,Row, Pagination,\r\n  PaginationItem,\r\n  PaginationLink, } from 'reactstrap';\r\n\r\n\r\nconst LawQuestionAnswer = () => {\r\n  return (\r\n    <div>\r\n    <Row>\r\n      <Colxx>\r\n      <h1 className='text-center text-large w-100 py-2'>Lawyer questions and answers</h1>\r\n      <div>\r\n      <div className='mt-2'>\r\n      <div className='d-flex justify-content-between'>\r\n      <h2 className='font-weight-semibold'>Questions</h2>\r\n      <Button color=\"primary\" className=''>Recent</Button>\r\n      </div>\r\n      \r\n        <h3 className=''>view all 10 questions</h3>\r\n      \r\n        \r\n      </div>\r\n         <Card className='mt-3'>\r\n          <CardBody>\r\n           <div className=''>\r\n           <div className='d-flex justify-content-between'>\r\n           <h3>Question 1</h3>\r\n            <h3>Date and year</h3>\r\n           </div>\r\n            \r\n            <hr/>\r\n           </div>\r\n           <div className=''>\r\n           <div className='d-flex justify-content-between'>\r\n           <h3>Question 2</h3>\r\n            <h3>Date and year</h3>\r\n           </div>\r\n           <hr/>\r\n           </div>\r\n           <div className=''>\r\n           <div className='d-flex justify-content-between'>\r\n           <h3>Question 3</h3>\r\n            <h3>Date and year</h3>\r\n           </div>\r\n           <hr/>\r\n           </div>\r\n          </CardBody>\r\n         </Card>\r\n         <Row>\r\n        <Colxx xxs=\"12\" >\r\n         <div  className=' '>\r\n         <Pagination aria-label=\"Page navigation example\"  listClassName=\"justify-content-center my-2\">\r\n                <PaginationItem>\r\n                  <PaginationLink className=\"first\" href=\"#\">\r\n                    <i className=\"simple-icon-control-start\" />\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink className=\"prev\" href=\"#\">\r\n                    <i className=\"simple-icon-arrow-left\" />\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink href=\"#\">1</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem active>\r\n                  <PaginationLink href=\"#\">2</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink href=\"#\">3</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink className=\"next\" href=\"#\">\r\n                    <i className=\"simple-icon-arrow-right\" />\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink className=\"last\" href=\"#\">\r\n                    <i className=\"simple-icon-control-end\" />\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n              </Pagination>\r\n         </div>\r\n        \r\n        </Colxx>\r\n      </Row>\r\n      </div>\r\n      </Colxx>\r\n    </Row>\r\n    <hr/>\r\n    <Row>\r\n      <Colxx>\r\n      <div>\r\n      <div className='mt-4'>\r\n      <div className='d-flex justify-content-between'>\r\n      <h2 className='font-weight-semibold'>Answers</h2>\r\n      <Button color=\"primary\">Recent</Button>\r\n      </div>\r\n      \r\n        <h3>view all 10 answers</h3>\r\n        \r\n      </div>\r\n         <Card className='mt-3'>\r\n          <CardBody>\r\n           <div className=''>\r\n           <div className='d-flex justify-content-between'>\r\n           <h3>Answer 1</h3>\r\n            <h3>Date and year</h3>\r\n           </div>\r\n            \r\n            <hr/>\r\n           </div>\r\n           <div className=''>\r\n           <div className='d-flex justify-content-between'>\r\n           <h3>Answer 2</h3>\r\n            <h3>Date and year</h3>\r\n           </div>\r\n           <hr/>\r\n           </div>\r\n           <div className=''>\r\n           <div className='d-flex justify-content-between'>\r\n           <h3>Answer 3</h3>\r\n            <h3>Date and year</h3>\r\n           </div>\r\n           <hr/>\r\n           </div>\r\n          </CardBody>\r\n         </Card>\r\n         <Row>\r\n        <Colxx xxs=\"12\" >\r\n         <div  className=' '>\r\n         <Pagination aria-label=\"Page navigation example\"  listClassName=\"justify-content-center my-2\">\r\n                <PaginationItem>\r\n                  <PaginationLink className=\"first\" href=\"#\">\r\n                    <i className=\"simple-icon-control-start\" />\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink className=\"prev\" href=\"#\">\r\n                    <i className=\"simple-icon-arrow-left\" />\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink href=\"#\">1</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem active>\r\n                  <PaginationLink href=\"#\">2</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink href=\"#\">3</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink className=\"next\" href=\"#\">\r\n                    <i className=\"simple-icon-arrow-right\" />\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink className=\"last\" href=\"#\">\r\n                    <i className=\"simple-icon-control-end\" />\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n              </Pagination>\r\n         </div>\r\n        \r\n        </Colxx>\r\n      </Row>\r\n      </div>\r\n      </Colxx>\r\n    </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LawQuestionAnswer;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst JobList = () => {\r\n  const [joblist, setJobList] = useState(\"\");\r\n  // const url=`${baseUrl}/api/lawyer/job/client`;\r\n\r\n  // Backend url\r\n  const url = `${baseUrl}/api/lawyer/job/client`;\r\n  const history = useHistory();\r\n  // this file is logged by client\r\n  useEffect(() => {\r\n    const LawyerJobsList = async () => {\r\n      try {\r\n        const response = await axios.get(url);\r\n        setJobList(response.data);\r\n      } catch (error) {\r\n        if (error.response) {\r\n          ToasterComponent(\"error\", error.response.data.statuses);\r\n        } else {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      }\r\n    };\r\n    LawyerJobsList();\r\n  }, [url]);\r\n  console.log(\"Job list state:\", joblist);\r\n\r\n  const handleKeyPress = (event, path) => {\r\n    if (event.key === \"Enter\" || event.key === \" \") {\r\n      history.push(path);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto\">\r\n        <h1 className=\"font-weight-bold\">In Progress Jobs</h1>\r\n        {joblist && joblist.inProgress && joblist.inProgress.length > 0 ? (\r\n          joblist.inProgress.map((j) => {\r\n            const createdAtDate = new Date(j.createdAt);\r\n            const formattedDate = `${createdAtDate.toLocaleDateString()} ${createdAtDate.toLocaleTimeString()}`;\r\n\r\n            const modifiedAtDate = new Date(j.modifiedAt);\r\n            const formattedModifiedAt = `${modifiedAtDate.toLocaleDateString()} ${modifiedAtDate.toLocaleTimeString()}`;\r\n\r\n            return (\r\n              <Card\r\n                key={j.id}\r\n                className=\"my-2\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  history.push(`/app/jobsdetails/${j.id}`, {\r\n                    lawyerName: j.lawyerName,\r\n                    lawyerId: j.lawyerId,\r\n                  })\r\n                }\r\n              >\r\n                <CardBody>\r\n                  <div className=\"d-flex justify-content-between flex-wrap\">\r\n                    <div className=\"d-flex flex-column flex-wrap\">\r\n                      <div className=\"d-flex align-items-center flex-wrap\">\r\n                        <div className=\"\">\r\n                          {/* <ThumbnailLetters\r\n                            rounded\r\n                            text={j.lawyerName}\r\n                            className=\"border border-1 mr-3 \"\r\n                          /> */}\r\n                          {j.imageUrl == null ? (\r\n                            <ThumbnailLetters\r\n                              rounded\r\n                              text={j.lawyerName}\r\n                              className=\"border border-1 mr-3\"\r\n                            />\r\n                          ) : (\r\n                            <img\r\n                              src={`${baseUrl}/${j.imageUrl}`}\r\n                              alt={j.lawyerName}\r\n                              className=\"border border-1 mr-3\"\r\n                              style={{\r\n                                width: \"90px\",\r\n                                height: \"90px\",\r\n                                borderRadius: \"50%\",\r\n                                objectFit: \"cover\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                        <div className=\"d-flex flex-column \">\r\n                          <div\r\n                            role=\"button\"\r\n                            tabIndex={0}\r\n                            onClick={() =>\r\n                              history.push(`/app/lawyerprofile/${j.lawyerId}`, {\r\n                                lawyerId: j.lawyerId,\r\n                              })\r\n                            }\r\n                            onKeyPress={(event) =>\r\n                              handleKeyPress(\r\n                                event,\r\n                                `/app/lawyerprofile/${j.lawyerId}`\r\n                              )\r\n                            }\r\n                            style={{ cursor: \"pointer\" }}\r\n                          >\r\n                            <h2 className=\"text-primary\">{j.lawyerName}</h2>\r\n                          </div>\r\n\r\n                          <h4>\r\n                            Job Name:\r\n                            <span className=\"font-weight-semibold\">\r\n                              {\" \"}\r\n                              {j.jobName}\r\n                            </span>\r\n                          </h4>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-column mt-sm-2\">\r\n                      <h4>\r\n                        Status:\r\n                        <span className=\"font-weight-semibold\">\r\n                          {\" \"}\r\n                          {j.status}\r\n                        </span>{\" \"}\r\n                      </h4>\r\n                      <h4>\r\n                        Created At:\r\n                        <span className=\"text-muted\">\r\n                          {\" \"}\r\n                          {formattedDate}\r\n                        </span>{\" \"}\r\n                      </h4>\r\n                      <h4>\r\n                        Modified At:\r\n                        <span className=\"text-muted\">\r\n                          {\" \"}\r\n                          {formattedModifiedAt}\r\n                        </span>\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            );\r\n          })\r\n        ) : (\r\n          <div>\r\n            <Card>\r\n              <CardBody>\r\n                <h2 className=\"text-center\">No In Progress Jobs</h2>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </Colxx>\r\n\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto\">\r\n        <h1 className=\"font-weight-bold my-2\">Completed Jobs</h1>\r\n        {joblist && joblist.completed && joblist.completed.length > 0 ? (\r\n          joblist.completed.map((j) => {\r\n            const createdAtDate = new Date(j.createdAt);\r\n            const formattedDate = `${createdAtDate.toLocaleDateString()} ${createdAtDate.toLocaleTimeString()}`;\r\n\r\n            const modifiedAtDate = new Date(j.modifiedAt);\r\n            const formattedModifiedAt = `${modifiedAtDate.toLocaleDateString()} ${modifiedAtDate.toLocaleTimeString()}`;\r\n\r\n            return (\r\n              <Card\r\n                key={j.id}\r\n                className=\"my-2\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  history.push(`/app/jobsdetails/${j.id}`, {\r\n                    lawyerName: j.lawyerName,\r\n                    lawyerId: j.lawyerId,\r\n                  })\r\n                }\r\n              >\r\n                <CardBody>\r\n                  <div className=\"d-flex justify-content-between flex-wrap\">\r\n                    <div className=\"d-flex align-items-center flex-wrap\">\r\n                      <div className=\"\">\r\n                        {/* <ThumbnailLetters\r\n                          rounded\r\n                          text={j.lawyerName}\r\n                          className=\"border border-1 mr-3 \"\r\n                        /> */}\r\n                        {j.imageUrl == null ? (\r\n                          <ThumbnailLetters\r\n                            rounded\r\n                            text={j.lawyerName}\r\n                            className=\"border border-1 mr-3\"\r\n                          />\r\n                        ) : (\r\n                          <img\r\n                            src={`${baseUrl}/${j.imageUrl}`}\r\n                            alt={j.lawyerName}\r\n                            className=\"border border-1 mr-3\"\r\n                            style={{\r\n                              width: \"90px\",\r\n                              height: \"90px\",\r\n                              borderRadius: \"50%\",\r\n                              objectFit: \"cover\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      <div className=\"d-flex flex-column \">\r\n                        <h2 className=\"text-primary\">{j.lawyerName}</h2>\r\n                        <h4>\r\n                          Job Name:\r\n                          <span className=\"font-weight-semibold\">\r\n                            {\" \"}\r\n                            {j.jobName}\r\n                          </span>\r\n                        </h4>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-column mt-sm-2\">\r\n                      <h4>\r\n                        Status:\r\n                        <span className=\"font-weight-semibold\">\r\n                          {\" \"}\r\n                          {j.status}\r\n                        </span>{\" \"}\r\n                      </h4>\r\n                      <h4>\r\n                        Created At:\r\n                        <span className=\"text-muted\">\r\n                          {\" \"}\r\n                          {formattedDate}\r\n                        </span>{\" \"}\r\n                      </h4>\r\n                      <h4>\r\n                        Modified At:\r\n                        <span className=\"text-muted\">\r\n                          {\" \"}\r\n                          {formattedModifiedAt}\r\n                        </span>\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            );\r\n          })\r\n        ) : (\r\n          <div>\r\n            <Card>\r\n              <CardBody>\r\n                <h2 className=\"text-center\">No Completed Jobs</h2>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobList;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\n// import ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst LawyerJobList = () => {\r\n  const [joblist, setJobList] = useState(\"\");\r\n  // const url=`${baseUrl}/lawyerJobList`;\r\n  const history = useHistory();\r\n  // Backend url\r\n  const url = `${baseUrl}/api/lawyer/job`;\r\n  // this file is logged by lawyer\r\n\r\n  useEffect(() => {\r\n    const LawyerJobsList = async () => {\r\n      try {\r\n        const response = await axios.get(url);\r\n        setJobList(response.data);\r\n      } catch (error) {\r\n        if (error.response) {\r\n          // ToasterComponent(\"error\", error.response.data.statuses);\r\n        } else {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      }\r\n    };\r\n    LawyerJobsList();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto\">\r\n        <h1 className=\"font-weight-bold\">In Progress Jobs</h1>\r\n        {joblist && joblist.inProgress && joblist.inProgress.length > 0 ? (\r\n          joblist.inProgress.map((j) => {\r\n            const createdAtDate = new Date(j.createdAt);\r\n            const formattedDate = `${createdAtDate.toLocaleDateString()} ${createdAtDate.toLocaleTimeString()}`;\r\n\r\n            const modifiedAtDate = new Date(j.modifiedAt);\r\n            const formattedModifiedAt = `${modifiedAtDate.toLocaleDateString()} ${modifiedAtDate.toLocaleTimeString()}`;\r\n\r\n            return (\r\n              <Card\r\n                key={j.id}\r\n                className=\"my-2\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  history.push(`/app/jobsdetails/${j.id}`, {\r\n                    clientName: j.clientName,\r\n                  })\r\n                }\r\n              >\r\n                <CardBody>\r\n                  <div className=\"d-flex justify-content-between flex-wrap \">\r\n                    <div className=\"d-flex align-items-center flex-wrap\">\r\n                      <div className=\"\">\r\n                        {/* <ThumbnailLetters\r\n                          rounded\r\n                          text={j.clientName}\r\n                          className=\"border border-1 mr-3 \"\r\n                        /> */}\r\n                        {j.imageUrl == null ? (\r\n                          <ThumbnailLetters\r\n                            rounded\r\n                            text={j.clientName}\r\n                            className=\"border border-1 mr-3\"\r\n                          />\r\n                        ) : (\r\n                          <img\r\n                            src={`${baseUrl}/${j.imageUrl}`}\r\n                            alt={j.clientName}\r\n                            className=\"border border-1 mr-3\"\r\n                            style={{\r\n                              width: \"90px\",\r\n                              height: \"90px\",\r\n                              borderRadius: \"50%\",\r\n                              objectFit: \"cover\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      <div className=\"d-flex flex-column \">\r\n                        <h2 className=\"text-primary\">{j.clientName}</h2>\r\n                        <h4>\r\n                          Job Name:\r\n                          <span className=\"font-weight-semibold\">\r\n                            {\" \"}\r\n                            {j.jobName}\r\n                          </span>\r\n                        </h4>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-column mt-sm-2 \">\r\n                      <h4>\r\n                        Status:\r\n                        <span className=\"font-weight-semibold\">\r\n                          {\" \"}\r\n                          {j.status}\r\n                        </span>{\" \"}\r\n                      </h4>\r\n\r\n                      <h4>\r\n                        Created At:\r\n                        <span className=\"text-muted\">\r\n                          {\" \"}\r\n                          {formattedDate}\r\n                        </span>{\" \"}\r\n                      </h4>\r\n                      <h4>\r\n                        Modified At:\r\n                        <span className=\"text-muted\">\r\n                          {\" \"}\r\n                          {formattedModifiedAt}\r\n                        </span>\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            );\r\n          })\r\n        ) : (\r\n          <div>\r\n            <Card>\r\n              <CardBody>\r\n                <h2 className=\"text-center\">No In Progress Jobs</h2>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </Colxx>\r\n\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto\">\r\n        <h1 className=\"font-weight-bold my-2\">Completed Jobs</h1>\r\n        {joblist && joblist.completed && joblist.completed.length > 0 ? (\r\n          joblist.completed.map((j) => {\r\n            const createdAtDate = new Date(j.createdAt);\r\n            const formattedDate = `${createdAtDate.toLocaleDateString()} ${createdAtDate.toLocaleTimeString()}`;\r\n\r\n            const modifiedAtDate = new Date(j.modifiedAt);\r\n            const formattedModifiedAt = `${modifiedAtDate.toLocaleDateString()} ${modifiedAtDate.toLocaleTimeString()}`;\r\n\r\n            return (\r\n              <Card\r\n                key={j.id}\r\n                className=\"my-2\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  history.push(`/app/jobsdetails/${j.id}`, {\r\n                    clientName: j.clientName,\r\n                    clientId: j.clientUserId,\r\n                  })\r\n                }\r\n              >\r\n                <CardBody>\r\n                  <div className=\"d-flex justify-content-between flex-wrap\">\r\n                    <div className=\"d-flex align-items-center flex-wrap\">\r\n                      <div className=\"\">\r\n                        {/* <ThumbnailLetters\r\n                          rounded\r\n                          text={j.clientName}\r\n                          className=\"border border-1 mr-3 \"\r\n                        /> */}\r\n                        {j.imageUrl == null ? (\r\n                          <ThumbnailLetters\r\n                            rounded\r\n                            text={j.clientName}\r\n                            className=\"border border-1 mr-3\"\r\n                          />\r\n                        ) : (\r\n                          <img\r\n                            src={`${baseUrl}/${j.imageUrl}`}\r\n                            alt={j.clientName}\r\n                            className=\"border border-1 mr-3\"\r\n                            style={{\r\n                              width: \"90px\",\r\n                              height: \"90px\",\r\n                              borderRadius: \"50%\",\r\n                              objectFit: \"cover\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      <div className=\"d-flex flex-column \">\r\n                        <h2 className=\"text-primary\">{j.clientName}</h2>\r\n                        <h4>\r\n                          Job Name:\r\n                          <span className=\"font-weight-semibold\">\r\n                            {\" \"}\r\n                            {j.jobName}\r\n                          </span>\r\n                        </h4>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-column mt-sm-2\">\r\n                      <h4>\r\n                        Status:\r\n                        <span className=\"font-weight-semibold\">\r\n                          {\" \"}\r\n                          {j.status}\r\n                        </span>{\" \"}\r\n                      </h4>\r\n                      <h4>\r\n                        Created At:\r\n                        <span className=\"text-muted\">\r\n                          {\" \"}\r\n                          {formattedDate}\r\n                        </span>{\" \"}\r\n                      </h4>\r\n                      <h4>\r\n                        Modified At:\r\n                        <span className=\"text-muted\">\r\n                          {\" \"}\r\n                          {formattedModifiedAt}\r\n                        </span>\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            );\r\n          })\r\n        ) : (\r\n          <div>\r\n            <Card>\r\n              <CardBody>\r\n                <h2 className=\"text-center\">No Completed Jobs</h2>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LawyerJobList;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport Rating from \"components/common/Rating\";\r\n// import { NotificationManager } from 'components/common/react-notifications';\r\nimport { Card, CardBody, Col, Row, CardTitle, Button } from \"reactstrap\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst AddReview = () => {\r\n  const [rating, setRating] = useState(0);\r\n  const [feedBack, setFeedBack] = useState(\"\");\r\n  const location = useLocation();\r\n  const { lawyerId } = location.state || {};\r\n  const { lawyerName } = location.state || {};\r\n  const [post, setPost] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleRate = (ratingVal) => {\r\n    setRating(ratingVal.rating);\r\n  };\r\n\r\n  const handleBackToLawyerJobsClick = () => {\r\n    history.push(\"/app/lawyerjobslist\");\r\n  };\r\n\r\n  const Reviewurl = `${baseUrl}/api/law/rating`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  const ReviewsPost = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      await axios.post(\r\n        Reviewurl,\r\n        {\r\n          rating,\r\n          feedBack,\r\n          revieweeId: lawyerId,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      // console.log(response.data);\r\n      setIsLoading(false);\r\n      setPost(!post);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error submitting review\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {post ? (\r\n        <Colxx sm=\"12\" md=\"12\" lg=\"8\" className=\"mx-auto\">\r\n          <Card>\r\n            <CardBody>\r\n              <Row>\r\n                <Col>\r\n                  <h4 className=\"mt-2 text-left ml-4\">\r\n                    {\" \"}\r\n                    Please rate your experience with {lawyerName}\r\n                  </h4>\r\n                </Col>\r\n                <Col className=\"mt-2\">\r\n                  {\" \"}\r\n                  <Rating total={5} rating={rating} onRate={handleRate} />\r\n                </Col>\r\n              </Row>\r\n              <hr className=\"my-4\" />\r\n              <div className=\"\">\r\n                <CardBody>\r\n                  <CardTitle className=\"text-left\">\r\n                    Please write about your experience with {lawyerName}\r\n                  </CardTitle>\r\n                  <ReactQuill\r\n                    theme=\"bubble\"\r\n                    value={feedBack}\r\n                    onChange={(val) => setFeedBack(val)}\r\n                  />\r\n                </CardBody>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"lg\"\r\n                  className={`col-12 col-md-3 btn-shadow btn-multiple-state ${\r\n                    isLoading ? \"show-spinner\" : \"\"\r\n                  }`}\r\n                  onClick={ReviewsPost}\r\n                >\r\n                  {\" \"}\r\n                  <span className=\"spinner d-inline-block\">\r\n                    <span className=\"bounce1\" />\r\n                    <span className=\"bounce2\" />\r\n                    <span className=\"bounce3\" />\r\n                  </span>\r\n                  <span className=\"label\">Submit</span>\r\n                </Button>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      ) : (\r\n        <div className=\"mt-2\">\r\n          <Card className=\"mx-auto\">\r\n            <CardBody className=\"text-center\">\r\n              <CardTitle className=\"h4\">\r\n                Thank you for your valuable feedback\r\n              </CardTitle>\r\n              <p className=\"lead\">Your review submitted successfully!</p>\r\n              <Button\r\n                color=\"primary\"\r\n                size=\"lg\"\r\n                className=\"mt-4\"\r\n                onClick={handleBackToLawyerJobsClick}\r\n              >\r\n                Back to lawyer jobs\r\n              </Button>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      )}\r\n      {/* <Colxx sm='12' md=\"12\" lg=\"8\" className=\"mx-auto\">\r\n    <Card>\r\n        <CardBody>\r\n        <Row>\r\n      <Col>\r\n        <h4 className=\"mt-2 text-left ml-4\">\r\n        {\" \"}\r\n        Please rate your experience with {lawyerName}\r\n         </h4>\r\n     </Col>\r\n     <Col className=\"mt-2\">\r\n         {\" \"}\r\n         <Rating\r\n          total={5}\r\n         rating={rating}\r\n           onRate={handleRate}\r\n         />\r\n    </Col>\r\n     </Row>\r\n     <hr className=\"my-4\" />\r\n     <div className=\"\">\r\n    <CardBody>\r\n        <CardTitle className=\"text-left\">\r\n        Please write about your experience with {lawyerName}\r\n        </CardTitle>\r\n        <ReactQuill\r\n        theme=\"bubble\"\r\n          value={feedBack}\r\n          onChange={(val) => setFeedBack(val)}\r\n        />\r\n    </CardBody>\r\n    \r\n    </div>\r\n    <div className='text-center'>\r\n    <Button color=\"primary\" size='lg' onClick={ReviewsPost}>Submit</Button>\r\n    </div>\r\n    \r\n    </CardBody>\r\n      </Card>\r\n    </Colxx> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddReview;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  Button,\r\n  Jumbotron,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n} from \"reactstrap\";\r\n// import { NotificationManager } from 'components/common/react-notifications';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport ReactQuill from \"react-quill\";\r\nimport Rating from \"components/common/Rating\";\r\n\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport { adminRoot, baseUrl } from \"constants/defaultValues\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst VideoCallCompletedPage = () => {\r\n  const [feedBack, setFeedBack] = useState(\"\");\r\n  const [rating, setRating] = useState(0);\r\n  const [submissionStatus, setSubmissionStatus] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [fromTime, setFromTime] = useState(null);\r\n  const [toTime, setToTime] = useState(0);\r\n  const [mode, setMode] = useState(\"\");\r\n  const [duration, setDuration] = useState(0);\r\n  const [post, setPost] = useState(true);\r\n  const [waitingForData, setWaitingForData] = useState(true);\r\n  const { id, sid } = useParams();\r\n  const history = useHistory();\r\n  function getRoleRes() {\r\n    return localStorage.getItem(\"roleRes\");\r\n  }\r\n  const roleRes = getRoleRes();\r\n\r\n  let getUrl;\r\n\r\nif (roleRes === \"USER\") {\r\n  getUrl = `${baseUrl}/api/call-info-mentee/${sid}`;\r\n} else  {\r\n  getUrl = `${baseUrl}/api/call-info-mentor/${sid}`;\r\n} \r\n\r\n\r\n  // console.log(\"id end:\", id);\r\n  useEffect(() => {\r\n    let intervalId;\r\n    let attempts = 0;\r\n    const maxAttempts = 10; \r\n    \r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(getUrl);\r\n        const reviewData = response.data;\r\n        if (reviewData) {\r\n          setName(reviewData.name);\r\n          setFromTime(reviewData.fromTime);\r\n          setToTime(reviewData.toTime);\r\n          setMode(reviewData.mode);\r\n          setDuration(reviewData.duration);\r\n          clearInterval(intervalId);\r\n          setWaitingForData(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        attempts += 1; \r\n        if (attempts >= maxAttempts) {\r\n          clearInterval(intervalId);\r\n          setWaitingForData(false);\r\n          console.error(\"Max attempts reached. Unable to fetch data.\");\r\n        }\r\n      }\r\n    };\r\n  \r\n    intervalId = setInterval(() => {\r\n      fetchData();\r\n    }, 3000);\r\n  \r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const url = `${baseUrl}/api/mentorship/rating`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  // console.log(\"rating\", rating);\r\n  // console.log(\"quill\", feedBack);\r\n\r\n  const handleRate = (ratingVal) => {\r\n    setRating(ratingVal.rating);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // setSubmissionStatus(true);\r\n    setIsLoading(true);\r\n    axios\r\n      .post(\r\n        url,\r\n        {\r\n          rating,\r\n          feedBack,\r\n          revieweeId: id,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(() => {\r\n        // console.log(response.data);\r\n        setTimeout(() => {\r\n          setSubmissionStatus(true);\r\n          setIsLoading(false);\r\n        }, 3000);\r\n      })\r\n      .catch((error) => {\r\n        // console.error(\"Error submitting data:\", error);\r\n        // console.log(error.response.data.error.message);\r\n        // const er = error.response.data.error.message;\r\n          // NotificationManager.warning(\"Error submitting review\", 'Oops!', 3000, null, null, '');\r\n          if(error.response){\r\n            ToasterComponent('error', error.response.data.statuses);\r\n          } else{\r\n          console.error(\"There was an error while submitting \", error);\r\n          }\r\n        setSubmissionStatus(true);\r\n        setPost(false);\r\n        // setSubmissionStatus(\"failure\");\r\n        setIsLoading(false);\r\n\r\n      });\r\n  };\r\n\r\n  // const handleSubmit = () => {\r\n  //   setSubmissionStatus(\"success\");\r\n  //   setIsLoading(true);\r\n  //   axios\r\n  //     .post(url, {\r\n  //       rating,\r\n  //       feedBack,\r\n  //       revieweeId,\r\n  //     })\r\n  //     .then((response) => {\r\n  //       console.log(response.data);\r\n  //       setSubmissionStatus(\"success\");\r\n  //       setTimeout(() => {\r\n  //         setIsLoading(false);\r\n  //       }, 3000);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(\"Error submitting data:\", error);\r\n  //       setSubmissionStatus(\"failure\");\r\n  //       setIsLoading(false);\r\n  //     });\r\n  // };\r\n\r\n  const handleDashboardClick = () => {\r\n    history.push(`${adminRoot}/dashboard`);\r\n  };\r\n\r\n  const handleMentorClick = () => history.push(`${adminRoot}/calendar/mentor/appointment`)\r\n  \r\n\r\n  // const FromDate = new Date(parseInt(fromTime, 10));\r\n  // const ToDate = new Date(parseInt(toTime, 10));\r\n\r\n  // const fromHours = FromDate.getHours() % 12 || 12;\r\n  // const fromMinutes = String(FromDate.getMinutes()).padStart(2, \"0\");\r\n  // const fromPeriod = FromDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n  // const toHours = ToDate.getHours() % 12 || 12;\r\n  // const toMinutes = String(ToDate.getMinutes()).padStart(2, \"0\");\r\n  // const toPeriod = ToDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n  // const fromTime1 = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n  // const toTime1 = `${toHours}:${toMinutes} ${toPeriod}`;\r\n  const msToMin = duration / 60000;\r\n  const dur = msToMin.toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n      {waitingForData ? (\r\n                <div className=\"loading\" />\r\n              ) : (\r\n        <Colxx xxs=\"12\" className=\"mb-2\">\r\n          <Card className=\"mx-auto my-4 \" style={{ maxWidth: \"1000px\" }}>\r\n            <CardBody className=\"text-center\">\r\n              \r\n              <Jumbotron className=\"text-center\">\r\n                <i\r\n                  alt=\"\"\r\n                  className=\"glyph-icon iconsminds-yes text-success \"\r\n                  style={{ fontSize: \"50px\" }}\r\n                />\r\n                <br />\r\n                <h1 className=\"display-5\">\r\n                  You have successfully completed a call with {name}\r\n                </h1>\r\n                <div className=\"d-flex justify-content-around flex-column \">\r\n                  {/* <h4 className=''>Duration: {up.duration}</h4> */}\r\n                  <Row className=\"mt-2\">\r\n                    <Col>\r\n                      {/* <h4 className=\"mr-2\">Start time: {fromTime1}</h4> */}\r\n                      <h4 className=\"mr-2\">Start time: {fromTime ? (<TimestampConverter timeStamp={fromTime} format=\"time\" />) : (null)} </h4>\r\n                    </Col>\r\n                    <Col>\r\n                      <h4>End time: {toTime ? (<TimestampConverter timeStamp={toTime} format=\"time\" />) : (null)}</h4>\r\n                    </Col>\r\n                    <Col>\r\n                      <h4>Duration: {dur} Min</h4>\r\n                    </Col>\r\n                    <Col>\r\n                      <h4>Mode: {mode}</h4>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n                <hr className=\"my-4\" />\r\n\r\n                <div className=\"lead mb-0 \">\r\n                  <Row className=\"mb-4\">\r\n                    {roleRes.includes(\"MENTOR\") ? (\r\n                       <Col className=\"text-center\">\r\n                       <Button\r\n                         color=\"primary\"\r\n                         size=\"lg\"\r\n                         className=\"mt-4\"\r\n                         onClick={handleMentorClick}\r\n                       >\r\n                         My slots\r\n                       </Button>\r\n                     </Col>\r\n                     ) : (\r\n                      <Colxx xxs=\"12\">\r\n                        {!submissionStatus ? (\r\n                          <>\r\n                            <div className=\"p-2 justify-content-center\">\r\n                              <Row>\r\n                                <Col>\r\n                                  <h4 className=\"mt-2 text-left ml-4\">\r\n                                    {\" \"}\r\n                                    Please rate your experience with {name}\r\n                                  </h4>\r\n                                </Col>\r\n                                <Col className=\"mt-2\">\r\n                                  {\" \"}\r\n                                  <Rating\r\n                                    total={5}\r\n                                    rating={rating}\r\n                                    onRate={handleRate}\r\n                                  />\r\n                                </Col>\r\n                              </Row>\r\n\r\n                              <hr className=\"my-4\" />\r\n                            </div>\r\n                            <div className=\"\">\r\n                              <CardBody>\r\n                                <CardTitle className=\"text-left\">\r\n                                  Please write about your experience with {name}\r\n                                </CardTitle>\r\n                                <ReactQuill\r\n                                  theme=\"bubble\"\r\n                                  value={feedBack}\r\n                                  onChange={(val) => setFeedBack(val)}\r\n                                />\r\n                              </CardBody>\r\n                            </div>\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"lg\"\r\n                              disabled={isLoading}\r\n                              onClick={handleSubmit}\r\n                              className={`mt-2 btn-shadow btn-multiple-state ${\r\n                                isLoading ? \"show-spinner\" : \"\"\r\n                              }`}\r\n                            >\r\n                              <span className=\"spinner d-inline-block\">\r\n                                <span className=\"bounce1\" />\r\n                                <span className=\"bounce2\" />\r\n                                <span className=\"bounce3\" />\r\n                              </span>\r\n                              <span className=\"label\">Submit</span>\r\n                            </Button>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                          {post ? (\r\n                            <div className=\"mt-2\">\r\n                              <CardBody>\r\n                                <CardTitle className=\"h4\">\r\n                                  Thank you for your valuable feedback\r\n                                </CardTitle>\r\n                                <p className=\"lead\">\r\n                                  Your review submitted successfully!\r\n                                </p>\r\n                              </CardBody>\r\n                            </div>) : (\r\n                            <div className=\"mt-2\">\r\n                              <CardBody>\r\n                                <CardTitle className=\"h4\">\r\n                                  Something went wrong\r\n                                </CardTitle>\r\n                                <p className=\"lead\">\r\n                                  Unable to submit your review \r\n                                </p>\r\n                              </CardBody>\r\n                            </div>)}\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"lg\"\r\n                              className=\"mt-4\"\r\n                              onClick={handleDashboardClick}\r\n                            >\r\n                              Dashboard\r\n                            </Button>\r\n                          </>\r\n                        )}\r\n                      </Colxx>\r\n                    )}\r\n                    \r\n                  </Row>\r\n                </div>\r\n              </Jumbotron>\r\n              \r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VideoCallCompletedPage;\r\n","// import React from 'react';\r\n// import { Button } from 'reactstrap';\r\n\r\n// const AgoraClass = () => {\r\n//   const handleClick = () => {\r\n//     window.open(`${process.env.PUBLIC_URL}/VideoRoom.html`, '_blank');\r\n// };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Button onClick={handleClick}>Open Class room</Button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AgoraClass;\r\n\r\n\r\nimport React, { useEffect } from 'react';\r\n\r\nconst MyComponent = () => {\r\n  useEffect(() => {\r\n    window.location.href = `${process.env.PUBLIC_URL}/VideoRoom.html`;\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n     {/* <h4> Opening classroom...</h4> */}\r\n     <div className='loading' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyComponent;\r\n\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\n\r\nimport {\r\n  Button,\r\n  ButtonDropdown,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  // NavLink,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport country from \"../my-login/Country\";\r\nimport language from \"../my-login/Languages\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst LawyerMyProfile = () => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isEditingAbout, setIsEditingAbout] = useState(false);\r\n  // const [isEditingButton, setIsEditingButton] = useState(false);\r\n  // const [newInputLanguages, setNewInputLanguages] = useState(\"\");\r\n  const [newInputTopics, setNewInputTopics] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [resumeFileName, setResumeFileName] = useState(\"\");\r\n  const [resumeFileId, setResumeFileId] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [languages, setLanguages] = useState([]);\r\n  const [topic, setTopic] = useState([]);\r\n  const [ratings, setRatings] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [star, setStar] = useState(\"\");\r\n  const [about, setAbout] = useState(\"\");\r\n  const [packages, setPackages] = useState([]);\r\n  // const [profileLoading, setProfileLoading] = useState(true);\r\n  const [setProfileLoading] = useState(true);\r\n  const [topicValidationMessage, setTopicValidationMessage] = useState(\"\");\r\n  const [isPosted, setIsPosted] = useState(false);\r\n  // const [file1] = useState(null);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imageEditModal, setImageEditModal] = useState(false);\r\n  const [selectedFileBase64, setSelectedFileBase64] = useState(null);\r\n  const [isEditingLanguages, setIsEditingLanguages] = useState(false);\r\n  const [isEditingTopics, setIsEditingTopics] = useState(false);\r\n  const [isEditingPackages, setIsEditingPackages] = useState(false);\r\n  const [isAddPackage, setIsAddPackage] = useState(false);\r\n  const [pid, setPid] = useState(null);\r\n  const [editPackage, setEditPackage] = useState({\r\n    serviceName: \"\",\r\n    description: \"\",\r\n    amount: \"\",\r\n  });\r\n\r\n  const [newPackage, setNewPackage] = useState([]);\r\n\r\n  const token = localStorage.getItem(\"tokenRes\");\r\n\r\n  const endUrl = `${baseUrl}/api/lawyer/myprofile`;\r\n  const imageEditUrl = `${baseUrl}/api/lawyer/profile-image`;\r\n  const packageURL = `${baseUrl}/api/lawyer/${pid}/package`;\r\n\r\n  const mentorProfileDetails = async () => {\r\n    try {\r\n      const response = await axios.get(endUrl);\r\n      const userData = response.data;\r\n      if (userData) {\r\n        setImageUrl(userData.imageUrl);\r\n        setFirstName(userData.firstName);\r\n        setLastName(userData.lastName);\r\n        setLocation(userData.location);\r\n        setResumeFileName(userData.documentName);\r\n        setResumeFileId(userData.documentId);\r\n        // setLanguages(userData.languages);\r\n        setLanguages(userData.languages.map((lang) => lang.language));\r\n        setBio(userData.bio);\r\n        setRatings(userData.ratings);\r\n        // setTopic(topicData);\r\n        // Store the id from the response\r\n        setPid(userData.id);\r\n\r\n        setTopic(userData.topic.map((t) => t.topicName));\r\n        setStar(userData.star);\r\n        setAbout(userData.about);\r\n        setProfileLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const LawyerPackage = async () => {\r\n    console.log(pid);\r\n    try {\r\n      const response = await axios.get(packageURL);\r\n      const fetchedPackages = response.data;\r\n      setPackages(fetchedPackages);\r\n\r\n      // if (fetchedPackages.length > 0) {\r\n      //   setActiveFirstTab(fetchedPackages[0].id);\r\n      // }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    mentorProfileDetails();\r\n  }, [isPosted]);\r\n\r\n  useEffect(() => {\r\n    if (pid) {\r\n      LawyerPackage();\r\n    }\r\n  }, [pid]);\r\n\r\n  const postImageData = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", selectedFile);\r\n\r\n      const response = await axios.post(imageEditUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      setTimeout(() => {}, 2000);\r\n      if (response.status === 200) {\r\n        await mentorProfileDetails();\r\n      }\r\n\r\n      // console.log(`resres ${response.status}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleImageClick = () => setImageEditModal(true);\r\n\r\n  const handleImagePost = () => {\r\n    postImageData();\r\n    setSelectedFile(null);\r\n    setImageEditModal(false);\r\n  };\r\n\r\n  const handleImageDelete = () => {\r\n    // setSelectedFile(image);\r\n    setImageEditModal(false);\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        setSelectedFileBase64(base64Image);\r\n\r\n        // setAboutField({ ...aboutField, image: base64Image });\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const updateMEntorProfile = async () => {\r\n    try {\r\n      const updatedData = {\r\n        // imageUrl,\r\n        firstName,\r\n        lastName,\r\n        location,\r\n        bio,\r\n        topic,\r\n        languages,\r\n        about,\r\n      };\r\n\r\n      const response = await axios.put(endUrl, updatedData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      response.data.statuses.forEach((status) => {\r\n        NotificationManager.success(\r\n          status.message,\r\n          \"Great!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      });\r\n      setIsPosted(!isPosted);\r\n      // console.log(\"Profile updated successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error updating profile\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddLanguages = (newLanguages) => {\r\n    setLanguages([...languages, newLanguages]);\r\n  };\r\n\r\n  // const handleEditAboutClick = () => {\r\n  //   setIsEditingAbout(true);\r\n  // };\r\n\r\n  const handleSaveAbout = () => {\r\n    setIsEditingAbout(false);\r\n    updateMEntorProfile();\r\n  };\r\n\r\n  // const handleCancelEditAbout = () => {\r\n  //   setIsEditingAbout(false);\r\n  // };\r\n\r\n  // const handleEditButton = () => {\r\n  //   setIsEditingButton(true);\r\n  const handleLanguagesSave = () => {\r\n    if (languages.length === 0) {\r\n      setTopicValidationMessage(\"At least one language is required.\");\r\n    } else {\r\n      setIsEditingLanguages(false);\r\n      updateMEntorProfile();\r\n    }\r\n  };\r\n  const handleLanguagesCancel = () => {\r\n    setIsEditingLanguages(false);\r\n  };\r\n\r\n  const handleSaveTopics = () => {\r\n    if (topic.length === 0) {\r\n      setTopicValidationMessage(\"At least one topic is required.\");\r\n    } else {\r\n      setIsEditingTopics(false);\r\n      updateMEntorProfile();\r\n    }\r\n  };\r\n  const handleTopicCancel = () => {\r\n    if (topic.length === 0) {\r\n      setTopicValidationMessage(\"At least one topic is required.\");\r\n    } else {\r\n      setIsEditingTopics(false);\r\n    }\r\n  };\r\n  // };\r\n  // const handleSaveButton = () => {\r\n  //   if (topic.length === 0) {\r\n  //     setTopicValidationMessage(\"At least one topic is required.\");\r\n  //   } else {\r\n  //     setIsEditingButton(false);\r\n  //     updateMEntorProfile();\r\n  //   }\r\n  // };\r\n\r\n  // const handleCancelButton = () => {\r\n  //   if (topic.length === 0) {\r\n  //     setTopicValidationMessage(\"At least one topic is required.\");\r\n  //   } else {\r\n  //     setIsEditingButton(false);\r\n  //   }\r\n  // };\r\n\r\n  // const handleEditClick = () => {\r\n  //   setIsEditing(true);\r\n  // };\r\n\r\n  const handleSave = () => {\r\n    setIsEditing(false);\r\n    updateMEntorProfile();\r\n    if (selectedFile) {\r\n      postImageData();\r\n    }\r\n  };\r\n\r\n  // const handleCancel = () => {\r\n  //   setIsEditing(false);\r\n  // };\r\n\r\n  const handleRemoveLanguages = (index) => {\r\n    setLanguages(languages.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleAddTopics = (newTopics) => {\r\n    if (!newTopics.trim()) {\r\n      setTopicValidationMessage(\"Topic cannot be empty\");\r\n    } else {\r\n      setTopicValidationMessage(\"\");\r\n      setTopic([...topic, newTopics]);\r\n    }\r\n  };\r\n  const handleRemoveTopics = (index) => {\r\n    setTopic(topic.filter((_, i) => i !== index));\r\n  };\r\n\r\n  //   const handleLinkedInClick = () => {\r\n  //     if (linkedinUrl) {\r\n  //       window.open(linkedinUrl, \"_blank\");\r\n  //     }\r\n  //   };\r\n\r\n  // const handleFileChange = (event) => {\r\n  //   setFile(event.target.files[0]);\r\n  // };\r\n  const countryName = country.find((c) => c.iso_code === location)?.name;\r\n\r\n  const languageOptions = language.map((option) => ({\r\n    value: option.iso_code,\r\n    label: option.name,\r\n  }));\r\n\r\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\r\n\r\n  const handleChange = (selectedOptions) => {\r\n    const languagesArray = selectedOptions\r\n      ? selectedOptions.map((option) => option.value)\r\n      : [];\r\n    // console.log(\"arraychk\", languagesArray);\r\n    handleAddLanguages(languagesArray[0]);\r\n    setSelectedLanguages([]);\r\n  };\r\n  const handlePackageEditClick = (pack) => {\r\n    setEditPackage(pack); // Set the selected package details for editing\r\n    setIsEditingPackages(true); // Open the modal\r\n  };\r\n  // const handleAddPackageEditClick = () => {\r\n  //   setIsAddPackage(true);\r\n  // };\r\n  const [currentPackage, setCurrentPackage] = useState({\r\n    serviceName: \"\",\r\n    amount: \"\",\r\n    description: \"\",\r\n    headline: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentPackage((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handlePackageSave = async () => {\r\n    try {\r\n      // Add the current package to the newPackage array\r\n      setNewPackage((prevPackages) => [...prevPackages, currentPackage]);\r\n\r\n      const response = await axios.post(\r\n        `${baseUrl}/api/lawyer/package`,\r\n        [...newPackage, currentPackage] // Send the array including the new package\r\n      );\r\n\r\n      response.data.statuses.forEach((status) => {\r\n        NotificationManager.success(\r\n          status.message, // Use the status message from the response\r\n          \"Package Added Successfully\", // Title for the notification\r\n          3000 // Duration of the toaster\r\n        );\r\n      });\r\n      // Optionally, refresh the package list or update the state here\r\n      LawyerPackage();\r\n      setIsAddPackage(false); // Close the modal\r\n\r\n      // Reset the current package fields after saving\r\n      setCurrentPackage({\r\n        serviceName: \"\",\r\n        amount: \"\",\r\n        description: \"\",\r\n        headline: \"\",\r\n      });\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        \"Error adding package\", // Message for the error\r\n        \"Error\", // Title for the error notification\r\n        3000 // Duration of the toaster\r\n      );\r\n      console.error(\"Error saving package:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSavePackage = async () => {\r\n    try {\r\n      const updateURL = `${baseUrl}/api/lawyer/package/mypackage/${editPackage.id}`;\r\n      const response = await axios.put(updateURL, editPackage); // Assuming a PUT request to update the package\r\n      response.data.statuses.forEach((status) => {\r\n        NotificationManager.success(\r\n          status.message, // Use the status message from the response\r\n          \"Package Updated Successfully\", // Title for the notification\r\n          3000 // Duration of the toaster\r\n        );\r\n      });\r\n      LawyerPackage(); // Refresh the packages list\r\n      setIsEditingPackages(false); // Close the modal\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        \"Error updating package\", // Message for the error\r\n        \"Error\", // Title for the error notification\r\n        3000 // Duration of the toaster\r\n      );\r\n      console.error(\"Error updating package:\", error);\r\n    }\r\n  };\r\n\r\n  const handlePackageDeleteClick = async (pack) => {\r\n    try {\r\n      const deleteURL = `${baseUrl}/api/lawyer/package/mypackage/${pack.id}`; // Construct delete URL\r\n      const response = await axios.delete(deleteURL); // Perform the DELETE request\r\n\r\n      response.data.statuses.forEach((status) => {\r\n        NotificationManager.success(\r\n          status.message, // Use the status message from the response\r\n          \"Package Deleted Successfully\", // Title for the notification\r\n          3000 // Duration of the toaster\r\n        );\r\n      });\r\n      setIsEditingPackages(false);\r\n      LawyerPackage(); // Refresh the packages list, similar to how you update after saving\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        \"Error deleting package\", // Message for the error\r\n        \"Error\", // Title for the error notification\r\n        3000 // Duration of the toaster\r\n      );\r\n      console.error(\"Error deleting package:\", error);\r\n    }\r\n  };\r\n\r\n  const handlePackageCancelEdit = () => {\r\n    setIsEditingPackages(false); // Close the modal without saving\r\n  };\r\n  const handleAddPackageCancel = () => {\r\n    setIsAddPackage(false);\r\n  };\r\n\r\n  const [fileError, setFileError] = useState(\"\");\r\n\r\n  const handleFileChange1 = async (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    if (file) {\r\n      const fileType = file.type;\r\n      const fileSize = file.size;\r\n\r\n      // Check if the file is a PDF\r\n      if (fileType !== \"application/pdf\") {\r\n        setFileError(\"Please upload a PDF file.\");\r\n        setResumeFileName(\"\"); // Clear the file name if invalid\r\n        return;\r\n      }\r\n\r\n      // Check if the file size is more than 2MB\r\n      if (fileSize > 2 * 1024 * 1024) {\r\n        setFileError(\"File size should be less than 2MB.\");\r\n        setResumeFileName(\"\"); // Clear the file name if invalid\r\n        return;\r\n      }\r\n\r\n      // If valid, clear the error and set the file name\r\n      setFileError(\"\");\r\n      setResumeFileName(file.name);\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"resume\", file);\r\n\r\n      // Post the file to the given URL\r\n      const uploadUrl = `${baseUrl}/api/resume?role=LAWYER`;\r\n\r\n      try {\r\n        const response = await axios.post(uploadUrl, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        });\r\n\r\n        // Handle successful response\r\n        if (response.status === 200) {\r\n          ToasterComponent(\"success\", response.data.statuses);\r\n          console.log(\"Resume uploaded successfully\", response.data);\r\n          setResumeFileId(response.data.documentId);\r\n        } else {\r\n          ToasterComponent(\"error\", \"Failed to upload resume\");\r\n          console.error(\"Failed to upload resume\", response.data);\r\n        }\r\n      } catch (error) {\r\n        // Handle errors\r\n        if (error.response) {\r\n          ToasterComponent(\r\n            \"error\",\r\n            error.response.data.message || \"Upload failed\"\r\n          );\r\n          console.error(\"Error uploading resume:\", error.response);\r\n        } else {\r\n          ToasterComponent(\"error\", \"An error occurred while uploading\");\r\n          console.error(\"Error uploading resume:\", error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\r\n\r\n  const handleView = async (fileId) => {\r\n    const viewUrl = `${baseUrl}/api/resume/${fileId}`; // Replace with your actual API endpoint\r\n\r\n    try {\r\n      const response = await axios.get(viewUrl, {\r\n        // This is important for downloading binary files\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Include authorization if required\r\n        },\r\n      });\r\n      // const response = await axios.get(viewUrl);\r\n\r\n      if (response.status === 200) {\r\n        // Create a URL for the binary response\r\n        // const fileUrl = window.URL.createObjectURL(new Blob([response.data]));\r\n        // const blobUrl = window.URL.createObjectURL(new Blob([response.data]));\r\n\r\n        // Open the file in a new tab\r\n        window.open(viewUrl, \"_blank\");\r\n      } else {\r\n        ToasterComponent(\"error\", \"Failed to view resume\");\r\n        console.error(\"Failed to view resume\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.message || \"View failed\");\r\n        console.error(\"Error viewing resume:\", error.response);\r\n      } else {\r\n        ToasterComponent(\"error\", \"An error occurred while viewing\");\r\n        console.error(\"Error viewing resume:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (fileId) => {\r\n    const deleteUrl = `${baseUrl}/api/resume/${fileId}?role=LAWYER`; // Replace with your actual delete API endpoint\r\n\r\n    try {\r\n      const response = await axios.delete(deleteUrl);\r\n\r\n      if (response.status === 200) {\r\n        // Assuming the deletion is successful\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n        console.log(\"File deleted successfully\");\r\n        // Add any other logic here like updating the state or UI\r\n        setResumeFileName(\"\");\r\n      } else {\r\n        console.error(\"Failed to delete the file\", \"Error\");\r\n      }\r\n    } catch (error) {\r\n      // Handle the error here\r\n      if (error?.response?.data?.statuses) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error deleting the file:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mentor-profile\">\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"\">\r\n        {/* new design code starts */}\r\n\r\n        {/* profile section starts */}\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <CardBody\r\n                style={{\r\n                  background: \"linear-gradient(to right, #7B42C5, #AA5D93)\",\r\n                  color: \"white\",\r\n                  borderRadius: \"9px 9px 0 0\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"position-relative\"\r\n                  style={{ position: \"relative\", top: \"5px\", textAlign: \"end\" }}\r\n                >\r\n                  <Button\r\n                    color=\"primary\"\r\n                    outline\r\n                    className=\"icon-button  bg-light\"\r\n                    style={{ border: \"none\" }}\r\n                    size=\"sm\"\r\n                    onClick={() => handleImageClick()}\r\n                  >\r\n                    <i className=\"simple-icon-pencil\" />\r\n                  </Button>\r\n                </div>\r\n\r\n                <div\r\n                  className=\"position-relative\"\r\n                  style={{ position: \"relative\", top: \"70px\" }}\r\n                >\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn p-0\"\r\n                    style={{ border: \"none\", background: \"none\" }}\r\n                    // onClick={() => handleImageClick()}\r\n                    aria-label=\"Profile image\"\r\n                  >\r\n                    {imageUrl === null ? (\r\n                      <ThumbnailLetters\r\n                        // small\r\n                        rounded\r\n                        text={firstName}\r\n                        className=\"mx-2\"\r\n                        color=\"secondary\"\r\n                      />\r\n                    ) : (\r\n                      <img\r\n                        src={`${baseUrl}/${imageUrl}`}\r\n                        className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                        style={{\r\n                          width: \"110px\",\r\n                          height: \"110px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                        alt=\"img\"\r\n                      />\r\n                    )}\r\n                  </button>\r\n                  {/* image modal starts */}\r\n                  <Modal\r\n                    isOpen={imageEditModal}\r\n                    toggle={() => setImageEditModal(!imageEditModal)}\r\n                    className=\"\"\r\n                    size=\"lg\"\r\n                    style={{\r\n                      borderRadius: \"10px\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                      <h2 className=\"font-weight-bold\">Profile photo</h2>\r\n                    </ModalHeader>\r\n                    <ModalBody className=\"d-flex justify-content-center align-items-center\">\r\n                      <img\r\n                        src={selectedFileBase64 || `${baseUrl}/${imageUrl}`}\r\n                        className=\"rounded-circle img-thumbnail border border-3\"\r\n                        style={{\r\n                          width: \"130px\",\r\n                          height: \"130px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                        alt=\"img\"\r\n                      />\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter className=\"d-flex align-items-center justify-content-center\">\r\n                      {selectedFile ? (\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          onClick={() => handleImagePost()}\r\n                          className=\"icon-button\"\r\n                          style={{ border: \"none\" }}\r\n                        >\r\n                          <i className=\"iconsminds-upload \" />\r\n                        </Button>\r\n                      ) : (\r\n                        <InputGroup\r\n                          className=\"\"\r\n                          style={{\r\n                            width: \"auto\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <div className=\"\">\r\n                            <Button\r\n                              outline\r\n                              className=\"icon-button\"\r\n                              color=\"primary\"\r\n                              style={{ border: \"none\" }}\r\n                              onClick={() =>\r\n                                document.getElementById(\"file-upload\").click()\r\n                              }\r\n                            >\r\n                              <i className=\"simple-icon-pencil\" />\r\n                            </Button>\r\n\r\n                            <Input\r\n                              id=\"file-upload\"\r\n                              type=\"file\"\r\n                              className=\"d-none\"\r\n                              onChange={handleFileChange}\r\n                            />\r\n                          </div>\r\n                        </InputGroup>\r\n                      )}\r\n\r\n                      <Button\r\n                        color=\"primary\"\r\n                        outline\r\n                        onClick={() => handleImageDelete()}\r\n                        className=\"icon-button\"\r\n                        style={{ border: \"none\" }}\r\n                      >\r\n                        <i className=\"simple-icon-trash\" />\r\n                      </Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n                  {/* image modal ends */}\r\n                </div>\r\n\r\n                {/* Modal for update profile starts */}\r\n                <Modal\r\n                  isOpen={isEditing}\r\n                  toggle={() => setIsEditing(!isEditing)}\r\n                  className=\"\"\r\n                  size=\"lg\"\r\n                  style={{\r\n                    borderRadius: \"10px\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                    <h2 className=\"font-weight-bold\">Edit Profile</h2>\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <div className=\"\">\r\n                      <div>\r\n                        <Row>\r\n                          <Col md=\"6\">\r\n                            <Label for=\"firstName\">\r\n                              <h4>First Name</h4>\r\n                            </Label>\r\n                            <Input\r\n                              type=\"text\"\r\n                              id=\"firstName\"\r\n                              value={firstName}\r\n                              onChange={(e) => setFirstName(e.target.value)}\r\n                            />\r\n                          </Col>\r\n                          <Col md=\"6\">\r\n                            <Label for=\"lastName\">\r\n                              <h4>Last Name</h4>\r\n                            </Label>\r\n                            <Input\r\n                              type=\"text\"\r\n                              id=\"lastName\"\r\n                              value={lastName}\r\n                              onChange={(e) => setLastName(e.target.value)}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Label for=\"location\" className=\"font-weight-medium\">\r\n                          <h4>Location</h4>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"location\"\r\n                          value={location}\r\n                          onChange={(e) => setLocation(e.target.value)}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option disabled value=\"\">\r\n                            Select Location\r\n                          </option>\r\n                          {country.map((option) => (\r\n                            <option\r\n                              // eslint-disable-next-line react/no-array-index-key\r\n                              key={option}\r\n                              value={option.iso_code}\r\n                            >\r\n                              {option.name}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        <br />\r\n\r\n                        <br />\r\n\r\n                        <Row>\r\n                          <Col md={6}>\r\n                            <>\r\n                              <Label\r\n                                for=\"resume\"\r\n                                className=\"font-weight-medium\"\r\n                              >\r\n                                <h4>CV</h4>\r\n                              </Label>\r\n                              <div\r\n                                className=\" p-2 my-2 d-flex text-one align-items-center justify-content-between\"\r\n                                style={{\r\n                                  border: \"1px solid #ccc\",\r\n                                  minWidth: \"200px\",\r\n                                }}\r\n                              >\r\n                                {resumeFileName || \"no file selected\"}\r\n                                <ButtonDropdown\r\n                                  isOpen={dropdownOpen}\r\n                                  toggle={toggleDropdown}\r\n                                >\r\n                                  <DropdownToggle\r\n                                    caret\r\n                                    style={{\r\n                                      backgroundColor: \"transparent\",\r\n                                      border: \"none\",\r\n                                      padding: 0,\r\n                                    }}\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa-solid fa-ellipsis\"\r\n                                      style={{\r\n                                        color: \"#333\",\r\n                                        cursor: \"pointer\",\r\n                                      }}\r\n                                    />\r\n                                  </DropdownToggle>\r\n\r\n                                  <DropdownMenu>\r\n                                    <DropdownItem\r\n                                      onClick={() => handleView(resumeFileId)}\r\n                                    >\r\n                                      view\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      onClick={() => handleDelete(resumeFileId)}\r\n                                    >\r\n                                      delete\r\n                                    </DropdownItem>\r\n                                  </DropdownMenu>\r\n                                </ButtonDropdown>\r\n                              </div>\r\n                              <InputGroup className=\"\">\r\n                                <div className=\"\">\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    style={{\r\n                                      cursor: \"pointer\",\r\n\r\n                                      background: \"none\",\r\n                                      border: \"none\",\r\n                                    }}\r\n                                    onClick={() =>\r\n                                      document\r\n                                        .getElementById(\"file-upload\")\r\n                                        .click()\r\n                                    }\r\n                                  >\r\n                                    <h5>+ Add your Resume</h5>\r\n                                  </button>\r\n                                  {/* <Form> */}\r\n                                  <Input\r\n                                    id=\"file-upload\"\r\n                                    type=\"file\"\r\n                                    className=\"d-none\"\r\n                                    // onChange={handleFileChange1}\r\n                                    // validate={validateFile}\r\n                                    onChange={(e) => handleFileChange1(e)}\r\n                                  />\r\n                                </div>\r\n                              </InputGroup>\r\n                              <br />\r\n                              {fileError && (\r\n                                <p style={{ color: \"red\" }}>{fileError}</p>\r\n                              )}\r\n                            </>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    </div>\r\n                    <br />\r\n                  </ModalBody>\r\n                  <ModalFooter\r\n                    style={{ borderTop: \"none\" }}\r\n                    className=\"d-flex align-items-center justify-content-center\"\r\n                  >\r\n                    <Button color=\"primary\" onClick={() => handleSave()}>\r\n                      Save\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      onClick={() => setIsEditing(false)}\r\n                      className=\"\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n                {/* Modal for update profile ends */}\r\n              </CardBody>\r\n              <CardBody>\r\n                <div>\r\n                  <div className=\"text-end w-100  d-flex justify-content-end\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      style={{ border: \"none\" }}\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditing(true)}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"mt-4\">\r\n                    <h2 className=\"font-weight-bold\">\r\n                      {firstName} {lastName}\r\n                    </h2>\r\n\r\n                    <h5 className=\"font-weight-medium\">\r\n                      <i className=\"simple-icon-location-pin text-primary\" />\r\n\r\n                      <span className=\"ml-2\">{countryName}</span>\r\n                    </h5>\r\n                    <h6 className=\"\">\r\n                      <i className=\"simple-icon-star text-primary \" />\r\n                      <span className=\"ml-2\">{`${star} (${ratings} ratings)`}</span>\r\n                    </h6>\r\n                    <h6 className=\"text-muted\">{resumeFileName}</h6>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {/* profile section ends */}\r\n\r\n        {/* about section starts */}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row className=\"align-items-center\">\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">About</h2>\r\n\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingAbout(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <div>\r\n                  <p className=\"text-muted\">{about}</p>\r\n                </div>\r\n                {/* about modal starts */}\r\n                <Modal\r\n                  isOpen={isEditingAbout}\r\n                  toggle={() => setIsEditingAbout(!isEditingAbout)}\r\n                  className=\"\"\r\n                  size=\"lg\"\r\n                  style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                >\r\n                  <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                    <h2 className=\"font-weight-bold\">About</h2>\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <br />\r\n\r\n                    <>\r\n                      <Label for=\"about\" className=\"text-muted\">\r\n                        <h4>About Me</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        id=\"about\"\r\n                        value={about}\r\n                        onChange={(e) => setAbout(e.target.value)}\r\n                        className=\" text-one\"\r\n                      />\r\n                      <br />\r\n                    </>\r\n                    <>\r\n                      <Label for=\"about\" className=\"text-muted\">\r\n                        <h4>Bio</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        id=\"about\"\r\n                        value={bio}\r\n                        onChange={(e) => setBio(e.target.value)}\r\n                        className=\" text-one\"\r\n                      />\r\n                      <br />\r\n                    </>\r\n                  </ModalBody>\r\n                  <ModalFooter\r\n                    style={{ borderTop: \"none\" }}\r\n                    className=\"d-flex align-items-center justify-content-center\"\r\n                  >\r\n                    <Button color=\"primary\" onClick={() => handleSaveAbout()}>\r\n                      Save\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      onClick={() => setIsEditingAbout(false)}\r\n                      className=\"\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n                {/* about modal ends */}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {/* about section ends */}\r\n\r\n        {/* language section starts */}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Languages known</h2>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingLanguages(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <ul\r\n                      className=\"text-one text-muted font-weight-bold d-flex flex-wrap p-0 mr-3 text-start\"\r\n                      style={{\r\n                        gap: \"30px\",\r\n                        listStyle: \"none\",\r\n                        paddingLeft: 0,\r\n                      }}\r\n                    >\r\n                      {languages.map((lang) => (\r\n                        <li\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          key={lang}\r\n                          style={{\r\n                            position: \"relative\",\r\n                            paddingLeft: \"20px\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            style={{\r\n                              content: '\"\"',\r\n                              position: \"absolute\",\r\n                              left: 0,\r\n                              top: \"50%\",\r\n                              transform: \"translateY(-50%) rotate(45deg)\",\r\n                              width: \"7px\",\r\n                              height: \"7px\",\r\n                              backgroundColor: \"currentColor\",\r\n                            }}\r\n                          />\r\n                          {language.find((l) => l.iso_code === lang)?.name}{\" \"}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </Col>\r\n                </Row>\r\n                <Modal\r\n                  isOpen={isEditingLanguages}\r\n                  toggle={() => setIsEditingLanguages(!isEditingLanguages)}\r\n                  className=\"\"\r\n                  size=\"lg\"\r\n                  style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                >\r\n                  <ModalHeader>\r\n                    <h2 className=\"font-weight-bold\">Languages</h2>\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <h5>Languages</h5>\r\n                    <>\r\n                      <FormGroup className=\"error-l-75\">\r\n                        <Select\r\n                          placeholder=\"Select Languages\"\r\n                          name=\"languages\"\r\n                          isMulti\r\n                          options={languageOptions}\r\n                          className=\"react-select\"\r\n                          classNamePrefix=\"react-select\"\r\n                          value={selectedLanguages}\r\n                          onChange={(selectedOptions) => {\r\n                            setSelectedLanguages(selectedOptions);\r\n                            handleChange(selectedOptions);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      {languages.map((lang, index) => (\r\n                        <Button\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          key={lang}\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"mt-2 font-weight-semibold mr-2\"\r\n                          size=\"sm\"\r\n                          onClick={() => handleRemoveLanguages(index)}\r\n                        >\r\n                          {language.find((l) => l.iso_code === lang)?.name}{\" \"}\r\n                          <i className=\"iconsminds-close\" />\r\n                        </Button>\r\n                      ))}\r\n                    </>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={handleLanguagesSave}\r\n                      className=\"mr-2\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      onClick={handleLanguagesCancel}\r\n                      className=\"ml-2\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {/* langauge section ends */}\r\n        {/* topic section starts */}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Consulting areas</h2>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingTopics(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <div\r\n                  className=\"d-flex flex-wrap\"\r\n                  style={{ gap: \"10px\", marginTop: \"10px\" }}\r\n                >\r\n                  {topic.map((newTopics, index) => (\r\n                    <Button\r\n                      // eslint-disable-next-line react/no-array-index-key\r\n                      key={index}\r\n                      color={index < 3 ? \"primary\" : \"light\"}\r\n                      className=\"mb-2 font-weight-semibold mr-2\"\r\n                      size=\"sm\"\r\n                    >\r\n                      {newTopics}\r\n                    </Button>\r\n                  ))}\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n\r\n            <Modal\r\n              isOpen={isEditingTopics}\r\n              toggle={() => setIsEditingTopics(!isEditingTopics)}\r\n              className=\"\"\r\n              size=\"lg\"\r\n              style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n            >\r\n              <ModalHeader>\r\n                <h2 className=\"font-weight-bold\">Consulting areas</h2>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"mt-3\">\r\n                  <h5>Consulting areas </h5>\r\n                  <ReactSortable\r\n                    list={topic}\r\n                    setList={setTopic}\r\n                    options={{ handle: \".handle\" }}\r\n                    className=\"row ml-1\"\r\n                  >\r\n                    {topic.map((newTopics, index) => (\r\n                      <Button\r\n                        // eslint-disable-next-line react/no-array-index-key\r\n                        key={newTopics}\r\n                        color={index < 3 ? \"primary\" : \"light\"}\r\n                        // className=\" mb-2 font-weight-semibold \"\r\n                        className=\" my-2 font-weight-semibold mr-2 d-flex align-items-center \"\r\n                        size=\"sm\"\r\n                        onClick={() => handleRemoveTopics(index)}\r\n                      >\r\n                        {newTopics} <i className=\"iconsminds-close\" />\r\n                      </Button>\r\n                    ))}\r\n                  </ReactSortable>\r\n                  <p className=\"text-muted ml-2\">\r\n                    Drag consulting areas to set top 3 (the top 3 Consulting\r\n                    areas will be displayed on lawyer cards)\r\n                  </p>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"New Consulting area\"\r\n                      value={newInputTopics}\r\n                      onChange={(e) => setNewInputTopics(e.target.value)}\r\n                      onKeyDown={(event) => {\r\n                        if (event.key === \"Enter\") {\r\n                          handleAddTopics(newInputTopics);\r\n                          setNewInputTopics(\"\");\r\n                        }\r\n                      }}\r\n                    />\r\n                    <InputGroupAddon addonType=\"append\">\r\n                      <Button\r\n                        outline\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          handleAddTopics(newInputTopics);\r\n                          setNewInputTopics(\"\");\r\n                        }}\r\n                      >\r\n                        Add Consulting areas\r\n                      </Button>\r\n                    </InputGroupAddon>\r\n                  </InputGroup>\r\n                  {topicValidationMessage && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {topicValidationMessage}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={handleSaveTopics}\r\n                  className=\"mr-2\"\r\n                >\r\n                  Save\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  outline\r\n                  onClick={handleTopicCancel}\r\n                  className=\"ml-2\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </Col>\r\n        </Row>\r\n        {/* topic section ends */}\r\n\r\n        {/* package section starts  */}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Packages</h2>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  {packages?.map((pack) => (\r\n                    <Col lg={6} key={pack.id} className=\"my-2\">\r\n                      <Card className=\"pt-2 pb-2 d-flex\">\r\n                        <CardBody className=\"pt-2 pb-2\">\r\n                          <div className=\"price-top-part d-flex justify-content-between align-items-center\">\r\n                            <div>\r\n                              <i className=\"\" />\r\n                              <h2 className=\"mb-0 font-weight-semibold text-primary text-large mb-4\">\r\n                                {pack.serviceName}\r\n                              </h2>\r\n                              {/* <p className=''>{pack.headline}</p> */}\r\n                              <p className=\"text-large mb-2 text-default\">\r\n                                ₹{Math.floor(pack.amount).toLocaleString()}\r\n                              </p>\r\n                              <p className=\"text-muted text-small\">\r\n                                {pack.description}\r\n                              </p>\r\n                            </div>\r\n                            <Button\r\n                              color=\"primary\"\r\n                              outline\r\n                              className=\"icon-button text-end ml-5\"\r\n                              size=\"sm\"\r\n                              onClick={() => handlePackageEditClick(pack)}\r\n                              style={{ border: \"none\" }}\r\n                            >\r\n                              <i className=\"simple-icon-pencil\" />\r\n                            </Button>\r\n                          </div>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n                <Row>\r\n                  <Col lg={12}>\r\n                    <Card\r\n                      onClick={() => setIsAddPackage(true)}\r\n                      className=\"p-3 text-center my-5\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                    >\r\n                      <h3 className=\"font-weight-bold text-primary\">\r\n                        + Add more packages\r\n                      </h3>\r\n                    </Card>\r\n                    {/* Modal for adding new package */}\r\n                    <Modal\r\n                      isOpen={isAddPackage}\r\n                      toggle={() => setIsAddPackage(!isAddPackage)}\r\n                      className=\"\"\r\n                      size=\"lg\"\r\n                      style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                    >\r\n                      <ModalHeader>\r\n                        <h2 className=\"font-weight-bold\">Add New Package</h2>\r\n                      </ModalHeader>\r\n                      <ModalBody>\r\n                        <div className=\"mt-3\">\r\n                          <Row className=\"my-4\">\r\n                            <Col md=\"6\">\r\n                              <Label for=\"serviceName\">\r\n                                <h4>Service Name</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"serviceName\"\r\n                                id=\"serviceName\"\r\n                                value={newPackage.serviceName}\r\n                                onChange={handleInputChange}\r\n                              />\r\n                            </Col>\r\n                            {/* <Col md=\"6\">\r\n                              <Label for=\"headline\">\r\n                                <h4>Headline</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"headline\"\r\n                                id=\"headline\"\r\n                                value={newPackage.headline}\r\n                                onChange={handleInputChange}\r\n                              />\r\n                            </Col> */}\r\n                          </Row>\r\n\r\n                          <Row>\r\n                            <Col>\r\n                              <Label for=\"description\">\r\n                                <h4>Description</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"textarea\"\r\n                                name=\"description\"\r\n                                id=\"description\"\r\n                                value={newPackage.description}\r\n                                onChange={handleInputChange}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row className=\"my-2\">\r\n                            <Col md=\"6\">\r\n                              <Label for=\"amount\">\r\n                                <h4>Amount</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"number\"\r\n                                name=\"amount\"\r\n                                id=\"amount\"\r\n                                value={newPackage.amount}\r\n                                onChange={handleInputChange}\r\n                                className=\"text-one\"\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                      </ModalBody>\r\n                      <ModalFooter>\r\n                        <Button\r\n                          color=\"primary\"\r\n                          onClick={handlePackageSave}\r\n                          className=\"mr-2\"\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                        <Button\r\n                          color=\"primary\"\r\n                          outline\r\n                          onClick={handleAddPackageCancel}\r\n                          className=\"ml-2\"\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </ModalFooter>\r\n                    </Modal>\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n\r\n            <Modal\r\n              isOpen={isEditingPackages}\r\n              toggle={() => setIsEditingPackages(!isEditingPackages)}\r\n              className=\"\"\r\n              size=\"lg\"\r\n              style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n            >\r\n              <ModalHeader>\r\n                <h2 className=\"font-weight-bold\">Packages</h2>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"mt-3\">\r\n                  {/* <h5>Packages</h5> */}\r\n                  <Row className=\"\">\r\n                    <Col md={12} className=\"d-flex justify-content-end\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        outline\r\n                        className=\"icon-button \"\r\n                        size=\"sm\"\r\n                        onClick={() => handlePackageDeleteClick(editPackage)}\r\n                        style={{ border: \"none\" }}\r\n                      >\r\n                        <i className=\"simple-icon-trash\" />\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"my-4\">\r\n                    <Col md=\"6\">\r\n                      <Label for=\"serviceName\">\r\n                        <h4>Service Name</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"serviceName\"\r\n                        value={editPackage.serviceName}\r\n                        onChange={(e) =>\r\n                          setEditPackage({\r\n                            ...editPackage,\r\n                            serviceName: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <Label for=\"description\">\r\n                        <h4>Description</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"description\"\r\n                        value={editPackage.description}\r\n                        onChange={(e) =>\r\n                          setEditPackage({\r\n                            ...editPackage,\r\n                            description: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <Label for=\"amount\" className=\"text-muted\">\r\n                        <h4>Amount</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        id=\"amount\"\r\n                        value={editPackage.amount}\r\n                        onChange={(e) =>\r\n                          setEditPackage({\r\n                            ...editPackage,\r\n                            amount: e.target.value,\r\n                          })\r\n                        }\r\n                        className=\" text-one\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={handleSavePackage}\r\n                  className=\"mr-2\"\r\n                >\r\n                  Save\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  outline\r\n                  onClick={handlePackageCancelEdit}\r\n                  className=\"ml-2\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* package section ends */}\r\n        {/* new design cocde ends */}\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LawyerMyProfile;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport {\r\n  Button,\r\n  ButtonDropdown,\r\n  // Form,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { EmploymentTypeData } from \"../Listing/ListingData\";\r\nimport country from \"../my-login/Country\";\r\nimport language from \"../my-login/Languages\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst currentYear = new Date().getFullYear();\r\nconst years = [];\r\n\r\nfor (let year = currentYear; year >= 2005; year -= 1) {\r\n  years.push(year);\r\n}\r\n\r\nconst MyProfile = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [jobTitle, setJobTitle] = useState(\"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [linkedInUrl, setLinkedInUrl] = useState(\"\");\r\n  const [resumeFileName, setResumeFileName] = useState(\"\");\r\n  const [resumeFileId, setResumeFileId] = useState(\"\");\r\n  const [twitterHandle, setTwitterHandle] = useState(\"\");\r\n  const [personalWebsite, setPersonalWebsite] = useState(\"\");\r\n  const [education, setEducation] = useState([]);\r\n  const [work, setWork] = useState([]);\r\n  const [goal, setGoal] = useState(\"\");\r\n  const [certifications, setCertifications] = useState([]);\r\n  const [seekingFor, setSeekingFor] = useState(\"\");\r\n  const [newInputSkill, setNewInputSkill] = useState(\"\");\r\n  const [newInputCertifications, setNewInputCertifications] = useState(\"\");\r\n  const [skillValidationMessage, setSkillValidationMessage] = useState(\"\");\r\n  const [certificationsValidationMessage, setCertificationsValidationMessage] =\r\n    useState(\"\");\r\n\r\n  const { uid } = useParams();\r\n\r\n  // console.log(\"work\",work)\r\n  // console.log(\"uid\",uid)\r\n  // const endUrl = `${baseUrl}/api/userprofile/myprofile`;\r\n  const imageEditUrl = `${baseUrl}/api/userprofile/profile-image`;\r\n\r\n  let endUrl;\r\n\r\n  if (!uid) {\r\n    endUrl = `${baseUrl}/api/userprofile/myprofile`;\r\n  } else {\r\n    endUrl = `${baseUrl}/api/userprofile/profile/${uid}`;\r\n  }\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [profileData, setProfileData] = useState(false);\r\n  const [modalEditProfile, setModalEditProfile] = useState(false);\r\n  const [modalEditExperience, setModalEditExperience] = useState(false);\r\n  const [modalEditSkills, setModalEditSkills] = useState(false);\r\n  const [modalEditLanguage, setModalEditLanguage] = useState(false);\r\n  const [modalEditEducation, setModalEditEducation] = useState(false);\r\n  const [imageEditModal, setImageEditModal] = useState(false);\r\n  const [modalAbout, setModalAbout] = useState(false);\r\n  const [profileUpdate, setProfileUpdate] = useState(false);\r\n  const [modalEditCertifications, setModalEditCertifications] = useState(false);\r\n\r\n  // const [educationEdit, setEducationEdit] = useState(false);\r\n\r\n  const [experienceEditOpen, setExperienceEditOpen] = useState(false);\r\n  const [educationEditOpen, setEducationEditOpen] = useState(false);\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [selectedWorkIndex, setSelectedWorkIndex] = useState(null);\r\n\r\n  const [skills, setSkills] = useState([]);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [bio, setBio] = useState(\"\");\r\n  // console.log(\"index\",selectedIndex);\r\n  // console.log(\"educationEdit\",educationEdit);\r\n  // console.log(\"selectedWorkIndex\",selectedWorkIndex);\r\n  // const [currentEducation, setCurrentEducation] = useState(null);\r\n  // const [currentWork, setCurrentWork] = useState(null);\r\n  const [newWork, setNewWork] = useState({});\r\n\r\n  const [newEducation, setNewEducation] = useState({});\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [selectedFileBase64, setSelectedFileBase64] = useState(null);\r\n  const [fileError, setFileError] = useState(\"\");\r\n\r\n  const token = localStorage.getItem(\"tokenRes\");\r\n  // const newUpdatedWork = [...work, newWork]\r\n  const mentorProfileDetails = async () => {\r\n    try {\r\n      const response = await axios.get(endUrl);\r\n      const userData = response.data;\r\n      if (userData) {\r\n        setImage(userData.userPhotoUrl);\r\n        setFirstName(userData.firstName);\r\n        setLastName(userData.lastName);\r\n        setJobTitle(userData.jobTitle);\r\n        setLocation(userData.location);\r\n        setEducation(userData.education);\r\n        setLinkedInUrl(userData.linkedInUrl);\r\n        setResumeFileName(userData.documentName);\r\n        setResumeFileId(userData.documentId);\r\n        setLanguages(userData.languages);\r\n        setWork(userData.work);\r\n        setTwitterHandle(userData.twitterHandle);\r\n        setPersonalWebsite(userData.personalWebsite);\r\n        setSkills(userData.skills);\r\n        setSeekingFor(userData.seekingFor);\r\n        setGoal(userData.goal);\r\n        setCertifications(userData.certifications);\r\n        setBio(userData.bio);\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 4000);\r\n      setProfileData(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    mentorProfileDetails();\r\n  }, [profileUpdate, uid]);\r\n\r\n  // check ok\r\n\r\n  const postImageData = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", selectedFile);\r\n\r\n      const response = await axios.post(imageEditUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      setTimeout(() => {\r\n        setProfileUpdate(!profileUpdate);\r\n      }, 2000);\r\n      // console.log(`resres ${response.status}`);\r\n      if (response.status === 200) {\r\n        await mentorProfileDetails();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        setSelectedFileBase64(base64Image);\r\n\r\n        // setAboutField({ ...aboutField, image: base64Image });\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  // Handle file change\r\n  const handleFileChange1 = async (e) => {\r\n    // const file = event.target.files[0];\r\n    // setSelectedFile1(file);\r\n    const file = e.target.files[0];\r\n\r\n    if (file) {\r\n      const fileType = file.type;\r\n      const fileSize = file.size;\r\n\r\n      // Check if the file is a PDF\r\n      if (fileType !== \"application/pdf\") {\r\n        setFileError(\"Please upload a PDF file.\");\r\n        setResumeFileName(\"\"); // Clear the file name if invalid\r\n        return;\r\n      }\r\n\r\n      // Check if the file size is more than 2MB\r\n      if (fileSize > 2 * 1024 * 1024) {\r\n        setFileError(\"File size should be less than 2MB.\");\r\n        setResumeFileName(\"\"); // Clear the file name if invalid\r\n        return;\r\n      }\r\n\r\n      // If valid, clear the error and set the file name\r\n      setFileError(\"\");\r\n      setResumeFileName(file.name);\r\n      const formData = new FormData();\r\n      formData.append(\"resume\", file);\r\n\r\n      // Post the file to the given URL\r\n      const uploadUrl = `${baseUrl}/api/resume?role=USER`;\r\n\r\n      try {\r\n        const response = await axios.post(uploadUrl, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        });\r\n\r\n        // Handle successful response\r\n        if (response.status === 200) {\r\n          ToasterComponent(\"success\", response.data.statuses);\r\n          console.log(\"Resume uploaded successfully\", response.data);\r\n          setResumeFileId(response.data.documentId);\r\n        } else {\r\n          ToasterComponent(\"error\", \"Failed to upload resume\");\r\n          console.error(\"Failed to upload resume\", response.data);\r\n        }\r\n      } catch (error) {\r\n        // Handle errors\r\n        if (error.response) {\r\n          ToasterComponent(\r\n            \"error\",\r\n            error.response.data.message || \"Upload failed\"\r\n          );\r\n          console.error(\"Error uploading resume:\", error.response);\r\n        } else {\r\n          ToasterComponent(\"error\", \"An error occurred while uploading\");\r\n          console.error(\"Error uploading resume:\", error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateMentorProfile = async (\r\n    updatedEducation = education,\r\n    updatedWork = work\r\n  ) => {\r\n    try {\r\n      const updatedData = {\r\n        firstName,\r\n        lastName,\r\n        linkedInUrl,\r\n        twitterHandle,\r\n        languages,\r\n        personalWebsite,\r\n        education: updatedEducation,\r\n        work: updatedWork,\r\n        skills,\r\n        bio,\r\n        certifications,\r\n        goal,\r\n        seekingFor,\r\n      };\r\n\r\n      const response = await axios.put(endUrl, updatedData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n\r\n      setProfileUpdate(!profileUpdate);\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error updating profile\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditEducation = (index) => {\r\n    setNewEducation(education[index]);\r\n    setSelectedIndex(index);\r\n    // setCurrentEducation({...educationItem});\r\n    setEducationEditOpen(true);\r\n    // setEducationEdit(true);\r\n  };\r\n\r\n  const handleAddWork = () => {\r\n    setNewWork({\r\n      company: \"\",\r\n      jobTitle: \"\",\r\n      employmentType: \"\",\r\n      jobLocation: \"\",\r\n      startDate: 0,\r\n      endDate: 0,\r\n    });\r\n    setSelectedWorkIndex(null);\r\n    setExperienceEditOpen(true);\r\n  };\r\n\r\n  const handleAddEducation = () => {\r\n    // setCurrentEducation({\r\n    //   college: '',\r\n    //   degree: '',\r\n    //   department: '',\r\n    //   year: 0\r\n    // });\r\n    setEducationEditOpen(true);\r\n  };\r\n\r\n  const handleSaveWork = () => {\r\n    setWork((prevWork) => {\r\n      let updatedWork;\r\n      if (selectedWorkIndex !== null) {\r\n        updatedWork = prevWork.filter(\r\n          (_, index) => index !== selectedWorkIndex\r\n        );\r\n      } else {\r\n        updatedWork = prevWork;\r\n      }\r\n      const newWorkArray = [...updatedWork, newWork];\r\n\r\n      setTimeout(() => updateMentorProfile(education, newWorkArray), 0);\r\n\r\n      return newWorkArray;\r\n    });\r\n\r\n    setExperienceEditOpen(false);\r\n    setNewWork({\r\n      company: \"\",\r\n      jobTitle: \"\",\r\n      employmentType: \"\",\r\n      jobLocation: \"\",\r\n      startDate: 0,\r\n      endDate: 0,\r\n    });\r\n    setSelectedWorkIndex(null);\r\n  };\r\n\r\n  const handleSaveEducation = () => {\r\n    setEducation((prevEducation) => {\r\n      const updatedEducation = prevEducation.filter(\r\n        (_, index) => index !== selectedIndex\r\n      );\r\n      const newEducationArray = [...updatedEducation, newEducation];\r\n\r\n      setTimeout(() => updateMentorProfile(newEducationArray), 0);\r\n\r\n      return newEducationArray;\r\n    });\r\n    setSelectedIndex(null);\r\n    setEducationEditOpen(false);\r\n    setNewEducation({\r\n      college: \"\",\r\n      degree: \"\",\r\n      department: \"\",\r\n      year: 0,\r\n    });\r\n  };\r\n\r\n  const handleEditWork = (index) => {\r\n    setNewWork(work[index]);\r\n    setSelectedWorkIndex(index);\r\n    // setCurrentWork({...workItem});\r\n    setExperienceEditOpen(true);\r\n  };\r\n\r\n  const handleAddLanguages = (newLanguages) => {\r\n    setLanguages([...languages, newLanguages]);\r\n  };\r\n\r\n  const handleRemoveLanguages = (index) => {\r\n    setLanguages(languages.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const languageOptions = language.map((option) => ({\r\n    value: option.iso_code,\r\n    label: option.name,\r\n  }));\r\n\r\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\r\n\r\n  const handleChange = (selectedOptions) => {\r\n    const languagesArray = selectedOptions\r\n      ? selectedOptions.map((option) => option.value)\r\n      : [];\r\n    handleAddLanguages(languagesArray[0]);\r\n    setSelectedLanguages([]);\r\n  };\r\n\r\n  const handleImageClick = () => setImageEditModal(true);\r\n  const handleEditProfileSave = () => {\r\n    setModalEditProfile(false);\r\n    updateMentorProfile();\r\n  };\r\n\r\n  const handleAboutSave = () => {\r\n    setModalAbout(false);\r\n    updateMentorProfile();\r\n  };\r\n\r\n  const handleSkillsSave = () => {\r\n    setModalEditSkills(false);\r\n    updateMentorProfile();\r\n  };\r\n\r\n  const handleCertificationsSave = () => {\r\n    setModalEditCertifications(false);\r\n    updateMentorProfile();\r\n  };\r\n\r\n  const handleLanguageSave = () => {\r\n    setModalEditLanguage(false);\r\n    updateMentorProfile();\r\n  };\r\n\r\n  const handleAddSkill = (newSkill) => {\r\n    if (!newSkill.trim()) {\r\n      setSkillValidationMessage(\"Skill cannot be empty\");\r\n    } else {\r\n      setSkillValidationMessage(\"\");\r\n      setSkills([...skills, newSkill]);\r\n    }\r\n  };\r\n\r\n  const handleAddCertifications = (newCertification) => {\r\n    if (!newCertification.trim()) {\r\n      setCertificationsValidationMessage(\"Certification cannot be empty\");\r\n    } else {\r\n      setCertificationsValidationMessage(\"\");\r\n      setCertifications([...certifications, newCertification]);\r\n    }\r\n  };\r\n\r\n  const handleRemoveSkill = (index) => {\r\n    setSkills(skills.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleRemoveCertifications = (index) => {\r\n    setCertifications(certifications.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleEducationCancel = () => {\r\n    setEducationEditOpen(false);\r\n    setSelectedIndex(null);\r\n  };\r\n\r\n  const handleImagePost = () => {\r\n    postImageData();\r\n    setSelectedFile(null);\r\n    setImageEditModal(false);\r\n  };\r\n\r\n  const handleImageDelete = () => {\r\n    // setSelectedFile(image);\r\n    setImageEditModal(false);\r\n  };\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\r\n\r\n  const handleView = async (fileId) => {\r\n    const viewUrl = `${baseUrl}/api/resume/${fileId}`; // Replace with your actual API endpoint\r\n\r\n    try {\r\n      const response = await axios.get(viewUrl, {\r\n        // This is important for downloading binary files\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Include authorization if required\r\n        },\r\n      });\r\n      // const response = await axios.get(viewUrl);\r\n\r\n      if (response.status === 200) {\r\n        // Create a URL for the binary response\r\n        // const fileUrl = window.URL.createObjectURL(new Blob([response.data]));\r\n        // const blobUrl = window.URL.createObjectURL(new Blob([response.data]));\r\n\r\n        // Open the file in a new tab\r\n        window.open(viewUrl, \"_blank\");\r\n      } else {\r\n        ToasterComponent(\"error\", \"Failed to view resume\");\r\n        console.error(\"Failed to view resume\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.message || \"View failed\");\r\n        console.error(\"Error viewing resume:\", error.response);\r\n      } else {\r\n        ToasterComponent(\"error\", \"An error occurred while viewing\");\r\n        console.error(\"Error viewing resume:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (fileId) => {\r\n    const deleteUrl = `${baseUrl}/api/resume/${fileId}?role=USER`; // Replace with your actual delete API endpoint\r\n\r\n    try {\r\n      const response = await axios.delete(deleteUrl);\r\n\r\n      if (response.status === 200) {\r\n        // Assuming the deletion is successful\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n        console.log(\"File deleted successfully\");\r\n        // Add any other logic here like updating the state or UI\r\n        setResumeFileName(\"\");\r\n      } else {\r\n        console.error(\"Failed to delete the file\", \"Error\");\r\n      }\r\n    } catch (error) {\r\n      // Handle the error here\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error deleting the file:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-center\">\r\n      <Colxx sm=\"12\" md=\"10\" lg=\"10\" xxs=\"12\" className=\"\">\r\n        <div className=\"\">\r\n          {loading ? (\r\n            <div className=\"loading\" />\r\n          ) : (\r\n            <>\r\n              {profileData ? (\r\n                <div className=\"text-center mt-4\">\r\n                  <i className=\"simple-icon-exclamation display-4\" />\r\n                  <h4 className=\"mt-4\">\r\n                    Failed to fetch profile data from server{\" \"}\r\n                  </h4>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <Row>\r\n                    <Col>\r\n                      <Card>\r\n                        <CardBody\r\n                          style={{\r\n                            background:\r\n                              \"linear-gradient(to right, #7B42C5, #AA5D93)\",\r\n                            color: \"white\",\r\n                            borderRadius: \"9px 9px 0 0\",\r\n                          }}\r\n                        >\r\n                          {/* <div\r\n                            className=\"text-end w-100  \r\n                         m-0 d-flex justify-content-end \"\r\n                          >\r\n                            {!uid &&\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"icon-button\"\r\n                              size=\"sm\"\r\n                            >\r\n                              <i className=\"simple-icon-pencil text-primary font-weight-bold\" />\r\n                            </Button>}\r\n                          </div> */}\r\n                          {!uid && (\r\n                            <div\r\n                              className=\"position-relative\"\r\n                              style={{\r\n                                position: \"relative\",\r\n                                top: \"5px\",\r\n                                textAlign: \"end\",\r\n                              }}\r\n                            >\r\n                              <Button\r\n                                color=\"primary\"\r\n                                outline\r\n                                className=\"icon-button  bg-light\"\r\n                                style={{ border: \"none\" }}\r\n                                size=\"sm\"\r\n                                onClick={() => handleImageClick()}\r\n                              >\r\n                                <i className=\"simple-icon-pencil\" />\r\n                              </Button>\r\n                            </div>\r\n                          )}\r\n\r\n                          <div\r\n                            className=\"position-relative\"\r\n                            style={{ position: \"relative\", top: \"70px\" }}\r\n                          >\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn p-0\"\r\n                              style={{ border: \"none\", background: \"none\" }}\r\n                              // onClick={() => handleImageClick()}\r\n                              aria-label=\"Profile image\"\r\n                            >\r\n                              {image === null ? (\r\n                                <ThumbnailLetters\r\n                                  // small\r\n                                  rounded\r\n                                  text={firstName}\r\n                                  className=\"mx-2\"\r\n                                  color=\"secondary\"\r\n                                />\r\n                              ) : (\r\n                                <img\r\n                                  // src=\"/assets/img/profiles/2.jpg\"\r\n                                  src={\r\n                                    selectedFileBase64 || `${baseUrl}/${image}`\r\n                                  }\r\n                                  className=\"rounded-circle img-thumbnail border border-3\"\r\n                                  style={{\r\n                                    width: \"130px\",\r\n                                    height: \"130px\",\r\n                                    objectFit: \"cover\",\r\n                                  }}\r\n                                  alt=\"Profile\"\r\n                                />\r\n                              )}\r\n                            </button>\r\n\r\n                            <Modal\r\n                              isOpen={imageEditModal}\r\n                              toggle={() => setImageEditModal(!imageEditModal)}\r\n                              className=\"\"\r\n                              size=\"lg\"\r\n                              style={{\r\n                                borderRadius: \"10px\",\r\n                                overflow: \"hidden\",\r\n                              }}\r\n                            >\r\n                              <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                                <h2 className=\"font-weight-bold\">\r\n                                  Profile photo\r\n                                </h2>\r\n                              </ModalHeader>\r\n                              <ModalBody className=\"d-flex justify-content-center align-items-center\">\r\n                                {/* <img\r\n                                  // src=\"/assets/img/profiles/2.jpg\"\r\n                                  src={\r\n                                    selectedFileBase64 || `${baseUrl}/${image}`\r\n                                  }\r\n                                  className=\"rounded-circle img-thumbnail border border-3\"\r\n                                  style={{\r\n                                    width: \"130px\",\r\n                                    height: \"130px\",\r\n                                    objectFit: \"cover\",\r\n                                  }}\r\n                                  alt=\"img\"\r\n                                /> */}\r\n                                {image === null ? (\r\n                                  <ThumbnailLetters\r\n                                    rounded\r\n                                    text={firstName}\r\n                                    className=\"mx-2\"\r\n                                    color=\"secondary\"\r\n                                    style={{\r\n                                      width: \"130px\",\r\n                                      height: \"130px\",\r\n                                      objectFit: \"cover\",\r\n                                    }}\r\n                                  />\r\n                                ) : (\r\n                                  <img\r\n                                    src={\r\n                                      selectedFileBase64 ||\r\n                                      `${baseUrl}/${image}`\r\n                                    }\r\n                                    className=\"rounded-circle img-thumbnail border border-3\"\r\n                                    style={{\r\n                                      width: \"130px\",\r\n                                      height: \"130px\",\r\n                                      objectFit: \"cover\",\r\n                                    }}\r\n                                    alt=\"img\"\r\n                                  />\r\n                                )}\r\n                              </ModalBody>\r\n                              {!uid && (\r\n                                <ModalFooter\r\n                                  // style={{ borderTop: 'none' }}\r\n                                  className=\"d-flex align-items-center justify-content-center\"\r\n                                >\r\n                                  {selectedFile ? (\r\n                                    <Button\r\n                                      outline\r\n                                      color=\"primary\"\r\n                                      onClick={() => handleImagePost()}\r\n                                      className=\"icon-button\"\r\n                                      style={{ border: \"none\" }}\r\n                                    >\r\n                                      <i className=\"iconsminds-upload \" />\r\n                                    </Button>\r\n                                  ) : (\r\n                                    <InputGroup\r\n                                      className=\"\"\r\n                                      style={{\r\n                                        width: \"auto\",\r\n                                        display: \"flex\",\r\n                                        justifyContent: \"center\",\r\n                                      }}\r\n                                    >\r\n                                      {/* {errors.image && touched.image && (\r\n                            <div className=\"invalid-feedback d-block\">\r\n                              {errors.image}\r\n                            </div>\r\n                          )} */}\r\n                                      <div className=\"\">\r\n                                        <Button\r\n                                          outline\r\n                                          className=\"icon-button\"\r\n                                          color=\"primary\"\r\n                                          style={{ border: \"none\" }}\r\n                                          onClick={() =>\r\n                                            document\r\n                                              .getElementById(\"file-upload\")\r\n                                              .click()\r\n                                          }\r\n                                        >\r\n                                          <i className=\"simple-icon-pencil\" />\r\n                                        </Button>\r\n                                        {/* <Form> */}\r\n                                        <Input\r\n                                          id=\"file-upload\"\r\n                                          type=\"file\"\r\n                                          className=\"d-none\"\r\n                                          onChange={handleFileChange}\r\n                                          // validate={validateFile}\r\n                                        />\r\n                                        {/* </Form> */}\r\n                                        {/* {file1 && (\r\n                              <p className=\"mt-2\">\r\n                                Selected file: {file1.name}\r\n                              </p>\r\n                            )}\r\n                            {errors.image && touched.image && (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.image}\r\n                              </div>\r\n                            )} */}\r\n                                      </div>\r\n                                    </InputGroup>\r\n                                  )}\r\n\r\n                                  <Button\r\n                                    color=\"primary\"\r\n                                    outline\r\n                                    onClick={() => handleImageDelete()}\r\n                                    className=\"icon-button\"\r\n                                    style={{ border: \"none\" }}\r\n                                  >\r\n                                    <i className=\"simple-icon-trash\" />\r\n                                  </Button>\r\n                                </ModalFooter>\r\n                              )}\r\n                            </Modal>\r\n                          </div>\r\n                        </CardBody>\r\n                        <CardBody>\r\n                          <div className=\"text-end w-100  d-flex justify-content-end\">\r\n                            {!uid && (\r\n                              <Button\r\n                                color=\"primary\"\r\n                                outline\r\n                                className=\"icon-button\"\r\n                                style={{ border: \"none\" }}\r\n                                size=\"sm\"\r\n                                onClick={() => setModalEditProfile(true)}\r\n                              >\r\n                                <i className=\"simple-icon-pencil\" />\r\n                              </Button>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"mt-4\">\r\n                            <h2 className=\"font-weight-bold\">\r\n                              {firstName} {lastName}\r\n                            </h2>\r\n                            <h3 className=\"text-one\">\r\n                              {work.length > 0 && work[0].jobTitle} |{\" \"}\r\n                              {work.length > 0 && work[0].company}\r\n                            </h3>\r\n                            <div>\r\n                              <h6 className=\"text-muted\">{location}</h6>\r\n                              <h6>{work.length > 0 && work[0].jobLocation}</h6>\r\n                              <h6 className=\"text-muted\">{resumeFileName}</h6>\r\n                            </div>\r\n                          </div>\r\n                        </CardBody>\r\n                        <Modal\r\n                          isOpen={modalEditProfile}\r\n                          toggle={() => setModalEditProfile(!modalEditProfile)}\r\n                          className=\"\"\r\n                          size=\"lg\"\r\n                          style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                        >\r\n                          <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                            <h2 className=\"font-weight-bold\">Edit Profile</h2>\r\n                          </ModalHeader>\r\n                          <ModalBody>\r\n                            <Row className=\"\">\r\n                              <Col md=\"6\">\r\n                                <Label for=\"firstName\" className=\"text-muted\">\r\n                                  <h4>First Name</h4>\r\n                                </Label>\r\n                                <Input\r\n                                  type=\"text\"\r\n                                  id=\"firstName\"\r\n                                  value={firstName}\r\n                                  onChange={(e) => setFirstName(e.target.value)}\r\n                                  className=\" text-one\"\r\n                                />\r\n                              </Col>\r\n                              <Col md=\"6\">\r\n                                <Label for=\"lastName\" className=\"text-muted\">\r\n                                  <h4>Last Name</h4>\r\n                                </Label>\r\n                                <Input\r\n                                  type=\"text\"\r\n                                  id=\"lastName\"\r\n                                  value={lastName}\r\n                                  onChange={(e) => setLastName(e.target.value)}\r\n                                  className=\" text-one\"\r\n                                />\r\n                              </Col>\r\n                            </Row>\r\n                            <br />\r\n\r\n                            <>\r\n                              <Label for=\"jobtitle\" className=\"text-muted\">\r\n                                <h4>Job Title</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                id=\"jobtitle\"\r\n                                value={jobTitle}\r\n                                onChange={(e) => setJobTitle(e.target.value)}\r\n                                className=\" text-one\"\r\n                              />\r\n                              <br />\r\n                            </>\r\n                            {/* <>\r\n                              <Label for=\"jobtitle\" className=\"text-muted\">\r\n                                <h4>Job Title</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                id=\"jobtitle\"\r\n                                value={work.length > 0 && work[0].jobTitle}\r\n                                onChange={(e) => {\r\n                                  const newValue = e.target.value;\r\n                                  // Update the state with the new value\r\n                                  setJobTitle(newValue);\r\n                                  // Optionally, update the work array if needed\r\n                                  setWork((prevWork) =>\r\n                                    prevWork.map((item) =>\r\n                                      item.id === work[0].id\r\n                                        ? { ...item, jobTitle: newValue }\r\n                                        : item\r\n                                    )\r\n                                  );\r\n                                }}\r\n                                className=\" text-one\"\r\n                              />\r\n                              <br />\r\n                            </> */}\r\n                            <>\r\n                              <Label for=\"company\" className=\"text-muted\">\r\n                                <h4>Company</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                id=\"company\"\r\n                                value={company}\r\n                                onChange={(e) => setCompany(e.target.value)}\r\n                                className=\" text-one\"\r\n                              />\r\n                              <br />\r\n                            </>\r\n\r\n                            <>\r\n                              <Label for=\"location\" className=\"text-muted\">\r\n                                <h4>Location</h4>\r\n                              </Label>\r\n\r\n                              <Input\r\n                                type=\"select\"\r\n                                name=\"location\"\r\n                                value={location}\r\n                                // validate={validateLocation}\r\n                                onChange={(e) => setLocation(e.target.value)}\r\n                                className=\"form-control text-one\"\r\n                              >\r\n                                <option disabled value=\"\">\r\n                                  Select Location\r\n                                </option>\r\n                                {country.map((option) => (\r\n                                  <option\r\n                                    key={option.iso_code}\r\n                                    value={option.iso_code}\r\n                                  >\r\n                                    {option.name}\r\n                                  </option>\r\n                                ))}\r\n                              </Input>\r\n                              <br />\r\n                            </>\r\n                            <Row>\r\n                              <Col md={6}>\r\n                                <>\r\n                                  <Label for=\"resume\" className=\"text-muted\">\r\n                                    <h4>CV</h4>\r\n                                  </Label>\r\n                                  <div\r\n                                    className=\" p-2 my-2 d-flex justify-content-between text-one align-items-center\"\r\n                                    style={{\r\n                                      border: \"1px solid #ccc\",\r\n                                      minWidth: \"200px\",\r\n                                    }}\r\n                                  >\r\n                                    {resumeFileName || \"no file selected\"}\r\n                                    {/* <i\r\n                                      className=\"fa-solid fa-ellipsis\"\r\n                                      style={{\r\n                                        color: \"#333\",\r\n                                        cursor: \"pointer\",\r\n                                      }}\r\n                                    /> */}\r\n                                    <ButtonDropdown\r\n                                      isOpen={dropdownOpen}\r\n                                      toggle={toggleDropdown}\r\n                                    >\r\n                                      <DropdownToggle\r\n                                        caret\r\n                                        style={{\r\n                                          backgroundColor: \"transparent\",\r\n                                          border: \"none\",\r\n                                          padding: 0,\r\n                                        }}\r\n                                      >\r\n                                        <i\r\n                                          className=\"fa-solid fa-ellipsis\"\r\n                                          style={{\r\n                                            color: \"#333\",\r\n                                            cursor: \"pointer\",\r\n                                          }}\r\n                                        />\r\n                                      </DropdownToggle>\r\n\r\n                                      <DropdownMenu>\r\n                                        <DropdownItem\r\n                                          onClick={() =>\r\n                                            handleView(resumeFileId)\r\n                                          }\r\n                                        >\r\n                                          view\r\n                                        </DropdownItem>\r\n                                        <DropdownItem\r\n                                          onClick={() =>\r\n                                            handleDelete(resumeFileId)\r\n                                          }\r\n                                        >\r\n                                          delete\r\n                                        </DropdownItem>\r\n                                      </DropdownMenu>\r\n                                    </ButtonDropdown>\r\n                                  </div>\r\n                                  <InputGroup className=\"\">\r\n                                    <div className=\"\">\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        style={{\r\n                                          cursor: \"pointer\",\r\n\r\n                                          background: \"none\",\r\n                                          border: \"none\",\r\n                                        }}\r\n                                        onClick={() =>\r\n                                          document\r\n                                            .getElementById(\"file-upload\")\r\n                                            .click()\r\n                                        }\r\n                                      >\r\n                                        <h5>+ Add your Resume</h5>\r\n                                      </button>\r\n                                      {/* <Form> */}\r\n\r\n                                      <Input\r\n                                        id=\"file-upload\"\r\n                                        type=\"file\"\r\n                                        className=\"d-none\"\r\n                                        // onChange={handleFileChange1}\r\n                                        // validate={validateFile}\r\n                                        onChange={(e) => handleFileChange1(e)}\r\n                                      />\r\n                                    </div>\r\n                                  </InputGroup>\r\n                                  <br />\r\n                                  {fileError && (\r\n                                    <p style={{ color: \"red\" }}>{fileError}</p>\r\n                                  )}\r\n                                </>\r\n                              </Col>\r\n                            </Row>\r\n                          </ModalBody>\r\n                          <ModalFooter\r\n                            style={{ borderTop: \"none\" }}\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              onClick={() => handleEditProfileSave()}\r\n                            >\r\n                              Save\r\n                            </Button>{\" \"}\r\n                            <Button\r\n                              color=\"primary\"\r\n                              outline\r\n                              onClick={() => setModalEditProfile(false)}\r\n                              className=\"\"\r\n                            >\r\n                              Cancel\r\n                            </Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"my-4\">\r\n                    <Col>\r\n                      <Card>\r\n                        <CardBody>\r\n                          <Row className=\"align-items-center\">\r\n                            <Col className=\"d-flex justify-content-between\">\r\n                              <h2 className=\"font-weight-bold\">About</h2>\r\n                              {!uid && (\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  outline\r\n                                  className=\"icon-button\"\r\n                                  size=\"sm\"\r\n                                  onClick={() => setModalAbout(true)}\r\n                                  style={{ border: \"none\" }}\r\n                                >\r\n                                  <i className=\"simple-icon-pencil\" />\r\n                                </Button>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                          <div>\r\n                            <p className=\"text-muted\">\r\n                              {bio}\r\n                              {/* Lorem ipsum dolor sit amet consectetur adipisicing */}\r\n                              {/* elit. Sequi, at? */}\r\n                            </p>\r\n                          </div>\r\n                        </CardBody>\r\n                        <Modal\r\n                          isOpen={modalAbout}\r\n                          toggle={() => setModalAbout(!modalAbout)}\r\n                          className=\"\"\r\n                          size=\"lg\"\r\n                          style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                        >\r\n                          <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                            <h2 className=\"font-weight-bold\">About</h2>\r\n                          </ModalHeader>\r\n                          <ModalBody>\r\n                            <br />\r\n\r\n                            <>\r\n                              <Label for=\"about\" className=\"text-muted\">\r\n                                <h4>About Me</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"textarea\"\r\n                                id=\"about\"\r\n                                value={bio}\r\n                                onChange={(e) => setBio(e.target.value)}\r\n                                className=\" text-one\"\r\n                              />\r\n                              <br />\r\n                            </>\r\n\r\n                            <>\r\n                              <Label for=\"linkedInUrl\" className=\"text-muted\">\r\n                                <h4>LinkedIn URL</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                id=\"linkedInUrl\"\r\n                                value={linkedInUrl}\r\n                                onChange={(e) => setLinkedInUrl(e.target.value)}\r\n                                className=\" text-one\"\r\n                              />\r\n                              <br />\r\n                            </>\r\n                            <>\r\n                              <Label for=\"email\" className=\"text-muted\">\r\n                                <h4>Twitter URL</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                id=\"twitterHandle\"\r\n                                value={twitterHandle}\r\n                                onChange={(e) =>\r\n                                  setTwitterHandle(e.target.value)\r\n                                }\r\n                                className=\" text-one\"\r\n                              />\r\n                              <p className=\"text-muted mt-1\">\r\n                                Omit the &ldquo;@&rdquo; -e.g.\r\n                                &ldquo;dqmonn&rdquo;\r\n                              </p>\r\n                              <br />\r\n                            </>\r\n                            <>\r\n                              <Label for=\"website\" className=\"text-muted\">\r\n                                <h4>Personal Website URL</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                id=\"website\"\r\n                                value={personalWebsite}\r\n                                onChange={(e) =>\r\n                                  setPersonalWebsite(e.target.value)\r\n                                }\r\n                                className=\" text-one\"\r\n                              />\r\n                              <br />\r\n                            </>\r\n                          </ModalBody>\r\n                          <ModalFooter\r\n                            style={{ borderTop: \"none\" }}\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              onClick={() => handleAboutSave()}\r\n                            >\r\n                              Save\r\n                            </Button>{\" \"}\r\n                            <Button\r\n                              color=\"primary\"\r\n                              outline\r\n                              onClick={() => setModalAbout(false)}\r\n                              className=\"\"\r\n                            >\r\n                              Cancel\r\n                            </Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"my-4\">\r\n                    <Col>\r\n                      <Card>\r\n                        <CardBody>\r\n                          <Row className=\"align-items-center\">\r\n                            <Col className=\"d-flex justify-content-between\">\r\n                              <h2 className=\"font-weight-bold\">Experience</h2>\r\n                              {!uid && (\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  outline\r\n                                  className=\"icon-button\"\r\n                                  style={{ border: \"none\" }}\r\n                                  size=\"sm\"\r\n                                  onClick={() => setModalEditExperience(true)}\r\n                                >\r\n                                  <i className=\"simple-icon-pencil\" />\r\n                                </Button>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                          {work.map((w, index) => (\r\n                            // eslint-disable-next-line react/no-array-index-key\r\n                            <div key={index}>\r\n                              <h6>{w.jobTitle}</h6>\r\n                              <h6 className=\"text-muted\">\r\n                                {w.company} | {w.startDate} -{\" \"}\r\n                                {w.endDate === currentYear\r\n                                  ? \"Present\"\r\n                                  : w.endDate}\r\n                                {/* - 1 month */}\r\n                              </h6>\r\n                            </div>\r\n                          ))}\r\n                          {/* <div>\r\n                        <h6>Web Developer(internship)</h6>\r\n                        <h6 className=\"text-muted\">Metaverse | 15th Jun - present - 1 month</h6>\r\n                        </div> */}\r\n                        </CardBody>\r\n                        <Modal\r\n                          isOpen={modalEditExperience}\r\n                          toggle={() =>\r\n                            setModalEditExperience(!modalEditExperience)\r\n                          }\r\n                          className=\"\"\r\n                          size=\"lg\"\r\n                          style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                        >\r\n                          {/* <ModalHeader style={{ borderBottom: 'none' }}>\r\n                    <h2 className=\"font-weight-bold\">Experience</h2>\r\n                  </ModalHeader> */}\r\n                          <ModalBody>\r\n                            <Row className=\"align-items-center mb-3 \">\r\n                              <Col>\r\n                                <h2 className=\"font-weight-bold\">\r\n                                  Edit Experience\r\n                                </h2>\r\n                              </Col>\r\n                              <Col xs=\"auto\" className=\"ml-auto\">\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  outline\r\n                                  className=\"icon-button\"\r\n                                  style={{ border: \"none\" }}\r\n                                  size=\"sm\"\r\n                                  onClick={handleAddWork}\r\n                                >\r\n                                  <span\r\n                                    className=\"text-primary\"\r\n                                    style={{ fontSize: \"24px\" }}\r\n                                  >\r\n                                    +\r\n                                  </span>\r\n                                </Button>\r\n                              </Col>\r\n                            </Row>\r\n                            {/* <p>No education added</p> */}\r\n                            {experienceEditOpen ? (\r\n                              <>\r\n                                <FormGroup className=\"error-l-125\">\r\n                                  <Label for=\"twitterHandle\">Job Title</Label>\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name=\"jobTitle\"\r\n                                    id=\"jobTitle\"\r\n                                    value={newWork.jobTitle}\r\n                                    onChange={(e) => {\r\n                                      const { name, value } = e.target;\r\n                                      setNewWork((prevState) => ({\r\n                                        ...prevState,\r\n                                        [name]: value,\r\n                                      }));\r\n                                    }}\r\n                                  />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"error-l-125\">\r\n                                  <Label for=\"twitterHandle\">\r\n                                    Employment type\r\n                                  </Label>\r\n                                  {/* <Input\r\n                                    type=\"text\"\r\n                                    name=\"employmentType\"\r\n                                    id=\"employmentType\"\r\n                                    value={newWork.employmentType}\r\n                                    // className=\"form-control\"\r\n                                      onChange={(e) => {\r\n                                        const { name, value } = e.target;\r\n                                        setNewWork(prevState => ({\r\n                                          ...prevState, \r\n                                          [name]: value \r\n                                        }));\r\n                                      }}\r\n                                  /> */}\r\n                                  <Input\r\n                                    type=\"select\"\r\n                                    name=\"employmentType\"\r\n                                    id=\"employmentType\"\r\n                                    value={newWork.employmentType}\r\n                                    // className=\"form-control\"\r\n                                    onChange={(e) => {\r\n                                      const { name, value } = e.target;\r\n                                      setNewWork((prevState) => ({\r\n                                        ...prevState,\r\n                                        [name]: value,\r\n                                      }));\r\n                                    }}\r\n                                  >\r\n                                    <option key=\"\" value=\"\" disabled>\r\n                                      Select Employment type\r\n                                    </option>\r\n                                    {EmploymentTypeData.map((option, i) => (\r\n                                      // eslint-disable-next-line react/no-array-index-key\r\n                                      <option key={i} value={option.label}>\r\n                                        {option.label}\r\n                                      </option>\r\n                                    ))}\r\n                                  </Input>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"error-l-125\">\r\n                                  <Label for=\"twitterHandle\">\r\n                                    Company name\r\n                                  </Label>\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name=\"company\"\r\n                                    id=\"company\"\r\n                                    value={newWork.company}\r\n                                    // className=\"form-control\"\r\n                                    onChange={(e) => {\r\n                                      const { name, value } = e.target;\r\n                                      setNewWork((prevState) => ({\r\n                                        ...prevState,\r\n                                        [name]: value,\r\n                                      }));\r\n                                    }}\r\n                                  />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for=\"location\"\r\n                                    className=\"font-weight-medium\"\r\n                                  >\r\n                                    Location\r\n                                  </Label>\r\n                                  {/* <Input\r\n                                    type=\"select\"\r\n                                    name=\"location\"\r\n                                    value={location}\r\n                                    // validate={validateLocation}\r\n                                    onChange={(e) =>\r\n                                      setLocation(e.target.value)\r\n                                    }\r\n                                    className=\"form-control\"\r\n                                  >\r\n                                    <option disabled value=\"\">\r\n                                      Select Location\r\n                                    </option>\r\n                                    {country.map((option) => (\r\n                                      <option\r\n                                        key={option.iso_code}\r\n                                        value={option.iso_code}\r\n                                      >\r\n                                        {option.name}\r\n                                      </option>\r\n                                    ))}\r\n                                  </Input> */}\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name=\"jobLocation\"\r\n                                    id=\"jobLocation\"\r\n                                    value={newWork.jobLocation}\r\n                                    // className=\"form-control\"\r\n                                    onChange={(e) => {\r\n                                      const { name, value } = e.target;\r\n                                      setNewWork((prevState) => ({\r\n                                        ...prevState,\r\n                                        [name]: value,\r\n                                      }));\r\n                                    }}\r\n                                  />\r\n                                </FormGroup>\r\n                                <Row>\r\n                                  <Col>\r\n                                    <FormGroup>\r\n                                      <Label for=\"startDate\">Start year</Label>\r\n\r\n                                      <Input\r\n                                        type=\"select\"\r\n                                        name=\"startDate\"\r\n                                        value={newWork.startDate}\r\n                                        onChange={(e) => {\r\n                                          const { name, value } = e.target;\r\n                                          setNewWork((prevState) => ({\r\n                                            ...prevState,\r\n                                            [name]: value,\r\n                                          }));\r\n                                        }}\r\n                                        className=\"form-control text-one\"\r\n                                      >\r\n                                        <option disabled value=\"\">\r\n                                          Select year\r\n                                        </option>\r\n                                        {years.map((yr) => (\r\n                                          <option key={yr} value={yr}>\r\n                                            {yr}\r\n                                          </option>\r\n                                        ))}\r\n                                      </Input>\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <FormGroup>\r\n                                      <Label for=\"endDate\">End year</Label>\r\n\r\n                                      <Input\r\n                                        type=\"select\"\r\n                                        name=\"endDate\"\r\n                                        value={newWork.endDate}\r\n                                        onChange={(e) => {\r\n                                          const { name, value } = e.target;\r\n                                          setNewWork((prevState) => ({\r\n                                            ...prevState,\r\n                                            [name]: value,\r\n                                          }));\r\n                                        }}\r\n                                        className=\"form-control  text-one\"\r\n                                      >\r\n                                        <option disabled value=\"\">\r\n                                          Select year\r\n                                        </option>\r\n                                        {years.map((yr) => (\r\n                                          <option key={yr} value={yr}>\r\n                                            {currentYear === yr\r\n                                              ? \"Present\"\r\n                                              : yr}\r\n                                          </option>\r\n                                        ))}\r\n                                      </Input>\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                </Row>\r\n\r\n                                <ModalFooter\r\n                                  style={{ borderTop: \"none\" }}\r\n                                  className=\"d-flex align-items-center justify-content-center\"\r\n                                >\r\n                                  <Button\r\n                                    color=\"primary\"\r\n                                    onClick={() => handleSaveWork()}\r\n                                  >\r\n                                    Save\r\n                                  </Button>{\" \"}\r\n                                  <Button\r\n                                    color=\"primary\"\r\n                                    outline\r\n                                    onClick={() => setExperienceEditOpen(false)}\r\n                                    className=\"\"\r\n                                  >\r\n                                    Cancel\r\n                                  </Button>\r\n                                </ModalFooter>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                {work.map((w, index) => (\r\n                                  // eslint-disable-next-line react/no-array-index-key\r\n                                  <Row key={index}>\r\n                                    <Col>\r\n                                      {/* <h2>Dev Ops</h2>\r\n                      <h4>Web Development</h4> */}\r\n                                      {/* eslint-disable-next-line react/no-array-index-key */}\r\n                                      <div key={index}>\r\n                                        <h6>{w.jobTitle}</h6>\r\n                                        <h6 className=\"text-muted\">\r\n                                          {w.company} | {w.startDate}-{\" \"}\r\n                                          {w.endDate === currentYear\r\n                                            ? \"Present\"\r\n                                            : w.endDate}\r\n                                          {/* - 1 month */}\r\n                                        </h6>\r\n                                      </div>\r\n                                    </Col>\r\n                                    <Col className=\"d-flex justify-content-end align-items-center\">\r\n                                      <Button\r\n                                        color=\"primary\"\r\n                                        outline\r\n                                        className=\"icon-button\"\r\n                                        style={{ border: \"none\" }}\r\n                                        size=\"sm\"\r\n                                        onClick={() => handleEditWork(index)}\r\n                                      >\r\n                                        <i className=\"simple-icon-pencil\" />\r\n                                      </Button>\r\n                                    </Col>\r\n                                  </Row>\r\n                                ))}\r\n                              </>\r\n                            )}\r\n                          </ModalBody>\r\n                        </Modal>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"my-4\">\r\n                    <Col>\r\n                      <Card>\r\n                        <CardBody>\r\n                          <Row className=\"align-items-center\">\r\n                            <Col className=\"d-flex justify-content-between\">\r\n                              <h2 className=\"font-weight-bold\">Skills</h2>\r\n                              {!uid && (\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  outline\r\n                                  className=\"icon-button\"\r\n                                  style={{ border: \"none\" }}\r\n                                  size=\"sm\"\r\n                                  onClick={() => setModalEditSkills(true)}\r\n                                >\r\n                                  <i className=\"simple-icon-pencil\" />\r\n                                </Button>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <div\r\n                                className=\"d-flex flex-wrap\"\r\n                                style={{ gap: \"10px\", marginTop: \"10px\" }}\r\n                              >\r\n                                {skills.map((skill, index) => (\r\n                                  <Button\r\n                                    // eslint-disable-next-line react/no-array-index-key\r\n                                    key={index}\r\n                                    color=\"primary\"\r\n                                    outline\r\n                                    size=\"sm\"\r\n                                  >\r\n                                    {skill}\r\n                                  </Button>\r\n                                ))}\r\n                                {/* <Button color=\"primary\" outline size=\"sm\">\r\n                                  CSS\r\n                                </Button> */}\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </CardBody>\r\n\r\n                        <Modal\r\n                          isOpen={modalEditSkills}\r\n                          toggle={() => setModalEditSkills(!modalEditSkills)}\r\n                          className=\"\"\r\n                          size=\"lg\"\r\n                          style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                        >\r\n                          <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                            <h2 className=\"font-weight-bold\">Skills</h2>\r\n                          </ModalHeader>\r\n                          <ModalBody>\r\n                            <Row className=\"w-100 mb-3\">\r\n                              <Col>\r\n                                <InputGroup className=\"mb-3\">\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    placeholder=\"New skill\"\r\n                                    value={newInputSkill}\r\n                                    onChange={(e) =>\r\n                                      setNewInputSkill(e.target.value)\r\n                                    }\r\n                                    onKeyDown={(event) => {\r\n                                      if (event.key === \"Enter\") {\r\n                                        handleAddSkill(newInputSkill);\r\n                                        setNewInputSkill(\"\");\r\n                                      }\r\n                                    }}\r\n                                  />\r\n                                  {/* <InputGroupAddon addonType=\"append\">\r\n                                <Button\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    handleAddSkill(newInputSkill);\r\n                                    setNewInputSkill(\"\");\r\n                                  }}\r\n                                >\r\n                                  Add Skill\r\n                                </Button>\r\n                              </InputGroupAddon> */}\r\n                                  <Button\r\n                                    className=\"ml-2\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => {\r\n                                      handleAddSkill(newInputSkill);\r\n                                      setNewInputSkill(\"\");\r\n                                    }}\r\n                                  >\r\n                                    Add skill\r\n                                  </Button>\r\n                                </InputGroup>\r\n                              </Col>\r\n                              {skillValidationMessage && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {skillValidationMessage}\r\n                                </div>\r\n                              )}\r\n                              {/* <Col md={2}>\r\n                                <Button color=\"primary\" className=\"w-100\">\r\n                                  Add skill\r\n                                </Button>\r\n                              </Col> */}\r\n                            </Row>\r\n                            <Row>\r\n                              <ReactSortable\r\n                                list={skills}\r\n                                setList={setSkills}\r\n                                options={{ handle: \".handle\" }}\r\n                                className=\"d-flex flex-wrap ml-2\"\r\n                              >\r\n                                {skills.map((skill, index) => (\r\n                                  <Button\r\n                                    // eslint-disable-next-line react/no-array-index-key\r\n                                    key={index}\r\n                                    outline={index >= 3}\r\n                                    color=\"light\"\r\n                                    // color={index < 3 ? 'primary' : 'light'}\r\n                                    className=\"ml-2 font-weight-semibold mx-2 d-flex align-items-center text-dark\"\r\n                                    size=\"sm\"\r\n                                    onClick={() => handleRemoveSkill(index)}\r\n                                  >\r\n                                    {skill}\r\n                                    <i className=\"iconsminds-close ml-2 text-dark\" />\r\n                                  </Button>\r\n                                ))}\r\n                              </ReactSortable>\r\n                              {/* <p className=\"ml-3 text-muted mt-3\">Drag skills to set top 3 (the top 3 skills will be displayed on mentor cards)</p> */}\r\n                            </Row>\r\n                          </ModalBody>\r\n\r\n                          <ModalFooter\r\n                            style={{ borderTop: \"none\" }}\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              onClick={() => handleSkillsSave()}\r\n                            >\r\n                              Save\r\n                            </Button>{\" \"}\r\n                            <Button\r\n                              color=\"primary\"\r\n                              outline\r\n                              onClick={() => setModalEditSkills(false)}\r\n                              className=\"\"\r\n                            >\r\n                              Cancel\r\n                            </Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"my-4\">\r\n                    <Col>\r\n                      <Card>\r\n                        <CardBody>\r\n                          <Row className=\"align-items-center\">\r\n                            <Col className=\"d-flex justify-content-between\">\r\n                              <h2 className=\"font-weight-bold\">\r\n                                Certifications{\" \"}\r\n                              </h2>\r\n                              {!uid && (\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  outline\r\n                                  className=\"icon-button\"\r\n                                  style={{ border: \"none\" }}\r\n                                  size=\"sm\"\r\n                                  onClick={() =>\r\n                                    setModalEditCertifications(true)\r\n                                  }\r\n                                >\r\n                                  <i className=\"simple-icon-pencil\" />\r\n                                </Button>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <div\r\n                                className=\"d-flex flex-wrap\"\r\n                                style={{ gap: \"10px\", marginTop: \"10px\" }}\r\n                              >\r\n                                {certifications.length > 0 ? (\r\n                                  <>\r\n                                    {certifications.map(\r\n                                      (certification, index) => (\r\n                                        <Button\r\n                                          // eslint-disable-next-line react/no-array-index-key\r\n                                          key={index}\r\n                                          color=\"primary\"\r\n                                          outline\r\n                                          size=\"sm\"\r\n                                        >\r\n                                          {certification}\r\n                                        </Button>\r\n                                      )\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <span>\r\n                                    There are no certifications. Please add new\r\n                                    certifications.\r\n                                  </span>\r\n                                )}\r\n                                {/* <Button color=\"primary\" outline size=\"sm\">\r\n                                  CSS\r\n                                </Button> */}\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </CardBody>\r\n\r\n                        <Modal\r\n                          isOpen={modalEditCertifications}\r\n                          toggle={() =>\r\n                            setModalEditCertifications(!modalEditCertifications)\r\n                          }\r\n                          className=\"\"\r\n                          size=\"lg\"\r\n                          style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                        >\r\n                          <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                            <h2 className=\"font-weight-bold\">Certifications</h2>\r\n                          </ModalHeader>\r\n                          <ModalBody>\r\n                            <Row className=\"w-100 mb-3\">\r\n                              <Col>\r\n                                <InputGroup className=\"mb-3\">\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    placeholder=\"New Certification\"\r\n                                    value={newInputCertifications}\r\n                                    onChange={(e) =>\r\n                                      setNewInputCertifications(e.target.value)\r\n                                    }\r\n                                    onKeyDown={(event) => {\r\n                                      if (event.key === \"Enter\") {\r\n                                        handleAddCertifications(\r\n                                          newInputCertifications\r\n                                        );\r\n                                        setNewInputCertifications(\"\");\r\n                                      }\r\n                                    }}\r\n                                  />\r\n                                  {/* <InputGroupAddon addonType=\"append\">\r\n                                    <Button\r\n                                      outline\r\n                                      color=\"primary\"\r\n                                      onClick={() => {\r\n                                        handleAddCertifications(\r\n                                          newInputCertifications\r\n                                        );\r\n                                        setNewInputCertifications(\"\");\r\n                                      }}\r\n                                    >\r\n                                      Add Certification\r\n                                    </Button>\r\n                                  </InputGroupAddon> */}\r\n                                  <Button\r\n                                    className=\"ml-2\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => {\r\n                                      handleAddCertifications(\r\n                                        newInputCertifications\r\n                                      );\r\n                                      setNewInputCertifications(\"\");\r\n                                    }}\r\n                                  >\r\n                                    Add Certification\r\n                                  </Button>\r\n                                </InputGroup>\r\n                              </Col>\r\n                              {certificationsValidationMessage && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {certificationsValidationMessage}\r\n                                </div>\r\n                              )}\r\n                              {/* <Col md={2}>\r\n                                <Button color=\"primary\" className=\"w-100\">\r\n                                  Add skill\r\n                                </Button>\r\n                              </Col> */}\r\n                            </Row>\r\n                            <Row>\r\n                              <ReactSortable\r\n                                list={certifications}\r\n                                setList={setCertifications}\r\n                                options={{ handle: \".handle\" }}\r\n                                className=\"d-flex flex-wrap ml-2\"\r\n                              >\r\n                                {certifications.map((certification, index) => (\r\n                                  <Button\r\n                                    // eslint-disable-next-line react/no-array-index-key\r\n                                    key={index}\r\n                                    outline={index >= 3}\r\n                                    color=\"light\"\r\n                                    // color={index < 3 ? 'primary' : 'light'}\r\n                                    className=\"ml-2 font-weight-semibold mx-2 d-flex align-items-center text-dark\"\r\n                                    size=\"sm\"\r\n                                    onClick={() =>\r\n                                      handleRemoveCertifications(index)\r\n                                    }\r\n                                  >\r\n                                    {certification}\r\n                                    <i className=\"iconsminds-close ml-2 text-dark\" />\r\n                                  </Button>\r\n                                ))}\r\n                              </ReactSortable>\r\n                              {/* <p className=\"ml-3 text-muted mt-3\">Drag skills to set top 3 (the top 3 skills will be displayed on mentor cards)</p> */}\r\n                            </Row>\r\n                          </ModalBody>\r\n\r\n                          <ModalFooter\r\n                            style={{ borderTop: \"none\" }}\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              onClick={() => handleCertificationsSave()}\r\n                            >\r\n                              Save\r\n                            </Button>{\" \"}\r\n                            <Button\r\n                              color=\"primary\"\r\n                              outline\r\n                              onClick={() => setModalEditCertifications(false)}\r\n                              className=\"\"\r\n                            >\r\n                              Cancel\r\n                            </Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"my-4\">\r\n                    <Col>\r\n                      <Card>\r\n                        <CardBody>\r\n                          <Row className=\"align-items-center\">\r\n                            <Col className=\"d-flex justify-content-between\">\r\n                              <h2 className=\"font-weight-bold\">Education</h2>\r\n                              {!uid && (\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  outline\r\n                                  className=\"icon-button\"\r\n                                  style={{ border: \"none\" }}\r\n                                  size=\"sm\"\r\n                                  onClick={() => setModalEditEducation(true)}\r\n                                >\r\n                                  <i className=\"simple-icon-pencil\" />\r\n                                </Button>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                          {education.map((e, index) => (\r\n                            // eslint-disable-next-line react/no-array-index-key\r\n                            <div key={index}>\r\n                              <div className=\"my-3\">\r\n                                <h6>{e.college}</h6>\r\n                                <h6 className=\"text-muted\">\r\n                                  {e.degree} | {e.department} | {e.year}\r\n                                </h6>\r\n                              </div>\r\n                              {/* <div className=\"my-3\">\r\n                          <h6>MRS College</h6>\r\n                          <h6 className=\"text-muted\">B.sc Computer Application | 2022-2023</h6>\r\n                        </div>\r\n                        <div className=\"my-3\">\r\n                          <h6>HHS School</h6>\r\n                          <h6 className=\"text-muted\">Higher Secondary | 2016-2018</h6>\r\n                        </div> */}\r\n                            </div>\r\n                          ))}\r\n                        </CardBody>\r\n                        <Modal\r\n                          isOpen={modalEditEducation}\r\n                          toggle={() =>\r\n                            setModalEditEducation(!modalEditEducation)\r\n                          }\r\n                          className=\"\"\r\n                          size=\"lg\"\r\n                          style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                        >\r\n                          {/* <ModalHeader className=\"\" style={{ borderBottom: 'none' }}> */}\r\n\r\n                          {/* </ModalHeader> */}\r\n\r\n                          <ModalBody>\r\n                            <Row className=\"align-items-center mb-3 \">\r\n                              <Col>\r\n                                <h2 className=\"font-weight-bold\">Education</h2>\r\n                              </Col>\r\n                              <Col xs=\"auto\" className=\"ml-auto\">\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  outline\r\n                                  className=\"icon-button\"\r\n                                  style={{ border: \"none\" }}\r\n                                  size=\"sm\"\r\n                                  onClick={handleAddEducation}\r\n                                >\r\n                                  <span\r\n                                    className=\"text-primary\"\r\n                                    style={{ fontSize: \"24px\" }}\r\n                                  >\r\n                                    +\r\n                                  </span>\r\n                                </Button>\r\n                              </Col>\r\n                            </Row>\r\n                            {/* <p>No education added</p> */}\r\n                            {educationEditOpen ? (\r\n                              <>\r\n                                <FormGroup className=\"error-l-125\">\r\n                                  <Label for=\"twitterHandle\">School</Label>\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name=\"college\"\r\n                                    id=\"college\"\r\n                                    value={newEducation.college}\r\n                                    onChange={(e) => {\r\n                                      const { name, value } = e.target;\r\n                                      setNewEducation((prevState) => ({\r\n                                        ...prevState,\r\n                                        [name]: value,\r\n                                      }));\r\n                                    }}\r\n                                    // className=\"form-control\"\r\n                                  />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"error-l-125\">\r\n                                  <Label for=\"twitterHandle\">Degree</Label>\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name=\"degree\"\r\n                                    id=\"degree\"\r\n                                    // className=\"form-control\"\r\n                                    value={newEducation.degree}\r\n                                    onChange={(e) => {\r\n                                      const { name, value } = e.target;\r\n                                      setNewEducation((prevState) => ({\r\n                                        ...prevState,\r\n                                        [name]: value,\r\n                                      }));\r\n                                    }}\r\n                                  />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"error-l-125\">\r\n                                  <Label for=\"twitterHandle\">Field study</Label>\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name=\"department\"\r\n                                    id=\"department\"\r\n                                    // className=\"form-control\"\r\n                                    value={newEducation.department}\r\n                                    onChange={(e) => {\r\n                                      const { name, value } = e.target;\r\n                                      setNewEducation((prevState) => ({\r\n                                        ...prevState,\r\n                                        [name]: value,\r\n                                      }));\r\n                                    }}\r\n                                  />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                  <Label for=\"location\" className=\"text-muted\">\r\n                                    <h4>End year</h4>\r\n                                  </Label>\r\n\r\n                                  <Input\r\n                                    type=\"select\"\r\n                                    name=\"year\"\r\n                                    value={newEducation.year}\r\n                                    onChange={(e) => {\r\n                                      const { name, value } = e.target;\r\n                                      setNewEducation((prevState) => ({\r\n                                        ...prevState,\r\n                                        [name]: value,\r\n                                      }));\r\n                                    }}\r\n                                    className=\"form-control  text-one\"\r\n                                  >\r\n                                    {/* <option disabled value=\"\">\r\n                                  Select Location\r\n                                </option> */}\r\n                                    {years.map((yr) => (\r\n                                      <option key={yr} value={yr}>\r\n                                        {yr}\r\n                                      </option>\r\n                                    ))}\r\n                                  </Input>\r\n                                </FormGroup>\r\n\r\n                                <ModalFooter\r\n                                  style={{ borderTop: \"none\" }}\r\n                                  className=\"d-flex align-items-center justify-content-center\"\r\n                                >\r\n                                  <Button\r\n                                    color=\"primary\"\r\n                                    onClick={handleSaveEducation}\r\n                                  >\r\n                                    Save\r\n                                  </Button>{\" \"}\r\n                                  <Button\r\n                                    color=\"primary\"\r\n                                    outline\r\n                                    onClick={() => handleEducationCancel()}\r\n                                    className=\"\"\r\n                                  >\r\n                                    Cancel\r\n                                  </Button>\r\n                                </ModalFooter>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                {education.map((e, index) => (\r\n                                  // eslint-disable-next-line react/no-array-index-key\r\n                                  <Row key={index}>\r\n                                    <Col>\r\n                                      <div className=\"my-3\">\r\n                                        <h6>{e.college}</h6>\r\n                                        <h6 className=\"text-muted\">\r\n                                          {e.degree} | {e.department} | {e.year}\r\n                                        </h6>\r\n                                      </div>\r\n                                    </Col>\r\n                                    <Col className=\"d-flex justify-content-end align-items-center\">\r\n                                      <Button\r\n                                        color=\"primary\"\r\n                                        outline\r\n                                        className=\"icon-button\"\r\n                                        style={{ border: \"none\" }}\r\n                                        size=\"sm\"\r\n                                        onClick={() =>\r\n                                          handleEditEducation(index)\r\n                                        }\r\n                                      >\r\n                                        <i className=\"simple-icon-pencil\" />\r\n                                      </Button>\r\n                                    </Col>\r\n                                  </Row>\r\n                                ))}\r\n                              </>\r\n                            )}\r\n                          </ModalBody>\r\n                        </Modal>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"my-4\">\r\n                    <Col>\r\n                      <Card>\r\n                        <CardBody>\r\n                          <Row className=\"align-items-center\">\r\n                            <Col className=\"d-flex justify-content-between\">\r\n                              <h2 className=\"font-weight-bold\">Languages</h2>\r\n                              {!uid && (\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  outline\r\n                                  className=\"icon-button\"\r\n                                  style={{ border: \"none\" }}\r\n                                  size=\"sm\"\r\n                                  onClick={() => setModalEditLanguage(true)}\r\n                                >\r\n                                  <i className=\"simple-icon-pencil\" />\r\n                                </Button>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                          <div className=\"\">\r\n                            <div className=\"\">\r\n                              {/* <ul className=\"text-one text-muted font-weight-bold d-flex flex-wrap p-0 mx-3 text-start\" \r\n                            style={{gap:\"30px\"}}>\r\n                            {languages.map((lang,index) => (\r\n                                // eslint-disable-next-line react/no-array-index-key\r\n                              <li key={index} className=\"\">\r\n                              {language.find((l) => l.iso_code === lang)?.name}{\" \"}\r\n                              </li>\r\n                          ))}\r\n                            </ul> */}\r\n                              <ul\r\n                                className=\"text-one text-muted font-weight-bold d-flex flex-wrap p-0 mx-3 text-start\"\r\n                                style={{\r\n                                  gap: \"30px\",\r\n                                  listStyle: \"none\",\r\n                                  paddingLeft: 0,\r\n                                }}\r\n                              >\r\n                                {languages.map((lang, index) => (\r\n                                  <li\r\n                                    // eslint-disable-next-line react/no-array-index-key\r\n                                    key={index}\r\n                                    style={{\r\n                                      position: \"relative\",\r\n                                      paddingLeft: \"20px\",\r\n                                    }}\r\n                                  >\r\n                                    <span\r\n                                      style={{\r\n                                        content: '\"\"',\r\n                                        position: \"absolute\",\r\n                                        left: 0,\r\n                                        top: \"50%\",\r\n                                        transform:\r\n                                          \"translateY(-50%) rotate(45deg)\",\r\n                                        width: \"7px\",\r\n                                        height: \"7px\",\r\n                                        backgroundColor: \"currentColor\",\r\n                                      }}\r\n                                    />\r\n                                    {\r\n                                      language.find((l) => l.iso_code === lang)\r\n                                        ?.name\r\n                                    }{\" \"}\r\n                                  </li>\r\n                                ))}\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </CardBody>\r\n                        <Modal\r\n                          isOpen={modalEditLanguage}\r\n                          toggle={() =>\r\n                            setModalEditLanguage(!modalEditLanguage)\r\n                          }\r\n                          className=\"\"\r\n                          size=\"lg\"\r\n                          style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                        >\r\n                          <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                            <h2 className=\"font-weight-bold\">Languages</h2>\r\n                          </ModalHeader>\r\n                          <ModalBody>\r\n                            <>\r\n                              <FormGroup className=\"error-l-75\">\r\n                                <Select\r\n                                  placeholder=\"Select Languages\"\r\n                                  name=\"languages\"\r\n                                  isMulti\r\n                                  options={languageOptions}\r\n                                  className=\"react-select\"\r\n                                  classNamePrefix=\"react-select\"\r\n                                  value={selectedLanguages}\r\n                                  onChange={(selectedOptions) => {\r\n                                    setSelectedLanguages(selectedOptions);\r\n                                    handleChange(selectedOptions);\r\n                                  }}\r\n                                />\r\n                              </FormGroup>\r\n                              {languages.map((lang, index) => (\r\n                                <Button\r\n                                  // eslint-disable-next-line react/no-array-index-key\r\n                                  key={index}\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  className=\"mt-2 font-weight-semibold mx-2\"\r\n                                  size=\"sm\"\r\n                                  onClick={() => handleRemoveLanguages(index)}\r\n                                >\r\n                                  {\r\n                                    language.find((l) => l.iso_code === lang)\r\n                                      ?.name\r\n                                  }{\" \"}\r\n                                  <i className=\"iconsminds-close\" />\r\n                                </Button>\r\n                              ))}\r\n                            </>\r\n                          </ModalBody>\r\n                          <ModalFooter\r\n                            style={{ borderTop: \"none\" }}\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              onClick={() => handleLanguageSave()}\r\n                            >\r\n                              Save\r\n                            </Button>{\" \"}\r\n                            <Button\r\n                              color=\"primary\"\r\n                              outline\r\n                              onClick={() => setModalEditLanguage(false)}\r\n                              className=\"\"\r\n                            >\r\n                              Cancel\r\n                            </Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </Colxx>\r\n    </div>\r\n\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default MyProfile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, NavLink, Row, Col, Card } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport country from \"../my-login/Country\";\r\n\r\nconst UserProfile = () => {\r\n  const { uid } = useParams();\r\n\r\n  const [image, setImage] = useState(null);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [jobTitle, setJobTitle] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [linkedinUrl, setLinkedinUrl] = useState(\"\");\r\n  const [twitterHandle, setTwitterHandle] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [profileData, setProfileData] = useState(false);\r\n  const url = `${baseUrl}/api/userprofile/profile/${uid}`;\r\n\r\n  useEffect(() => {\r\n    const mentorProfileDetails = async () => {\r\n      try {\r\n        const response = await axios.get(url);\r\n        const userData = response.data;\r\n        if (userData) {\r\n          setImage(userData.imageUrl);\r\n          setFirstName(userData.firstName);\r\n          setLastName(userData.lastName);\r\n          setJobTitle(userData.jobTitle);\r\n          setLocation(userData.location);\r\n          setLinkedinUrl(userData.linkedIn);\r\n          setTwitterHandle(userData.twitterHandle);\r\n          setLoading(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n          setLoading(false);\r\n        }, 4000);\r\n        setProfileData(true);\r\n      }\r\n    };\r\n\r\n    mentorProfileDetails();\r\n  }, []);\r\n\r\n  const handleLinkedInClick = () => {\r\n    if (linkedinUrl) {\r\n      window.open(linkedinUrl, \"_blank\");\r\n    }\r\n  };\r\n\r\n  const handleTwitterClick = () => {\r\n    if (twitterHandle) {\r\n      const twitterUrl = `https://x.com/${twitterHandle}`;\r\n      window.open(twitterUrl, \"_blank\");\r\n    }\r\n  };\r\n\r\n  const countryName = country.find((c) => c.iso_code === location)?.name;\r\n  return (\r\n    <div className=\"mentor-profile\">\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"\">\r\n        <div className=\"\">\r\n          <Card\r\n            style={{ height: \"160px\", width: \"100%\", overflow: \"hidden\" }}\r\n            className=\"bg-primary\"\r\n          >\r\n            <div\r\n              className=\"d-flex align-items-center justify-content-between\"\r\n              style={{ height: \"100%\" }}\r\n            >\r\n              <div className=\"d-flex align-items-center mt-4 ml-4 mb-4\">\r\n                {image === null ? (\r\n                  <ThumbnailLetters\r\n                    // small\r\n                    rounded\r\n                    text={firstName}\r\n                    className=\"mx-2\"\r\n                    color=\"secondary\"\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src={`${baseUrl}/${image}`}\r\n                    // src=\"/assets/img/profiles/2.jpg\"\r\n                    className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                    style={{\r\n                      width: \"110px\",\r\n                      height: \"110px\",\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                    alt=\"img\"\r\n                  />\r\n                )}\r\n                <div className=\"ml-4 mt-2\">\r\n                  <h1 className=\"font-weight-semibold text-large\">\r\n                    {firstName} {lastName}\r\n                  </h1>\r\n                </div>\r\n              </div>\r\n              <div className=\"mr-4\">\r\n                {linkedinUrl && (\r\n                  <NavLink className=\"d-none d-md-inline-block\">\r\n                    <Button\r\n                      color=\"light\"\r\n                      className=\"font-weight-semibold icon-button\"\r\n                      size=\"large\"\r\n                      onClick={handleLinkedInClick}\r\n                    >\r\n                      <i className=\"simple-icon-social-linkedin text-primary font-weight-semibold text-one\" />\r\n                    </Button>\r\n                  </NavLink>\r\n                )}\r\n                {twitterHandle && (\r\n                  <NavLink className=\"d-none d-md-inline-block\">\r\n                    <Button\r\n                      color=\"light\"\r\n                      className=\"font-weight-semibold icon-button\"\r\n                      size=\"large\"\r\n                      onClick={handleTwitterClick}\r\n                    >\r\n                      <i className=\"simple-icon-social-twitter text-primary font-weight-semibold text-one\" />\r\n                    </Button>\r\n                  </NavLink>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Card>\r\n          {loading ? (\r\n            <div className=\"loading\" />\r\n          ) : (\r\n            <>\r\n              {profileData ? (\r\n                <div className=\"text-center mt-4\">\r\n                  <i className=\"simple-icon-exclamation display-4\" />\r\n                  <h4 className=\"mt-4\">\r\n                    Failed to fetch profile data from server{\" \"}\r\n                  </h4>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <Row>\r\n                    <Col lg=\"6\" md=\"12\" className=\"mt-4\">\r\n                      <div>\r\n                        <div className=\"ml-3\">\r\n                          {/* <h1 className=\"font-weight-semibold text-large\">\r\n                                  {firstName} {lastName}\r\n                                </h1> */}\r\n                          <h3 className=\"font-weight-semibold\">\r\n                            <i className=\"simple-icon-briefcase text-primary\" />\r\n                            <span className=\"ml-2\">{jobTitle}</span>\r\n                          </h3>\r\n                          <h5 className=\"font-weight-medium\">\r\n                            <i className=\"simple-icon-location-pin text-primary\" />\r\n                            <span className=\"ml-2 font-weight-medium\">\r\n                              {countryName}\r\n                            </span>\r\n                          </h5>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button, Card, CardBody, Row } from \"reactstrap\";\r\nimport MentorFilter from \"../mentorship/MentorFilter\";\r\n\r\nconst StudentList = () => {\r\n  const [studentListData, setStudentListData] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [paginationMeta, setPaginationMeta] = useState([]);\r\n  const [isStudentCardFetched, setIsStudentCardFetched] = useState(false);\r\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\r\n  const [selectedSkills, setSelectedSkills] = useState([]);\r\n  const handleLocationChange = (location) => setSelectedLocation(location);\r\n  const handleSkillsChange = (skills) => setSelectedSkills(skills);\r\n\r\n  const [inputkey, setInputKey] = useState(\"\");\r\n\r\n  const url = `${baseUrl}/api/userprofile/cards`;\r\n\r\n  useEffect(() => {\r\n    setIsStudentCardFetched(false);\r\n    const getStudentData = async () => {\r\n      const params = {};\r\n      params.size = 10;\r\n      params.page = currentPage - 1;\r\n\r\n      if (selectedLocation) {\r\n        params.location = selectedLocation;\r\n      }\r\n      if (selectedSkills) {\r\n        params.skills = selectedSkills;\r\n      }\r\n      try {\r\n        const response = await axios.get(url, { params });\r\n        setStudentListData(response.data.data);\r\n        setPaginationMeta(response.data.paginationMeta);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setIsStudentCardFetched(true);\r\n      }\r\n    };\r\n    getStudentData();\r\n  }, [selectedLocation, inputkey]);\r\n  return (\r\n    <div>\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n        <div>\r\n          <div className=\"\">\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group\">\r\n                <div\r\n                  style={{ position: \"relative\" }}\r\n                  className=\"col-12 col-lg-8 col-md-8\"\r\n                >\r\n                  <i\r\n                    className=\"simple-icon-magnifier mr-3\"\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: \"50%\",\r\n                      right: \"15px\",\r\n                      transform: \"translateY(-50%)\",\r\n                      zIndex: 2,\r\n                      color: \"#aaa\",\r\n                    }}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control rounded py-2\"\r\n                    placeholder=\"Search by name\"\r\n                    value={inputkey}\r\n                    onChange={(e) => setInputKey(e.target.value)}\r\n                    style={{ paddingRight: \"2.5rem\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <MentorFilter\r\n                onLocationChange={handleLocationChange}\r\n                selectedLocation={selectedLocation}\r\n                selectedSkills={selectedSkills}\r\n                onSkillsChange={handleSkillsChange}\r\n                userRole=\"user\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Colxx>\r\n\r\n      {isStudentCardFetched ? (\r\n        <div className=\"loading\" />\r\n      ) : (\r\n        <>\r\n          <div>\r\n            {studentListData.length === 0 ? (\r\n              <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n                <Card>\r\n                  <CardBody>\r\n                    <h2 className=\"text-center text-large \">No Students</h2>\r\n                  </CardBody>\r\n                </Card>\r\n              </Colxx>\r\n            ) : (\r\n              Array.isArray(studentListData) &&\r\n              studentListData.map((students) => {\r\n                return (\r\n                  <Colxx xxs=\"12\" key={students}>\r\n                    <Row>\r\n                      <Colxx\r\n                        sm=\"12\"\r\n                        md=\"12\"\r\n                        lg=\"9\"\r\n                        xxs=\"12\"\r\n                        className=\"mx-auto\"\r\n                      >\r\n                        <Card\r\n                          className=\"flex-row flex-wrap flex-sm-nowrap listing-card-container my-3 p-3\"\r\n                          style={{ gap: \"16px\" }}\r\n                        >\r\n                          <div className=\"d-block lawyer-card-img-container\">\r\n                            {students.imageUrl === null ? (\r\n                              <div\r\n                                className=\"card-img-left bg-primary \r\n                                 d-flex align-items-center justify-content-center\"\r\n                                style={{\r\n                                  width: \"200px\",\r\n                                  height: \"250px\",\r\n                                  borderRadius: \"0.75rem\",\r\n                                }}\r\n                              >\r\n                                <ThumbnailLetters\r\n                                  rounded\r\n                                  text={students.firstName}\r\n                                  className=\"text-xlarge border border-1\"\r\n                                  style={{\r\n                                    textAlign: \"center\",\r\n                                  }}\r\n                                />\r\n                              </div>\r\n                            ) : (\r\n                              <img\r\n                                className=\"lawyer-card-width\"\r\n                                src={`${baseUrl}/${students.imageUrl}`}\r\n                                alt=\"Card\"\r\n                                style={{\r\n                                  width: \"200px\",\r\n                                  height: \"250px\",\r\n                                  borderRadius: \"0.75rem\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <CardBody className=\"d-flex flex-column flex-fill p-0\">\r\n                            <div\r\n                              className=\"d-flex flex-wrap justify-content-between mb-1\"\r\n                              style={{ columnGap: \"24px\" }}\r\n                            >\r\n                              <div\r\n                                className=\"d-flex flex-wrap\"\r\n                                style={{ gap: \"10px\" }}\r\n                              >\r\n                                <div className=\"font-weight-semibold text-large text-capitalize\">\r\n                                  {students.firstName}\r\n                                </div>\r\n                                <div className=\"font-weight-semibold text-large text-capitalize\">\r\n                                  {students.lastName}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-between align-items\">\r\n                              <div className=\"\">\r\n                                <h6>\r\n                                  {students.department} | {students.year}\r\n                                </h6>\r\n                                <h6>{students.college}</h6>\r\n                              </div>\r\n                              <div\r\n                                className=\"d-flex flex-column \"\r\n                                style={{ gap: \"10px\" }}\r\n                              >\r\n                                <a\r\n                                  href={`/app/studentprofile/${students.id}`}\r\n                                  target=\"_blank\"\r\n                                  rel=\"noopener noreferrer\"\r\n                                >\r\n                                  <Button color=\"primary\">View Profile</Button>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                          </CardBody>\r\n                        </Card>\r\n                      </Colxx>\r\n                    </Row>\r\n                  </Colxx>\r\n                );\r\n              })\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {isStudentCardFetched && (\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPage={paginationMeta.totalPage}\r\n          onChangePage={(i) => setCurrentPage(i)}\r\n          lastIsActive={paginationMeta.last}\r\n          firstIsActive={paginationMeta.first}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentList;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { adminRoot, baseUrl } from \"constants/defaultValues\";\r\nimport { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Row } from \"reactstrap\";\r\n\r\nconst StudentViewProfile = () => {\r\n  const [studentProfileDetails, setStudentProfileDetails] = useState(\"\");\r\n  const [education, setEducation] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const { sid } = useParams();\r\n\r\n  const history = useHistory();\r\n  const url = `${baseUrl}/api/userprofile/profile/${sid}`;\r\n\r\n  useEffect(() => {\r\n    const StudentProfileDetails = async () => {\r\n      try {\r\n        const response = await axios.get(url);\r\n        setStudentProfileDetails(response.data);\r\n        setEducation(response.data.education);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    StudentProfileDetails();\r\n  }, []);\r\n\r\n  const [showAll, setShowAll] = useState(false);\r\n  const skillsSectionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (showAll && skillsSectionRef.current) {\r\n      skillsSectionRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [showAll]);\r\n\r\n  const scrollToSkills = useCallback(() => {\r\n    const yOffset = -60;\r\n\r\n    if (skillsSectionRef.current) {\r\n      const y =\r\n        skillsSectionRef.current.getBoundingClientRect().top +\r\n        window.pageYOffset +\r\n        yOffset;\r\n      window.scrollTo({ top: y, behavior: \"smooth\" });\r\n      return;\r\n    }\r\n\r\n    const element = document.getElementById(\"skillsSection\");\r\n    if (element) {\r\n      const y =\r\n        element.getBoundingClientRect().top + window.pageYOffset + yOffset;\r\n      window.scrollTo({ top: y, behavior: \"smooth\" });\r\n    } else {\r\n      console.error(\"unable to scroll\");\r\n    }\r\n  }, []);\r\n\r\n  const toggleShowAll = useCallback(() => {\r\n    setShowAll((prevShowAll) => !prevShowAll);\r\n\r\n    setTimeout(scrollToSkills, 100);\r\n  }, [scrollToSkills]);\r\n\r\n  const remainingSkillsCount = studentProfileDetails.skills\r\n    ? studentProfileDetails.skills.length - 3\r\n    : 0;\r\n\r\n  const chatUserId = studentProfileDetails.username;\r\n\r\n  const handleChatClick = () => {\r\n    history.push(`${adminRoot}/chat/${chatUserId}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <div className=\"loading\" />\r\n      ) : (\r\n        <div>\r\n          <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"\">\r\n            <div className=\"\">\r\n              <Row className=\"h-100\">\r\n                <div className=\"w-100 py-3 position-relative bg-primary d-flex justify-content-between align-items-center\">\r\n                  <div className=\"d-flex align-items-center \">\r\n                    {studentProfileDetails.userPhotoUrl == null ? (\r\n                      <div\r\n                        style={{\r\n                          width: \"110px\",\r\n                          height: \"110px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                        className=\"mx-2 rounded-circle border img-thumbnail\"\r\n                      >\r\n                        <ThumbnailLetters\r\n                          rounded\r\n                          small\r\n                          text={studentProfileDetails.firstName}\r\n                          className=\"w-100 h-100\"\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <img\r\n                        src={`${baseUrl}/${studentProfileDetails.userPhotoUrl}`}\r\n                        className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                        alt=\"\"\r\n                        style={{\r\n                          width: \"110px\",\r\n                          height: \"110px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-sm-5 mt-4 \">\r\n                  <h1 className=\"font-weight-semibold text-large\">\r\n                    {studentProfileDetails.firstName}{\" \"}\r\n                    {studentProfileDetails.lastName}\r\n                  </h1>\r\n                  {education &&\r\n                    education.map((edc) => {\r\n                      return (\r\n                        <div key={edc}>\r\n                          <h2>\r\n                            {edc.department} | {edc.year}\r\n                          </h2>\r\n                          <h5>{edc.college}</h5>\r\n                        </div>\r\n                      );\r\n                    })}\r\n\r\n                  <h5 className=\"font-weight-medium\">\r\n                    <i className=\"simple-icon-location-pin text-primary\" />\r\n                    <span className=\"ml-2\">\r\n                      {studentProfileDetails.location}\r\n                    </span>\r\n                  </h5>\r\n                  <div className=\" my-2\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      className=\"\"\r\n                      onClick={handleChatClick}\r\n                    >\r\n                      Chat\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-sm-7 mt-4\">\r\n                  <h2 className=\"mx-2 \">Skills</h2>\r\n\r\n                  {/* <div className='d-flex'>\r\n              {mentorprofiledetails.skills&&mentorprofiledetails.skills.map((skill)=>{\r\n               \r\n                \r\n               return (\r\n               \r\n\r\n                <div  key={skill}>\r\n                <Button color=\"light\" className=\"mb-2 font-weight-semibold mx-2\" size='xs'>\r\n                {skill}\r\n              </Button>\r\n                </div>\r\n               )\r\n              })}\r\n            </div> */}\r\n                  <div className=\"d-flex align-items-center\">\r\n                    {/* <h2 className=\"mx-2\">Skills</h2> */}\r\n                    <div className=\"d-flex\">\r\n                      {studentProfileDetails.skills &&\r\n                        studentProfileDetails.skills\r\n                          .slice(0, 3)\r\n                          .map((skill) => (\r\n                            <div key={skill}>\r\n                              <Button\r\n                                color=\"light\"\r\n                                className=\"mb-2 font-weight-semibold mx-2\"\r\n                                size=\"xs\"\r\n                              >\r\n                                {skill}\r\n                              </Button>\r\n                            </div>\r\n                          ))}\r\n                    </div>\r\n                    {studentProfileDetails.skills &&\r\n                      studentProfileDetails.skills.length > 3 && (\r\n                        <div className=\"\">\r\n                          <Button\r\n                            color=\"link\"\r\n                            className=\"text-one font-weight-bold \"\r\n                            style={{ textDecoration: \"underline\" }}\r\n                            onClick={toggleShowAll}\r\n                          >\r\n                            + {remainingSkillsCount}more\r\n                          </Button>\r\n                        </div>\r\n                      )}\r\n                  </div>\r\n                </div>\r\n              </Row>\r\n              <hr />\r\n              <Colxx className='sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" mt-5'>\r\n                <Row>\r\n                  <div className=\"w-100 \">\r\n                    <h1 className=\"font-weight-semibold text-large\">About</h1>\r\n\r\n                    <p className=\"text-one font-weight-medium \">\r\n                      {studentProfileDetails.bio}\r\n                    </p>\r\n                  </div>\r\n                </Row>\r\n                <hr />\r\n              </Colxx>\r\n              <div id=\"skillsSection\">\r\n                <Colxx lg={7} className=\"my-4\" ref={skillsSectionRef}>\r\n                  <Row>\r\n                    <h1 className=\"font-weight-semibold text-large\">Skills </h1>\r\n                  </Row>\r\n                  <Row>\r\n                    <div className=\"d-flex flex-wrap \">\r\n                      {studentProfileDetails.skills &&\r\n                        studentProfileDetails.skills.map((skill) => (\r\n                          <div key={skill}>\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"mb-2 font-weight-semibold mr-2\"\r\n                              size=\"md\"\r\n                            >\r\n                              {skill}\r\n                            </Button>\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                  </Row>\r\n                </Colxx>\r\n              </div>\r\n            </div>\r\n          </Colxx>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentViewProfile;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport {\r\n  Button,\r\n  ButtonDropdown,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  NavLink,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { EmploymentTypeData } from \"../Listing/ListingData\";\r\nimport country from \"../my-login/Country\";\r\nimport language from \"../my-login/Languages\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst AlumniMyProfile = () => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isEditingAbout, setIsEditingAbout] = useState(false);\r\n  // const [isEditingButton, setIsEditingButton] = useState(false);\r\n  const [isEditingExp, setIsEditingExp] = useState(false);\r\n  const [image, setImage] = useState(null);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [jobTitle, setJobTitle] = useState(\"\");\r\n  const [experience, setExperience] = useState([]);\r\n  // const [experience, setExperience] = useState(\"\");\r\n\r\n  const [location, setLocation] = useState(\"\");\r\n  const [newInputSkill, setNewInputSkill] = useState(\"\");\r\n  const [skills, setSkills] = useState([]);\r\n  const [price, setPrice] = useState(\"\");\r\n  const [userId, setUserId] = useState(null);\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [linkedinUrl, setLinkedinUrl] = useState(\"\");\r\n  const [twitterHandle, setTwitterHandle] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n  const [introVideo, setIntroVideo] = useState(\"\");\r\n  const [featuredArticle, setFeaturedArticle] = useState(\"\");\r\n  const [reasonForMentor, setReasonForMentor] = useState(\"\");\r\n  const [achievement, setAchievement] = useState(\"\");\r\n  const [totalRatings, setTotalRatings] = useState(0);\r\n  const [averageStar, setAverageStar] = useState(0);\r\n  // const [profileLoading, setProfileLoading] = useState(true);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [college, setCollege] = useState([]);\r\n  const [skillValidationMessage, setSkillValidationMessage] = useState(\"\");\r\n  const [isProfileUpdated, setIsProfileUpdated] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imageEditModal, setImageEditModal] = useState(false);\r\n  const [selectedFileBase64, setSelectedFileBase64] = useState(null);\r\n  const [isEditingLanguages, setIsEditingLanguages] = useState(false);\r\n  const [isEditingSkills, setIsEditingSkills] = useState(false);\r\n  const [isEditingPrice, setIsEditingPrice] = useState(false);\r\n  const [isEditingEducation, setIsEditingEducation] = useState(false);\r\n  const [isEditingEducationSecond, setIsEditingEducationSecond] =\r\n    useState(false);\r\n  // const [editedCollegeIndex, setEditedCollegeIndex] = useState(-1);\r\n  const [expId, setExpId] = useState(\"\");\r\n  const [collegeId, setCollegeId] = useState(\"\");\r\n  const [isEditingExpSecond, setIsEditingExpSecond] = useState(false);\r\n  // const [isAddingEducation, setIsAddingEducation] = useState(false);\r\n  const [editingIndex, setEditingIndex] = useState(null);\r\n  const [resumeFileName, setResumeFileName] = useState(\"\");\r\n  const [resumeFileId, setResumeFileId] = useState(\"\");\r\n  const [fileError, setFileError] = useState(\"\");\r\n\r\n  const endUrl = `${baseUrl}/api/alumni/myprofile`;\r\n  const inputUrl = `${baseUrl}/inputs`;\r\n  const imageEditUrl = `${baseUrl}/api/alumni/profile-image`;\r\n\r\n  const mentorProfileDetails = async () => {\r\n    try {\r\n      const response = await axios.get(endUrl);\r\n      const userData = response.data;\r\n      console.log(userData);\r\n      if (userData) {\r\n        setImage(userData.imageUrl);\r\n        setFirstName(userData.firstName);\r\n        setJobTitle(userData.jobTitle);\r\n        setCompany(userData.company);\r\n        setLocation(userData.location);\r\n        setResumeFileName(userData.documentName);\r\n        setResumeFileId(userData.documentId);\r\n        setSkills(userData.skills);\r\n        setPrice(userData.price);\r\n        setUserId(userData.id);\r\n        setLastName(userData.lastName);\r\n        setEmail(userData.email);\r\n        setCategory(userData.category);\r\n        setBio(userData.bio);\r\n        setLinkedinUrl(userData.linkedinUrl);\r\n        setTwitterHandle(userData.twitterHandle);\r\n        setWebsite(userData.website);\r\n        setIntroVideo(userData.introVideo);\r\n        setFeaturedArticle(userData.featuredArticle);\r\n        setReasonForMentor(userData.reasonForMentor);\r\n        setAchievement(userData.achievement);\r\n        // setProfileLoading(false);\r\n        setLanguages(userData.languages);\r\n        setExperience(userData.experience);\r\n        setCollege(userData.colleges);\r\n        if (userData.experience && userData.experience.length > 0) {\r\n          setExpId(userData.experience[0].id);\r\n        }\r\n        if (userData.colleges && userData.colleges.length > 0) {\r\n          setCollegeId(userData.colleges[0].id);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    mentorProfileDetails();\r\n  }, [isProfileUpdated]);\r\n  const currentYear = new Date().getFullYear();\r\n  const years = [];\r\n  for (let year = currentYear; year >= 2005; year -= 1) {\r\n    years.push(year);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const mentorReviews = async () => {\r\n      const ratingUrl = `${baseUrl}/api/mentorship/rating/meta/${userId}`;\r\n\r\n      try {\r\n        const response = await axios.get(ratingUrl);\r\n        setTotalRatings(response.data.totalRatings);\r\n        setAverageStar(response.data.averageStar);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    mentorReviews();\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    const mentorProfileDetails1 = async () => {\r\n      try {\r\n        const response = await axios.get(inputUrl);\r\n        const inputData = response.data;\r\n        if (inputData) {\r\n          setExperience(inputData.experience);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    mentorProfileDetails1();\r\n  }, []);\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  const updateMEntorProfile = async () => {\r\n    try {\r\n      const updatedData = {\r\n        image,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        jobTitle,\r\n        company,\r\n        location,\r\n        category,\r\n        languages,\r\n        skills,\r\n        bio,\r\n        linkedinUrl,\r\n        twitterHandle,\r\n        website,\r\n        introVideo,\r\n        featuredArticle,\r\n        reasonForMentor,\r\n        achievement,\r\n        // experience,\r\n        price,\r\n      };\r\n\r\n      const response = await axios.put(endUrl, updatedData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      setIsProfileUpdated(!isProfileUpdated);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n    } catch (error) {\r\n      console.error(\"Error updating profile\", error);\r\n      if (error?.response?.data?.statuses[0]) {\r\n        ToasterComponent(\"warning\", error.response.data.statuses);\r\n      } else {\r\n        ToasterComponent(\"error\", [\r\n          { message: \"An unexpected error occurred\" },\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // update experience\r\n  const handleEditExperience = (index) => {\r\n    setIsEditingExpSecond(true);\r\n    setExpId(experience[index].id);\r\n    setEditingIndex(index);\r\n  };\r\n  console.log(expId);\r\n\r\n  const handleDeleteExperience = async (index) => {\r\n    try {\r\n      const experienceToDelete = experience[index]; // Get the selected experience\r\n\r\n      if (!experienceToDelete.id) {\r\n        ToasterComponent(\"error\", [{ message: \"Experience ID not found.\" }]);\r\n        return;\r\n      }\r\n\r\n      const response = await axios.delete(\r\n        `${baseUrl}/api/alumni/experience/${experienceToDelete.id}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // Ensure you are passing the correct token\r\n          },\r\n        }\r\n      );\r\n\r\n      // Remove the experience from the state after deletion\r\n      setExperience((prevExperience) =>\r\n        prevExperience.filter((_, i) => i !== index)\r\n      );\r\n\r\n      ToasterComponent(\"success\", response.data.statuses); // Show success message\r\n      setIsProfileUpdated(!isProfileUpdated); // Trigger profile update state\r\n    } catch (error) {\r\n      console.error(\"Error deleting experience\", error);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error updating profile\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // const experienceUrl = `${baseUrl}/api/alumni/experience/${expId}`;\r\n  const addExperienceUrl = `${baseUrl}/api/alumni/experience`;\r\n  // const updateExperience = async () => {\r\n  //   try {\r\n  //     if (experience.length > 0) {\r\n  //       const updatedData = {\r\n  //         company: experience[editingIndex].company,\r\n  //         jobTitle: experience[editingIndex].jobTitle,\r\n  //         employmentType: experience[editingIndex].employmentType,\r\n  //         jobLocation: experience[editingIndex].jobLocation,\r\n  //         startYear: experience[editingIndex].startYear,\r\n  //         endYear: experience[editingIndex].endYear,\r\n  //       };\r\n\r\n  //       console.log(\"Updated Data:\", updatedData); // Log updated data to verify\r\n\r\n  //       const response = await axios.put(experienceUrl, updatedData, {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${token}`,\r\n  //         },\r\n  //       });\r\n\r\n  //       setIsProfileUpdated(!isProfileUpdated);\r\n  //       ToasterComponent(\"success\", response.data.statuses);\r\n  //     } else {\r\n  //       ToasterComponent(\"warning\", [\r\n  //         { message: \"No experience data available\" },\r\n  //       ]);\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error(\"Error updating profile\", error);\r\n  //     if (error.response && error.response.data.statuses[0]) {\r\n  //       ToasterComponent(\"warning\", error.response.data.statuses);\r\n  //     } else {\r\n  //       ToasterComponent(\"error\", [\r\n  //         { message: \"An unexpected error occurred\" },\r\n  //       ]);\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  const updateExperience = async () => {\r\n    try {\r\n      const currentExperience = experience[editingIndex]; // Get current experience entry\r\n\r\n      const experienceData = {\r\n        company: currentExperience.company,\r\n        jobTitle: currentExperience.jobTitle,\r\n        employmentType: currentExperience.employmentType,\r\n        jobLocation: currentExperience.jobLocation,\r\n        startYear: currentExperience.startYear,\r\n        endYear: currentExperience.endYear,\r\n      };\r\n\r\n      let response;\r\n\r\n      if (currentExperience.id) {\r\n        // Construct the update URL by appending the experience ID for PUT request\r\n        const updateUrl = `${addExperienceUrl}/${currentExperience.id}`;\r\n        response = await axios.put(updateUrl, experienceData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n      } else {\r\n        // If the experience entry has no id, create a new one using POST\r\n        response = await axios.post(addExperienceUrl, experienceData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        ToasterComponent(\"success\", response.data.statuses); // Use message from response\r\n      }\r\n\r\n      // Refresh the profile after adding/updating experience\r\n      setIsProfileUpdated(!isProfileUpdated);\r\n    } catch (error) {\r\n      console.error(\"Error saving experience\", error);\r\n\r\n      // Improved error handling and logging\r\n      if (error.response && error.response.data.statuses[0]) {\r\n        ToasterComponent(\"warning\", error.response.data.statuses);\r\n      } else {\r\n        ToasterComponent(\"error\", [\r\n          { message: \"An unexpected error occurred\" },\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n  const handleAddWork = () => {\r\n    const newExperience = {\r\n      // id: null, // Generate an ID or set it later from API response if needed\r\n      company: \"\",\r\n      jobTitle: \"\",\r\n      employmentType: \"\",\r\n      jobLocation: \"\",\r\n      startYear: \"\",\r\n      endYear: \"\",\r\n    };\r\n\r\n    // Add new experience to the array\r\n    setExperience([...experience, newExperience]);\r\n\r\n    // Set the new entry as editable\r\n    setEditingIndex(experience.length); // Set the index of the new experience\r\n    setIsEditingExpSecond(true); // Switch to the form to edit the new experience\r\n  };\r\n\r\n  const handleSaveExp = () => {\r\n    setIsEditingExp(false);\r\n    // updateMEntorProfile();\r\n    updateExperience();\r\n  };\r\n\r\n  const handleCancelEditExp = () => {\r\n    setIsEditingExp(false);\r\n    setIsEditingExpSecond(false);\r\n  };\r\n  const handleInputChange = (index, field, value) => {\r\n    const updatedExperience = [...experience];\r\n    updatedExperience[index][field] = value;\r\n    setExperience(updatedExperience);\r\n  };\r\n  // update education\r\n\r\n  // const educationUpdateUrl = `${baseUrl}/api/alumni/college/${collegeId}`;\r\n  console.log(collegeId);\r\n\r\n  const addEducationUrl = `${baseUrl}/api/alumni/college`;\r\n\r\n  const updateEducation = async () => {\r\n    try {\r\n      const currentCollege = college[editingIndex]; // Access the current college being edited\r\n      const updatedData = {\r\n        collegeName: currentCollege.collegeName,\r\n        degree: currentCollege.degree,\r\n        department: currentCollege.department,\r\n        year: Number(currentCollege.year), // Ensure the year is treated as a number\r\n      };\r\n\r\n      if (currentCollege.id) {\r\n        // PUT request to update existing education entry\r\n        const educationUpdateUrl = `${baseUrl}/api/alumni/college/${currentCollege.id}`;\r\n        const response = await axios.put(educationUpdateUrl, updatedData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n      } else {\r\n        // POST request to add new education entry\r\n        const response = await axios.post(addEducationUrl, updatedData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        // Extract the collegeId from the POST response and update the state\r\n        const newCollegeId = collegeId; // Ensure the API returns this field\r\n        setCollege((prevCollege) =>\r\n          prevCollege.map((entry, index) =>\r\n            index === editingIndex ? { ...entry, id: newCollegeId } : entry\r\n          )\r\n        );\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n      }\r\n\r\n      // Toggle the profile update state\r\n      setIsProfileUpdated(!isProfileUpdated);\r\n    } catch (error) {\r\n      console.error(\"Error updating profile\", error);\r\n      if (error.response && error.response.data.statuses[0]) {\r\n        ToasterComponent(\"warning\", error.response.data.statuses);\r\n      } else {\r\n        ToasterComponent(\"error\", [\r\n          { message: \"An unexpected error occurred\" },\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddEducation = () => {\r\n    // Create a new college entry with empty values\r\n    const newCollegeEntry = {\r\n      collegeName: \"\",\r\n      degree: \"\",\r\n      department: \"\",\r\n      year: \"\",\r\n    };\r\n\r\n    // Add the new entry to the college state\r\n    setCollege((prevCollege) => [...prevCollege, newCollegeEntry]);\r\n    // Set editing index to the new college entry to allow for immediate editing\r\n    setEditingIndex(college.length); // Set index to the last entry (new one)\r\n    setIsEditingEducationSecond(true); // Open the editing modal\r\n  };\r\n\r\n  const handleInputEducationChange = (index, field, value) => {\r\n    const updatedCollege = [...college];\r\n    updatedCollege[index][field] = value;\r\n    setCollege(updatedCollege);\r\n  };\r\n\r\n  const postImageData = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", selectedFile);\r\n\r\n      const response = await axios.post(imageEditUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      setTimeout(() => {}, 2000);\r\n      if (response.status === 200) {\r\n        await mentorProfileDetails();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleAddSkill = (newSkill) => {\r\n    if (!newSkill.trim()) {\r\n      setSkillValidationMessage(\"Skill cannot be empty\");\r\n    } else {\r\n      setSkillValidationMessage(\"\");\r\n      setSkills([...skills, newSkill]);\r\n    }\r\n  };\r\n\r\n  const handleRemoveSkill = (index) => {\r\n    setSkills(skills.filter((_, i) => i !== index));\r\n  };\r\n  const handleRemoveLanguages = (index) => {\r\n    setLanguages(languages.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleFileChange1 = async (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    if (file) {\r\n      const fileType = file.type;\r\n      const fileSize = file.size;\r\n\r\n      // Check if the file is a PDF\r\n      if (fileType !== \"application/pdf\") {\r\n        setFileError(\"Please upload a PDF file.\");\r\n        setResumeFileName(\"\"); // Clear the file name if invalid\r\n        return;\r\n      }\r\n\r\n      // Check if the file size is more than 2MB\r\n      if (fileSize > 2 * 1024 * 1024) {\r\n        setFileError(\"File size should be less than 2MB.\");\r\n        setResumeFileName(\"\"); // Clear the file name if invalid\r\n        return;\r\n      }\r\n\r\n      // If valid, clear the error and set the file name\r\n      setFileError(\"\");\r\n      setResumeFileName(file.name);\r\n      const formData = new FormData();\r\n      formData.append(\"resume\", file);\r\n      // Post the file to the given URL\r\n      const uploadUrl = `${baseUrl}/api/resume?role=ALUMNI`;\r\n      try {\r\n        const response = await axios.post(uploadUrl, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        });\r\n\r\n        // Handle successful response\r\n        if (response.status === 200) {\r\n          ToasterComponent(\"success\", response.data.statuses);\r\n          console.log(\"Resume uploaded successfully\", response.data);\r\n          setResumeFileId(response.data.documentId);\r\n        } else {\r\n          ToasterComponent(\"error\", \"Failed to upload resume\");\r\n          console.error(\"Failed to upload resume\", response.data);\r\n        }\r\n      } catch (error) {\r\n        // Handle errors\r\n        if (error.response) {\r\n          ToasterComponent(\r\n            \"error\",\r\n            error.response.data.message || \"Upload failed\"\r\n          );\r\n          console.error(\"Error uploading resume:\", error.response);\r\n        } else {\r\n          ToasterComponent(\"error\", \"An error occurred while uploading\");\r\n          console.error(\"Error uploading resume:\", error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSavePrice = () => {\r\n    setIsEditingPrice(false);\r\n    updateMEntorProfile();\r\n  };\r\n\r\n  const handleSaveEducation = () => {\r\n    setIsEditingEducation(false);\r\n    // updateMEntorProfile();\r\n    updateEducation();\r\n  };\r\n\r\n  const handleCancelEditEducation = () => {\r\n    setIsEditingEducation(false);\r\n    setIsEditingEducationSecond(false);\r\n  };\r\n\r\n  const handleSaveAbout = () => {\r\n    setIsEditingAbout(false);\r\n    updateMEntorProfile();\r\n  };\r\n\r\n  const handleLanguagesSave = () => {\r\n    if (languages.length === 0) {\r\n      setSkillValidationMessage(\"At least one language is required.\");\r\n    } else {\r\n      setIsEditingLanguages(false);\r\n      updateMEntorProfile();\r\n    }\r\n  };\r\n  const handleLanguagesCancel = () => {\r\n    setIsEditingLanguages(false);\r\n  };\r\n\r\n  const handleSaveSkill = () => {\r\n    if (skills.length === 0) {\r\n      setSkillValidationMessage(\"At least one skill is required.\");\r\n    } else {\r\n      setIsEditingSkills(false);\r\n      updateMEntorProfile();\r\n    }\r\n  };\r\n  const handleSkillCancel = () => {\r\n    setIsEditingSkills(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setIsEditing(false);\r\n    updateMEntorProfile();\r\n    postImageData();\r\n  };\r\n\r\n  const handleImageClick = () => setImageEditModal(true);\r\n\r\n  const handleImagePost = () => {\r\n    postImageData();\r\n    setSelectedFile(null);\r\n    setImageEditModal(false);\r\n  };\r\n\r\n  const handleImageDelete = () => {\r\n    // setSelectedFile(image);\r\n    setImageEditModal(false);\r\n  };\r\n\r\n  const handleLinkedInClick = () => {\r\n    if (linkedinUrl) {\r\n      window.open(linkedinUrl, \"_blank\");\r\n    }\r\n  };\r\n\r\n  const handleTwitterClick = () => {\r\n    if (twitterHandle) {\r\n      const twitterUrl = `https://x.com/${twitterHandle}`;\r\n      window.open(twitterUrl, \"_blank\");\r\n    }\r\n  };\r\n  const handlePersonalWebsiteClick = () => {\r\n    if (website) {\r\n      let url = website;\r\n      if (!url.startsWith(\"https://\")) {\r\n        url = `https://${url}`;\r\n      }\r\n      window.open(url, \"_blank\");\r\n    }\r\n  };\r\n\r\n  const handleAddLanguages = (newLanguages) => {\r\n    setLanguages([...languages, newLanguages]);\r\n  };\r\n\r\n  const languageOptions = language.map((option) => ({\r\n    value: option.iso_code,\r\n    label: option.name,\r\n  }));\r\n\r\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\r\n\r\n  const handleChange = (selectedOptions) => {\r\n    const languagesArray = selectedOptions\r\n      ? selectedOptions.map((option) => option.value)\r\n      : [];\r\n    handleAddLanguages(languagesArray[0]);\r\n    setSelectedLanguages([]);\r\n  };\r\n\r\n  // const [file1] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        setSelectedFileBase64(base64Image);\r\n\r\n        // setAboutField({ ...aboutField, image: base64Image });\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const countryName = country.find((c) => c.iso_code === location)?.name;\r\n\r\n  const handleEditEducation = (index) => {\r\n    setIsEditingEducationSecond(true);\r\n    setCollegeId(college[index].id);\r\n    setEditingIndex(index); // Set the index of the college to edit\r\n  };\r\n\r\n  const deleteEducationUrl = (id) => `${baseUrl}/api/alumni/college/${id}`;\r\n\r\n  // Function to handle deleting a college\r\n  const handleDeleteEducation = async (index) => {\r\n    try {\r\n      const collegeToDelete = college[index]; // Get the selected college\r\n\r\n      if (!collegeToDelete.id) {\r\n        ToasterComponent(\"error\", [{ message: \"College ID not found.\" }]);\r\n        return;\r\n      }\r\n\r\n      const response = await axios.delete(\r\n        deleteEducationUrl(collegeToDelete.id),\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // Ensure you are passing the correct token\r\n          },\r\n        }\r\n      );\r\n\r\n      // Remove the college from the state after deletion\r\n      setCollege((prevCollege) => prevCollege.filter((_, i) => i !== index));\r\n\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      setIsProfileUpdated(!isProfileUpdated); // Trigger profile update state\r\n    } catch (error) {\r\n      console.error(\"Error deleting education\", error);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error updating profile\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  console.log(\"Editing experience index:\", editingIndex);\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\r\n\r\n  const handleView = async (fileId) => {\r\n    const viewUrl = `${baseUrl}/api/resume/${fileId}`; // Replace with your actual API endpoint\r\n\r\n    try {\r\n      const response = await axios.get(viewUrl, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        window.open(viewUrl, \"_blank\");\r\n      } else {\r\n        ToasterComponent(\"error\", \"Failed to view resume\");\r\n        console.error(\"Failed to view resume\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.message || \"View failed\");\r\n        console.error(\"Error viewing resume:\", error.response);\r\n      } else {\r\n        ToasterComponent(\"error\", \"An error occurred while viewing\");\r\n        console.error(\"Error viewing resume:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (fileId) => {\r\n    const deleteUrl = `${baseUrl}/api/resume/${fileId}?role=ALUMNI`; // Replace with your actual delete API endpoint\r\n\r\n    try {\r\n      const response = await axios.delete(deleteUrl);\r\n\r\n      if (response.status === 200) {\r\n        // Assuming the deletion is successful\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n        console.log(\"File deleted successfully\");\r\n        // Add any other logic here like updating the state or UI\r\n        setResumeFileName(\"\");\r\n      } else {\r\n        console.error(\"Failed to delete the file\", \"Error\");\r\n      }\r\n    } catch (error) {\r\n      // Handle the error here\r\n      if (error?.response?.data?.statuses) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error deleting the file:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"aluni-profile\">\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"\">\r\n        {/* new design code starts */}\r\n        {/* profile section starts */}\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <CardBody\r\n                style={{\r\n                  background: \"linear-gradient(to right, #7B42C5, #AA5D93)\",\r\n                  color: \"white\",\r\n                  borderRadius: \"9px 9px 0 0\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"position-relative\"\r\n                  style={{ position: \"relative\", top: \"5px\", textAlign: \"end\" }}\r\n                >\r\n                  <Button\r\n                    color=\"primary\"\r\n                    outline\r\n                    className=\"icon-button  bg-light\"\r\n                    style={{ border: \"none\" }}\r\n                    size=\"sm\"\r\n                    onClick={() => handleImageClick()}\r\n                  >\r\n                    <i className=\"simple-icon-pencil\" />\r\n                  </Button>\r\n                </div>\r\n                <div\r\n                  className=\"position-relative \"\r\n                  style={{ position: \"relative\", top: \"70px\" }}\r\n                >\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn p-0\"\r\n                      style={{ border: \"none\", background: \"none\" }}\r\n                      // onClick={() => handleImageClick()}\r\n                      aria-label=\"Profile image\"\r\n                    >\r\n                      {image === null ? (\r\n                        <ThumbnailLetters\r\n                          // small\r\n                          rounded\r\n                          text={firstName}\r\n                          className=\"mx-2\"\r\n                          color=\"secondary\"\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          src={`${baseUrl}/${image}`}\r\n                          className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                          style={{\r\n                            width: \"110px\",\r\n                            height: \"110px\",\r\n                            objectFit: \"cover\",\r\n                            overflow: \"hidden\",\r\n                          }}\r\n                          alt=\"img\"\r\n                        />\r\n                      )}\r\n                    </button>\r\n                    <div\r\n                      className=\"mr-4 d-flex mb-4\"\r\n                      style={{ display: \"none \", visibility: \"hidden\" }}\r\n                    >\r\n                      {linkedinUrl && (\r\n                        <NavLink className=\"d-none d-md-inline-block\">\r\n                          <Button\r\n                            color=\"light\"\r\n                            className=\"font-weight-semibold icon-button\"\r\n                            size=\"large\"\r\n                            onClick={handleLinkedInClick}\r\n                          >\r\n                            <i className=\"simple-icon-social-linkedin text-primary font-weight-semibold text-one\" />\r\n                          </Button>\r\n                        </NavLink>\r\n                      )}\r\n                      {twitterHandle && (\r\n                        <NavLink className=\"d-none d-md-inline-block\">\r\n                          <Button\r\n                            color=\"light\"\r\n                            className=\"font-weight-semibold icon-button\"\r\n                            size=\"large\"\r\n                            onClick={handleTwitterClick}\r\n                          >\r\n                            <i className=\"simple-icon-social-twitter text-primary font-weight-semibold text-one\" />\r\n                          </Button>\r\n                        </NavLink>\r\n                      )}\r\n                      {website && (\r\n                        <NavLink className=\"d-none d-md-inline-block\">\r\n                          <Button\r\n                            color=\"light\"\r\n                            className=\"font-weight-semibold icon-button\"\r\n                            size=\"large\"\r\n                            onClick={handlePersonalWebsiteClick}\r\n                          >\r\n                            <i className=\"simple-icon-globe text-primary font-weight-semibold text-one\" />\r\n                          </Button>\r\n                        </NavLink>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <Modal\r\n                    isOpen={imageEditModal}\r\n                    toggle={() => setImageEditModal(!imageEditModal)}\r\n                    className=\"\"\r\n                    size=\"lg\"\r\n                    style={{\r\n                      borderRadius: \"10px\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                      <h2 className=\"font-weight-bold\">Profile photo</h2>\r\n                    </ModalHeader>\r\n                    <ModalBody className=\"d-flex justify-content-center align-items-center\">\r\n                      <img\r\n                        src={selectedFileBase64 || `${baseUrl}/${image}`}\r\n                        className=\"rounded-circle img-thumbnail border border-3\"\r\n                        style={{\r\n                          width: \"130px\",\r\n                          height: \"130px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                        alt=\"img\"\r\n                      />\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter className=\"d-flex align-items-center justify-content-center\">\r\n                      {selectedFile ? (\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          onClick={() => handleImagePost()}\r\n                          className=\"icon-button\"\r\n                          style={{ border: \"none\" }}\r\n                        >\r\n                          <i className=\"iconsminds-upload \" />\r\n                        </Button>\r\n                      ) : (\r\n                        <InputGroup\r\n                          className=\"\"\r\n                          style={{\r\n                            width: \"auto\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <div className=\"\">\r\n                            <Button\r\n                              outline\r\n                              className=\"icon-button\"\r\n                              color=\"primary\"\r\n                              style={{ border: \"none\" }}\r\n                              onClick={() =>\r\n                                document.getElementById(\"file-upload\").click()\r\n                              }\r\n                            >\r\n                              <i className=\"simple-icon-pencil\" />\r\n                            </Button>\r\n\r\n                            <Input\r\n                              id=\"file-upload\"\r\n                              type=\"file\"\r\n                              className=\"d-none\"\r\n                              onChange={handleFileChange}\r\n                            />\r\n                          </div>\r\n                        </InputGroup>\r\n                      )}\r\n\r\n                      <Button\r\n                        color=\"primary\"\r\n                        outline\r\n                        onClick={() => handleImageDelete()}\r\n                        className=\"icon-button\"\r\n                        style={{ border: \"none\" }}\r\n                      >\r\n                        <i className=\"simple-icon-trash\" />\r\n                      </Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n                </div>\r\n              </CardBody>\r\n              <CardBody>\r\n                <div>\r\n                  <div className=\"text-end w-100  d-flex justify-content-end\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      style={{ border: \"none\" }}\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditing(true)}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"mt-4\">\r\n                    <h2 className=\"font-weight-bold\">\r\n                      {firstName} {lastName}\r\n                    </h2>\r\n                    <h3 className=\"font-weight-semibold\">\r\n                      {college[0]?.degree} {college[0]?.department} @\r\n                      {college[0]?.college}\r\n                    </h3>\r\n\r\n                    {countryName && (\r\n                      <h5 className=\"font-weight-medium\">\r\n                        <i className=\"simple-icon-location-pin text-primary\" />\r\n\r\n                        <span className=\"ml-2\">{countryName}</span>\r\n                      </h5>\r\n                    )}\r\n                    <h6 className=\"\">\r\n                      <i className=\"simple-icon-star text-primary \" />\r\n                      <span className=\"ml-2\">{`${averageStar} (${totalRatings} reviews)`}</span>\r\n                    </h6>\r\n                    <h6 className=\"text-muted\">{resumeFileName}</h6>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n            {/* profile update modal starts */}\r\n            <Modal\r\n              isOpen={isEditing}\r\n              toggle={() => setIsEditing(!isEditing)}\r\n              className=\"\"\r\n              size=\"lg\"\r\n              style={{\r\n                borderRadius: \"10px\",\r\n                overflow: \"hidden\",\r\n              }}\r\n            >\r\n              <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                <h2 className=\"font-weight-bold\">Edit Profile</h2>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <div>\r\n                  <>\r\n                    <Row>\r\n                      <Col md=\"6\">\r\n                        <Label for=\"firstName\">\r\n                          <h4>First Name</h4>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"firstName\"\r\n                          value={firstName}\r\n                          onChange={(e) => setFirstName(e.target.value)}\r\n                        />\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                        <Label for=\"lastName\">\r\n                          <h4>Last Name</h4>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"lastName\"\r\n                          value={lastName}\r\n                          onChange={(e) => setLastName(e.target.value)}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <br />\r\n                  </>\r\n                  {/* <>\r\n                    <Label for=\"jobtitle\">\r\n                      <h4>Job Title</h4>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"jobtitle\"\r\n                      value={jobTitle}\r\n                      onChange={(e) => setJobTitle(e.target.value)}\r\n                    />\r\n                    <br />\r\n                  </> */}\r\n                  {/* <>\r\n                    <Label for=\"company\">\r\n                      <h4>Company</h4>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"company\"\r\n                      value={company}\r\n                      onChange={(e) => setCompany(e.target.value)}\r\n                    />\r\n                    <br />\r\n                  </> */}\r\n\r\n                  <>\r\n                    <Label for=\"location\" className=\"font-weight-medium\">\r\n                      <h4>Country</h4>\r\n                    </Label>\r\n\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"location\"\r\n                      value={location}\r\n                      // validate={validateLocation}\r\n                      onChange={(e) => setLocation(e.target.value)}\r\n                      className=\"form-control\"\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select Location\r\n                      </option>\r\n                      {country.map((option) => (\r\n                        <option key={option.iso_code} value={option.iso_code}>\r\n                          {option.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                    <br />\r\n                  </>\r\n                  <Row>\r\n                    <Col md={6}>\r\n                      <>\r\n                        <Label for=\"resume\" className=\"text-muted\">\r\n                          <h4>CV</h4>\r\n                        </Label>\r\n                        <div\r\n                          className=\" p-2 mb-2 d-flex justify-content-between text-one align-items-center\"\r\n                          style={{\r\n                            border: \"1px solid #ccc\",\r\n                            minWidth: \"200px\",\r\n                          }}\r\n                        >\r\n                          {resumeFileName || \"no file selected\"}\r\n                          <ButtonDropdown\r\n                            isOpen={dropdownOpen}\r\n                            toggle={toggleDropdown}\r\n                          >\r\n                            <DropdownToggle\r\n                              caret\r\n                              style={{\r\n                                backgroundColor: \"transparent\",\r\n                                border: \"none\",\r\n                                padding: 0,\r\n                              }}\r\n                            >\r\n                              <i\r\n                                className=\"fa-solid fa-ellipsis\"\r\n                                style={{\r\n                                  color: \"#333\",\r\n                                  cursor: \"pointer\",\r\n                                }}\r\n                              />\r\n                            </DropdownToggle>\r\n\r\n                            <DropdownMenu>\r\n                              <DropdownItem\r\n                                onClick={() => handleView(resumeFileId)}\r\n                              >\r\n                                view\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                onClick={() => handleDelete(resumeFileId)}\r\n                              >\r\n                                delete\r\n                              </DropdownItem>\r\n                            </DropdownMenu>\r\n                          </ButtonDropdown>\r\n                        </div>\r\n                        <InputGroup className=\"\">\r\n                          <div className=\"\">\r\n                            <button\r\n                              type=\"button\"\r\n                              style={{\r\n                                cursor: \"pointer\",\r\n\r\n                                background: \"none\",\r\n                                border: \"none\",\r\n                              }}\r\n                              onClick={() =>\r\n                                document.getElementById(\"file-upload\").click()\r\n                              }\r\n                            >\r\n                              <h5>+ Add your Resume</h5>\r\n                            </button>\r\n                            {/* <Form> */}\r\n                            <Input\r\n                              id=\"file-upload\"\r\n                              type=\"file\"\r\n                              className=\"d-none\"\r\n                              // onChange={handleFileChange1}\r\n                              // validate={validateFile}\r\n                              onChange={(e) => handleFileChange1(e)}\r\n                            />\r\n                          </div>\r\n                        </InputGroup>\r\n                        <br />\r\n                        {fileError && (\r\n                          <p style={{ color: \"red\" }}>{fileError}</p>\r\n                        )}\r\n                      </>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  {/* <>\r\n                    <Label for=\"location\" className=\"font-weight-medium\">\r\n                      <h4>category</h4>\r\n                    </Label>\r\n\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"category\"\r\n                      value={category}\r\n                      onChange={(e) => setCategory(e.target.value)}\r\n                      className=\"form-control\"\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select category\r\n                      </option>\r\n                      {CategoryData.map((option) => (\r\n                        <option key={option.short} value={option.short}>\r\n                          {option.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                    <br />\r\n                  </> */}\r\n                </div>\r\n              </ModalBody>\r\n              <ModalFooter\r\n                style={{ borderTop: \"none\" }}\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n              >\r\n                <Button color=\"primary\" onClick={() => handleSave()}>\r\n                  Save\r\n                </Button>{\" \"}\r\n                <Button\r\n                  color=\"primary\"\r\n                  outline\r\n                  onClick={() => setIsEditing(false)}\r\n                  className=\"\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n            {/* profile update modal ends */}\r\n          </Col>\r\n        </Row>\r\n        {/* profile section ends */}\r\n        {/* about section starts */}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row className=\"align-items-center\">\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">About</h2>\r\n\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingAbout(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <div>\r\n                  <p className=\"text-muted\">{bio}</p>\r\n                </div>\r\n                {/* about modal starts */}\r\n                <Modal\r\n                  isOpen={isEditingAbout}\r\n                  toggle={() => setIsEditingAbout(!isEditingAbout)}\r\n                  className=\"\"\r\n                  size=\"lg\"\r\n                  style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                >\r\n                  <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                    <h2 className=\"font-weight-bold\">About</h2>\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <br />\r\n\r\n                    <div className=\"\">\r\n                      <Label for=\"about\" className=\"font-weight-medium\">\r\n                        <h4>About Me</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        id=\"about\"\r\n                        value={bio}\r\n                        onChange={(e) => setBio(e.target.value)}\r\n                        className=\"form-control\"\r\n                        rows=\"5\"\r\n                      />\r\n                      <br />\r\n                      <Label for=\"linkedin\" className=\"font-weight-medium\">\r\n                        <h4>LinkedIn URL</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"url\"\r\n                        id=\"linkedinUrl\"\r\n                        value={linkedinUrl}\r\n                        onChange={(e) => setLinkedinUrl(e.target.value)}\r\n                        className=\"form-control\"\r\n                      />\r\n                      <br />\r\n                      <Label for=\"twitter\" className=\"font-weight-medium\">\r\n                        <h4>Twitter handle</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"url\"\r\n                        id=\"twitter\"\r\n                        value={twitterHandle}\r\n                        onChange={(e) => setTwitterHandle(e.target.value)}\r\n                      />\r\n                      <p className=\"text-muted\">\r\n                        Omit the &ldquo;@&rdquo; -e.g. &ldquo;dqmonn&rdquo;\r\n                      </p>\r\n                      <Label\r\n                        for=\"personalWebsite\"\r\n                        className=\"font-weight-medium\"\r\n                      >\r\n                        <h4>Personal Website URL</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"url\"\r\n                        id=\"personalWebsite\"\r\n                        value={website}\r\n                        onChange={(e) => setWebsite(e.target.value)}\r\n                      />\r\n                      <p className=\"text-muted\">e.g. http://www.google.com</p>\r\n                      <br />\r\n                    </div>\r\n                  </ModalBody>\r\n                  <ModalFooter\r\n                    style={{ borderTop: \"none\" }}\r\n                    className=\"d-flex align-items-center justify-content-center\"\r\n                  >\r\n                    <Button color=\"primary\" onClick={() => handleSaveAbout()}>\r\n                      Save\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      onClick={() => setIsEditingAbout(false)}\r\n                      className=\"\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n                {/* about modal ends */}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {/* about section ends */}\r\n        {/* Experience section starts */}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row className=\"align-items-center\">\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Experience</h2>\r\n\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingExp(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    {experience?.map((value) => (\r\n                      <p\r\n                        className=\"text-one font-weight-medium \"\r\n                        key={value.id}\r\n                      >\r\n                        {value.jobtitle} <br /> {value.company} |{\" \"}\r\n                        {value.startYear} - {value.endYear}\r\n                      </p>\r\n                    ))}\r\n                  </Col>\r\n                </Row>\r\n                {/* Exp modal starts */}\r\n                <Modal\r\n                  isOpen={isEditingExp}\r\n                  toggle={() => setIsEditingExp(!isEditingExp)}\r\n                  className=\"\"\r\n                  size=\"lg\"\r\n                  style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                >\r\n                  {/* <ModalHeader>\r\n                    <Row>\r\n                      <Col md={8}>\r\n                        <h2 className=\"font-weight-bold\">Experience</h2>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <Button\r\n                          color=\"primary\"\r\n                          outline\r\n                          className=\"icon-button\"\r\n                          style={{ border: \"none\" }}\r\n                          size=\"sm\"\r\n                          // onClick={handleAddWork}\r\n                        >\r\n                          <span\r\n                            className=\"text-primary\"\r\n                            style={{ fontSize: \"24px\" }}\r\n                          >\r\n                            +\r\n                          </span>\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </ModalHeader> */}\r\n                  <ModalBody>\r\n                    <Row className=\"align-items-center mb-3 \">\r\n                      <Col>\r\n                        <h2 className=\"font-weight-bold\">Edit Experience</h2>\r\n                      </Col>\r\n                      <Col xs=\"auto\" className=\"ml-auto\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          outline\r\n                          className=\"icon-button\"\r\n                          style={{ border: \"none\" }}\r\n                          size=\"sm\"\r\n                          onClick={handleAddWork}\r\n                        >\r\n                          <span\r\n                            className=\"text-primary\"\r\n                            style={{ fontSize: \"24px\" }}\r\n                          >\r\n                            +\r\n                          </span>\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    {isEditingExpSecond ? (\r\n                      <div className=\"col-lg-12 col-12\">\r\n                        {/* <Label for=\"experience\" className=\"text-dark\">\r\n                          <h4>Experience</h4>\r\n                        </Label> */}\r\n                        {experience[editingIndex] && (\r\n                          <>\r\n                            <Row>\r\n                              <Col md={6}>\r\n                                <FormGroup className=\"error-l-75\">\r\n                                  <Label\r\n                                    for={`experience[${editingIndex}].company`}\r\n                                  >\r\n                                    Company Name*\r\n                                  </Label>\r\n                                  <Input\r\n                                    className=\"form-control\"\r\n                                    name={`experience[${editingIndex}].company`}\r\n                                    value={\r\n                                      experience[editingIndex]?.company || \"\"\r\n                                    }\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        editingIndex,\r\n                                        \"company\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md={6}>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for={`experience[${editingIndex}].jobTitle`}\r\n                                  >\r\n                                    Job title*\r\n                                  </Label>\r\n                                  <Input\r\n                                    name={`experience[${editingIndex}].jobTitle`}\r\n                                    id={`experience[${editingIndex}].jobTitle`}\r\n                                    className=\"form-control\"\r\n                                    value={\r\n                                      experience[editingIndex]?.jobTitle || \"\"\r\n                                    }\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        editingIndex,\r\n                                        \"jobTitle\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                              <Col md={6}>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for={`experience[${editingIndex}].employmentType`}\r\n                                  >\r\n                                    Employment type*\r\n                                  </Label>\r\n                                  <Input\r\n                                    type=\"select\"\r\n                                    name={`experience[${editingIndex}].employmentType`}\r\n                                    id={`experience[${editingIndex}].employmentType`}\r\n                                    className=\"form-control\"\r\n                                    value={\r\n                                      experience[editingIndex]\r\n                                        ?.employmentType || \"\"\r\n                                    }\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        editingIndex,\r\n                                        \"employmentType\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <option key=\"\" value=\"\" disabled>\r\n                                      Select Employment type\r\n                                    </option>\r\n                                    {EmploymentTypeData.map((option) => (\r\n                                      <option key={option} value={option.label}>\r\n                                        {option.label}\r\n                                      </option>\r\n                                    ))}\r\n                                  </Input>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={6}>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for={`experience[${editingIndex}].jobLocation`}\r\n                                  >\r\n                                    Job location*\r\n                                  </Label>\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name={`experience[${editingIndex}].jobLocation`}\r\n                                    id={`experience[${editingIndex}].jobLocation`}\r\n                                    className=\"form-control\"\r\n                                    value={\r\n                                      experience[editingIndex]?.jobLocation ||\r\n                                      \"\"\r\n                                    }\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        editingIndex,\r\n                                        \"jobLocation\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                              <Col>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for={`experience[${editingIndex}].startYear`}\r\n                                  >\r\n                                    Start year\r\n                                  </Label>\r\n                                  <Input\r\n                                    type=\"select\"\r\n                                    name={`experience[${editingIndex}].startYear`}\r\n                                    id={`experience[${editingIndex}].startYear`}\r\n                                    className=\"form-control\"\r\n                                    value={\r\n                                      experience[editingIndex]?.startYear || \"\"\r\n                                    }\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        editingIndex,\r\n                                        \"startYear\",\r\n                                        parseInt(e.target.value, 10)\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <option disabled value=\"\">\r\n                                      Select year\r\n                                    </option>\r\n                                    {years.map((yr) => (\r\n                                      <option key={yr} value={yr}>\r\n                                        {yr}\r\n                                      </option>\r\n                                    ))}\r\n                                  </Input>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for={`experience[${editingIndex}].endYear`}\r\n                                  >\r\n                                    End year\r\n                                  </Label>\r\n                                  <Input\r\n                                    type=\"select\"\r\n                                    name={`experience[${editingIndex}].endYear`}\r\n                                    id={`experience[${editingIndex}].endYear`}\r\n                                    className=\"form-control\"\r\n                                    value={\r\n                                      experience[editingIndex]?.endYear || \"\"\r\n                                    }\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        editingIndex,\r\n                                        \"endYear\",\r\n                                        parseInt(e.target.value, 10)\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <option disabled value=\"\">\r\n                                      Select year\r\n                                    </option>\r\n                                    {years.map((yr) => (\r\n                                      <option key={yr} value={yr}>\r\n                                        {yr === currentYear ? \"Present\" : yr}\r\n                                      </option>\r\n                                    ))}\r\n                                  </Input>\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </Row>\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        {experience?.map((value, index) => (\r\n                          <Row\r\n                            key={value.id}\r\n                            className=\"d-flex align-items-center justify-content-between \"\r\n                          >\r\n                            <Col>\r\n                              <div>\r\n                                <p className=\"text-one font-weight-medium \">\r\n                                  {value.jobTitle} <br /> {value.company} |{\" \"}\r\n                                  {value.startYear} - {value.endYear}\r\n                                </p>\r\n                              </div>\r\n                            </Col>\r\n\r\n                            <Col xs=\"auto\">\r\n                              <Button\r\n                                color=\"primary\"\r\n                                outline\r\n                                className=\"icon-button mr-1\"\r\n                                size=\"sm\"\r\n                                onClick={() => handleEditExperience(index)}\r\n                                style={{ border: \"none\" }}\r\n                              >\r\n                                <i className=\"simple-icon-pencil\" />\r\n                              </Button>\r\n                              <Button\r\n                                color=\"primary\"\r\n                                outline\r\n                                className=\"icon-button\"\r\n                                size=\"sm\"\r\n                                onClick={() => handleDeleteExperience(index)}\r\n                                style={{ border: \"none\" }}\r\n                              >\r\n                                <i className=\"simple-icon-trash\" />\r\n                              </Button>\r\n                            </Col>\r\n                          </Row>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </ModalBody>\r\n\r\n                  <ModalFooter>\r\n                    <>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        onClick={handleSaveExp}\r\n                        className=\"mr-2\"\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        outline\r\n                        onClick={handleCancelEditExp}\r\n                        className=\"ml-2\"\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </>\r\n                  </ModalFooter>\r\n                </Modal>\r\n                {/* Exp modal ends */}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {/* Experience section ends */}\r\n        {/* Eduction section starts */}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row className=\"align-items-center\">\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Education</h2>\r\n\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingEducation(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  {college.map((colleges) => (\r\n                    <Col key={colleges} md={12} className=\"mb-3\">\r\n                      {\" \"}\r\n                      {/* Use index as a key, but consider using a unique identifier if available */}\r\n                      <h3 className=\"font-weight-semibold\">\r\n                        {colleges.degree}\r\n                      </h3>\r\n                      <h3 className=\"text-muted\">\r\n                        {colleges.collegeName} | {colleges.year}\r\n                      </h3>\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n\r\n                {/* Education modal starts */}\r\n                <Modal\r\n                  isOpen={isEditingEducation}\r\n                  toggle={() => setIsEditingEducation(!isEditingEducation)}\r\n                  className=\"\"\r\n                  size=\"lg\"\r\n                  style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                >\r\n                  <ModalBody>\r\n                    <div className=\"col-lg-12 col-12\">\r\n                      <Row className=\"align-items-center mb-3\">\r\n                        <Col>\r\n                          <h2 className=\"font-weight-bold\">Edit Education</h2>\r\n                        </Col>\r\n                        <Col xs=\"auto\" className=\"ml-auto\">\r\n                          <Button\r\n                            color=\"primary\"\r\n                            outline\r\n                            className=\"icon-button\"\r\n                            style={{ border: \"none\" }}\r\n                            size=\"sm\"\r\n                            onClick={handleAddEducation}\r\n                          >\r\n                            <span\r\n                              className=\"text-primary\"\r\n                              style={{ fontSize: \"24px\" }}\r\n                            >\r\n                              +\r\n                            </span>\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      <div className=\"\">\r\n                        {college.map((colleges, index) => (\r\n                          <Row key={colleges} className=\"mt-2\">\r\n                            <Col className=\"\">\r\n                              <h3 className=\"font-weight-semibold\">\r\n                                {colleges.degree}\r\n                              </h3>\r\n                              <h3 className=\"text-muted\">\r\n                                {colleges.collegeName} | {colleges.year}\r\n                              </h3>\r\n                            </Col>\r\n                            <Col xs=\"auto\">\r\n                              <Button\r\n                                color=\"primary\"\r\n                                outline\r\n                                className=\"icon-button mr-1\"\r\n                                size=\"sm\"\r\n                                onClick={() => handleEditEducation(index)} // Call edit handler with index\r\n                                style={{ border: \"none\" }}\r\n                              >\r\n                                <i className=\"simple-icon-pencil\" />\r\n                              </Button>\r\n\r\n                              <Button\r\n                                color=\"primary\"\r\n                                outline\r\n                                className=\"icon-button\"\r\n                                size=\"sm\"\r\n                                onClick={() => handleDeleteEducation(index)} // Call edit handler with index\r\n                                style={{ border: \"none\" }}\r\n                              >\r\n                                <i className=\"simple-icon-trash\" />\r\n                              </Button>\r\n                            </Col>\r\n                          </Row>\r\n                        ))}\r\n                      </div>\r\n                      {isEditingEducationSecond ? (\r\n                        <>\r\n                          {/* {college.map((colleges, index) => (\r\n                            <Row key={colleges}>\r\n                              <Col className=\"bg-primary\">\r\n                                <h3 className=\"font-weight-semibold\">\r\n                                  {colleges.degree}\r\n                                </h3>\r\n                                <h3 className=\"text-muted\">\r\n                                  {colleges.collegeName} | {colleges.year}\r\n                                </h3>\r\n                              </Col>\r\n                              <Col xs=\"auto\">\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  outline\r\n                                  className=\"icon-button\"\r\n                                  size=\"sm\"\r\n                                  onClick={() => handleEditEducation(index)} // Call edit handler with index\r\n                                  style={{ border: \"none\" }}\r\n                                >\r\n                                  <i className=\"simple-icon-pencil\" />\r\n                                </Button>\r\n                              </Col>\r\n                            </Row>\r\n                          ))} */}\r\n\r\n                          <Row>\r\n                            <Col md={6}>\r\n                              {/* Render only for the selected college */}\r\n                              {college[editingIndex] && (\r\n                                <>\r\n                                  <FormGroup className=\"error-l-75\">\r\n                                    <Label>College Name*</Label>\r\n                                    <Input\r\n                                      className=\"form-control\"\r\n                                      name={`education[${editingIndex}].collegeName`}\r\n                                      id={`education[${editingIndex}].collegeName`}\r\n                                      value={college[editingIndex].collegeName}\r\n                                      onChange={(e) =>\r\n                                        handleInputEducationChange(\r\n                                          editingIndex,\r\n                                          \"collegeName\",\r\n                                          e.target.value\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                  </FormGroup>\r\n                                </>\r\n                              )}\r\n                            </Col>\r\n                            <Col md={6}>\r\n                              {college[editingIndex] && (\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for={`education[${editingIndex}].degree`}\r\n                                  >\r\n                                    Degree*\r\n                                  </Label>\r\n                                  <Input\r\n                                    name={`education[${editingIndex}].degree`}\r\n                                    id={`education[${editingIndex}].degree`}\r\n                                    className=\"form-control\"\r\n                                    value={college[editingIndex].degree}\r\n                                    onChange={(e) =>\r\n                                      handleInputEducationChange(\r\n                                        editingIndex,\r\n                                        \"degree\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                </FormGroup>\r\n                              )}\r\n                            </Col>\r\n\r\n                            <Col md={6}>\r\n                              {college[editingIndex] && (\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for={`education[${editingIndex}].department`}\r\n                                  >\r\n                                    Department*\r\n                                  </Label>\r\n                                  <Input\r\n                                    name={`education[${editingIndex}].department`}\r\n                                    id={`education[${editingIndex}].department`}\r\n                                    className=\"form-control\"\r\n                                    value={college[editingIndex].department}\r\n                                    onChange={(e) =>\r\n                                      handleInputEducationChange(\r\n                                        editingIndex,\r\n                                        \"department\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                </FormGroup>\r\n                              )}\r\n                            </Col>\r\n                            <Col md={6}>\r\n                              {college[editingIndex] && (\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for={`education[${editingIndex}].degree`}\r\n                                  >\r\n                                    Year*\r\n                                  </Label>\r\n                                  <Input\r\n                                    name={`education[${editingIndex}].year`}\r\n                                    id={`education[${editingIndex}].year`}\r\n                                    className=\"form-control\"\r\n                                    value={college[editingIndex].year}\r\n                                    onChange={(e) =>\r\n                                      handleInputEducationChange(\r\n                                        editingIndex,\r\n                                        \"year\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                </FormGroup>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                        </>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={handleSaveEducation}\r\n                      className=\"mr-2\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      onClick={handleCancelEditEducation}\r\n                      className=\"ml-2\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n                {/* Education modal ends */}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {/* Eduction section ends */}\r\n        {/* language section starts */}{\" \"}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Languages known</h2>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingLanguages(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <ul\r\n                      className=\"text-one text-muted font-weight-bold d-flex flex-wrap p-0 mr-3 text-start\"\r\n                      style={{\r\n                        gap: \"30px\",\r\n                        listStyle: \"none\",\r\n                        paddingLeft: 0,\r\n                      }}\r\n                    >\r\n                      {languages.map((lang, index) => (\r\n                        <li\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          key={index}\r\n                          style={{\r\n                            position: \"relative\",\r\n                            paddingLeft: \"20px\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            style={{\r\n                              content: '\"\"',\r\n                              position: \"absolute\",\r\n                              left: 0,\r\n                              top: \"50%\",\r\n                              transform: \"translateY(-50%) rotate(45deg)\",\r\n                              width: \"7px\",\r\n                              height: \"7px\",\r\n                              backgroundColor: \"currentColor\",\r\n                            }}\r\n                          />\r\n                          {language.find((l) => l.iso_code === lang)?.name}{\" \"}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </Col>\r\n                </Row>\r\n                <Modal\r\n                  isOpen={isEditingLanguages}\r\n                  toggle={() => setIsEditingLanguages(!isEditingLanguages)}\r\n                  className=\"\"\r\n                  size=\"lg\"\r\n                  style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                >\r\n                  <ModalHeader>\r\n                    <h2 className=\"font-weight-bold\">Languages</h2>\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <h5>Languages</h5>\r\n                    <>\r\n                      <FormGroup className=\"error-l-75\">\r\n                        <Select\r\n                          placeholder=\"Select Languages\"\r\n                          name=\"languages\"\r\n                          isMulti\r\n                          options={languageOptions}\r\n                          className=\"react-select\"\r\n                          classNamePrefix=\"react-select\"\r\n                          value={selectedLanguages}\r\n                          onChange={(selectedOptions) => {\r\n                            setSelectedLanguages(selectedOptions);\r\n                            handleChange(selectedOptions);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      {languages.map((lang, index) => (\r\n                        <Button\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          key={index}\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"mt-2 font-weight-semibold mx-2\"\r\n                          size=\"sm\"\r\n                          onClick={() => handleRemoveLanguages(index)}\r\n                        >\r\n                          {language.find((l) => l.iso_code === lang)?.name}{\" \"}\r\n                          <i className=\"iconsminds-close\" />\r\n                        </Button>\r\n                      ))}\r\n                    </>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={handleLanguagesSave}\r\n                      className=\"mr-2\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      onClick={handleLanguagesCancel}\r\n                      className=\"ml-2\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {/* language section ends */}\r\n        {/* skill section starts */}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Skills</h2>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingSkills(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <div\r\n                  className=\"d-flex flex-wrap\"\r\n                  style={{ gap: \"10px\", marginTop: \"10px\" }}\r\n                >\r\n                  {skills.map((newTopics, index) => (\r\n                    <Button\r\n                      // eslint-disable-next-line react/no-array-index-key\r\n                      key={index}\r\n                      color={index < 3 ? \"primary\" : \"light\"}\r\n                      className=\"mb-2 font-weight-semibold mr-2\"\r\n                      size=\"sm\"\r\n                    >\r\n                      {newTopics}\r\n                    </Button>\r\n                  ))}\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Modal\r\n            isOpen={isEditingSkills}\r\n            s\r\n            toggle={() => setIsEditingSkills(!isEditingSkills)}\r\n            className=\"\"\r\n            size=\"lg\"\r\n            style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n          >\r\n            <ModalHeader>\r\n              <h2 className=\"font-weight-bold\">Skills</h2>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <div className=\"mt-4\">\r\n                <h5>Skills</h5>\r\n\r\n                <InputGroup className=\"mb-3\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"New skill\"\r\n                    value={newInputSkill}\r\n                    onChange={(e) => setNewInputSkill(e.target.value)}\r\n                    onKeyDown={(event) => {\r\n                      if (event.key === \"Enter\") {\r\n                        handleAddSkill(newInputSkill);\r\n                        setNewInputSkill(\"\");\r\n                      }\r\n                    }}\r\n                  />\r\n                  <InputGroupAddon addonType=\"append\">\r\n                    <Button\r\n                      outline\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        handleAddSkill(newInputSkill);\r\n                        setNewInputSkill(\"\");\r\n                      }}\r\n                    >\r\n                      Add Skill\r\n                    </Button>\r\n                  </InputGroupAddon>\r\n                </InputGroup>\r\n\r\n                {skillValidationMessage && (\r\n                  <div className=\"invalid-feedback d-block\">\r\n                    {skillValidationMessage}\r\n                  </div>\r\n                )}\r\n                <Row className=\"\">\r\n                  <ReactSortable\r\n                    list={skills}\r\n                    setList={setSkills}\r\n                    options={{ handle: \".handle\" }}\r\n                    className=\"d-flex flex-wrap ml-2\"\r\n                  >\r\n                    {skills.map((skill, index) => (\r\n                      <Button\r\n                        // eslint-disable-next-line react/no-array-index-key\r\n                        key={index}\r\n                        color={index < 3 ? \"primary\" : \"light\"}\r\n                        className=\" mb-2 font-weight-semibold ml-2 mx-2 d-flex align-items-center\"\r\n                        size=\"sm\"\r\n                        onClick={() => handleRemoveSkill(index)}\r\n                      >\r\n                        {skill} <i className=\"iconsminds-close ml-1\" />\r\n                      </Button>\r\n                    ))}\r\n                  </ReactSortable>\r\n                </Row>\r\n\r\n                <p className=\"text-muted ml-2\">\r\n                  Drag topic to set top 3 (the top 3 topics will be displayed on\r\n                  alumni cards)\r\n                </p>\r\n              </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={handleSaveSkill}\r\n                className=\"mr-2\"\r\n              >\r\n                Save\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                outline\r\n                onClick={handleSkillCancel}\r\n                className=\"ml-2\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </Row>\r\n        {/* skill section ends */}\r\n        {/* price section starts */}\r\n        <Row className=\"my-4 \">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row className=\"align-items-center\">\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Price</h2>\r\n\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingPrice(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <div>\r\n                  <h2 className=\"font-weight-semi-bold \">₹ {price}</h2>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          {/* price modal starts */}\r\n          <Modal\r\n            isOpen={isEditingPrice}\r\n            toggle={() => setIsEditingPrice(!isEditingPrice)}\r\n            className=\"\"\r\n            size=\"lg\"\r\n            style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n          >\r\n            <ModalHeader style={{ borderBottom: \"none\" }}>\r\n              <h2 className=\"font-weight-bold\">Price</h2>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <br />\r\n\r\n              <>\r\n                <Label for=\"about\" className=\"text-muted\">\r\n                  <h4>Price</h4>\r\n                </Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"about\"\r\n                  value={price}\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                  className=\" text-one\"\r\n                />\r\n                <br />\r\n              </>\r\n            </ModalBody>\r\n            <ModalFooter\r\n              style={{ borderTop: \"none\" }}\r\n              className=\"d-flex align-items-center justify-content-center\"\r\n            >\r\n              <Button color=\"primary\" onClick={() => handleSavePrice()}>\r\n                Save\r\n              </Button>{\" \"}\r\n              <Button\r\n                color=\"primary\"\r\n                outline\r\n                onClick={() => setIsEditingPrice(false)}\r\n                className=\"\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n          {/* price modal ends */}\r\n        </Row>\r\n        {/* price section ends */}\r\n        {/* new design code ends */}\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlumniMyProfile;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport CustomSelectInput from \"components/common/CustomSelectInput\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  Row,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport DateRangePicker from \"../BigCalendar/DateRangePicker\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst AlumniCalendar = () => {\r\n  // To change the url to backend uncomment the below line\r\n  const url = `${baseUrl}/api/calendar/appointment/mentor`;\r\n\r\n  const [mentoravailable, setMentorAvailable] = useState([]);\r\n  const [currentWeekStart, setCurrentWeekStart] = useState(new Date());\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  // const mentorName = searchParams.get('mentorName');\r\n  const mentorId = searchParams.get(\"mentorId\");\r\n  const history = useHistory();\r\n\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  const [selectedHourDropdown, setSelectedHourDropdown] = useState(null); // Renamed state variable\r\n  const [selectedHourDropdown1, setSelectedHourDropdown1] = useState(null); // Renamed state variable\r\n\r\n  const [minutedrop, setMinutedrop] = useState(null);\r\n  const [minutedrop1, setMinutedrop1] = useState(null);\r\n  const [modalSmall, setModalSmall] = useState(false);\r\n  const [selectedfromampm, setSelectedFromAmPm] = useState(null); // State for AM selection\r\n  const [selectedfromampm1, setSelectedFromAmPm1] = useState(null); // State for AM selection\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const redirectToSessionLists1 = () => {\r\n    // Redirect to the specified URL with the query parameter\r\n    history.push(\"/app/sessionmentor\");\r\n  };\r\n\r\n  // Function to get the start date of the current week\r\n  const getStartOfWeek = () => {\r\n    const currentDate = new Date();\r\n    const day = currentDate.getDay();\r\n    const diff = currentDate.getDate() - day + (day === 0 ? -6 : 1); // Adjust when day is Sunday\r\n    return new Date(currentDate.setDate(diff));\r\n  };\r\n\r\n  const fetchMentorSlotsCreate = async (fromTime, toTime) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${url}?&fromTime=${fromTime}&toTime=${toTime}`\r\n      );\r\n\r\n      const availability = response.data;\r\n      setMentorAvailable(availability);\r\n      // console.log(availability);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleOkButtonClick = async () => {\r\n    setLoading(true);\r\n    // Ensure selectedDate is not null\r\n    if (!selectedDate) {\r\n      console.error(\"Selected date is null\");\r\n      return;\r\n    }\r\n\r\n    // Convert selected date to UTC timestamp\r\n    const selectedDateTime = new Date(selectedDate);\r\n\r\n    // Set the hours and minutes for the selected date\r\n    const selectedHourFrom =\r\n      (selectedHourDropdown % 12) + (selectedfromampm === \"PM\" ? 12 : 0); // Adjust for PM\r\n    selectedDateTime.setHours(selectedHourFrom, minutedrop, 0, 0);\r\n    const fromTimeStamp = selectedDateTime.getTime(); // Get the UTC timestamp for 'from' time\r\n\r\n    // Calculate 'to' time\r\n    const toDateTime = new Date(selectedDateTime); // Create a new Date object based on 'from' time\r\n    const selectedHourTo =\r\n      (selectedHourDropdown1 % 12) + (selectedfromampm1 === \"PM\" ? 12 : 0); // Adjust for PM\r\n    toDateTime.setHours(selectedHourTo, minutedrop1, 0, 0); // Set the 'to' hour\r\n    const toTimeStamp = toDateTime.getTime(); // Get the UTC timestamp for 'to' time\r\n\r\n    // Create an object with the required structure\r\n    const slot = {\r\n      fromTimeStamp,\r\n      toTimeStamp,\r\n    };\r\n\r\n    // Make the POST request\r\n    try {\r\n      const response = await axios.post(url, [slot]);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      // console.log('Data saved successfully:', response.data);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      }\r\n      console.error(\"Error saving data:\", error);\r\n    }\r\n\r\n    setLoading(false);\r\n    setModalSmall(false);\r\n\r\n    // window.location.reload();\r\n    const startOfWeekTimestamp = new Date(currentWeekStart);\r\n    startOfWeekTimestamp.setHours(0, 0, 0, 0);\r\n    const endOfWeekTimestamp = new Date(currentWeekStart);\r\n    endOfWeekTimestamp.setDate(endOfWeekTimestamp.getDate() + 6);\r\n    endOfWeekTimestamp.setHours(23, 59, 59, 999);\r\n    fetchMentorSlotsCreate(\r\n      startOfWeekTimestamp.getTime(),\r\n      endOfWeekTimestamp.getTime()\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Set the time of currentWeekStart to 12:00 PM (noon)\r\n    const startOfWeekTimestamp = new Date(currentWeekStart);\r\n    startOfWeekTimestamp.setHours(0, 0, 0, 0);\r\n\r\n    // Set the time of endOfWeekTimestamp to 11:59 PM\r\n    const endOfWeekTimestamp = new Date(currentWeekStart);\r\n    endOfWeekTimestamp.setDate(endOfWeekTimestamp.getDate() + 6); // Set to end of week\r\n    endOfWeekTimestamp.setHours(23, 59, 59, 999);\r\n\r\n    const newUrl = `${window.location.origin}${\r\n      window.location.pathname\r\n    }?&fromTime=${startOfWeekTimestamp.getTime()}&toTime=${endOfWeekTimestamp.getTime()}`;\r\n    window.history.replaceState(null, \"\", newUrl);\r\n\r\n    fetchMentorSlotsCreate(\r\n      startOfWeekTimestamp.getTime(),\r\n      endOfWeekTimestamp.getTime()\r\n    );\r\n  }, [currentWeekStart, mentorId]);\r\n\r\n  useEffect(() => {\r\n    const startOfWeek = getStartOfWeek();\r\n    setCurrentWeekStart(startOfWeek);\r\n  }, []);\r\n\r\n  // weeklist functions start\r\n  const handleDropdownItemClick = (selectedHour) => {\r\n    setSelectedHourDropdown(selectedHour.value);\r\n\r\n    console.log(`Selected hour: ${selectedHour.value}`);\r\n  };\r\n\r\n  const handleDropdownItemClick1 = (selectedMinute) => {\r\n    setMinutedrop(selectedMinute.value);\r\n  };\r\n\r\n  const handleDropdownItemClick2 = (selectedHour) => {\r\n    setSelectedHourDropdown1(selectedHour.value);\r\n  };\r\n  const handleDropdownItemClick3 = (selectedMinute) => {\r\n    setMinutedrop1(selectedMinute.value);\r\n  };\r\n\r\n  const handleDropdownItemClick4 = (selectedAmPmFrom) => {\r\n    setSelectedFromAmPm(selectedAmPmFrom.value);\r\n    console.log(`Selected from AM/PM: ${selectedAmPmFrom.value}`);\r\n  };\r\n  const handleDropdownItemClick5 = (selectedAmPmTo) => {\r\n    setSelectedFromAmPm1(selectedAmPmTo.value);\r\n    console.log(`Selected from AM/PM: ${selectedAmPmTo.value}`);\r\n  };\r\n  const generateDropdownItemsSelect = () => {\r\n    const items = [];\r\n    for (let i = 1; i <= 12; i += 1) {\r\n      const formattedHour = i < 10 ? `0${i}` : i;\r\n      items.push({ value: formattedHour, label: formattedHour });\r\n    }\r\n    return items;\r\n  };\r\n  const generateMinuteDropdownItems = () => {\r\n    const minutes = [0, 15, 30, 45];\r\n    const items = [];\r\n\r\n    minutes.forEach((minute) => {\r\n      const formattedMinute = minute < 10 ? `0${minute}` : `${minute}`;\r\n      items.push({ value: formattedMinute, label: formattedMinute });\r\n    });\r\n\r\n    return items;\r\n  };\r\n  const generateAmPmDropdownItems1 = () => {\r\n    const amPmOptions = [\"AM\", \"PM\"];\r\n    const items = [];\r\n\r\n    amPmOptions.forEach((amPm) => {\r\n      items.push({ value: amPm, label: amPm });\r\n    });\r\n\r\n    return items;\r\n  };\r\n  const generateDropdownItems1 = () => {\r\n    const items = [];\r\n    for (let i = 1; i <= 12; i += 1) {\r\n      const formattedHour = i < 10 ? `0${i}` : i;\r\n      items.push({ value: formattedHour, label: formattedHour });\r\n    }\r\n    return items;\r\n  };\r\n  const generateMinuteDropdownItems1 = () => {\r\n    const minutes = [0, 15, 30, 45];\r\n    const items = [];\r\n\r\n    minutes.forEach((minute) => {\r\n      const formattedMinute = minute < 10 ? `0${minute}` : `${minute}`;\r\n      items.push({ value: formattedMinute, label: formattedMinute });\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n  const generateAmPmDropdownItems = () => {\r\n    const amPmOptions = [\"AM\", \"PM\"];\r\n    const items = [];\r\n\r\n    amPmOptions.forEach((amPm) => {\r\n      items.push({ value: amPm, label: amPm });\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n  const goToPreviousWeek = () => {\r\n    const newStartDate = new Date(currentWeekStart);\r\n    newStartDate.setDate(newStartDate.getDate() - 7);\r\n    setCurrentWeekStart(newStartDate);\r\n  };\r\n\r\n  const goToNextWeek = () => {\r\n    const newStartDate = new Date(currentWeekStart);\r\n    newStartDate.setDate(newStartDate.getDate() + 7);\r\n    setCurrentWeekStart(newStartDate);\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    const monthNames = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    const month = monthNames[date.getMonth()];\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    return `${day}-${month}-${date.getFullYear()}`;\r\n  };\r\n  const getWeekDates = () => {\r\n    const weekDates = [];\r\n    const startDate = new Date(currentWeekStart);\r\n    for (let i = 0; i < 7; i += 1) {\r\n      const currentDate = new Date(startDate);\r\n      currentDate.setDate(startDate.getDate() + i);\r\n      weekDates.push(currentDate);\r\n    }\r\n    return weekDates;\r\n  };\r\n\r\n  const isPreviousWeekDisabled = () => {\r\n    // Disable the button if you're already in the current week\r\n    const today = new Date();\r\n    const currentWeekStartDate = new Date(today);\r\n    const day = today.getDay(); // Get the day of the week (0 = Sunday, 1 = Monday, ..., 6 = Saturday)\r\n\r\n    if (day === 0) {\r\n      // If today is Sunday, subtract 6 days to get the start of the current week\r\n      currentWeekStartDate.setDate(today.getDate() - 6);\r\n    } else {\r\n      // Otherwise, subtract the number of days from the current day to get the start of the current week\r\n      currentWeekStartDate.setDate(today.getDate() - (day - 1));\r\n    }\r\n\r\n    // Set hours, minutes, seconds, and milliseconds to zero\r\n    currentWeekStartDate.setHours(0, 0, 0, 0);\r\n\r\n    const storedWeekStart = new Date(currentWeekStart);\r\n    storedWeekStart.setHours(0, 0, 0, 0); // Set hours, minutes, seconds, and milliseconds to zero\r\n\r\n    const disabled =\r\n      currentWeekStartDate.getTime() === storedWeekStart.getTime();\r\n\r\n    return disabled;\r\n  };\r\n\r\n  const handleTimeSlotClick = (date) => {\r\n    setSelectedDate(date);\r\n\r\n    setModalSmall(true); // Optionally open the modal when a time slot is clicked\r\n  };\r\n\r\n  const handleAddSlotClick = (date) => {\r\n    setSelectedDate(date); // Set the selected date\r\n    setModalSmall(true); // Show the modal\r\n  };\r\n  const deleteMentorSlot = async (id, fromTime, toTime) => {\r\n    try {\r\n      await axios.delete(`${baseUrl}/api/calendar/delete/${id}`);\r\n      // Fetch the updated slots after deletion\r\n      await fetchMentorSlotsCreate(fromTime, toTime);\r\n    } catch (error) {\r\n      console.error(\"Error deleting slot:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSlotClick = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this slot?\")) {\r\n      // Use selected date and time from state\r\n      const selectedDateTime = new Date(selectedDate);\r\n\r\n      // Set the hours and minutes for the selected date\r\n      const selectedHourFrom =\r\n        (selectedHourDropdown % 12) + (selectedfromampm === \"PM\" ? 12 : 0); // Adjust for PM\r\n      selectedDateTime.setHours(selectedHourFrom, minutedrop, 0, 0);\r\n      const fromTime = selectedDateTime.getTime(); // Get the UTC timestamp for 'from' time\r\n\r\n      // Calculate 'to' time\r\n      const toDateTime = new Date(selectedDateTime); // Create a new Date object based on 'from' time\r\n      const selectedHourTo =\r\n        (selectedHourDropdown1 % 12) + (selectedfromampm1 === \"PM\" ? 12 : 0); // Adjust for PM\r\n      toDateTime.setHours(selectedHourTo, minutedrop1, 0, 0); // Set the 'to' hour\r\n      const toTime = toDateTime.getTime(); // Get the UTC timestamp for 'to' time\r\n\r\n      deleteMentorSlot(id, fromTime, toTime);\r\n    }\r\n  };\r\n\r\n  const handleCloseIconClick = (e, id) => {\r\n    e.stopPropagation();\r\n    handleDeleteSlotClick(id);\r\n  };\r\n\r\n  const selectData = generateDropdownItemsSelect();\r\n  const minutesSelectData = generateMinuteDropdownItems();\r\n  const toHoursSelectData = generateDropdownItems1();\r\n  const toMinutesSelectData = generateMinuteDropdownItems1();\r\n  const fromAmPmSelectData = generateAmPmDropdownItems();\r\n  const toAmPmSelectData = generateAmPmDropdownItems1();\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Colxx xxs=\"8\" className=\"mx-auto\">\r\n          {/* <h1 className='py-4 text-large'> {mentorName} availability</h1> */}\r\n          <h1 className=\"py-4 text-large\">My slots</h1>\r\n\r\n          <div className=\"font-weight-semibold d-flex justify-content-center align-items-center\">\r\n            <span\r\n              className=\"font-weight-semibold text-xlarge mr-2 cursor-pointer\"\r\n              style={{\r\n                cursor: isPreviousWeekDisabled() ? \"not-allowed\" : \"pointer\",\r\n                opacity: isPreviousWeekDisabled() ? 0.5 : 1, // Lower opacity for disabled state\r\n              }}\r\n              onClick={!isPreviousWeekDisabled() ? goToPreviousWeek : undefined}\r\n              onKeyDown={(e) => {\r\n                if (\r\n                  !isPreviousWeekDisabled() &&\r\n                  (e.key === \"Enter\" || e.key === \" \")\r\n                ) {\r\n                  goToPreviousWeek();\r\n                }\r\n              }}\r\n              role=\"button\"\r\n              tabIndex={!isPreviousWeekDisabled() ? 0 : -1}\r\n              aria-disabled={isPreviousWeekDisabled()}\r\n            >\r\n              {/* <i className='simple-icon-arrow-left' /> */}\r\n              <i\r\n                className={`simple-icon-arrow-left ${\r\n                  isPreviousWeekDisabled() ? \"disabled\" : \"\"\r\n                }`}\r\n              />\r\n            </span>\r\n\r\n            <div>\r\n              <h4 className=\" font-weight-semibold\">\r\n                {formatDate(currentWeekStart)} -{\" \"}\r\n                {formatDate(\r\n                  new Date(currentWeekStart.getTime() + 6 * 24 * 60 * 60 * 1000)\r\n                )}\r\n              </h4>\r\n            </div>\r\n            <span\r\n              className=\"ml-2 font-weight-semibold text-xlarge\"\r\n              role=\"button\"\r\n              tabIndex={0}\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={goToNextWeek}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\" || e.key === \" \") {\r\n                  goToNextWeek();\r\n                }\r\n              }}\r\n            >\r\n              <i className=\"simple-icon-arrow-right\" />\r\n            </span>\r\n            {/* <Button className='ml-5 font-weight-semibold text-one' color=\"primary\" onClick={goToNextWeek} ><i className='simple-icon-arrow-right '/></Button> */}\r\n          </div>\r\n          <Card className=\"mb-4 mt-4\">\r\n            <CardBody>\r\n              <Table bordered>\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-one\">Date</th>\r\n                    <th className=\"text-center text-one\">Availablilty time</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {getWeekDates().map((date) => (\r\n                    <tr key={date.getTime()}>\r\n                      {/* <td>{getMonthName(date.getMonth())} {formatDate(date)}</td> */}\r\n                      <td> {formatDate(date)}</td>\r\n\r\n                      <td>\r\n                        {/*  new one */}\r\n\r\n                        {mentoravailable.map((availability) => {\r\n                          let hasSlotsForDay = false; // Flag to track if there are slots for the particular day\r\n\r\n                          const slots = availability.availableSlots.map(\r\n                            (avail) => {\r\n                              const availDate = new Date(avail.fromTimeStamp);\r\n                              if (\r\n                                availDate.toDateString() === date.toDateString()\r\n                              ) {\r\n                                hasSlotsForDay = true; // Set flag true if there's at least one slot for the day\r\n\r\n                                const FromDate = new Date(avail.fromTimeStamp);\r\n                                const ToDate = new Date(avail.toTimeStamp);\r\n\r\n                                const fromHours =\r\n                                  FromDate.getHours() % 12 || 12;\r\n                                const fromMinutes = String(\r\n                                  FromDate.getMinutes()\r\n                                ).padStart(2, \"0\");\r\n                                const fromPeriod =\r\n                                  FromDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                                const toHours = ToDate.getHours() % 12 || 12;\r\n                                const toMinutes = String(\r\n                                  ToDate.getMinutes()\r\n                                ).padStart(2, \"0\");\r\n                                const toPeriod =\r\n                                  ToDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                                const fromTime = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n                                const toTime = `${toHours}:${toMinutes} ${toPeriod}`;\r\n\r\n                                const isPastTime = ToDate < new Date();\r\n\r\n                                return (\r\n                                  <div\r\n                                    key={avail.fromTimeStamp} // Updated key to use timestamp to ensure it is unique\r\n                                    role=\"button\"\r\n                                    tabIndex={0}\r\n                                    className={`text-center ${\r\n                                      isPastTime\r\n                                        ? \"cursor-not-allowed\"\r\n                                        : \"cursor-pointer\"\r\n                                    } py-2 mt-2`}\r\n                                    style={{\r\n                                      outline: `1px solid black`,\r\n                                      cursor: \"pointer\",\r\n                                    }}\r\n                                    onClick={() =>\r\n                                      handleTimeSlotClick(avail.fromTimeStamp)\r\n                                    }\r\n                                    onKeyDown={(e) => {\r\n                                      if (e.key === \"Enter\" || e.key === \" \") {\r\n                                        handleTimeSlotClick(\r\n                                          avail.fromTimeStamp\r\n                                        );\r\n                                      }\r\n                                    }}\r\n                                    onMouseEnter={(e) => {\r\n                                      e.currentTarget.classList.add(\r\n                                        \"bg-primary\"\r\n                                      );\r\n                                    }}\r\n                                    onMouseLeave={(e) => {\r\n                                      e.currentTarget.classList.remove(\r\n                                        \"bg-primary\"\r\n                                      );\r\n                                    }}\r\n                                  >\r\n                                    <span className=\"d-flex gap-5 justify-content-center align-items-center\">\r\n                                      {fromTime} to {toTime}\r\n                                      <i\r\n                                        className=\"simple-icon-close ml-4 text-one\"\r\n                                        role=\"button\"\r\n                                        tabIndex={0}\r\n                                        onClick={(e) =>\r\n                                          handleCloseIconClick(e, avail.id)\r\n                                        }\r\n                                        onKeyDown={(e) => {\r\n                                          if (\r\n                                            e.key === \"Enter\" ||\r\n                                            e.key === \" \"\r\n                                          ) {\r\n                                            handleCloseIconClick(e, avail.id);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    </span>\r\n                                  </div>\r\n                                );\r\n                              }\r\n                              return null;\r\n                            }\r\n                          );\r\n\r\n                          // Add slot button only once per date\r\n                          return (\r\n                            <>\r\n                              {slots}\r\n                              {hasSlotsForDay && (\r\n                                <div\r\n                                  className=\"mt-2 text-center mx-auto\"\r\n                                  key={`add-slot-${date.getTime()}`}\r\n                                >\r\n                                  <Button\r\n                                    size=\"sm\"\r\n                                    className=\"text-center mx-auto my-4\"\r\n                                    onClick={() => handleAddSlotClick(date)}\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    block\r\n                                    style={{ borderRadius: \"0px\" }}\r\n                                  >\r\n                                    +\r\n                                  </Button>\r\n                                </div>\r\n                              )}\r\n                            </>\r\n                          );\r\n                        })}\r\n                        {mentoravailable.every(\r\n                          (availability) =>\r\n                            !availability.availableSlots.some(\r\n                              (avail) =>\r\n                                new Date(avail.fromTimeStamp).toDateString() ===\r\n                                date.toDateString()\r\n                            )\r\n                        ) && (\r\n                          <div\r\n                            className=\"mt-2 text-center mx-auto\"\r\n                            key={`edit-${date.getTime()}`}\r\n                          >\r\n                            <Button\r\n                              size=\"sm\"\r\n                              className=\"text-center mx-auto my-4\"\r\n                              onClick={() => handleAddSlotClick(date)}\r\n                              key={`edit-${date.getTime()}`}\r\n                              outline\r\n                              color=\"primary\"\r\n                              block\r\n                              style={{ borderRadius: \"0px\" }}\r\n                            >\r\n                              +\r\n                            </Button>\r\n                          </div>\r\n                        )}\r\n\r\n                        {mentoravailable.map((availability) =>\r\n                          availability.bookedSlots.map((avail) => {\r\n                            const availDate = new Date(avail.fromTimeStamp);\r\n                            if (\r\n                              availDate.toDateString() === date.toDateString()\r\n                            ) {\r\n                              const FromDate = new Date(avail.fromTimeStamp);\r\n                              const ToDate = new Date(avail.toTimeStamp);\r\n\r\n                              const fromHours = FromDate.getHours() % 12 || 12;\r\n                              const fromMinutes = String(\r\n                                FromDate.getMinutes()\r\n                              ).padStart(2, \"0\");\r\n                              const fromPeriod =\r\n                                FromDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                              const toHours = ToDate.getHours() % 12 || 12;\r\n                              const toMinutes = String(\r\n                                ToDate.getMinutes()\r\n                              ).padStart(2, \"0\");\r\n                              const toPeriod =\r\n                                ToDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                              const fromTime = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n                              const toTime = `${toHours}:${toMinutes} ${toPeriod}`;\r\n\r\n                              const isPastTime = ToDate < new Date();\r\n\r\n                              return (\r\n                                <>\r\n                                  <div\r\n                                    key={date.getTime()}\r\n                                    role=\"button\" // Add role attribute for accessibility\r\n                                    tabIndex={0} // Add tabIndex for keyboard accessibility\r\n                                    className={`text-center ${\r\n                                      isPastTime\r\n                                        ? \"cursor-not-allowed\"\r\n                                        : \"cursor-pointer\"\r\n                                    } bg-primary py-2 mt-2`}\r\n                                    style={{ outline: \"none\" }} // Remove default focus outline if needed\r\n                                    // onClick={() => handleTimeSlotClick(date)}\r\n                                    onKeyDown={(e) => {\r\n                                      if (e.key === \"Enter\" || e.key === \" \") {\r\n                                        handleTimeSlotClick(date);\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    <span className=\"d-flex gap-5 justify-content-center align-items-center\">\r\n                                      {\" \"}\r\n                                      {fromTime} to {toTime}\r\n                                      <i className=\"iconsminds-full-view-2 ml-4\" />\r\n                                    </span>\r\n                                  </div>\r\n                                </>\r\n                              );\r\n                            }\r\n\r\n                            return null;\r\n                          })\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n\r\n              <div className=\"mb-4\">\r\n                <div>\r\n                  <div className=\"\">\r\n                    <Modal\r\n                      isOpen={modalSmall}\r\n                      toggle={() => setModalSmall(!modalSmall)}\r\n                      className=\"mt-5\"\r\n                    >\r\n                      <ModalBody>\r\n                        <div className=\"\">\r\n                          <div>\r\n                            <span\r\n                              style={{ cursor: \"pointer\" }}\r\n                              className=\"mt-2\"\r\n                              role=\"button\"\r\n                              tabIndex={0}\r\n                              onClick={() => setModalSmall(false)}\r\n                              onKeyDown={(e) => {\r\n                                if (e.key === \"Enter\" || e.key === \" \") {\r\n                                  setModalSmall(false);\r\n                                }\r\n                              }}\r\n                            >\r\n                              <i className=\"simple-icon-close text-large\" />\r\n                            </span>\r\n\r\n                            <div>\r\n                              <Form className=\"mt-4\">\r\n                                <FormGroup row className=\"\">\r\n                                  <Label sm={2} className=\"font-weight-bold\">\r\n                                    Date\r\n                                  </Label>\r\n                                  <Colxx sm={10}>\r\n                                    <DateRangePicker\r\n                                      selectedDate={selectedDate}\r\n                                      setSelectedDate={setSelectedDate}\r\n                                    />\r\n                                  </Colxx>\r\n                                </FormGroup>\r\n                              </Form>\r\n                            </div>\r\n\r\n                            <Label className=\"text-one font-weight-bold\">\r\n                              From\r\n                            </Label>\r\n                            <Row>\r\n                              <Col md={4} sm={12} lg={4}>\r\n                                <div className=\"form-group has-float-label\">\r\n                                  <Label>Hours</Label>\r\n\r\n                                  <Select\r\n                                    components={{ Input: CustomSelectInput }}\r\n                                    className=\"react-select\"\r\n                                    classNamePrefix=\"react-select\"\r\n                                    name=\"form-field-name\"\r\n                                    value={generateDropdownItemsSelect().find(\r\n                                      (option) =>\r\n                                        option.value === selectedHourDropdown\r\n                                    )}\r\n                                    onChange={handleDropdownItemClick}\r\n                                    options={[\r\n                                      {\r\n                                        value: \"\",\r\n                                        label: \"Hours\",\r\n                                        isDisabled: true,\r\n                                      },\r\n                                      ...selectData,\r\n                                    ]}\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n                              <Col md={4} sm={12} lg={4}>\r\n                                <div className=\"form-group has-float-label\">\r\n                                  <Label>Minutes</Label>\r\n\r\n                                  <Select\r\n                                    components={{ Input: CustomSelectInput }}\r\n                                    className=\"react-select\"\r\n                                    classNamePrefix=\"react-select\"\r\n                                    name=\"form-field-name\"\r\n                                    value={generateMinuteDropdownItems().find(\r\n                                      (option) => option.value === minutedrop\r\n                                    )}\r\n                                    onChange={handleDropdownItemClick1}\r\n                                    options={[\r\n                                      {\r\n                                        value: \"\",\r\n                                        label: \"Minutes\",\r\n                                        isDisabled: true,\r\n                                      },\r\n                                      ...minutesSelectData,\r\n                                    ]}\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n                              <Col md={4} sm={12} lg={4}>\r\n                                <div className=\"form-group has-float-label\">\r\n                                  <Label>AM/PM</Label>\r\n\r\n                                  <Select\r\n                                    components={{ Input: CustomSelectInput }}\r\n                                    className=\"react-select\"\r\n                                    classNamePrefix=\"react-select\"\r\n                                    name=\"form-field-name\"\r\n                                    // value={selectedfromampm}\r\n                                    value={fromAmPmSelectData.find(\r\n                                      (option) =>\r\n                                        option.value === selectedfromampm\r\n                                    )}\r\n                                    onChange={handleDropdownItemClick4}\r\n                                    options={[\r\n                                      {\r\n                                        value: \"\",\r\n                                        label: \"AM/PM\",\r\n                                        isDisabled: true,\r\n                                      },\r\n                                      ...fromAmPmSelectData,\r\n                                    ]}\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n                            </Row>\r\n                          </div>\r\n\r\n                          <div className=\"\">\r\n                            <Label className=\"text-one font-weight-bold\">\r\n                              To\r\n                            </Label>\r\n                            <div className=\"\">\r\n                              <Row>\r\n                                <Col md={4} lg={4} sm={12}>\r\n                                  <div className=\"form-group has-float-label\">\r\n                                    <Label>Hours</Label>\r\n\r\n                                    <Select\r\n                                      components={{ Input: CustomSelectInput }}\r\n                                      className=\"react-select\"\r\n                                      classNamePrefix=\"react-select\"\r\n                                      name=\"form-field-name\"\r\n                                      value={generateDropdownItems1().find(\r\n                                        (option) =>\r\n                                          option.value === selectedHourDropdown1\r\n                                      )}\r\n                                      onChange={handleDropdownItemClick2}\r\n                                      options={[\r\n                                        {\r\n                                          value: \"\",\r\n                                          label: \"Hours\",\r\n                                          isDisabled: true,\r\n                                        },\r\n                                        ...toHoursSelectData,\r\n                                      ]}\r\n                                    />\r\n                                  </div>\r\n                                </Col>\r\n                                <Col md={4} lg={4} sm={12}>\r\n                                  <div className=\"form-group has-float-label\">\r\n                                    <Label>Minutes</Label>\r\n\r\n                                    <Select\r\n                                      components={{ Input: CustomSelectInput }}\r\n                                      className=\"react-select\"\r\n                                      classNamePrefix=\"react-select\"\r\n                                      name=\"form-field-name\"\r\n                                      value={generateMinuteDropdownItems1().find(\r\n                                        (option) =>\r\n                                          option.value === selectedHourDropdown1\r\n                                      )}\r\n                                      onChange={handleDropdownItemClick3}\r\n                                      options={[\r\n                                        {\r\n                                          value: \"\",\r\n                                          label: \"Minutes\",\r\n                                          isDisabled: true,\r\n                                        },\r\n                                        ...toMinutesSelectData,\r\n                                      ]}\r\n                                    />\r\n                                  </div>\r\n                                </Col>\r\n                                <Col md={4} lg={4} sm={12}>\r\n                                  <div>\r\n                                    <div className=\"form-group has-float-label\">\r\n                                      <Label>AM/PM</Label>\r\n\r\n                                      <Select\r\n                                        components={{\r\n                                          Input: CustomSelectInput,\r\n                                        }}\r\n                                        className=\"react-select\"\r\n                                        classNamePrefix=\"react-select\"\r\n                                        name=\"form-field-name\"\r\n                                        // value={selectedfromampm}\r\n                                        value={toAmPmSelectData.find(\r\n                                          (option) =>\r\n                                            option.value === selectedfromampm1\r\n                                        )}\r\n                                        onChange={handleDropdownItemClick5}\r\n                                        options={[\r\n                                          {\r\n                                            value: \"\",\r\n                                            label: \"AM/PM\",\r\n                                            isDisabled: true,\r\n                                          },\r\n                                          ...toAmPmSelectData,\r\n                                        ]}\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                </Col>\r\n                              </Row>\r\n                              <Row>\r\n                                <Col>\r\n                                  <div className=\"row justify-content-center\">\r\n                                    <Button\r\n                                      onClick={handleOkButtonClick}\r\n                                      className={`btn-shadow btn-multiple-state ${\r\n                                        loading ? \"show-spinner\" : \"\"\r\n                                      }`}\r\n                                      color=\"primary\"\r\n                                    >\r\n                                      <span className=\"spinner d-inline-block\">\r\n                                        <span className=\"bounce1\" />\r\n                                        <span className=\"bounce2\" />\r\n                                        <span className=\"bounce3\" />\r\n                                      </span>\r\n                                      <span className=\"label\">OK</span>\r\n                                    </Button>\r\n                                  </div>\r\n                                </Col>\r\n                              </Row>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* <PopupWizard selectedDate={selectedDate} setSelectedDate={setSelectedDate} \r\n        mentorName={mentorName} mentorId={mentorId} /> */}\r\n                      </ModalBody>\r\n                    </Modal>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n\r\n          <Card style={{ cursor: \"pointer\" }} className=\"my-2 text-center\">\r\n            <CardBody onClick={redirectToSessionLists1}>\r\n              <h5 className=\"font-weight-bold text-primary\">\r\n                My Mentorship Sessions\r\n              </h5>\r\n            </CardBody>\r\n          </Card>\r\n          {/* <Button className='' onClick={redirectToSessionLists1}>My Sessions</Button> */}\r\n\r\n          {/* <PopupWizard/> */}\r\n        </Colxx>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlumniCalendar;\r\n","const AlumniSessionLists = () => {\r\n  return (\r\n    <div>\r\n      <h1>Alumni session lists</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlumniSessionLists;\r\n","/* eslint-disable no-param-reassign */\r\n\r\nimport axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { createRef, useEffect, useState } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  InputGroup,\r\n  Jumbotron,\r\n  Label,\r\n  NavLink,\r\n  Row,\r\n  Spinner,\r\n} from \"reactstrap\";\r\n// import { SliderTooltip } from \"components/common/SliderTooltips\";\r\n// import { FormikTagsInput } from \"containers/form-validations/FormikFields\";\r\n// import TagsInput from \"react-tagsinput\";\r\nimport { adminRoot, baseUrl } from \"constants/defaultValues\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  // validateReasonForMentor,\r\n  validateAchievement,\r\n  validateIdentityStatus,\r\n  // validateCompany,\r\n  // validateJobTitle,\r\n  // validateSkills,\r\n  // validateBio,\r\n  validateLinkedinUrl,\r\n  // validateCategory,\r\n  validateLocation,\r\n  validateStudent,\r\n} from \"../my-login/validation\";\r\n\r\n// import country from \"./Country\";\r\n\r\nimport country from \"../AlumniRegister/Country\";\r\nimport indentityStatusList from \"../CommonCardList/IdentityStatusList\";\r\nimport { EmploymentTypeData } from \"../Listing/ListingData\";\r\nimport language from \"../my-login/Languages\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst ApplyAsMentor = () => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const steps = [\"Profile\", \"Experience\", \"Others\"];\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [file1, setFile1] = useState(null);\r\n  // const [amount, setAmount] = useState(500);\r\n  const [loading, setLoading] = useState(false);\r\n  const [skillsTag, setSkillsTag] = useState([]);\r\n  const [certificationsTag, setCertificationsTag] = useState([]);\r\n  const history = useHistory();\r\n\r\n  // const [skillsTag, setSkillsTag] = useState([]);\r\n  // const [toolsTag, setToolsTag] = useState([]);\r\n  const [imageError, setImageError] = useState(false);\r\n  // const [skillError,setSkillError] = useState(false);\r\n  const [imageErrorMessage, setImageErrorMessage] = useState(null);\r\n  // const [skillErrorMessage,setSkillErrorMessage] = useState(null);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [aboutLoading, setAboutLoading] = useState(false);\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n  const [experienceLoading, setExperienceLoading] = useState(false);\r\n  const [aboutField, setAboutField] = useState({\r\n    image: \"\",\r\n  });\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [certificateInputValue, setCertificateInputValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const status = localStorage.getItem(\"status\");\r\n    // console.log(\"status\", status);\r\n    if (status) {\r\n      if (status === \"0\") {\r\n        setCurrentStep(0);\r\n      } else if (status === \"1\") {\r\n        setCurrentStep(1);\r\n      } else if (status === \"3\") {\r\n        setCurrentStep(2);\r\n      } else if (status === \"7\") {\r\n        setCurrentStep(3);\r\n      } else {\r\n        setCurrentStep(0);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // const [fields] = useState({\r\n  //   image: \"\",\r\n\r\n  //   jobTitle: \"\",\r\n  //   company: \"\",\r\n  //   location: \"\",\r\n  //   category: \"\",\r\n  //   skills: [],\r\n  //   bio: \"\",\r\n  //   linkedinUrl: \"\",\r\n  //   twitterHandle: \"\",\r\n  //   website: \"\",\r\n  //   introVideo: \"\",\r\n  //   featuredArticle: \"\",\r\n  //   reasonForMentor: \"\",\r\n  //   achievement: \"\",\r\n  // });\r\n\r\n  const currentYear = new Date().getFullYear();\r\n  const years = [];\r\n\r\n  for (let year = currentYear; year >= 2005; year -= 1) {\r\n    years.push(year);\r\n  }\r\n\r\n  const languageOptions = language.map((option) => ({\r\n    value: option.iso_code,\r\n    label: option.name,\r\n  }));\r\n\r\n  const studentTypeOptions = [\r\n    { value: \"CURRENT_STUDENT\", label: \"Current Student\" },\r\n    { value: \"ABROAD_EDUCATION\", label: \"Aboard Education\" },\r\n    { value: \"NEW_ENTRANT\", label: \"New Entrant\" },\r\n  ];\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  // file upload validation\r\n\r\n  const validateFile = (file) => {\r\n    // const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\r\n    const maxSize = 2 * 1024 * 1024; // 5MB\r\n    // if (!file) {\r\n    //   setImageError(true);\r\n    //   setImageErrorMessage(\"A profile picture is required\");\r\n    //   return false;\r\n    // }\r\n    // if (!allowedTypes.includes(file.type)) {\r\n    //   setImageError(true);\r\n    //   setImageErrorMessage(\r\n    //     \"Please upload a valid image file (JPEG, PNG, or GIF)\"\r\n    //   );\r\n    //   return false;\r\n    // }\r\n    if (file.size > maxSize) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"File size must be less than 2MB\");\r\n      return false;\r\n    }\r\n\r\n    setImageError(false);\r\n    setImageErrorMessage(\"\");\r\n    return true;\r\n  };\r\n  // file upload validation end\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setFile1(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      setImageError(false);\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        // .split(\",\")[1];\r\n        setSelectedFile(base64Image);\r\n        // setFieldValue(\"image\", base64Image);\r\n        setAboutField({ ...aboutField, image: base64Image });\r\n        // console.log(base64Image)\r\n        validateFile(file);\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  //   const mentorAboutUrl=`${baseUrl}/api/mentor/details/about`;\r\n  //   const mentorAboutUrl=\"http://localhost:3001/acheckabout\";\r\n  const userProfileUrl = `${baseUrl}/api/userprofile/profile`;\r\n  const ImageUrl = `${baseUrl}/api/userprofile/profile-image`;\r\n  const mentorExperienceUrl = `${baseUrl}/api/userprofile/experience`;\r\n  const userAboutUrl = `${baseUrl}/api/userprofile/about`;\r\n  const ResumeUploadUrl = `${baseUrl}/api/resume?role=USER`;\r\n\r\n  const token = localStorage.getItem(\"tokenRes\");\r\n  const [selectedFile2, setSelectedFile2] = useState(null);\r\n  const [imageError1, setImageError1] = useState(false);\r\n  const [imageErrorMessage1, setImageErrorMessage1] = useState(null);\r\n\r\n  // Handle file change\r\n  const handleFileChange2 = (event) => {\r\n    // const file = event.target.files[0];\r\n    // setSelectedFile2(file);\r\n    const file = event.target.files[0];\r\n\r\n    if (!file) return; // No file selected\r\n\r\n    if (!(file.type === \"application/pdf\")) {\r\n      // alert(\"Please select a valid PDF file.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"Please upload a PDF file.\");\r\n      return;\r\n    }\r\n\r\n    const fileSizeMB = file.size / (1024 * 1024); // Convert bytes to MB\r\n\r\n    if (fileSizeMB > 2) {\r\n      // alert(\"File size exceeds 2MB limit.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"File size must be less than  2MB\");\r\n\r\n      return;\r\n    }\r\n\r\n    setSelectedFile2(file);\r\n    setImageError1(false);\r\n    setImageErrorMessage1(\"\");\r\n  };\r\n\r\n  const postDataUserProfile = async (data) => {\r\n    setAboutLoading(true);\r\n\r\n    const userProfile = {\r\n      languages,\r\n      linkedInUrl: data.linkedinUrl,\r\n      twitterHandle: data.twitterHandle,\r\n      personalWebsite: data.personalWebsite,\r\n      location: data.location,\r\n      studentType: data.studentType,\r\n      identityStatus: data.identityStatus,\r\n    };\r\n\r\n    try {\r\n      // Step 1: Post user profile data\r\n      const response = await axios.post(userProfileUrl, userProfile, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      // Step 2: Conditionally upload image if it exists\r\n      if (file1) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", file1);\r\n\r\n        await axios.post(ImageUrl, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n      }\r\n\r\n      setAboutLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"1\");\r\n    } catch (error) {\r\n      setImageError(false);\r\n      setAboutLoading(false);\r\n\r\n      if (error.response) {\r\n        error.response.data.statuses.forEach((status) => {\r\n          NotificationManager.error(\r\n            status.message,\r\n            \"Oops!\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n          if (status.code === 40327) {\r\n            setImageErrorMessage(status.message);\r\n            setImageError(true);\r\n          }\r\n        });\r\n      } else {\r\n        NotificationManager.error(\r\n          \"Something went wrong\",\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const postExperience = async (data) => {\r\n    // handleNextStep();\r\n\r\n    setProfileLoading(true);\r\n    try {\r\n      const response = await axios.post(mentorExperienceUrl, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // setNextStep(true)\r\n      setProfileLoading(false);\r\n      //   console.log(`resres ${response.status}`);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"3\");\r\n    } catch (error) {\r\n      // setSkillError(false);\r\n      setProfileLoading(false);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        error.response.data.statuses.forEach((status) => {\r\n          NotificationManager.error(\r\n            status.message,\r\n            \"Oops!\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n        });\r\n      } else {\r\n        NotificationManager.error(\r\n          \"something went wrong\",\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const postAboutData = async (data) => {\r\n    // handleNextStep();\r\n    setExperienceLoading(true);\r\n    const postDataExp = { ...data };\r\n    try {\r\n      const response = await axios.post(userAboutUrl, postDataExp, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // setNextStep(true)\r\n      // console.log(response);\r\n      if (selectedFile2) {\r\n        const formData = new FormData();\r\n        formData.append(\"resume\", selectedFile2);\r\n\r\n        await axios.post(ResumeUploadUrl, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n      }\r\n      setExperienceLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"7\");\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 3000);\r\n    } catch (error) {\r\n      setExperienceLoading(false);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        error.response.data.statuses.forEach((status) => {\r\n          NotificationManager.error(\r\n            status.message,\r\n            \"Oops!\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n        });\r\n      } else {\r\n        NotificationManager.error(\r\n          \"something went wrong\",\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  // const handleSliderChange = (value) => {\r\n  //   setAmount(value);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   axios.get(mentorAboutUrl).then((response) => {\r\n  //     console.log(\"reslog\", response.data);\r\n  //     // setLoading(false);\r\n  //   });\r\n  // }, [currentStep]);\r\n\r\n  // const handleTagsChange = (newSkills) => {\r\n  //   setSkillError(false);\r\n  //   setSkillsTag(newSkills);\r\n  // };\r\n  // const handleToolsTagsChange = (newTools) => {\r\n  //   setSkillError(false);\r\n  //   setToolsTag(newTools);\r\n  // };\r\n  const [education, setEducation] = useState([\r\n    { college: \"\", degree: \"\", department: \"\", startYear: \"\", endYear: \"\" },\r\n  ]);\r\n\r\n  const [work, setWork] = useState([\r\n    {\r\n      company: \"\",\r\n      jobTitle: \"\",\r\n      employmentType: \"\",\r\n      jobLocation: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n    },\r\n  ]);\r\n\r\n  const removeEducation = (index) => {\r\n    const newEducation = [...education];\r\n    newEducation.splice(index, 1);\r\n    setEducation(newEducation);\r\n  };\r\n  const removeWorkExperience = (index) => {\r\n    const newWorkExperience = [...work];\r\n    newWorkExperience.splice(index, 1);\r\n    setWork(newWorkExperience);\r\n  };\r\n\r\n  const addEducation = () => {\r\n    setEducation([\r\n      ...education,\r\n      { college: \"\", degree: \"\", department: \"\", startYear: 0, endYear: 0 },\r\n    ]);\r\n  };\r\n  const addWorkExperience = () => {\r\n    setWork([\r\n      ...work,\r\n      {\r\n        company: \"\",\r\n        jobTitle: \"\",\r\n        employmentType: \"\",\r\n        jobLocation: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleInputChange = (index, field, value) => {\r\n    setEducation((previousEducation) =>\r\n      previousEducation.map((edu, i) =>\r\n        i === index ? { ...edu, [field]: value } : edu\r\n      )\r\n    );\r\n  };\r\n  const handleWorkInputChange = (index, field, value) => {\r\n    setWork((previousWorkExperience) =>\r\n      previousWorkExperience.map((works, i) =>\r\n        i === index ? { ...works, [field]: value } : works\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleTagsChange = (newSkills) => {\r\n    // setSkillError(false);\r\n    setSkillsTag(newSkills);\r\n  };\r\n\r\n  const handleCertificationsChange = (newCertifications) => {\r\n    // setSkillError(false);\r\n    setCertificationsTag(newCertifications);\r\n  };\r\n\r\n  const handleCertificateChangeInput = (value) => {\r\n    if (value.endsWith(\",\")) {\r\n      const newTag = value.slice(0, -1).trim();\r\n      if (newTag && !certificationsTag.includes(newTag)) {\r\n        setCertificationsTag([...certificationsTag, newTag]);\r\n      }\r\n      setCertificateInputValue(\"\");\r\n    } else {\r\n      setCertificateInputValue(value);\r\n    }\r\n  };\r\n\r\n  const handleAddCertificateTag = () => {\r\n    if (\r\n      certificateInputValue.trim() &&\r\n      !certificationsTag.includes(certificateInputValue.trim())\r\n    ) {\r\n      setCertificationsTag([\r\n        ...certificationsTag,\r\n        certificateInputValue.trim(),\r\n      ]);\r\n      setCertificateInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDashboardClick = () => {\r\n    history.push(`${adminRoot}/dashboard`);\r\n  };\r\n\r\n  // const [selectedFile1, setSelectedFile1] = useState(null);\r\n\r\n  // // Handle file change\r\n  // const handleFileChange1 = (event) => {\r\n  //   const file = event.target.files[0];\r\n  //   setSelectedFile1(file);\r\n  // };\r\n\r\n  return (\r\n    <Card className=\"mx-auto my-4 \" style={{ maxWidth: \"900px\" }}>\r\n      <CardBody className=\"wizard wizard-default\">\r\n        <h1 className=\"mt-4 font-weight-bold\">Apply as a Student</h1>\r\n        <ul className=\"nav nav-tabs justify-content-center\">\r\n          {steps.map((stepItem, index) => (\r\n            // <li key={`topNavStep_${index}`} className={`nav-item ${index === currentStep ? 'step-doing' : ''}`}>\r\n            <li\r\n              // eslint-disable-next-line\r\n              key={`topNavStep_${index}`}\r\n              className={`nav-item ${\r\n                // eslint-disable-next-line\r\n                index === currentStep\r\n                  ? \"step-doing\"\r\n                  : index < currentStep\r\n                  ? \"step-done\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <NavLink to=\"#\" location={{}} className=\"nav-link\">\r\n                <span>{stepItem}</span>\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"wizard-basic-step\">\r\n          {currentStep === 0 && (\r\n            <Formik\r\n              initialValues={{\r\n                personalWebsite: \"\",\r\n                languages: \"\",\r\n                linkedinUrl: \"\",\r\n                twitterHandle: \"\",\r\n                studentType: \"\",\r\n                location: \"\",\r\n                identityStatus: \"\",\r\n              }}\r\n              // onSubmit={postDataUserProfile}\r\n              onSubmit={(values) => {\r\n                console.log(\"test\");\r\n                postDataUserProfile({ ...values });\r\n                // if (validateFile(file1)) {\r\n\r\n                // }\r\n              }}\r\n            >\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-right\">\r\n                  <Alert color=\"primary\">\r\n                    <strong>Tips</strong>\r\n                    <br />\r\n                    <ul>\r\n                      <li>\r\n                        Adding your photo and social media profiles helps\r\n                        mentors feel confident that you’re a real person (e.g.\r\n                        not a bot).\r\n                      </li>\r\n                      <li>\r\n                        Your profile is only visible to mentors that you send\r\n                        applications to. It is not indexed on search engines\r\n                        like Google.\r\n                      </li>\r\n                    </ul>\r\n                  </Alert>\r\n                  <FormGroup>\r\n                    <Label for=\"image\">Image</Label>\r\n                    {imageError && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {imageErrorMessage}\r\n                      </div>\r\n                    )}\r\n                    <Row>\r\n                      <Col md={2} className=\"\">\r\n                        <img\r\n                          src={selectedFile || \"/assets/img/profiles/l-1.jpg\"}\r\n                          className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                          style={{\r\n                            width: \"70px\",\r\n                            height: \"70px\",\r\n                            objectFit: \"cover\",\r\n                          }}\r\n                          alt=\"\"\r\n                        />\r\n                      </Col>\r\n                      <Col md={5} className=\"mt-3 \">\r\n                        <InputGroup className=\"mb-3\">\r\n                          <div className=\"mt-1.5\">\r\n                            <Button\r\n                              className=\"default\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                document.getElementById(\"file-upload\").click()\r\n                              }\r\n                            >\r\n                              Upload profile pic{\" \"}\r\n                              <i className=\"iconsminds-upload \" />\r\n                            </Button>\r\n                            <Input\r\n                              id=\"file-upload\"\r\n                              type=\"file\"\r\n                              className=\"form-control d-none\"\r\n                              onChange={handleFileChange}\r\n                              // validate={validateFile}\r\n                            />\r\n                            {file1 && (\r\n                              <p className=\"mt-2\">\r\n                                Selected file: {file1.name}\r\n                              </p>\r\n                            )}\r\n                          </div>\r\n                        </InputGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup className=\"error-l-75\">\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Label for=\"languages\">Languages known*</Label>\r\n                        <Select\r\n                          placeholder=\"Select Languages\"\r\n                          name=\"languages\"\r\n                          isMulti\r\n                          options={languageOptions}\r\n                          // validate={validateLanguages}\r\n                          className=\"react-select\"\r\n                          classNamePrefix=\"react-select\"\r\n                          onChange={(selectedOptions) => {\r\n                            const languagesArray = selectedOptions\r\n                              ? selectedOptions.map((option) => option.value)\r\n                              : [];\r\n                            setLanguages(languagesArray);\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Label for=\"linkedinUrl\">\r\n                          Portfolio/personal website (optional)\r\n                        </Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          name=\"personalWebsite\"\r\n                          type=\"url\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        {/* {errors.personalWebsite && touched.personalWebsite && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.personalWebsite}\r\n                          </div>\r\n                        )} */}\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup className=\"error-l-125\">\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Label for=\"linkedinUrl\">LinkedIn URL*</Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          name=\"linkedinUrl\"\r\n                          type=\"url\"\r\n                          validate={validateLinkedinUrl}\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        <FormText color=\"muted\" className=\"\">\r\n                          e.g. https://www.linkedin.com/in/username/\r\n                        </FormText>\r\n                        {errors.linkedinUrl && touched.linkedinUrl && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.linkedinUrl}\r\n                          </div>\r\n                        )}\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Label for=\"twitterHandle\">\r\n                          Twitter Handle (optional)\r\n                        </Label>\r\n                        <Field\r\n                          type=\"text\"\r\n                          name=\"twitterHandle\"\r\n                          id=\"twitterHandle\"\r\n                          className=\"form-control\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        <FormText color=\"muted\">\r\n                          Omit the &ldquo;@&rdquo; -e.g. &ldquo;dqmonn&rdquo;\r\n                        </FormText>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup className=\"error-l-125\">\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Label for=\"studentType\">Student Type*</Label>\r\n                        <Field\r\n                          as=\"select\"\r\n                          name=\"studentType\"\r\n                          validate={validateStudent}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option disabled value=\"\">\r\n                            Select Student Type\r\n                          </option>\r\n                          {studentTypeOptions.map((option) => (\r\n                            <option key={option.value} value={option.value}>\r\n                              {option.label}\r\n                            </option>\r\n                          ))}\r\n                        </Field>\r\n                        {errors.studentType && touched.studentType && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.studentType}\r\n                          </div>\r\n                        )}\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Label>Location*</Label>\r\n                        <Field\r\n                          as=\"select\"\r\n                          name=\"location\"\r\n                          validate={validateLocation}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option disabled value=\"\">\r\n                            Select Country\r\n                          </option>\r\n                          {country.map((option) => (\r\n                            <option\r\n                              key={option.iso_code}\r\n                              value={option.iso_code}\r\n                            >\r\n                              {option.name}\r\n                            </option>\r\n                          ))}\r\n                        </Field>\r\n                        {errors.location && touched.location && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.location}\r\n                          </div>\r\n                        )}\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Label>Identity Status*</Label>\r\n                        <Field\r\n                          as=\"select\"\r\n                          name=\"identityStatus\"\r\n                          validate={validateIdentityStatus}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option disabled value=\"\">\r\n                            Select Identity Satus\r\n                          </option>\r\n                          {indentityStatusList.map((option) => (\r\n                            <option key={option.name} value={option.name}>\r\n                              {option.label}\r\n                            </option>\r\n                          ))}\r\n                        </Field>\r\n                        {errors.identityStatus && touched.identityStatus && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.identityStatus}\r\n                          </div>\r\n                        )}\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n\r\n                  <div className=\"d-flex justify-content-end\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className={`col-12 col-md-2 btn-shadow btn-multiple-state ${\r\n                        aboutLoading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <span className=\"spinner d-inline-block\">\r\n                        <span className=\"bounce1\" />\r\n                        <span className=\"bounce2\" />\r\n                        <span className=\"bounce3\" />\r\n                      </span>\r\n                      <span className=\"label\">Next</span>\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          )}\r\n          {currentStep === 1 && (\r\n            <Formik\r\n              innerRef={forms[2]}\r\n              initialValues={{\r\n                education: [\r\n                  {\r\n                    college: \"\",\r\n                    department: \"\",\r\n                    degree: \"\",\r\n                    startYear: \"\",\r\n                    endYear: \"\",\r\n                  },\r\n                ],\r\n                work: [\r\n                  {\r\n                    company: \"\",\r\n                    jobTitle: \"\",\r\n                    employmentType: \"\",\r\n                    jobLocation: \"\",\r\n                    startDate: \"\",\r\n                    endDate: \"\",\r\n                  },\r\n                ],\r\n              }}\r\n              onSubmit={() => {\r\n                const experience = { education, work };\r\n                // const datas = {experience}\r\n                postExperience(experience);\r\n                // console.log(\"my education\", education);\r\n                // console.log(\"values\", values);\r\n              }}\r\n              validateOnMount\r\n            >\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-right my-4\">\r\n                  {/* <Alert color=\"primary\">\r\n                  <strong>Almost there!</strong> <br /> You&apos;re just one\r\n                  last step away from being a user and connecting with\r\n                  mentors,lawyers,alumni all over the world! In this step, show off your\r\n                  accomplishments and how you can help others.\r\n                  <br />\r\n                  <br /> Many of these fields are optional, but will help us\r\n                  get better insights into your work - and therefore\r\n                  exponentially increase your chances. They also give you a\r\n                  jumpstart once you&apos;re a user.\r\n                </Alert> */}\r\n\r\n                  {education.map((service, index) => (\r\n                    // eslint-disable-next-line react/no-array-index-key\r\n                    <div key={index}>\r\n                      <div className=\"text-right\">\r\n                        {/* <Button outline className=\"icon-button\" onClick={() => removeService(index)}>\r\n                      <i className=\"simple-icon-close\" />\r\n                    </Button> */}\r\n                        {education.length > 1 && (\r\n                          <span>\r\n                            <Button\r\n                              id=\"closeButton\"\r\n                              color=\"primary\"\r\n                              outline\r\n                              className=\"icon-button\"\r\n                              onClick={() => removeEducation(index)}\r\n                            >\r\n                              {/* <i className=\"iconsminds-close\" /> */}\r\n                              <span className=\"text-primary\">\r\n                                <strong>x</strong>\r\n                              </span>\r\n                            </Button>\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Row>\r\n                        <Col md={6}>\r\n                          <FormGroup className=\"error-l-75\">\r\n                            <Label>College Name*</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              required\r\n                              name={`education[${index}].college`}\r\n                              value={service.college}\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"college\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              // validate={validateServiceName}\r\n                            />\r\n                            {errors.education?.[index]?.college &&\r\n                              touched.education?.[index]?.college && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].college}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].degree`}>\r\n                              Degree*\r\n                            </Label>\r\n                            <Input\r\n                              name={`education[${index}].degree`}\r\n                              id={`education[${index}].degree`}\r\n                              className=\"form-control\"\r\n                              value={service.degree}\r\n                              required\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"degree\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              // validate={validatePackageTopic}\r\n                            />\r\n                            {errors.education?.[index]?.degree &&\r\n                              touched.education?.[index]?.degree && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].degree}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].startDate`}>\r\n                              Start year\r\n                            </Label>\r\n\r\n                            <Input\r\n                              type=\"select\"\r\n                              name={`education[${index}].startYear`}\r\n                              id={`education[${index}].startYear`}\r\n                              className=\"form-control\"\r\n                              value={service.startYear}\r\n                              required\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"startYear\",\r\n                                  parseInt(e.target.value, 10)\r\n                                )\r\n                              }\r\n                            >\r\n                              <option disabled value=\"\">\r\n                                Select year\r\n                              </option>\r\n                              {years.map((yr) => (\r\n                                <option key={yr} value={yr}>\r\n                                  {yr}\r\n                                </option>\r\n                              ))}\r\n                            </Input>\r\n\r\n                            {errors.education?.[index]?.startDate &&\r\n                              touched.education?.[index]?.startDate && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].startYear}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].department`}>\r\n                              Department*\r\n                            </Label>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name={`education[${index}].department`}\r\n                              id={`education[${index}].department`}\r\n                              className=\"form-control\"\r\n                              value={service.department}\r\n                              required\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"department\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              // validate={validatePackageDescription}\r\n                            />\r\n                            {errors.education?.[index]?.department &&\r\n                              touched.education?.[index]?.department && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].department}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].endDate`}>\r\n                              End year\r\n                            </Label>\r\n                            <Input\r\n                              type=\"select\"\r\n                              name={`education[${index}].endDate`}\r\n                              id={`education[${index}].endDate`}\r\n                              className=\"form-control\"\r\n                              value={service.endYear}\r\n                              required\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"endYear\",\r\n                                  parseInt(e.target.value, 10)\r\n                                )\r\n                              }\r\n                              // validate={validatePackageDescription}\r\n                            >\r\n                              <option disabled value=\"\">\r\n                                Select year\r\n                              </option>\r\n                              {years.map((yr) => (\r\n                                <option key={yr} value={yr}>\r\n                                  {currentYear === yr ? \"Present\" : yr}\r\n                                </option>\r\n                              ))}\r\n                            </Input>\r\n                            {errors.education?.[index]?.endDate &&\r\n                              touched.education?.[index]?.endDate && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].endDate}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        {/* <Col md={6}>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].department`}>\r\n                              Year of passing*\r\n                            </Label>\r\n                            <Input\r\n                              type=\"select\"\r\n                              name={`education[${index}].year`}\r\n                              id={`education[${index}].year`}\r\n                              className=\"form-control\"\r\n                              value={service.year}\r\n                              required\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"year\",\r\n                                  parseInt(e.target.value, 10)\r\n                                )\r\n                              }\r\n                            >\r\n                              <option disabled value=\"\">\r\n                                Select year\r\n                              </option>\r\n                              {years.map((yr) => (\r\n                                <option key={yr} value={yr}>\r\n                                  {yr}\r\n                                </option>\r\n                              ))}\r\n                            </Input>\r\n                            {errors.education?.[index]?.department &&\r\n                              touched.education?.[index]?.department && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].department}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col> */}\r\n                      </Row>\r\n\r\n                      <hr />\r\n                    </div>\r\n                  ))}\r\n\r\n                  <Card\r\n                    onClick={addEducation}\r\n                    className=\"p-3 text-center my-5\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <h3 className=\"font-weight-bold text-primary\">\r\n                      + Add more education\r\n                    </h3>\r\n                  </Card>\r\n                  {work.map((works, index) => (\r\n                    // eslint-disable-next-line react/no-array-index-key\r\n                    <div key={index}>\r\n                      <div className=\"text-right\">\r\n                        {/* <Button outline className=\"icon-button\" onClick={() => removework(index)}>\r\n                      <i className=\"simple-icon-close\" />\r\n                    </Button> */}\r\n                        {work.length > 1 && (\r\n                          <span>\r\n                            <Button\r\n                              id=\"closeButton\"\r\n                              color=\"primary\"\r\n                              outline\r\n                              className=\"icon-button\"\r\n                              onClick={() => removeWorkExperience(index)}\r\n                            >\r\n                              {/* <i className=\"iconsminds-close\" /> */}\r\n                              <span className=\"text-primary\">\r\n                                <strong>x</strong>\r\n                              </span>\r\n                            </Button>\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Row>\r\n                        <Col md={6}>\r\n                          <FormGroup className=\"error-l-75\">\r\n                            <Label>Company Name*</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              required\r\n                              name={`education[${index}].company`}\r\n                              value={works.company}\r\n                              onChange={(e) =>\r\n                                handleWorkInputChange(\r\n                                  index,\r\n                                  \"company\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              // validate={validateworkName}\r\n                            />\r\n                            {errors.education?.[index]?.company &&\r\n                              touched.education?.[index]?.company && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].company}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].jobTitle`}>\r\n                              Job title*\r\n                            </Label>\r\n                            <Input\r\n                              name={`education[${index}].jobTitle`}\r\n                              id={`education[${index}].jobTitle`}\r\n                              required\r\n                              className=\"form-control\"\r\n                              value={works.jobTitle}\r\n                              onChange={(e) =>\r\n                                handleWorkInputChange(\r\n                                  index,\r\n                                  \"jobTitle\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              // validate={validatePackageTopic}\r\n                            />\r\n                            {errors.education?.[index]?.jobTitle &&\r\n                              touched.education?.[index]?.jobTitle && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].jobTitle}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col md={6}>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].employmentType`}>\r\n                              Employment type*\r\n                            </Label>\r\n                            <Input\r\n                              type=\"select\"\r\n                              name={`education[${index}].employmentType`}\r\n                              id={`education[${index}].employmentType`}\r\n                              className=\"form-control\"\r\n                              value={works.employmentType}\r\n                              required\r\n                              onChange={(e) =>\r\n                                handleWorkInputChange(\r\n                                  index,\r\n                                  \"employmentType\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                            >\r\n                              <option key=\"\" value=\"\" disabled>\r\n                                Select Employment type\r\n                              </option>\r\n                              {EmploymentTypeData.map((option, i) => (\r\n                                // eslint-disable-next-line react/no-array-index-key\r\n                                <option key={i} value={option.label}>\r\n                                  {option.label}\r\n                                </option>\r\n                              ))}\r\n                            </Input>\r\n\r\n                            {errors.education?.[index]?.employmentType &&\r\n                              touched.education?.[index]?.employmentType && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].employmentType}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md={6}>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].jobLocation`}>\r\n                              Job location*\r\n                            </Label>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name={`education[${index}].jobLocation`}\r\n                              id={`education[${index}].jobLocation`}\r\n                              className=\"form-control\"\r\n                              required\r\n                              value={works.jobLocation}\r\n                              onChange={(e) =>\r\n                                handleWorkInputChange(\r\n                                  index,\r\n                                  \"jobLocation\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              // validate={validatePackageDescription}\r\n                            />\r\n                            {errors.education?.[index]?.jobLocation &&\r\n                              touched.education?.[index]?.jobLocation && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].jobLocation}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].startDate`}>\r\n                              Start year\r\n                            </Label>\r\n                            {/* <Input\r\n                            type=\"number\"\r\n                            name={`education[${index}].startDate`}\r\n                            id={`education[${index}].startDate`}\r\n                            className=\"form-control\"\r\n                            value={works.startDate}\r\n                            onChange={(e) =>\r\n                              handleWorkInputChange(\r\n                                index,\r\n                                \"startDate\",\r\n                                e.target.value\r\n                              )\r\n                            }\r\n                              // validate={validatePackageDescription}\r\n                          /> */}\r\n                            <Input\r\n                              type=\"select\"\r\n                              name={`education[${index}].startDate`}\r\n                              id={`education[${index}].startDate`}\r\n                              className=\"form-control\"\r\n                              value={works.startDate}\r\n                              required\r\n                              onChange={(e) =>\r\n                                handleWorkInputChange(\r\n                                  index,\r\n                                  \"startDate\",\r\n                                  parseInt(e.target.value, 10)\r\n                                )\r\n                              }\r\n                            >\r\n                              <option disabled value=\"\">\r\n                                Select year\r\n                              </option>\r\n                              {years.map((yr) => (\r\n                                <option key={yr} value={yr}>\r\n                                  {yr}\r\n                                </option>\r\n                              ))}\r\n                            </Input>\r\n\r\n                            {errors.education?.[index]?.startDate &&\r\n                              touched.education?.[index]?.startDate && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].startDate}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].endDate`}>\r\n                              End year\r\n                            </Label>\r\n                            <Input\r\n                              type=\"select\"\r\n                              name={`education[${index}].endDate`}\r\n                              id={`education[${index}].endDate`}\r\n                              className=\"form-control\"\r\n                              value={works.endDate}\r\n                              required\r\n                              onChange={(e) =>\r\n                                handleWorkInputChange(\r\n                                  index,\r\n                                  \"endDate\",\r\n                                  parseInt(e.target.value, 10)\r\n                                )\r\n                              }\r\n                              // validate={validatePackageDescription}\r\n                            >\r\n                              <option disabled value=\"\">\r\n                                Select year\r\n                              </option>\r\n                              {years.map((yr) => (\r\n                                <option key={yr} value={yr}>\r\n                                  {currentYear === yr ? \"Present\" : yr}\r\n                                </option>\r\n                              ))}\r\n                            </Input>\r\n                            {errors.education?.[index]?.endDate &&\r\n                              touched.education?.[index]?.endDate && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].endDate}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      <hr />\r\n                    </div>\r\n                  ))}\r\n\r\n                  <Card\r\n                    onClick={addWorkExperience}\r\n                    className=\"p-3 text-center my-5\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <h3 className=\"font-weight-bold text-primary\">\r\n                      + Add more work experience\r\n                    </h3>\r\n                  </Card>\r\n                  <Row>\r\n                    {\" \"}\r\n                    <Col>\r\n                      {\" \"}\r\n                      <Button color=\"primary\" onClick={handlePrevStep}>\r\n                        Previous\r\n                      </Button>\r\n                    </Col>\r\n                    <Col className=\"text-right\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          profileLoading ? \"show-spinner\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">Next</span>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          )}\r\n          {currentStep === 2 && (\r\n            <Formik\r\n              innerRef={forms[2]}\r\n              initialValues={{\r\n                // skills: [],\r\n                bio: \"\",\r\n                seekingFor: \"\",\r\n                // certifications: [],\r\n                goal: \"\",\r\n              }}\r\n              onSubmit={(values) => {\r\n                const data = {\r\n                  ...values,\r\n                  skills: skillsTag,\r\n                  certifications: certificationsTag,\r\n                };\r\n                postAboutData(data);\r\n              }}\r\n              validateOnMount\r\n            >\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-right\">\r\n                  <Alert color=\"primary\">\r\n                    <strong>Almost there!</strong> <br /> You&apos;re just one\r\n                    last step away from being a user and connecting with\r\n                    mentors,lawyers,alumni all over the world! in this step,\r\n                    shows off your accomplishments and how you can help others.\r\n                    <br />\r\n                    <br /> Many of these fields are optional, but will help us\r\n                    get better insights into your work - and therefore\r\n                    exponentially increase your chances. They also give you a\r\n                    jumpstart once you&apos;re a user.\r\n                  </Alert>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md={12}>\r\n                        <FormGroup>\r\n                          <Label for=\"skills\">Skills*</Label>\r\n\r\n                          <TagsInput\r\n                            required\r\n                            value={skillsTag}\r\n                            onChange={handleTagsChange}\r\n                            inputProps={{ placeholder: \"Add skills \" }}\r\n                            addOnBlur\r\n                            addKeys={[13, 188]}\r\n                          />\r\n\r\n                          <FormText>\r\n                            Add skill and press Enter or Comma{\" \"}\r\n                          </FormText>\r\n                          <FormText color=\"muted\">\r\n                            Describe your expertise to connect with mentors who\r\n                            have similar interests.\r\n                            <br />\r\n                            {/* Comma-separated list of your skills  */}\r\n                            (keep it below 10). Mentors will use this to find\r\n                            you.\r\n                          </FormText>\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Label for=\"introVideo\">Bio*</Label>\r\n                        <Field\r\n                          required\r\n                          type=\"textarea\"\r\n                          name=\"bio\"\r\n                          id=\"bio\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Label for=\"featuredArticle\">Seeking for*</Label>\r\n                        <Field\r\n                          required\r\n                          type=\"text\"\r\n                          name=\"seekingFor\"\r\n                          id=\"seekingFor\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"skills\">Certifications*</Label>\r\n\r\n                    {/* <TagsInput\r\n                      value={certificationsTag}\r\n                      onChange={handleCertificationsChange}\r\n                      inputProps={{ placeholder: \"Add Certification \" }}\r\n                      // validate={validateSkills}\r\n                    /> */}\r\n                    <TagsInput\r\n                      value={certificationsTag}\r\n                      onChange={handleCertificationsChange}\r\n                      renderInput={({ addTag, ...inputProps }) => {\r\n                        const { onChange, value, ...other } = inputProps;\r\n                        return (\r\n                          <input\r\n                            {...other}\r\n                            value={certificateInputValue}\r\n                            onChange={(e) =>\r\n                              handleCertificateChangeInput(e.target.value)\r\n                            }\r\n                            onKeyDown={(e) => {\r\n                              if (e.key === \"Enter\") {\r\n                                handleAddCertificateTag();\r\n                                e.preventDefault();\r\n                              }\r\n                            }}\r\n                            placeholder=\"Add Certification\"\r\n                          />\r\n                        );\r\n                      }}\r\n                    />\r\n                    <FormText>\r\n                      Add Certification and press Enter or Comma{\" \"}\r\n                    </FormText>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      {/* <Col md={6}>\r\n                        <Label>Certifications*</Label>\r\n\r\n                        <InputGroup className=\"\">\r\n                          <div className=\"\">\r\n                            <Button\r\n                              className=\"default\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                document.getElementById(\"file-upload\").click()\r\n                              }\r\n                            >\r\n                              Upload certifications{\" \"}\r\n                              <i className=\"iconsminds-upload ml-2\" />\r\n                            </Button>\r\n                            \r\n                            <Input\r\n                              id=\"file-upload\"\r\n                              type=\"file\"\r\n                              className=\"d-none\"\r\n                              onChange={handleFileChange1}\r\n                              \r\n                            />\r\n                          </div>\r\n                        </InputGroup>\r\n                        <div\r\n                          className=\"  my-2\"\r\n                       \r\n                        >\r\n                          {selectedFile1 ? selectedFile1.name : \"\"}\r\n                        </div>\r\n                      </Col> */}\r\n                      <Col md={6}>\r\n                        <Label>CV</Label>\r\n                        {imageError1 && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {imageErrorMessage1}\r\n                          </div>\r\n                        )}\r\n\r\n                        <InputGroup className=\"\">\r\n                          <div className=\"\">\r\n                            <Button\r\n                              className=\"default\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                document\r\n                                  .getElementById(\"file-upload-resume\")\r\n                                  .click()\r\n                              }\r\n                            >\r\n                              Upload Resume{\" \"}\r\n                              <i className=\"iconsminds-upload ml-2\" />\r\n                            </Button>\r\n                            {/* <Form> */}\r\n                            <Input\r\n                              id=\"file-upload-resume\"\r\n                              type=\"file\"\r\n                              className=\"d-none\"\r\n                              onChange={handleFileChange2}\r\n                              // validate={validateFile}\r\n                            />\r\n                          </div>\r\n                        </InputGroup>\r\n                        <div\r\n                          className=\"  my-2 \"\r\n                          // style={{\r\n                          //   border: \"1px solid #ccc\",\r\n                          //   minWidth: \"200px\",\r\n                          // }}\r\n                        >\r\n                          {/* {selectedFile2 ? selectedFile2.name : \"\"} */}\r\n                          {selectedFile2\r\n                            ? `selected file is ${selectedFile2.name}`\r\n                            : \"\"}\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label>Goal*</Label>\r\n                    <Field\r\n                      as=\"textarea\"\r\n                      name=\"goal\"\r\n                      id=\"goal\"\r\n                      className=\"form-control\"\r\n                      validate={validateAchievement}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {errors.goal && touched.goal && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.goal}\r\n                      </div>\r\n                    )}\r\n                  </FormGroup>\r\n                  <Row>\r\n                    {\" \"}\r\n                    <Col>\r\n                      {\" \"}\r\n                      <Button color=\"primary\" onClick={handlePrevStep}>\r\n                        Previous\r\n                      </Button>\r\n                    </Col>\r\n                    <Col className=\"text-right\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          experienceLoading ? \"show-spinner\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">Submit</span>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          )}\r\n          {loading ? (\r\n            <div className=\"wizard-basic-step text-center pt-3\">\r\n              <Spinner color=\"primary\" className=\"mb-1\" />\r\n              <p>Submitting</p>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {currentStep === 3 && (\r\n                <Row>\r\n                  <Colxx xxs=\"12\" className=\"mb-4\">\r\n                    <Card>\r\n                      <CardBody className=\"text-center\">\r\n                        <i\r\n                          alt=\"\"\r\n                          className=\"glyph-icon iconsminds-yes text-success\"\r\n                          style={{ fontSize: \"75px\" }}\r\n                        />\r\n                        <Jumbotron className=\"text-center\">\r\n                          <h1 className=\"display-4\">Submitted Successfully!</h1>\r\n                          <p className=\"lead\">We will reach you shortly</p>\r\n                          <hr className=\"my-4\" />\r\n                          <p className=\"lead mb-0\">\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"lg\"\r\n                              onClick={handleDashboardClick}\r\n                            >\r\n                              Dashboard\r\n                            </Button>\r\n                          </p>\r\n                        </Jumbotron>\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Colxx>\r\n                </Row>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default injectIntl(ApplyAsMentor);\r\n","import React from \"react\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Form,\r\n  FormGroup,\r\n  // FormText,\r\n  Input,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nconst Settings = () => {\r\n  return (\r\n    <Row className=\"mb-4 justify-content-center\">\r\n      <Colxx xxs=\"12\" md=\"8\" lg=\"8\">\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle>Reset email</CardTitle>\r\n            <Form>\r\n              <FormGroup>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your email\"\r\n                />\r\n                {/* <FormText color=\"muted\">email</FormText> */}\r\n              </FormGroup>\r\n\r\n              <Button color=\"primary\" className=\"mt-4\">\r\n                Reset email\r\n              </Button>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n      <Colxx xxs=\"12\" md=\"8\" lg=\"8\" className=\"mt-3\">\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle>Reset password</CardTitle>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"oldPassword\">Enter old password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"oldPassword\"\r\n                  id=\"oldPassword\"\r\n                  placeholder=\"Enter old password\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"newPassword\">Enter new password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"newPassword\"\r\n                  id=\"newPassword\"\r\n                  placeholder=\"Enter new password\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"confirmPassword\">Confirm new password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"confirmPassword\"\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Confirm new password\"\r\n                />\r\n              </FormGroup>\r\n\r\n              <Button color=\"primary\" className=\"mt-4\">\r\n                Reset Password\r\n              </Button>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport Rating from \"components/common/Rating\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\nimport { Badge, Button, Card, CardBody, CardText, Row } from \"reactstrap\";\r\nimport MentorFilter from \"../mentorship/MentorFilter\";\r\nimport \"../mentorship/mentorcard.css\";\r\n\r\nconst AlumniLists = () => {\r\n  const [selectedSkills, setSelectedSkills] = useState([]);\r\n  const [selectedIndustry, setSelectedIndustry] = useState(\"\");\r\n  const [selectedUniversity, setSelectedUniversity] = useState(\"\");\r\n  const [selectedPrice, setSelectedPrice] = useState([]);\r\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\r\n  const [selectedDomain, setSelectedDomain] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [paginationMeta, setPaginationMeta] = useState([]);\r\n  const handleSkillsChange = (skills) => setSelectedSkills(skills);\r\n  const handleIndustryChange = (industry) => setSelectedIndustry(industry);\r\n  const handleUniversityChange = (university) =>\r\n    setSelectedUniversity(university);\r\n  const handlePriceChange = (price) => setSelectedPrice(price);\r\n  const handleLocationChange = (location) => setSelectedLocation(location);\r\n  const handleDomainChange = (domain) => setSelectedDomain(domain);\r\n\r\n  const [isMentorCardFetched, setIsMentorCardFetched] = useState(false);\r\n  const [mentordetails, setMentorDetails] = useState([]);\r\n  const [inputkey, setInputKey] = useState(\"\");\r\n\r\n  const url2 = `${baseUrl}/api/alumni/cards`;\r\n  // const history = useHistory();\r\n\r\n  const truncateBio = (bio, lineCount) => {\r\n    if (!bio) return \"\";\r\n    const words = bio.split(\" \");\r\n\r\n    const truncatedBio = words.slice(0, lineCount).join(\" \");\r\n\r\n    if (words.length > lineCount) {\r\n      return `${truncatedBio}...`;\r\n    }\r\n    return truncatedBio;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsMentorCardFetched(false);\r\n    const mentorCardDetails = async () => {\r\n      const params = {};\r\n\r\n      if (selectedIndustry) {\r\n        params.company = selectedIndustry;\r\n      }\r\n      if (selectedUniversity) {\r\n        params.college = selectedUniversity;\r\n      }\r\n      if (selectedSkills) {\r\n        params.skills = selectedSkills;\r\n      }\r\n      if (selectedPrice) {\r\n        params.minPrice = selectedPrice.at(0);\r\n        params.maxPrice = selectedPrice.at(1);\r\n      }\r\n      if (selectedLocation) {\r\n        params.location = selectedLocation;\r\n      }\r\n      if (selectedDomain) {\r\n        params.domain = selectedDomain;\r\n      }\r\n      if (inputkey) {\r\n        params.firstName = inputkey;\r\n      }\r\n      params.size = 10;\r\n      params.page = currentPage - 1;\r\n      try {\r\n        const response = await axios.get(url2, { params });\r\n        setMentorDetails(response.data.data);\r\n        setPaginationMeta(response.data.paginationMeta);\r\n        setIsMentorCardFetched(true);\r\n        console.log(response.data.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setIsMentorCardFetched(true);\r\n      }\r\n    };\r\n    mentorCardDetails();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    selectedIndustry,\r\n    selectedUniversity,\r\n    selectedSkills,\r\n    selectedPrice,\r\n    selectedLocation,\r\n    selectedDomain,\r\n    currentPage,\r\n    inputkey,\r\n  ]);\r\n\r\n  return (\r\n    <div>\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n        <div>\r\n          <div className=\"\">\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group\">\r\n                <div\r\n                  style={{ position: \"relative\" }}\r\n                  className=\"col-12 col-lg-8 col-md-8\"\r\n                >\r\n                  <i\r\n                    className=\"simple-icon-magnifier mr-3\"\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: \"50%\",\r\n                      right: \"15px\",\r\n                      transform: \"translateY(-50%)\",\r\n                      zIndex: 2,\r\n                      color: \"#aaa\",\r\n                    }}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control rounded py-2\"\r\n                    placeholder=\"Search by name\"\r\n                    value={inputkey}\r\n                    onChange={(e) => setInputKey(e.target.value)}\r\n                    style={{ paddingRight: \"2.5rem\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <MentorFilter\r\n                onSkillsChange={handleSkillsChange}\r\n                onIndustryChange={handleIndustryChange}\r\n                onUniversityChange={handleUniversityChange}\r\n                onPriceChange={handlePriceChange}\r\n                selectedSkills={selectedSkills}\r\n                selectedIndustry={selectedIndustry}\r\n                selectedUniversity={selectedUniversity}\r\n                selectedLocation={selectedLocation}\r\n                onLocationChange={handleLocationChange}\r\n                onDomainChange={handleDomainChange}\r\n                userRole=\"alumni\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Colxx>\r\n\r\n      {/* searchbar ends */}\r\n      {!isMentorCardFetched ? (\r\n        <div className=\"loading\" />\r\n      ) : (\r\n        <div>\r\n          {mentordetails.length === 0 ? (\r\n            <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n              <Card>\r\n                <CardBody>\r\n                  <h2 className=\"text-center text-large \">No Alumni</h2>\r\n                </CardBody>\r\n              </Card>\r\n            </Colxx>\r\n          ) : (\r\n            Array.isArray(mentordetails) &&\r\n            mentordetails.map((mentors) => {\r\n              return (\r\n                <Colxx xxs=\"12\" key={mentors.id}>\r\n                  <Row>\r\n                    <Colxx sm=\"12\" md=\"12\" lg=\"9\" xxs=\"12\" className=\"mx-auto\">\r\n                      <Card\r\n                        className=\"flex-row flex-wrap flex-sm-nowrap listing-card-container my-3 p-3\"\r\n                        style={{ gap: \"16px\" }}\r\n                      >\r\n                        <div className=\"d-block mentor-card-img-container\">\r\n                          {mentors.imageUrl == null ? (\r\n                            <div\r\n                              className=\"card-img-left bg-primary \r\n                 d-flex align-items-center justify-content-center\"\r\n                              style={{\r\n                                width: \"150px\",\r\n                                height: \"250px\",\r\n                                borderRadius: \"0.75rem\",\r\n                              }}\r\n                            >\r\n                              <ThumbnailLetters\r\n                                rounded\r\n                                text={mentors.firstName}\r\n                                className=\"text-xlarge border border-1\"\r\n                                style={{ textAlign: \"center\" }}\r\n                              />\r\n                            </div>\r\n                          ) : (\r\n                            <img\r\n                              className=\"mentor-card-width\"\r\n                              src={`${baseUrl}/${mentors.imageUrl}`}\r\n                              alt=\"Card\"\r\n                            />\r\n                          )}\r\n                        </div>\r\n                        <CardBody className=\"d-flex flex-column flex-fill p-0\">\r\n                          <div\r\n                            className=\"d-flex flex-wrap justify-content-between mb-1\"\r\n                            style={{ columnGap: \"24px\" }}\r\n                          >\r\n                            <div\r\n                              className=\"d-flex flex-wrap align-items-center\"\r\n                              style={{ gap: \"10px\" }}\r\n                            >\r\n                              <div className=\"font-weight-semibold text-large text-capitalize\">\r\n                                {mentors.firstName}\r\n                              </div>\r\n                              <div className=\"font-weight-semibold text-large text-capitalize\">\r\n                                {mentors.lastName}\r\n                              </div>\r\n                              <div className=\"mx-2 \">\r\n                                <Badge\r\n                                  pill\r\n                                  style={{\r\n                                    background: \"#fcba0a\",\r\n                                  }}\r\n                                  color=\"#fcba0a\"\r\n                                  className=\"py-1 px-2 text-one text-dark\"\r\n                                >\r\n                                  {mentors.consultations} consultants\r\n                                </Badge>\r\n                              </div>\r\n                            </div>\r\n                            <CardText\r\n                              className=\"text-one d-flex align-items-center flex-wrap\"\r\n                              style={{ gap: \"4px\" }}\r\n                            >\r\n                              <span className=\"font-weight-semibold\">\r\n                                <Rating\r\n                                  total={5}\r\n                                  rating={mentors.star}\r\n                                  interactive={false}\r\n                                />\r\n                              </span>\r\n                              <span className=\"font-weight-semibold\">\r\n                                {mentors.star}\r\n                              </span>\r\n                              <span> ({mentors.ratings} reviews)</span>\r\n                            </CardText>\r\n                          </div>\r\n                          <div className=\"d-flex\" style={{ gap: \"8px\" }}>\r\n                            <CardText className=\"text-one text-muted mb-2\">\r\n                              {mentors.jobTitle}\r\n                            </CardText>\r\n                            <div>|</div>\r\n                            <CardText className=\"text-one text-primary mb-2\">\r\n                              {mentors.company}\r\n                            </CardText>\r\n                          </div>\r\n                          <CardText\r\n                            className=\"text-one mb-2\"\r\n                            style={{ maxHeight: \"62px\", overflow: \"hidden\" }}\r\n                          >\r\n                            {/* {mentors.bio} */}\r\n                            {truncateBio(mentors.bio, 20)}\r\n                          </CardText>\r\n                          <CardText className=\"d-flex flex-wrap\">\r\n                            {mentors.skills &&\r\n                              mentors.skills.slice(0, 3).map((skill) => (\r\n                                <div\r\n                                  key={skill}\r\n                                  className=\"pr-2\"\r\n                                  id=\"btn.rounded\"\r\n                                >\r\n                                  <Badge color=\"light\">{skill}</Badge>\r\n                                </div>\r\n                              ))}\r\n                          </CardText>\r\n\r\n                          <div\r\n                            className=\"d-flex justify-content-between align-items-center mt-auto flex-wrap\"\r\n                            style={{ columnGap: \"24px\" }}\r\n                          >\r\n                            <div className=\"text-primary\">\r\n                              <span className=\"text-xlarge font-weight-semibold\">\r\n                                ₹{Math.floor(mentors.price).toLocaleString()}\r\n                              </span>\r\n                              /Hour\r\n                            </div>\r\n                            {/* <Button\r\n                                color=\"primary\"\r\n                                onClick={() =>\r\n                                  history.push(\r\n                                    `/app/alumni/profile/${mentors.id}`\r\n                                  )\r\n                                }\r\n                                className=\"rounded\"\r\n                              >\r\n                                View Profile\r\n                              </Button> */}\r\n                            <a\r\n                              href={`/app/alumni/profile/${mentors.id}`}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                            >\r\n                              <Button color=\"primary\" className=\"rounded\">\r\n                                View Profile\r\n                              </Button>\r\n                            </a>\r\n                          </div>\r\n                        </CardBody>\r\n                        {/* </div> */}\r\n                      </Card>\r\n                    </Colxx>\r\n                  </Row>\r\n                </Colxx>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      )}\r\n      {isMentorCardFetched && (\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPage={paginationMeta.totalPage}\r\n          onChangePage={(i) => setCurrentPage(i)}\r\n          lastIsActive={paginationMeta.last}\r\n          firstIsActive={paginationMeta.first}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlumniLists;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Row } from \"reactstrap\";\r\nimport ReviewsComponent from \"../Reviews/ReviewsComponent\";\r\nimport MentorTabCard from \"../mentorship/MentorTabCard\";\r\n\r\nconst AlumniProfile = () => {\r\n  const { mid } = useParams();\r\n  const history = useHistory();\r\n\r\n  //  To change url to backend please uncomment the below line\r\n  const url1 = `${baseUrl}/api/alumni/${mid}`;\r\n  // const url1 = `${baseUrl}/alumniProfile/${mid}`;\r\n  const ratingUrl = `${baseUrl}/api/alumni/rating/meta/${mid}`;\r\n\r\n  const [alumniprofiledetails, setAlumniProfileDetails] = useState([]);\r\n  const [reviews, setReviews] = useState(\"\");\r\n\r\n  // const history = useHistory();\r\n\r\n  // const [showAll, setShowAll] = useState(false);\r\n  // const toggleShowAll = () => {\r\n  //   setShowAll(!showAll);\r\n  // };\r\n\r\n  //   const handleConnectClick = () => {\r\n\r\n  //     const mentorId = alumniprofiledetails.id;\r\n  //     const mentorName = `${alumniprofiledetails.firstName} ${alumniprofiledetails.lastName}`;\r\n  //     const url2 = `/app/calendar?mentorId=${mentorId}&mentorName=${mentorName}`;\r\n\r\n  //     history.push(url2);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const mentorReviews = async () => {\r\n      try {\r\n        const response = await axios.get(ratingUrl);\r\n        setReviews(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    mentorReviews();\r\n\r\n    const mentorProfile = async () => {\r\n      try {\r\n        const response = await axios.get(url1);\r\n        setAlumniProfileDetails(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    mentorProfile();\r\n  }, []);\r\n\r\n  const chatUserId = alumniprofiledetails.username;\r\n\r\n  // const handleConnectClick = () => {\r\n  //   // Construct the URL with mentor's ID and name as query parameters\r\n  //   const mentorId = alumniprofiledetails.id;\r\n  //   const mentorName = `${alumniprofiledetails.firstName} ${alumniprofiledetails.lastName}`;\r\n  //   const url2 = `/app/calendar?mentorId=${mentorId}&mentorName=${mentorName}`;\r\n\r\n  //   // Navigate to the Month component with the mentor's ID and name as query parameters\r\n  //   history.push(url2);\r\n  // };\r\n  const handleConnectClick = () => {\r\n    // Destructure the properties from mentorprofiledetails1\r\n    const { id: mentorId, firstName, lastName, role } = alumniprofiledetails;\r\n    console.log(\"Role:\", role);\r\n\r\n    // Construct the mentorName using destructured values\r\n    const mentorName = `${firstName} ${lastName}`;\r\n\r\n    // Construct the URL with mentor's ID and name as query parameters\r\n    const url2 = `/app/calendar?mentorId=${mentorId}&mentorName=${mentorName}&role=${role}`;\r\n\r\n    // Navigate to the Month component with the mentor's ID and name as query parameters\r\n    history.push(url2);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (showAll) {\r\n  //     document.getElementById(\"skillsSection\").scrollIntoView();\r\n  //   }\r\n  // }, [showAll]);\r\n\r\n  // const remainingSkillsCount = alumniprofiledetails.skills\r\n  //   ? alumniprofiledetails.skills.length - 3\r\n  //   : 0;\r\n  // const handleLinkedInClick = () => {\r\n  //   const linkedInUrl = alumniprofiledetails.linkedinUrl;\r\n\r\n  //   window.open(linkedInUrl, \"_blank\");\r\n  // };\r\n\r\n  return (\r\n    <div className=\"mentor-profile\">\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\">\r\n        <Row\r\n          style={{\r\n            border: \"1px soild rgba(0, 0, 0, 0.15)\",\r\n          }}\r\n        >\r\n          <div\r\n            className=\"w-100 py-3 d-flex justify-content-between align-items-center position-relative\"\r\n            style={{\r\n              backgroundImage: \"linear-gradient(to right, #145388 , #922c88)\",\r\n              borderTopLeftRadius: \"0.75rem\",\r\n              borderTopRightRadius: \"0.75rem\",\r\n              height: \"142px\",\r\n            }}\r\n          >\r\n            <div>\r\n              {alumniprofiledetails.imageUrl === null ? (\r\n                <div>\r\n                  <ThumbnailLetters\r\n                    rounded\r\n                    small\r\n                    text={alumniprofiledetails.firstName}\r\n                    className=\"border border-1 mx-2\"\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <img\r\n                  src={`${baseUrl}/${alumniprofiledetails.imageUrl}`}\r\n                  className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                  style={{ width: \"110px\", height: \"110px\" }}\r\n                  alt=\"\"\r\n                />\r\n              )}\r\n              {/* <Button\r\n                color=\"light\"\r\n                className=\" font-weight-semibold mx-2\"\r\n                size=\"large\"\r\n              >\r\n                <span className=\"font-weight-semibold text-one\">\r\n                  <i className=\"iconsminds-thunder text-primary\" />\r\n                  {alumniprofiledetails.achievement}\r\n                </span>\r\n              </Button> */}\r\n            </div>\r\n            {/* \r\n            <div>\r\n              <Button\r\n                color=\"light\"\r\n                className=\" font-weight-semibold mx-2 \"\r\n                size=\"large\"\r\n                onClick={handleLinkedInClick}\r\n              >\r\n                <i className=\"simple-icon-social-linkedin text-primary font-weight-semibold text-one  \" />\r\n              </Button>\r\n            </div> */}\r\n          </div>\r\n          <div\r\n            className=\"col bg-white py-2\"\r\n            style={{\r\n              borderBottomLeftRadius: \"0.75rem\",\r\n              borderBottomRightRadius: \"0.75rem\",\r\n            }}\r\n          >\r\n            <h1 className=\"font-weight-semibold text-xlarge\">\r\n              {alumniprofiledetails.firstName} {alumniprofiledetails.lastName}\r\n            </h1>\r\n\r\n            <h3 className=\"text-large  text-muted  \">\r\n              {alumniprofiledetails.jobTitle}\r\n            </h3>\r\n            <h2 className=\"text-one  text-primary\">\r\n              {alumniprofiledetails.company}\r\n            </h2>\r\n            <p className=\"text-one font-weight-medium text-primary\">\r\n              {alumniprofiledetails.bio}\r\n            </p>\r\n\r\n            <h5 className=\"font-weight-medium\">\r\n              <i className=\"simple-icon-location-pin text-primary\" />\r\n              <span className=\"ml-2\">{alumniprofiledetails.location}</span>\r\n            </h5>\r\n\r\n            <h6 className=\"\">\r\n              <i className=\"simple-icon-star text-primary \" />\r\n              <span className=\"ml-2\">\r\n                {reviews.averageStar} ({reviews.totalRatings} reviews)\r\n              </span>\r\n            </h6>\r\n          </div>\r\n\r\n          {/* <div className=\"col-7 mt-4\">\r\n            <h2 className=\"mx-2\">Skills</h2>\r\n\r\n            <div className=\"d-flex align-items-center\">\r\n              <div className=\"d-flex\">\r\n                {alumniprofiledetails.skills &&\r\n                  alumniprofiledetails.skills.slice(0, 3).map((skill) => (\r\n                    <div key={skill}>\r\n                      <Button\r\n                        color=\"light\"\r\n                        className=\"mb-2 font-weight-semibold mx-2\"\r\n                        size=\"xs\"\r\n                      >\r\n                        {skill}\r\n                      </Button>\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n              {alumniprofiledetails.skills &&\r\n                alumniprofiledetails.skills.length > 3 && (\r\n                  <div className=\"\">\r\n                    <Button\r\n                      color=\"link\"\r\n                      className=\"text-one font-weight-bold \"\r\n                      style={{ textDecoration: \"underline\" }}\r\n                      onClick={toggleShowAll}\r\n                    >\r\n                      + {remainingSkillsCount}more\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n            </div> */}\r\n\r\n          {/* <MentorTabCard  handleConnectClick={handleConnectClick}/> */}\r\n          {/* </div> */}\r\n        </Row>\r\n        {/* <Row>\r\n          <Colxx lg={12}>\r\n            <Row>\r\n              <Col sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\">\r\n                <div>\r\n                  {alumniprofiledetails.price && (\r\n                    <MentorTabCard\r\n                      handleConnectClick={handleConnectClick}\r\n                      chatUserId={chatUserId}\r\n                      price={alumniprofiledetails.price}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Colxx>\r\n        </Row> */}\r\n        <Row>\r\n          <Colxx lg={12}>\r\n            {alumniprofiledetails.price && (\r\n              <MentorTabCard\r\n                handleConnectClick={handleConnectClick}\r\n                chatUserId={chatUserId}\r\n                price={alumniprofiledetails.price}\r\n              />\r\n            )}\r\n          </Colxx>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Colxx className='sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" mt-3'>\r\n            <Row className=\"bg-white mb-3\" style={{ borderRadius: \"0.75rem\" }}>\r\n              <div className=\"p-3\">\r\n                <h1 className=\"font-weight-semibold text-large\">About</h1>\r\n\r\n                <p className=\"text-one font-weight-medium \">\r\n                  {alumniprofiledetails.bio}\r\n                </p>\r\n              </div>\r\n            </Row>\r\n\r\n            <Row className=\"bg-white mb-3\" style={{ borderRadius: \"0.75rem\" }}>\r\n              <Colxx lg={12} id=\"skillsSection\" className=\"p-3\">\r\n                <h1 className=\"font-weight-semibold text-large\">Skills </h1>\r\n                <div className=\"d-flex flex-wrap \">\r\n                  {alumniprofiledetails.skills &&\r\n                    alumniprofiledetails.skills.map((skill) => (\r\n                      <div key={skill}>\r\n                        <Button\r\n                          color=\"light\"\r\n                          className=\"mb-2 font-weight-semibold mr-2\"\r\n                          size=\"md\"\r\n                        >\r\n                          {skill}\r\n                        </Button>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              </Colxx>\r\n            </Row>\r\n            <Row className=\"bg-white mb-3\" style={{ borderRadius: \"0.75rem\" }}>\r\n              <ReviewsComponent category=\"alumni\" revieweeId={mid} />\r\n            </Row>\r\n          </Colxx>\r\n        </Row>\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlumniProfile;\r\n","import React from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"page-footer\">\r\n      <div className=\"footer-content\">\r\n        <div className=\"container-fluid\">\r\n          <Row>\r\n            <Colxx xxs=\"12\" sm=\"6\">\r\n              <p className=\"mb-0 text-muted\">Metiegrow LLC</p>\r\n            </Colxx>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { adminRoot } from \"./defaultValues\";\r\n\r\nconst data = [\r\n  {\r\n    id: \"Dashboard\",\r\n    icon: \"iconsminds-shop-4\",\r\n    label: \"Dashboard\",\r\n    to: `${adminRoot}/dashboard`,\r\n    roles: [\"USER\"],\r\n  },\r\n  {\r\n    id: \"Mentor\",\r\n    icon: \"simple-icon-people\",\r\n    label: \"MentorShip\",\r\n    to: `${adminRoot}/mentor/list`,\r\n    roles: [\"ADMIN\", \"USER\", \"MENTOR\", \"ALUMNI\"],\r\n  },\r\n  {\r\n    id: \"Student\",\r\n    icon: \"iconsminds-students\",\r\n    label: \"Student\",\r\n    to: `${adminRoot}/student/list`,\r\n    roles: [\"ADMIN\", \"USER\", \"MENTOR\", \"ALUMNI\"],\r\n    subs: [],\r\n  },\r\n  {\r\n    id: \"Q & A\",\r\n    icon: \"simple-icon-question\",\r\n    label: \"Q & A\",\r\n    to: `${adminRoot}/questions`,\r\n    roles: [\"ADMIN\", \"USER\", \"MENTOR\", \"ALUMNI\"],\r\n    subs: [],\r\n  },\r\n  {\r\n    id: \"Lawyer\",\r\n    icon: \"iconsminds-scale\",\r\n    label: \"Lawyer\",\r\n    to: `${adminRoot}/lawyer/list`,\r\n    roles: [\"ADMIN\", \"USER\", \"MENTOR\", \"ALUMNI\"],\r\n  },\r\n  {\r\n    id: \"Alumni\",\r\n    icon: \"iconsminds-student-hat\",\r\n    label: \"Alumni\",\r\n    to: `${adminRoot}/alumni/alumnilists`,\r\n    roles: [\"ADMIN\", \"USER\", \"MENTOR\", \"ALUMNI\"],\r\n  },\r\n  {\r\n    id: \"Listing\",\r\n    icon: \"simple-icon-list\",\r\n    label: \"Listing\",\r\n    to: `${adminRoot}/listing/job`,\r\n    roles: [\"ADMIN\", \"USER\", \"MENTOR\", \"ALUMNI\", \"HR\", \"REALESTATE\"],\r\n  },\r\n  {\r\n    id: \"Chat\",\r\n    icon: \"simple-icon-bubbles\",\r\n    label: \"Chat\",\r\n    to: `${adminRoot}/chat`,\r\n    roles: [\"ADMIN\", \"USER\", \"MENTOR\", \"ALUMNI\"],\r\n  },\r\n];\r\n\r\nexport default data;\r\n","/* eslint-disable react/no-array-index-key */\r\nimport classnames from \"classnames\";\r\nimport { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { Collapse, Nav, NavItem } from \"reactstrap\";\r\n\r\nimport IntlMessages from \"helpers/IntlMessages\";\r\n\r\nimport {\r\n  addContainerClassname,\r\n  changeDefaultClassnames,\r\n  changeSelectedMenuHasSubItems,\r\n  setContainerClassnames,\r\n} from \"redux/actions\";\r\n\r\nimport menuItems from \"constants/menu\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedParentMenu: \"\",\r\n      viewingParentMenu: \"\",\r\n      collapsedMenus: [],\r\n    };\r\n  }\r\n\r\n  // eslint-disable-next-line react/sort-comp\r\n  handleWindowResize = (event) => {\r\n    if (event && !event.isTrusted) {\r\n      return;\r\n    }\r\n    const { containerClassnames } = this.props;\r\n    const nextClasses = this.getMenuClassesForResize(containerClassnames);\r\n    // eslint-disable-next-line react/destructuring-assignment\r\n    this.props.setContainerClassnames(\r\n      0,\r\n      nextClasses.join(\" \"),\r\n      // eslint-disable-next-line react/destructuring-assignment\r\n      this.props.selectedMenuHasSubItems\r\n    );\r\n  };\r\n\r\n  handleDocumentClick = (e) => {\r\n    const container = this.getContainer();\r\n    let isMenuClick = false;\r\n    if (\r\n      e.target &&\r\n      e.target.classList &&\r\n      (e.target.classList.contains(\"menu-button\") ||\r\n        e.target.classList.contains(\"menu-button-mobile\"))\r\n    ) {\r\n      isMenuClick = true;\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.classList &&\r\n      (e.target.parentElement.classList.contains(\"menu-button\") ||\r\n        e.target.parentElement.classList.contains(\"menu-button-mobile\"))\r\n    ) {\r\n      isMenuClick = true;\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.parentElement &&\r\n      e.target.parentElement.parentElement.classList &&\r\n      (e.target.parentElement.parentElement.classList.contains(\"menu-button\") ||\r\n        e.target.parentElement.parentElement.classList.contains(\r\n          \"menu-button-mobile\"\r\n        ))\r\n    ) {\r\n      isMenuClick = true;\r\n    }\r\n    if (container.contains(e.target) || container === e.target || isMenuClick) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      viewingParentMenu: \"\",\r\n    });\r\n    this.toggle();\r\n  };\r\n\r\n  getMenuClassesForResize = (classes) => {\r\n    const { menuHiddenBreakpoint, subHiddenBreakpoint } = this.props;\r\n    let nextClasses = classes.split(\" \").filter((x) => x !== \"\");\r\n    const windowWidth = window.innerWidth;\r\n    if (windowWidth < menuHiddenBreakpoint) {\r\n      nextClasses.push(\"menu-mobile\");\r\n    } else if (windowWidth < subHiddenBreakpoint) {\r\n      nextClasses = nextClasses.filter((x) => x !== \"menu-mobile\");\r\n      if (\r\n        nextClasses.includes(\"menu-default\") &&\r\n        !nextClasses.includes(\"menu-sub-hidden\")\r\n      ) {\r\n        nextClasses.push(\"menu-sub-hidden\");\r\n      }\r\n    } else {\r\n      nextClasses = nextClasses.filter((x) => x !== \"menu-mobile\");\r\n      if (\r\n        nextClasses.includes(\"menu-default\") &&\r\n        nextClasses.includes(\"menu-sub-hidden\")\r\n      ) {\r\n        nextClasses = nextClasses.filter((x) => x !== \"menu-sub-hidden\");\r\n      }\r\n    }\r\n    return nextClasses;\r\n  };\r\n\r\n  getContainer = () => {\r\n    // eslint-disable-next-line react/no-find-dom-node\r\n    return ReactDOM.findDOMNode(this);\r\n  };\r\n\r\n  toggle = () => {\r\n    const hasSubItems = this.getIsHasSubItem();\r\n    // eslint-disable-next-line react/destructuring-assignment\r\n    this.props.changeSelectedMenuHasSubItems(hasSubItems);\r\n    const { containerClassnames, menuClickCount } = this.props;\r\n    const currentClasses = containerClassnames\r\n      ? containerClassnames.split(\" \").filter((x) => x !== \"\")\r\n      : \"\";\r\n    let clickIndex = -1;\r\n\r\n    if (!hasSubItems) {\r\n      if (\r\n        currentClasses.includes(\"menu-default\") &&\r\n        (menuClickCount % 4 === 0 || menuClickCount % 4 === 3)\r\n      ) {\r\n        clickIndex = 1;\r\n      } else if (\r\n        currentClasses.includes(\"menu-sub-hidden\") &&\r\n        (menuClickCount === 2 || menuClickCount === 3)\r\n      ) {\r\n        clickIndex = 0;\r\n      } else if (\r\n        currentClasses.includes(\"menu-hidden\") ||\r\n        currentClasses.includes(\"menu-mobile\")\r\n      ) {\r\n        clickIndex = 0;\r\n      }\r\n    } else if (\r\n      currentClasses.includes(\"menu-sub-hidden\") &&\r\n      menuClickCount === 3\r\n    ) {\r\n      clickIndex = 2;\r\n    } else if (\r\n      currentClasses.includes(\"menu-hidden\") ||\r\n      currentClasses.includes(\"menu-mobile\")\r\n    ) {\r\n      clickIndex = 0;\r\n    }\r\n    if (clickIndex >= 0) {\r\n      // eslint-disable-next-line react/destructuring-assignment\r\n      this.props.setContainerClassnames(\r\n        clickIndex,\r\n        containerClassnames,\r\n        hasSubItems\r\n      );\r\n    }\r\n  };\r\n\r\n  handleProps = () => {\r\n    this.addEvents();\r\n  };\r\n\r\n  addEvents = () => {\r\n    [\"click\", \"touchstart\", \"touchend\"].forEach((event) =>\r\n      document.addEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  removeEvents = () => {\r\n    [\"click\", \"touchstart\", \"touchend\"].forEach((event) =>\r\n      document.removeEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  setSelectedLiActive = (callback) => {\r\n    const oldli = document.querySelector(\".sub-menu  li.active\");\r\n    if (oldli != null) {\r\n      oldli.classList.remove(\"active\");\r\n    }\r\n\r\n    const oldliSub = document.querySelector(\".third-level-menu  li.active\");\r\n    if (oldliSub != null) {\r\n      oldliSub.classList.remove(\"active\");\r\n    }\r\n\r\n    /* set selected parent menu */\r\n    const selectedSublink = document.querySelector(\r\n      \".third-level-menu  a.active\"\r\n    );\r\n    if (selectedSublink != null) {\r\n      selectedSublink.parentElement.classList.add(\"active\");\r\n    }\r\n\r\n    const selectedlink = document.querySelector(\".sub-menu  a.active\");\r\n    if (selectedlink != null) {\r\n      selectedlink.parentElement.classList.add(\"active\");\r\n      this.setState(\r\n        {\r\n          selectedParentMenu:\r\n            selectedlink.parentElement.parentElement.getAttribute(\r\n              \"data-parent\"\r\n            ),\r\n        },\r\n        callback\r\n      );\r\n    } else {\r\n      const selectedParentNoSubItem = document.querySelector(\r\n        \".main-menu  li a.active\"\r\n      );\r\n      if (selectedParentNoSubItem != null) {\r\n        this.setState(\r\n          {\r\n            selectedParentMenu:\r\n              selectedParentNoSubItem.getAttribute(\"data-flag\"),\r\n          },\r\n          callback\r\n        );\r\n        // eslint-disable-next-line react/destructuring-assignment\r\n      } else if (this.state.selectedParentMenu === \"\") {\r\n        this.setState(\r\n          {\r\n            selectedParentMenu: menuItems[0].id,\r\n          },\r\n          callback\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  setHasSubItemStatus = () => {\r\n    const hasSubmenu = this.getIsHasSubItem();\r\n    // eslint-disable-next-line react/destructuring-assignment\r\n    this.props.changeSelectedMenuHasSubItems(hasSubmenu);\r\n    this.toggle();\r\n  };\r\n\r\n  getIsHasSubItem = () => {\r\n    const { selectedParentMenu } = this.state;\r\n    const menuItem = menuItems.find((x) => x.id === selectedParentMenu);\r\n    if (menuItem)\r\n      return !!(menuItem && menuItem.subs && menuItem.subs.length > 0);\r\n    return false;\r\n  };\r\n\r\n  // eslint-disable-next-line react/sort-comp\r\n  componentDidUpdate(prevProps) {\r\n    // eslint-disable-next-line react/destructuring-assignment\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      this.setSelectedLiActive(this.setHasSubItemStatus);\r\n\r\n      window.scrollTo(0, 0);\r\n    }\r\n    this.handleProps();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleWindowResize);\r\n    this.handleWindowResize();\r\n    this.handleProps();\r\n    this.setSelectedLiActive(this.setHasSubItemStatus);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeEvents();\r\n    window.removeEventListener(\"resize\", this.handleWindowResize);\r\n  }\r\n\r\n  openSubMenu = (e, menuItem) => {\r\n    const selectedParent = menuItem.id;\r\n    const hasSubMenu = menuItem.subs && menuItem.subs.length > 0;\r\n    // eslint-disable-next-line react/destructuring-assignment\r\n    this.props.changeSelectedMenuHasSubItems(hasSubMenu);\r\n    if (!hasSubMenu) {\r\n      this.setState({\r\n        viewingParentMenu: selectedParent,\r\n        selectedParentMenu: selectedParent,\r\n      });\r\n      this.toggle();\r\n    } else {\r\n      e.preventDefault();\r\n\r\n      const { containerClassnames, menuClickCount } = this.props;\r\n      const currentClasses = containerClassnames\r\n        ? containerClassnames.split(\" \").filter((x) => x !== \"\")\r\n        : \"\";\r\n\r\n      if (!currentClasses.includes(\"menu-mobile\")) {\r\n        if (\r\n          currentClasses.includes(\"menu-sub-hidden\") &&\r\n          (menuClickCount === 2 || menuClickCount === 0)\r\n        ) {\r\n          // eslint-disable-next-line react/destructuring-assignment\r\n          this.props.setContainerClassnames(3, containerClassnames, hasSubMenu);\r\n        } else if (\r\n          currentClasses.includes(\"menu-hidden\") &&\r\n          (menuClickCount === 1 || menuClickCount === 3)\r\n        ) {\r\n          // eslint-disable-next-line react/destructuring-assignment\r\n          this.props.setContainerClassnames(2, containerClassnames, hasSubMenu);\r\n        } else if (\r\n          currentClasses.includes(\"menu-default\") &&\r\n          !currentClasses.includes(\"menu-sub-hidden\") &&\r\n          (menuClickCount === 1 || menuClickCount === 3)\r\n        ) {\r\n          // eslint-disable-next-line react/destructuring-assignment\r\n          this.props.setContainerClassnames(0, containerClassnames, hasSubMenu);\r\n        }\r\n      } else {\r\n        // eslint-disable-next-line react/destructuring-assignment\r\n        this.props.addContainerClassname(\r\n          \"sub-show-temporary\",\r\n          containerClassnames\r\n        );\r\n      }\r\n      this.setState({\r\n        viewingParentMenu: selectedParent,\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleMenuCollapse = (e, menuKey) => {\r\n    e.preventDefault();\r\n\r\n    const { collapsedMenus } = this.state;\r\n    if (collapsedMenus.indexOf(menuKey) > -1) {\r\n      this.setState({\r\n        collapsedMenus: collapsedMenus.filter((x) => x !== menuKey),\r\n      });\r\n    } else {\r\n      collapsedMenus.push(menuKey);\r\n      this.setState({\r\n        collapsedMenus,\r\n      });\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // eslint-disable-next-line no-shadow\r\n  filteredList = (menuItems) => {\r\n    // const { currentUser } = this.props;\r\n    const currentUser = localStorage.getItem(\"roleRes\");\r\n    if (currentUser) {\r\n      return menuItems.filter(\r\n        (x) => (x.roles && x.roles.includes(currentUser)) || !x.roles\r\n      );\r\n    }\r\n    return menuItems;\r\n  };\r\n\r\n  // filteredList = (items) => {\r\n  //   // Renamed 'menuItems' to 'items'\r\n  //   const { currentUser } = this.props;\r\n  //   if (currentUser) {\r\n  //     // If the role is \"HR\" or \"REALESTATE\", only show \"Listing\" item\r\n  //     if (currentUser.role === \"HR\" || currentUser.role === \"REALESTATE\") {\r\n  //       return items.filter((x) => x.label === \"Listing\");\r\n  //     }\r\n\r\n  //     // Otherwise, filter based on user roles\r\n  //     return items.filter(\r\n  //       (x) => (x.roles && x.roles.includes(currentUser.role)) || !x.roles\r\n  //     );\r\n  //   }\r\n\r\n  //   return items; // Return all items if no currentUser\r\n  // };\r\n\r\n  render() {\r\n    const { selectedParentMenu, viewingParentMenu, collapsedMenus } =\r\n      this.state;\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <div className=\"main-menu\">\r\n          <div className=\"scroll\">\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              <Nav vertical className=\"list-unstyled\">\r\n                {menuItems &&\r\n                  this.filteredList(menuItems).map((item) => {\r\n                    return (\r\n                      <NavItem\r\n                        key={item.id}\r\n                        className={classnames({\r\n                          active:\r\n                            (selectedParentMenu === item.id &&\r\n                              viewingParentMenu === \"\") ||\r\n                            viewingParentMenu === item.id,\r\n                        })}\r\n                      >\r\n                        {item.newWindow ? (\r\n                          <a\r\n                            href={item.to}\r\n                            rel=\"noopener noreferrer\"\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i className={item.icon} />{\" \"}\r\n                            <IntlMessages id={item.label} />\r\n                          </a>\r\n                        ) : (\r\n                          <NavLink\r\n                            to={item.to}\r\n                            onClick={(e) => this.openSubMenu(e, item)}\r\n                            data-flag={item.id}\r\n                          >\r\n                            <i className={item.icon} />{\" \"}\r\n                            <IntlMessages id={item.label} />\r\n                          </NavLink>\r\n                        )}\r\n                      </NavItem>\r\n                    );\r\n                  })}\r\n              </Nav>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"sub-menu\">\r\n          <div className=\"scroll\">\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              {menuItems &&\r\n                this.filteredList(menuItems).map((item) => {\r\n                  return (\r\n                    <Nav\r\n                      key={item.id}\r\n                      className={classnames({\r\n                        \"d-block\":\r\n                          // eslint-disable-next-line react/destructuring-assignment\r\n                          (this.state.selectedParentMenu === item.id &&\r\n                            // eslint-disable-next-line react/destructuring-assignment\r\n                            this.state.viewingParentMenu === \"\") ||\r\n                          // eslint-disable-next-line react/destructuring-assignment\r\n                          this.state.viewingParentMenu === item.id,\r\n                      })}\r\n                      data-parent={item.id}\r\n                    >\r\n                      {item.subs &&\r\n                        this.filteredList(item.subs).map((sub, index) => {\r\n                          return (\r\n                            <NavItem\r\n                              key={`${item.id}_${index}`}\r\n                              className={`${\r\n                                sub.subs && sub.subs.length > 0\r\n                                  ? \"has-sub-item\"\r\n                                  : \"\"\r\n                              }`}\r\n                            >\r\n                              {/* eslint-disable-next-line no-nested-ternary */}\r\n                              {sub.newWindow ? (\r\n                                <a\r\n                                  href={sub.to}\r\n                                  rel=\"noopener noreferrer\"\r\n                                  target=\"_blank\"\r\n                                >\r\n                                  <i className={sub.icon} />{\" \"}\r\n                                  <IntlMessages id={sub.label} />\r\n                                </a>\r\n                              ) : sub.subs && sub.subs.length > 0 ? (\r\n                                <>\r\n                                  <NavLink\r\n                                    className={`rotate-arrow-icon opacity-50 ${\r\n                                      collapsedMenus.indexOf(\r\n                                        `${item.id}_${index}`\r\n                                      ) === -1\r\n                                        ? \"\"\r\n                                        : \"collapsed\"\r\n                                    }`}\r\n                                    to={sub.to}\r\n                                    id={`${item.id}_${index}`}\r\n                                    onClick={(e) =>\r\n                                      this.toggleMenuCollapse(\r\n                                        e,\r\n                                        `${item.id}_${index}`\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <i className=\"simple-icon-arrow-down\" />{\" \"}\r\n                                    <IntlMessages id={sub.label} />\r\n                                  </NavLink>\r\n\r\n                                  <Collapse\r\n                                    isOpen={\r\n                                      collapsedMenus.indexOf(\r\n                                        `${item.id}_${index}`\r\n                                      ) === -1\r\n                                    }\r\n                                  >\r\n                                    <Nav className=\"third-level-menu\">\r\n                                      {this.filteredList(sub.subs).map(\r\n                                        (thirdSub, thirdIndex) => {\r\n                                          return (\r\n                                            <NavItem\r\n                                              key={`${item.id}_${index}_${thirdIndex}`}\r\n                                            >\r\n                                              {thirdSub.newWindow ? (\r\n                                                <a\r\n                                                  href={thirdSub.to}\r\n                                                  rel=\"noopener noreferrer\"\r\n                                                  target=\"_blank\"\r\n                                                >\r\n                                                  <i\r\n                                                    className={thirdSub.icon}\r\n                                                  />{\" \"}\r\n                                                  <IntlMessages\r\n                                                    id={thirdSub.label}\r\n                                                  />\r\n                                                </a>\r\n                                              ) : (\r\n                                                <NavLink to={thirdSub.to}>\r\n                                                  <i\r\n                                                    className={thirdSub.icon}\r\n                                                  />{\" \"}\r\n                                                  <IntlMessages\r\n                                                    id={thirdSub.label}\r\n                                                  />\r\n                                                </NavLink>\r\n                                              )}\r\n                                            </NavItem>\r\n                                          );\r\n                                        }\r\n                                      )}\r\n                                    </Nav>\r\n                                  </Collapse>\r\n                                </>\r\n                              ) : (\r\n                                <NavLink to={sub.to}>\r\n                                  <i className={sub.icon} />{\" \"}\r\n                                  <IntlMessages id={sub.label} />\r\n                                </NavLink>\r\n                              )}\r\n                            </NavItem>\r\n                          );\r\n                        })}\r\n                    </Nav>\r\n                  );\r\n                })}\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ menu, authUser }) => {\r\n  const {\r\n    containerClassnames,\r\n    subHiddenBreakpoint,\r\n    menuHiddenBreakpoint,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n  } = menu;\r\n\r\n  const { currentUser } = authUser;\r\n  return {\r\n    containerClassnames,\r\n    subHiddenBreakpoint,\r\n    menuHiddenBreakpoint,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    currentUser,\r\n  };\r\n};\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    setContainerClassnames,\r\n    addContainerClassname,\r\n    changeDefaultClassnames,\r\n    changeSelectedMenuHasSubItems,\r\n  })(Sidebar)\r\n);\r\n","import React from 'react';\r\n\r\nconst MenuIcon = () => {\r\n  return (\r\n    <>\r\n      <svg\r\n        className=\"main\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 9 17\"\r\n      >\r\n        <rect x=\"0.48\" y=\"0.5\" width=\"7\" height=\"1\" />\r\n        <rect x=\"0.48\" y=\"7.5\" width=\"7\" height=\"1\" />\r\n        <rect x=\"0.48\" y=\"15.5\" width=\"7\" height=\"1\" />\r\n      </svg>\r\n      <svg\r\n        className=\"sub\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 18 17\"\r\n      >\r\n        <rect x=\"1.56\" y=\"0.5\" width=\"16\" height=\"1\" />\r\n        <rect x=\"1.56\" y=\"7.5\" width=\"16\" height=\"1\" />\r\n        <rect x=\"1.56\" y=\"15.5\" width=\"16\" height=\"1\" />\r\n      </svg>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuIcon;\r\n","import React from 'react';\r\n\r\nconst MobileMenuIcon = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 26 17\">\r\n      <rect x=\"0.5\" y=\"0.5\" width=\"25\" height=\"1\" />\r\n      <rect x=\"0.5\" y=\"7.5\" width=\"25\" height=\"1\" />\r\n      <rect x=\"0.5\" y=\"15.5\" width=\"25\" height=\"1\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default MobileMenuIcon;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Switch from 'rc-switch';\r\nimport 'rc-switch/assets/index.css';\r\nimport { Tooltip } from 'reactstrap';\r\nimport { getCurrentColor, setCurrentColor } from 'helpers/Utils';\r\n\r\nconst TopnavDarkSwitch = () => {\r\n  const [switchChecked, setSwitchChecked] = useState(false);\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const color = getCurrentColor();\r\n    setSwitchChecked(color.indexOf('dark') > -1);\r\n  }, []);\r\n\r\n  const changeMode = () => {\r\n    let color = getCurrentColor();\r\n\r\n    if (color.indexOf('dark') > -1) {\r\n      color = color.replace('dark', 'light');\r\n    } else if (color.indexOf('light') > -1) {\r\n      color = color.replace('light', 'dark');\r\n    }\r\n    setCurrentColor(color);\r\n    setSwitchChecked(color.indexOf('dark') > -1);\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-none d-md-inline-block align-middle mr-3\">\r\n      <Switch\r\n        id=\"tooltip_switch\"\r\n        className=\"custom-switch custom-switch-primary custom-switch-small\"\r\n        checked={switchChecked}\r\n        onChange={changeMode}\r\n      />\r\n      <Tooltip\r\n        placement=\"left\"\r\n        isOpen={tooltipOpen}\r\n        target=\"tooltip_switch\"\r\n        toggle={() => setTooltipOpen(!tooltipOpen)}\r\n      >\r\n        Dark Mode\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\nexport default TopnavDarkSwitch;\r\n","/* eslint-disable react/no-array-index-key */\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\n// import notifications from 'data/notifications';\r\nimport { adminRoot, baseUrl } from \"constants/defaultValues\";\r\nimport TimestampConverter from \"views/app/myapp/Calculation/TimestampConverter\";\r\n\r\n// const NotificationItem = ({ img, title, date }) => {\r\n//   return (\r\n//     <div className=\"d-flex flex-row mb-3 pb-3 border-bottom\">\r\n//       <NavLink to={`${adminRoot}/pages/product/details`}>\r\n//         <img\r\n//           src={img}\r\n//           alt={title}\r\n//           className=\"img-thumbnail list-thumbnail xsmall border-0 rounded-circle\"\r\n//         />\r\n//       </NavLink>\r\n//       <div className=\"pl-3 pr-2\">\r\n//         <NavLink to={`${adminRoot}/pages/product/details`}>\r\n//           <p className=\"font-weight-medium mb-1\">{title}</p>\r\n//           <p className=\"text-muted mb-0 text-small\">{date}</p>\r\n//         </NavLink>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst TopnavNotifications = () => {\r\n  const url = `${baseUrl}/api/notifications/last30days`;\r\n\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const response = await axios.get(url);\r\n        setNotifications(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching notifications:\", error);\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n\r\n    const intervalId = setInterval(fetchNotifications, 30000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [url, clicked]);\r\n  const handleClick = () => {\r\n    setClicked(!clicked);\r\n  };\r\n  return (\r\n    <div className=\"position-relative d-inline-block\">\r\n      <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n        <DropdownToggle\r\n          className=\"header-icon notificationButton mr-3\"\r\n          color=\"empty\"\r\n          onClick={handleClick}\r\n        >\r\n          <i className=\"simple-icon-bell\" />\r\n          <span className=\"count\">{notifications.length}</span>\r\n        </DropdownToggle>\r\n        <DropdownMenu\r\n          className=\"position-absolute mt-3 scroll\"\r\n          right\r\n          id=\"notificationDropdown\"\r\n        >\r\n          {notifications.length === 0 ? (\r\n            <div className=\"p-3 text-center\">\r\n              You don&apos;t have any notifications\r\n            </div>\r\n          ) : (\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              {notifications.map((notification) => {\r\n                // return <NotificationItem key={index} {...notification} />;\r\n                return (\r\n                  <div\r\n                    className=\"d-flex flex-row mb-3 pb-3 border-bottom\"\r\n                    key={notification.id}\r\n                  >\r\n                    <NavLink to={`${adminRoot}/pages/product/details`}>\r\n                      <img\r\n                        src=\"\"\r\n                        alt=\"\"\r\n                        className=\"img-thumbnail list-thumbnail xsmall border-0 rounded-circle\"\r\n                      />\r\n                    </NavLink>\r\n                    <div className=\"pl-3 pr-2\">\r\n                      <NavLink to={notification.url}>\r\n                        <p className=\"font-weight-medium mb-1\">\r\n                          {notification.message}\r\n                        </p>\r\n                        <p className=\"text-muted mb-0 text-small\">\r\n                          <TimestampConverter\r\n                            timeStamp={notification.createdAt}\r\n                            format=\"datetime\"\r\n                          />\r\n                        </p>\r\n                      </NavLink>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </PerfectScrollbar>\r\n          )}\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopnavNotifications;\r\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable no-use-before-define */\r\nimport { useState } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\n\r\nimport {\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Row,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport {\r\n  changeLocale,\r\n  clickOnMobileMenu,\r\n  logoutUser,\r\n  setContainerClassnames,\r\n} from \"redux/actions\";\r\n\r\nimport { MenuIcon, MobileMenuIcon } from \"components/svg\";\r\nimport {\r\n  adminRoot,\r\n  baseUrl,\r\n  isDarkSwitchActive,\r\n  searchPath,\r\n} from \"constants/defaultValues\";\r\nimport ThumbnailLetters from \"views/app/myapp/Chat/ThumbnailLetters\";\r\n// import MyProfile from 'views/app/myapp/my-profile/MyProfile';\r\nimport TopnavDarkSwitch from \"./Topnav.DarkSwitch\";\r\nimport TopnavNotifications from \"./Topnav.Notifications\";\r\n\r\n// const NotificationData = {\r\n//   payload: [\r\n//     {\r\n//       id: 1,\r\n//       msg: \"This is a sample notification\",\r\n//       created_at: \"2020-09-08\",\r\n//     },\r\n//     {\r\n//       id: 2,\r\n//       msg: \"This is a sample notification 2\",\r\n//       created_at: \"2020-09-08\",\r\n//     },\r\n//   ],\r\n// };\r\n\r\nconst TopNav = ({\r\n  history,\r\n  containerClassnames,\r\n  menuClickCount,\r\n  selectedMenuHasSubItems,\r\n  setContainerClassnamesAction,\r\n  clickOnMobileMenuAction,\r\n  logoutUserAction,\r\n}) => {\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n\r\n  const search = () => {\r\n    history.push(`${searchPath}?key=${searchKeyword}`);\r\n    setSearchKeyword(\"\");\r\n  };\r\n\r\n  const handleDocumentClickSearch = (e) => {\r\n    let isSearchClick = false;\r\n    if (\r\n      e.target &&\r\n      e.target.classList &&\r\n      (e.target.classList.contains(\"navbar\") ||\r\n        e.target.classList.contains(\"simple-icon-magnifier\"))\r\n    ) {\r\n      isSearchClick = true;\r\n      if (e.target.classList.contains(\"simple-icon-magnifier\")) {\r\n        search();\r\n      }\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.classList &&\r\n      e.target.parentElement.classList.contains(\"search\")\r\n    ) {\r\n      isSearchClick = true;\r\n    }\r\n\r\n    if (!isSearchClick) {\r\n      const input = document.querySelector(\".mobile-view\");\r\n      if (input && input.classList) input.classList.remove(\"mobile-view\");\r\n      removeEventsSearch();\r\n      setSearchKeyword(\"\");\r\n    }\r\n  };\r\n\r\n  const removeEventsSearch = () => {\r\n    document.removeEventListener(\"click\", handleDocumentClickSearch, true);\r\n  };\r\n\r\n  function getRoleRes() {\r\n    return localStorage.getItem(\"roleRes\");\r\n  }\r\n  function getExpTime() {\r\n    return localStorage.getItem(\"expirationTime\");\r\n  }\r\n\r\n  const roleRes = getRoleRes();\r\n  const expTime = getExpTime();\r\n\r\n  const timeUntilExpiration = expTime - Date.now();\r\n  setTimeout(() => {\r\n    localStorage.clear();\r\n    logoutUserAction(history);\r\n  }, timeUntilExpiration);\r\n\r\n  let session;\r\n\r\n  if (roleRes.includes(\"MENTOR\") || roleRes.includes(\"ALUMNI\")) {\r\n    session = `${adminRoot}/sessionmentor`;\r\n  } else if (roleRes.includes(\"USER\")) {\r\n    session = `${adminRoot}/sessionlists`;\r\n  }\r\n\r\n  let myProfile;\r\n  if (roleRes.includes(\"MENTOR\")) {\r\n    myProfile = `${adminRoot}/mentor/myprofile`;\r\n  } else if (roleRes.includes(\"LAWYER\")) {\r\n    myProfile = `${adminRoot}/lawyer/myprofile`;\r\n  } else if (roleRes.includes(\"USER\")) {\r\n    myProfile = `${adminRoot}/student/myprofile`;\r\n  } else if (roleRes.includes(\"ALUMNI\")) {\r\n    myProfile = `${adminRoot}/alumni/myprofile`;\r\n  } else if (roleRes.includes(\"HR\")) {\r\n    myProfile = `${adminRoot}/alumni/myprofile`;\r\n  } else if (roleRes.includes(\"REALESTATE\")) {\r\n    myProfile = `${adminRoot}/alumni/myprofile`;\r\n  }\r\n\r\n  const handleMyProfileClick = () => {\r\n    history.push(myProfile);\r\n  };\r\n  const handleMyWalletClick = () => {\r\n    history.push(`${adminRoot}/mywallet`);\r\n  };\r\n  const handleMyListingClick = () => {\r\n    history.push(`${adminRoot}/mylisting`);\r\n  };\r\n  const handleMyActivitiesClick = () => {\r\n    history.push(`${adminRoot}/myactivities`);\r\n  };\r\n  const handleMySessionsClick = () => {\r\n    history.push(session);\r\n  };\r\n  const handleMyAlumniSession = () => {\r\n    history.push(`${adminRoot}/alumni/sessionlists`);\r\n  };\r\n  const handleMyLawyerJobsClick = () => {\r\n    history.push(`${adminRoot}/jobslist`);\r\n  };\r\n  const handleMyClientJobsClick = () => {\r\n    history.push(`${adminRoot}/lawyerjobslist`);\r\n  };\r\n  const handleMySlots = () => {\r\n    history.push(`${adminRoot}/calendar/mentor/appointment`);\r\n  };\r\n  const handleSettingsClick = () => {\r\n    history.push(`${adminRoot}/settings`);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logoutUserAction(history);\r\n    localStorage.removeItem(\"roleRes\");\r\n    localStorage.removeItem(\"tokenRes\");\r\n    localStorage.removeItem(\"status\");\r\n    localStorage.removeItem(\"userId\");\r\n    localStorage.removeItem(\"userName\");\r\n    localStorage.removeItem(\"imageUrl\");\r\n    localStorage.removeItem(\"__theme_selected_color\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    localStorage.removeItem(\"__theme_radius\");\r\n  };\r\n\r\n  const renderMySlots = () => {\r\n    if (roleRes.includes(\"MENTOR\")) {\r\n      return (\r\n        <NavLink to={`${adminRoot}/calendar/mentor/appointment`}>\r\n          <DropdownItem onClick={() => handleMySlots()}>\r\n            <i className=\"simple-icon-wallet\" /> My Slots\r\n          </DropdownItem>\r\n        </NavLink>\r\n      );\r\n    }\r\n\r\n    if (roleRes.includes(\"ALUMNI\")) {\r\n      return (\r\n        <NavLink to={`${adminRoot}/calendar/mentor/appointment`}>\r\n          <DropdownItem onClick={() => handleMySlots()}>\r\n            <i className=\"simple-icon-wallet\" /> My Slots\r\n          </DropdownItem>\r\n        </NavLink>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const renderMyWallet = () => {\r\n    if (roleRes.includes(\"USER\")) {\r\n      return (\r\n        <>\r\n          <NavLink to={`${adminRoot}/mywallet`}>\r\n            <DropdownItem onClick={() => handleMyWalletClick()}>\r\n              <i className=\"simple-icon-wallet\" /> My Wallet\r\n            </DropdownItem>\r\n          </NavLink>\r\n          <NavLink to={`${adminRoot}/lawyerjobslist`}>\r\n            <DropdownItem onClick={() => handleMyClientJobsClick()}>\r\n              <i className=\"iconsminds-scale\" /> My Lawyer Jobs\r\n            </DropdownItem>\r\n          </NavLink>\r\n        </>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  const renderClientJob = () => {\r\n    if (roleRes.includes(\"LAWYER\")) {\r\n      return (\r\n        <NavLink to={`${adminRoot}/jobslist`}>\r\n          <DropdownItem onClick={() => handleMyLawyerJobsClick()}>\r\n            <i className=\"iconsminds-scale\" /> My Client Jobs\r\n          </DropdownItem>\r\n        </NavLink>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  // const renderMentorSession = () => {\r\n  //   if (\r\n  //     roleRes.includes(\"USER\") ||\r\n  //     roleRes.includes(\"MENTOR\") ||\r\n  //     roleRes.includes(\"ALUMNI\")\r\n  //   ) {\r\n  //     return (\r\n  //       <NavLink to={session}>\r\n  //         <DropdownItem onClick={() => handleMySessionsClick()}>\r\n  //           <i className=\"simple-icon-list\" /> My Mentor Sessions\r\n  //         </DropdownItem>\r\n  //       </NavLink>\r\n  //     );\r\n  //   }\r\n  //   return null;\r\n  // };\r\n  const renderMyAlumniSessions = () => {\r\n    if (roleRes.includes(\"USER\")) {\r\n      return (\r\n        <NavLink to={`${adminRoot}/alumni/sessionlists`}>\r\n          <DropdownItem onClick={() => handleMyAlumniSession()}>\r\n            <i className=\"simple-icon-list\" /> My Alumni Sessions\r\n          </DropdownItem>\r\n        </NavLink>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderMentorSession = () => {\r\n    if (roleRes.includes(\"USER\")) {\r\n      return (\r\n        <NavLink to={session}>\r\n          <DropdownItem onClick={() => handleMySessionsClick()}>\r\n            <i className=\"simple-icon-list\" /> My Mentor Sessions\r\n          </DropdownItem>\r\n        </NavLink>\r\n      );\r\n    }\r\n\r\n    if (roleRes.includes(\"MENTOR\") || roleRes.includes(\"ALUMNI\")) {\r\n      return (\r\n        <NavLink to={session}>\r\n          <DropdownItem onClick={() => handleMySessionsClick()}>\r\n            <i className=\"simple-icon-list\" /> My Sessions\r\n          </DropdownItem>\r\n        </NavLink>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const menuButtonClick = (e, _clickCount, _conClassnames) => {\r\n    e.preventDefault();\r\n\r\n    setTimeout(() => {\r\n      const event = document.createEvent(\"HTMLEvents\");\r\n      event.initEvent(\"resize\", false, false);\r\n      window.dispatchEvent(event);\r\n    }, 350);\r\n    setContainerClassnamesAction(\r\n      _clickCount + 1,\r\n      _conClassnames,\r\n      selectedMenuHasSubItems\r\n    );\r\n  };\r\n\r\n  const mobileMenuButtonClick = (e, _containerClassnames) => {\r\n    e.preventDefault();\r\n    clickOnMobileMenuAction(_containerClassnames);\r\n  };\r\n\r\n  const userName = localStorage.getItem(\"userName\");\r\n\r\n  const imageUrl = localStorage.getItem(\"imageUrl\");\r\n  // console.log(\"img\",imageUrl)\r\n\r\n  return (\r\n    <nav className=\"navbar fixed-top\">\r\n      <div className=\"d-flex align-items-center navbar-left\">\r\n        <NavLink\r\n          to=\"#\"\r\n          location={{}}\r\n          className=\"menu-button d-none d-md-block\"\r\n          onClick={(e) =>\r\n            menuButtonClick(e, menuClickCount, containerClassnames)\r\n          }\r\n        >\r\n          <MenuIcon />\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"#\"\r\n          location={{}}\r\n          className=\"menu-button-mobile d-xs-block d-sm-block d-md-none\"\r\n          onClick={(e) => mobileMenuButtonClick(e, containerClassnames)}\r\n        >\r\n          <MobileMenuIcon />\r\n        </NavLink>\r\n\r\n        {/* <div className=\"d-flex align-items-center justify-content-between w-100\">\r\n          <NavLink to=\"\" className=\"\">\r\n            <span className=\"\">Home</span>\r\n          </NavLink>\r\n          <NavLink to=\"\" id=\"courses\">\r\n            <span className=\"\">Courses</span>\r\n          </NavLink>\r\n          <NavLink to=\"\">\r\n            <span className=\"\">Services</span>\r\n          </NavLink>\r\n          \r\n          <NavLink to=\"\">\r\n            <span className=\"\">Sign up / Login</span>\r\n          </NavLink>\r\n          <NavLink to=\"\">\r\n            <span className=\"\">My Profile</span>\r\n          </NavLink>\r\n          <NavLink to=\"\">\r\n            <span className=\"\">My File</span>\r\n          </NavLink>\r\n        </div> */}\r\n      </div>\r\n\r\n      <NavLink className=\"navbar-logo\" to={adminRoot}>\r\n        <span className=\"logo d-none d-xs-block\" />\r\n\r\n        <span className=\"logo-mobile d-block d-xs-none\" />\r\n      </NavLink>\r\n\r\n      <div className=\"navbar-right\">\r\n        <TopnavNotifications />\r\n\r\n        {isDarkSwitchActive && <TopnavDarkSwitch />}\r\n\r\n        <div className=\"user d-inline-block\">\r\n          <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n            <DropdownToggle className=\"p-0\" color=\"empty\">\r\n              <span>\r\n                {imageUrl === \"null\" ? (\r\n                  // <img alt=\"Profile\" src='/assets/img/profiles/l-2.jpg' />\r\n                  <Row className=\"ml-2 mr-2 ml-md-0 mr-md-0\">\r\n                    <span className=\"name mt-2 ml-2 mr-2\">{userName}</span>\r\n                    <ThumbnailLetters\r\n                      extraSmall\r\n                      rounded\r\n                      text={userName}\r\n                      className=\"\"\r\n                    />\r\n                  </Row>\r\n                ) : (\r\n                  <>\r\n                    <span className=\"name mr-1\">{userName}</span>\r\n                    <img\r\n                      alt=\"Profile\"\r\n                      src={`${baseUrl}/${imageUrl}`}\r\n                      style={{\r\n                        width: \"40px\",\r\n                        height: \"40px\",\r\n                        objectFit: \"cover\",\r\n                      }}\r\n                    />\r\n                  </>\r\n                )}\r\n              </span>\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"mt-3\" right>\r\n              <NavLink to={myProfile}>\r\n                <DropdownItem onClick={() => handleMyProfileClick()}>\r\n                  <i className=\"simple-icon-user\" /> My Profile\r\n                </DropdownItem>\r\n              </NavLink>\r\n              {renderMyWallet()}\r\n              {/* <NavLink to={`${adminRoot}/mywallet`}>\r\n                <DropdownItem onClick={() => handleMyWalletClick()}>\r\n                <i className=\"simple-icon-wallet\" />  My Wallet\r\n                </DropdownItem>\r\n              </NavLink> */}\r\n\r\n              {/* <NavLink to={`${adminRoot}/calendar/mentor/appointment`}>\r\n                <DropdownItem onClick={() => handleMySlots()}>\r\n                <i className=\"simple-icon-wallet\" />  My Slots\r\n                </DropdownItem>\r\n              </NavLink> */}\r\n              {renderMySlots()}\r\n              {/* <NavLink to={`${adminRoot}/mylisting`}> */}\r\n              <NavLink to={`${adminRoot}/myactivities`}>\r\n                <DropdownItem onClick={() => handleMyActivitiesClick()}>\r\n                  <i className=\"simple-icon-question\" /> My Activities\r\n                </DropdownItem>\r\n              </NavLink>\r\n              {renderMentorSession()}\r\n              {renderMyAlumniSessions()}\r\n              {/* <NavLink to={session}>\r\n                <DropdownItem onClick={() => handleMySessionsClick()}>\r\n                <i className=\"simple-icon-list\" /> Mentor Sessions\r\n                </DropdownItem>\r\n              </NavLink> */}\r\n              {/* <NavLink to={`${adminRoot}/jobslist`}>\r\n                <DropdownItem onClick={() => handleMyLawyerJobsClick()}>\r\n                <i className=\"iconsminds-scale\" />  My Client Jobs\r\n                </DropdownItem>\r\n              </NavLink> */}\r\n              {/* <NavLink to={`${adminRoot}/lawyerjobslist`}>\r\n                <DropdownItem onClick={() => handleMyClientJobsClick()}>\r\n                <i className=\"iconsminds-scale\" />  My Lawyer Jobs\r\n                </DropdownItem>\r\n              </NavLink> */}\r\n              {renderClientJob()}\r\n              <DropdownItem onClick={() => handleMyListingClick()}>\r\n                <i className=\"simple-icon-list\" /> My Listing\r\n              </DropdownItem>\r\n              {/* </NavLink> */}\r\n              <DropdownItem onClick={handleSettingsClick}>\r\n                <i className=\"simple-icon-settings\" /> Settings\r\n              </DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem onClick={() => handleLogout()}>\r\n                <i className=\"simple-icon-logout\" /> Sign out\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ menu, settings }) => {\r\n  const { containerClassnames, menuClickCount, selectedMenuHasSubItems } = menu;\r\n  const { locale } = settings;\r\n  return {\r\n    containerClassnames,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    locale,\r\n  };\r\n};\r\nexport default injectIntl(\r\n  connect(mapStateToProps, {\r\n    setContainerClassnamesAction: setContainerClassnames,\r\n    clickOnMobileMenuAction: clickOnMobileMenu,\r\n    logoutUserAction: logoutUser,\r\n    changeLocaleAction: changeLocale,\r\n  })(TopNav)\r\n);\r\n","import { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport Footer from \"containers/navs/Footer\";\r\nimport Sidebar from \"containers/navs/Sidebar\";\r\nimport TopNav from \"containers/navs/Topnav\";\r\n\r\nconst AppLayout = ({ containerClassnames, children, history }) => {\r\n  return (\r\n    <div id=\"app-container\" className={containerClassnames}>\r\n      <TopNav history={history} />\r\n      <Sidebar />\r\n      <main>\r\n        <div className=\"container-fluid\">{children}</div>\r\n      </main>\r\n      <Footer />\r\n      {/* <div className=\"d-md-none\">\r\n        <BottomMenu />\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = ({ menu }) => {\r\n  const { containerClassnames } = menu;\r\n  return { containerClassnames };\r\n};\r\nconst mapActionToProps = {};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapActionToProps)(AppLayout)\r\n);\r\n","import AppLayout from \"layout/AppLayout\";\r\nimport React, { Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch, withRouter } from \"react-router-dom\";\r\n\r\n// import MyApplications from './myapp/my-applications/my-applications';\r\n// import MyDetails from './myapp/my-details/my-details';\r\n// import MyDocuments from './myapp/my-documents/my-documents';\r\n// import { MyProfile } from './myapp/my-profile/MyProfile';\r\n\r\nconst ViewMyApp = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp\")\r\n);\r\nconst ViewMyApplications = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/my-applications/my-applications\"\r\n  )\r\n);\r\nconst ViewDashBoard = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/DashBoard/DashBoard\")\r\n);\r\nconst ViewMyDetails = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/my-details/my-details\")\r\n);\r\nconst ViewMyDocuments = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/my-documents/my-documents\"\r\n  )\r\n);\r\n\r\n// const JobPage = React.lazy(() =>\r\n//   import(/* webpackChunkName: \"viwes-blank-page\" */ './jobs')\r\n// );\r\nconst ProfilePage = React.lazy(() =>\r\n  import(/* webpackChunkName: \"viwes-blank-page\" */ \"./profiles\")\r\n);\r\n// const Mentorship = React.lazy(() =>\r\n//   import(/* webpackChunkName: \"viwes-blank-page\" */ './myapp/mentorship')\r\n// );\r\n// Mentorship Cards\r\nconst MentorCard = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/mentorship/mentorcard\")\r\n);\r\n// Mentors profile page\r\nconst MentorProfile = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/mentorship/MentorProfile\")\r\n);\r\nconst MentorAnswers = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/mentorship/MentorAnswers\")\r\n);\r\nconst MentorConsult = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/mentorship/MentorConsult\")\r\n);\r\nconst MentorCreatedSlots = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/mentorship/MentorCreatedSlot\"\r\n  )\r\n);\r\nconst FilterQuestions = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/mentorship/FilterQuestions\"\r\n  )\r\n);\r\nconst ViewMyChat = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Chat/Chat\")\r\n);\r\n\r\nconst AskQuestion = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/mentorship/AskQuestion\")\r\n);\r\nconst ViewActivities = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/mentorship/myQandA\")\r\n);\r\n\r\nconst Month = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/BigCalendar/Month\")\r\n);\r\nconst MentorSessionList = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/BigCalendar/MentorSessionList\"\r\n  )\r\n);\r\nconst MentorListSessions = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/mentorship/MentorSessionUpcoming\"\r\n  )\r\n);\r\n// const CalendarGoogle = React.lazy(() =>\r\n//   import(\r\n//     /* webpackChunkName: \"views-app\" */ './myapp/mentorship/CalendarGoogle'\r\n//   )\r\n// );\r\n// const CreateJobPage = React.lazy(() =>\r\n//   import(/* webpackChunkName: \"viwes-blank-page\" */ './create-jobs')\r\n// );\r\n// const EditJobPage = React.lazy(() =>\r\n//   import(/* webpackChunkName: \"viwes-blank-page\" */ './edit-jobs')\r\n// );\r\nconst ViewMylogin = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/my-login/ApplyMentor\")\r\n);\r\nconst ViewLawyerlogin = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/lawyer-login/ApplyAsLawyer\"\r\n  )\r\n);\r\nconst ViewAlumnilogin = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/AlumniRegister/ApplyAlumni\"\r\n  )\r\n);\r\n\r\nconst ViewHrlogin = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/HumanResource/HRRegistration/ApplyHR\"\r\n  )\r\n);\r\n\r\nconst ViewMyProfile = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/my-profile/MyProfile\")\r\n);\r\n\r\nconst ViewMyWallet = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/my-wallet/MyWallet\")\r\n);\r\nconst ViewMyListing = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Listing/MyListing\")\r\n);\r\nconst ViewVideoCall = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/VideoCall/RTCVideoCall/VideoCall\"\r\n  )\r\n);\r\n// const ViewJobPosting = React.lazy(() =>\r\n//   import(\r\n//     /* webpackChunkName: \"views-app\" */ './myapp/Listing/JobPosting'\r\n//   )\r\n// );\r\n// const ViewStayPosting = React.lazy(() =>\r\n//   import(\r\n//     /* webpackChunkName: \"views-app\" */ './myapp/Listing/StayPosting'\r\n//   )\r\n// );\r\n// const ViewOtherPosting = React.lazy(() =>\r\n//   import(\r\n//     /* webpackChunkName: \"views-app\" */ './myapp/Listing/OtherPosting'\r\n//   )\r\n// );\r\n// const ViewJobListing = React.lazy(() =>\r\n//   import(\r\n//     /* webpackChunkName: \"views-app\" */ './myapp/Listing/JobListing'\r\n//   )\r\n// );\r\n// const ViewStayListing = React.lazy(() =>\r\n//   import(\r\n//     /* webpackChunkName: \"views-app\" */ './myapp/Listing/StayListing'\r\n//   )\r\n// );\r\n// const ViewOtherListing = React.lazy(() =>\r\n//   import(\r\n//     /* webpackChunkName: \"views-app\" */ './myapp/Listing/OtherListing'\r\n//   )\r\n// );\r\n// const ViewListing = React.lazy(() =>\r\n//   import(\r\n//     /* webpackChunkName: \"views-app\" */ './myapp/Listing/Listing'\r\n//   )\r\n// );\r\nconst ViewListingTab = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Listing/Listing\")\r\n);\r\nconst ViewStayListingTab = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Listing/Listing\")\r\n);\r\nconst ViewJobListingTab = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Listing/Listing\")\r\n);\r\nconst ViewOtherListingTab = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Listing/Listing\")\r\n);\r\nconst ViewOtherListing = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Listing/ViewOtherListing\")\r\n);\r\nconst ViewJobListing = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Listing/ViewJobListing\")\r\n);\r\nconst ViewStayListing = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Listing/ViewStayListing\")\r\n);\r\n// const ViewNotification = React.lazy(() =>\r\n//   import(\r\n//     /* webpackChunkName: \"views-app\" */ './myapp/notifications/DesktopNotifications'\r\n//   )\r\n// );\r\nconst ViewLawyer = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Lawyer/LawQuestionAnswer\")\r\n);\r\nconst ViewUserCard = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Lawyer/UserCard\")\r\n);\r\nconst ViewLawyerProfile = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Lawyer/LawyerProfile\")\r\n);\r\nconst ViewLawyerPayment = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Lawyer/PaymentWizard\")\r\n);\r\nfunction getStatusRes() {\r\n  return localStorage.getItem(\"status\");\r\n}\r\nfunction getRoleRes() {\r\n  return localStorage.getItem(\"roleRes\");\r\n}\r\n\r\nconst ViewJobDetail = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Lawyer/JobDetails\")\r\n);\r\nconst ViewJobList = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Lawyer/JobList\")\r\n);\r\nconst ViewLawyerJobList = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Lawyer/LawyerJobList\")\r\n);\r\nconst ViewLawyerReviews = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Lawyer/AddReview\")\r\n);\r\nconst ViewCallCompleted = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/VideoCall/VideoCallCompletedPage\"\r\n  )\r\n);\r\nconst ViewClassRoom = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Classroom/AgoraClass\")\r\n);\r\nconst ViewLawyerMyProfile = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Lawyer/LawyerMyProfile\")\r\n);\r\nconst ViewUserMyProfile = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Mentee/MenteeMyProfile\")\r\n);\r\n\r\nconst ViewUserProfile = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Mentee/MenteeProfile\")\r\n);\r\n\r\nconst ViewStudentList = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Mentee/StudentList\")\r\n);\r\nconst ViewStudentProfile = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/Mentee/StudentViewProfile\"\r\n  )\r\n);\r\n\r\nconst ViewAlumniMyProfile = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Alumni/AlumniMyProfile\")\r\n);\r\nconst ViewAlumniCalendar = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Alumni/AlumniCalendar\")\r\n);\r\nconst ViewMyAlumniSessions = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/Alumni/AlumniSessionLists\"\r\n  )\r\n);\r\nconst ViewUserApply = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Mentee/ApplyAsUser\")\r\n);\r\nconst ViewSettings = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Settings/Settings\")\r\n);\r\n\r\nconst ViewAlumniLists = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Alumni/AlumniLists\")\r\n);\r\n\r\nconst ViewAlumniProfile = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Alumni/AlumniProfile\")\r\n);\r\n\r\nconst ViewRealEstateAgentApply = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/RealEstateAgent/RealEstateAgentRegistration/RealEstateAgentApply\"\r\n  )\r\n);\r\n\r\nconst App = ({ match }) => {\r\n  const statusRes = getStatusRes();\r\n  const roleRes = getRoleRes();\r\n  // console.log(\"role res from index\", roleRes)\r\n  // const redirectTo =\r\n  // roleRes === \"USER\" && `${match.url}/mentor` ||\r\n  // roleRes === \"LAWYER\" && `${match.url}/profile` ||\r\n  // roleRes.some(role => role === \"MENTOR\" || role === \"LAWYER\") && `${match.url}/mentor` ||\r\n  //   statusRes === '0' && `${match.url}/mentor/apply` ||\r\n  //   statusRes === '1' && `${match.url}/mentor/apply` ||\r\n  //   statusRes === '3' && `${match.url}/mentor/apply` ||\r\n  //   statusRes === '7' && `${match.url}/calendar/mentor/appointment` ||\r\n  //   `${match.url}/profile`;\r\n\r\n  let redirectTo;\r\n\r\n  if (roleRes.includes(\"MENTOR\")) {\r\n    if (statusRes === \"0\") {\r\n      redirectTo = `${match.url}/mentor/apply`;\r\n    } else if (statusRes === \"1\") {\r\n      redirectTo = `${match.url}/mentor/apply`;\r\n    } else if (statusRes === \"3\") {\r\n      redirectTo = `${match.url}/mentor/apply`;\r\n    } else if (statusRes === \"7\") {\r\n      redirectTo = `${match.url}/calendar/mentor/appointment`;\r\n    } else {\r\n      redirectTo = `${match.url}/calendar/mentor/appointment`;\r\n    }\r\n  } else if (roleRes.includes(\"USER\")) {\r\n    // redirectTo = `${match.url}/mentor/list`;\r\n    if (statusRes === \"0\") {\r\n      redirectTo = `${match.url}/student/apply`;\r\n    } else if (statusRes === \"1\") {\r\n      redirectTo = `${match.url}/student/apply`;\r\n    } else if (statusRes === \"3\") {\r\n      redirectTo = `${match.url}/student/apply`;\r\n    } else if (statusRes === \"7\") {\r\n      redirectTo = `${match.url}/dashboard`;\r\n    } else {\r\n      redirectTo = `${match.url}/dashboard`;\r\n    }\r\n  } else if (roleRes.includes(\"ALUMNI\")) {\r\n    if (statusRes === \"0\") {\r\n      redirectTo = `${match.url}/alumni/apply`;\r\n    } else if (statusRes === \"1\") {\r\n      redirectTo = `${match.url}/alumni/apply`;\r\n    } else if (statusRes === \"3\") {\r\n      redirectTo = `${match.url}/alumni/apply`;\r\n    } else if (statusRes === \"7\") {\r\n      redirectTo = `${match.url}/jobslist`;\r\n    } else {\r\n      redirectTo = `${match.url}/jobslist`;\r\n    }\r\n  } else if (roleRes.includes(\"HR\")) {\r\n    if (statusRes === \"0\") {\r\n      console.log(\"zero status\");\r\n      redirectTo = `${match.url}/hr/apply`;\r\n    } else if (statusRes === \"1\") {\r\n      redirectTo = `${match.url}/hr/apply`;\r\n    } else if (statusRes === \"3\") {\r\n      redirectTo = `${match.url}/hr/apply`;\r\n    } else if (statusRes === \"7\") {\r\n      redirectTo = `${match.url}/listing/job`;\r\n    } else {\r\n      redirectTo = `${match.url}/listing/job`;\r\n    }\r\n  } else if (roleRes.includes(\"REALESTATE\")) {\r\n    if (statusRes === \"0\") {\r\n      console.log(\"zero status\");\r\n      redirectTo = `${match.url}/agent/apply`;\r\n    } else if (statusRes === \"1\") {\r\n      redirectTo = `${match.url}/agent/apply`;\r\n    } else if (statusRes === \"3\") {\r\n      redirectTo = `${match.url}/agent/apply`;\r\n    } else if (statusRes === \"7\") {\r\n      redirectTo = `${match.url}/listing/stay`;\r\n    } else {\r\n      redirectTo = `${match.url}/listing/stay`;\r\n    }\r\n  } else if (roleRes.includes(\"LAWYER\")) {\r\n    if (statusRes === \"0\") {\r\n      redirectTo = `${match.url}/lawyer/apply`;\r\n    } else if (statusRes === \"1\") {\r\n      redirectTo = `${match.url}/lawyer/apply`;\r\n    } else if (statusRes === \"3\") {\r\n      redirectTo = `${match.url}/lawyer/apply`;\r\n    } else if (statusRes === \"7\") {\r\n      redirectTo = `${match.url}/jobslist`;\r\n    } else {\r\n      redirectTo = `${match.url}/jobslist`;\r\n    }\r\n  } else {\r\n    redirectTo = `${match.url}/lawyer/list`;\r\n  }\r\n\r\n  return (\r\n    <AppLayout>\r\n      <div className=\"dashboard-wrapper\">\r\n        <Suspense fallback={<div className=\"loading\" />}>\r\n          <Switch>\r\n            {/* <Redirect\r\n              exact\r\n              from={`${match.url}/`}\r\n              to={`${match.url}/profile`}\r\n            /> */}\r\n\r\n            <Redirect exact from={`${match.url}/`} to={redirectTo} />\r\n\r\n            <Route\r\n              path={`${match.url}/myapp`}\r\n              exact\r\n              render={(props) => <ViewMyApp {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/myapplications`}\r\n              exact\r\n              render={(props) => <ViewMyApplications {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/dashboard`}\r\n              exact\r\n              render={(props) => <ViewDashBoard {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/mydetails`}\r\n              exact\r\n              render={(props) => <ViewMyDetails {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/mydocuments`}\r\n              exact\r\n              render={(props) => <ViewMyDocuments {...props} />}\r\n            />\r\n\r\n            <Route\r\n              path={`${match.url}/profile`}\r\n              render={(props) => <ProfilePage {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/mentor/apply`}\r\n              render={(props) => <ViewMylogin {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/lawyer/apply`}\r\n              render={(props) => <ViewLawyerlogin {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/alumni/apply`}\r\n              render={(props) => <ViewAlumnilogin {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/mentor/list`}\r\n              render={(props) => <MentorCard {...props} />}\r\n            />\r\n\r\n            {/* <Route\r\n              path={`${match.url}/mentorship`}\r\n              render={(props) => <Mentorship {...props} />}\r\n            /> */}\r\n            <Route\r\n              path={`${match.url}/mentorprofile/:mid`}\r\n              render={(props) => <MentorProfile {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/questions/:questionId`}\r\n              render={(props) => <MentorAnswers {...props} />}\r\n            />\r\n            {/* <Route\r\n              path={`${match.url}/questions/:questionId/answer/:ansid`}\r\n              render={(props) => <MentorAnswers {...props} />}\r\n            /> */}\r\n            <Route\r\n              path={`${match.url}/mentorconsult`}\r\n              render={(props) => <MentorConsult {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/calendar/mentor/appointment`}\r\n              render={(props) => <MentorCreatedSlots {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/sessionmentor`}\r\n              render={(props) => <MentorListSessions {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/questions`}\r\n              render={(props) => <FilterQuestions {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/askquestions`}\r\n              render={(props) => <AskQuestion {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/myactivities`}\r\n              render={(props) => <ViewActivities {...props} />}\r\n            />\r\n            {/* Chat application */}\r\n            <Route\r\n              path={`${match.url}/chat/:pid`}\r\n              render={(props) => <ViewMyChat {...props} />}\r\n            />\r\n\r\n            {/* Calendar */}\r\n\r\n            <Route\r\n              path={`${match.url}/calendar`}\r\n              render={(props) => <Month {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/sessionlists`}\r\n              render={(props) => <MentorSessionList {...props} />}\r\n            />\r\n\r\n            {/* <Route\r\n              path={`${match.url}/gcalendar`}\r\n              render={(props) => <CalendarGoogle {...props} />}\r\n            /> */}\r\n            <Route\r\n              path={`${match.url}/mentor/myprofile`}\r\n              render={(props) => <ViewMyProfile {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/chat/:pid`}\r\n              render={(props) => <ViewMyChat {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/chat`}\r\n              render={(props) => <ViewMyChat {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/mywallet`}\r\n              render={(props) => <ViewMyWallet {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/mylisting`}\r\n              render={(props) => <ViewMyListing {...props} />}\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${match.url}/listing`}\r\n              render={(props) => <ViewListingTab {...props} />}\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${match.url}/listing/others`}\r\n              render={(props) => <ViewStayListingTab {...props} />}\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${match.url}/listing/job`}\r\n              render={(props) => <ViewJobListingTab {...props} />}\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${match.url}/listing/stay`}\r\n              render={(props) => <ViewOtherListingTab {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/listing/others/view/:id`}\r\n              render={(props) => <ViewOtherListing {...props} />}\r\n            />\r\n\r\n            <Route\r\n              path={`${match.url}/listing/job/view/:id`}\r\n              render={(props) => <ViewJobListing {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/listing/stay/view/:id`}\r\n              render={(props) => <ViewStayListing {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/videocall/:userId/:id`}\r\n              render={(props) => <ViewVideoCall {...props} />}\r\n            />\r\n            {/* <Route\r\n              path={`${match.url}/jobposting`}\r\n              render={(props) => <ViewJobPosting {...props} />}\r\n            />\r\n               <Route\r\n              path={`${match.url}/stayposting`}\r\n              render={(props) => <ViewStayPosting {...props} />}\r\n            />\r\n               <Route\r\n              path={`${match.url}/otherposting`}\r\n              render={(props) => <ViewOtherPosting {...props} />}\r\n            />\r\n               <Route\r\n              path={`${match.url}/job/listing`}\r\n              render={(props) => <ViewJobListing {...props} />}\r\n            />\r\n               <Route\r\n              path={`${match.url}/stay/listing`}\r\n              render={(props) => <ViewStayListing {...props} />}\r\n            />\r\n               <Route\r\n              path={`${match.url}/other/listing`}\r\n              render={(props) => <ViewOtherListing {...props} />}\r\n            /> */}\r\n            {/* <Route\r\n              path={`${match.url}/listing`}\r\n              render={(props) => <ViewListing {...props} />}\r\n            /> */}\r\n\r\n            <Route\r\n              path={`${match.url}/lawyerquestions`}\r\n              render={(props) => <ViewLawyer {...props} />}\r\n            />\r\n            {/* <Route\r\n              path={`${match.url}/usercard`}\r\n              render={(props) => <ViewUserCard {...props} />}\r\n            /> */}\r\n            <Route\r\n              path={`${match.url}/lawyer/list`}\r\n              render={(props) => <ViewUserCard {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/jobsdetails/:jid`}\r\n              render={(props) => <ViewJobDetail {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/jobslist`}\r\n              render={(props) => <ViewLawyerJobList {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/lawyerjobslist`}\r\n              render={(props) => <ViewJobList {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/lawyerprofile/:pid`}\r\n              render={(props) => <ViewLawyerProfile {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/lawyer/payment`}\r\n              render={(props) => <ViewLawyerPayment {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/callcompleted/:id/:sid`}\r\n              render={(props) => <ViewCallCompleted {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/classroom`}\r\n              render={(props) => <ViewClassRoom {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/lawyer/myprofile`}\r\n              render={(props) => <ViewLawyerMyProfile {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/lawyer/reviews`}\r\n              render={(props) => <ViewLawyerReviews {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/student/myprofile`}\r\n              render={(props) => <ViewUserMyProfile {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/student/profile/:uid`}\r\n              render={(props) => <ViewUserMyProfile {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/student/apply`}\r\n              render={(props) => <ViewUserApply {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/student/list`}\r\n              render={(props) => <ViewStudentList {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/studentprofile/:sid`}\r\n              render={(props) => <ViewStudentProfile {...props} />}\r\n            />\r\n\r\n            <Route\r\n              path={`${match.url}/settings`}\r\n              render={(props) => <ViewSettings {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/student/:uid`}\r\n              render={(props) => <ViewUserProfile {...props} />}\r\n            />\r\n\r\n            {/* alumnini networking routes start */}\r\n\r\n            <Route\r\n              path={`${match.url}/alumni/alumnilists`}\r\n              render={(props) => <ViewAlumniLists {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/alumni/profile/:mid`}\r\n              render={(props) => <ViewAlumniProfile {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/alumni/myprofile`}\r\n              render={(props) => <ViewAlumniMyProfile {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/calendar/alumni/appointment`}\r\n              render={(props) => <ViewAlumniCalendar {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/alumni/sessionlists`}\r\n              render={(props) => <ViewMyAlumniSessions {...props} />}\r\n            />\r\n\r\n            {/* alumin networking routes ends */}\r\n\r\n            {/* HR routes starts */}\r\n            <Route\r\n              path={`${match.url}/hr/apply`}\r\n              render={(props) => <ViewHrlogin {...props} />}\r\n            />\r\n\r\n            {/* HR routes sends */}\r\n\r\n            {/* real estate agent routes starts */}\r\n            <Route\r\n              path={`${match.url}/agent/apply`}\r\n              render={(props) => <ViewRealEstateAgentApply {...props} />}\r\n            />\r\n            {/* real estate agent routes ends */}\r\n\r\n            {/* <Route\r\n              path={`${match.url}/jobs`}\r\n              render={(props) => <JobPage {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/create-jobs`}\r\n              render={(props) => <CreateJobPage {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/edit-jobs/:id`}\r\n              render={(props) => <EditJobPage {...props} />}\r\n            /> */}\r\n            <Redirect to=\"/error\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ menu }) => {\r\n  const { containerClassnames } = menu;\r\n  return { containerClassnames };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, {})(App));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardSubtitle,\r\n  CardTitle,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\n\r\nconst url = `${baseUrl}/alllistingcard`;\r\n\r\nconst JobListing = () => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPage] = useState(2);\r\n  const [items, setItems] = useState([]);\r\n  const [expandedIndex, setExpandedIndex] = useState(-1);\r\n\r\n  const toggleExpand = (index) => {\r\n    setExpandedIndex((prevIndex) => (prevIndex === index ? -1 : index));\r\n  };\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const res = await axios.get(`${url}?_page=${currentPage}&_limit=8`);\r\n//         console.log(res);\r\n//         const { data } = res;\r\n//         //   setTotalPage(data.totalPage);\r\n//         setItems(data.map((x) => ({ ...x })));\r\n//         setIsLoaded(true);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//         setIsLoaded(true);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, [currentPage]);\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await axios.get(`${url}?_page=${currentPage}&_limit=8`);\r\n        console.log(res);\r\n        const { data } = res;\r\n        const sortedData = data.map(x => ({ ...x })).sort((a, b) => new Date(b.postedOn) - new Date(a.postedOn));\r\n        setItems(sortedData);\r\n        setIsLoaded(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setIsLoaded(true);\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, [currentPage]);\r\n  \r\n\r\n  \r\n  return !isLoaded ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <div className=\"disable-text-selection\">\r\n      {items.map((data, index) => (\r\n        <Row key={data.title} className=\"mb-2\">\r\n          <Colxx xxs=\"12\">\r\n            <Card className=\"mx-auto\" style={{ maxWidth: \"900px\" }}>\r\n              <CardBody className=\"p-4\">\r\n                <Row>\r\n                  <Col>\r\n                    <CardTitle className=\"font-weight-bold\">\r\n                      {data.title}\r\n                    </CardTitle>\r\n                  </Col>\r\n                  <Col className=\"text-right\">\r\n                    <p className=\"text-muted\">\r\n                    Posted on {new Date(data.postedOn).toLocaleString()} \r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n                {expandedIndex === index ? (\r\n                  <CardSubtitle>{data.description}</CardSubtitle>\r\n                ) : (\r\n                  <CardSubtitle>\r\n                    {`${data.description.slice(0, 100)}...`}\r\n                    {data.description.length > 100 && (\r\n                      <Button\r\n                        color=\"link\"\r\n                        onClick={() => toggleExpand(index)}\r\n                        className=\" p-0\"\r\n                      >\r\n                        {expandedIndex === index ? \"Read less\" : \"Read more\"}\r\n                      </Button>\r\n                    )}\r\n                  </CardSubtitle>\r\n                )}\r\n                {data.company ? (\r\n                <Row>\r\n                  <Col>\r\n                    <i className=\"iconsminds-office text-primary\" />{\" \"}\r\n                    {data.company}\r\n                  </Col>\r\n                  <Col>\r\n                    <i className=\"iconsminds-engineering text-primary\" />{\" \"}\r\n                    {data.jobTitle}\r\n                  </Col>\r\n                  <Col>\r\n                    {\" \"}\r\n                    <i className=\"simple-icon-location-pin text-primary\" />{\" \"}\r\n                    {data.jobLocation}\r\n                  </Col>\r\n                  <Col>\r\n                    {\" \"}\r\n                    <i className=\"iconsminds-building text-primary\" />{\" \"}\r\n                    {data.workPlaceType}\r\n                  </Col>\r\n                  <Col>\r\n                    {\" \"}\r\n                    <i className=\"simple-icon-briefcase text-primary\" />{\" \"}\r\n                    {data.employmentType}\r\n                  </Col>\r\n                </Row>\r\n                ) : null}\r\n                {data.skills ? (\r\n                <Row className=\"mt-3\">\r\n                  <Col>\r\n                    {data.skills.map((skill) => (\r\n                      <Button\r\n                        key={skill}\r\n                        color=\"light\"\r\n                        className=\"mb-2 font-weight-semibold mx-2\"\r\n                        size=\"xs\"\r\n                      >\r\n                        {skill}\r\n                      </Button>\r\n                    ))}\r\n                  </Col>\r\n                </Row>\r\n                ) : null}\r\n                {data.apartmentType ? (\r\n                <Row className=\"mb-2\">\r\n                  <Col md={5}>\r\n                    <i className=\"iconsminds-office text-primary\" />{\" \"}\r\n                    <span data-toggle=\"tooltip\" title=\"Apartment Type\">{data.apartmentType}</span> | <span data-toggle=\"tooltip\" title=\"Floor\">{data.floor}</span> |  <span data-toggle=\"tooltip\" title=\"BHK Type\">{data.BHKType}</span>\r\n                  </Col>\r\n                  {/* <Col>\r\n                    <i className=\"iconsminds-engineering text-primary\" />{\" \"}\r\n                    {data.BHKType}\r\n                  </Col> */}\r\n                  <Col>\r\n                    {\" \"}\r\n                    <i className=\"simple-icon-people text-primary\" />{\" \"}\r\n                    <span data-toggle=\"tooltip\" title=\"Room mate\">{data.roomMate}</span>\r\n                    \r\n                  </Col>\r\n                  <Col>\r\n                    {\" \"}\r\n                    {/* <i className=\"iconsminds-building text-primary\" /> */}\r\n                    <span className=\"text-primary\">₹</span>  <span data-toggle=\"tooltip\" title=\"Expected Rent\">{data.expectedRent}</span>\r\n                  </Col>\r\n                  <Col>\r\n                  {/* <a href=\"#\" class=\"btn btn-primary\" title=\"This is a hover tooltip\">Hover me!</a> */}\r\n\r\n                    {\" \"}\r\n                    <i className=\"iconsminds-car text-primary\" />\r\n                    {/* <i className=\"iconsminds-motorcycle text-primary\"/> */}\r\n                    {\"  \"}\r\n                    \r\n                    <span data-toggle=\"tooltip\" title=\"Parking\">{data.parking}</span>\r\n                  </Col>\r\n                </Row>\r\n                ) : null}\r\n                <Row className=\"\">\r\n                  <Col className=\"\">\r\n                    <div className=\"text-muted mt-2\">\r\n                      {data.interestedCount} people have shown interest\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"text-right\">\r\n                  <Button\r\n                      outline\r\n                      color=\"primary\"\r\n                      className=\"mr-2\"\r\n                      size=\"xs\"\r\n                      // onClick={}\r\n                    >\r\n                      <i className=\"iconsminds-sharethis text-primary\" />\r\n                    </Button>\r\n                    <Button outline color=\"primary\" size=\"xs\">\r\n                      I&apos;m interested\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n      ))}\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        totalPage={totalPage}\r\n        onChangePage={(i) => setCurrentPage(i)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobListing;\r\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardSubtitle,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\n// import ToasterComponent from \"../notifications/ToasterComponent\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst JobListing = ({ isPosted }) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPage, setTotalPage] = useState(1);\r\n  const [items, setItems] = useState([]);\r\n  const [expandedIndex, setExpandedIndex] = useState(-1);\r\n  const [isFirst, setIsFirst] = useState(true);\r\n  const [isLast, setIsLast] = useState(true);\r\n  // const [modal, setModal] = useState(false);\r\n  // const [interestPerson, setInterestPerson] = useState([]);\r\n  // const [copiedId, setCopiedId] = useState(null);\r\n\r\n  // const toggle = () => setModal(!modal);\r\n  const url = `${baseUrl}/api/posts/job-post/`;\r\n  const interestedClickUrl = `${baseUrl}/api/posts/job-post/interested`;\r\n  // const history = useHistory();\r\n  const currentUserId = localStorage.getItem(\"userId\");\r\n  const currentUserRole = localStorage.getItem(\"roleRes\");\r\n  const currentUserName = localStorage.getItem(\"userName\");\r\n  const toggleExpand = (index) => {\r\n    setExpandedIndex((prevIndex) => (prevIndex === index ? -1 : index));\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    const params = {\r\n      page: currentPage - 1,\r\n      size: 20,\r\n      // sort: [\"\"]\r\n    };\r\n    try {\r\n      // const res = await axios.get(`${url}?_page=${currentPage}&_limit=8`);\r\n      const res = await axios.get(url, { params });\r\n      const { data } = res;\r\n      const sortedData = data.jobLists\r\n        .map((x) => ({ ...x }))\r\n        .sort((a, b) => new Date(b.postedOn) - new Date(a.postedOn));\r\n      setItems(sortedData);\r\n      setTotalPage(data.pagination.totalPage);\r\n      setIsFirst(data.pagination.first);\r\n      setIsLast(data.pagination.last);\r\n      // setItems(data.map((x) => ({ ...x })));\r\n      setIsLoaded(true);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      setIsLoaded(true);\r\n    }\r\n  };\r\n\r\n  // const fetchInterestedUsers = async (jobId) => {\r\n  //   try {\r\n  //     const res = await axios.get(\r\n  //       `${baseUrl}/api/posts/job-post/interested-users/${jobId}`,\r\n  //       {\r\n  //         params: { page: 0, size: 10 },\r\n  //       }\r\n  //     );\r\n  //     const { data } = res;\r\n  //     return data.interestedUsers; // Return the list of interested users\r\n  //   } catch (error) {\r\n  //     console.error(\"Error fetching interested users:\", error);\r\n  //     return []; // Return an empty array if there's an error\r\n  //   }\r\n  // };\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      fetchData();\r\n      // fetchInterestedUsers();\r\n    }, 1000);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentPage, isPosted, interestedClickUrl]);\r\n\r\n  // const handleClick = (id) => {\r\n  //   history.push(`/app/listing/job/view/${id}`);\r\n  // };\r\n\r\n  function removeTags(str) {\r\n    if (typeof str === \"string\") {\r\n      return str.replace(/<[^>]*>/g, \"\");\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  // const handleInterestedButtonClick = async (isCurrentlyInterested, itemId) => {\r\n  //   setItems((prev) =>\r\n  //     prev.map((job) => {\r\n  //       if (job.id === itemId) {\r\n  //         // const isAlreadyInterested = job.interestedUsers.some(\r\n  //         //   (user) => user.id === currentUserId\r\n  //         // );\r\n  //         if (isCurrentlyInterested) {\r\n  //           // If already interested, decrement the count and remove the user\r\n  //           return {\r\n  //             ...job,\r\n  //             loggedInUserInterested: false,\r\n  //             interestedCount: job.interestedCount - 1,\r\n  //             interestedUsers: job.interestedUsers.filter(\r\n  //               (user) => user.userId !== +currentUserId\r\n  //             ),\r\n  //           };\r\n  //         }\r\n  //         // If not already interested, increment the count and add the user\r\n  //         return {\r\n  //           ...job,\r\n  //           loggedInUserInterested: true,\r\n  //           interestedCount: job.interestedCount + 1,\r\n  //           interestedUsers: [\r\n  //             ...job.interestedUsers,\r\n  //             {\r\n  //               userId: +currentUserId,\r\n  //               role: currentUserRole,\r\n  //               userName: currentUserName,\r\n  //             },\r\n  //           ],\r\n  //         };\r\n  //       }\r\n  //       return job;\r\n  //     })\r\n  //   );\r\n  //   const data = {\r\n  //     jobListingId: itemId,\r\n  //     interested: !isCurrentlyInterested,\r\n  //   };\r\n  //   try {\r\n  //     await axios.post(interestedClickUrl, data);\r\n  //     // ToasterComponent(\"success\", res.data.statuses);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error sending interest:\", error);\r\n  //   }\r\n  // };\r\n\r\n  // const handleInterestPersonPage = (item) => {\r\n  //   setInterestPerson(item);\r\n  //   setModal(!modal);\r\n  // };\r\n\r\n  const handleInterestedButtonClick = async (isCurrentlyInterested, itemId) => {\r\n    setItems((prev) =>\r\n      prev.map((job) => {\r\n        if (job.id === itemId) {\r\n          // Initialize interestedUsers array if it doesn't exist\r\n          const interestedUsers = job.interestedUsers || [];\r\n\r\n          if (isCurrentlyInterested) {\r\n            // If already interested, decrement the count and remove the user\r\n            return {\r\n              ...job,\r\n              loggedInUserInterested: false,\r\n              interestedCount: job.interestedCount - 1,\r\n              interestedUsers: interestedUsers.filter(\r\n                (user) => user.userId !== +currentUserId\r\n              ),\r\n            };\r\n          }\r\n          // If not already interested, increment the count and add the user\r\n          return {\r\n            ...job,\r\n            loggedInUserInterested: true,\r\n            interestedCount: job.interestedCount + 1,\r\n            interestedUsers: [\r\n              ...interestedUsers,\r\n              {\r\n                userId: +currentUserId,\r\n                role: currentUserRole,\r\n                userName: currentUserName,\r\n              },\r\n            ],\r\n          };\r\n        }\r\n        return job;\r\n      })\r\n    );\r\n\r\n    const data = {\r\n      jobListingId: itemId,\r\n      interested: !isCurrentlyInterested,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(interestedClickUrl, data);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      fetchData();\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error sending interest:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // const handleInterestPersonPage = (item) => {\r\n  //   // Set the state with the interested users\r\n  //   setInterestPerson(item);\r\n  //   setModal(!modal);\r\n  // };\r\n  // const handleKeyDown = (event) => {\r\n  //   if (event.key === \"Enter\" || event.key === \" \") {\r\n  //     handleInterestPersonPage();\r\n  //   }\r\n  // };\r\n\r\n  // const handleUserClick = (user) => {\r\n  //   const lowerCaseRole = user.role.toLowerCase();\r\n  //   // history.push(`/app/${lowerCaseRole}profile/${user.userId}`);\r\n  //   if (lowerCaseRole === \"alumni\") {\r\n  //     history.push(`/app/alumni/profile/${user.userId}`);\r\n  //   } else if (lowerCaseRole === \"user\") {\r\n  //     history.push(`/app/user/profile/${user.userId}`);\r\n  //   } else {\r\n  //     history.push(`/app/${lowerCaseRole}profile/${user.userId}`);\r\n  //   }\r\n  // };\r\n\r\n  // const handleShareButtonClick = async (id) => {\r\n  //   try {\r\n  //     await navigator.clipboard.writeText(\r\n  //       `${window.location.href}/joblisting/view/${id}`\r\n  //     );\r\n  //     setCopiedId(id);\r\n  //     setTimeout(() => {\r\n  //       setCopiedId(null);\r\n  //     }, 3000);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error copying link:\", error);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      {/* <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader className=\"p-3\" toggle={toggle}>\r\n          Interested\r\n        </ModalHeader>\r\n        <ModalBody className=\"p-3\">\r\n          <ListGroup flush>\r\n            {interestPerson?.length > 0 ? (\r\n              interestPerson.map((data) => (\r\n                <ListGroupItem\r\n                  key={data.userId}\r\n                  tag=\"a\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  // href={`/app/mentorprofile/${data.id}`}\r\n                  onClick={() => handleUserClick(data)}\r\n                >\r\n                  {data.userName}\r\n                </ListGroupItem>\r\n              ))\r\n            ) : (\r\n              <p>No interested persons yet.</p>\r\n            )}\r\n          </ListGroup>\r\n        </ModalBody>\r\n      </Modal> */}\r\n      {/* {!isLoaded ? (\r\n        <div className=\"loading\" />\r\n      ) : (\r\n        <>\r\n          {!items?.length > 0 ? (\r\n            <Card className=\"d-flex justify-content-center align-items-center \">\r\n              <h2 className=\"mt-4 mb-4\">There are no posts available</h2>\r\n            </Card>\r\n          ) : (\r\n            <div className=\"disable-text-selection\">\r\n              {items.map((data, index) => (\r\n                <Row key={data.title + data.id} className=\"mb-2\">\r\n                  <Colxx xxs=\"12\">\r\n                    <Card className=\"mx-auto\" style={{ maxWidth: \"900px\" }}>\r\n                      <CardBody className=\"p-4\">\r\n                        <Row>\r\n                          <Col>\r\n                            <CardTitle className=\"font-weight-bold\">\r\n                              {data.title}\r\n                            </CardTitle>\r\n                          </Col>\r\n                          <Col className=\"text-right\">\r\n                            <p className=\"text-muted\">\r\n                              Posted on\r\n                              <TimestampConverter\r\n                                timeStamp={data.postedOn}\r\n                                format=\"datetime\"\r\n                              />\r\n                            </p>\r\n                          </Col>\r\n                        </Row>\r\n                        {expandedIndex === index ? (\r\n                          <CardSubtitle>\r\n                            {removeTags(data.description)}\r\n                          </CardSubtitle>\r\n                        ) : (\r\n                          <CardSubtitle>\r\n                            {`${(\r\n                              (data.description &&\r\n                                removeTags(data.description)) ||\r\n                              \"\"\r\n                            ).slice(0, 100)}`}{\" \"}\r\n                            {data.description?.length > 100 && (\r\n                              <Button\r\n                                color=\"link\"\r\n                                onClick={() => toggleExpand(index)}\r\n                                className=\" p-0\"\r\n                              >\r\n                                {expandedIndex === index\r\n                                  ? \"Read less\"\r\n                                  : \"Read more\"}\r\n                              </Button>\r\n                            )}\r\n                          </CardSubtitle>\r\n                        )}\r\n                       \r\n                        <Row>\r\n                          <Col xs={12} sm={6} md={4} lg={2}>\r\n                            <i className=\"iconsminds-office text-primary\" />{\" \"}\r\n                            {data.company}\r\n                          </Col>\r\n                          <Col xs={12} sm={6} md={4} lg={3}>\r\n                            <i className=\"iconsminds-engineering text-primary\" />{\" \"}\r\n                            {data.jobTitle}\r\n                          </Col>\r\n                          <Col xs={12} sm={6} md={4} lg={2}>\r\n                            <i className=\"simple-icon-location-pin text-primary\" />{\" \"}\r\n                            {data.jobLocation}\r\n                          </Col>\r\n                          <Col xs={12} sm={6} md={4} lg={2}>\r\n                            <i className=\"iconsminds-building text-primary\" />{\" \"}\r\n                            {data.workPlaceType}\r\n                          </Col>\r\n                          <Col xs={12} sm={6} md={4} lg={2}>\r\n                            <i className=\"simple-icon-briefcase text-primary\" />{\" \"}\r\n                            {data.employmentType}\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"mt-3\">\r\n                          <Col>\r\n                            {data.skills?.map((skill) => (\r\n                              <Button\r\n                                key={skill}\r\n                                color=\"light\"\r\n                                className=\"mb-2 font-weight-semibold mx-2\"\r\n                                size=\"xs\"\r\n                              >\r\n                                {skill}\r\n                              </Button>\r\n                            ))}\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className=\"\">\r\n                          <Col\r\n                            className=\"text-start text-sm-left\"\r\n                            xs={12}\r\n                            sm={6}\r\n                          >\r\n                            <div\r\n                              \r\n                              className=\"text-muted mt-2\"\r\n                             \r\n                            >\r\n                              {data.interestedCount} people have shown interest\r\n                            </div>\r\n                          </Col>\r\n                          <Col\r\n                            className=\"text-sm-right text-start mt-sm-0 mt-2\"\r\n                            xs={12}\r\n                            sm={6}\r\n                          >\r\n                            <Button\r\n                              outline\r\n                              color=\"primary\"\r\n                              className=\"mr-2\"\r\n                              size=\"xs\"\r\n                              onClick={() => handleClick(data.id)}\r\n                              data-toggle=\"tooltip\"\r\n                              title=\"Full screen\"\r\n                            >\r\n                              <i className=\"simple-icon-size-fullscreen text-primary\" />\r\n                            </Button>\r\n                            {copiedId === data.id && (\r\n                              <span className=\"text-success mr-2\">\r\n                                Link copied to clipboard!\r\n                              </span>\r\n                            )}\r\n                            <Button\r\n                              outline\r\n                              color=\"primary\"\r\n                              className=\"mr-2\"\r\n                              size=\"xs\"\r\n                              onClick={() => handleShareButtonClick(data.id)}\r\n                              data-toggle=\"tooltip\"\r\n                              title=\"copy\"\r\n                            >\r\n                              <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                width=\"16\"\r\n                                height=\"16\"\r\n                                fill=\"currentColor\"\r\n                                className=\"bi bi-copy\"\r\n                                viewBox=\"0 0 16 16\"\r\n                              >\r\n                                <path\r\n                                  fillRule=\"evenodd\"\r\n                                  d=\"M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z\"\r\n                                />\r\n                              </svg>\r\n                            </Button>\r\n                            \r\n                            <Button\r\n                              onClick={() =>\r\n                                handleInterestedButtonClick(\r\n                                  data.loggedInUserInterested,\r\n                                  data.id\r\n                                )\r\n                              }\r\n                              outline\r\n                              // className=\"d-none d-lg-block\"\r\n                              color=\"primary\"\r\n                              size=\"xs\"\r\n                              active={data.loggedInUserInterested}\r\n                            >\r\n                              I&apos;m interested\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Colxx>\r\n                </Row>\r\n              ))}\r\n              <Pagination\r\n                currentPage={currentPage}\r\n                totalPage={totalPage}\r\n                onChangePage={(i) => setCurrentPage(i)}\r\n                lastIsActive={isFirst}\r\n                firstIsActive={isLast}\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      )} */}\r\n\r\n      {/* new design starts */}\r\n\r\n      {!isLoaded ? (\r\n        <div className=\"loading\" />\r\n      ) : (\r\n        <>\r\n          {!items?.length > 0 ? (\r\n            <Card className=\"d-flex justify-content-center align-items-center \">\r\n              <h2 className=\"mt-4 mb-4\">There are no posts available</h2>\r\n            </Card>\r\n          ) : (\r\n            <div className=\"disable-text-selection\">\r\n              <Row>\r\n                {items.map((data, index) => (\r\n                  <Col\r\n                    xxs=\"12\"\r\n                    md=\"6\"\r\n                    lg=\"6\"\r\n                    sm=\"12\"\r\n                    key={data.title + data.id}\r\n                    className=\"mb-2\"\r\n                  >\r\n                    <Card className=\" my-2\">\r\n                      <CardBody className=\"p-3\">\r\n                        <CardImg\r\n                          top\r\n                          src={\r\n                            data.image && data.image.imageUrl\r\n                              ? `${baseUrl}/${data.image.imageUrl}`\r\n                              : \"https://via.placeholder.com/300x200?text=No%20Image\"\r\n                          }\r\n                          alt=\"Card image cap\"\r\n                          className=\"thumbnail\"\r\n                          style={{\r\n                            height: \"300px\",\r\n                            width: \"100%\",\r\n                            objectFit: \"fill\",\r\n                          }}\r\n                        />\r\n\r\n                        <Row>\r\n                          <Col>\r\n                            <h3 className=\"font-weight-bold mt-2 text-large\">\r\n                              {data.jobTitle}\r\n                            </h3>\r\n                            <h6>{data.company}</h6>\r\n                          </Col>\r\n                        </Row>\r\n                        {expandedIndex === index ? (\r\n                          <CardSubtitle>\r\n                            {removeTags(data.description)}\r\n                          </CardSubtitle>\r\n                        ) : (\r\n                          <CardSubtitle>\r\n                            {`${(\r\n                              (data.description &&\r\n                                removeTags(data.description)) ||\r\n                              \"\"\r\n                            ).slice(0, 100)}`}{\" \"}\r\n                            {data.description?.length > 100 && (\r\n                              <Button\r\n                                color=\"link\"\r\n                                onClick={() => toggleExpand(index)}\r\n                                className=\" p-0\"\r\n                              >\r\n                                {expandedIndex === index\r\n                                  ? \"Read less\"\r\n                                  : \"Read more\"}\r\n                              </Button>\r\n                            )}\r\n                          </CardSubtitle>\r\n                        )}\r\n\r\n                        <Row>\r\n                          <Col>\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"mb-2 font-weight-semibold\"\r\n                              size=\"xs\"\r\n                            >\r\n                              job\r\n                            </Button>\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"mb-2 font-weight-semibold mx-1\"\r\n                              size=\"xs\"\r\n                            >\r\n                              fresher\r\n                            </Button>\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"mb-2 font-weight-semibold mx-1\"\r\n                              size=\"xs\"\r\n                            >\r\n                              {data.workPlaceType}\r\n                            </Button>\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"mb-2 font-weight-semibold mx-1\"\r\n                              size=\"xs\"\r\n                            >\r\n                              {data.jobLocation}\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"mt-2 text-one\">\r\n                          <Col className=\"\" xs={12} sm={8}>\r\n                            <span className=\"text-muted \">\r\n                              Posted on\r\n                              <TimestampConverter\r\n                                timeStamp={data.postedOn}\r\n                                format=\"datetime\"\r\n                              />\r\n                            </span>\r\n                          </Col>\r\n                          <Col\r\n                            // className=\"text-sm-right text-start mt-sm-0 mt-2\"\r\n                            className=\"d-flex justify-content-sm-end justify-content-start align-items-center mt-sm-0 mt-2\"\r\n                            xs={12}\r\n                            sm={4}\r\n                          >\r\n                            <Button\r\n                              onClick={() =>\r\n                                handleInterestedButtonClick(\r\n                                  data.loggedInUserInterested,\r\n                                  data.id\r\n                                )\r\n                              }\r\n                              outline\r\n                              // className=\"d-none d-lg-block\"\r\n                              color=\"primary\"\r\n                              size=\"xs\"\r\n                              active={data.loggedInUserInterested}\r\n                            >\r\n                              I&apos;m interested\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        {/* <Row className=\"mt-2 \">\r\n                          <Col className=\"d-flex justify-content-between align-items-center\">\r\n                            <span className=\"text-muted \">\r\n                              Posted on\r\n                              <TimestampConverter\r\n                                timeStamp={data.postedOn}\r\n                                format=\"datetime\"\r\n                              />\r\n                            </span>\r\n                            <Button\r\n                              onClick={() =>\r\n                                handleInterestedButtonClick(\r\n                                  data.loggedInUserInterested,\r\n                                  data.id\r\n                                )\r\n                              }\r\n                              outline\r\n                              // className=\"d-none d-lg-block\"\r\n                              color=\"primary\"\r\n                              size=\"xs\"\r\n                              active={data.loggedInUserInterested}\r\n                            >\r\n                              I&apos;m interested\r\n                            </Button>\r\n                          </Col>\r\n                        </Row> */}\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n              <Pagination\r\n                currentPage={currentPage}\r\n                totalPage={totalPage}\r\n                onChangePage={(i) => setCurrentPage(i)}\r\n                lastIsActive={isFirst}\r\n                firstIsActive={isLast}\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n      {/* new design ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobListing;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst DesktopNotifications = ({ title }) => {\r\n  const [permission, setPermission] = useState(Notification.permission);\r\n\r\n  useEffect(() => {\r\n    const showNotification = () => {\r\n      // eslint-disable-next-line\r\n      new Notification(`Someone is interested in your post: ${title}`, {\r\n        body: 'Check Notification.',\r\n        icon: 'https://gogo-react.coloredstrategies.com/assets/img/profiles/l-1.jpg', \r\n      });\r\n    };\r\n\r\n    const requestNotificationPermission = () => {\r\n      Notification.requestPermission().then((result) => {\r\n        setPermission(result);\r\n        if (result === 'granted') {\r\n          showNotification();\r\n        }\r\n      });\r\n    };\r\n\r\n    if (permission === 'granted') {\r\n      showNotification();\r\n    } else if (permission === 'default') {\r\n      requestNotificationPermission();\r\n    }\r\n  }, [permission, title]);\r\n\r\n  return null; \r\n};\r\n\r\nexport default DesktopNotifications;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardSubtitle,\r\n  CardTitle,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\nimport DesktopNotifications from \"../notifications/DesktopNotifications\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst JobListing = ({ isPosted }) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [totalPage] = useState(2);\r\n  const [items, setItems] = useState([]);\r\n  const [pagination, setPagination] = useState([]);\r\n  const [expandedIndex, setExpandedIndex] = useState(-1);\r\n  const [clickedCardTitle, setClickedCardTitle] = useState(\"\");\r\n  // const [copied, setCopied] = useState(false);\r\n  const [copiedId, setCopiedId] = useState(null);\r\n  const [noData, setNoData] = useState(false);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  console.log(\"data\", noData);\r\n  const url = `${baseUrl}/api/posts/other-post/`;\r\n\r\n  const interestedClickUrl = `${baseUrl}/api/posts/other-post/interest`;\r\n\r\n  const history = useHistory();\r\n\r\n  const toggleExpand = (index) => {\r\n    setExpandedIndex((prevIndex) => (prevIndex === index ? -1 : index));\r\n  };\r\n  // const handleInterest = (title) => {\r\n  //   setClickedCardTitle(title);\r\n  // };\r\n  // const handleInterest = (title) => {\r\n  //   // setClickedCardTitle(title);\r\n  //   // DesktopNotifications({ title });\r\n  //   <DesktopNotifications title={title} />\r\n  // };\r\n  const fetchData = async () => {\r\n    const params = {\r\n      page: currentPage - 1,\r\n      size: 20,\r\n      // sort: [\"\"]\r\n    };\r\n    try {\r\n      // const res = await axios.get(`${url}?_page=${currentPage}&_limit=8`);\r\n      const res = await axios.get(url, { params });\r\n      // console.log(\"other data\",res);\r\n      const { data } = res;\r\n      // const sortedData = data\r\n      //   .map((x) => ({ ...x }))\r\n      //   .sort((a, b) => new Date(b.postedOn) - new Date(a.postedOn));\r\n      setItems(data.otherposts);\r\n      setPagination(data.paginationMeta);\r\n      setIsLoaded(true);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      // console.log(\"ck\",error.response.data.statuses[0].code)\r\n      setIsLoaded(true);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses &&\r\n        error.response.data.statuses[0].code === 40348\r\n      ) {\r\n        setNoData(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      fetchData();\r\n    }, 3000);\r\n  }, [currentPage, isPosted]);\r\n\r\n  const handleClick = (id) => {\r\n    history.push(`/app/listing/others/view/${id}`);\r\n  };\r\n\r\n  // const removeTags = (str) => {\r\n  //   if (str === null || str === '') {\r\n  //       return false;\r\n  //   }\r\n  //   const newStr = str.toString();\r\n  //   return newStr.replace(/<\\/?[^>]+(>|$)/g, ' ').trim().replace(/\\s+/g, ' ');\r\n  // };\r\n  function removeTags(str) {\r\n    if (typeof str !== \"string\") {\r\n      return \"\";\r\n    }\r\n    return str.replace(/(<([^>]+)>)/gi, \"\");\r\n  }\r\n\r\n  const handleInterestedButtonClick = async (id, title) => {\r\n    const data = {\r\n      otherPostId: id,\r\n      interested: true,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(interestedClickUrl, data);\r\n      setClickedCardTitle(title);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      fetchData();\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error sending interest:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleShareButtonClick = async (id) => {\r\n    try {\r\n      await navigator.clipboard.writeText(\r\n        `${window.location.href}/otherlisting/view/${id}`\r\n      );\r\n      setCopiedId(id);\r\n      setTimeout(() => {\r\n        setCopiedId(null);\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error(\"Error copying link:\", error);\r\n    }\r\n  };\r\n\r\n  return !isLoaded ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <>\r\n      {!items.length > 0 ? (\r\n        <Card className=\"d-flex justify-content-center align-items-center \">\r\n          <h2 className=\"mt-4 mb-4\">There are no posts available</h2>\r\n        </Card>\r\n      ) : (\r\n        <div className=\"disable-text-selection\">\r\n          {items.map((data, index) => (\r\n            <Row key={data.id} className=\"mb-2\">\r\n              <Colxx xxs=\"12\">\r\n                <Card className=\"mx-auto\" style={{ maxWidth: \"900px\" }}>\r\n                  <CardBody className=\"p-4\">\r\n                    <Row>\r\n                      <Col>\r\n                        <CardTitle className=\"font-weight-bold\">\r\n                          {data.title}\r\n                        </CardTitle>\r\n                      </Col>\r\n                      <Col className=\"text-right\">\r\n                        <p className=\"text-muted\">\r\n                          {/* Posted on {new Date(data.postedOn).toLocaleDateString()}{\" \"} */}\r\n                          {/* Posted on {new Date(data.postedOn).toLocaleString()} */}\r\n                          Posted on{\" \"}\r\n                          <TimestampConverter\r\n                            timeStamp={data.postedOn}\r\n                            format=\"datetime\"\r\n                          />\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                    {expandedIndex === index ? (\r\n                      <CardSubtitle>\r\n                        {removeTags(data.description)}\r\n                      </CardSubtitle>\r\n                    ) : (\r\n                      <CardSubtitle>\r\n                        {`${removeTags(data.description).slice(0, 100)}...`}\r\n                        {data.description.length > 100 && (\r\n                          <Button\r\n                            color=\"link\"\r\n                            onClick={() => toggleExpand(index)}\r\n                            className=\" p-0\"\r\n                          >\r\n                            {expandedIndex === index\r\n                              ? \"Read less\"\r\n                              : \"Read more\"}\r\n                          </Button>\r\n                        )}\r\n                      </CardSubtitle>\r\n                    )}\r\n\r\n                    <Row className=\"align-items-center\">\r\n                      <Col className=\"\">\r\n                        {/* {data.interestedCount && (\r\n                          <div className=\"text-muted mt-2\">\r\n                            {data.interestedCount} people have shown interest\r\n                          </div>\r\n                        )} */}\r\n                        {data.interestedCount} people have shown interest\r\n                      </Col>\r\n                      <Col className=\"text-md-right mt-2 mt-md-0 d-flex justify-content-end\">\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"mr-2\"\r\n                          size=\"xs\"\r\n                          onClick={() => handleClick(data.id)}\r\n                          data-toggle=\"tooltip\"\r\n                          title=\"Full screen\"\r\n                        >\r\n                          <i className=\"simple-icon-size-fullscreen text-primary\" />\r\n                        </Button>\r\n                        {copiedId === data.id && (\r\n                          <span className=\"text-success mr-2\">\r\n                            Link copied to clipboard!\r\n                          </span>\r\n                        )}\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"mr-2\"\r\n                          size=\"xs\"\r\n                          onClick={() => handleShareButtonClick(data.id)}\r\n                          data-toggle=\"tooltip\"\r\n                          title=\"copy\"\r\n                        >\r\n                          <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"16\"\r\n                            height=\"16\"\r\n                            fill=\"currentColor\"\r\n                            className=\"bi bi-copy\"\r\n                            viewBox=\"0 0 16 16\"\r\n                          >\r\n                            <path\r\n                              fillRule=\"evenodd\"\r\n                              d=\"M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z\"\r\n                            />\r\n                          </svg>\r\n                        </Button>\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"d-block d-lg-none\"\r\n                          size=\"xs\"\r\n                          active={data.loggedInUserInterested}\r\n                          // onClick={() =>\r\n                          //   handleInterestedButtonClick(data.id, data.title)\r\n                          // }\r\n                          onClick={() =>\r\n                            handleInterestedButtonClick(data.id, data.title)\r\n                          }\r\n                          // onClick={() =>\r\n                          //   handleInterestedButtonClick(\r\n                          //     data.loggedInUserInterested,\r\n                          //     data.id\r\n                          //   )\r\n                          // }\r\n                          onMouseEnter={() => setIsHovered(true)}\r\n                          onMouseLeave={() => setIsHovered(false)}\r\n                        >\r\n                          <i\r\n                            // className={`iconsminds-like ${\r\n                            //   data.loggedInUserInterested\r\n                            //     ? \"text-white\"\r\n                            //     : \"text-primary\"\r\n                            // }`}\r\n                            className={`iconsminds-like ${\r\n                              data.loggedInUserInterested || isHovered\r\n                                ? \"text-white\"\r\n                                : \"text-primary\"\r\n                            }`}\r\n                          />\r\n                        </Button>\r\n                        {/* <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          size=\"xs\"\r\n                          className=\"d-none d-lg-block\"\r\n                          onClick={() =>\r\n                            handleInterestedButtonClick(data.id, data.title)\r\n                          }\r\n                        >\r\n                          I&apos;m interested\r\n                        </Button> */}\r\n                        <Button\r\n                          // onClick={() =>\r\n                          //   handleInterestedButtonClick(\r\n                          //     data.loggedInUserInterested,\r\n                          //     data.id\r\n                          //   )\r\n                          // }\r\n                          onClick={() =>\r\n                            handleInterestedButtonClick(data.id, data.title)\r\n                          }\r\n                          outline\r\n                          color=\"primary\"\r\n                          size=\"xs\"\r\n                          active={data.loggedInUserInterested}\r\n                          className=\"d-none d-lg-block \"\r\n                        >\r\n                          I&apos;m interested\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </Colxx>\r\n            </Row>\r\n          ))}\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            totalPage={pagination.totalPage}\r\n            onChangePage={(i) => setCurrentPage(i)}\r\n            lastIsActive={pagination.first}\r\n            firstIsActive={pagination.last}\r\n          />\r\n          {clickedCardTitle && (\r\n            <DesktopNotifications title={clickedCardTitle} />\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobListing;\r\n","import axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\nimport {\r\n  // Collapse,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardSubtitle,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst StayListing = ({ isPosted }) => {\r\n  const [expandedIndex, setExpandedIndex] = useState(-1);\r\n  const [items, setItems] = useState([]);\r\n  const [pagination, setPagination] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  // const [copiedId, setCopiedId] = useState(null);\r\n  const [isOwnerInfoVisible, setIsOwnerInfoVisible] = useState(false);\r\n\r\n  // const toggleOwnerInfo = () => {\r\n  //   setIsOwnerInfoVisible((prev) => !prev);\r\n  // };\r\n  const toggleOwnerInfo = (id) => {\r\n    setIsOwnerInfoVisible((prevId) => (prevId === id ? null : id)); // Toggle owner info\r\n  };\r\n\r\n  // const [totalPage] = useState(2);\r\n  // const history = useHistory();\r\n\r\n  const url = `${baseUrl}/api/posts/stay-post/`;\r\n  // const interestedClickUrl = `${baseUrl}/api/posts/stay-post/intereststayroomId=${id}&interested=true`;\r\n  const interestedClickUrl = `${baseUrl}/api/posts/stay-post/interest`;\r\n\r\n  const fetchDataFromServer = async () => {\r\n    try {\r\n      const params = {\r\n        page: currentPage - 1,\r\n        size: 20,\r\n        // sort: [\"\"]\r\n      };\r\n      // const res = await axios.get(`${url}?_page=${currentPage}&_limit=4`);\r\n      const res = await axios.get(url, { params });\r\n      const { data } = res;\r\n      // const sortedData = data.map(x => ({ ...x })).sort((a, b) => new Date(b.postedOn) - new Date(a.postedOn));\r\n      setPagination(data.paginationMeta);\r\n      setItems(data.stayrooms);\r\n      setIsLoaded(true);\r\n\r\n      console.log(data.stayrooms);\r\n    } catch (error) {\r\n      setIsLoaded(true);\r\n\r\n      console.error(\"Error while fetching data from the server\", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchDataFromServer();\r\n  }, [currentPage, isPosted]);\r\n\r\n  const toggleExpand = (index) => {\r\n    if (expandedIndex === index) {\r\n      setExpandedIndex(-1);\r\n    } else {\r\n      setExpandedIndex(index);\r\n    }\r\n  };\r\n  // const handleClick = (id) => {\r\n  //   history.push(`/app/listing/stay/view/${id}`);\r\n  // };\r\n\r\n  const handleInterestedButtonClick = async (id) => {\r\n    const data = {\r\n      // jobListingId: id,\r\n      stayroomId: id,\r\n      interested: true,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(interestedClickUrl, data);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      fetchDataFromServer();\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error sending interest:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  function removeTags(str) {\r\n    if (typeof str !== \"string\") {\r\n      return \"\";\r\n    }\r\n    return str.replace(/(<([^>]+)>)/gi, \"\");\r\n  }\r\n\r\n  // const handleShareButtonClick = async (id) => {\r\n  //   try {\r\n  //     await navigator.clipboard.writeText(\r\n  //       `${window.location.href}/staylisting/view/${id}`\r\n  //     );\r\n  //     setCopiedId(id);\r\n  //     setTimeout(() => {\r\n  //       setCopiedId(null);\r\n  //     }, 3000);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error copying link:\", error);\r\n  //   }\r\n  // };\r\n\r\n  return !isLoaded ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <>\r\n      {/* {!items.length > 0 ? (\r\n        <Card className=\"d-flex justify-content-center align-items-center \">\r\n          <h2 className=\"mt-4 mb-4\">There are no posts available</h2>\r\n        </Card>\r\n      ) : (\r\n        <div className=\"disable-text-selection\">\r\n          {items.map((data, index) => (\r\n            <Row key={data.title} className=\"mb-2\">\r\n              <Colxx xxs=\"12\">\r\n                <Card className=\"mx-auto\" style={{ maxWidth: \"900px\" }}>\r\n                  <CardBody className=\"p-4\">\r\n                    <Row>\r\n                      <Col>\r\n                        <CardTitle className=\"font-weight-bold\">\r\n                          {data.title}\r\n                        </CardTitle>\r\n                      </Col>\r\n\r\n                      <Col className=\"text-right\">\r\n                        <p className=\"text-muted\">\r\n                          Posted on{\" \"}\r\n                          <TimestampConverter\r\n                            timeStamp={data.postedOn}\r\n                            format=\"datetime\"\r\n                          />\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                   \r\n                    {expandedIndex === index ? (\r\n                      <CardSubtitle>\r\n                        {removeTags(data.description)}\r\n                      </CardSubtitle>\r\n                    ) : (\r\n                      <CardSubtitle>\r\n                        {`${removeTags(data.description).slice(0, 100)}...`}\r\n                        {data.description.length > 100 && (\r\n                          <Button\r\n                            color=\"link\"\r\n                            onClick={() => toggleExpand(index)}\r\n                            className=\" p-0\"\r\n                          >\r\n                            {expandedIndex === index\r\n                              ? \"Read less\"\r\n                              : \"Read more\"}\r\n                          </Button>\r\n                        )}\r\n                      </CardSubtitle>\r\n                    )}\r\n\r\n                    <Row>\r\n                      <Col md={5}>\r\n                        <i className=\"iconsminds-office text-primary\" />{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"Apartment Type\">\r\n                          {data.apartmentType}\r\n                        </span>{\" \"}\r\n                        |{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"Floor\">\r\n                          {data.floor}\r\n                        </span>{\" \"}\r\n                        |{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"BHK Type\">\r\n                          {data.bhkType}\r\n                        </span>\r\n                      </Col>\r\n\r\n                      <Col>\r\n                        <i className=\"simple-icon-people text-primary\" />{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"Room mate\">\r\n                          {data.roomMate}\r\n                        </span>\r\n                      </Col>\r\n                      <Col>\r\n                        <span className=\"text-primary\">₹</span>{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"Expected Rent\">\r\n                          {data.expectedRent}\r\n                        </span>\r\n                      </Col>\r\n                      <Col>\r\n                        <i className=\"iconsminds-car text-primary\" />\r\n\r\n                        <span data-toggle=\"tooltip\" title=\"Parking\">\r\n                          {data.parking}\r\n                        </span>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row className=\"mt-2\">\r\n                      <Col className=\"text-start text-sm-left\" xs={12} sm={6}>\r\n                        <div className=\"text-muted mt-2\">\r\n                          {data.interestedCount} people have shown interest\r\n                        </div>\r\n                      </Col>\r\n                      <Col\r\n                        className=\"text-sm-right texr-start mt-sm-0 mt-2\"\r\n                        xs={12}\r\n                        sm={6}\r\n                      >\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"mr-2\"\r\n                          size=\"xs\"\r\n                          onClick={() => handleClick(data.id)}\r\n                          data-toggle=\"tooltip\"\r\n                          title=\"Full screen\"\r\n                        >\r\n                          <i className=\"simple-icon-size-fullscreen text-primary\" />\r\n                        </Button>\r\n                        {copiedId === data.id && (\r\n                          <span className=\"text-success mr-2\">\r\n                            Link copied to clipboard!\r\n                          </span>\r\n                        )}\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"mr-2\"\r\n                          size=\"xs\"\r\n                          onClick={() => handleShareButtonClick(data.id)}\r\n                          data-toggle=\"tooltip\"\r\n                          title=\"copy\"\r\n                        >\r\n                          <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"16\"\r\n                            height=\"16\"\r\n                            fill=\"currentColor\"\r\n                            className=\"bi bi-copy\"\r\n                            viewBox=\"0 0 16 16\"\r\n                          >\r\n                            <path\r\n                              fillRule=\"evenodd\"\r\n                              d=\"M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z\"\r\n                            />\r\n                          </svg>\r\n                        </Button>\r\n                        <Button\r\n                          onClick={() => handleInterestedButtonClick(data.id)}\r\n                          outline\r\n                          color=\"primary\"\r\n                          size=\"xs\"\r\n                          active={data.loggedInUserInterested}\r\n                        >\r\n                          I&apos;m interested\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </Colxx>\r\n            </Row>\r\n          ))}\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            totalPage={pagination.totalPage}\r\n            onChangePage={(i) => setCurrentPage(i)}\r\n            lastIsActive={pagination.first}\r\n            firstIsActive={pagination.last}\r\n          />\r\n        </div>\r\n      )} */}\r\n\r\n      {/* new design starts  */}\r\n      {!items.length > 0 ? (\r\n        <Card className=\"d-flex justify-content-center align-items-center \">\r\n          <h2 className=\"mt-4 mb-4\">There are no posts available</h2>\r\n        </Card>\r\n      ) : (\r\n        <div className=\"disable-text-selection\">\r\n          <Row>\r\n            {items.map((data, index) => (\r\n              <Col xxs=\"12\" md={6} key={data.title} className=\"mb-2\">\r\n                <Card className=\"mx-auto mt-2\">\r\n                  <CardBody className=\"p-4 position-relative\">\r\n                    <Button\r\n                      className=\"rounded-circle px-2 py-0   text-one bg-white position-absolute \"\r\n                      style={{\r\n                        border: \"3px solid #a16390\",\r\n                        top: \"30px\",\r\n                        right: \"30px\",\r\n                        cursor: \"pointer\",\r\n                        zIndex: 10,\r\n                      }}\r\n                      // onClick={toggleOwnerInfo}\r\n                      onClick={() => toggleOwnerInfo(data.id)}\r\n                    >\r\n                      <i\r\n                        className=\"fa-solid fa-user\"\r\n                        color=\"secondary\"\r\n                        style={{ color: \"#a16390\" }}\r\n                      />\r\n                    </Button>\r\n                    <CardImg\r\n                      top\r\n                      // src=\"/assets/img/cards/thumb-1.jpg\"\r\n                      // src=\"https://images.pexels.com/photos/106399/pexels-photo-106399.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\"\r\n                      src={\r\n                        data.images.length > 0\r\n                          ? `${baseUrl}/${data.images[0].imageUrl}` // Use the first image URL\r\n                          : \"https://via.placeholder.com/300x200?text=No+Image\" // Fallback image\r\n                      }\r\n                      alt=\"Card image cap\"\r\n                      className=\"mb-2\"\r\n                      style={{\r\n                        opacity: isOwnerInfoVisible === data.id ? 0.1 : 1, // Reduce opacity when info is visible\r\n                        transition: \"opacity 0.3s ease-in-out\",\r\n                        height: \"300px\",\r\n                        objectFit: \"fill\", // Add a transition effect\r\n                      }}\r\n                    />\r\n                    {/* <span>\r\n                      <h2>Owner: Prakash Raj</h2>\r\n                      <h5>\r\n                        <i className=\"simple-icon-phone\" /> 9876543210\r\n                      </h5>\r\n                      <h5>\r\n                        <i className=\"iconsminds-mail-link\" />\r\n                        prakash@gmail.com\r\n                      </h5>\r\n                    </span> */}\r\n\r\n                    {isOwnerInfoVisible === data.id && (\r\n                      <span\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          top: \"100px\",\r\n                          right: \"80px\",\r\n\r\n                          padding: \"10px\",\r\n                          borderRadius: \"5px\",\r\n                          // boxShadow: \"0 0 5px rgba(0,0,0,0.5)\",\r\n                        }}\r\n                        className=\"font-weight-bold\"\r\n                      >\r\n                        <h2 className=\"text-large\">Owner: {data.ownerName}</h2>\r\n                        <h4 className=\"\">\r\n                          {/* <i className=\"simple-icon-phone\" /> */}\r\n                          <i className=\"fa-solid fa-phone mr-2\" />\r\n                          {data.mobileNumber}\r\n                        </h4>\r\n                        <h4\r\n                          className=\"d-inline-flex align-items-center\"\r\n                          style={{ display: \"inline-flex\" }}\r\n                        >\r\n                          {/* <i className=\"iconsminds-envelope\" color=\"primary\" />{\" \"} */}\r\n                          <i className=\"fa-solid fa-envelope mr-2\" />{\" \"}\r\n                          {data.email}\r\n                        </h4>\r\n                      </span>\r\n                    )}\r\n\r\n                    <Row>\r\n                      <Col\r\n                        xs=\"12\"\r\n                        sm=\"12\"\r\n                        className=\"d-flex align-items-center\"\r\n                      >\r\n                        <h3 className=\"font-weight-bold mt-2 text-one \">\r\n                          Rent: <span className=\"text-primary\">₹</span>\r\n                          <span data-toggle=\"tooltip\" title=\"Expected Rent\">\r\n                            {data.expectedRent}\r\n                          </span>\r\n                        </h3>\r\n                        <Button\r\n                          color=\"light\"\r\n                          className=\" font-weight-semibold mx-2\"\r\n                          size=\"xs\"\r\n                          style={{ pointerEvents: \"none\" }} \r\n                        >\r\n                          {data.apartmentType}\r\n                        </Button>\r\n                      </Col>\r\n\r\n                      {/* <Col className=\"text-right\">\r\n                        <p className=\"text-muted\">\r\n                          Posted on{\" \"}\r\n                          <TimestampConverter\r\n                            timeStamp={data.postedOn}\r\n                            format=\"datetime\"\r\n                          />\r\n                        </p>\r\n                      </Col> */}\r\n                    </Row>\r\n                    {/* <CardSubtitle>{data.description}</CardSubtitle> */}\r\n                    {expandedIndex === index ? (\r\n                      <CardSubtitle>\r\n                        {removeTags(data.description)}\r\n                      </CardSubtitle>\r\n                    ) : (\r\n                      <CardSubtitle>\r\n                        {`${removeTags(data.description).slice(0, 100)}...`}\r\n\r\n                        {data.description.length > 100 && (\r\n                          <Button\r\n                            color=\"link\"\r\n                            onClick={() => toggleExpand(index)}\r\n                            className=\" p-0\"\r\n                          >\r\n                            {expandedIndex === index\r\n                              ? \"Read less\"\r\n                              : \"Read more\"}\r\n                          </Button>\r\n                        )}\r\n                      </CardSubtitle>\r\n                    )}\r\n\r\n                    {/* <Row>\r\n                      <Col md={5}>\r\n                        <i className=\"iconsminds-office text-primary\" />{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"Apartment Type\">\r\n                          {data.apartmentType}\r\n                        </span>{\" \"}\r\n                        |{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"Floor\">\r\n                          {data.floor}\r\n                        </span>{\" \"}\r\n                        |{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"BHK Type\">\r\n                          {data.bhkType}\r\n                        </span>\r\n                      </Col>\r\n\r\n                      <Col>\r\n                        <i className=\"simple-icon-people text-primary\" />{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"Room mate\">\r\n                          {data.roomMate}\r\n                        </span>\r\n                      </Col>\r\n                      <Col>\r\n                        <span className=\"text-primary\">₹</span>{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"Expected Rent\">\r\n                          {data.expectedRent}\r\n                        </span>\r\n                      </Col>\r\n                      <Col>\r\n                        <i className=\"iconsminds-car text-primary\" />\r\n\r\n                        <span data-toggle=\"tooltip\" title=\"Parking\">\r\n                          {data.parking}\r\n                        </span>\r\n                      </Col>\r\n                    </Row> */}\r\n                    {/* icons tstart */}\r\n                    <Row>\r\n                      <Col className=\"d-flex flex-wrap\">\r\n                        <Button\r\n                          color=\"light\"\r\n                          className=\"font-weight-bold mr-1 my-1\"\r\n                          size=\"sm\"\r\n                            style={{ pointerEvents: \"none\" }} \r\n                        >\r\n                          <i className=\"fas fa-bed \" /> {data.bhkTypeValue}\r\n                        </Button>\r\n                        <Button\r\n                          color=\"light\"\r\n                          className=\"font-weight-bold m-1\"\r\n                          size=\"sm\"\r\n                          style={{ pointerEvents: \"none\" }} \r\n                        >\r\n                          <i className=\"fa-solid fa-shower\" />{\" \"}\r\n                          {data.bhkTypeValue}\r\n                        </Button>\r\n                        <Button\r\n                          color=\"light\"\r\n                          className=\"font-weight-bold m-1\"\r\n                          size=\"sm\"\r\n                          style={{ pointerEvents: \"none\" }} \r\n                        >\r\n                          <i className=\"fa-solid fa-car\" /> {data.parkingCount}\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                    {/* icons end */}\r\n\r\n                    <Row className=\"mt-2\">\r\n                      <Col className=\"text-start text-sm-left\" xs={12} sm={6}>\r\n                        <div className=\"text-muted mt-2\">\r\n                          {data.interestedCount} liked this property\r\n                        </div>\r\n                      </Col>\r\n                      <Col\r\n                        className=\"text-sm-right texr-start mt-sm-0 mt-2\"\r\n                        xs={12}\r\n                        sm={6}\r\n                      >\r\n                        {/* <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"mr-2\"\r\n                          size=\"xs\"\r\n                          onClick={() => handleClick(data.id)}\r\n                          data-toggle=\"tooltip\"\r\n                          title=\"Full screen\"\r\n                        >\r\n                          <i className=\"simple-icon-size-fullscreen text-primary\" />\r\n                        </Button>\r\n                        {copiedId === data.id && (\r\n                          <span className=\"text-success mr-2\">\r\n                            Link copied to clipboard!\r\n                          </span>\r\n                        )}\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"mr-2\"\r\n                          size=\"xs\"\r\n                          onClick={() => handleShareButtonClick(data.id)}\r\n                          data-toggle=\"tooltip\"\r\n                          title=\"copy\"\r\n                        >\r\n                          <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"16\"\r\n                            height=\"16\"\r\n                            fill=\"currentColor\"\r\n                            className=\"bi bi-copy\"\r\n                            viewBox=\"0 0 16 16\"\r\n                          >\r\n                            <path\r\n                              fillRule=\"evenodd\"\r\n                              d=\"M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z\"\r\n                            />\r\n                          </svg>\r\n                        </Button> */}\r\n                        <Button\r\n                          onClick={() => handleInterestedButtonClick(data.id)}\r\n                          outline\r\n                          color=\"primary\"\r\n                          size=\"xs\"\r\n                          active={data.loggedInUserInterested}\r\n                        >\r\n                          I&apos;m interested\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            totalPage={pagination.totalPage}\r\n            onChangePage={(i) => setCurrentPage(i)}\r\n            lastIsActive={pagination.first}\r\n            firstIsActive={pagination.last}\r\n          />\r\n        </div>\r\n      )}\r\n      {/* new design ends  */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StayListing;\r\n","import classnames from \"classnames\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { NavLink, useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  //   Badge,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  //   Card,\r\n  //   CardBody,\r\n  Nav,\r\n  NavItem,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\n// import Rating from 'components/common/Rating';\r\n\r\n// import Breadcrumb from 'containers/navs/Breadcrumb';\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\n\r\nimport All from \"./All\";\r\nimport JobListing from \"./JobListing\";\r\nimport JobPosting from \"./JobPosting\";\r\nimport OtherListing from \"./OtherListing\";\r\nimport OtherPosting from \"./OtherPosting\";\r\nimport StayListing from \"./StayListing\";\r\nimport StayPosting from \"./StayPosting\";\r\n\r\nconst DetailsAltPages = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [activeTab, setActiveTab] = useState(\"job\");\r\n  const [modal, setModal] = useState(false);\r\n  const [modalTitle, setModalTitle] = useState(\"\");\r\n  const [listingType, setListingType] = useState(\"\");\r\n  const [isPosted, setIsPosted] = useState(false);\r\n\r\n  const toggleModal = (title, type) => {\r\n    setModalTitle(title);\r\n    setListingType(type);\r\n    setModal(!modal);\r\n  };\r\n  //   const { messages } = intl;\r\n\r\n  const toggleModalState = () => {\r\n    setModal(false);\r\n    setIsPosted(!isPosted);\r\n  };\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"roleRes\");\r\n  }\r\n  const role = getTokenRes();\r\n\r\n  useEffect(() => {\r\n    const path = location.pathname.split(\"/\").pop();\r\n    setActiveTab(path === \"listing\" ? \"all\" : path);\r\n  }, [location]);\r\n\r\n  const changeTab = (tab) => {\r\n    setActiveTab(tab);\r\n    history.push(`/app/listing${tab === \"all\" ? \"\" : `/${tab}`}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\" className=\"mx-auto\" style={{ maxWidth: \"900px\" }}>\r\n          <h1>Listing</h1>\r\n          <div className=\"text-zero top-right-button-container\">\r\n            {activeTab === \"all\" && (\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"primary\"\r\n                  size=\"sm\"\r\n                  outline\r\n                  className=\"top-right-button top-right-button-single\"\r\n                >\r\n                  Create Listing\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  <DropdownItem\r\n                    onClick={() => toggleModal(\"Create a job List\", \"job\")}\r\n                  >\r\n                    Create a Job list\r\n                  </DropdownItem>\r\n                  <DropdownItem\r\n                    onClick={() => toggleModal(\"Create a Stay list\", \"stay\")}\r\n                  >\r\n                    Create a Stay list\r\n                  </DropdownItem>\r\n                  <DropdownItem\r\n                    onClick={() => toggleModal(\"Create a other list\", \"others\")}\r\n                  >\r\n                    Create a other list\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            )}\r\n            {activeTab === \"job\" && (\r\n              <Button\r\n                outline\r\n                color=\"primary\"\r\n                onClick={() => toggleModal(\"Create a job List\", \"job\")}\r\n              >\r\n                Create a job list\r\n              </Button>\r\n            )}\r\n            {activeTab === \"stay\" && (\r\n              <Button\r\n                outline\r\n                color=\"primary\"\r\n                onClick={() => toggleModal(\"Create a Stay list\", \"stay\")}\r\n              >\r\n                Create a stay list\r\n              </Button>\r\n            )}\r\n            {activeTab === \"others\" && (\r\n              <Button\r\n                outline\r\n                color=\"primary\"\r\n                onClick={() => toggleModal(\"Create a other list\", \"others\")}\r\n              >\r\n                Create a other list\r\n              </Button>\r\n            )}\r\n          </div>\r\n\r\n          {/* <Breadcrumb match={match} /> */}\r\n\r\n          <Nav tabs className=\"separator-tabs ml-0 mb-5\">\r\n            {/* <NavItem>\r\n              <NavLink\r\n                location={{}}\r\n                to=\"#\"\r\n                className={classnames({\r\n                  active: activeTab === \"all\",\r\n                  \"nav-link\": true,\r\n                })}\r\n                onClick={() => changeTab(\"all\")}\r\n              >\r\n                <i className=\"iconsminds-align-justify-all text-primary\" />\r\n                All\r\n              </NavLink>\r\n            </NavItem> */}\r\n            {role !== \"REALESTATE\" && (\r\n              <NavItem>\r\n                <NavLink\r\n                  location={{}}\r\n                  to=\"#\"\r\n                  className={classnames({\r\n                    active: activeTab === \"job\",\r\n                    \"nav-link\": true,\r\n                  })}\r\n                  onClick={() => changeTab(\"job\")}\r\n                >\r\n                  <i className=\"iconsminds-management text-primary\" />\r\n                  Job\r\n                </NavLink>\r\n              </NavItem>\r\n            )}\r\n\r\n            {role !== \"HR\" && (\r\n              <NavItem>\r\n                <NavLink\r\n                  location={{}}\r\n                  to=\"#\"\r\n                  className={classnames({\r\n                    active: activeTab === \"stay\",\r\n                    \"nav-link\": true,\r\n                  })}\r\n                  onClick={() => changeTab(\"stay\")}\r\n                >\r\n                  <i className=\"iconsminds-building text-primary\" />\r\n                  Stay\r\n                </NavLink>\r\n              </NavItem>\r\n            )}\r\n\r\n            {role !== \"HR\" && role !== \"REALESTATE\" && (\r\n              <NavItem>\r\n                <NavLink\r\n                  location={{}}\r\n                  to=\"#\"\r\n                  className={classnames({\r\n                    active: activeTab === \"others\",\r\n                    \"nav-link\": true,\r\n                  })}\r\n                  onClick={() => changeTab(\"others\")}\r\n                >\r\n                  <i className=\"iconsminds-testimonal text-primary\" />\r\n                  Others\r\n                </NavLink>\r\n              </NavItem>\r\n            )}\r\n          </Nav>\r\n\r\n          <TabContent activeTab={activeTab}>\r\n            {activeTab === \"all\" && (\r\n              <TabPane tabId=\"all\">\r\n                <All />\r\n              </TabPane>\r\n            )}\r\n            {activeTab === \"job\" && (\r\n              <TabPane tabId=\"job\">\r\n                <JobListing isPosted={isPosted} />\r\n              </TabPane>\r\n            )}\r\n            {activeTab === \"stay\" && (\r\n              <TabPane tabId=\"stay\">\r\n                <StayListing isPosted={isPosted} />\r\n              </TabPane>\r\n            )}\r\n            {activeTab === \"others\" && (\r\n              <TabPane tabId=\"others\">\r\n                <OtherListing isPosted={isPosted} />\r\n              </TabPane>\r\n            )}\r\n          </TabContent>\r\n        </Colxx>\r\n      </Row>\r\n      <Modal size=\"lg\" isOpen={modal} toggle={() => setModal(!modal)}>\r\n        <ModalHeader className=\"pb-1\" toggle={() => setModal(!modal)}>\r\n          <h1 className=\"font-weight-semibold\">{modalTitle}</h1>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          {listingType === \"job\" && (\r\n            <JobPosting closeModal={toggleModalState} />\r\n          )}\r\n          {listingType === \"stay\" && (\r\n            <StayPosting closeModal={toggleModalState} />\r\n          )}\r\n          {/* {listingType === \"others\" && <OtherPosting />} */}\r\n          {listingType === \"others\" && (\r\n            <OtherPosting closeModal={toggleModalState} />\r\n          )}\r\n        </ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default injectIntl(DetailsAltPages);\r\n","import { createClient, createMicrophoneAndCameraTracks } from \"agora-rtc-react\";\r\n\r\nconst appId = \"4e6374a1eddd4d20a604fb0513fae8fb\";\r\n// const token =\r\n//   \"0064e6374a1eddd4d20a604fb0513fae8fbIAAZykswKKEI2Y1qDUtXXnniTrssT5UJoTcO5snziqLZ6U8CiV63SH0QIgB86VDgxGM6ZgQAAQDEYzpmAgDEYzpmAwDEYzpmBADEYzpm\"\r\n  \r\n\r\nexport const config = { mode: \"rtc\", codec: \"vp8\", appId };\r\nexport const useClient = createClient(config);\r\nexport const useMicrophoneAndCameraTracks = createMicrophoneAndCameraTracks();\r\n// export const channelName = \"7d72365eb983485397e3e3f9d460bdda\";","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Button } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useClient } from \"./settings\";\r\n\r\nconst Controls = (props) => {\r\n  const client = useClient();\r\n  const { tracks, setStart, setInCall, id, setStatus, sid } = props;\r\n  const [trackState, setTrackState] = useState({ video: true, audio: true });\r\n\r\n  const mute = async (type) => {\r\n    if (type === \"audio\") {\r\n      await tracks[0].setEnabled(!trackState.audio);\r\n      setTrackState((ps) => {\r\n        return { ...ps, audio: !ps.audio };\r\n      });\r\n    } else if (type === \"video\") {\r\n      await tracks[1].setEnabled(!trackState.video);\r\n      setTrackState((ps) => {\r\n        return { ...ps, video: !ps.video };\r\n      });\r\n    }\r\n  };\r\n  const history = useHistory();\r\n  const leaveChannel = async () => {\r\n    await client.leave();\r\n    setStatus(\"DISCONNECTED\")\r\n    client.removeAllListeners();\r\n    tracks[0].close();\r\n    tracks[1].close();\r\n    setStart(false);\r\n    setInCall(false);\r\n    history.push(`/app/callcompleted/${id}/${sid}`);\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row md={6} className=\"align-items-center mt-2\">\r\n        <Col md={3} />\r\n        <Col md={2} xs={4}>\r\n          <Button\r\n            outline\r\n            color=\"primary\"\r\n            onClick={() => mute(\"audio\")}\r\n            className=\"icon-button\"\r\n          >\r\n            {trackState.audio ? (\r\n              // <i className=\"simple-icon-microphone \" />\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-mic\" viewBox=\"0 0 16 20\">\r\n  <path d=\"M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5\"/>\r\n  <path d=\"M10 8a2 2 0 1 1-4 0V3a2 2 0 1 1 4 0zM8 0a3 3 0 0 0-3 3v5a3 3 0 0 0 6 0V3a3 3 0 0 0-3-3\"/>\r\n</svg>\r\n            ) : (\r\n              // <i className=\"simple-icon-microphone\" />\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-mic-mute\" viewBox=\"0 0 16 20\">\r\n  <path d=\"M13 8c0 .564-.094 1.107-.266 1.613l-.814-.814A4 4 0 0 0 12 8V7a.5.5 0 0 1 1 0zm-5 4c.818 0 1.578-.245 2.212-.667l.718.719a5 5 0 0 1-2.43.923V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 1 0v1a4 4 0 0 0 4 4m3-9v4.879l-1-1V3a2 2 0 0 0-3.997-.118l-.845-.845A3.001 3.001 0 0 1 11 3\"/>\r\n  <path d=\"m9.486 10.607-.748-.748A2 2 0 0 1 6 8v-.878l-1-1V8a3 3 0 0 0 4.486 2.607m-7.84-9.253 12 12 .708-.708-12-12z\"/>\r\n</svg>\r\n            )}\r\n          </Button>\r\n        </Col>\r\n        <Col md={2} xs={4}>\r\n          <Button\r\n            outline\r\n            color=\"primary\"\r\n            onClick={() => mute(\"video\")}\r\n            className=\"icon-button\"\r\n          >\r\n            {trackState.video ? (\r\n              // <i className=\"simple-icon-camrecorder \" />\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-camera-video\" viewBox=\"0 0 16 20\">\r\n  <path fillRule=\"evenodd\" d=\"M0 5a2 2 0 0 1 2-2h7.5a2 2 0 0 1 1.983 1.738l3.11-1.382A1 1 0 0 1 16 4.269v7.462a1 1 0 0 1-1.406.913l-3.111-1.382A2 2 0 0 1 9.5 13H2a2 2 0 0 1-2-2zm11.5 5.175 3.5 1.556V4.269l-3.5 1.556zM2 4a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h7.5a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1z\"/>\r\n</svg>\r\n            ) : (\r\n              // <i className=\"simple-icon-camrecorder\" />\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-camera-video-off\" viewBox=\"0 0 16 20\">\r\n  <path fillRule=\"evenodd\" d=\"M10.961 12.365a2 2 0 0 0 .522-1.103l3.11 1.382A1 1 0 0 0 16 11.731V4.269a1 1 0 0 0-1.406-.913l-3.111 1.382A2 2 0 0 0 9.5 3H4.272l.714 1H9.5a1 1 0 0 1 1 1v6a1 1 0 0 1-.144.518zM1.428 4.18A1 1 0 0 0 1 5v6a1 1 0 0 0 1 1h5.014l.714 1H2a2 2 0 0 1-2-2V5c0-.675.334-1.272.847-1.634zM15 11.73l-3.5-1.555v-4.35L15 4.269zm-4.407 3.56-10-14 .814-.58 10 14z\"/>\r\n</svg>\r\n            )}\r\n          </Button>\r\n          {/* <span onClick={() => mute(\"video\")}><i className=\"simple-icon-camrecorder \" /></span> */}\r\n          {/* <span\r\n            role=\"button\"\r\n            tabIndex={0}\r\n            onClick={() => mute(\"video\")}\r\n            onKeyPress={(event) => {\r\n              if (event.key === \"Enter\" || event.key === \" \") {\r\n                mute(\"video\");\r\n              }\r\n            }}\r\n          >\r\n            <i className=\"simple-icon-camrecorder\" />\r\n          </span> */}\r\n        </Col>\r\n        <Col md={2} xs={4}>\r\n          <Button color=\"danger\" onClick={() => leaveChannel()}  className=\"icon-button\" >\r\n            <i className=\"simple-icon-call-end\" />{\" \"}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","import React from \"react\";\r\nimport { AgoraVideoPlayer } from \"agora-rtc-react\";\r\n// import { Container, Row, Col } from \"reactstrap\";\r\n\r\nexport default function Video(props) {\r\n  const { users, tracks, bookedByName, createdByName } = props;\r\n  const currentUser = localStorage.getItem(\"userName\")\r\n  const otherUser = currentUser === createdByName ? bookedByName : createdByName;\r\n// console.log(\"otherUsernamebook\", bookedByName)\r\n// console.log(\"otherUsernamecreate\", createdByName)\r\nconsole.log(\"lenth\", users)\r\n  return (\r\n   \r\n    <div className=\"container-fluid\" style={{ height: \"100%\" }}>\r\n      <div className=\"row\" style={{ height: \"100%\" }}>\r\n        <div className='col-xs-6' style={{ position: \"relative\" }}>\r\n          <AgoraVideoPlayer\r\n            videoTrack={tracks[1]}\r\n            style={{ height: \"100%\", width: \"100%\", border: \"5px solid white\" }}\r\n          />\r\n          <div style={{ position: \"absolute\", bottom: 10, left: 10, color: \"white\", backgroundColor: \"rgba(0,0,0,0.5)\", padding: \"5px\" }}>\r\n            {currentUser}\r\n          </div>\r\n        </div>\r\n        {/* {users.length > 0 &&\r\n          users.map((user) => {\r\n            console.log(\"uuser\", users)\r\n            if (user.videoTrack) {\r\n              return (\r\n                <div className='col-xs-6' key={user.uid}>\r\n                  <AgoraVideoPlayer\r\n                    videoTrack={user.videoTrack}\r\n                    style={{ height: \"100%\", width: \"100%\" }}\r\n                  />\r\n                </div>\r\n              );\r\n                      // eslint-disable-next-line\r\n            } else return null;\r\n          }\r\n          )} */}\r\n           <div className='col-xs-6' style={{ position: \"relative\" }}>\r\n          {users.length > 0 && users[0].videoTrack ? (\r\n            <AgoraVideoPlayer\r\n              videoTrack={users[0].videoTrack}\r\n              style={{ height: \"100%\", width: \"100%\", border: \"5px solid white\" }}\r\n            />\r\n          ) : (\r\n            <div style={{ height: \"100%\", width: \"100%\", border: \"5px solid white\", backgroundColor: \"#f0f0f0\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-camera-video-off\" viewBox=\"0 0 16 20\">\r\n                <path fillRule=\"evenodd\" d=\"M10.961 12.365a2 2 0 0 0 .522-1.103l3.11 1.382A1 1 0 0 0 16 11.731V4.269a1 1 0 0 0-1.406-.913l-3.111 1.382A2 2 0 0 0 9.5 3H4.272l.714 1H9.5a1 1 0 0 1 1 1v6a1 1 0 0 1-.144.518zM1.428 4.18A1 1 0 0 0 1 5v6a1 1 0 0 0 1 1h5.014l.714 1H2a2 2 0 0 1-2-2V5c0-.675.334-1.272.847-1.634zM15 11.73l-3.5-1.555v-4.35L15 4.269zm-4.407 3.56-10-14 .814-.58 10 14z\"/>\r\n              </svg>\r\n            </div>\r\n          )}\r\n          <div style={{ position: \"absolute\", bottom: 10, left: 10, color: \"white\", backgroundColor: \"rgba(0,0,0,0.5)\", padding: \"5px\" }}>\r\n            {otherUser}\r\n          </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n// import { Container, Row, Col } from \"reactstrap\";\r\n// import AgoraRTC from \"agora-rtc-react\"\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Button } from \"reactstrap\";\r\nimport { useClient, useMicrophoneAndCameraTracks } from \"./settings\";\r\n\r\nimport Controls from \"./Controls\";\r\nimport Video from \"./Video\";\r\n\r\nconst VideoCallCtrl = (props) => {\r\n  const { setInCall } = props;\r\n  const [users, setUsers] = useState([]);\r\n  const [start, setStart] = useState(false);\r\n  // const [connectionState, setConnectionState] = useState(\"\");\r\n  const [callStartTime, setCallStartTime] = useState(null);\r\n  // const [startTime, setStartTime] = useState(0)\r\n  const [endTime, setEndTime] = useState(0);\r\n  // const [callEndTime, setCallEndTime] = useState(null);\r\n  const [timeRemaining, setTimeRemaining] = useState(0);\r\n  const [channelName, setChannelName] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [rtcToken, setRtcToken] = useState(null);\r\n  const [appId, setAppId] = useState(null);\r\n  const [bookedByName, setBookedByName] = useState(\"\");\r\n  const [createdByName, setCreatedByName] = useState(\"\");\r\n  const client = useClient();\r\n  const { ready, tracks } = useMicrophoneAndCameraTracks();\r\n  const { userId, id } = useParams();\r\n  const history = useHistory();\r\n  const [readyForCall, setReadyForCall] = useState(false);\r\n  // const currentTime = Date.now();\r\n\r\n  //     const durationMs = currentTime - endTime;\r\n\r\n  //     const durationSec = durationMs / 1000;\r\n\r\n  //     setTimeRemaining(durationSec);\r\n\r\n  // console.log(callEndTime)\r\n  // console.log(\"userid:\", userId)\r\n  // console.log(\"iid\",id)\r\n  // console.log(\"user chk\", users);\r\n  // console.log(\"check status\", status);\r\n  const url = `${baseUrl}/api/userprofile/connect-to-videocall`;\r\n\r\n  //  const [rtcToken, setRtcToken] = useState()\r\n  //  console.log(\"rrtc\",rtcToken)\r\n  //  const getToken = async () => {\r\n  //    const url2 = `${baseUrl}/api/generate-rtc-token/${id}`;\r\n  //    const response = await axios.get(url2);\r\n  //    console.log(\"chkchk\",response)\r\n  //    setRtcToken(response.data.rtcToken);\r\n\r\n  //  };\r\n  // //  useEffect(() => {\r\n  //  getToken()\r\n  // //  }, []);\r\n\r\n  useEffect(() => {\r\n    const getToken = async () => {\r\n      try {\r\n        const url2 = `${baseUrl}/api/generate-rtc-token/${id}`;\r\n        const response = await axios.get(url2);\r\n        // console.log(\"resp\",response)\r\n        setRtcToken(response.data.rtcToken);\r\n        setChannelName(response.data.channelName);\r\n        setAppId(response.data.appId);\r\n        // setStartTime(response.data.startTime)\r\n        setEndTime(response.data.endTime);\r\n        setCreatedByName(response.data.createdByName);\r\n        setBookedByName(response.data.bookedByName);\r\n        setReadyForCall(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching RTC token:\", error);\r\n      }\r\n    };\r\n\r\n    getToken();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     console.log(\"fetchedData chk\");\r\n  //     try {\r\n  //       if (callStartTime && callEndTime && callEndTime > callStartTime) {\r\n  //         const duration = callEndTime - callStartTime;\r\n  //         console.log(\"Call duration:\", duration);\r\n  //         const response = await axios.post(\r\n  //           url,\r\n  //           {\r\n  //             id: 22,\r\n  //             status,\r\n  //             startTime: callStartTime,\r\n  //             endTime: callEndTime,\r\n  //             duration,\r\n  //           }\r\n  //         );\r\n  //         console.log(\"status post vid :\", response.data);\r\n  //         setTimeRemaining(response.data.remainingDuration);\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.error(\"Error:\", error);\r\n  //     }\r\n  //   };\r\n\r\n  //   if (callStartTime && callEndTime) {\r\n  //     fetchData();\r\n  //   }\r\n\r\n  //   const intervalId = setInterval(() => {\r\n  //     fetchData();\r\n  //   }, 300000);\r\n\r\n  //   return () => {\r\n  //     console.log(\"Clearing interval chk\");\r\n  //     clearInterval(intervalId);\r\n  //   };\r\n  // }, [callStartTime]);\r\n\r\n  function getRoleRes() {\r\n    return localStorage.getItem(\"roleRes\");\r\n  }\r\n\r\n  const roleRes = getRoleRes();\r\n\r\n  useEffect(() => {\r\n    if (roleRes.includes(\"USER\")) {\r\n      const postData = async () => {\r\n        console.log(\"fetchedData chk\");\r\n        try {\r\n          if (callStartTime) {\r\n            const endTime1 = Date.now();\r\n            const duration = endTime1 - callStartTime;\r\n            console.log(\"Call duration:\", duration);\r\n            const response = await axios.post(url, {\r\n              id,\r\n              status,\r\n            });\r\n            console.log(\"status post vid :\", response.data.remainingDuration);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error:\", error);\r\n        }\r\n      };\r\n      postData();\r\n    }\r\n    // const intervalId = setInterval(() => {\r\n    //   postData();\r\n    // }, 300000);\r\n    // return () => {\r\n    //   console.log(\"Clearing interval chk\");\r\n    //   clearInterval(intervalId);\r\n    // };\r\n  }, [status]);\r\n\r\n  useEffect(() => {\r\n    const init = async (name) => {\r\n      client.on(\"user-joined\", () => {\r\n        if (!callStartTime) {\r\n          setCallStartTime(Date.now());\r\n          setStatus(\"CONNECTED\");\r\n          // console.log(\"user joined cc\");\r\n        }\r\n      });\r\n\r\n      client.on(\"user-left\", () => {\r\n        if (users.length === 1) {\r\n          client.leave();\r\n          // setCallStartTime(null);\r\n          // setCallEndTime(Date.now());\r\n          setStatus(\"DISCONNECTED\");\r\n          // console.log(\"user left cc\");\r\n        }\r\n      });\r\n\r\n      client.on(\"connection-state-change\", (state) => {\r\n        console.log(\"Connection state changed:\", state);\r\n        // setConnectionState(state);\r\n      });\r\n\r\n      client.on(\"user-published\", async (user, mediaType) => {\r\n        await client.subscribe(user, mediaType);\r\n        if (mediaType === \"video\") {\r\n          setUsers((prevUsers) => {\r\n            return [...prevUsers, user];\r\n          });\r\n        }\r\n        if (mediaType === \"audio\") {\r\n          user.audioTrack.play();\r\n        }\r\n      });\r\n\r\n      client.on(\"user-unpublished\", (user, mediaType) => {\r\n        if (mediaType === \"audio\") {\r\n          if (user.audioTrack) user.audioTrack.stop();\r\n        }\r\n        if (mediaType === \"video\") {\r\n          setUsers((prevUsers) => {\r\n            return prevUsers.filter((User) => User.uid !== user.uid);\r\n          });\r\n        }\r\n      });\r\n\r\n      const disconnectRemainingUser = () => {\r\n        setStatus(\"DISCONNECTED\");\r\n        client.leave();\r\n        client.removeAllListeners();\r\n        tracks[0].close();\r\n        tracks[1].close();\r\n        setStart(false);\r\n        setInCall(false);\r\n        history.push(`/app/callcompleted/${userId}/${id}`);\r\n      };\r\n\r\n      // client.on(\"user-left\", (user) => {\r\n      //   setUsers((prevUsers) => {\r\n      //     return prevUsers.filter((User) => User.uid !== user.uid);\r\n      //   });\r\n      // });\r\n      client.on(\"user-left\", (user) => {\r\n        setUsers((prevUsers) =>\r\n          prevUsers.filter((User) => User.uid !== user.uid)\r\n        );\r\n\r\n        if (users.length === 1) {\r\n          disconnectRemainingUser();\r\n        }\r\n      });\r\n\r\n      try {\r\n        await client.join(appId, name, rtcToken, null);\r\n      } catch (error) {\r\n        console.log(\"error\");\r\n      }\r\n\r\n      if (tracks) await client.publish([tracks[0], tracks[1]]);\r\n      setStart(true);\r\n    };\r\n\r\n    if (ready && tracks) {\r\n      try {\r\n        init(channelName);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }, [\r\n    readyForCall,\r\n    channelName,\r\n    client,\r\n    ready,\r\n    tracks,\r\n    users.length,\r\n    rtcToken,\r\n  ]);\r\n\r\n  const iTime = new Date(parseInt(callStartTime, 10));\r\n\r\n  const hours = iTime.getHours() % 12 || 12;\r\n  const minutes = String(iTime.getMinutes()).padStart(2, \"0\");\r\n  const period = iTime.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n  const initiatedTime = `${hours}:${minutes} ${period}`;\r\n\r\n  // console.log(initiatedTime);\r\n\r\n  useEffect(() => {\r\n    let timerId;\r\n    if (timeRemaining > 0) {\r\n      timerId = setInterval(() => {\r\n        setTimeRemaining((prevTime) => prevTime - 1);\r\n      }, 1000);\r\n    }\r\n\r\n    return () => {\r\n      if (timerId) {\r\n        clearInterval(timerId);\r\n      }\r\n    };\r\n  }, [timeRemaining]);\r\n\r\n  // useEffect(() => {\r\n  //   if (connectionState === \"CONNECTED\") {\r\n  //     setStatus(\"CALL_IN_PROGRESS\");\r\n  //   }\r\n  //   if (callStartTime) {\r\n  //     setStatus(\"BOTH_JOINED\");\r\n  //   } else if (connectionState === \"DISCONNECTED\") {\r\n  //     setStatus(\"CALL_ENDED\");\r\n  //   }\r\n  // }, [connectionState]);\r\n\r\n  // const minutes1 = Math.floor(timeRemaining / 60);\r\n  // const seconds = timeRemaining % 60;\r\n  // const formattedTimeRemaining = `${minutes1}:${\r\n  //   seconds < 10 ? \"0\" : \"\"\r\n  // }${seconds}`;\r\n  // const callCurrentTime = Date.now()\r\n\r\n  // const callTimeRemaining = endTime - callCurrentTime\r\n  // const minutesRemaining = Math.floor(callTimeRemaining / 1000 / 60);\r\n\r\n  const [minutesRemaining1, setMinutesRemaining1] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // const endTime = 1716544815000;\r\n    const updateRemainingTime = () => {\r\n      const callCurrentTime = Date.now();\r\n      const callTimeRemaining = endTime - callCurrentTime;\r\n      const minutesRemaining = Math.max(\r\n        0,\r\n        Math.floor(callTimeRemaining / 1000 / 60)\r\n      );\r\n      setMinutesRemaining1(minutesRemaining);\r\n    };\r\n\r\n    updateRemainingTime();\r\n    const intervalId = setInterval(updateRemainingTime, 60000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [endTime]);\r\n\r\n  return (\r\n    // <Container fluid style={{ height: \"100%\" }}>\r\n    //   <Row style={{ height: \"5%\" }}>\r\n    //     {ready && tracks && (\r\n    //       <Col>\r\n    //         <Controls tracks={tracks} setStart={setStart} setInCall={setInCall} />\r\n    //       </Col>\r\n    //     )}\r\n    //   </Row>\r\n    //   <Row style={{ height: \"95%\" }}>\r\n    //     {start && tracks && <Video tracks={tracks} users={users} />}\r\n    //   </Row>\r\n    // </Container>\r\n    <div className=\"container-fluid\" style={{ height: \"75vh\" }}>\r\n      <div className=\"row p-0 d-flex justify-content-between\">\r\n        {/* <h4 className=\"mr-auto\">Initiated Time: {initiatedTime}</h4> */}\r\n        {callStartTime && (\r\n          <h4 className=\"mr-auto text-muted\">\r\n            Initiated Time: {initiatedTime}\r\n          </h4>\r\n        )}\r\n        {/* <h4>\r\n          Time Remaining :{\" \"}\r\n          <span className=\"text-danger\">{minutesRemaining1}</span>\r\n        </h4> */}\r\n        {minutesRemaining1 &&\r\n        minutesRemaining1 > 0 &&\r\n        minutesRemaining1 <= 10 ? (\r\n          // <div>Time Remaining : {minutesRemaining1} minutes</div>\r\n          <h4>\r\n            Time Remaining :{\" \"}\r\n            <span className=\"text-danger\">{minutesRemaining1} minutes</span>{\" \"}\r\n            {roleRes.includes(\"USER\") ? (\r\n              <span>\r\n                Extend by 15 minutes?{\" \"}\r\n                <Button color=\"primary\">Pay from wallet</Button>\r\n              </span>\r\n            ) : null}\r\n          </h4>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {minutesRemaining1 &&\r\n        roleRes.includes(\"USER\") &&\r\n        minutesRemaining1 === 0 ? (\r\n          <div>\r\n            <h4>\r\n              Extend by 15 minutes?{\" \"}\r\n              <Button color=\"primary\">Pay from wallet</Button>\r\n            </h4>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <div className=\"row\" style={{ height: \"90%\" }}>\r\n        {start && tracks ? (\r\n          <Video\r\n            tracks={tracks}\r\n            users={users}\r\n            createdByName={createdByName}\r\n            bookedByName={bookedByName}\r\n          />\r\n        ) : (\r\n          <div className=\"loading\" />\r\n        )}\r\n      </div>\r\n      <div className=\"row ml-2\" style={{ height: \"10%\" }}>\r\n        {ready && tracks && (\r\n          <>\r\n            <Controls\r\n              id={userId}\r\n              sid={id}\r\n              tracks={tracks}\r\n              setStart={setStart}\r\n              setInCall={setInCall}\r\n              setStatus={setStatus}\r\n            />\r\n            {/* <p>Connection State: {connectionState}</p> */}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCallCtrl;\r\n\r\n// import React from 'react'\r\n\r\n// const [minutesRemaining, setMinutesRemaining] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     const endTime = 1716544815000; // Example end time\r\n//     const updateRemainingTime = () => {\r\n//       const callCurrentTime = Date.now();\r\n//       const callTimeRemaining = endTime - callCurrentTime;\r\n//       const minutesRemaining = Math.max(0, Math.floor(callTimeRemaining / 1000 / 60));\r\n//       setMinutesRemaining(minutesRemaining);\r\n//     };\r\n\r\n//     // Update the time remaining initially and then every minute\r\n//     updateRemainingTime();\r\n//     const intervalId = setInterval(updateRemainingTime, 60000); // 60000 milliseconds = 1 minute\r\n\r\n//     // Cleanup function to clear the interval when component unmounts\r\n//     return () => clearInterval(intervalId);\r\n//   }, []);\r\n","// import React,{ useState } from \"react\";\r\n// import { Button } from \"reactstrap\";\r\n// import VideoCall from \"./VideoCall\";\r\n\r\n// function App() {\r\n//   const [inCall, setInCall] = useState(false);\r\n\r\n//   return (\r\n//     <div className=\"App\" style={{ height: \"100%\" }}>\r\n//       {inCall ? (\r\n//         <VideoCall setInCall={setInCall} />\r\n//       ) : (\r\n//         <Button\r\n//           variant=\"contained\"\r\n//           color=\"primary\"\r\n//           onClick={() => setInCall(true)}\r\n//         >\r\n//           Join Call\r\n//         </Button>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n// import React, { useState } from \"react\";\r\n// // import { Button } from \"reactstrap\";\r\n// import {useParams} from \"react-router-dom\";\r\n\r\n// import VideoCallCtrl from \"./VideoCallCtrl\";\r\n\r\n// const VideoCall = () => {\r\n//   const [inCall, setInCall] = useState(false);\r\n//   const {id}=useParams();\r\n\r\n// console.log(\"idd:\", id)\r\n\r\n//   // useEffect(() => {\r\n    \r\n//   //   const getIDFromURL = () => {\r\n//   //     const searchParams = new URLSearchParams(location.search);\r\n//   //     const id = searchParams.get(\"id\");\r\n      \r\n//   //     console.log(\"id from url\", id);\r\n//   //   };\r\n\r\n//   //   getIDFromURL(); \r\n//   // }, [location]);\r\n\r\n//   const handleJoinCall = () => {\r\n//     setInCall(false);\r\n//     setTimeout(() => {\r\n//       setInCall(true);\r\n//     }, 2000);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\" style={{ height: \"100%\" }}>\r\n//       {!inCall && (\r\n//         <>\r\n//           {/* <h1>Connecting...</h1> */}\r\n//           <div className=\"loading\" />\r\n//           {setTimeout(handleJoinCall)}\r\n//         </>\r\n//       )}\r\n//       {inCall && <VideoCallCtrl id={id} setInCall={setInCall} />}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default VideoCall;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport VideoCallCtrl from \"./VideoCallCtrl\";\r\n\r\nconst VideoCall = () => {\r\n  const [inCall, setInCall] = useState(false);\r\n  const { id, sid } = useParams();\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (!inCall) {\r\n      timer = setTimeout(() => {\r\n        setInCall(true);\r\n      }, 2000);\r\n    }\r\n\r\n    return () => {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n      }\r\n    };\r\n  }, [inCall]);\r\n\r\n  return (\r\n    <div className=\"App\" style={{ height: \"100%\" }}>\r\n      {!inCall && (\r\n        <>\r\n          {/* <h1>Connecting...</h1> */}\r\n          <div className=\"loading\" />\r\n        </>\r\n      )}\r\n      {inCall && <VideoCallCtrl id={id} sid={sid} setInCall={setInCall} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCall;\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import VideoCall from \"./VideoCall\";\r\n\r\n// function App() {\r\n//   const [inCall, setInCall] = useState(false);\r\n//   const [showConnectingText, setShowConnectingText] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     let timer;\r\n//     if (inCall) {\r\n//       timer = setTimeout(() => {\r\n//         setShowConnectingText(true);\r\n//       }, 3000);\r\n//     }\r\n//     return () => clearTimeout(timer);\r\n//   }, [inCall]);\r\n\r\n//   return (\r\n//     <div className=\"App\" style={{ height: \"100%\" }}>\r\n//       {/* eslint-disable-next-line */}\r\n//       {showConnectingText ? (\r\n//         <p>Connecting...</p>\r\n//       ) : inCall ? (\r\n//         <VideoCall setInCall={setInCall} />\r\n//       ) : null}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n","import React from \"react\";\r\nimport { Button, Input } from \"reactstrap\";\r\n\r\nconst SaySomething = ({\r\n  placeholder,\r\n  messageInput,\r\n  handleChatInputPress,\r\n  handleChatInputChange,\r\n  handleSendButtonClick,\r\n}) => {\r\n  return (\r\n    <div className=\"chat-input-container d-flex justify-content-between align-items-center\">\r\n      <Input\r\n        className=\"form-control flex-grow-1\"\r\n        type=\"text\"\r\n        placeholder={placeholder}\r\n        value={messageInput}\r\n        onKeyPress={(e) => handleChatInputPress(e)}\r\n        onChange={(e) => handleChatInputChange(e)}\r\n      />\r\n      <div>\r\n        {/* <Button outline color=\"primary\" className=\"icon-button large ml-1\">\r\n          <i className=\"simple-icon-paper-clip\" />\r\n        </Button> */}\r\n\r\n        <Button\r\n          color=\"primary\"\r\n          className=\"icon-button large ml-1\"\r\n          onClick={() => handleSendButtonClick()}\r\n          disabled={messageInput.trim() === \"\"}\r\n        >\r\n          <i className=\"simple-icon-arrow-right\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default React.memo(SaySomething);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { NavLink } from 'reactstrap';\r\n\r\nconst ApplicationMenu = ({ children }) => {\r\n  const containerRef = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleDocumentClick = (e) => {\r\n    if (isOpen) {\r\n      const container = containerRef.current;\r\n      if (container.contains(e.target) || container === e.target) {\r\n        return;\r\n      }\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    ['click', 'touchstart'].forEach((event) =>\r\n      document.addEventListener(event, handleDocumentClick, false)\r\n    );\r\n\r\n    return () => {\r\n      ['click', 'touchstart'].forEach((event) =>\r\n        document.removeEventListener(event, handleDocumentClick, false)\r\n      );\r\n    };\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <div ref={containerRef} className={`app-menu ${isOpen ? 'shown' : ''}`}>\r\n      {children}\r\n      <NavLink\r\n        className=\"app-menu-button d-inline-block d-xl-none\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        <i className=\"simple-icon-options\" />\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApplicationMenu;\r\n","// import ThumbnailLetters from 'components/cards/ThumbnailLetters';\r\nimport React from 'react';\r\n\r\nconst ChatHeading = ({ name, thumb, lastSeenDate }) => {\r\n  return (\r\n    <>\r\n      <div className=\"d-flex flex-row chat-heading\">\r\n        <div className=\"d-flex\">\r\n          <img\r\n            alt={name}\r\n            src={thumb}\r\n            // className=\"img-thumbnail border-0 rounded-circle ml-0 mr-4 list-thumbnail align-self-center small\"\r\n            className=\" rounded-circle img-thumbnail border mr-4 mb-1\"\r\n            style={{ width: \"70px\", height: \"70px\", objectFit: \"cover\", overflow: \"hidden\"  }}\r\n          />\r\n          {/* <ThumbnailLetters\r\n          small\r\n                  rounded\r\n                  text={thumb}\r\n                  className=\"m-2\"\r\n                /> */}\r\n        </div>\r\n        <div className=\" d-flex min-width-zero\">\r\n          <div className=\"card-body pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\r\n            <div className=\"min-width-zero\">\r\n              <div>\r\n                <p className=\"list-item-heading mb-1 truncate \">{name}</p>\r\n              </div>\r\n              <p className=\"mb-0 text-muted text-small\">\r\n                {lastSeenDate === '0' ? '-' : lastSeenDate}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"separator mb-5\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ChatHeading);\r\n","/* eslint-disable*/\r\n/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Card, NavLink, Row, Spinner, TabContent, TabPane } from 'reactstrap';\r\nimport AC from 'agora-chat';\r\n\r\n\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nimport {\r\n  getContacts,\r\n  getConversations,\r\n  changeConversation,\r\n  addMessageToConversation,\r\n} from 'redux/actions';\r\n// import ChatApplicationMenu from 'containers/applications/ChatApplicationMenu';\r\n// import ChatHeading from 'components/applications/ChatHeading';\r\n// import MessageCard from 'components/applications/MessageCard';\r\nimport SaySomething from 'components/applications/SaySomething';\r\nimport TimestampConverter from '../Calculation/TimestampConverter';\r\nimport axios from 'axios';\r\nimport { appKey, baseUrl } from 'constants/defaultValues';\r\nimport ApplicationMenu from 'components/common/ApplicationMenu';\r\nimport ChatHeading from './ChatHeading';\r\nimport ThumbnailLetters from './ThumbnailLetters';\r\n// import ThumbnailLetters from 'components/cards/ThumbnailLetters';\r\n// import MessageCard from './MessageCard';\r\n\r\nconst ChatApp = ({\r\n  // intl,\r\n  // allContacts,\r\n  conversations,\r\n  loadingConversations,\r\n  loadingContacts,\r\n  currentUser,\r\n  selectedUser,\r\n  selectedUserId,\r\n\r\n  getContactsAction,\r\n  getConversationsAction,\r\n  changeConversationAction,\r\n  addMessageToConversationAction,\r\n}) => {\r\n  const [activeTab, setActiveTab] = useState('messages');\r\n  const [messageInput, setMessageInput] = useState('');\r\n  const scrollBarRef = useRef(null);\r\n  useEffect(() => {\r\n    document.body.classList.add('no-footer');\r\n    const currentUserId = 0;\r\n    getContactsAction();\r\n    getConversationsAction(currentUserId);\r\n\r\n    return () => {\r\n      document.body.classList.remove('no-footer');\r\n    };\r\n  }, [getContactsAction, getConversationsAction]);\r\n\r\n  const focusScrollBottom = () => {\r\n    setTimeout(() => {\r\n      if (scrollBarRef.current) {\r\n        scrollBarRef.current._ps.element.scrollTop =\r\n          scrollBarRef.current._ps.contentHeight;\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loadingConversations && loadingContacts && selectedUser == null) {\r\n      changeConversationAction(selectedUserId);\r\n      focusScrollBottom();\r\n    }\r\n  }, [\r\n    changeConversationAction,\r\n    loadingContacts,\r\n    loadingConversations,\r\n    selectedUser,\r\n    selectedUserId,\r\n  ]);\r\n\r\n\r\n  // const handleChatInputPress = (e) => {\r\n  //   if (e.key === 'Enter') {\r\n  //     if (messageInput.length > 0) {\r\n  //       addMessageToConversationAction(\r\n  //         currentUser.id,\r\n  //         selectedUser.id,\r\n  //         messageInput,\r\n  //         conversations\r\n  //       );\r\n  //       setMessageInput('');\r\n  //       setActiveTab('messages');\r\n  //       focusScrollBottom();\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  // const handleSendButtonClick = () => {\r\n  //   if (messageInput.length > 0) {\r\n  //     addMessageToConversationAction(\r\n  //       currentUser.id,\r\n  //       selectedUser.id,\r\n  //       messageInput,\r\n  //       conversations\r\n  //     );\r\n  //     setMessageInput('');\r\n  //     setActiveTab('messages');\r\n  //     focusScrollBottom();\r\n  //   }\r\n  // };\r\n\r\n  // const { messages } = intl;\r\n\r\n  const selectedConversation =\r\n    loadingConversations && loadingContacts && selectedUser\r\n      ? conversations.find(\r\n          (x) =>\r\n            x.users.includes(currentUser.id) &&\r\n            x.users.includes(selectedUser.id)\r\n        )\r\n      : null;\r\n\r\n      // const role = localStorage.getItem(\"roleRes\");\r\n  const {pid}=useParams();\r\n\r\n      const [connection, setConnection] = useState(null);\r\n      const [userId, setUserId] = useState(\"\");\r\n      const [token, setToken] = useState(\"\");\r\n      const [peerId, setPeerId] = useState(pid);\r\n      const tokenRes = localStorage.getItem(\"tokenRes\")\r\n      // const [appKey, setAppKey] = useState(\"\")\r\n      const [fullName, setFullName] = useState([])\r\n\r\n//       console.log(\"fullName\", fullName)\r\n//       console.log(\"peer\", peerId)\r\n// if(fullName.length > 0){\r\n//       console.log(\"name\",fullName.find(user => user.username === peerId).name)\r\n// }\r\n      useEffect(() => {\r\n        // const params = {username: peerId};\r\n        // console.log(\"start\")\r\n\r\n        const UserNameUrl = `${baseUrl}/api/chat/user/details?username=${peerId}`\r\n        const fetchData = async () => {\r\n          try {\r\n            const response = await axios.get(UserNameUrl);\r\n            // console.log(\"namechk\",response.data);\r\n            setFullName(response.data);\r\n          } catch (error) {\r\n            console.error(\"An error occurred:\", error);\r\n          }\r\n        };\r\n    \r\n        fetchData(); \r\n      }, [peerId]); \r\n\r\n\r\n      useEffect(() => {\r\n        const fetchData = async () => {\r\n          try {\r\n            \r\n            const response = await axios.get(`${baseUrl}/api/chat/usertoken`, {\r\n            // const response = await axios.get(`${baseUrl}/api/chat/lawyer/${pid}/usertoken`, {\r\n              headers: {\r\n                'Authorization': `Bearer ${tokenRes}`, \r\n              }\r\n            });\r\n            setToken(response.data.token);\r\n            setUserId(response.data.chatUserName)\r\n            // setAppKey(response.data.appKey)\r\n            // setPeerId(response.data.targetChatUserName)\r\n            // console.log(\"run\",response)\r\n          } catch (err) {\r\n            console.error(err);\r\n          }\r\n        };\r\n    \r\n        fetchData();\r\n      }, []); \r\n\r\n      \r\n \r\n      \r\n      \r\n  const [peerMessage, setPeerMessage] = useState('');\r\n  const [logs, setLogs] = useState([]);\r\n  const [serverConversations, setServerConversations] = useState([]);\r\n  const [loading, setLoading] = useState(true)\r\n  const [loadingConversation, setLoadingConversation] = useState(true)\r\n  const [chatLoading, setChatLoading] =useState(true)\r\n  const [conversationIds, setConversationIds] = useState([]);\r\n  const [conversationFullName,setConversationFullName] = useState([]);\r\n  // const [historyMessages, setHistoryMessages] = useState([]); \r\n\r\n  // console.log(\"conversation\", serverConversations)\r\n  // console.log(\"conversationIds\", conversationIds)\r\n  // console.log(\"conversationFullName\", conversationFullName);\r\n\r\n\r\n  useEffect(() => {\r\n    const ids = serverConversations.map(conversation => conversation.conversationId);\r\n    setConversationIds(ids);\r\n  }, [serverConversations]);\r\n\r\n  useEffect(() => {\r\n    \r\n    const fetchData = async () => {\r\n      try {\r\n        const params = new URLSearchParams();\r\n        conversationIds.forEach(id => params.append('username', id));\r\n        const UserNameUrl = `${baseUrl}/api/chat/user/details?${params.toString()}`;\r\n  \r\n        const response = await axios.get(UserNameUrl);\r\n        // console.log(\"conversationFullName\", response.data);\r\n        setConversationFullName(response.data);\r\n      } catch (error) {\r\n        console.error(\"An error occurred:\", error);\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, [conversationIds]);\r\n\r\n  // useEffect(() => {\r\n  //   // const params = {username: peerId};\r\n\r\n  //   const UserNameUrl = `${baseUrl}/api/chat/user/details?username=${conversationIds}`\r\n  //   const fetchData = async () => {\r\n  //     try {\r\n  //       const response = await axios.get(UserNameUrl);\r\n  //       console.log(\"conversationFullName\",response.data);\r\n  //       setConversationFullName(response.data);\r\n  //     } catch (error) {\r\n  //       console.error(\"An error occurred:\", error);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchData(); \r\n  // }, [conversationIds]); \r\n\r\n  // console.log(\"log\",logs)\r\n\r\n  // const appKey = '611104323#1329874';\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      const conn = new AC.connection({\r\n        appKey: appKey,\r\n      });\r\n  \r\n      conn.addEventHandler('connection&message', {\r\n        onConnected: () => {\r\n          // addLog('Connect success!');\r\n          // fetchHistoryMessages(); \r\n          conn.getServerConversations({ pageSize: 50, cursor: '' })\r\n            .then((res) => {\r\n              // console.log(\"conversation\", res.data.conversations);\r\n              setServerConversations(res.data.conversations);\r\n              setLoadingConversation(false);\r\n              // addLog(\"\");\r\n            })\r\n            .catch((error) => {\r\n              console.log('Error fetching server conversations:', error);\r\n            });\r\n          //   if (peerId !== undefined) {\r\n  \r\n          // conn.addContact(peerId, \"hi\")\r\n          //   .then((res) => {\r\n          //     console.log(\"addcontact\", res);\r\n          //     console.log(\"addcontactName\", peerId);\r\n          //   });\r\n          // }\r\n  \r\n          if (peerId !== undefined) {\r\n            conn.getHistoryMessages({\r\n              targetId: peerId, // The user ID of the peer user for one-to-one chat or group ID for group chat.\r\n              chatType: 'singleChat', // The chat type: `singleChat` for one-to-one chat or `groupChat` for group chat.\r\n              pageSize: 20, // The number of messages to retrieve per page. The value range is [1,50] and the default value is 20.\r\n              cursor: '',\r\n              searchDirection: 'down', // The message search direction: `up` means to retrieve messages in the descending order of the message timestamp and `down` means to retrieve messages in the ascending order of the message timestamp.\r\n              searchOptions: {\r\n                msgTypes: ['txt'], // An array of message types for query. If no value is passed in, all types of message will be queried.\r\n                startTime: new Date('2024, 07, 17').getTime(), // The start timestamp for query. The unit is millisecond.\r\n                endTime: Date.now(), // The end timestamp for query. The unit is millisecond.\r\n              },\r\n            }).then((res) => {\r\n              // console.log(\"hist\",res)\r\n\r\n              const newLogs = res.messages.map((message) => (\r\n                <>\r\n                  {/* <strong><h4>{message.from === userId ? \"You\" : message.from}</h4></strong> <span className='text-muted'>{message.msg}</span> {\" \"} */}\r\n                  <strong><h4>{message.from === userId ? \"You\" : fullName.length > 0 ? fullName.find(user => user.username === message.from).name : message.from}</h4></strong> <span className='text-muted'>{message.msg}</span> {\" \"}\r\n                  <span className='text-muted text-right'><TimestampConverter timeStamp={message.time} format=\"datetime\" /></span>\r\n                </>\r\n              ));\r\n  \r\n              setLogs((prevLogs) => [...prevLogs, ...newLogs]);\r\n              setChatLoading(false);\r\n            })\r\n            .catch((error) => {\r\n              console.log('Error fetching historical messages:', error);\r\n            });\r\n          }\r\n        },\r\n      \r\n        // onDisconnected: () => {\r\n        //   // addLog('Logout!');\r\n        //   // addLog('Logout success!');\r\n        //   console.error(\"chat logout\")\r\n        // },\r\n        onTextMessage: (message) => {\r\n          // console.log(\"msg\", message);\r\n          const time = message.time;\r\n          \r\n          if (message.from === peerId) {\r\n            addLog(\r\n              <>\r\n                {/* <strong><h4>{message.from}</h4></strong>  <span className='text-muted'>{message.msg}</span>   */}\r\n                <strong><h4>{fullName.length > 0 ? fullName.find(user => user.username === message.from).name : message.from}</h4></strong>  <span className='text-muted'>{message.msg}</span>  \r\n                <span className='text-muted text-right'><TimestampConverter timeStamp={time} format=\"datetime\" /></span>\r\n              </>\r\n            );\r\n          }\r\n        },\r\n        onTokenWillExpire: () => {\r\n          // addLog('Token is about to expire');\r\n          console.error('Token is about to expire')\r\n        },\r\n        onTokenExpired: () => {\r\n          console.error('The token has expired')\r\n          // addLog('The token has expired');\r\n        },\r\n        onError: (error) => {\r\n          console.log('on error', error);\r\n        },\r\n      });\r\n  \r\n      setConnection(conn);\r\n      conn.open({\r\n        user: userId,\r\n        agoraToken: token,\r\n      });\r\n      setLoading(false);\r\n    }, 3000);\r\n  \r\n    return () => clearTimeout(timeoutId);\r\n  }, [peerId, userId, token, appKey,fullName]);\r\n\r\n\r\n  \r\n\r\n//   connection.getServerConversations({pageSize:50, cursor: ''}).then((res)=>{\r\n//     console.log(\"res\",res)\r\n// })\r\n\r\n  // const fetchHistoryMessages = () => {\r\n  //   if (!connection) return;\r\n\r\n  //   const options = {\r\n  //     targetId: peerId,\r\n  //     chatType: \"singleChat\",\r\n  //     pageSize: 20,\r\n  //     searchDirection: 'down',\r\n  //     searchOptions: {\r\n  //       from: userId,\r\n  //       msgTypes: ['txt'],\r\n  //       startTime: new Date('2024-05-17').getTime(),\r\n  //       endTime: new Date('2024-05-18').getTime(),\r\n  //     },                                                                // check the name and add log\r\n  //   };\r\n\r\n  //   connection.getHistoryMessages(options).then((messages) => {\r\n  //     console.log(\"Fetched historical messages\", messages);\r\n  //     setHistoryMessages(messages);\r\n  //     messages.forEach(message => {\r\n  //       addLog(`Historical message from: ${message.from} Message: ${message.msg}`);\r\n  //     });\r\n  //   }).catch((error) => {\r\n  //     console.log('Error fetching historical messages', error);\r\n  //   });\r\n  // };\r\n\r\n  const addLog = (message) => {\r\n    setLogs((prevLogs) => [...prevLogs, message]);\r\n  };\r\n\r\n  // const handleLogout = () => {\r\n  //   connection.close();\r\n  //   addLog('Logout');\r\n  // };\r\n\r\n  const handleSendMessage = () => {\r\n    const option = {\r\n      chatType: 'singleChat',\r\n      type: 'txt',\r\n      to: peerId,\r\n      msg: peerMessage,\r\n    };\r\n    const msg = AC.message.create(option);\r\n    connection\r\n      .send(msg)\r\n      .then(() => {\r\n        // console.log(\"sms\", msg);\r\n      \r\n        const time = msg.time;\r\n      \r\n        addLog(\r\n          <>\r\n            <strong><h4>{\"You\"}</h4></strong> <br /> <span className='text-muted'>{peerMessage}</span>  \r\n           <span className='text-muted text-right'> <TimestampConverter timeStamp={time} format=\"datetime\" /></span>\r\n          </>\r\n        );\r\n      \r\n        setPeerMessage('');\r\n      focusScrollBottom();\r\n\r\n      })\r\n      \r\n      .catch(() => {\r\n        console.log('send private text fail');\r\n      });\r\n  };\r\n\r\n  const handleConversationClick = (selectedUserId) => {\r\n    setChatLoading(true)\r\n    setPeerId(selectedUserId);\r\n    setLogs([]);\r\n    setFullName([]);\r\n    \r\n  };\r\n\r\n  const handleChatInputPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      if (peerMessage.length > 0) {\r\n        handleSendMessage();\r\n        setPeerMessage('');\r\n        setActiveTab('messages');\r\n        focusScrollBottom();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    focusScrollBottom();\r\n  }, [peerId, addLog]);\r\n \r\n\r\n  // return loadingConversations && loadingContacts ? (\r\n  return  (\r\n  <>\r\n  {loading ? (\r\n    <div className='loading' />\r\n    // <div className=\"d-flex justify-content-center align-items-center vh-70\">\r\n    //   <Spinner color=\"primary\" className=\"\" />\r\n    // </div>\r\n  ) : (\r\n      <Row className=\"app-row\">\r\n        <Colxx xxs=\"12\" className=\"chat-app\">\r\n          {peerId && loadingConversations && selectedUser && (\r\n                        <NavLink href=\"#\">\r\n            <ChatHeading\r\n              name={fullName.length > 0 ? fullName.find(user => user.username === peerId).name : peerId}\r\n              thumb={`${baseUrl}/${fullName.length > 0 ? fullName.find(user => user.username === peerId).imageUrl : peerId}`}\r\n              // lastSeenDate={selectedUser.lastSeenDate}\r\n            />\r\n            </NavLink>\r\n          )}\r\n\r\n        {!peerId && (\r\n          <>\r\n          <div className=\"d-flex justify-content-center align-items-center vh-70\">\r\n          <i className=\"simple-icon-bubbles display-1\" />\r\n        </div>\r\n          <h2 className='d-flex justify-content-center align-items-center'>Chat</h2>\r\n          </>\r\n        )}\r\n\r\n          {peerId && selectedConversation && (\r\n            <PerfectScrollbar\r\n              ref={scrollBarRef}\r\n              // containerRef={(ref) => {}}\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              {/* {selectedConversation.messages.map((item, index) => { */}\r\n              {/* {logs.map((log, index) => {\r\n                const sender = allContacts.find((x) => x.id === item.sender);\r\n                return (\r\n                  <MessageCard\r\n                    key={index}\r\n                    sender={sender}\r\n                    item={log}\r\n                    currentUserid={currentUser.id}\r\n                  />\r\n                );\r\n              })} */}\r\n              {chatLoading ? ( \r\n                // <div className='loading' />\r\n                <div className=\"d-flex justify-content-center mt-4\">\r\n              <Spinner color=\"primary\" className=\"mb-1\" />\r\n            </div>\r\n              ) : (\r\n              <div>\r\n        {logs.map((log, index) => (\r\n          <Card className=' mb-3  p-3' key={index}>{log}</Card>\r\n      //     <Card\r\n      //     index={index}\r\n      //   // className=\"d-inline-block mb-3 float-right\"\r\n      //   // className={`d-inline-block mb-3 float-${\r\n      //   //   item.sender !== currentUserid ? 'left' : 'right'\r\n      //   // }`}\r\n      // >\r\n      //   <CardBody>\r\n      //     {/* <div className=\"d-flex flex-row pb-1\"> */}\r\n      //       {/* <img\r\n      //         alt={sender.name}\r\n      //         src={sender.thumb}\r\n      //         className=\"img-thumbnail border-0 rounded-circle mr-3 list-thumbnail align-self-center xsmall\"\r\n      //       /> */}\r\n      //       {/* <div className=\" d-flex flex-grow-1 min-width-zero\">\r\n      //         <div className=\"m-2 pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\r\n      //           <div className=\"min-width-zero\">\r\n      //             <p className=\"mb-0 truncate list-item-heading\">\r\n      //               {log}\r\n      //             </p>\r\n      //           </div>\r\n      //         </div>\r\n      //       </div>\r\n      //     </div> */}\r\n\r\n      //     <div className=\"chat-text-left\">\r\n      //       <p className=\"mb-0 text-semi-muted\">{log}</p>\r\n      //     </div>\r\n      //   </CardBody>\r\n      // </Card>\r\n        ))}\r\n      </div>\r\n      )}\r\n            </PerfectScrollbar>\r\n          )}\r\n        </Colxx>\r\n      </Row>\r\n      )}\r\n      {/* <Button className='mb-3' onClick={handleLogin}>Connect</Button> */}\r\n      <div className=\"d-flex justify-content-center\">\r\n  {/* <Button className='mb-3' onClick={handleLogin}>Connect</Button> */}\r\n</div>\r\n      { peerId && (<SaySomething\r\n        // placeholder={messages['chat.saysomething']}\r\n        placeholder=\"Say something...\"\r\n        messageInput={peerMessage}\r\n        handleChatInputPress={handleChatInputPress}\r\n        handleChatInputChange={(e) => {\r\n          setPeerMessage(e.target.value);\r\n        }}\r\n        handleSendButtonClick={handleSendMessage}\r\n      />)}\r\n      {/* <ChatApplicationMenu activeTab={activeTab} toggleAppMenu={setActiveTab} /> */}\r\n      <ApplicationMenu>\r\n      <TabContent activeTab={activeTab} className=\"chat-app-tab-content\">\r\n\r\n      <TabPane tabId=\"messages\" className=\"chat-app-tab-pane\">\r\n          <PerfectScrollbar\r\n            options={{ suppressScrollX: true, wheelPropagation: false }}\r\n          >\r\n            <div className=\"pt-2 pr-4 pl-4 pb-2\">\r\n            <h3 className=\"font-weight-bold mt-2\">Contacts</h3>\r\n            {loadingConversation ? (\r\n              <div className=\"d-flex justify-content-center mt-4\">\r\n              <Spinner color=\"primary\" className=\"mb-1\" />\r\n            </div>\r\n                  ) :(\r\n            <>\r\n            {serverConversations.length === 0 && (\r\n              <p>There is no contacts</p>\r\n            )}\r\n\r\n            {serverConversations.map((conversation) => (\r\n          //     <>\r\n          // <li key={conversation.conversationId}>\r\n          //   {conversation.conversationId}\r\n          // </li>\r\n        \r\n                      // <NavLink\r\n                      // key={conversation.conversationId}\r\n                      //   className=\"d-flex\"\r\n                      //   to=\"#\"\r\n                      //   location={{}}\r\n                      //   onClick={(e) =>\r\n                      //     handleConversationClick(conversation.conversationId)\r\n                      //   }\r\n                      // >\r\n                      <NavLink\r\n                          className=\"d-flex\"\r\n                          key={conversation.conversationId}\r\n                          to=\"#\"\r\n                          location={{}}\r\n                          onClick={() => handleConversationClick(conversation.conversationId)}\r\n                          style={{ cursor: 'pointer' }}\r\n                        >\r\n                          {(conversationFullName.length > 0 && conversationFullName.find(user => user.username)) ? (\r\n                          <img\r\n                            alt={conversation.conversationId}\r\n                            src={`${baseUrl}/${conversationFullName.length > 0 ? conversationFullName.find(user => user.username === conversation.conversationId).imageUrl : conversation.conversationId}`}\r\n                            // className=\"img-thumbnail border-0 rounded-circle mr-3 list-thumbnail align-self-center xsmall\"\r\n                            className=\" rounded-circle img-thumbnail border mr-2\"\r\n                            style={{ width: \"40px\", height: \"40px\", objectFit: \"cover\", overflow: \"hidden\"  }}\r\n                          /> ) : (\r\n                          <ThumbnailLetters\r\n                          extraSmall \r\n                  rounded\r\n                  text={conversation.conversationId}\r\n                  className=\"m-1\"\r\n                />\r\n              )}\r\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\r\n                            <div className=\"m-2 pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\r\n                              <div className=\"min-width-zero\">\r\n                                {/* <p className=\"mb-0 truncate\">{conversation.conversationId}</p> */}\r\n                                <p className=\"mb-0 truncate\">{conversationFullName.length > 0 ? conversationFullName.find(user => user.username === conversation.conversationId).name : conversation.conversationId}</p>\r\n                              </div>\r\n                               <div className=\"separator mb-2\" />\r\n                            </div>\r\n                          </div>\r\n\r\n                        </NavLink>\r\n                      \r\n                        // <div className=\"d-flex flex-grow-1 min-width-zero\"  key={conversation.conversationId}>\r\n                        //   <Col lg={12} className=\"pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\r\n                        //     <Card className=\"min-width-zero p-2 mb-2\">\r\n                        //       <p className=\" mb-0 truncate\" onClick={() =>\r\n                        //   handleConversationClick(conversation.conversationId)\r\n                        // }>{conversation.conversationId}</p>\r\n                        //       {/* <p className=\"mb-1 text-muted text-small\">\r\n                        //         {item.lastMessageTime}\r\n                        //       </p> */}\r\n                        //     </Card>\r\n                        //   </Col>\r\n                        // </div>\r\n                      // </NavLink>\r\n                      // </>\r\n                ))}\r\n                </>\r\n              )}\r\n            </div>\r\n          </PerfectScrollbar>\r\n        </TabPane>\r\n        </TabContent>\r\n    </ApplicationMenu>\r\n\r\n\r\n    </>\r\n  ) \r\n};\r\n\r\nconst mapStateToProps = ({ chatApp }) => {\r\n  const {\r\n    allContacts,\r\n    conversations,\r\n    loadingConversations,\r\n    loadingContacts,\r\n    currentUser,\r\n    selectedUser,\r\n    selectedUserId,\r\n  } = chatApp;\r\n\r\n  return {\r\n    allContacts,\r\n    conversations,\r\n    loadingConversations,\r\n    loadingContacts,\r\n    currentUser,\r\n    selectedUser,\r\n    selectedUserId,\r\n  };\r\n};\r\nexport default injectIntl(\r\n  connect(mapStateToProps, {\r\n    getContactsAction: getContacts,\r\n    getConversationsAction: getConversations,\r\n    changeConversationAction: changeConversation,\r\n    addMessageToConversationAction: addMessageToConversation,\r\n  })(ChatApp)\r\n);","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { createRef, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Col,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  InputGroup,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport indentityStatusList from \"../CommonCardList/IdentityStatusList\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\nimport country from \"./Country\";\r\nimport DomainList from \"./DomainList\";\r\nimport language from \"./Languages\";\r\nimport {\r\n  validateBio,\r\n  validateDomain,\r\n  validateIdentityStatus,\r\n  validateLocation,\r\n} from \"./validation\";\r\n\r\nconst ApplyAsAlumniAbout = ({ currentStep, setCurrentStep }) => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const [file1, setFile1] = useState(null);\r\n  const [imageError, setImageError] = useState(false);\r\n  const [imageErrorMessage, setImageErrorMessage] = useState(null);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [aboutLoading, setAboutLoading] = useState(false);\r\n  const [aboutField, setAboutField] = useState({\r\n    image: \"\",\r\n  });\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [skillsTag, setSkillsTag] = useState([]);\r\n  const [imageError1, setImageError1] = useState(false);\r\n  const [imageErrorMessage1, setImageErrorMessage1] = useState(null);\r\n\r\n  const [fields] = useState({\r\n    image: \"\",\r\n    linkedinUrl: \"\",\r\n    twitterHandle: \"\",\r\n    bio: \"\",\r\n    location: \"\",\r\n    domain: \"\",\r\n    identityStatus: \"\",\r\n  });\r\n\r\n  const languageOptions = language.map((option) => ({\r\n    value: option.iso_code,\r\n    label: option.name,\r\n  }));\r\n\r\n  // const indentityStatusList = [\r\n  //   { value: \"IMMIGRANT\", label: \"IMMIGRANT\" },\r\n  //   { value: \"PR_CITIZEN\", label: \"PR_CITIZEN\" },\r\n  // ];\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setFile1(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      setImageError(false);\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        setSelectedFile(base64Image);\r\n        setAboutField({ ...aboutField, image: base64Image });\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const [selectedFile2, setSelectedFile2] = useState(null);\r\n\r\n  const handleFileChange2 = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    if (!file) return; // No file selected\r\n\r\n    if (!(file.type === \"application/pdf\")) {\r\n      // alert(\"Please select a valid PDF file.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"Please upload a PDF file.\");\r\n      return;\r\n    }\r\n\r\n    const fileSizeMB = file.size / (1024 * 1024); // Convert bytes to MB\r\n\r\n    if (fileSizeMB > 2) {\r\n      // alert(\"File size exceeds 2MB limit.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"File size must be less than  2MB\");\r\n\r\n      return;\r\n    }\r\n\r\n    setSelectedFile2(file);\r\n    setImageError1(false);\r\n    setImageErrorMessage1(\"\");\r\n  };\r\n\r\n  const mentorAboutUrl = `${baseUrl}/api/alumni/alumnidetails/about`;\r\n  const imageUploadUrl = `${baseUrl}/api/alumni/profile-image`;\r\n  const alumniResumePostUrl = ` ${baseUrl}/api/resume?role=ALUMNI`;\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  // const postDataAbout = async (data) => {\r\n  //   setAboutLoading(true);\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"image\", file1);\r\n\r\n  //   const alumniProfile = {\r\n  //     linkedinUrl: data.linkedinUrl,\r\n  //     twitterHandle: data.twitterHandle,\r\n  //     languages: data.language,\r\n  //     skills: data.skills,\r\n  //     bio: data.bio,\r\n  //     location: data.location,\r\n  //   };\r\n\r\n  //   formData.append(\r\n  //     \"alumniProfile\",\r\n  //     new Blob([JSON.stringify(alumniProfile)], { type: \"application/json\" })\r\n  //   );\r\n\r\n  //   try {\r\n  //     const response = await axios.post(mentorAboutUrl, formData, {\r\n  //       headers: {\r\n  //         Authorization: `Bearer ${token}`,\r\n  //       },\r\n  //     });\r\n  //     setAboutLoading(false);\r\n  //     ToasterComponent(\"success\", response.data.statuses);\r\n  //     handleNextStep();\r\n  //     localStorage.setItem(\"status\", \"1\");\r\n  //   } catch (error) {\r\n  //     setImageError(false);\r\n  //     setAboutLoading(false);\r\n  //     if (error.response) {\r\n  //       error.response.data.statuses.forEach((status) => {\r\n  //         NotificationManager.error(\r\n  //           status.message,\r\n  //           \"Oops!\",\r\n  //           3000,\r\n  //           null,\r\n  //           null,\r\n  //           \"\"\r\n  //         );\r\n  //         if (status.code === 40327) {\r\n  //           setImageErrorMessage(status.message);\r\n  //           setImageError(true);\r\n  //         }\r\n  //       });\r\n  //     } else {\r\n  //       NotificationManager.error(\r\n  //         \"something went wrong\",\r\n  //         \"Oops!\",\r\n  //         3000,\r\n  //         null,\r\n  //         null,\r\n  //         \"\"\r\n  //       );\r\n  //     }\r\n  //   }\r\n  // };\r\n  const postImage = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    try {\r\n      const response = await axios.post(imageUploadUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n      return response.data; // Handle success response from backend\r\n    } catch (error) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"Failed to upload image. Please try again.\");\r\n      throw error;\r\n    }\r\n  };\r\n  const postProfileData = async (data) => {\r\n    const alumniProfile = {\r\n      linkedinUrl: data.linkedinUrl,\r\n      twitterHandle: data.twitterHandle,\r\n      languages: data.language,\r\n      skills: data.skills,\r\n      bio: data.bio,\r\n      location: data.location,\r\n      domain: data.domain,\r\n      identityStatus: data.identityStatus,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(mentorAboutUrl, alumniProfile, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\", // Set Content-Type to application/json\r\n        },\r\n      });\r\n      setAboutLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"1\");\r\n    } catch (error) {\r\n      setAboutLoading(false);\r\n      NotificationManager.error(\r\n        \"Failed to submit profile data\",\r\n        \"Oops!\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    setAboutLoading(true);\r\n\r\n    try {\r\n      // First, check if an image exists and upload it\r\n      if (file1) {\r\n        await postImage(file1); // Upload the image separately\r\n      }\r\n\r\n      // After the image upload, submit the rest of the form data (without the image)\r\n      await postProfileData({\r\n        linkedinUrl: values.linkedinUrl,\r\n        twitterHandle: values.twitterHandle,\r\n        language: languages,\r\n        skills: skillsTag,\r\n        bio: values.bio,\r\n        location: values.location,\r\n        domain: values.domain,\r\n        identityStatus: values.identityStatus,\r\n      });\r\n    } catch (error) {\r\n      setAboutLoading(false); // Stop loading in case of error\r\n    }\r\n  };\r\n\r\n  // file upload validation\r\n\r\n  const validateFile = (file) => {\r\n    // const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\r\n    const maxSize = 2 * 1024 * 1024; // 5MB\r\n    // if (!file) {\r\n    //   setImageError(true);\r\n    //   setImageErrorMessage(\"A profile picture is required\");\r\n    //   return false;\r\n    // }\r\n    // if (!allowedTypes.includes(file.type)) {\r\n    //   setImageError(true);\r\n    //   setImageErrorMessage(\r\n    //     \"Please upload a valid image file (JPEG, PNG, or GIF)\"\r\n    //   );\r\n    //   return false;\r\n    // }\r\n    if (file && file.size > maxSize) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"File size must be less than 2MB\");\r\n      return false;\r\n    }\r\n\r\n    setImageError(false);\r\n    setImageErrorMessage(\"\");\r\n    return true;\r\n  };\r\n  // file upload validation end\r\n\r\n  const handleTagsChange = (newSkills) => {\r\n    setSkillsTag(newSkills);\r\n  };\r\n\r\n  const postResumeData = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"resume\", selectedFile2);\r\n\r\n      await axios.post(alumniResumePostUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // console.log(`resres ${response.status}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        innerRef={forms[0]}\r\n        initialValues={{\r\n          linkedinUrl: fields.linkedinUrl,\r\n          twitterHandle: fields.twitterHandle,\r\n          bio: fields.bio,\r\n          location: fields.location,\r\n          domain: fields.domain,\r\n          identityStatus: fields.identityStatus,\r\n        }}\r\n        validateOnMount\r\n        // onSubmit={(values) => {\r\n        //   if (!file1 || validateFile(file1)) {\r\n        //     postDataAbout({\r\n        //       ...values,\r\n        //       language: languages,\r\n        //       skills: skillsTag,\r\n        //     });\r\n        //   }\r\n        // }}\r\n        onSubmit={(values) => {\r\n          if (!file1 || validateFile(file1)) {\r\n            handleSubmit(values);\r\n            postResumeData(); // Call the combined submit function\r\n          }\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className=\"av-tooltip tooltip-label-right \">\r\n            <Alert color=\"primary\">\r\n              <strong>Lovely to see you!</strong>\r\n              <br /> Filling out the form only takes a couple of minutes.\r\n              We&apos;d love to learn more about your background and the\r\n              ins-and-outs of why you&apos;d like to become a mentor. Keep\r\n              things personal and talk directly to us and your mentees. We\r\n              don&apos;t need jargon and polished cover letters here! <br />\r\n              <br />\r\n              You agree to our code of conduct and the mentor agreement by\r\n              sending the form, so be sure to have a look at those.\r\n            </Alert>\r\n            <FormGroup>\r\n              <Label for=\"image\">Image</Label>\r\n              {imageError && (\r\n                <div className=\"invalid-feedback d-block\">\r\n                  {imageErrorMessage}\r\n                </div>\r\n              )}\r\n              <Row>\r\n                <Col md={2} className=\"\">\r\n                  <img\r\n                    src={selectedFile || \"/assets/img/profiles/l-1.jpg\"}\r\n                    className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                    style={{\r\n                      width: \"70px\",\r\n                      height: \"70px\",\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                    alt=\"img\"\r\n                  />\r\n                </Col>\r\n                <Col md={5} className=\"mt-3 \">\r\n                  <InputGroup className=\"mb-3\">\r\n                    <div className=\"mt-1.5\">\r\n                      <Button\r\n                        className=\"default\"\r\n                        color=\"primary\"\r\n                        onClick={() =>\r\n                          document.getElementById(\"file-upload\").click()\r\n                        }\r\n                      >\r\n                        Upload profile pic <i className=\"iconsminds-upload \" />\r\n                      </Button>\r\n                      <Input\r\n                        id=\"file-upload\"\r\n                        type=\"file\"\r\n                        className=\"form-control d-none\"\r\n                        onChange={handleFileChange}\r\n                      />\r\n                      {file1 && (\r\n                        <p className=\"mt-2\">Selected file: {file1.name}</p>\r\n                      )}\r\n                    </div>\r\n                  </InputGroup>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n\r\n            {/* <FormGroup className=\"error-l-75\">\r\n              <Label>Location*</Label>\r\n              <Field\r\n                as=\"select\"\r\n                name=\"location\"\r\n                validate={validateLocation}\r\n                className=\"form-control\"\r\n              >\r\n                <option disabled value=\"\">\r\n                  Select Location\r\n                </option>\r\n                {country.map((option) => (\r\n                  <option key={option.iso_code} value={option.iso_code}>\r\n                    {option.name}\r\n                  </option>\r\n                ))}\r\n              </Field>\r\n              {errors.location && touched.location && (\r\n                <div className=\"invalid-feedback d-block\">\r\n                  {errors.location}\r\n                </div>\r\n              )}\r\n            </FormGroup> */}\r\n            <FormGroup className=\"error-l-75\">\r\n              <Label for=\"languages\">Languages known*</Label>\r\n              <Select\r\n                placeholder=\"Select Languages\"\r\n                name=\"languages\"\r\n                isMulti\r\n                options={languageOptions}\r\n                // validate={validateLanguages}\r\n                className=\"react-select\"\r\n                classNamePrefix=\"react-select\"\r\n                onChange={(selectedOptions) => {\r\n                  const languagesArray = selectedOptions\r\n                    ? selectedOptions.map((option) => option.value)\r\n                    : [];\r\n                  setLanguages(languagesArray);\r\n                }}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup className=\"error-l-125\">\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Label for=\"linkedinUrl\">LinkedIn URL*</Label>\r\n                  <Field\r\n                    className=\"form-control\"\r\n                    name=\"linkedinUrl\"\r\n                    type=\"url\"\r\n                    // validate={validateLinkedinUrl}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  <FormText color=\"muted\" className=\"\">\r\n                    e.g. https://www.linkedin.com/in/username/\r\n                  </FormText>\r\n                  {errors.linkedinUrl && touched.linkedinUrl && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.linkedinUrl}\r\n                    </div>\r\n                  )}\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Label for=\"twitterHandle\">Twitter Handle (optional)</Label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"twitterHandle\"\r\n                    id=\"twitterHandle\"\r\n                    className=\"form-control\"\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  <FormText color=\"muted\" className=\"\">\r\n                    Omit the &ldquo;@&rdquo; -e.g. &ldquo;dqmonn&rdquo;\r\n                  </FormText>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup className=\"error-l-75\">\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Label>Location*</Label>\r\n                  <Field\r\n                    as=\"select\"\r\n                    name=\"location\"\r\n                    validate={validateLocation}\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option disabled value=\"\">\r\n                      Select Country\r\n                    </option>\r\n                    {country.map((option) => (\r\n                      <option key={option.iso_code} value={option.iso_code}>\r\n                        {option.name}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                  {errors.location && touched.location && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.location}\r\n                    </div>\r\n                  )}\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Label>Domain*</Label>\r\n                  <Field\r\n                    as=\"select\"\r\n                    name=\"domain\"\r\n                    validate={validateDomain}\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option disabled value=\"\">\r\n                      Select Domain\r\n                    </option>\r\n                    {DomainList.map((option) => (\r\n                      <option key={option.name} value={option.name}>\r\n                        {option.name}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                  {errors.domain && touched.domain && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.domain}\r\n                    </div>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"my-3\">\r\n                <Col md={6}>\r\n                  <Label>Identity Status*</Label>\r\n                  <Field\r\n                    as=\"select\"\r\n                    name=\"identityStatus\"\r\n                    validate={validateIdentityStatus}\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option disabled value=\"\">\r\n                      Select Identity Satus\r\n                    </option>\r\n                    {indentityStatusList.map((option) => (\r\n                      <option key={option.name} value={option.name}>\r\n                        {option.label}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                  {errors.identityStatus && touched.identityStatus && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.identityStatus}\r\n                    </div>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"mt-3\">\r\n                <Col md={6}>\r\n                  <Label>CV</Label>\r\n                  {imageError1 && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {imageErrorMessage1}\r\n                    </div>\r\n                  )}\r\n\r\n                  <InputGroup className=\"\">\r\n                    <div className=\"\">\r\n                      <Button\r\n                        className=\"default\"\r\n                        color=\"primary\"\r\n                        onClick={() =>\r\n                          document.getElementById(\"file-upload-resume\").click()\r\n                        }\r\n                      >\r\n                        Upload Resume <i className=\"iconsminds-upload ml-2\" />\r\n                      </Button>\r\n                      {/* <Form> */}\r\n                      <Input\r\n                        id=\"file-upload-resume\"\r\n                        type=\"file\"\r\n                        className=\"d-none\"\r\n                        onChange={handleFileChange2}\r\n                        // validate={validateFile}\r\n                      />\r\n                    </div>\r\n                  </InputGroup>\r\n                  <div className=\"  my-2 \">\r\n                    {/* {selectedFile2 ? selectedFile2.name : \"\"} */}\r\n                    {selectedFile2\r\n                      ? `selected file is ${selectedFile2.name}`\r\n                      : \"\"}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Row>\r\n                <Col md={12}>\r\n                  <FormGroup>\r\n                    <Label for=\"skills\">Skills*</Label>\r\n\r\n                    <TagsInput\r\n                      required\r\n                      value={skillsTag}\r\n                      onChange={handleTagsChange}\r\n                      inputProps={{ placeholder: \"Add skills \" }}\r\n                      addOnBlur\r\n                      addKeys={[13, 188]}\r\n                    />\r\n\r\n                    <FormText>Add skill and press Enter or Comma </FormText>\r\n                    <FormText color=\"muted\">\r\n                      Describe your expertise to connect with mentors who have\r\n                      similar interests.\r\n                      <br />\r\n                      {/* Comma-separated list of your skills  */}\r\n                      (keep it below 10). Mentors will use this to find you.\r\n                    </FormText>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"bio\">Bio*</Label>\r\n              <Field\r\n                as=\"textarea\"\r\n                name=\"bio\"\r\n                id=\"bio\"\r\n                className=\"form-control\"\r\n                validate={validateBio}\r\n                autoComplete=\"off\"\r\n              />\r\n              {errors.bio && touched.bio && (\r\n                <div className=\"invalid-feedback d-block\">{errors.bio}</div>\r\n              )}\r\n              <FormText color=\"muted\">\r\n                Tell us (and your mentees) a little bit about yourself. Talk\r\n                about yourself in the first person, as if you&apos;d directly\r\n                talk to a mentee. This will be public.\r\n              </FormText>\r\n            </FormGroup>\r\n            <Row>\r\n              <Col className=\"text-center\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={`btn-shadow btn-multiple-state ${\r\n                    aboutLoading ? \"show-spinner\" : \"\"\r\n                  }`}\r\n                >\r\n                  <span className=\"spinner d-inline-block\">\r\n                    <span className=\"bounce1\" />\r\n                    <span className=\"bounce2\" />\r\n                    <span className=\"bounce3\" />\r\n                  </span>\r\n                  <span className=\"label\">Next</span>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApplyAsAlumniAbout;\r\n","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { createRef, useState } from \"react\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport { Button, Card, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport { EmploymentTypeData } from \"../Listing/ListingData\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst ApplyAsAlumniexperience = ({\r\n  currentStep,\r\n  setCurrentStep,\r\n  setLoading,\r\n}) => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n  const currentYear = new Date().getFullYear();\r\n  const [work, setWork] = useState({\r\n    experiences: [\r\n      {\r\n        company: \"\",\r\n        jobTitle: \"\",\r\n        employmentType: \"\",\r\n        jobLocation: \"\",\r\n        startYear: \"\",\r\n        endYear: \"\",\r\n        // price: \"\",\r\n      },\r\n    ],\r\n    price: \"\",\r\n  });\r\n  const years = [];\r\n  for (let year = currentYear; year >= 2005; year -= 1) {\r\n    years.push(year);\r\n  }\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  const alumniExperienceUrl = `${baseUrl}/api/alumni/alumnidetails/experience`;\r\n\r\n  const token = localStorage.getItem(\"tokenRes\");\r\n\r\n  const postExperience = async (data) => {\r\n    setProfileLoading(true);\r\n    try {\r\n      const response = await axios.post(alumniExperienceUrl, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setProfileLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"3\");\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 3000);\r\n    } catch (error) {\r\n      setProfileLoading(false);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        error.response.data.statuses.forEach((status) => {\r\n          NotificationManager.error(\r\n            status.message,\r\n            \"Oops!\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n        });\r\n      } else {\r\n        NotificationManager.error(\r\n          \"something went wrong\",\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeWorkExperience = (index) => {\r\n    setWork((prevState) => ({\r\n      ...prevState,\r\n      experiences: prevState.experiences.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const addWorkExperience = () => {\r\n    setWork((prevState) => ({\r\n      ...prevState,\r\n      experiences: [\r\n        ...prevState.experiences,\r\n        {\r\n          company: \"\",\r\n          jobTitle: \"\",\r\n          employmentType: \"\",\r\n          jobLocation: \"\",\r\n          startYear: \"\",\r\n          endYear: \"\",\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  // const handleWorkInputChange = (index, field, value) => {\r\n  //   setWork((prevState) => ({\r\n  //     ...prevState,\r\n  //     experience: prevState.experience.map((exp, i) =>\r\n  //       i === index ? { ...exp, [field]: value } : exp\r\n  //     ),\r\n  //   }));\r\n  // };\r\n  const handleWorkInputChange = (index, field, value) => {\r\n    setWork((prevState) => ({\r\n      ...prevState,\r\n      experiences: prevState.experiences.map((exp, i) =>\r\n        i === index ? { ...exp, [field]: value } : exp\r\n      ),\r\n      // If the field being updated is 'price', update the outer price as well\r\n      price: field === \"price\" ? value : prevState.price,\r\n    }));\r\n  };\r\n  // const handlePriceChange = (e) => {\r\n  //   setWork((prevState) => ({\r\n  //     ...prevState,\r\n  //     price: e.target.value,\r\n  //   }));\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        innerRef={forms[2]}\r\n        initialValues={work}\r\n        onSubmit={() => {\r\n          postExperience(work);\r\n        }}\r\n        validateOnMount\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className=\"av-tooltip tooltip-label-right my-4\">\r\n            {work.experiences.map((works, index) => (\r\n              // eslint-disable-next-line react/no-array-index-key\r\n              <div key={index}>\r\n                <div className=\"text-right\">\r\n                  {work.experiences.length > 1 && (\r\n                    <span>\r\n                      <Button\r\n                        id=\"closeButton\"\r\n                        color=\"primary\"\r\n                        outline\r\n                        className=\"icon-button\"\r\n                        onClick={() => removeWorkExperience(index)}\r\n                      >\r\n                        <span className=\"text-primary\">\r\n                          <strong>x</strong>\r\n                        </span>\r\n                      </Button>\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Company Name*</Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        required\r\n                        name={`education[${index}].company`}\r\n                        value={works.company}\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"company\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      />\r\n                      {errors.education?.[index]?.company &&\r\n                        touched.education?.[index]?.company && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].company}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].jobTitle`}>\r\n                        Job title*\r\n                      </Label>\r\n                      <Input\r\n                        name={`education[${index}].jobTitle`}\r\n                        id={`education[${index}].jobTitle`}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={works.jobTitle}\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"jobTitle\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      />\r\n                      {errors.education?.[index]?.jobTitle &&\r\n                        touched.education?.[index]?.jobTitle && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].jobTitle}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].employmentType`}>\r\n                        Employment type*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].employmentType`}\r\n                        id={`education[${index}].employmentType`}\r\n                        className=\"form-control\"\r\n                        value={works.employmentType}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"employmentType\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select Employment type\r\n                        </option>\r\n                        {EmploymentTypeData.map((option, i) => (\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          <option key={i} value={option.label}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n\r\n                      {errors.education?.[index]?.employmentType &&\r\n                        touched.education?.[index]?.employmentType && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].employmentType}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].jobLocation`}>\r\n                        Job location*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name={`education[${index}].jobLocation`}\r\n                        id={`education[${index}].jobLocation`}\r\n                        className=\"form-control\"\r\n                        required\r\n                        value={works.jobLocation}\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"jobLocation\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                        // validate={validatePackageDescription}\r\n                      />\r\n                      {errors.education?.[index]?.jobLocation &&\r\n                        touched.education?.[index]?.jobLocation && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].jobLocation}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].startDate`}>\r\n                        Start year*\r\n                      </Label>\r\n\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].startYear`}\r\n                        id={`education[${index}].startYear`}\r\n                        className=\"form-control\"\r\n                        value={works.startYear}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"startYear\",\r\n                            parseInt(e.target.value, 10)\r\n                          )\r\n                        }\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          Select year\r\n                        </option>\r\n                        {years.map((yr) => (\r\n                          <option key={yr} value={yr}>\r\n                            {yr}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n\r\n                      {errors.education?.[index]?.startYear &&\r\n                        touched.education?.[index]?.startYear && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].startYear}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].endYear`}>\r\n                        End year*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].endYear`}\r\n                        id={`education[${index}].endYear`}\r\n                        className=\"form-control\"\r\n                        value={works.endYear}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"endYear\",\r\n                            parseInt(e.target.value, 10)\r\n                          )\r\n                        }\r\n                        // validate={validatePackageDescription}\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          Select year\r\n                        </option>\r\n                        {years.map((yr) => (\r\n                          <option key={yr} value={yr}>\r\n                            {currentYear === yr ? \"Present\" : yr}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.education?.[index]?.endYear &&\r\n                        touched.education?.[index]?.endYear && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].endYear}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  {/* <Row>\r\n                    <Col>\r\n                      <FormGroup className=\"error-l-75\">\r\n                        <Label>Price*</Label>\r\n                        <Input\r\n                          className=\"form-control\"\r\n                          name={`education[${index}].company`}\r\n                          value={works.price}\r\n                          type=\"number\"\r\n                          required\r\n                          onChange={(e) =>\r\n                            handleWorkInputChange(\r\n                              index,\r\n                              \"price\",\r\n                              e.target.value\r\n                            )\r\n                          }\r\n                        />\r\n                        {errors.education?.[index]?.company &&\r\n                          touched.education?.[index]?.company && (\r\n                            <div className=\"invalid-feedback d-block\">\r\n                              {errors.education[index].price}\r\n                            </div>\r\n                          )}\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row> */}\r\n                </Row>\r\n                <hr />\r\n              </div>\r\n            ))}\r\n\r\n            <Card\r\n              onClick={addWorkExperience}\r\n              className=\"p-3 text-center my-5\"\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <h3 className=\"font-weight-bold text-primary\">\r\n                + Add more work experience\r\n              </h3>\r\n            </Card>\r\n            <Row className=\"my-2\">\r\n              <Col md={12}>\r\n                <FormGroup>\r\n                  <Label for=\"price\">Price*</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    id=\"price\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={work.price || \"\"}\r\n                    onChange={(e) => {\r\n                      const value = e.target?.value;\r\n                      if (value !== null && value !== undefined) {\r\n                        setWork((prevState) => ({\r\n                          ...prevState,\r\n                          price: value, // Update price directly here\r\n                        }));\r\n                      }\r\n                    }}\r\n                  />\r\n                  {errors.price && touched.price && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.price}\r\n                    </div>\r\n                  )}\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {\" \"}\r\n              <Col>\r\n                {\" \"}\r\n                <Button color=\"primary\" onClick={handlePrevStep}>\r\n                  Previous\r\n                </Button>\r\n              </Col>\r\n              <Col className=\"text-right\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={`btn-shadow btn-multiple-state ${\r\n                    profileLoading ? \"show-spinner\" : \"\"\r\n                  }`}\r\n                >\r\n                  <span className=\"spinner d-inline-block\">\r\n                    <span className=\"bounce1\" />\r\n                    <span className=\"bounce2\" />\r\n                    <span className=\"bounce3\" />\r\n                  </span>\r\n                  <span className=\"label\">Submit</span>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApplyAsAlumniexperience;\r\n","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { createRef, useState } from \"react\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport { Button, Card, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst ApplyAsAlumniProfile = ({ currentStep, setCurrentStep }) => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n\r\n  const [education, setEducation] = useState({\r\n    colleges: [\r\n      {\r\n        collegeName: \"\",\r\n        degree: \"\",\r\n        department: \"\",\r\n        year: \"\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  const currentYear = new Date().getFullYear();\r\n  const years = [];\r\n\r\n  for (let year = currentYear; year >= 2005; year -= 1) {\r\n    years.push(year);\r\n  }\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  const alumniProfileUrl = `${baseUrl}/api/alumni/alumnidetails/profile`;\r\n\r\n  const token = localStorage.getItem(\"tokenRes\");\r\n\r\n  const postExperience = async (data) => {\r\n    setProfileLoading(true);\r\n    try {\r\n      const response = await axios.post(alumniProfileUrl, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setProfileLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"3\");\r\n    } catch (error) {\r\n      setProfileLoading(false);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        error.response.data.statuses.forEach((status) => {\r\n          NotificationManager.error(\r\n            status.message,\r\n            \"Oops!\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n        });\r\n      } else {\r\n        NotificationManager.error(\r\n          \"something went wrong\",\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeEducation = (index) => {\r\n    setEducation((prevState) => ({\r\n      ...prevState,\r\n      colleges: prevState.colleges.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const addEducation = () => {\r\n    setEducation((prevState) => ({\r\n      ...prevState,\r\n      colleges: [\r\n        ...prevState.colleges,\r\n        {\r\n          collegeName: \"\",\r\n          degree: \"\",\r\n          department: \"\",\r\n          year: \"\",\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  const handleInputChange = (index, field, value) => {\r\n    setEducation((prevState) => ({\r\n      ...prevState,\r\n      colleges: prevState.colleges.map((edu, i) =>\r\n        i === index ? { ...edu, [field]: value } : edu\r\n      ),\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        innerRef={forms[2]}\r\n        initialValues={education}\r\n        onSubmit={() => {\r\n          postExperience(education);\r\n        }}\r\n        validateOnMount\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className=\"av-tooltip tooltip-label-right my-4\">\r\n            {education.colleges.map((service, index) => (\r\n              // eslint-disable-next-line react/no-array-index-key\r\n              <div key={index}>\r\n                <div className=\"text-right\">\r\n                  {education.colleges.length > 1 && (\r\n                    <span>\r\n                      <Button\r\n                        id=\"closeButton\"\r\n                        color=\"primary\"\r\n                        outline\r\n                        className=\"icon-button\"\r\n                        onClick={() => removeEducation(index)}\r\n                      >\r\n                        <span className=\"text-primary\">\r\n                          <strong>x</strong>\r\n                        </span>\r\n                      </Button>\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>College Name*</Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        required\r\n                        name={`education[${index}].collegeName`}\r\n                        value={service.college}\r\n                        onChange={(e) =>\r\n                          handleInputChange(\r\n                            index,\r\n                            \"collegeName\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      />\r\n                      {errors.education?.[index]?.collegeName &&\r\n                        touched.education?.[index]?.collegeName && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].collegeName}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].degree`}>Degree*</Label>\r\n                      <Input\r\n                        name={`education[${index}].degree`}\r\n                        id={`education[${index}].degree`}\r\n                        className=\"form-control\"\r\n                        value={service.degree}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleInputChange(index, \"degree\", e.target.value)\r\n                        }\r\n                        // validate={validatePackageTopic}\r\n                      />\r\n                      {errors.education?.[index]?.degree &&\r\n                        touched.education?.[index]?.degree && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].degree}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].fieldStudy`}>\r\n                        Department*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name={`fieldStudy[${index}].fieldStudy`}\r\n                        id={`fieldStudy[${index}].fieldStudy`}\r\n                        className=\"form-control\"\r\n                        value={service.fieldStudy}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleInputChange(index, \"department\", e.target.value)\r\n                        }\r\n                        // validate={validatePackageDescription}\r\n                      />\r\n                      {errors.education?.[index]?.fieldStudy &&\r\n                        touched.education?.[index]?.fieldStudy && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].fieldStudy}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].department`}>\r\n                        Year of passing*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].year`}\r\n                        id={`education[${index}].year`}\r\n                        className=\"form-control\"\r\n                        value={service.year}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleInputChange(\r\n                            index,\r\n                            \"year\",\r\n                            parseInt(e.target.value, 10)\r\n                          )\r\n                        }\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          Select year\r\n                        </option>\r\n                        {years.map((yr) => (\r\n                          <option key={yr} value={yr}>\r\n                            {yr}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.education?.[index]?.department &&\r\n                        touched.education?.[index]?.department && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].department}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <hr />\r\n              </div>\r\n            ))}\r\n\r\n            <Card\r\n              onClick={addEducation}\r\n              className=\"p-3 text-center my-5\"\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <h3 className=\"font-weight-bold text-primary\">\r\n                + Add more education\r\n              </h3>\r\n            </Card>\r\n\r\n            <Row>\r\n              <Col>\r\n                <Button color=\"primary\" onClick={handlePrevStep}>\r\n                  Previous\r\n                </Button>\r\n              </Col>\r\n              <Col className=\"text-right\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={`btn-shadow btn-multiple-state ${\r\n                    profileLoading ? \"show-spinner\" : \"\"\r\n                  }`}\r\n                >\r\n                  <span className=\"spinner d-inline-block\">\r\n                    <span className=\"bounce1\" />\r\n                    <span className=\"bounce2\" />\r\n                    <span className=\"bounce3\" />\r\n                  </span>\r\n                  <span className=\"label\">Submit</span>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApplyAsAlumniProfile;\r\n","/* eslint-disable no-param-reassign */\r\n\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { adminRoot } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Jumbotron,\r\n  NavLink,\r\n  Row,\r\n  Spinner,\r\n} from \"reactstrap\";\r\n\r\nimport ApplyAsAlumniAbout from \"./ApplyAsAlumniAbout\";\r\nimport ApplyAsAlumniexperience from \"./ApplyAsAlumniExperience\";\r\nimport ApplyAsAlumniProfile from \"./ApplyAsAlumniProfile\";\r\n\r\nconst ApplyAlumni = () => {\r\n  const steps = [\"About you\", \"profile\", \"Experience\"];\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const status = localStorage.getItem(\"status\");\r\n    console.log(\"status\", status);\r\n    if (status) {\r\n      if (status === \"0\") {\r\n        setCurrentStep(0);\r\n      } else if (status === \"1\") {\r\n        setCurrentStep(1);\r\n      } else if (status === \"3\") {\r\n        setCurrentStep(2);\r\n      } else if (status === \"7\") {\r\n        setCurrentStep(3);\r\n      } else {\r\n        setCurrentStep(0);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n  const handleMySlotsClick = () =>\r\n    history.push(`${adminRoot}/calendar/mentor/appointment`);\r\n\r\n  return (\r\n    <Card className=\"mx-auto my-4 \" style={{ maxWidth: \"900px\" }}>\r\n      <CardBody className=\"wizard wizard-default\">\r\n        <h1 className=\"mt-4 font-weight-bold\">Apply as a Alumni</h1>\r\n        <ul className=\"nav nav-tabs justify-content-center\">\r\n          {steps.map((stepItem, index) => (\r\n            <li\r\n              // eslint-disable-next-line\r\n              key={`topNavStep_${index}`}\r\n              className={`nav-item ${\r\n                // eslint-disable-next-line\r\n                index === currentStep\r\n                  ? \"step-doing\"\r\n                  : index < currentStep\r\n                  ? \"step-done\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <NavLink to=\"#\" location={{}} className=\"nav-link\">\r\n                <span>{stepItem}</span>\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"wizard-basic-step\">\r\n          {currentStep === 0 && (\r\n            <ApplyAsAlumniAbout\r\n              currentStep={currentStep}\r\n              setCurrentStep={setCurrentStep}\r\n            />\r\n          )}\r\n          {currentStep === 1 && (\r\n            <ApplyAsAlumniProfile\r\n              currentStep={currentStep}\r\n              setCurrentStep={setCurrentStep}\r\n            />\r\n          )}\r\n          {currentStep === 2 && (\r\n            <ApplyAsAlumniexperience\r\n              currentStep={currentStep}\r\n              setCurrentStep={setCurrentStep}\r\n              setLoading={setLoading}\r\n            />\r\n          )}\r\n          {loading ? (\r\n            <div className=\"wizard-basic-step text-center pt-3\">\r\n              <Spinner color=\"primary\" className=\"mb-1\" />\r\n              <p>Submitting</p>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {currentStep === 3 && (\r\n                <Row>\r\n                  <Colxx xxs=\"12\" className=\"mb-4\">\r\n                    <Card>\r\n                      <CardBody className=\"text-center\">\r\n                        <i\r\n                          alt=\"\"\r\n                          className=\"glyph-icon iconsminds-yes text-success\"\r\n                          style={{ fontSize: \"75px\" }}\r\n                        />\r\n                        <Jumbotron className=\"text-center\">\r\n                          <h1 className=\"display-4\">Submitted Successfully!</h1>\r\n                          <p className=\"lead\">We will reach you shortly</p>\r\n                          <hr className=\"my-4\" />\r\n                          <p className=\"lead mb-0\">\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"lg\"\r\n                              onClick={() => handleMySlotsClick()}\r\n                            >\r\n                              My slots\r\n                            </Button>\r\n                          </p>\r\n                        </Jumbotron>\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Colxx>\r\n                </Row>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default injectIntl(ApplyAlumni);\r\n","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { createRef, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Col,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  InputGroup,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport language from \"../../AlumniRegister/Languages\";\r\nimport {\r\n  validateIdentityStatus,\r\n  validateLocation,\r\n} from \"../../AlumniRegister/validation\";\r\nimport indentityStatusList from \"../../CommonCardList/IdentityStatusList\";\r\nimport country from \"../../my-login/Country\";\r\nimport ToasterComponent from \"../../notifications/ToasterComponent\";\r\n\r\nconst ApplyAsHrAbout = ({ currentStep, setCurrentStep }) => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const [file1, setFile1] = useState(null);\r\n  const [imageError, setImageError] = useState(false);\r\n  const [imageErrorMessage, setImageErrorMessage] = useState(null);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [aboutLoading, setAboutLoading] = useState(false);\r\n  const [aboutField, setAboutField] = useState({\r\n    image: \"\",\r\n  });\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imageError1, setImageError1] = useState(false);\r\n  const [imageErrorMessage1, setImageErrorMessage1] = useState(null);\r\n\r\n  const hrAboutUrl = `${baseUrl}/api/humanresource/profile`;\r\n  const imageUploadUrl = `${baseUrl}/api/humanresource/profile-image`;\r\n  const hrResumePostUrl = ` ${baseUrl}/api/resume?role=HR`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  const [fields] = useState({\r\n    image: \"\",\r\n    twitterHandle: \"\",\r\n    residentType: \"\",\r\n    country: \"\",\r\n    jobType: \"\",\r\n    jobTitle: \"\",\r\n    company: \"\",\r\n  });\r\n\r\n  const languageOptions = language.map((option) => ({\r\n    value: option.iso_code,\r\n    label: option.name,\r\n  }));\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const postImage = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    try {\r\n      const response = await axios.post(imageUploadUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n      return response.data; // Handle success response from backend\r\n    } catch (error) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"Failed to upload image. Please try again.\");\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const postProfileData = async (data) => {\r\n    const HRAbout = {\r\n      twitterHandle: data.twitterHandle,\r\n      languages: data.language,\r\n      country: data.country,\r\n      jobType: data.jobType,\r\n      jobTitle: data.jobTitle,\r\n      company: data.company,\r\n      residentType: data.residentType,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(hrAboutUrl, HRAbout, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\", // Set Content-Type to application/json\r\n        },\r\n      });\r\n      setAboutLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"1\");\r\n    } catch (error) {\r\n      setAboutLoading(false);\r\n      NotificationManager.error(\r\n        \"Failed to submit profile data\",\r\n        \"Oops!\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    setAboutLoading(true);\r\n\r\n    try {\r\n      // First, check if an image exists and upload it\r\n      if (file1) {\r\n        await postImage(file1); // Upload the image separately\r\n      }\r\n\r\n      // After the image upload, submit the rest of the form data (without the image)\r\n      await postProfileData({\r\n        twitterHandle: values.twitterHandle,\r\n        language: languages,\r\n        residentType: values.residentType,\r\n        country: values.country,\r\n        jobType: values.jobType,\r\n        jobTitle: values.jobTitle,\r\n        company: values.company,\r\n      });\r\n    } catch (error) {\r\n      setAboutLoading(false); // Stop loading in case of error\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setFile1(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      setImageError(false);\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        setSelectedFile(base64Image);\r\n        setAboutField({ ...aboutField, image: base64Image });\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const [selectedFile2, setSelectedFile2] = useState(null);\r\n\r\n  const handleFileChange2 = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    if (!file) return; // No file selected\r\n\r\n    if (!(file.type === \"application/pdf\")) {\r\n      // alert(\"Please select a valid PDF file.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"Please upload a PDF file.\");\r\n      return;\r\n    }\r\n\r\n    const fileSizeMB = file.size / (1024 * 1024); // Convert bytes to MB\r\n\r\n    if (fileSizeMB > 2) {\r\n      // alert(\"File size exceeds 2MB limit.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"File size must be less than  2MB\");\r\n\r\n      return;\r\n    }\r\n\r\n    setSelectedFile2(file);\r\n    setImageError1(false);\r\n    setImageErrorMessage1(\"\");\r\n  };\r\n\r\n  const validateFile = (file) => {\r\n    const maxSize = 2 * 1024 * 1024; // 5MB\r\n\r\n    if (file && file.size > maxSize) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"File size must be less than 2MB\");\r\n      return false;\r\n    }\r\n\r\n    setImageError(false);\r\n    setImageErrorMessage(\"\");\r\n    return true;\r\n  };\r\n\r\n  const postResumeData = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"resume\", selectedFile2);\r\n\r\n      await axios.post(hrResumePostUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // console.log(`resres ${response.status}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      innerRef={forms[0]}\r\n      initialValues={{\r\n        twitterHandle: fields.twitterHandle,\r\n        residentType: fields.residentType,\r\n        country: fields.country,\r\n        jobTitle: fields.jobTitle,\r\n        jobType: fields.jobType,\r\n        company: fields.company,\r\n      }}\r\n      validateOnMount\r\n      onSubmit={(values) => {\r\n        if (!file1 || validateFile(file1)) {\r\n          handleSubmit(values);\r\n          postResumeData(); // Call the combined submit function\r\n        }\r\n      }}\r\n    >\r\n      {({ errors, touched }) => (\r\n        <Form className=\"av-tooltip tooltip-label-right \">\r\n          <Alert color=\"primary\">\r\n            <strong>Lovely to see you!</strong>\r\n            <br /> Filling out the form only takes a couple of minutes.\r\n            We&apos;d love to learn more about your background and the\r\n            ins-and-outs of why you&apos;d like to become a hr. Keep things\r\n            personal and talk directly to us and your mentees. We don&apos;t\r\n            need jargon and polished cover letters here! <br />\r\n            <br />\r\n            You agree to our code of conduct and the mentor agreement by sending\r\n            the form, so be sure to have a look at those.\r\n          </Alert>\r\n          <FormGroup>\r\n            <Label for=\"image\">Image</Label>\r\n            {imageError && (\r\n              <div className=\"invalid-feedback d-block\">\r\n                {imageErrorMessage}\r\n              </div>\r\n            )}\r\n            <Row>\r\n              <Col md={2} className=\"\">\r\n                <img\r\n                  src={selectedFile || \"/assets/img/profiles/l-1.jpg\"}\r\n                  className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                  style={{\r\n                    width: \"70px\",\r\n                    height: \"70px\",\r\n                    objectFit: \"cover\",\r\n                  }}\r\n                  alt=\"img\"\r\n                />\r\n              </Col>\r\n              <Col md={5} className=\"mt-3 \">\r\n                <InputGroup className=\"mb-3\">\r\n                  <div className=\"mt-1.5\">\r\n                    <Button\r\n                      className=\"default\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        document.getElementById(\"file-upload\").click()\r\n                      }\r\n                    >\r\n                      Upload profile pic <i className=\"iconsminds-upload \" />\r\n                    </Button>\r\n                    <Input\r\n                      id=\"file-upload\"\r\n                      type=\"file\"\r\n                      className=\"form-control d-none\"\r\n                      onChange={handleFileChange}\r\n                    />\r\n                    {file1 && (\r\n                      <p className=\"mt-2\">Selected file: {file1.name}</p>\r\n                    )}\r\n                  </div>\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Row>\r\n              <Col md={6}>\r\n                <Label for=\"jobType\">Job Type</Label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"jobType\"\r\n                  id=\"jobType\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"off\"\r\n                />\r\n              </Col>\r\n              <Col md={6}>\r\n                <Label for=\"jobTitle\">Job Title</Label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"jobTitle\"\r\n                  id=\"jobTitle\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"off\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col md={6}>\r\n                <Label for=\"company\">Company</Label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"company\"\r\n                  id=\"company\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"off\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <FormGroup className=\"error-l-125\">\r\n            <Row>\r\n              <Col md={6}>\r\n                <Label for=\"languages\">Languages known*</Label>\r\n                <Select\r\n                  placeholder=\"Select Languages\"\r\n                  name=\"languages\"\r\n                  isMulti\r\n                  options={languageOptions}\r\n                  // validate={validateLanguages}\r\n                  className=\"react-select\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(selectedOptions) => {\r\n                    const languagesArray = selectedOptions\r\n                      ? selectedOptions.map((option) => option.value)\r\n                      : [];\r\n                    setLanguages(languagesArray);\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col md={6}>\r\n                <Label for=\"twitterHandle\">Twitter Handle (optional)</Label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"twitterHandle\"\r\n                  id=\"twitterHandle\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"off\"\r\n                />\r\n                <FormText color=\"muted\" className=\"\">\r\n                  Omit the &ldquo;@&rdquo; -e.g. &ldquo;dqmonn&rdquo;\r\n                </FormText>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Row className=\"mt-3\">\r\n              <Col md={6}>\r\n                <Label for=\"residentType\">Resident Type*</Label>\r\n                <Field\r\n                  as=\"select\"\r\n                  name=\"residentType\"\r\n                  validate={validateIdentityStatus}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option disabled value=\"\">\r\n                    Select Resident type\r\n                  </option>\r\n                  {indentityStatusList.map((option) => (\r\n                    <option key={option.name} value={option.name}>\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n                {errors.identityStatus && touched.identityStatus && (\r\n                  <div className=\"invalid-feedback d-block\">\r\n                    {errors.identityStatus}\r\n                  </div>\r\n                )}\r\n              </Col>\r\n              <Col md={6}>\r\n                <Label>Country*</Label>\r\n                <Field\r\n                  as=\"select\"\r\n                  name=\"country\"\r\n                  validate={validateLocation}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option disabled value=\"\">\r\n                    Select Country\r\n                  </option>\r\n                  {country.map((option) => (\r\n                    <option key={option.iso_code} value={option.iso_code}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n                {errors.location && touched.location && (\r\n                  <div className=\"invalid-feedback d-block\">\r\n                    {errors.location}\r\n                  </div>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Row>\r\n              <Col md={6}>\r\n                <Label>CV</Label>\r\n                {imageError1 && (\r\n                  <div className=\"invalid-feedback d-block\">\r\n                    {imageErrorMessage1}\r\n                  </div>\r\n                )}\r\n\r\n                <InputGroup className=\"\">\r\n                  <div className=\"\">\r\n                    <Button\r\n                      className=\"default\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        document.getElementById(\"file-upload-resume\").click()\r\n                      }\r\n                    >\r\n                      Upload Resume <i className=\"iconsminds-upload ml-2\" />\r\n                    </Button>\r\n                    {/* <Form> */}\r\n                    <Input\r\n                      id=\"file-upload-resume\"\r\n                      type=\"file\"\r\n                      className=\"d-none\"\r\n                      onChange={handleFileChange2}\r\n                      // validate={validateFile}\r\n                    />\r\n                  </div>\r\n                </InputGroup>\r\n                <div className=\"  my-2 \">\r\n                  {/* {selectedFile2 ? selectedFile2.name : \"\"} */}\r\n                  {selectedFile2\r\n                    ? `selected file is ${selectedFile2.name}`\r\n                    : \"\"}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n\r\n          <Row>\r\n            <Col className=\"text-center\">\r\n              <Button\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className={`btn-shadow btn-multiple-state ${\r\n                  aboutLoading ? \"show-spinner\" : \"\"\r\n                }`}\r\n              >\r\n                <span className=\"spinner d-inline-block\">\r\n                  <span className=\"bounce1\" />\r\n                  <span className=\"bounce2\" />\r\n                  <span className=\"bounce3\" />\r\n                </span>\r\n                <span className=\"label\">Next</span>\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ApplyAsHrAbout;\r\n","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { createRef, useState } from \"react\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport { Button, Card, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport { EmploymentTypeData } from \"../../Listing/ListingData\";\r\nimport ToasterComponent from \"../../notifications/ToasterComponent\";\r\n\r\nconst ApplyAsHrExperience = ({ currentStep, setCurrentStep, setLoading }) => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n  const currentYear = new Date().getFullYear();\r\n  const [work, setWork] = useState({\r\n    experiences: [\r\n      {\r\n        company: \"\",\r\n        jobTitle: \"\",\r\n        employmentType: \"\",\r\n        jobLocation: \"\",\r\n        startYear: \"\",\r\n        endYear: \"\",\r\n        // price: \"\",\r\n      },\r\n    ],\r\n  });\r\n  const years = [];\r\n  for (let year = currentYear; year >= 2005; year -= 1) {\r\n    years.push(year);\r\n  }\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  const hrExperienceUrl = `${baseUrl}/api/humanresource/experience`;\r\n\r\n  const token = localStorage.getItem(\"tokenRes\");\r\n\r\n  const postExperience = async (data) => {\r\n    setProfileLoading(true);\r\n    try {\r\n      const response = await axios.post(hrExperienceUrl, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setProfileLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"3\");\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 3000);\r\n    } catch (error) {\r\n      setProfileLoading(false);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        error.response.data.statuses.forEach((status) => {\r\n          NotificationManager.error(\r\n            status.message,\r\n            \"Oops!\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n        });\r\n      } else {\r\n        NotificationManager.error(\r\n          \"something went wrong\",\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeWorkExperience = (index) => {\r\n    setWork((prevState) => ({\r\n      ...prevState,\r\n      experiences: prevState.experiences.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const addWorkExperience = () => {\r\n    setWork((prevState) => ({\r\n      ...prevState,\r\n      experiences: [\r\n        ...prevState.experiences,\r\n        {\r\n          company: \"\",\r\n          jobTitle: \"\",\r\n          employmentType: \"\",\r\n          jobLocation: \"\",\r\n          startYear: \"\",\r\n          endYear: \"\",\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  const handleWorkInputChange = (index, field, value) => {\r\n    setWork((prevState) => ({\r\n      ...prevState,\r\n      experiences: prevState.experiences.map((exp, i) =>\r\n        i === index ? { ...exp, [field]: value } : exp\r\n      ),\r\n      // If the field being updated is 'price', update the outer price as well\r\n      //   price: field === \"price\" ? value : prevState.price,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        innerRef={forms[2]}\r\n        initialValues={work}\r\n        onSubmit={() => {\r\n          postExperience(work);\r\n        }}\r\n        validateOnMount\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className=\"av-tooltip tooltip-label-right my-4\">\r\n            {work.experiences.map((works, index) => (\r\n              // eslint-disable-next-line react/no-array-index-key\r\n              <div key={index}>\r\n                <div className=\"text-right\">\r\n                  {work.experiences.length > 1 && (\r\n                    <span>\r\n                      <Button\r\n                        id=\"closeButton\"\r\n                        color=\"primary\"\r\n                        outline\r\n                        className=\"icon-button\"\r\n                        onClick={() => removeWorkExperience(index)}\r\n                      >\r\n                        <span className=\"text-primary\">\r\n                          <strong>x</strong>\r\n                        </span>\r\n                      </Button>\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Company Name*</Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        required\r\n                        name={`education[${index}].company`}\r\n                        value={works.company}\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"company\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      />\r\n                      {errors.education?.[index]?.company &&\r\n                        touched.education?.[index]?.company && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].company}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].jobTitle`}>\r\n                        Job title*\r\n                      </Label>\r\n                      <Input\r\n                        name={`education[${index}].jobTitle`}\r\n                        id={`education[${index}].jobTitle`}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={works.jobTitle}\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"jobTitle\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      />\r\n                      {errors.education?.[index]?.jobTitle &&\r\n                        touched.education?.[index]?.jobTitle && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].jobTitle}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].employmentType`}>\r\n                        Employment type*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].employmentType`}\r\n                        id={`education[${index}].employmentType`}\r\n                        className=\"form-control\"\r\n                        value={works.employmentType}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"employmentType\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select Employment type\r\n                        </option>\r\n                        {EmploymentTypeData.map((option, i) => (\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          <option key={i} value={option.label}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n\r\n                      {errors.education?.[index]?.employmentType &&\r\n                        touched.education?.[index]?.employmentType && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].employmentType}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].jobLocation`}>\r\n                        Job location*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name={`education[${index}].jobLocation`}\r\n                        id={`education[${index}].jobLocation`}\r\n                        className=\"form-control\"\r\n                        required\r\n                        value={works.jobLocation}\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"jobLocation\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                        // validate={validatePackageDescription}\r\n                      />\r\n                      {errors.education?.[index]?.jobLocation &&\r\n                        touched.education?.[index]?.jobLocation && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].jobLocation}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].startDate`}>\r\n                        Start year*\r\n                      </Label>\r\n\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].startYear`}\r\n                        id={`education[${index}].startYear`}\r\n                        className=\"form-control\"\r\n                        value={works.startYear}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"startYear\",\r\n                            parseInt(e.target.value, 10)\r\n                          )\r\n                        }\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          Select year\r\n                        </option>\r\n                        {years.map((yr) => (\r\n                          <option key={yr} value={yr}>\r\n                            {yr}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n\r\n                      {errors.education?.[index]?.startYear &&\r\n                        touched.education?.[index]?.startYear && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].startYear}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].endYear`}>\r\n                        End year*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].endYear`}\r\n                        id={`education[${index}].endYear`}\r\n                        className=\"form-control\"\r\n                        value={works.endYear}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"endYear\",\r\n                            parseInt(e.target.value, 10)\r\n                          )\r\n                        }\r\n                        // validate={validatePackageDescription}\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          Select year\r\n                        </option>\r\n                        {years.map((yr) => (\r\n                          <option key={yr} value={yr}>\r\n                            {currentYear === yr ? \"Present\" : yr}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.education?.[index]?.endYear &&\r\n                        touched.education?.[index]?.endYear && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].endYear}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <hr />\r\n              </div>\r\n            ))}\r\n\r\n            <Card\r\n              onClick={addWorkExperience}\r\n              className=\"p-3 text-center my-5\"\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <h3 className=\"font-weight-bold text-primary\">\r\n                + Add more work experience\r\n              </h3>\r\n            </Card>\r\n            {/* <Row className=\"my-2\">\r\n              <Col md={12}>\r\n                <FormGroup>\r\n                  <Label for=\"price\">Price*</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    id=\"price\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={work.price || \"\"}\r\n                    onChange={(e) => {\r\n                      const value = e.target?.value;\r\n                      if (value !== null && value !== undefined) {\r\n                        setWork((prevState) => ({\r\n                          ...prevState,\r\n                          price: value, // Update price directly here\r\n                        }));\r\n                      }\r\n                    }}\r\n                  />\r\n                  {errors.price && touched.price && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.price}\r\n                    </div>\r\n                  )}\r\n                </FormGroup>\r\n              </Col>\r\n            </Row> */}\r\n            <Row>\r\n              {\" \"}\r\n              <Col>\r\n                {\" \"}\r\n                <Button color=\"primary\" onClick={handlePrevStep}>\r\n                  Previous\r\n                </Button>\r\n              </Col>\r\n              <Col className=\"text-right\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={`btn-shadow btn-multiple-state ${\r\n                    profileLoading ? \"show-spinner\" : \"\"\r\n                  }`}\r\n                >\r\n                  <span className=\"spinner d-inline-block\">\r\n                    <span className=\"bounce1\" />\r\n                    <span className=\"bounce2\" />\r\n                    <span className=\"bounce3\" />\r\n                  </span>\r\n                  <span className=\"label\">Submit</span>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApplyAsHrExperience;\r\n","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { createRef, useState } from \"react\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Col,\r\n  FormGroup,\r\n  FormText,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { validateBio } from \"../../AlumniRegister/validation\";\r\nimport ToasterComponent from \"../../notifications/ToasterComponent\";\r\n\r\nconst ApplyAsHrProfile = ({ currentStep, setCurrentStep }) => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n\r\n  const [aboutLoading, setAboutLoading] = useState(false);\r\n\r\n  const [skillsTag, setSkillsTag] = useState([]);\r\n\r\n  const [fields] = useState({\r\n    personalWebsite: \"\",\r\n    bio: \"\",\r\n  });\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  const hrProfileUrl = `${baseUrl}/api/humanresource/about`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  const postProfileData = async (data) => {\r\n    const hrProfile = {\r\n      personalWebsite: data.personalWebsite,\r\n      skills: data.skills,\r\n      bio: data.bio,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(hrProfileUrl, hrProfile, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\", // Set Content-Type to application/json\r\n        },\r\n      });\r\n      setAboutLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"1\");\r\n    } catch (error) {\r\n      setAboutLoading(false);\r\n      NotificationManager.error(\r\n        \"Failed to submit profile data\",\r\n        \"Oops!\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    setAboutLoading(true);\r\n\r\n    try {\r\n      await postProfileData({\r\n        personalWebsite: values.personalWebsite,\r\n        skills: skillsTag,\r\n        bio: values.bio,\r\n      });\r\n    } catch (error) {\r\n      setAboutLoading(false); // Stop loading in case of error\r\n    }\r\n  };\r\n\r\n  const handleTagsChange = (newSkills) => {\r\n    setSkillsTag(newSkills);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        innerRef={forms[0]}\r\n        initialValues={{\r\n          personalWebsite: fields.personalWebsite,\r\n          bio: fields.bio,\r\n        }}\r\n        validateOnMount\r\n        // onSubmit={(values) => {\r\n        //   if (!file1 || validateFile(file1)) {\r\n        //     postDataAbout({\r\n        //       ...values,\r\n        //       language: languages,\r\n        //       skills: skillsTag,\r\n        //     });\r\n        //   }\r\n        // }}\r\n        onSubmit={(values) => {\r\n          handleSubmit(values);\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className=\"av-tooltip tooltip-label-right \">\r\n            <Alert color=\"primary\">\r\n              <strong>Lovely to see you!</strong>\r\n              <br /> Filling out the form only takes a couple of minutes.\r\n              We&apos;d love to learn more about your background and the\r\n              ins-and-outs of why you&apos;d like to become a mentor. Keep\r\n              things personal and talk directly to us and your mentees. We\r\n              don&apos;t need jargon and polished cover letters here! <br />\r\n              <br />\r\n              You agree to our code of conduct and the mentor agreement by\r\n              sending the form, so be sure to have a look at those.\r\n            </Alert>\r\n\r\n            <FormGroup>\r\n              <Row>\r\n                <Col md={12}>\r\n                  <FormGroup>\r\n                    <Label for=\"skills\">Skills*</Label>\r\n\r\n                    <TagsInput\r\n                      required\r\n                      value={skillsTag}\r\n                      onChange={handleTagsChange}\r\n                      inputProps={{ placeholder: \"Add skills \" }}\r\n                      addOnBlur\r\n                      addKeys={[13, 188]}\r\n                    />\r\n\r\n                    <FormText>Add skill and press Enter or Comma </FormText>\r\n                    <FormText color=\"muted\">\r\n                      Describe your expertise to connect with mentors who have\r\n                      similar interests.\r\n                      <br />\r\n                      {/* Comma-separated list of your skills  */}\r\n                      (keep it below 10). Mentors will use this to find you.\r\n                    </FormText>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"bio\">Bio*</Label>\r\n              <Field\r\n                as=\"textarea\"\r\n                name=\"bio\"\r\n                id=\"bio\"\r\n                className=\"form-control\"\r\n                validate={validateBio}\r\n                autoComplete=\"off\"\r\n              />\r\n              {errors.bio && touched.bio && (\r\n                <div className=\"invalid-feedback d-block\">{errors.bio}</div>\r\n              )}\r\n              <FormText color=\"muted\">\r\n                Tell us (and your mentees) a little bit about yourself. Talk\r\n                about yourself in the first person, as if you&apos;d directly\r\n                talk to a mentee. This will be public.\r\n              </FormText>\r\n            </FormGroup>\r\n            <FormGroup className=\"error-l-125\">\r\n              <Row>\r\n                <Col md={12}>\r\n                  <Label for=\"website\">Personal Website (optional)</Label>\r\n                  <Field\r\n                    type=\"url\"\r\n                    name=\"website\"\r\n                    id=\"website\"\r\n                    className=\"form-control\"\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  <FormText color=\"muted\">\r\n                    You can add your blog, GitHub profile or similar here\r\n                  </FormText>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n                  <Row>\r\n                    {\" \"}\r\n                    <Col>\r\n                      {\" \"}\r\n                      <Button color=\"primary\" onClick={handlePrevStep}>\r\n                        Previous\r\n                      </Button>\r\n                    </Col>\r\n                    <Col className=\"text-right\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={`btn-shadow btn-multiple-state ${\r\n                    aboutLoading ? \"show-spinner\" : \"\"\r\n                  }`}\r\n                >\r\n                  <span className=\"spinner d-inline-block\">\r\n                    <span className=\"bounce1\" />\r\n                    <span className=\"bounce2\" />\r\n                    <span className=\"bounce3\" />\r\n                  </span>\r\n                  <span className=\"label\">Next</span>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApplyAsHrProfile;\r\n","/* eslint-disable no-param-reassign */\r\n\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { adminRoot } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Jumbotron,\r\n  NavLink,\r\n  Row,\r\n  Spinner,\r\n} from \"reactstrap\";\r\n\r\nimport ApplyAsHrAbout from \"./ApplyAsHrAbout\";\r\nimport ApplyAsHrExperience from \"./ApplyAsHrExperience\";\r\nimport ApplyAsHrProfile from \"./ApplyAsHrProfile\";\r\n\r\nconst ApplyHR = () => {\r\n  const steps = [\"About you\", \"profile\", \"Experience\"];\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const status = localStorage.getItem(\"status\");\r\n    console.log(\"status\", status);\r\n    if (status) {\r\n      if (status === \"0\") {\r\n        setCurrentStep(0);\r\n      } else if (status === \"1\") {\r\n        setCurrentStep(1);\r\n      } else if (status === \"3\") {\r\n        setCurrentStep(2);\r\n      } else if (status === \"7\") {\r\n        setCurrentStep(3);\r\n      } else {\r\n        setCurrentStep(0);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n  const handleMySlotsClick = () => history.push(`${adminRoot}/listing/job`);\r\n\r\n  return (\r\n    <Card className=\"mx-auto my-4 \" style={{ maxWidth: \"900px\" }}>\r\n      <CardBody className=\"wizard wizard-default\">\r\n        <h1 className=\"mt-4 font-weight-bold\">Apply as a HR</h1>\r\n        <ul className=\"nav nav-tabs justify-content-center\">\r\n          {steps.map((stepItem, index) => (\r\n            <li\r\n              // eslint-disable-next-line\r\n              key={`topNavStep_${index}`}\r\n              className={`nav-item ${\r\n                // eslint-disable-next-line\r\n                index === currentStep\r\n                  ? \"step-doing\"\r\n                  : index < currentStep\r\n                  ? \"step-done\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <NavLink to=\"#\" location={{}} className=\"nav-link\">\r\n                <span>{stepItem}</span>\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"wizard-basic-step\">\r\n          {currentStep === 0 && (\r\n            <ApplyAsHrAbout\r\n              currentStep={currentStep}\r\n              setCurrentStep={setCurrentStep}\r\n            />\r\n          )}\r\n          {currentStep === 1 && (\r\n            <ApplyAsHrProfile\r\n              currentStep={currentStep}\r\n              setCurrentStep={setCurrentStep}\r\n            />\r\n          )}\r\n          {currentStep === 2 && (\r\n            <ApplyAsHrExperience\r\n              currentStep={currentStep}\r\n              setCurrentStep={setCurrentStep}\r\n              setLoading={setLoading}\r\n            />\r\n          )}\r\n          {loading ? (\r\n            <div className=\"wizard-basic-step text-center pt-3\">\r\n              <Spinner color=\"primary\" className=\"mb-1\" />\r\n              <p>Submitting</p>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {currentStep === 3 && (\r\n                <Row>\r\n                  <Colxx xxs=\"12\" className=\"mb-4\">\r\n                    <Card>\r\n                      <CardBody className=\"text-center\">\r\n                        <i\r\n                          alt=\"\"\r\n                          className=\"glyph-icon iconsminds-yes text-success\"\r\n                          style={{ fontSize: \"75px\" }}\r\n                        />\r\n                        <Jumbotron className=\"text-center\">\r\n                          <h1 className=\"display-4\">Submitted Successfully!</h1>\r\n                          <p className=\"lead\">We will reach you shortly</p>\r\n                          <hr className=\"my-4\" />\r\n                          <p className=\"lead mb-0\">\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"lg\"\r\n                              onClick={() => handleMySlotsClick()}\r\n                            >\r\n                              job list\r\n                            </Button>\r\n                          </p>\r\n                        </Jumbotron>\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Colxx>\r\n                </Row>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default injectIntl(ApplyHR);\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\nimport JobPosting from \"./JobPosting\";\r\n\r\nconst MyJobListing = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const [pagination, setPagination] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [deleteJobPost, setDeleteJobPost] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [interestUsersModal, setInterestedUsersModal] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedJob, setSelectedJob] = useState(null);\r\n  const [jobId, setJobId] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const toggleModalState = () => {\r\n    setModal(false);\r\n    setSelectedJob(null);\r\n  };\r\n\r\n  // console.log(data);\r\n\r\n  const url = `${baseUrl}/api/posts/job-post/myjobs`;\r\n\r\n  useEffect(() => {\r\n    const fetchMyJobListingData = async () => {\r\n      try {\r\n        const response = await axios.get(url);\r\n        setPagination(response.data.pagination);\r\n        setData(response.data.jobLists);\r\n        // Assuming there's at least one job listing\r\n        if (response.data.jobLists.length > 0) {\r\n          setJobId(response.data.jobLists[0].id); // Set the job ID from the first job listing\r\n        }\r\n        setIsLoaded(true);\r\n      } catch (error) {\r\n        setIsLoaded(true);\r\n        if (error.response) {\r\n          console.error(\"Response error:\", error.response.data);\r\n          console.error(\"Response status:\", error.response.status);\r\n          console.error(\"Response headers:\", error.response.headers);\r\n        } else if (error.request) {\r\n          console.error(\"Request error:\", error.request);\r\n        } else {\r\n          console.error(\"Error message:\", error.message);\r\n        }\r\n        console.error(\"Error config:\", error.config);\r\n      }\r\n    };\r\n\r\n    fetchMyJobListingData();\r\n  }, [deleteJobPost, modal]);\r\n\r\n  const deletePost = async (id) => {\r\n    const stayDeleteUrl = `${baseUrl}/api/posts/job-post/${id}`;\r\n    try {\r\n      const response = await axios.delete(stayDeleteUrl);\r\n      setDeleteJobPost(!deleteJobPost);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"There was an error!\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditJob = async (jobData) => {\r\n    try {\r\n      const token = localStorage.getItem(\"tokenRes\");\r\n      const editUrl = `${baseUrl}/api/posts/job-post/`;\r\n      const response = await axios.put(editUrl, jobData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      setModal(false);\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error submitting\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMyJobListDelete = (id) => deletePost(id);\r\n  const handleEditButtonClick = (job) => {\r\n    setSelectedJob(job);\r\n    setModal(true);\r\n  };\r\n  const interestedPeopleUrl = `${baseUrl}/api/posts/job-post/interested-users/${jobId}`;\r\n\r\n  const handleModalToggle = async () => {\r\n    if (!interestUsersModal) {\r\n      // Fetch users only if modal is being opened\r\n      try {\r\n        const response = await axios.get(interestedPeopleUrl);\r\n        setUsers(response.data.interestedUsers);\r\n      } catch (error) {\r\n        console.error(\"Error fetching interested users:\", error);\r\n      }\r\n    }\r\n    setInterestedUsersModal(!interestUsersModal); // Toggle modal visibility\r\n  };\r\n\r\n  const handleUserClick = (user) => {\r\n    const lowerCaseRole = user.role.toLowerCase();\r\n    // history.push(`/app/${lowerCaseRole}profile/${user.userId}`);\r\n    if (lowerCaseRole === \"alumni\") {\r\n      history.push(`/app/alumni/profile/${user.userId}`);\r\n    } else if (lowerCaseRole === \"user\") {\r\n      history.push(`/app/user/profile/${user.userId}`);\r\n    } else {\r\n      history.push(`/app/${lowerCaseRole}profile/${user.userId}`);\r\n    }\r\n  };\r\n\r\n  return !isLoaded ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <>\r\n      {!data.length > 0 ? (\r\n        <Card className=\"d-flex justify-content-center align-items-center \">\r\n          <h2 className=\"mt-4 mb-4\">There are no posts available</h2>\r\n        </Card>\r\n      ) : (\r\n        <Colxx xxs=\"12\" className=\"mb-3\">\r\n          {data.map((item) => (\r\n            <Card key={item} className=\"mb-4\">\r\n              <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n                <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n                  <NavLink\r\n                    to={`/app/listing/job/view/${item.id}`}\r\n                    className=\"w-30 w-sm-100\"\r\n                  >\r\n                    <p className=\"list-item-heading mb-1 truncate\">\r\n                      {item.title}\r\n                    </p>\r\n                  </NavLink>\r\n                  <p className=\"mb-1 text-muted text-small w-30 w-sm-100\">\r\n                    <i className=\"simple-icon-layers\" /> {item.jobTitle}\r\n                  </p>\r\n                  <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                    <i className=\"simple-icon-clock\" />{\" \"}\r\n                    <TimestampConverter\r\n                      timeStamp={item.postedOn}\r\n                      format=\"datetime\"\r\n                    />\r\n                  </p>\r\n                  {/* <p\r\n                    className=\"mb-1 text-muted text-small w-15 w-sm-100\"\r\n                    type=\"button\"\r\n                    onClick={() => setInterestedUsersModal(!interestUsersModal)}\r\n                  >\r\n                    <i className=\"iconsminds-like\" /> {item.interestedCount}\r\n                  </p> */}\r\n                  <div\r\n                    role=\"button\"\r\n                    tabIndex={0}\r\n                    className=\"mb-1 text-muted text-small w-15 w-sm-100\"\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === \"Enter\" || e.key === \" \") {\r\n                        handleModalToggle();\r\n                      }\r\n                    }}\r\n                    onClick={handleModalToggle}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <i className=\"iconsminds-like\" /> {item.interestedCount}\r\n                  </div>\r\n                </div>\r\n                <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\r\n                  <Button\r\n                    outline\r\n                    color=\"primary\"\r\n                    className=\"icon-button\"\r\n                    onClick={() => handleEditButtonClick(item)}\r\n                  >\r\n                    <i className=\"simple-icon-pencil\" />\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => handleMyJobListDelete(item.id)}\r\n                    outline\r\n                    color=\"primary\"\r\n                    className=\"icon-button ml-2\"\r\n                  >\r\n                    <i className=\"simple-icon-trash\" />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              <Modal size=\"lg\" isOpen={modal} toggle={() => setModal(!modal)}>\r\n                <ModalHeader className=\"pb-1\" toggle={() => setModal(!modal)}>\r\n                  <h1 className=\"font-weight-semibold\">Edit</h1>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                  {/* <JobPosting closeModal={toggleModalState}  /> */}\r\n                  <JobPosting\r\n                    closeModal={toggleModalState}\r\n                    initialData={selectedJob}\r\n                    onEdit={handleEditJob}\r\n                  />\r\n                </ModalBody>\r\n              </Modal>\r\n            </Card>\r\n          ))}\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            totalPage={pagination.totalPage}\r\n            onChangePage={(i) => setCurrentPage(i)}\r\n            lastIsActive={pagination.first}\r\n            firstIsActive={pagination.last}\r\n          />\r\n        </Colxx>\r\n      )}\r\n      {/* modal to display interested people start */}\r\n      <Modal isOpen={interestUsersModal} toggle={handleModalToggle}>\r\n        <ModalHeader className=\"p-3\" toggle={handleModalToggle}>\r\n          Interested\r\n        </ModalHeader>\r\n        <ModalBody className=\"p-3\">\r\n          <ListGroup flush>\r\n            {users?.length > 0 ? (\r\n              users.map((datas) => (\r\n                <ListGroupItem\r\n                  key={datas.userId}\r\n                  tag=\"a\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  // href={`/app/mentorprofile/${data.id}`}\r\n                  onClick={() => handleUserClick(datas)}\r\n                >\r\n                  {datas.userName}\r\n                </ListGroupItem>\r\n              ))\r\n            ) : (\r\n              <p>No interested persons yet.</p>\r\n            )}\r\n          </ListGroup>\r\n        </ModalBody>\r\n      </Modal>\r\n      {/* modal to display interested people end */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyJobListing;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\nimport OtherPosting from \"./OtherPosting\";\r\n\r\nconst MyOtherListing = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const [pagination, setPagination] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [deleteStayPost, setDeleteStayPost] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [selectedOther, setSelectedOther] = useState(null);\r\n  const [interestUsersModal, setInterestedUsersModal] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [jobId, setJobId] = useState(null);\r\n  const history = useHistory();\r\n\r\n  // console.log(data)\r\n  const url = `${baseUrl}/api/posts/other-post/myotherposts`;\r\n\r\n  useEffect(() => {\r\n    const fetchMyOtherListingData = async () => {\r\n      try {\r\n        const response = await axios.get(url);\r\n        setPagination(response.data.paginationMeta);\r\n        setData(response.data.otherposts);\r\n        // Assuming there's at least one job listing\r\n        if (response.data.otherposts.length > 0) {\r\n          setJobId(response.data.otherposts[0].id); // Set the job ID from the first job listing\r\n        }\r\n        setIsLoaded(true);\r\n      } catch (error) {\r\n        setIsLoaded(true);\r\n        if (error.response) {\r\n          console.error(\"Response error:\", error.response);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchMyOtherListingData();\r\n  }, [deleteStayPost, modal]);\r\n\r\n  const handleEditOthers = async (othersData) => {\r\n    try {\r\n      const token = localStorage.getItem(\"tokenRes\");\r\n      const editUrl = `${baseUrl}/api/posts/other-post/`;\r\n      const response = await axios.put(editUrl, othersData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      setModal(false);\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error editing job:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const deletePost = async (id) => {\r\n    const otherDeleteUrl = `${baseUrl}/api/posts/other-post/${id}`;\r\n    try {\r\n      const response = await axios.delete(otherDeleteUrl);\r\n      setDeleteStayPost(!deleteStayPost);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"There was an error!\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMyOtherListDelete = (id) => deletePost(id);\r\n  const handleEditButtonClick = (other) => {\r\n    setSelectedOther(other);\r\n    setModal(true);\r\n  };\r\n\r\n  const toggleModalState = () => {\r\n    setModal(false);\r\n    setSelectedOther(null);\r\n  };\r\n\r\n  const interestedPeopleUrl = `${baseUrl}/api/posts/other-post/interested-users/${jobId}`;\r\n\r\n  const handleModalToggle = async () => {\r\n    if (!interestUsersModal) {\r\n      // Fetch users only if modal is being opened\r\n      try {\r\n        const response = await axios.get(interestedPeopleUrl);\r\n        setUsers(response.data.interestedUsers);\r\n      } catch (error) {\r\n        console.error(\"Error fetching interested users:\", error);\r\n      }\r\n    }\r\n    setInterestedUsersModal(!interestUsersModal); // Toggle modal visibility\r\n  };\r\n\r\n  const handleUserClick = (user) => {\r\n    const lowerCaseRole = user.role.toLowerCase();\r\n    // history.push(`/app/${lowerCaseRole}profile/${user.userId}`);\r\n    if (lowerCaseRole === \"alumni\") {\r\n      history.push(`/app/alumni/profile/${user.userId}`);\r\n    } else if (lowerCaseRole === \"user\") {\r\n      history.push(`/app/user/profile/${user.userId}`);\r\n    } else {\r\n      history.push(`/app/${lowerCaseRole}profile/${user.userId}`);\r\n    }\r\n  };\r\n\r\n  return !isLoaded ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <>\r\n      {!data.length > 0 ? (\r\n        <Card className=\"d-flex justify-content-center align-items-center \">\r\n          <h2 className=\"mt-4 mb-4\">There are no posts available</h2>\r\n        </Card>\r\n      ) : (\r\n        <Colxx xxs=\"12\" className=\"mb-3\">\r\n          {data.map((item) => (\r\n            <Card key={item} className=\"mb-4\">\r\n              <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n                <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n                  <NavLink\r\n                    to={`/app/listing/other/view/${item.id}`}\r\n                    className=\"w-30 w-sm-100\"\r\n                  >\r\n                    <p className=\"list-item-heading mb-1 truncate\">\r\n                      {item.title}\r\n                    </p>\r\n                  </NavLink>\r\n                  <p className=\"mb-1 text-muted text-small w-30 w-sm-100\">\r\n                    <i className=\"simple-icon-layers\" /> {item.job}\r\n                  </p>\r\n                  <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                    <i className=\"simple-icon-clock\" />{\" \"}\r\n                    <TimestampConverter\r\n                      timeStamp={item.postedOn}\r\n                      format=\"datetime\"\r\n                    />\r\n                  </p>\r\n                  <div\r\n                    role=\"button\"\r\n                    tabIndex={0}\r\n                    className=\"mb-1 text-muted text-small w-15 w-sm-100\"\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === \"Enter\" || e.key === \" \") {\r\n                        handleModalToggle();\r\n                      }\r\n                    }}\r\n                    onClick={handleModalToggle}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <i className=\"iconsminds-like\" /> {item.interestedCount}\r\n                  </div>\r\n                </div>\r\n                <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\r\n                  <Button\r\n                    onClick={() => handleEditButtonClick(item)}\r\n                    outline\r\n                    color=\"primary\"\r\n                    className=\"icon-button\"\r\n                  >\r\n                    <i className=\"simple-icon-pencil\" />\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => handleMyOtherListDelete(item.id)}\r\n                    outline\r\n                    color=\"primary\"\r\n                    className=\"icon-button ml-2\"\r\n                  >\r\n                    <i className=\"simple-icon-trash\" />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              <Modal size=\"lg\" isOpen={modal} toggle={() => setModal(!modal)}>\r\n                <ModalHeader className=\"pb-1\" toggle={() => setModal(!modal)}>\r\n                  <h1 className=\"font-weight-semibold\">Edit</h1>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                  {/* <JobPosting closeModal={toggleModalState}  /> */}\r\n                  <OtherPosting\r\n                    closeModal={toggleModalState}\r\n                    initialData={selectedOther}\r\n                    onEdit={handleEditOthers}\r\n                  />\r\n                </ModalBody>\r\n              </Modal>\r\n            </Card>\r\n          ))}\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            totalPage={pagination.totalPage}\r\n            onChangePage={(i) => setCurrentPage(i)}\r\n            lastIsActive={pagination.first}\r\n            firstIsActive={pagination.last}\r\n          />\r\n        </Colxx>\r\n      )}\r\n      {/* modal to display interested people start */}\r\n      <Modal isOpen={interestUsersModal} toggle={handleModalToggle}>\r\n        <ModalHeader className=\"p-3\" toggle={handleModalToggle}>\r\n          Interested\r\n        </ModalHeader>\r\n        <ModalBody className=\"p-3\">\r\n          <ListGroup flush>\r\n            {users?.length > 0 ? (\r\n              users.map((datas) => (\r\n                <ListGroupItem\r\n                  key={datas.userId}\r\n                  tag=\"a\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  // href={`/app/mentorprofile/${data.id}`}\r\n                  onClick={() => handleUserClick(datas)}\r\n                >\r\n                  {datas.userName}\r\n                </ListGroupItem>\r\n              ))\r\n            ) : (\r\n              <p>No interested persons yet.</p>\r\n            )}\r\n          </ListGroup>\r\n        </ModalBody>\r\n      </Modal>\r\n      {/* modal to display interested people end */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyOtherListing;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\nimport StayPosting from \"./StayPosting\";\r\n\r\nconst MyStayListing = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const [pagination, setPagination] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [deleteStayPost, setDeleteStayPost] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [selectedStay, setSelectedStay] = useState(null);\r\n  const [interestUsersModal, setInterestedUsersModal] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [jobId, setJobId] = useState(null);\r\n  const history = useHistory();\r\n\r\n  // console.log(data)\r\n  const toggleModalState = () => {\r\n    setModal(false);\r\n    setSelectedStay(null);\r\n  };\r\n  //   const data1 = [\r\n  //     {\r\n  //       title: \"Title 1\",\r\n  //       category: \"Job Listing\",\r\n  //       postedOn: 1720189649645,\r\n  //       badgeColor: \"success\",\r\n  //       badgeText: \"Published\",\r\n  //       link: \"#\",\r\n  //       interestedCount: \"6\",\r\n  //     },\r\n  //     {\r\n  //       title: \"Title 2\",\r\n  //       category: \"Stay Listing\",\r\n  //       postedOn: 1720276049645,\r\n  //       badgeColor: \"success\",\r\n  //       badgeText: \"Published\",\r\n  //       link: \"#\",\r\n  //       interestedCount: \"1\",\r\n  //     },\r\n  //     {\r\n  //       title: \"Title 3\",\r\n  //       category: \"Other Listing\",\r\n  //       postedOn: 1720362449645,\r\n  //       badgeColor: \"primary\",\r\n  //       badgeText: \"Processed\",\r\n  //       link: \"#\",\r\n  //       interestedCount: \"2\",\r\n  //     },\r\n  //     {\r\n  //       title: \"Title 4\",\r\n  //       category: \"Stay Listing\",\r\n  //       postedOn: 1720448849645,\r\n  //       badgeColor: \"success\",\r\n  //       badgeText: \"Published\",\r\n  //       link: \"#\",\r\n  //       interestedCount: \"4\",\r\n  //     },\r\n  //   ];\r\n  const url = `${baseUrl}/api/posts/stay-post/mystayrooms`;\r\n\r\n  useEffect(() => {\r\n    const fetchMyStayListingData = async () => {\r\n      try {\r\n        const response = await axios.get(url);\r\n        setPagination(response.data.paginationMeta);\r\n        setData(response.data.stayrooms);\r\n        // Assuming there's at least one job listing\r\n        if (response.data.stayrooms.length > 0) {\r\n          setJobId(response.data.stayrooms[0].id); // Set the job ID from the first job listing\r\n        }\r\n        setIsLoaded(true);\r\n      } catch (error) {\r\n        setIsLoaded(true);\r\n        if (error.response) {\r\n          console.error(\"Response error:\", error.response.data);\r\n          console.error(\"Response status:\", error.response.status);\r\n          console.error(\"Response headers:\", error.response.headers);\r\n        } else if (error.request) {\r\n          console.error(\"Request error:\", error.request);\r\n        } else {\r\n          console.error(\"Error message:\", error.message);\r\n        }\r\n        console.error(\"Error config:\", error.config);\r\n      }\r\n    };\r\n\r\n    fetchMyStayListingData();\r\n  }, [deleteStayPost, modal]);\r\n\r\n  const deletePost = async (id) => {\r\n    const stayDeleteUrl = `${baseUrl}/api/posts/stay-post/${id}`;\r\n    try {\r\n      const response = await axios.delete(stayDeleteUrl);\r\n      setDeleteStayPost(!deleteStayPost);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"There was an error!\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditStay = async (stayData) => {\r\n    try {\r\n      const token = localStorage.getItem(\"tokenRes\");\r\n      const editUrl = `${baseUrl}/api/posts/stay-post/`;\r\n      const response = await axios.put(editUrl, stayData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n\r\n      setModal(false);\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error editing job:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMyStayListDelete = (id) => deletePost(id);\r\n  const handleEditButtonClick = (stay) => {\r\n    setSelectedStay(stay);\r\n    setModal(true);\r\n  };\r\n\r\n  const interestedPeopleUrl = `${baseUrl}/api/posts/stay-post/interested-users/${jobId}`;\r\n\r\n  const handleModalToggle = async () => {\r\n    if (!interestUsersModal) {\r\n      // Fetch users only if modal is being opened\r\n      try {\r\n        const response = await axios.get(interestedPeopleUrl);\r\n        setUsers(response.data.interestedUsers);\r\n      } catch (error) {\r\n        console.error(\"Error fetching interested users:\", error);\r\n      }\r\n    }\r\n    setInterestedUsersModal(!interestUsersModal); // Toggle modal visibility\r\n  };\r\n\r\n  const handleUserClick = (user) => {\r\n    const lowerCaseRole = user.role.toLowerCase();\r\n    // history.push(`/app/${lowerCaseRole}profile/${user.userId}`);\r\n    if (lowerCaseRole === \"alumni\") {\r\n      history.push(`/app/alumni/profile/${user.userId}`);\r\n    } else if (lowerCaseRole === \"user\") {\r\n      history.push(`/app/user/profile/${user.userId}`);\r\n    } else {\r\n      history.push(`/app/${lowerCaseRole}profile/${user.userId}`);\r\n    }\r\n  };\r\n\r\n  return !isLoaded ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <>\r\n      {!data.length > 0 ? (\r\n        <Card className=\"d-flex justify-content-center align-items-center \">\r\n          <h2 className=\"mt-4 mb-4\">There are no posts available</h2>\r\n        </Card>\r\n      ) : (\r\n        <Colxx xxs=\"12\" className=\"mb-3\">\r\n          {/* <h1>My Listing</h1> */}\r\n          {data.map((item) => (\r\n            <Card key={item} className=\"mb-4\">\r\n              <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n                <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n                  <NavLink\r\n                    to={`/app/listing/stay/view/${item.id}`}\r\n                    className=\"w-30 w-sm-100\"\r\n                  >\r\n                    <p className=\"list-item-heading mb-1 truncate\">\r\n                      {item.title}\r\n                    </p>\r\n                  </NavLink>\r\n                  <p className=\"mb-1 text-muted text-small w-30 w-sm-100\">\r\n                    <i className=\"simple-icon-layers\" /> {item.apartmentType}\r\n                  </p>\r\n                  <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                    <i className=\"simple-icon-clock\" />{\" \"}\r\n                    <TimestampConverter\r\n                      timeStamp={item.postedOn}\r\n                      format=\"datetime\"\r\n                    />\r\n                  </p>\r\n                  {/* <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                <i className=\"iconsminds-like\" />{\" \"}{item.interestedCount}\r\n              </p> */}\r\n                  {/* <div className=\"w-15 w-sm-100\">\r\n                <Badge color={item.badgeColor} pill>\r\n                  {item.badgeText}\r\n                </Badge>\r\n              </div> */}\r\n                  <div\r\n                    role=\"button\"\r\n                    tabIndex={0}\r\n                    className=\"mb-1 text-muted text-small w-15 w-sm-100\"\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === \"Enter\" || e.key === \" \") {\r\n                        handleModalToggle();\r\n                      }\r\n                    }}\r\n                    onClick={handleModalToggle}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <i className=\"iconsminds-like\" /> {item.interestedCount}\r\n                  </div>\r\n                </div>\r\n                <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\r\n                  {/* <CustomInput\r\n                className=\"item-check mb-0\"\r\n                type=\"checkbox\"\r\n                id={`check_${product.id}`}\r\n                checked={isSelect}\r\n                onChange={() => {}}\r\n                label=\"\"\r\n              /> */}\r\n                  <Button\r\n                    outline\r\n                    color=\"primary\"\r\n                    className=\"icon-button\"\r\n                    onClick={() => handleEditButtonClick(item)}\r\n                  >\r\n                    <i className=\"simple-icon-pencil\" />\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => handleMyStayListDelete(item.id)}\r\n                    outline\r\n                    color=\"primary\"\r\n                    className=\"icon-button ml-2\"\r\n                  >\r\n                    <i className=\"simple-icon-trash\" />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              <Modal size=\"lg\" isOpen={modal} toggle={() => setModal(!modal)}>\r\n                <ModalHeader className=\"pb-1\" toggle={() => setModal(!modal)}>\r\n                  <h1 className=\"font-weight-semibold\">Edit</h1>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                  <StayPosting\r\n                    closeModal={toggleModalState}\r\n                    initialData={selectedStay}\r\n                    onEdit={handleEditStay}\r\n                  />\r\n                </ModalBody>\r\n              </Modal>\r\n            </Card>\r\n          ))}\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            totalPage={pagination.totalPage}\r\n            onChangePage={(i) => setCurrentPage(i)}\r\n            lastIsActive={pagination.first}\r\n            firstIsActive={pagination.last}\r\n          />\r\n        </Colxx>\r\n      )}\r\n\r\n      {/* modal to display interested people start */}\r\n      <Modal isOpen={interestUsersModal} toggle={handleModalToggle}>\r\n        <ModalHeader className=\"p-3\" toggle={handleModalToggle}>\r\n          Interested\r\n        </ModalHeader>\r\n        <ModalBody className=\"p-3\">\r\n          <ListGroup flush>\r\n            {users?.length > 0 ? (\r\n              users.map((datas) => (\r\n                <ListGroupItem\r\n                  key={datas.userId}\r\n                  tag=\"a\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  // href={`/app/mentorprofile/${data.id}`}\r\n                  onClick={() => handleUserClick(datas)}\r\n                >\r\n                  {datas.userName}\r\n                </ListGroupItem>\r\n              ))\r\n            ) : (\r\n              <p>No interested persons yet.</p>\r\n            )}\r\n          </ListGroup>\r\n        </ModalBody>\r\n      </Modal>\r\n      {/* modal to display interested people end */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyStayListing;\r\n","import classnames from \"classnames\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { NavLink, useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  //   Card,\r\n  //   CardBody,\r\n  Nav,\r\n  NavItem,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\n// import Rating from 'components/common/Rating';\r\n\r\n// import Breadcrumb from 'containers/navs/Breadcrumb';\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\n\r\n// import JobPosting from \"./JobPosting\";\r\n// import StayPosting from \"./StayPosting\";\r\n// import OtherPosting from \"./OtherPosting\";\r\nimport MyJobListing from \"./MyJobListing\";\r\nimport MyOtherListing from \"./MyOtherListing\";\r\nimport MyStayListing from \"./MyStayListing\";\r\n\r\nconst MyListing = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [activeTab, setActiveTab] = useState(\"job\");\r\n  // const [modal, setModal] = useState(false);\r\n  // const [modalTitle, setModalTitle] = useState(\"\");\r\n  // const [listingType, setListingType] = useState(\"\");\r\n  // const [isPosted,setIsPosted] = useState(false)\r\n\r\n  // const toggleModal = (title, type) => {\r\n  //   setModalTitle(title);\r\n  //   setListingType(type);\r\n  //   setModal(!modal);\r\n  // };\r\n  //   const { messages } = intl;\r\n\r\n  // const toggleModalState = () => {\r\n  //   setModal(false);\r\n  //   setIsPosted(!isPosted);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const path = location.pathname.split(\"/\").pop();\r\n    setActiveTab(path === \"mylisting\" ? \"job\" : path);\r\n  }, [location]);\r\n\r\n  const changeTab = (tab) => {\r\n    setActiveTab(tab);\r\n    history.push(`/app/mylisting${tab === \"job\" ? \"\" : `/${tab}`}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\" className=\"mx-auto\" style={{ maxWidth: \"900px\" }}>\r\n          <h1>My listing</h1>\r\n\r\n          {/* <Breadcrumb match={match} /> */}\r\n\r\n          <Nav tabs className=\"separator-tabs ml-0 mb-5\">\r\n            {/* <Button\r\n                outline\r\n                color=\"primary\"\r\n                onClick={() => toggleModal(\"Create a job List\", \"job\")}\r\n              >\r\n                Edit\r\n              </Button> */}\r\n            <NavItem>\r\n              <NavLink\r\n                location={{}}\r\n                to=\"#\"\r\n                className={classnames({\r\n                  active: activeTab === \"job\",\r\n                  \"nav-link\": true,\r\n                })}\r\n                onClick={() => changeTab(\"job\")}\r\n              >\r\n                <i className=\"iconsminds-management text-primary\" />\r\n                Job\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                location={{}}\r\n                to=\"#\"\r\n                className={classnames({\r\n                  active: activeTab === \"stay\",\r\n                  \"nav-link\": true,\r\n                })}\r\n                onClick={() => changeTab(\"stay\")}\r\n              >\r\n                <i className=\"iconsminds-building text-primary\" />\r\n                Stay\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                location={{}}\r\n                to=\"#\"\r\n                className={classnames({\r\n                  active: activeTab === \"others\",\r\n                  \"nav-link\": true,\r\n                })}\r\n                onClick={() => changeTab(\"others\")}\r\n              >\r\n                <i className=\"iconsminds-testimonal text-primary\" />\r\n                Others\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent activeTab={activeTab}>\r\n            <TabPane tabId=\"job\">\r\n              <MyJobListing />\r\n            </TabPane>\r\n            <TabPane tabId=\"stay\">\r\n              <MyStayListing />\r\n            </TabPane>\r\n            <TabPane tabId=\"others\">\r\n              <MyOtherListing />\r\n            </TabPane>\r\n          </TabContent>\r\n        </Colxx>\r\n      </Row>\r\n      {/* <Modal size=\"lg\" isOpen={modal} toggle={() => setModal(!modal)}>\r\n        <ModalHeader className=\"pb-1\" toggle={() => setModal(!modal)}>\r\n          <h1 className=\"font-weight-semibold\">{modalTitle}</h1>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          {listingType === \"job\" && <JobPosting closeModal={toggleModalState}/>}\r\n          {listingType === \"stay\" && <StayPosting closeModal={toggleModalState}/>}\r\n          {listingType === \"others\" && <OtherPosting />}\r\n          {listingType === \"others\" && <OtherPosting closeModal={toggleModalState} />}\r\n\r\n        </ModalBody>\r\n      </Modal> */}\r\n    </>\r\n  );\r\n};\r\nexport default injectIntl(MyListing);\r\n","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { createRef, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Col,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  InputGroup,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport language from \"../../AlumniRegister/Languages\";\r\nimport {\r\n  validateIdentityStatus,\r\n  validateLocation,\r\n} from \"../../AlumniRegister/validation\";\r\nimport indentityStatusList from \"../../CommonCardList/IdentityStatusList\";\r\nimport country from \"../../my-login/Country\";\r\nimport ToasterComponent from \"../../notifications/ToasterComponent\";\r\n\r\nconst RealEstateAgentAbout = ({ currentStep, setCurrentStep }) => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const [file1, setFile1] = useState(null);\r\n  const [imageError, setImageError] = useState(false);\r\n  const [imageErrorMessage, setImageErrorMessage] = useState(null);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [aboutLoading, setAboutLoading] = useState(false);\r\n  const [aboutField, setAboutField] = useState({\r\n    image: \"\",\r\n  });\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imageError1, setImageError1] = useState(false);\r\n  const [imageErrorMessage1, setImageErrorMessage1] = useState(null);\r\n\r\n  const hrAboutUrl = `${baseUrl}/api/realestate/about`;\r\n  const imageUploadUrl = `${baseUrl}/api/realestate/profile-image`;\r\n  const hrResumePostUrl = ` ${baseUrl}/api/resume?role=REALESTATE`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  const [fields] = useState({\r\n    image: \"\",\r\n    twitterHandle: \"\",\r\n    residentType: \"\",\r\n    country: \"\",\r\n    jobType: \"\",\r\n    jobTitle: \"\",\r\n    company: \"\",\r\n  });\r\n\r\n  const languageOptions = language.map((option) => ({\r\n    value: option.iso_code,\r\n    label: option.name,\r\n  }));\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const postImage = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    try {\r\n      const response = await axios.post(imageUploadUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n      return response.data; // Handle success response from backend\r\n    } catch (error) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"Failed to upload image. Please try again.\");\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const postProfileData = async (data) => {\r\n    const HRAbout = {\r\n      twitterHandle: data.twitterHandle,\r\n      languages: data.language,\r\n      country: data.country,\r\n      jobType: data.jobType,\r\n      jobTitle: data.jobTitle,\r\n      company: data.company,\r\n      residentType: data.residentType,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(hrAboutUrl, HRAbout, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\", // Set Content-Type to application/json\r\n        },\r\n      });\r\n      setAboutLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"1\");\r\n    } catch (error) {\r\n      setAboutLoading(false);\r\n      NotificationManager.error(\r\n        \"Failed to submit profile data\",\r\n        \"Oops!\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    setAboutLoading(true);\r\n\r\n    try {\r\n      // First, check if an image exists and upload it\r\n      if (file1) {\r\n        await postImage(file1); // Upload the image separately\r\n      }\r\n\r\n      // After the image upload, submit the rest of the form data (without the image)\r\n      await postProfileData({\r\n        twitterHandle: values.twitterHandle,\r\n        language: languages,\r\n        residentType: values.residentType,\r\n        country: values.country,\r\n        jobType: values.jobType,\r\n        jobTitle: values.jobTitle,\r\n        company: values.company,\r\n      });\r\n    } catch (error) {\r\n      setAboutLoading(false); // Stop loading in case of error\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setFile1(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      setImageError(false);\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        setSelectedFile(base64Image);\r\n        setAboutField({ ...aboutField, image: base64Image });\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const [selectedFile2, setSelectedFile2] = useState(null);\r\n\r\n  const handleFileChange2 = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    if (!file) return; // No file selected\r\n\r\n    if (!(file.type === \"application/pdf\")) {\r\n      // alert(\"Please select a valid PDF file.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"Please upload a PDF file.\");\r\n      return;\r\n    }\r\n\r\n    const fileSizeMB = file.size / (1024 * 1024); // Convert bytes to MB\r\n\r\n    if (fileSizeMB > 2) {\r\n      // alert(\"File size exceeds 2MB limit.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"File size must be less than  2MB\");\r\n\r\n      return;\r\n    }\r\n\r\n    setSelectedFile2(file);\r\n    setImageError1(false);\r\n    setImageErrorMessage1(\"\");\r\n  };\r\n\r\n  const validateFile = (file) => {\r\n    const maxSize = 2 * 1024 * 1024; // 5MB\r\n\r\n    if (file && file.size > maxSize) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"File size must be less than 2MB\");\r\n      return false;\r\n    }\r\n\r\n    setImageError(false);\r\n    setImageErrorMessage(\"\");\r\n    return true;\r\n  };\r\n\r\n  const postResumeData = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"resume\", selectedFile2);\r\n\r\n      await axios.post(hrResumePostUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // console.log(`resres ${response.status}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      innerRef={forms[0]}\r\n      initialValues={{\r\n        twitterHandle: fields.twitterHandle,\r\n        residentType: fields.residentType,\r\n        country: fields.country,\r\n        jobTitle: fields.jobTitle,\r\n        jobType: fields.jobType,\r\n        company: fields.company,\r\n      }}\r\n      validateOnMount\r\n      onSubmit={(values) => {\r\n        if (!file1 || validateFile(file1)) {\r\n          handleSubmit(values);\r\n          postResumeData(); // Call the combined submit function\r\n        }\r\n      }}\r\n    >\r\n      {({ errors, touched }) => (\r\n        <Form className=\"av-tooltip tooltip-label-right \">\r\n          <Alert color=\"primary\">\r\n            <strong>Lovely to see you!</strong>\r\n            <br /> Filling out the form only takes a couple of minutes.\r\n            We&apos;d love to learn more about your background and the\r\n            ins-and-outs of why you&apos;d like to become a real estate agent.\r\n            Keep things personal and talk directly to us and your mentees. We\r\n            don&apos;t need jargon and polished cover letters here! <br />\r\n            <br />\r\n            You agree to our code of conduct and the mentor agreement by sending\r\n            the form, so be sure to have a look at those.\r\n          </Alert>\r\n          <FormGroup>\r\n            <Label for=\"image\">Image</Label>\r\n            {imageError && (\r\n              <div className=\"invalid-feedback d-block\">\r\n                {imageErrorMessage}\r\n              </div>\r\n            )}\r\n            <Row>\r\n              <Col md={2} className=\"\">\r\n                <img\r\n                  src={selectedFile || \"/assets/img/profiles/l-1.jpg\"}\r\n                  className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                  style={{\r\n                    width: \"70px\",\r\n                    height: \"70px\",\r\n                    objectFit: \"cover\",\r\n                  }}\r\n                  alt=\"img\"\r\n                />\r\n              </Col>\r\n              <Col md={5} className=\"mt-3 \">\r\n                <InputGroup className=\"mb-3\">\r\n                  <div className=\"mt-1.5\">\r\n                    <Button\r\n                      className=\"default\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        document.getElementById(\"file-upload\").click()\r\n                      }\r\n                    >\r\n                      Upload profile pic <i className=\"iconsminds-upload \" />\r\n                    </Button>\r\n                    <Input\r\n                      id=\"file-upload\"\r\n                      type=\"file\"\r\n                      className=\"form-control d-none\"\r\n                      onChange={handleFileChange}\r\n                    />\r\n                    {file1 && (\r\n                      <p className=\"mt-2\">Selected file: {file1.name}</p>\r\n                    )}\r\n                  </div>\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Row>\r\n              <Col md={6}>\r\n                <Label for=\"jobType\">Job Type</Label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"jobType\"\r\n                  id=\"jobType\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"off\"\r\n                />\r\n              </Col>\r\n              <Col md={6}>\r\n                <Label for=\"jobTitle\">Job Title</Label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"jobTitle\"\r\n                  id=\"jobTitle\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"off\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col md={6}>\r\n                <Label for=\"company\">Company</Label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"company\"\r\n                  id=\"company\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"off\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <FormGroup className=\"error-l-125\">\r\n            <Row>\r\n              <Col md={6}>\r\n                <Label for=\"languages\">Languages known*</Label>\r\n                <Select\r\n                  placeholder=\"Select Languages\"\r\n                  name=\"languages\"\r\n                  isMulti\r\n                  options={languageOptions}\r\n                  // validate={validateLanguages}\r\n                  className=\"react-select\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(selectedOptions) => {\r\n                    const languagesArray = selectedOptions\r\n                      ? selectedOptions.map((option) => option.value)\r\n                      : [];\r\n                    setLanguages(languagesArray);\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col md={6}>\r\n                <Label for=\"twitterHandle\">Twitter Handle (optional)</Label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"twitterHandle\"\r\n                  id=\"twitterHandle\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"off\"\r\n                />\r\n                <FormText color=\"muted\" className=\"\">\r\n                  Omit the &ldquo;@&rdquo; -e.g. &ldquo;dqmonn&rdquo;\r\n                </FormText>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Row className=\"mt-3\">\r\n              <Col md={6}>\r\n                <Label for=\"residentType\">Resident Type*</Label>\r\n                <Field\r\n                  as=\"select\"\r\n                  name=\"residentType\"\r\n                  validate={validateIdentityStatus}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option disabled value=\"\">\r\n                    Select Resident type\r\n                  </option>\r\n                  {indentityStatusList.map((option) => (\r\n                    <option key={option.name} value={option.name}>\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n                {errors.identityStatus && touched.identityStatus && (\r\n                  <div className=\"invalid-feedback d-block\">\r\n                    {errors.identityStatus}\r\n                  </div>\r\n                )}\r\n              </Col>\r\n              <Col md={6}>\r\n                <Label>Country*</Label>\r\n                <Field\r\n                  as=\"select\"\r\n                  name=\"country\"\r\n                  validate={validateLocation}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option disabled value=\"\">\r\n                    Select Country\r\n                  </option>\r\n                  {country.map((option) => (\r\n                    <option key={option.iso_code} value={option.iso_code}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n                {errors.location && touched.location && (\r\n                  <div className=\"invalid-feedback d-block\">\r\n                    {errors.location}\r\n                  </div>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Row>\r\n              <Col md={6}>\r\n                <Label>CV</Label>\r\n                {imageError1 && (\r\n                  <div className=\"invalid-feedback d-block\">\r\n                    {imageErrorMessage1}\r\n                  </div>\r\n                )}\r\n\r\n                <InputGroup className=\"\">\r\n                  <div className=\"\">\r\n                    <Button\r\n                      className=\"default\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        document.getElementById(\"file-upload-resume\").click()\r\n                      }\r\n                    >\r\n                      Upload Resume <i className=\"iconsminds-upload ml-2\" />\r\n                    </Button>\r\n                    {/* <Form> */}\r\n                    <Input\r\n                      id=\"file-upload-resume\"\r\n                      type=\"file\"\r\n                      className=\"d-none\"\r\n                      onChange={handleFileChange2}\r\n                      // validate={validateFile}\r\n                    />\r\n                  </div>\r\n                </InputGroup>\r\n                <div className=\"  my-2 \">\r\n                  {/* {selectedFile2 ? selectedFile2.name : \"\"} */}\r\n                  {selectedFile2\r\n                    ? `selected file is ${selectedFile2.name}`\r\n                    : \"\"}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n\r\n          <Row>\r\n            <Col className=\"text-center\">\r\n              <Button\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className={`btn-shadow btn-multiple-state ${\r\n                  aboutLoading ? \"show-spinner\" : \"\"\r\n                }`}\r\n              >\r\n                <span className=\"spinner d-inline-block\">\r\n                  <span className=\"bounce1\" />\r\n                  <span className=\"bounce2\" />\r\n                  <span className=\"bounce3\" />\r\n                </span>\r\n                <span className=\"label\">Next</span>\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default RealEstateAgentAbout;\r\n","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { createRef, useState } from \"react\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport { Button, Card, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport { EmploymentTypeData } from \"../../Listing/ListingData\";\r\nimport ToasterComponent from \"../../notifications/ToasterComponent\";\r\n\r\nconst RealEstateAgentExperience = ({\r\n  currentStep,\r\n  setCurrentStep,\r\n  setLoading,\r\n}) => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n  const currentYear = new Date().getFullYear();\r\n  const [work, setWork] = useState({\r\n    experiences: [\r\n      {\r\n        company: \"\",\r\n        jobTitle: \"\",\r\n        employmentType: \"\",\r\n        jobLocation: \"\",\r\n        startYear: \"\",\r\n        endYear: \"\",\r\n        // price: \"\",\r\n      },\r\n    ],\r\n  });\r\n  const years = [];\r\n  for (let year = currentYear; year >= 2005; year -= 1) {\r\n    years.push(year);\r\n  }\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  const hrExperienceUrl = `${baseUrl}/api/realestate/experience`;\r\n\r\n  const token = localStorage.getItem(\"tokenRes\");\r\n\r\n  const postExperience = async (data) => {\r\n    setProfileLoading(true);\r\n    try {\r\n      const response = await axios.post(hrExperienceUrl, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setProfileLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"3\");\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 3000);\r\n    } catch (error) {\r\n      setProfileLoading(false);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        error.response.data.statuses.forEach((status) => {\r\n          NotificationManager.error(\r\n            status.message,\r\n            \"Oops!\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n        });\r\n      } else {\r\n        NotificationManager.error(\r\n          \"something went wrong\",\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeWorkExperience = (index) => {\r\n    setWork((prevState) => ({\r\n      ...prevState,\r\n      experiences: prevState.experiences.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const addWorkExperience = () => {\r\n    setWork((prevState) => ({\r\n      ...prevState,\r\n      experiences: [\r\n        ...prevState.experiences,\r\n        {\r\n          company: \"\",\r\n          jobTitle: \"\",\r\n          employmentType: \"\",\r\n          jobLocation: \"\",\r\n          startYear: \"\",\r\n          endYear: \"\",\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  const handleWorkInputChange = (index, field, value) => {\r\n    setWork((prevState) => ({\r\n      ...prevState,\r\n      experiences: prevState.experiences.map((exp, i) =>\r\n        i === index ? { ...exp, [field]: value } : exp\r\n      ),\r\n      // If the field being updated is 'price', update the outer price as well\r\n      //   price: field === \"price\" ? value : prevState.price,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        innerRef={forms[2]}\r\n        initialValues={work}\r\n        onSubmit={() => {\r\n          postExperience(work);\r\n        }}\r\n        validateOnMount\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className=\"av-tooltip tooltip-label-right my-4\">\r\n            {work.experiences.map((works, index) => (\r\n              // eslint-disable-next-line react/no-array-index-key\r\n              <div key={index}>\r\n                <div className=\"text-right\">\r\n                  {work.experiences.length > 1 && (\r\n                    <span>\r\n                      <Button\r\n                        id=\"closeButton\"\r\n                        color=\"primary\"\r\n                        outline\r\n                        className=\"icon-button\"\r\n                        onClick={() => removeWorkExperience(index)}\r\n                      >\r\n                        <span className=\"text-primary\">\r\n                          <strong>x</strong>\r\n                        </span>\r\n                      </Button>\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Company Name*</Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        required\r\n                        name={`education[${index}].company`}\r\n                        value={works.company}\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"company\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      />\r\n                      {errors.education?.[index]?.company &&\r\n                        touched.education?.[index]?.company && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].company}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].jobTitle`}>\r\n                        Job title*\r\n                      </Label>\r\n                      <Input\r\n                        name={`education[${index}].jobTitle`}\r\n                        id={`education[${index}].jobTitle`}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={works.jobTitle}\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"jobTitle\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      />\r\n                      {errors.education?.[index]?.jobTitle &&\r\n                        touched.education?.[index]?.jobTitle && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].jobTitle}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].employmentType`}>\r\n                        Employment type*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].employmentType`}\r\n                        id={`education[${index}].employmentType`}\r\n                        className=\"form-control\"\r\n                        value={works.employmentType}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"employmentType\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select Employment type\r\n                        </option>\r\n                        {EmploymentTypeData.map((option, i) => (\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          <option key={i} value={option.label}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n\r\n                      {errors.education?.[index]?.employmentType &&\r\n                        touched.education?.[index]?.employmentType && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].employmentType}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].jobLocation`}>\r\n                        Job location*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name={`education[${index}].jobLocation`}\r\n                        id={`education[${index}].jobLocation`}\r\n                        className=\"form-control\"\r\n                        required\r\n                        value={works.jobLocation}\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"jobLocation\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                        // validate={validatePackageDescription}\r\n                      />\r\n                      {errors.education?.[index]?.jobLocation &&\r\n                        touched.education?.[index]?.jobLocation && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].jobLocation}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].startDate`}>\r\n                        Start year*\r\n                      </Label>\r\n\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].startYear`}\r\n                        id={`education[${index}].startYear`}\r\n                        className=\"form-control\"\r\n                        value={works.startYear}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"startYear\",\r\n                            parseInt(e.target.value, 10)\r\n                          )\r\n                        }\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          Select year\r\n                        </option>\r\n                        {years.map((yr) => (\r\n                          <option key={yr} value={yr}>\r\n                            {yr}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n\r\n                      {errors.education?.[index]?.startYear &&\r\n                        touched.education?.[index]?.startYear && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].startYear}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].endYear`}>\r\n                        End year*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].endYear`}\r\n                        id={`education[${index}].endYear`}\r\n                        className=\"form-control\"\r\n                        value={works.endYear}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"endYear\",\r\n                            parseInt(e.target.value, 10)\r\n                          )\r\n                        }\r\n                        // validate={validatePackageDescription}\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          Select year\r\n                        </option>\r\n                        {years.map((yr) => (\r\n                          <option key={yr} value={yr}>\r\n                            {currentYear === yr ? \"Present\" : yr}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.education?.[index]?.endYear &&\r\n                        touched.education?.[index]?.endYear && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].endYear}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <hr />\r\n              </div>\r\n            ))}\r\n\r\n            <Card\r\n              onClick={addWorkExperience}\r\n              className=\"p-3 text-center my-5\"\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <h3 className=\"font-weight-bold text-primary\">\r\n                + Add more work experience\r\n              </h3>\r\n            </Card>\r\n            {/* <Row className=\"my-2\">\r\n              <Col md={12}>\r\n                <FormGroup>\r\n                  <Label for=\"price\">Price*</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    id=\"price\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={work.price || \"\"}\r\n                    onChange={(e) => {\r\n                      const value = e.target?.value;\r\n                      if (value !== null && value !== undefined) {\r\n                        setWork((prevState) => ({\r\n                          ...prevState,\r\n                          price: value, // Update price directly here\r\n                        }));\r\n                      }\r\n                    }}\r\n                  />\r\n                  {errors.price && touched.price && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.price}\r\n                    </div>\r\n                  )}\r\n                </FormGroup>\r\n              </Col>\r\n            </Row> */}\r\n            <Row>\r\n              {\" \"}\r\n              <Col>\r\n                {\" \"}\r\n                <Button color=\"primary\" onClick={handlePrevStep}>\r\n                  Previous\r\n                </Button>\r\n              </Col>\r\n              <Col className=\"text-right\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={`btn-shadow btn-multiple-state ${\r\n                    profileLoading ? \"show-spinner\" : \"\"\r\n                  }`}\r\n                >\r\n                  <span className=\"spinner d-inline-block\">\r\n                    <span className=\"bounce1\" />\r\n                    <span className=\"bounce2\" />\r\n                    <span className=\"bounce3\" />\r\n                  </span>\r\n                  <span className=\"label\">Submit</span>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RealEstateAgentExperience;\r\n","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { createRef, useState } from \"react\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Col,\r\n  FormGroup,\r\n  FormText,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { validateBio } from \"../../AlumniRegister/validation\";\r\nimport ToasterComponent from \"../../notifications/ToasterComponent\";\r\n\r\nconst RealEstateAgentProfile = ({ currentStep, setCurrentStep }) => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n\r\n  const [aboutLoading, setAboutLoading] = useState(false);\r\n\r\n  const [skillsTag, setSkillsTag] = useState([]);\r\n\r\n  const [fields] = useState({\r\n    personalWebsite: \"\",\r\n    bio: \"\",\r\n  });\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n\r\n  const hrProfileUrl = `${baseUrl}/api/realestate/profile`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  const postProfileData = async (data) => {\r\n    const hrProfile = {\r\n      personalWebsite: data.personalWebsite,\r\n      skills: data.skills,\r\n      bio: data.bio,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(hrProfileUrl, hrProfile, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\", // Set Content-Type to application/json\r\n        },\r\n      });\r\n      setAboutLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"1\");\r\n    } catch (error) {\r\n      setAboutLoading(false);\r\n      NotificationManager.error(\r\n        \"Failed to submit profile data\",\r\n        \"Oops!\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    setAboutLoading(true);\r\n\r\n    try {\r\n      await postProfileData({\r\n        personalWebsite: values.personalWebsite,\r\n        skills: skillsTag,\r\n        bio: values.bio,\r\n      });\r\n    } catch (error) {\r\n      setAboutLoading(false); // Stop loading in case of error\r\n    }\r\n  };\r\n\r\n  const handleTagsChange = (newSkills) => {\r\n    setSkillsTag(newSkills);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        innerRef={forms[0]}\r\n        initialValues={{\r\n          personalWebsite: fields.personalWebsite,\r\n          bio: fields.bio,\r\n        }}\r\n        validateOnMount\r\n        // onSubmit={(values) => {\r\n        //   if (!file1 || validateFile(file1)) {\r\n        //     postDataAbout({\r\n        //       ...values,\r\n        //       language: languages,\r\n        //       skills: skillsTag,\r\n        //     });\r\n        //   }\r\n        // }}\r\n        onSubmit={(values) => {\r\n          handleSubmit(values);\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className=\"av-tooltip tooltip-label-right \">\r\n            <Alert color=\"primary\">\r\n              <strong>Lovely to see you!</strong>\r\n              <br /> Filling out the form only takes a couple of minutes.\r\n              We&apos;d love to learn more about your background and the\r\n              ins-and-outs of why you&apos;d like to become a mentor. Keep\r\n              things personal and talk directly to us and your mentees. We\r\n              don&apos;t need jargon and polished cover letters here! <br />\r\n              <br />\r\n              You agree to our code of conduct and the mentor agreement by\r\n              sending the form, so be sure to have a look at those.\r\n            </Alert>\r\n\r\n            <FormGroup>\r\n              <Row>\r\n                <Col md={12}>\r\n                  <FormGroup>\r\n                    <Label for=\"skills\">Skills*</Label>\r\n\r\n                    <TagsInput\r\n                      required\r\n                      value={skillsTag}\r\n                      onChange={handleTagsChange}\r\n                      inputProps={{ placeholder: \"Add skills \" }}\r\n                      addOnBlur\r\n                      addKeys={[13, 188]}\r\n                    />\r\n\r\n                    <FormText>Add skill and press Enter or Comma </FormText>\r\n                    <FormText color=\"muted\">\r\n                      Describe your expertise to connect with mentors who have\r\n                      similar interests.\r\n                      <br />\r\n                      {/* Comma-separated list of your skills  */}\r\n                      (keep it below 10). Mentors will use this to find you.\r\n                    </FormText>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"bio\">Bio*</Label>\r\n              <Field\r\n                as=\"textarea\"\r\n                name=\"bio\"\r\n                id=\"bio\"\r\n                className=\"form-control\"\r\n                validate={validateBio}\r\n                autoComplete=\"off\"\r\n              />\r\n              {errors.bio && touched.bio && (\r\n                <div className=\"invalid-feedback d-block\">{errors.bio}</div>\r\n              )}\r\n              <FormText color=\"muted\">\r\n                Tell us (and your mentees) a little bit about yourself. Talk\r\n                about yourself in the first person, as if you&apos;d directly\r\n                talk to a mentee. This will be public.\r\n              </FormText>\r\n            </FormGroup>\r\n            <FormGroup className=\"error-l-125\">\r\n              <Row>\r\n                <Col md={12}>\r\n                  <Label for=\"website\">Personal Website (optional)</Label>\r\n                  <Field\r\n                    type=\"url\"\r\n                    name=\"website\"\r\n                    id=\"website\"\r\n                    className=\"form-control\"\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  <FormText color=\"muted\">\r\n                    You can add your blog, GitHub profile or similar here\r\n                  </FormText>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n            \r\n              \r\n            <Row>    \r\n                {\" \"}\r\n              <Col>\r\n                {\" \"}\r\n                <Button color=\"primary\" onClick={handlePrevStep}>\r\n                  Previous\r\n                </Button>\r\n              </Col>\r\n              <Col className=\"text-right\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={`btn-shadow btn-multiple-state ${\r\n                    aboutLoading ? \"show-spinner\" : \"\"\r\n                  }`}\r\n                >\r\n                  <span className=\"spinner d-inline-block\">\r\n                    <span className=\"bounce1\" />\r\n                    <span className=\"bounce2\" />\r\n                    <span className=\"bounce3\" />\r\n                  </span>\r\n                  <span className=\"label\">Next</span>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RealEstateAgentProfile;\r\n","/* eslint-disable no-param-reassign */\r\n\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { adminRoot } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Jumbotron,\r\n  NavLink,\r\n  Row,\r\n  Spinner,\r\n} from \"reactstrap\";\r\n\r\nimport RealEstateAgentAbout from \"./RealEstateAgentAbout\";\r\nimport RealEstateAgentExperience from \"./RealEstateAgentExperience\";\r\nimport RealEstateAgentProfile from \"./RealEstateAgentProfile\";\r\n\r\nconst RealEstateAgentApply = () => {\r\n  const steps = [\"About you\", \"profile\", \"Experience\"];\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const status = localStorage.getItem(\"status\");\r\n    console.log(\"status\", status);\r\n    if (status) {\r\n      if (status === \"0\") {\r\n        setCurrentStep(0);\r\n      } else if (status === \"1\") {\r\n        setCurrentStep(1);\r\n      } else if (status === \"3\") {\r\n        setCurrentStep(2);\r\n      } else if (status === \"7\") {\r\n        setCurrentStep(3);\r\n      } else {\r\n        setCurrentStep(0);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n  const handleMySlotsClick = () => history.push(`${adminRoot}/listing/stay`);\r\n\r\n  return (\r\n    <Card className=\"mx-auto my-4 \" style={{ maxWidth: \"900px\" }}>\r\n      <CardBody className=\"wizard wizard-default\">\r\n        <h1 className=\"mt-4 font-weight-bold\">Apply as a Real Estate Agent</h1>\r\n        <ul className=\"nav nav-tabs justify-content-center\">\r\n          {steps.map((stepItem, index) => (\r\n            <li\r\n              // eslint-disable-next-line\r\n              key={`topNavStep_${index}`}\r\n              className={`nav-item ${\r\n                // eslint-disable-next-line\r\n                index === currentStep\r\n                  ? \"step-doing\"\r\n                  : index < currentStep\r\n                  ? \"step-done\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <NavLink to=\"#\" location={{}} className=\"nav-link\">\r\n                <span>{stepItem}</span>\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"wizard-basic-step\">\r\n          {currentStep === 0 && (\r\n            <RealEstateAgentAbout\r\n              currentStep={currentStep}\r\n              setCurrentStep={setCurrentStep}\r\n            />\r\n          )}\r\n          {currentStep === 1 && (\r\n            <RealEstateAgentProfile\r\n              currentStep={currentStep}\r\n              setCurrentStep={setCurrentStep}\r\n            />\r\n          )}\r\n          {currentStep === 2 && (\r\n            <RealEstateAgentExperience\r\n              currentStep={currentStep}\r\n              setCurrentStep={setCurrentStep}\r\n              setLoading={setLoading}\r\n            />\r\n          )}\r\n          {loading ? (\r\n            <div className=\"wizard-basic-step text-center pt-3\">\r\n              <Spinner color=\"primary\" className=\"mb-1\" />\r\n              <p>Submitting</p>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {currentStep === 3 && (\r\n                <Row>\r\n                  <Colxx xxs=\"12\" className=\"mb-4\">\r\n                    <Card>\r\n                      <CardBody className=\"text-center\">\r\n                        <i\r\n                          alt=\"\"\r\n                          className=\"glyph-icon iconsminds-yes text-success\"\r\n                          style={{ fontSize: \"75px\" }}\r\n                        />\r\n                        <Jumbotron className=\"text-center\">\r\n                          <h1 className=\"display-4\">Submitted Successfully!</h1>\r\n                          <p className=\"lead\">We will reach you shortly</p>\r\n                          <hr className=\"my-4\" />\r\n                          <p className=\"lead mb-0\">\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"lg\"\r\n                              onClick={() => handleMySlotsClick()}\r\n                            >\r\n                              stay list\r\n                            </Button>\r\n                          </p>\r\n                        </Jumbotron>\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Colxx>\r\n                </Row>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default injectIntl(RealEstateAgentApply);\r\n","// /* eslint-disable no-param-reassign */\r\n// import React from \"react\";\r\n// import {\r\n//   Button,\r\n// } from \"reactstrap\";\r\n// import {WithWizard } from \"react-albus\";\r\n\r\n// const BottomNavigation = ({\r\n//     className,\r\n//     onClickPrev,\r\n//     prevLabel,\r\n//     onClickNext,\r\n//     // nextLabel,\r\n//   }) => {\r\n//     return (\r\n//       <WithWizard\r\n//         render={({ next, previous, step, steps }) => {\r\n//           if (steps.indexOf(step) === 3) {\r\n//             return null;\r\n//           }\r\n\r\n//           return (\r\n//             <div className={`wizard-buttons ${className}`}>\r\n//               {steps.indexOf(step) > 0 && (\r\n//                 <div className=\"position-relative w-100 h-100\">\r\n//                   <Button\r\n//                     color=\"primary\"\r\n//                     outline\r\n//                     className={`mr-1 ${\r\n//                       steps.indexOf(step) <= 0 ? \"disabled\" : \"\"\r\n//                     }`}\r\n//                     onClick={() => {\r\n//                       onClickPrev(previous, steps, step);\r\n//                     }}\r\n//                   >\r\n//                     {prevLabel}\r\n//                   </Button>\r\n//                 </div>\r\n//               )}\r\n//               <div>\r\n//                 <Button\r\n//                   color=\"primary\"\r\n//                   className={`${\r\n//                     steps.indexOf(step) >= steps.length - 1 ? \"disabled\" : \"\"\r\n//                   } text-nowrap  ml-2`}\r\n//                   onClick={() => {\r\n//                     onClickNext(next, steps, step);\r\n//                   }}\r\n//                 >\r\n//                   {/* {nextLabel} */}\r\n//                   {steps.indexOf(step) === 2 ? \"Submit\" : \"Next Step\"}\r\n//                 </Button>\r\n//               </div>\r\n//             </div>\r\n//           );\r\n//         }}\r\n//       />\r\n//     );\r\n//   };\r\n\r\n//   export default BottomNavigation;\r\n\r\n/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-param-reassign */\r\nimport React from \"react\";\r\nimport { WithWizard } from \"react-albus\";\r\nimport { Button } from \"reactstrap\";\r\n\r\n\r\n\r\nconst BottomNavigation = ({\r\n  className,\r\n  onClickPrev,\r\n  prevLabel,\r\n  onClickNext,\r\n  nextLabel,\r\n  licenseBalance\r\n}) => {\r\n  return (\r\n    <WithWizard\r\n      render={({ next, previous, step, steps }) => (\r\n        <div className={`wizard-buttons ${className}`}>\r\n          {/* {steps.indexOf(step) < steps.length - 1 && (\r\n            <Button\r\n              color=\"primary\"\r\n              className='mr-1'\r\n              onClick={() => {\r\n                onClickPrev(previous, steps, step);\r\n              }}\r\n            >\r\n              {prevLabel}\r\n            </Button>\r\n          )} */}\r\n          {step !== steps[0] && step !== steps[steps.length - 1] && (\r\n            <Button\r\n              color=\"primary\"\r\n              className=\"mr-1\"\r\n              onClick={() => {\r\n                onClickPrev(previous, steps, step);\r\n              }}\r\n            >\r\n              {prevLabel}\r\n            </Button>\r\n          )}\r\n\r\n          {steps.indexOf(step) < steps.length - 1 && (\r\n            <Button\r\n              color=\"primary\"\r\n              className=\"ml-1\"\r\n              onClick={() => {\r\n                onClickNext(next, steps, step);\r\n              }}\r\n              disabled={step.id === 'step2' && !licenseBalance}\r\n            >\r\n              {nextLabel}\r\n            </Button>\r\n          )}\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BottomNavigation;\r\n\r\n\r\n","/* eslint-disable no-param-reassign */\r\nimport axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  CustomInput,\r\n  Form,\r\n  FormGroup,\r\n  InputGroup,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\n//  import { useLocation } from 'react-router-dom/cjs/react-router-dom.min';\r\n//  Dropdown, DropdownItem, DropdownMenu,\r\n//  DropdownToggle\r\nimport CustomSelectInput from \"components/common/CustomSelectInput\";\r\nimport { Step, Steps, Wizard } from \"react-albus\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\r\nimport Select from \"react-select\";\r\n\r\nimport TopNavigation from \"components/wizard/TopNavigation\";\r\nimport BottomNavigation from \"../my-login/BottomNavigation\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\nimport DateRangePicker from \"./DateRangePicker\";\r\n\r\n// const PopupWizard = ({ selectedDate,setSelectedDate,upcomingsession,mentorId,mentorName})\r\nconst PopupWizard = ({ selectedDate, setSelectedDate, mentorId, role }) => {\r\n  const history = useHistory();\r\n\r\n  //  const url=`${baseUrl}/sessionUpcomingHistroy`;\r\n\r\n  //  if you want to change backend url uncomment the below line\r\n  // const url=`${baseUrl}/api/calendar/mentee/upcoming-bookedslots-session-history`\r\n\r\n  // const url1=`${baseUrl}/ mentorAppointmentTime`\r\n  // const url1 = `${baseUrl}/api/calendar/appointment/UserProfile`;\r\n  const url1 = `${baseUrl}/api/calendar/appointment/book?role=${role}`;\r\n\r\n  //  if you want to change backend url uncomment the below line\r\n\r\n  const redirectToSessionLists = () => {\r\n    // Redirect to the specified URL with the query parameter\r\n    history.push(\"/app/sessionlists?appointment=true\");\r\n  };\r\n  // const [selectedDate, setSelectedDate] = useState(null);\r\n  // const [storedData, setStoredData] = useState(null);\r\n  // const [dropdownBasicOpen, setDropdownBasicOpen] = useState(false);\r\n  // const [dropdownBasicOpen1, setDropdownBasicOpen1] = useState(false);\r\n  // const [dropdownBasicOpen2, setDropdownBasicOpen2] = useState(false);\r\n  // const [dropdownBasicOpen3, setDropdownBasicOpen3] = useState(false);\r\n  // const [dropdownBasicOpen4, setDropdownBasicOpen4] = useState(false);\r\n  // const [dropdownBasicOpen5, setDropdownBasicOpen5] = useState(false);\r\n  const [selectedradiobutton, setSelectedRadioButton] = useState(null);\r\n  const [selectedHourDropdown, setSelectedHourDropdown] = useState(null); // Renamed state variable\r\n  const [selectedHourDropdown1, setSelectedHourDropdown1] = useState(null); // Renamed state variable\r\n  //  const [upcomingSessions] = useState([]);\r\n  const [minutedrop, setMinutedrop] = useState(null);\r\n  const [minutedrop1, setMinutedrop1] = useState(null);\r\n  const [selectedfromampm, setSelectedFromAmPm] = useState(null); // State for AM selection\r\n  const [selectedfromampm1, setSelectedFromAmPm1] = useState(null); // State for AM selection\r\n  const [license, setLicense] = useState([]);\r\n\r\n  // const url=`${baseUrl}/licenseDetails`;\r\n\r\n  // Backend Url\r\n  // const url = `${baseUrl}/api/calendar/mentee/license-details`;\r\n  const url = `${baseUrl}/api/calendar/license-details`;\r\n\r\n  const LicenseDetails = async () => {\r\n    console.log(\"Mentor ID:\", mentorId);\r\n    console.log(\"Role from async function:\", role);\r\n    try {\r\n      // Generate newData object\r\n      const selectedDateTime = new Date(selectedDate);\r\n      const selectedHour =\r\n        (selectedHourDropdown % 12) + (selectedfromampm === \"PM\" ? 12 : 0);\r\n      selectedDateTime.setHours(selectedHour, minutedrop, 0, 0);\r\n      const fromTimeStamp = selectedDateTime.getTime();\r\n\r\n      const toDateTime = new Date(selectedDateTime);\r\n      const selectedHourTo =\r\n        (selectedHourDropdown1 % 12) + (selectedfromampm1 === \"PM\" ? 12 : 0);\r\n      toDateTime.setHours(selectedHourTo, minutedrop1, 0, 0);\r\n      const toTimeStamp = toDateTime.getTime();\r\n\r\n      const newData = {\r\n        userId: mentorId,\r\n        role,\r\n        fromTimeStamp,\r\n        toTimeStamp,\r\n      };\r\n\r\n      // Convert newData object to query parameters string\r\n      const queryString = Object.keys(newData)\r\n        .map(\r\n          (key) =>\r\n            `${encodeURIComponent(key)}=${encodeURIComponent(newData[key])}`\r\n        )\r\n        .join(\"&\");\r\n\r\n      // Perform axios request with query parameters\r\n      const response = await axios.get(`${url}?${queryString}`);\r\n      console.log(\"Response from server:\", response.data);\r\n\r\n      // Set the license state with the response data\r\n      setLicense(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLicenseNextButtonClick = () => {\r\n    LicenseDetails();\r\n  };\r\n\r\n  const handleNextButtonClick = () => {\r\n    // Convert selected date to UTC timestamp\r\n    const selectedDateTime = new Date(selectedDate);\r\n\r\n    // Set the hours and minutes for the selected date\r\n    const selectedHour =\r\n      (selectedHourDropdown % 12) + (selectedfromampm === \"PM\" ? 12 : 0); // Adjust for PM\r\n    selectedDateTime.setHours(selectedHour, minutedrop, 0, 0);\r\n    const fromTimeStamp = selectedDateTime.getTime(); // Get the UTC timestamp for 'from' time\r\n\r\n    // Calculate 'to' time\r\n    const toDateTime = new Date(selectedDateTime); // Create a new Date object based on 'from' time\r\n    const selectedHourTo =\r\n      (selectedHourDropdown1 % 12) + (selectedfromampm1 === \"PM\" ? 12 : 0); // Adjust for PM\r\n    toDateTime.setHours(selectedHourTo, minutedrop1, 0, 0); // Set the 'to' hour\r\n    const toTimeStamp = toDateTime.getTime(); // Get the UTC timestamp for 'to' time\r\n\r\n    console.log(\"From Timestamp (milliseconds):\", fromTimeStamp);\r\n    console.log(\"To Timestamp (milliseconds):\", toTimeStamp);\r\n\r\n    const newData = {\r\n      mentorId,\r\n      mode: selectedradiobutton,\r\n      fromTimeStamp,\r\n      toTimeStamp,\r\n    };\r\n\r\n    axios\r\n      .post(url1, [newData])\r\n      .then((response) => {\r\n        // Handle successful response, such as redirecting the user\r\n        console.log(\"Post request successful:\", response.data);\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n        // redirectToSessionLists(); // Redirect to the specified URL\r\n      })\r\n      .catch((error) => {\r\n        // Handle error\r\n        console.error(\"Error posting data:\", error);\r\n        if (error.response) {\r\n          ToasterComponent(\"error\", error.response.data.statuses);\r\n        }\r\n      });\r\n  };\r\n\r\n  // This function is used to check the available slot is same as the input given by the user\r\n  const handleCheckAvailability = () => {\r\n    // Convert selected date to UTC timestamp\r\n    const selectedDateTime = new Date(selectedDate);\r\n\r\n    // Set the hours and minutes for the selected date\r\n    const selectedHour =\r\n      (selectedHourDropdown % 12) + (selectedfromampm === \"PM\" ? 12 : 0); // Adjust for PM\r\n    selectedDateTime.setHours(selectedHour, minutedrop, 0, 0);\r\n    const fromTimeStamp = selectedDateTime.getTime(); // Get the UTC timestamp for 'from' time\r\n\r\n    // Calculate 'to' time\r\n    const toDateTime = new Date(selectedDateTime); // Create a new Date object based on 'from' time\r\n    const selectedHourTo =\r\n      (selectedHourDropdown1 % 12) + (selectedfromampm1 === \"PM\" ? 12 : 0); // Adjust for PM\r\n    toDateTime.setHours(selectedHourTo, minutedrop1, 0, 0); // Set the 'to' hour\r\n    const toTimeStamp = toDateTime.getTime(); // Get the UTC timestamp for 'to' time\r\n\r\n    console.log(\"From Timestamp (milliseconds):\", fromTimeStamp);\r\n    console.log(\"To Timestamp (milliseconds):\", toTimeStamp);\r\n\r\n    const availabilityUrl = `${baseUrl}/api/calendar/appointment/booking/availability?userId=${mentorId}&fromTimeStamp=${fromTimeStamp}&toTimeStamp=${toTimeStamp}`;\r\n\r\n    return axios\r\n      .get(availabilityUrl)\r\n      .then((response) => {\r\n        // Handle successful response\r\n        console.log(\"Availability check successful:\", response.data);\r\n        // alert(\"Availability data fetched successfully\"); // Use alert instead of Toaster\r\n        return response; // Return the response for further processing if needed\r\n      })\r\n      .catch((error) => {\r\n        // Handle error\r\n        console.error(\"Error checking availability:\", error);\r\n        if (error.response) {\r\n          alert(error.response.data.statuses || \"Error fetching availability\"); // Use alert for error messages\r\n        } else {\r\n          alert(\"An unexpected error occurred. Please try again.\"); // Handle unexpected errors\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleDropdownItemClick = (selectedHour) => {\r\n    // Handle the selected hour as needed\r\n    setSelectedHourDropdown(selectedHour.value);\r\n\r\n    console.log(`Selected hour: ${selectedHour.value}`);\r\n    // setSelectedHourDropdown(selectedHour);\r\n  };\r\n\r\n  const handleDropdownItemClick1 = (selectedMinute) => {\r\n    // Handle the selected minutes as needed\r\n    setMinutedrop(selectedMinute.value);\r\n    //  setMinutedrop1(selectedMinute);\r\n    // console.log(`Selected minute: ${selectedMinute}`);\r\n    // setMinuteDrop(selectedMinute);\r\n  };\r\n\r\n  // const handleDropdownItemClick2 = (selectedHour) => {\r\n  //   // Handle the selected hour as needed\r\n  //   setSelectedHourDropdown1(selectedHour)\r\n  //   console.log(`Selected hour: ${selectedHour}`);\r\n  //   // setSelectedHourDropdown(selectedHour);\r\n  // };\r\n\r\n  const handleDropdownItemClick2 = (selectedHour) => {\r\n    // Handle the selected minutes as needed\r\n    setSelectedHourDropdown1(selectedHour.value);\r\n  };\r\n  const handleDropdownItemClick3 = (selectedMinute) => {\r\n    // Handle the selected minutes as needed\r\n    setMinutedrop1(selectedMinute.value);\r\n    // console.log(`Selected minute: ${selectedMinute.value}`);\r\n    // setMinuteDrop(selectedMinute);\r\n  };\r\n\r\n  // const handleDropdownItemClick4 = (selectedAmPmFrom) => {\r\n  //   // Handle the selected minutes as needed\r\n  //   setSelectedFromAmPm(selectedAmPmFrom);\r\n  //   console.log(`Selected from AM/PM: ${selectedAmPmFrom}`);\r\n  //   // setMinuteDrop(selectedMinute);\r\n  // };\r\n\r\n  const handleDropdownItemClick4 = (selectedAmPmFrom) => {\r\n    // Handle the selected minutes as needed\r\n    setSelectedFromAmPm(selectedAmPmFrom.value);\r\n    console.log(`Selected from AM/PM: ${selectedAmPmFrom.value}`);\r\n    // setMinuteDrop(selectedMinute);\r\n  };\r\n  const handleDropdownItemClick5 = (selectedAmPmTo) => {\r\n    // Handle the selected minutes as needed\r\n    setSelectedFromAmPm1(selectedAmPmTo.value);\r\n    console.log(`Selected from AM/PM: ${selectedAmPmTo.value}`);\r\n    // setMinuteDrop(selectedMinute);\r\n  };\r\n  // const generateDropdownItems = () => {\r\n  //   const items = [];\r\n  //   for (let i = 1; i <= 12; i+=1) {\r\n  //     const formattedHour = i < 10 ? `0${i}` : i;\r\n  //     items.push(\r\n  //       <DropdownItem key={i} onClick={() => handleDropdownItemClick(i)} >\r\n  //         {formattedHour}\r\n  //       </DropdownItem>\r\n  //     );\r\n  //   }\r\n  //   return items;\r\n  // };\r\n\r\n  // const generateDropdownItemsSelect = () => {\r\n  //   const items = [];\r\n  //   for (let i = 1; i <= 12; i += 1) {\r\n  //     const formattedHour = i < 10 ? `0${i}` : i;\r\n  //     items.push(\r\n  //       <option key={i} value={i}>\r\n  //         {formattedHour}\r\n  //       </option>\r\n  //     );\r\n  //   }\r\n  //   return items;\r\n  // };\r\n\r\n  const generateDropdownItemsSelect = () => {\r\n    const items = [];\r\n    for (let i = 1; i <= 12; i += 1) {\r\n      const formattedHour = i < 10 ? `0${i}` : i;\r\n      items.push({ value: formattedHour, label: formattedHour });\r\n    }\r\n    return items;\r\n  };\r\n  const generateMinuteDropdownItems = () => {\r\n    const minutes = [0, 15, 30, 45];\r\n    const items = [];\r\n\r\n    minutes.forEach((minute) => {\r\n      const formattedMinute = minute < 10 ? `0${minute}` : `${minute}`;\r\n      items.push({ value: formattedMinute, label: formattedMinute });\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n  // const generateMinuteDropdownItems = () => {\r\n  //   const minutes = [0, 15, 30, 45];\r\n  //   const items = minutes.map((minute) => {\r\n  //     const formattedMinute = minute < 10 ? `0${minute}` : minute;\r\n  //     return (\r\n  //       <DropdownItem key={minute} onClick={() => handleDropdownItemClick1(minute)}>\r\n  //         {formattedMinute}\r\n  //       </DropdownItem>\r\n  //     );\r\n  //   });\r\n  //   return items;\r\n  // };\r\n  // const generateDropdownItems1 = () => {\r\n  //   const items = [];\r\n  //   for (let i = 1; i <= 12; i+=1) {\r\n  //     const formattedHour = i < 10 ? `0${i}` : i;\r\n  //     items.push(\r\n  //       <DropdownItem key={i} onClick={() => handleDropdownItemClick2(i)} >\r\n  //         {formattedHour}\r\n  //       </DropdownItem>\r\n  //     );\r\n  //   }\r\n  //   return items;\r\n  // };\r\n  const generateDropdownItems1 = () => {\r\n    const items = [];\r\n    for (let i = 1; i <= 12; i += 1) {\r\n      const formattedHour = i < 10 ? `0${i}` : i;\r\n      items.push({ value: formattedHour, label: formattedHour });\r\n    }\r\n    return items;\r\n  };\r\n  const generateMinuteDropdownItems1 = () => {\r\n    const minutes = [0, 15, 30, 45];\r\n    const items = [];\r\n\r\n    minutes.forEach((minute) => {\r\n      const formattedMinute = minute < 10 ? `0${minute}` : `${minute}`;\r\n      items.push({ value: formattedMinute, label: formattedMinute });\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n  // const generateMinuteDropdownItems1 = () => {\r\n  //   const minutes = [0, 15, 30, 45];\r\n  //   const items = minutes.map((minute) => {\r\n  //     const formattedMinute = minute < 10 ? `0${minute}` : minute;\r\n  //     return (\r\n  //       <DropdownItem key={minute} onClick={() => handleDropdownItemClick3(minute)}>\r\n  //         {formattedMinute}\r\n  //       </DropdownItem>\r\n  //     );\r\n  //   });\r\n  //   return items;\r\n  // };\r\n  const generateAmPmDropdownItems = () => {\r\n    const amPmOptions = [\"AM\", \"PM\"];\r\n    const items = [];\r\n\r\n    amPmOptions.forEach((amPm) => {\r\n      items.push({ value: amPm, label: amPm });\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n  // const generateAmPmDropdownItems = () => {\r\n  //   const amPmOptions = ['AM', 'PM'];\r\n  //   return amPmOptions.map((amPm) => (\r\n  //     <DropdownItem key={amPm} onClick={() => handleDropdownItemClick4(amPm)}>\r\n  //       {amPm}\r\n  //     </DropdownItem>\r\n  //   ));\r\n  // };\r\n\r\n  const generateAmPmDropdownItems1 = () => {\r\n    const amPmOptions = [\"AM\", \"PM\"];\r\n    const items = [];\r\n\r\n    amPmOptions.forEach((amPm) => {\r\n      items.push({ value: amPm, label: amPm });\r\n    });\r\n\r\n    return items;\r\n  };\r\n  // const generateAmPmDropdownItems1 = () => {\r\n  //   const amPmOptions = ['AM', 'PM'];\r\n  //   return amPmOptions.map((amPm) => (\r\n  //     <DropdownItem key={amPm} onClick={() => handleDropdownItemClick5(amPm)}>\r\n  //       {amPm}\r\n  //     </DropdownItem>\r\n  //   ));\r\n  // };\r\n\r\n  const topNavClick = (stepItem, push) => {\r\n    push(stepItem.id);\r\n  };\r\n\r\n  // const onClickNext = (goToNext, steps, step) => {\r\n  //   step.isDone = true;\r\n  //   if (steps.length - 1 <= steps.indexOf(step)) {\r\n  //     return;\r\n  //   }\r\n  //   goToNext();\r\n  // };\r\n  // const onClickNext = (goToNext, steps, step) => {\r\n  //   step.isDone = true;\r\n  //   if (steps.length - 1 <= steps.indexOf(step)) {\r\n  //     redirectToSessionLists();\r\n  //   } else {\r\n  //     goToNext();\r\n  //   }\r\n  // };\r\n  const onClickNext = (goToNext, steps, step) => {\r\n    step.isDone = true;\r\n\r\n    // new code start\r\n\r\n    // If the current step is Step 1, handle availability check\r\n    if (step.id === \"step1\") {\r\n      handleCheckAvailability().then((response) => {\r\n        // Log the response to ensure it's correct\r\n        console.log(\"Response from availability check:\", response);\r\n\r\n        if (response && response.data && response.data.status) {\r\n          // If the status is true, allow to go to the next step\r\n          handleLicenseNextButtonClick();\r\n          goToNext();\r\n        } else {\r\n          // If the status is false, show an error and do not proceed\r\n          // alert(\"There is no such slot\");\r\n          ToasterComponent(\"error\", [{ message: \"Slot is unavailable\" }]);\r\n        }\r\n      });\r\n      return; // Prevent further execution until the availability check is done\r\n    }\r\n\r\n    // new code ends\r\n    if (steps.length - 1 <= steps.indexOf(step)) {\r\n      if (step.id === \"step3\") {\r\n        redirectToSessionLists(); // Redirect to the session list\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (step.id === \"step2\") {\r\n      handleNextButtonClick();\r\n      // Call the function to post data when moving to Step 2\r\n    }\r\n\r\n    // handleNextButtonClick(); // Call the function to post data when moving to the next step\r\n    handleLicenseNextButtonClick();\r\n    goToNext();\r\n  };\r\n\r\n  const onClickPrev = (goToPrev, steps, step) => {\r\n    if (steps.indexOf(step) <= 0) {\r\n      return;\r\n    }\r\n    goToPrev();\r\n  };\r\n\r\n  const selectData = generateDropdownItemsSelect();\r\n  const minutesSelectData = generateMinuteDropdownItems();\r\n  const toHoursSelectData = generateDropdownItems1();\r\n  const toMinutesSelectData = generateMinuteDropdownItems1();\r\n  const fromAmPmSelectData = generateAmPmDropdownItems();\r\n  const toAmPmSelectData = generateAmPmDropdownItems1();\r\n\r\n  return (\r\n    <Row>\r\n      <Colxx>\r\n        <Card className=\"mt-2    \">\r\n          <CardBody className=\"wizard wizard-default  \">\r\n            <Wizard>\r\n              <TopNavigation\r\n                className=\"justify-content-center\"\r\n                disableNav\r\n                topNavClick={topNavClick}\r\n              />\r\n              <Steps>\r\n                <Step\r\n                  id=\"step1\"\r\n                  // name={messages['wizard.step-name-1']}\r\n                  name=\"step 1\"\r\n                  desc=\"Schedule appointement\"\r\n                >\r\n                  <Form className=\" \">\r\n                    <FormGroup className=\"\">\r\n                      <div className=\"\">\r\n                        <Label className=\"text-one font-weight-bold\">\r\n                          Appointment date\r\n                        </Label>\r\n                        <InputGroup className=\"mb-3 \">\r\n                          <DateRangePicker\r\n                            selectedDate={selectedDate}\r\n                            setSelectedDate={setSelectedDate}\r\n                          />\r\n                        </InputGroup>\r\n                      </div>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                      <div className=\"\">\r\n                        <div>\r\n                          <Label className=\"text-one font-weight-bold\">\r\n                            From\r\n                          </Label>\r\n                          <Row>\r\n                            <Col md={4} sm={12} lg={4}>\r\n                              <div className=\"form-group has-float-label\">\r\n                                <Label>Hours</Label>\r\n\r\n                                <Select\r\n                                  components={{ Input: CustomSelectInput }}\r\n                                  className=\"react-select\"\r\n                                  classNamePrefix=\"react-select\"\r\n                                  name=\"form-field-name\"\r\n                                  value={generateDropdownItemsSelect().find(\r\n                                    (option) =>\r\n                                      option.value === selectedHourDropdown\r\n                                  )}\r\n                                  onChange={handleDropdownItemClick}\r\n                                  options={[\r\n                                    {\r\n                                      value: \"\",\r\n                                      label: \"Hours\",\r\n                                      isDisabled: true,\r\n                                    },\r\n                                    ...selectData,\r\n                                  ]}\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            <Col md={4} sm={12} lg={4}>\r\n                              <div className=\"form-group has-float-label\">\r\n                                <Label>Minutes</Label>\r\n\r\n                                <Select\r\n                                  components={{ Input: CustomSelectInput }}\r\n                                  className=\"react-select\"\r\n                                  classNamePrefix=\"react-select\"\r\n                                  name=\"form-field-name\"\r\n                                  value={generateMinuteDropdownItems().find(\r\n                                    (option) => option.value === minutedrop\r\n                                  )}\r\n                                  onChange={handleDropdownItemClick1}\r\n                                  options={[\r\n                                    {\r\n                                      value: \"\",\r\n                                      label: \"Minutes\",\r\n                                      isDisabled: true,\r\n                                    },\r\n                                    ...minutesSelectData,\r\n                                  ]}\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            <Col md={4} sm={12} lg={4}>\r\n                              <div className=\"form-group has-float-label\">\r\n                                <Label>AM/PM</Label>\r\n\r\n                                <Select\r\n                                  components={{ Input: CustomSelectInput }}\r\n                                  className=\"react-select\"\r\n                                  classNamePrefix=\"react-select\"\r\n                                  name=\"form-field-name\"\r\n                                  // value={selectedfromampm}\r\n                                  value={fromAmPmSelectData.find(\r\n                                    (option) =>\r\n                                      option.value === selectedfromampm\r\n                                  )}\r\n                                  onChange={handleDropdownItemClick4}\r\n                                  options={[\r\n                                    {\r\n                                      value: \"\",\r\n                                      label: \"AM/PM\",\r\n                                      isDisabled: true,\r\n                                    },\r\n                                    ...fromAmPmSelectData,\r\n                                  ]}\r\n                                />\r\n                              </div>\r\n                              {/* <Dropdown direction=\"down\"\r\n          isOpen={dropdownBasicOpen4}\r\n          toggle={() => setDropdownBasicOpen4(!dropdownBasicOpen4)}\r\n          className=\"mb-5 \"\r\n          \r\n        \r\n        >\r\n        <DropdownToggle caret color=\"primary\" outline className='ml-3'>\r\n        {selectedfromampm !==null ? selectedfromampm : 'AM /PM' }\r\n        <DropdownMenu className=''>\r\n          { generateAmPmDropdownItems ()}\r\n          </DropdownMenu>\r\n        </DropdownToggle>\r\n              \r\n          </Dropdown> */}\r\n                            </Col>\r\n                          </Row>\r\n                          <div className=\"\">\r\n                            {/* <Dropdown direction=\"down\"\r\n        isOpen={dropdownBasicOpen}\r\n        toggle={() => setDropdownBasicOpen(!dropdownBasicOpen)}\r\n        className=\"mb-5 \"\r\n        \r\n      \r\n      >\r\n \r\n\r\n\r\n\r\n  <DropdownToggle caret color=\"primary\" outline className=''>\r\n    \r\n    \r\n    {selectedHourDropdown !== null ? selectedHourDropdown : 'Hours'} \r\n   \r\n  </DropdownToggle>\r\n  <DropdownMenu className=''>\r\n  {generateDropdownItems()}\r\n  </DropdownMenu>\r\n</Dropdown> */}\r\n\r\n                            {/* <Input\r\n        type=\"select\"\r\n        value={selectedHourDropdown}\r\n        onChange={handleSelectChange}\r\n        style={{width:\"80px\",height:\"40px\"}}\r\n        \r\n      >\r\n        <option disabled value=\"\">\r\n          Hours\r\n        </option>\r\n        {generateDropdownItemsSelect()}\r\n      </Input> */}\r\n\r\n                            {/* <Dropdown direction='down'\r\n            isOpen={dropdownBasicOpen1}\r\n            toggle={() => setDropdownBasicOpen1(!dropdownBasicOpen1)}\r\n            className=\"mb-5 ml-3\"\r\n           \r\n          >\r\n            <DropdownToggle caret color=\"primary\" outline>\r\n           \r\n              {minutedrop !== null ? minutedrop : 'Minutes'} \r\n   \r\n            </DropdownToggle>\r\n            <DropdownMenu >\r\n             {generateMinuteDropdownItems()}\r\n            </DropdownMenu>\r\n          </Dropdown> */}\r\n\r\n                            {/* form minutes select start */}\r\n\r\n                            {/* form minutes select end */}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"\">\r\n                          <Label className=\"text-one font-weight-bold\">\r\n                            To\r\n                          </Label>\r\n                          <div className=\"\">\r\n                            <Row>\r\n                              <Col md={4} lg={4} sm={12}>\r\n                                {/* <Dropdown direction=\"down\"\r\n        isOpen={dropdownBasicOpen2}\r\n        toggle={() => setDropdownBasicOpen2(!dropdownBasicOpen2)}\r\n        className=\"mb-5\"\r\n        \r\n      \r\n      >\r\n\r\n        <DropdownToggle caret color=\"primary\" outline className='' >\r\n          \r\n          \r\n          {selectedHourDropdown1 !== null ? selectedHourDropdown1 : 'Hours'} \r\n        </DropdownToggle>\r\n        <DropdownMenu className=''>\r\n        {generateDropdownItems1()}\r\n        </DropdownMenu>\r\n      </Dropdown> */}\r\n                                <div className=\"form-group has-float-label\">\r\n                                  <Label>Hours</Label>\r\n\r\n                                  <Select\r\n                                    components={{ Input: CustomSelectInput }}\r\n                                    className=\"react-select\"\r\n                                    classNamePrefix=\"react-select\"\r\n                                    name=\"form-field-name\"\r\n                                    value={generateDropdownItems1().find(\r\n                                      (option) =>\r\n                                        option.value === selectedHourDropdown1\r\n                                    )}\r\n                                    onChange={handleDropdownItemClick2}\r\n                                    options={[\r\n                                      {\r\n                                        value: \"\",\r\n                                        label: \"Hours\",\r\n                                        isDisabled: true,\r\n                                      },\r\n                                      ...toHoursSelectData,\r\n                                    ]}\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n                              <Col md={4} lg={4} sm={12}>\r\n                                <div className=\"form-group has-float-label\">\r\n                                  <Label>Minutes</Label>\r\n\r\n                                  <Select\r\n                                    components={{ Input: CustomSelectInput }}\r\n                                    className=\"react-select\"\r\n                                    classNamePrefix=\"react-select\"\r\n                                    name=\"form-field-name\"\r\n                                    value={generateMinuteDropdownItems1().find(\r\n                                      (option) =>\r\n                                        option.value === selectedHourDropdown1\r\n                                    )}\r\n                                    onChange={handleDropdownItemClick3}\r\n                                    options={[\r\n                                      {\r\n                                        value: \"\",\r\n                                        label: \"Minutes\",\r\n                                        isDisabled: true,\r\n                                      },\r\n                                      ...toMinutesSelectData,\r\n                                    ]}\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n                              <Col md={4} lg={4} sm={12}>\r\n                                <div>\r\n                                  {/* <Dropdown direction=\"down\"\r\n        isOpen={dropdownBasicOpen5}\r\n        toggle={() => setDropdownBasicOpen5(!dropdownBasicOpen5)}\r\n        className=\"mb-5 \"\r\n        \r\n      \r\n      >\r\n      <DropdownToggle caret color=\"primary\" outline className='ml-3'>\r\n      {selectedfromampm1 !==null ? selectedfromampm1 : 'AM /PM' }\r\n      <DropdownMenu className=''>\r\n        { generateAmPmDropdownItems1 ()}\r\n        </DropdownMenu>\r\n      </DropdownToggle>\r\n            \r\n        </Dropdown> */}\r\n                                  <div className=\"form-group has-float-label\">\r\n                                    <Label>AM/PM</Label>\r\n\r\n                                    <Select\r\n                                      components={{ Input: CustomSelectInput }}\r\n                                      className=\"react-select\"\r\n                                      classNamePrefix=\"react-select\"\r\n                                      name=\"form-field-name\"\r\n                                      // value={selectedfromampm}\r\n                                      value={toAmPmSelectData.find(\r\n                                        (option) =>\r\n                                          option.value === selectedfromampm1\r\n                                      )}\r\n                                      onChange={handleDropdownItemClick5}\r\n                                      options={[\r\n                                        {\r\n                                          value: \"\",\r\n                                          label: \"AM/PM\",\r\n                                          isDisabled: true,\r\n                                        },\r\n                                        ...toAmPmSelectData,\r\n                                      ]}\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                            </Row>\r\n\r\n                            {/* <Dropdown direction='down'\r\n            isOpen={dropdownBasicOpen3}\r\n            toggle={() => setDropdownBasicOpen3(!dropdownBasicOpen3)}\r\n            className=\"mb-5 ml-3\"\r\n           \r\n          >\r\n            <DropdownToggle caret color=\"primary\" outline>\r\n           \r\n              {minutedrop1 !== null ? minutedrop1 : 'Minutes'} \r\n   \r\n            </DropdownToggle>\r\n            <DropdownMenu >\r\n             {generateMinuteDropdownItems1()}\r\n            </DropdownMenu>\r\n          </Dropdown> */}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </FormGroup>\r\n\r\n                    <Form>\r\n                      <FormGroup>\r\n                        <Label className=\"text-one font-weight-bold\">\r\n                          Call type\r\n                        </Label>\r\n                        <div className=\"d-flex \">\r\n                          <CustomInput\r\n                            type=\"radio\"\r\n                            id=\"exCustomRadio\"\r\n                            name=\"customRadio\"\r\n                            label=\"Audio\"\r\n                            value={selectedradiobutton}\r\n                            onChange={() => setSelectedRadioButton(\"Audio\")}\r\n                          />\r\n                          <CustomInput\r\n                            type=\"radio\"\r\n                            id=\"exCustomRadio2\"\r\n                            name=\"customRadio\"\r\n                            label=\"Video\"\r\n                            className=\"ml-3\"\r\n                            value={selectedradiobutton}\r\n                            onChange={() => setSelectedRadioButton(\"Video\")}\r\n                          />\r\n                        </div>\r\n                      </FormGroup>\r\n                    </Form>\r\n                  </Form>\r\n                </Step>\r\n                <Step\r\n                  id=\"step2\"\r\n                  // name={messages['wizard.step-name-2']}\r\n                  name=\"step 2\"\r\n                  desc=\"Payment\"\r\n                >\r\n                  <Form className=\"\">\r\n                    {license && (\r\n                      <>\r\n                        {license.balance ? (\r\n                          <>\r\n                            <FormGroup className=\"w-100\">\r\n                              <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <Label className=\"text-one\">\r\n                                  Session Price\r\n                                </Label>\r\n                                <Colxx lg={5} className=\"\">\r\n                                  <h3 className=\"\">\r\n                                    <span className=\"font-weight-bold color-theme-1\">\r\n                                      ₹{license.sessionPrice}\r\n                                    </span>\r\n                                  </h3>\r\n                                </Colxx>\r\n                              </div>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"w-100\">\r\n                              <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <Label className=\"text-one\">\r\n                                  Your Available Balance\r\n                                </Label>\r\n                                <Colxx lg={5}>\r\n                                  <h3 className=\"\">\r\n                                    <span className=\"font-weight-bold color-theme-1\">\r\n                                      ₹{license.availableBalance}\r\n                                    </span>\r\n                                  </h3>\r\n                                </Colxx>\r\n                              </div>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"w-100\">\r\n                              <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <Label className=\"text-one\">\r\n                                  Balance after deduction\r\n                                </Label>\r\n                                <Colxx lg={5}>\r\n                                  <h3 className=\"\">\r\n                                    <span className=\"font-weight-bold color-theme-1\">\r\n                                      ₹{license.balanceAfterDeducation}\r\n                                    </span>\r\n                                  </h3>\r\n                                </Colxx>\r\n                              </div>\r\n                            </FormGroup>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <FormGroup className=\"w-100\">\r\n                              <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <Label className=\"text-one\">\r\n                                  Session Price\r\n                                </Label>\r\n                                <Colxx lg={5}>\r\n                                  <h3>\r\n                                    <span className=\"font-weight-bold color-theme-1\">\r\n                                      ₹{license.sessionPrice}\r\n                                    </span>\r\n                                  </h3>\r\n                                </Colxx>\r\n                              </div>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"w-100\">\r\n                              <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <Label className=\"text-one\">\r\n                                  Your Available Balance\r\n                                </Label>\r\n                                <Colxx lg={5}>\r\n                                  <h3>\r\n                                    <span className=\"font-weight-bold color-theme-1\">\r\n                                      ₹{license.availableBalance}\r\n                                    </span>\r\n                                  </h3>\r\n                                </Colxx>\r\n                              </div>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"w-100\">\r\n                              <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <Label className=\"text-one\">\r\n                                  Do you want to recharge ?\r\n                                </Label>\r\n                              </div>\r\n                              <Colxx lg={12}>\r\n                                <div className=\"d-flex\">\r\n                                  <Button\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    onClick={() =>\r\n                                      history.push(\"/app/mywallet\")\r\n                                    }\r\n                                  >\r\n                                    Yes\r\n                                  </Button>\r\n                                  <Button\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    className=\"ml-3\"\r\n                                    onClick={() =>\r\n                                      history.push(\"/app/mentor/list\")\r\n                                    }\r\n                                  >\r\n                                    No\r\n                                  </Button>\r\n                                </div>\r\n                              </Colxx>\r\n                            </FormGroup>\r\n                          </>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </Form>\r\n                </Step>\r\n                <Step\r\n                  id=\"step3\"\r\n                  // name={messages['wizard.step-name-3']}\r\n                  name=\"step 3\"\r\n                  desc=\"Finish\"\r\n                >\r\n                  <div className=\"text-center \">\r\n                    <span className=\"text-xlarge text-primary\">\r\n                      <i className=\"simple-icon-check\" />\r\n                    </span>\r\n                    <h3 className=\" my-3 py-3 \">\r\n                      Your appointment is successfull\r\n                    </h3>\r\n                    <h2 className=\" my-3\">Thank you</h2>\r\n\r\n                    <div className=\"text-center my-2\">\r\n                      {/* <Button color='primary' className=\"btn btn-primary \" onClick={handleCloseButtonClick}> */}\r\n                      <Button\r\n                        color=\"primary\"\r\n                        className=\"btn btn-primary \"\r\n                        onClick={redirectToSessionLists}\r\n                      >\r\n                        Close\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Step>\r\n              </Steps>\r\n\r\n              <Form className=\"mt-4\">\r\n                <FormGroup>\r\n                  <BottomNavigation\r\n                    onClickNext={onClickNext}\r\n                    onClickPrev={onClickPrev}\r\n                    className=\"justify-content-center\"\r\n                    prevLabel=\"Back\"\r\n                    nextLabel=\"Next\"\r\n                    // licenseBalance={license.length > 0 ? license[0].balance : null}\r\n                    licenseBalance={license && license.balance}\r\n                  />\r\n                </FormGroup>\r\n              </Form>\r\n            </Wizard>\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\nexport default injectIntl(PopupWizard);\r\n","import { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Modal,\r\n  ModalBody,\r\n  Row,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport PopupWizard from \"./PopupWizard\";\r\n\r\nconst Month = () => {\r\n  // const url=`${baseUrl}/mentorAvailablity`\r\n\r\n  // if you change the url to backend uncomment the below line\r\n  const url = `${baseUrl}/api/calendar/appointment/user`;\r\n\r\n  const [mentoravailable, setMentorAvailable] = useState([]);\r\n  const [currentWeekStart, setCurrentWeekStart] = useState(new Date());\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const mentorName = searchParams.get(\"mentorName\");\r\n  const mentorId = searchParams.get(\"mentorId\");\r\n  const role = searchParams.get(\"role\");\r\n\r\n  console.log(\"role from search params:\", role);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  // const [hasAvailableSlots,setHasAvailableSlots] = useState(true);\r\n\r\n  // const [selectedStartTime, setSelectedStartTime] = useState(null);\r\n  // const [selectedEndTime, setSelectedEndTime] = useState(null);\r\n\r\n  // Function to get the start date of the current week\r\n  // const getStartOfWeek = () => {\r\n  //   const currentDate = new Date();\r\n  //   const day = currentDate.getDay();\r\n  //   const diff = currentDate.getDate() - day + (day === 0 ? -6 : 1); // Adjust when day is Sunday\r\n  //   return new Date(currentDate.setDate(diff));\r\n  // };\r\n  const getStartOfWeek = () => {\r\n    const currentDate = new Date();\r\n    const day = currentDate.getDay();\r\n    const diff = currentDate.getDate() - day + (day === 0 ? -6 : 1); // Adjust when day is Sunday\r\n    const startOfWeek = new Date(currentDate.setDate(diff));\r\n\r\n    return startOfWeek;\r\n  };\r\n\r\n  // Function to get the end date of the current week\r\n  // const getEndOfWeek = (startOfWeek) => {\r\n  //   const endOfWeek = new Date(startOfWeek);\r\n  //   endOfWeek.setDate(endOfWeek.getDate() + 6);\r\n  //   return endOfWeek;\r\n  // };\r\n\r\n  const fetchMentorAvailability = async (fromTime, toTime) => {\r\n    try {\r\n      // const response = await axios.get(`${baseUrl}/mentorAvailablity?mentorId=${mentorId}&fromTime=${fromTime}&toTime=${toTime}`);\r\n      const response = await axios.get(\r\n        `${url}?mentorId=${mentorId}&fromTime=${fromTime}&toTime=${toTime}`\r\n      );\r\n      const availability = response.data;\r\n      setMentorAvailable(availability);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const startOfWeek = getStartOfWeek();\r\n  //   const endOfWeek = getEndOfWeek(startOfWeek);\r\n  //   const newUrl = `${window.location.origin}${window.location.pathname}?mentorId=${mentorId}&mentorName=${mentorName}&fromTime=${startOfWeek.getTime()}&toTime=${endOfWeek.getTime()}`;\r\n  //   window.history.replaceState(null, '', newUrl);\r\n  //   if (mentorId) {\r\n  //     fetchMentorAvailability(startOfWeek.getTime(), endOfWeek.getTime());\r\n  //   }\r\n  // }, []);\r\n  // useEffect(() => {\r\n  //   const startOfWeekTimestamp = currentWeekStart.getTime(); // Start of the current week\r\n  //   const endOfWeekTimestamp = new Date(currentWeekStart); // End of the current week\r\n  //   endOfWeekTimestamp.setDate(endOfWeekTimestamp.getDate() + 6);\r\n\r\n  //   const newUrl = `${window.location.origin}${window.location.pathname}?mentorId=${mentorId}&mentorName=${mentorName}&fromTime=${startOfWeekTimestamp}&toTime=${endOfWeekTimestamp.getTime()}`;\r\n  //   window.history.replaceState(null, '', newUrl);\r\n\r\n  //   if (mentorId) {\r\n  //     fetchMentorAvailability(startOfWeekTimestamp, endOfWeekTimestamp.getTime());\r\n  //   }\r\n  // }, []);\r\n  // useEffect(() => {\r\n  //   // Set the time of currentWeekStart to 12:00 PM (noon)\r\n  //   const startOfWeekTimestamp = new Date(currentWeekStart);\r\n  //   startOfWeekTimestamp.setHours(12, 0, 0, 0);\r\n\r\n  //   // Set the time of endOfWeekTimestamp to 11:59 PM\r\n  //   const endOfWeekTimestamp = new Date(currentWeekStart);\r\n  //   endOfWeekTimestamp.setDate(endOfWeekTimestamp.getDate() + 6); // Set to end of week\r\n  //   endOfWeekTimestamp.setHours(11, 59, 59, 999);\r\n\r\n  //   const newUrl = `${window.location.origin}${window.location.pathname}?mentorId=${mentorId}&mentorName=${mentorName}&fromTime=${startOfWeekTimestamp.getTime()}&toTime=${endOfWeekTimestamp.getTime()}`;\r\n  //   window.history.replaceState(null, '', newUrl);\r\n\r\n  //   if (mentorId) {\r\n  //     fetchMentorAvailability(startOfWeekTimestamp.getTime(), endOfWeekTimestamp.getTime());\r\n  //   }\r\n  // }, [currentWeekStart, mentorId]);\r\n  // new code\r\n  useEffect(() => {\r\n    // Set the time of currentWeekStart to 12:00 AM (midnight)\r\n    const startOfWeekTimestamp = new Date(currentWeekStart);\r\n    startOfWeekTimestamp.setHours(0, 0, 0, 0); // Set hours, minutes, seconds, and milliseconds to zero\r\n\r\n    // Set the time of endOfWeekTimestamp to 11:59 PM\r\n    const endOfWeekTimestamp = new Date(currentWeekStart);\r\n    endOfWeekTimestamp.setDate(endOfWeekTimestamp.getDate() + 6); // Set to end of week\r\n    endOfWeekTimestamp.setHours(23, 59, 59, 999); // Set hours to 11, minutes to 59, seconds to 59, and milliseconds to 999\r\n\r\n    const newUrl = `${window.location.origin}${\r\n      window.location.pathname\r\n    }?mentorId=${mentorId}&mentorName=${mentorName}&fromTime=${startOfWeekTimestamp.getTime()}&toTime=${endOfWeekTimestamp.getTime()}&role=${role}`;\r\n    window.history.replaceState(null, \"\", newUrl);\r\n\r\n    if (mentorId) {\r\n      fetchMentorAvailability(\r\n        startOfWeekTimestamp.getTime(),\r\n        endOfWeekTimestamp.getTime()\r\n      );\r\n    }\r\n  }, [currentWeekStart, mentorId]);\r\n\r\n  // useEffect(() => {\r\n  //   const startOfWeek = getStartOfWeek();\r\n  //   console.log('Start of the Current Week checking:', startOfWeek);\r\n  //   setCurrentWeekStart(startOfWeek);\r\n  // }, []);\r\n  useEffect(() => {\r\n    const startOfWeek = getStartOfWeek();\r\n\r\n    setCurrentWeekStart(startOfWeek);\r\n  }, []);\r\n\r\n  const [modalSmall, setModalSmall] = useState(false);\r\n\r\n  // weeklist functions start\r\n  const goToPreviousWeek = () => {\r\n    const newStartDate = new Date(currentWeekStart);\r\n    newStartDate.setDate(newStartDate.getDate() - 7);\r\n    setCurrentWeekStart(newStartDate);\r\n  };\r\n\r\n  // const goToNextWeek = () => {\r\n  //   const newStartDate = new Date(currentWeekStart);\r\n  //   newStartDate.setDate(newStartDate.getDate() + 7);\r\n  //   setCurrentWeekStart(newStartDate);\r\n\r\n  // };\r\n\r\n  // const goToNextWeek = () => {\r\n  //   const newStartDate = new Date(currentWeekStart);\r\n  //   newStartDate.setDate(newStartDate.getDate() + 7);\r\n  //   setCurrentWeekStart(newStartDate);\r\n\r\n  //   // Calculate the start of the next week\r\n  //   const nextWeekStart = new Date(newStartDate);\r\n  //   nextWeekStart.setDate(nextWeekStart.getDate() - nextWeekStart.getDay() + 1);\r\n\r\n  //   // Calculate the end of the next week\r\n  //   const nextWeekEnd = new Date(nextWeekStart);\r\n  //   nextWeekEnd.setDate(nextWeekEnd.getDate() + 6);\r\n\r\n  //   const fromTime = nextWeekStart.getTime(); // Timestamp of the start of the next week\r\n  //   const toTime = nextWeekEnd.getTime(); // Timestamp of the end of the next week\r\n\r\n  //   fetchMentorAvailability(fromTime, toTime);\r\n  // };\r\n  // Modify the goToNextWeek function to update the URL and fetch availability for the next week\r\n  const goToNextWeek = () => {\r\n    const newStartDate = new Date(currentWeekStart);\r\n    newStartDate.setDate(newStartDate.getDate() + 7);\r\n    setCurrentWeekStart(newStartDate);\r\n\r\n    // Calculate the start of the next week\r\n    const nextWeekStart = new Date(newStartDate);\r\n    nextWeekStart.setDate(nextWeekStart.getDate() - nextWeekStart.getDay() + 1);\r\n\r\n    // Calculate the end of the next week\r\n    const nextWeekEnd = new Date(nextWeekStart);\r\n    nextWeekEnd.setDate(nextWeekEnd.getDate() + 6);\r\n\r\n    const fromTime = nextWeekStart.getTime(); // Timestamp of the start of the next week\r\n    const toTime = nextWeekEnd.getTime(); // Timestamp of the end of the next week\r\n\r\n    fetchMentorAvailability(fromTime, toTime);\r\n  };\r\n\r\n  // const formatDate = (date) => {\r\n  //   return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n  // };\r\n  const formatDate = (date) => {\r\n    const monthNames = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    const month = monthNames[date.getMonth()];\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    return `${day}-${month}-${date.getFullYear()}`;\r\n  };\r\n  const getWeekDates = () => {\r\n    const weekDates = [];\r\n    const startDate = new Date(currentWeekStart);\r\n    for (let i = 0; i < 7; i += 1) {\r\n      const currentDate = new Date(startDate);\r\n      currentDate.setDate(startDate.getDate() + i);\r\n      weekDates.push(currentDate);\r\n    }\r\n    return weekDates;\r\n  };\r\n  // const isPreviousWeekDisabled = () => {\r\n  //   // Disable the button if you're already in the current week\r\n  //   const today = new Date();\r\n  //   const currentWeekStartDate = new Date(today);\r\n  //  currentWeekStartDate.setDate(today.getDate() - today.getDay() + 1); // Adjust to the start of the week\r\n\r\n  //   console.log('Current Week Start Date:', currentWeekStartDate);\r\n  //   console.log('Stored Current Week Start Date:', currentWeekStart);\r\n\r\n  //   // const disabled = (\r\n  //   //   currentWeekStartDate.getFullYear() === currentWeekStart.getFullYear() &&\r\n  //   //   currentWeekStartDate.getMonth() === currentWeekStart.getMonth() &&\r\n  //   //   currentWeekStartDate.getDate() === currentWeekStart.getDate()\r\n  //   // );\r\n\r\n  //   const disabled = currentWeekStartDate.getTime() === currentWeekStart.getTime();\r\n  //   console.log('Is Previous Week Disabled:', disabled);\r\n\r\n  //   return disabled;\r\n  // };\r\n  const isPreviousWeekDisabled = () => {\r\n    // Disable the button if you're already in the current week\r\n    const today = new Date();\r\n    const currentWeekStartDate = new Date(today);\r\n    const day = today.getDay(); // Get the day of the week (0 = Sunday, 1 = Monday, ..., 6 = Saturday)\r\n\r\n    if (day === 0) {\r\n      // If today is Sunday, subtract 6 days to get the start of the current week\r\n      currentWeekStartDate.setDate(today.getDate() - 6);\r\n    } else {\r\n      // Otherwise, subtract the number of days from the current day to get the start of the current week\r\n      currentWeekStartDate.setDate(today.getDate() - (day - 1));\r\n    }\r\n\r\n    // Set hours, minutes, seconds, and milliseconds to zero\r\n    currentWeekStartDate.setHours(0, 0, 0, 0);\r\n\r\n    const storedWeekStart = new Date(currentWeekStart);\r\n    storedWeekStart.setHours(0, 0, 0, 0); // Set hours, minutes, seconds, and milliseconds to zero\r\n\r\n    const disabled =\r\n      currentWeekStartDate.getTime() === storedWeekStart.getTime();\r\n\r\n    return disabled;\r\n  };\r\n\r\n  const handleTimeSlotClick = (date) => {\r\n    setSelectedDate(date);\r\n\r\n    setModalSmall(true); // Optionally open the modal when a time slot is clicked\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Colxx xxs=\"12\" md=\"9\" lg=\"7\" className=\"mx-auto\">\r\n          <h1 className=\"py-4 text-large\"> {mentorName} availability</h1>\r\n          <div className=\"font-weight-semibold d-flex justify-content-center align-items-center\">\r\n            {/* <Button className='font-weight-semibold text-one ' color=\"primary\" onClick={goToPreviousWeek}   disabled={isPreviousWeekDisabled()}><i className='simple-icon-arrow-left'/></Button> */}\r\n            <span\r\n              className=\"font-weight-semibold text-xlarge mr-2 cursor-pointer\"\r\n              style={{\r\n                cursor: isPreviousWeekDisabled() ? \"not-allowed\" : \"pointer\",\r\n                opacity: isPreviousWeekDisabled() ? 0.5 : 1, // Lower opacity for disabled state\r\n              }}\r\n              onClick={!isPreviousWeekDisabled() ? goToPreviousWeek : undefined}\r\n              onKeyDown={(e) => {\r\n                if (\r\n                  !isPreviousWeekDisabled() &&\r\n                  (e.key === \"Enter\" || e.key === \" \")\r\n                ) {\r\n                  goToPreviousWeek();\r\n                }\r\n              }}\r\n              role=\"button\"\r\n              tabIndex={!isPreviousWeekDisabled() ? 0 : -1}\r\n              aria-disabled={isPreviousWeekDisabled()}\r\n            >\r\n              {/* <i className='simple-icon-arrow-left' /> */}\r\n              <i\r\n                className={`simple-icon-arrow-left ${\r\n                  isPreviousWeekDisabled() ? \"disabled\" : \"\"\r\n                }`}\r\n              />\r\n            </span>\r\n\r\n            <div>\r\n              <h4 className=\" font-weight-semibold\">\r\n                {formatDate(currentWeekStart)} -{\" \"}\r\n                {formatDate(\r\n                  new Date(currentWeekStart.getTime() + 6 * 24 * 60 * 60 * 1000)\r\n                )}\r\n              </h4>\r\n            </div>\r\n            <span\r\n              className=\"ml-2 font-weight-semibold text-xlarge\"\r\n              role=\"button\"\r\n              tabIndex={0}\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={goToNextWeek}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\" || e.key === \" \") {\r\n                  goToNextWeek();\r\n                }\r\n              }}\r\n            >\r\n              <i className=\"simple-icon-arrow-right\" />\r\n            </span>\r\n            {/* {hasAvailableSlots && (\r\n  <span\r\n    className='ml-2 font-weight-semibold text-xlarge'\r\n    role=\"button\"\r\n    tabIndex={0}\r\n    style={{ cursor: \"pointer\" }}\r\n    onClick={goToNextWeek}\r\n    onKeyDown={(e) => {\r\n      if (e.key === 'Enter' || e.key === ' ') {\r\n        goToNextWeek();\r\n      }\r\n    }}\r\n  >\r\n    <i className='simple-icon-arrow-right' />\r\n  </span>\r\n)}\r\n\r\n{!hasAvailableSlots && (\r\n  <span\r\n    className='ml-2 font-weight-semibold text-xlarge disabled'\r\n    style={{ cursor: \"not-allowed\", color: \"gray\" }}\r\n  >\r\n    <i className='simple-icon-arrow-right' />\r\n  </span>\r\n)} */}\r\n            {/* <Button className='ml-5 font-weight-semibold text-one' color=\"primary\" onClick={goToNextWeek} ><i className='simple-icon-arrow-right '/></Button> */}\r\n          </div>\r\n          <Card className=\"mb-4 mt-4\">\r\n            <CardBody>\r\n              <Table bordered>\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-one\">Date</th>\r\n                    <th className=\"text-center text-one\">Availablilty time</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {getWeekDates().map((date) => (\r\n                    <tr key={date.getTime()}>\r\n                      {/* <td>{getMonthName(date.getMonth())} {formatDate(date)}</td> */}\r\n                      <td> {formatDate(date)}</td>\r\n                      <td>\r\n                        {/* {mentoravailable.map((avail) => {\r\n    const availDate = new Date(avail.fromTimeStamp);\r\n    if (availDate.toDateString() === date.toDateString()) {\r\n        // Mentor is available on this date, display the available time\r\n        const FromDate = new Date(avail.fromTimeStamp);\r\n        const ToDate = new Date(avail.toTimeStamp);\r\n        \r\n        // Get hours, minutes, and AM/PM indicator\r\n        const fromHours = FromDate.getHours() % 12 || 12; // Convert 0 to 12 for 12-hour format\r\n        const fromMinutes = String(FromDate.getMinutes()).padStart(2, '0');\r\n        const fromPeriod = FromDate.getHours() < 12 ? 'AM' : 'PM';\r\n        \r\n        const toHours = ToDate.getHours() % 12 || 12; // Convert 0 to 12 for 12-hour format\r\n        const toMinutes = String(ToDate.getMinutes()).padStart(2, '0');\r\n        const toPeriod = ToDate.getHours() < 12 ? 'AM' : 'PM';\r\n        \r\n        // Construct the time string with AM/PM indicator\r\n        const fromTime = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n        const toTime = `${toHours}:${toMinutes} ${toPeriod}`;\r\n\r\n         // Check if the availability time is in the past\r\n         const isPastTime = ToDate < new Date();\r\n\r\n        return (\r\n        <Button  key={date.getTime()}  color='primary' block\r\n          className={` text-center ${isPastTime ? 'cursor-not-allowed' : 'cursor-pointer'} my-2`}\r\n          disabled={isPastTime}\r\n          onClick={() => handleTimeSlotClick(date)}\r\n        >\r\n         {fromTime} to {toTime}\r\n        </Button>\r\n        );\r\n    } \r\n    \r\n       return null;\r\n})}  */}\r\n\r\n                        {mentoravailable\r\n                          .filter(\r\n                            (avail) =>\r\n                              new Date(avail.fromTimeStamp).toDateString() ===\r\n                              date.toDateString()\r\n                          )\r\n                          .map((avail) => {\r\n                            const FromDate = new Date(avail.fromTimeStamp);\r\n                            const ToDate = new Date(avail.toTimeStamp);\r\n\r\n                            const fromHours = FromDate.getHours() % 12 || 12;\r\n                            const fromMinutes = String(\r\n                              FromDate.getMinutes()\r\n                            ).padStart(2, \"0\");\r\n                            const fromPeriod =\r\n                              FromDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                            const toHours = ToDate.getHours() % 12 || 12;\r\n                            const toMinutes = String(\r\n                              ToDate.getMinutes()\r\n                            ).padStart(2, \"0\");\r\n                            const toPeriod =\r\n                              ToDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                            const fromTime = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n                            const toTime = `${toHours}:${toMinutes} ${toPeriod}`;\r\n\r\n                            const isPastTime = ToDate < new Date();\r\n\r\n                            return (\r\n                              <Button\r\n                                key={avail.fromTimeStamp} // Ensure a unique key for each button\r\n                                color=\"primary\"\r\n                                block\r\n                                className={`text-center ${\r\n                                  isPastTime\r\n                                    ? \"cursor-not-allowed\"\r\n                                    : \"cursor-pointer\"\r\n                                } my-2`}\r\n                                disabled={isPastTime}\r\n                                onClick={() => handleTimeSlotClick(date)}\r\n                                // onClick={() => handleTimeSlotClick(date, avail.fromTimeStamp, avail.toTimeStamp)}\r\n                              >\r\n                                {fromTime} to {toTime}\r\n                              </Button>\r\n                            );\r\n                          })}\r\n\r\n                        {mentoravailable.every(\r\n                          (avail) =>\r\n                            new Date(avail.fromTimeStamp).toDateString() !==\r\n                            date.toDateString()\r\n                        ) && <div className=\"text-center text-one\">-</div>}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n\r\n                  {/* another */}\r\n\r\n                  {/* return `${FromDate.toLocaleTimeString()} to ${ToDate.toLocaleTimeString()} `; */}\r\n                </tbody>\r\n              </Table>\r\n              {/* <Button onClick={() => setModalSmall(true)} outline color=\"primary\">Book Now</Button> */}\r\n              <div className=\"mb-4\">\r\n                <div>\r\n                  <div className=\"\">\r\n                    <Modal\r\n                      isOpen={modalSmall}\r\n                      toggle={() => setModalSmall(!modalSmall)}\r\n                      className=\"mt-5\"\r\n                    >\r\n                      <ModalBody>\r\n                        <div className=\"text-right my-2\">\r\n                          {/* <Button className='ml-2 my-4 '  outline   color=\"primary\"  onClick={() => setModalSmall(false)}\r\n        ><i className='simple-icon-close text-one'  />\r\n                   </Button> */}\r\n                          <span\r\n                            style={{ cursor: \"pointer\" }}\r\n                            className=\"mt-2\"\r\n                            role=\"button\"\r\n                            tabIndex={0}\r\n                            onClick={() => setModalSmall(false)}\r\n                            onKeyDown={(e) => {\r\n                              if (e.key === \"Enter\" || e.key === \" \") {\r\n                                setModalSmall(false);\r\n                              }\r\n                            }}\r\n                          >\r\n                            <i className=\"simple-icon-close text-large\" />\r\n                          </span>\r\n                        </div>\r\n\r\n                        <PopupWizard\r\n                          selectedDate={selectedDate}\r\n                          setSelectedDate={setSelectedDate}\r\n                          mentorName={mentorName}\r\n                          mentorId={mentorId}\r\n                          role={role}\r\n                        />\r\n                        {/* <Button className='ml-2 mt-2 '  outline  color=\"secondary\"  onClick={() => setModalSmall(false)}\r\n                   >\r\n                     Close\r\n                   </Button> */}\r\n                      </ModalBody>\r\n                    </Modal>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n          {/* <PopupWizard/> */}\r\n        </Colxx>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Month;\r\n","import axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Row,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst LawyerJobNotes = ({ jobId }) => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState(\"\");\r\n  const [newTitle, setNewTitle] = useState(\"\");\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [editNoteId, setEditNoteId] = useState(null);\r\n  const [editedTitle, setEditedTitle] = useState(\"\");\r\n  const [editedText, setEditedText] = useState(\"\");\r\n  const [update, setUpdate] = useState(false);\r\n  const [notsFetched, setNotesFetched] = useState(false);\r\n  const [addNoteLoading, setAddNoteLoading] = useState(false);\r\n  const [saveLoading, setSaveLoading] = useState(false);\r\n  // const [deleteLoading, setDeleteLoading] = useState(false);\r\n  const [deleteLoading, setDeleteLoading] = useState({});\r\n\r\n  const [addModal, setAddModal] = useState(false);\r\n\r\n  const notesUrl = `${baseUrl}/api/lawyer/job/${jobId}/notes`;\r\n  useEffect(() => {\r\n    const fetchNotes = async () => {\r\n      try {\r\n        const response = await axios.get(notesUrl);\r\n        setNotes(response.data);\r\n        setNotesFetched(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching notes:\", error);\r\n        setNotesFetched(false);\r\n      }\r\n    };\r\n\r\n    fetchNotes();\r\n  }, [update]);\r\n\r\n  const toggleAddModal = () => {\r\n    setAddModal(!addModal);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const toggleEditModal = () => {\r\n    setEditModal(!editModal);\r\n  };\r\n\r\n  const handleAddNote = async () => {\r\n    setAddNoteLoading(true);\r\n    if (newTitle.trim() !== \"\" && newNote.trim() !== \"\") {\r\n      const newNoteData = {\r\n        title: newTitle,\r\n        details: newNote,\r\n      };\r\n\r\n      try {\r\n        const response = await axios.post(notesUrl, newNoteData);\r\n        // const updatedNotes = [...notes, response.data];\r\n        // setNotes(updatedNotes);\r\n        setUpdate(!update);\r\n        toggleAddModal();\r\n        setAddNoteLoading(false);\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n      } catch (error) {\r\n        if (error.response) {\r\n          ToasterComponent(\"error\", error.response.data.statuses);\r\n        } else {\r\n          console.error(\"Error adding note:\", error);\r\n        }\r\n        setAddNoteLoading(false);\r\n      }\r\n\r\n      setNewTitle(\"\");\r\n      setNewNote(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteNote = async (id) => {\r\n    setDeleteLoading((prev) => ({ ...prev, [id]: true }));\r\n    try {\r\n      const response = await axios.delete(\r\n        `${baseUrl}/api/lawyer/job/notes/${id}`\r\n      );\r\n      const updatedNotes = notes.filter((note) => note.id !== id);\r\n      setNotes(updatedNotes);\r\n      console.log(response);\r\n      setUpdate(!update);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error deleting note:\", error);\r\n      }\r\n    } finally {\r\n      setDeleteLoading((prev) => ({ ...prev, [id]: false }));\r\n    }\r\n  };\r\n\r\n  const handleEditNote = (id) => {\r\n    const noteToEdit = notes.find((note) => note.id === id);\r\n    setEditNoteId(id);\r\n    setEditedTitle(noteToEdit.title);\r\n    setEditedText(noteToEdit.details);\r\n    toggleEditModal();\r\n  };\r\n\r\n  const saveEditedNote = async () => {\r\n    setSaveLoading(true);\r\n    const updatedNote = {\r\n      title: editedTitle,\r\n      details: editedText,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.put(\r\n        `${baseUrl}/api/lawyer/job/notes/${editNoteId}`,\r\n        updatedNote\r\n      );\r\n      // console.log(response);\r\n\r\n      const updatedNotes = notes.map((note) => {\r\n        if (note.id === editNoteId) {\r\n          return { ...note, title: editedTitle, text: editedText };\r\n        }\r\n        return note;\r\n      });\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      setSaveLoading(false);\r\n      setNotes(updatedNotes);\r\n      setUpdate(!update);\r\n      toggleEditModal();\r\n    } catch (error) {\r\n      setSaveLoading(false);\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error updating note:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // const sortedNotes = [...notes].sort((a, b) => b.createdOn - a.createdOn);\r\n\r\n  const userName = localStorage.getItem(\"userName\");\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center \">\r\n        <Col xs={12} sm={12} md={12} lg={12}>\r\n          <Row className=\"justify-content-between  mb-4\">\r\n            <Col xs=\"auto\">\r\n              {/* <h1 className=\"mb-4\">Lawyer job notes</h1> */}\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={toggleModal}\r\n                size=\"sm\"\r\n                className=\"mt-4 header-icon notificationButton position-relative\"\r\n              >\r\n                Notes {/* <span className=\"count\">{notes.length}</span> */}\r\n                <Badge color=\"light\" className=\" \">\r\n                  {notes.length}\r\n                </Badge>\r\n              </Button>\r\n              {/* <Button color=\"primary\" onClick={toggleModal} size=\"sm\" className=\"header-icon notificationButton position-relative\">\r\n                Notes\r\n                <span className=\"position-absolute top-10 start-100 translate-middle badge rounded-pill bg-secondary\">\r\n                  {notes.length}\r\n                </span>\r\n              </Button> */}\r\n            </Col>\r\n          </Row>\r\n          <Modal\r\n            isOpen={modal}\r\n            toggle={toggleModal}\r\n            // isOpen={modalOpen}\r\n            // toggle={toggleModal}\r\n            wrapClassName=\"modal-right\"\r\n            backdrop=\"static\"\r\n          >\r\n            <ModalHeader toggle={toggleModal}>Notes</ModalHeader>\r\n\r\n            <ModalBody>\r\n              <Button color=\"primary\" block onClick={toggleAddModal}>\r\n                Add Note\r\n              </Button>\r\n              <Modal\r\n                isOpen={addModal}\r\n                toggle={toggleAddModal}\r\n                // isOpen={modalOpen}\r\n                // toggle={toggleModal}\r\n                wrapClassName=\"modal-right\"\r\n                backdrop=\"static\"\r\n              >\r\n                <ModalHeader toggle={toggleAddModal}>\r\n                  Add a new note\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                  <Form\r\n                    onSubmit={(e) => {\r\n                      e.preventDefault();\r\n                      handleAddNote();\r\n                    }}\r\n                  >\r\n                    <FormGroup>\r\n                      <Label for=\"newTitle\">Enter note title:</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"newTitle\"\r\n                        placeholder=\"Enter note title\"\r\n                        value={newTitle}\r\n                        onChange={(e) => setNewTitle(e.target.value)}\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label for=\"newNote\">Enter your note:</Label>\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        id=\"newNote\"\r\n                        placeholder=\"Enter your note\"\r\n                        value={newNote}\r\n                        onChange={(e) => setNewNote(e.target.value)}\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </FormGroup>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      color=\"primary\"\r\n                      block\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        addNoteLoading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <span className=\"spinner d-inline-block\">\r\n                        <span className=\"bounce1\" />\r\n                        <span className=\"bounce2\" />\r\n                        <span className=\"bounce3\" />\r\n                      </span>\r\n                      <span className=\"label\">Add Note</span>\r\n                    </Button>\r\n                  </Form>\r\n                </ModalBody>\r\n              </Modal>\r\n              {!notsFetched ? (\r\n                <div className=\"d-flex justify-content-center mt-4\">\r\n                  <Spinner color=\"primary\" className=\"mb-1\" />\r\n                </div>\r\n              ) : (\r\n                <Row>\r\n                  {notes.length === 0 ? (\r\n                    <Col className=\"mt-4 d-flex justify-content-center align-items-center\">\r\n                      <h4 className=\"text-center\">There are no notes.</h4>\r\n                    </Col>\r\n                  ) : (\r\n                    notes.map((note) => (\r\n                      <>\r\n                        <Col key={note.id} xs={12} sm={12} lg={12}>\r\n                          <Card className=\"mt-3\">\r\n                            <div className=\"p-3 d-flex flex-column\">\r\n                              <Row className=\"\">\r\n                                <Col xs=\"auto\">\r\n                                  <h5>{note.title}</h5>\r\n                                </Col>\r\n                                {userName === note.name && (\r\n                                  <Col xs=\"auto\" className=\"ml-auto\" lg={2}>\r\n                                    <Button\r\n                                      outline\r\n                                      onClick={() => handleEditNote(note.id)}\r\n                                      color=\"primary\"\r\n                                      className=\"icon-button\"\r\n                                    >\r\n                                      <i className=\"simple-icon-pencil\" />\r\n                                    </Button>\r\n                                  </Col>\r\n                                )}\r\n                              </Row>\r\n\r\n                              <p>{note.details}</p>\r\n                              <Row className=\"\">\r\n                                <Col\r\n                                  className=\"d-flex flex-column justify-content-end\"\r\n                                  lg={6}\r\n                                >\r\n                                  <p className=\"text-muted mb-0\">\r\n                                    Created at -{\" \"}\r\n                                    <TimestampConverter\r\n                                      timeStamp={note.createdAt}\r\n                                      format=\"datetime\"\r\n                                    />\r\n                                  </p>\r\n                                  {/* <p className=\"text-muted\">\r\n                              Modified at -{\" \"}\r\n                              <TimestampConverter\r\n                                timeStamp={note.modifiedAt}\r\n                                format=\"datetime\"\r\n                              />\r\n                            </p> */}\r\n                                </Col>\r\n                                <Col className=\"d-flex flex-column justify-content-end\">\r\n                                  <p className=\"text-muted mb-0\">\r\n                                    Created by - {note.name}\r\n                                  </p>\r\n                                </Col>\r\n                                {userName === note.name && (\r\n                                  <Col className=\"\" lg={2}>\r\n                                    <Button\r\n                                      outline\r\n                                      onClick={() => handleDeleteNote(note.id)}\r\n                                      color=\"danger\"\r\n                                      className=\"icon-button\"\r\n                                    >\r\n                                      {!deleteLoading[note.id] ? (\r\n                                        <i className=\"simple-icon-trash\" />\r\n                                      ) : (\r\n                                        <Spinner size=\"sm\" />\r\n                                      )}\r\n                                    </Button>\r\n                                    {/* <Button color=\"primary\" size=\"sm\" onClick={() => handleEditNote(note.id)}>Edit</Button>{' '} */}\r\n                                    {/* <Button color=\"danger\" size=\"sm\" onClick={() => handleDeleteNote(note.id)}>Delete</Button> */}\r\n                                  </Col>\r\n                                )}\r\n                              </Row>\r\n                            </div>\r\n                          </Card>\r\n                        </Col>\r\n                      </>\r\n                    ))\r\n                  )}\r\n                </Row>\r\n              )}\r\n            </ModalBody>\r\n          </Modal>\r\n          <Modal\r\n            isOpen={editModal}\r\n            toggle={toggleEditModal}\r\n            // isOpen={modalOpen}\r\n            // toggle={toggleModal}\r\n            wrapClassName=\"modal-right\"\r\n            backdrop=\"static\"\r\n          >\r\n            <ModalHeader toggle={toggleEditModal}>Edit Note</ModalHeader>\r\n            <ModalBody>\r\n              <Form\r\n                onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  saveEditedNote();\r\n                }}\r\n              >\r\n                <FormGroup>\r\n                  <Label for=\"editedTitle\">Edit note title:</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    id=\"editedTitle\"\r\n                    placeholder=\"Enter note title\"\r\n                    value={editedTitle}\r\n                    onChange={(e) => setEditedTitle(e.target.value)}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"editedText\">Edit your note:</Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    id=\"editedText\"\r\n                    placeholder=\"Enter your note\"\r\n                    value={editedText}\r\n                    onChange={(e) => setEditedText(e.target.value)}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </FormGroup>\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  block\r\n                  className={`btn-shadow btn-multiple-state ${\r\n                    saveLoading ? \"show-spinner\" : \"\"\r\n                  }`}\r\n                >\r\n                  <span className=\"spinner d-inline-block\">\r\n                    <span className=\"bounce1\" />\r\n                    <span className=\"bounce2\" />\r\n                    <span className=\"bounce3\" />\r\n                  </span>\r\n                  <span className=\"label\">Save Changes</span>\r\n                </Button>\r\n              </Form>\r\n            </ModalBody>\r\n          </Modal>\r\n          {/* <h2 className=\"mt-4\">My Notes</h2> */}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LawyerJobNotes;\r\n","/* eslint-disable import/no-extraneous-dependencies */\r\nimport React, { Component } from 'react';\r\nimport DropzoneComponent from 'react-dropzone-component';\r\nimport 'dropzone/dist/min/dropzone.min.css';\r\nimport { baseUrl } from 'constants/defaultValues';\r\n\r\nconst ReactDOMServer = require('react-dom/server');\r\n\r\n// const dropzoneComponentConfig = {\r\n//   // postUrl: 'https://httpbin.org/post',\r\n//   postUrl: `${baseUrl}/api/lawyer/job/19/document/1`,\r\n \r\n// };\r\nfunction getTokenRes() {\r\n  return localStorage.getItem('tokenRes');\r\n}\r\nconst token = getTokenRes();\r\n\r\nconst dropzoneConfig = {\r\n  thumbnailHeight: 160,\r\n  maxFilesize: 2,\r\n  previewTemplate: ReactDOMServer.renderToStaticMarkup(\r\n    <div className=\"dz-preview dz-file-preview mb-3\">\r\n      <div className=\"d-flex flex-row \">\r\n        <div className=\"p-0 w-30 position-relative\">\r\n          <div className=\"dz-error-mark\">\r\n            <span>\r\n              <i />{' '}\r\n            </span>\r\n          </div>\r\n          <div className=\"dz-success-mark\">\r\n            <span>\r\n              <i />\r\n            </span>\r\n          </div>\r\n          <div className=\"preview-container\">\r\n            {/*  eslint-disable-next-line jsx-a11y/alt-text */}\r\n            <img data-dz-thumbnail className=\"img-thumbnail border-0\" />\r\n            <i className=\"simple-icon-doc preview-icon\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"pl-3 pt-2 pr-2 pb-1 w-70 dz-details position-relative\">\r\n          <div>\r\n            {' '}\r\n            <span data-dz-name />{' '}\r\n          </div>\r\n          <div className=\"text-primary text-extra-small\" data-dz-size />\r\n          <div className=\"dz-progress\">\r\n            <span className=\"dz-upload\" data-dz-uploadprogress />\r\n          </div>\r\n          <div className=\"dz-error-message\">\r\n            <span data-dz-errormessage />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <a href=\"#/\" className=\"remove\" data-dz-remove>\r\n        {' '}\r\n        <i className=\"glyph-icon simple-icon-trash\" />{' '}\r\n      </a>\r\n    </div>\r\n  ),\r\n  headers: {'Authorization': `Bearer ${token}`},\r\n};\r\n\r\nexport default class DropzoneExample extends Component {\r\n \r\n\r\n  \r\n\r\n  clear() {\r\n    this.myDropzone.removeAllFiles(true);\r\n  }\r\n\r\n  \r\n  render() {\r\n    const { jobId,stepNo } = this.props;\r\n    const dropzoneComponentConfig = {\r\n      // postUrl: 'https://httpbin.org/post',\r\n      postUrl: `${baseUrl}/api/lawyer/job/${jobId}/document/${stepNo}`,\r\n      \r\n     \r\n    };\r\n    return (\r\n      <DropzoneComponent\r\n        config={dropzoneComponentConfig}\r\n        djsConfig={dropzoneConfig}\r\n        eventHandlers={{\r\n          init: (dropzone) => {\r\n            this.myDropzone = dropzone;\r\n          },\r\n          success: (response) => {\r\n            console.log(\"document upload sucesss\",response);\r\n            if (response.status === \"success\") {\r\n              window.location.reload();\r\n            }\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\n// import DropzoneExample from 'containers/forms/DropzoneExample';\r\n\r\nimport { baseUrl } from 'constants/defaultValues';\r\nimport { Button, Card,CardBody, Col,  Form, FormGroup, Input, Label, Row } from 'reactstrap';\r\nimport Select from 'react-select';\r\nimport CustomSelectInput from 'components/common/CustomSelectInput';\r\nimport axios from 'axios';\r\nimport {useParams,useHistory,useLocation } from \"react-router-dom\";\r\n\r\nimport LawyerJobNotes from \"../Notes/LawyerJobNotes\"\r\nimport DropzoneExample from './UploadDropZone';\r\nimport ToasterComponent from '../notifications/ToasterComponent';\r\n\r\n\r\n\r\nconst selectData = [\r\n  { label: 'Yet to start', value: 'yet to start', key: 1 },\r\n  { label: 'In progress', value: 'Inprogress', key: 2 },\r\n  { label: 'Completed', value: 'completed', key: 4 },\r\n];\r\nconst doneByData=[\r\n  { label: 'Client', value: true, key: 0 },\r\n  { label: 'Lawyer', value: false, key: 1 },\r\n]\r\nconst jobStatusData=[\r\n  {label:'Yet to start',value:'YET_TO_START',key:1},\r\n  {label:'InProgress',value:'IN_PROGRESS',key:2},\r\n  {label:'Completed',value:'LAWYER_COMPLETED',key:4}\r\n]\r\n\r\nconst JobDetails = () => {\r\n  // const [selectedOption, setSelectedOption] = useState('');\r\n  const [selectedStep, setSelectedStep] = useState(null);\r\n  const [jobdetails,setJobDetails]=useState('');\r\n  const {jid}=useParams();\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [isHovered1, setIsHovered1] = useState(false);\r\n  const [jobeditmode,setJobEditMode]=useState(false);\r\n  const [isNewStep, setIsNewStep] = useState(false);\r\n  const [jobstatuseditmode,setJobStatusEditMode]=useState(false)\r\n\r\n   const [userstep,setUserStep]=useState(true);\r\n   const [jobstatuschange,setJobStatusChange]=useState(true);\r\n \r\n\r\n   \r\n \r\n  const [editData, setEditData] = useState({ stepName: '', description: '', doneBy:'', upload:true\r\n});\r\n\r\n\r\n\r\n  // const url=`${baseUrl}/lawyerJobsDetails/${jid}`;\r\n\r\n  const handleUserStepChange = (val) => {\r\n    console.log('Selected Option:', val);\r\n    setUserStep(val.value); \r\n  \r\n  };\r\n\r\n\r\n  // Backedn url \r\n  const url=`${baseUrl}/api/lawyer/job/${jid}`\r\n  const LawyerJobsDetails=async()=>{\r\n    try {\r\n        const response = await axios.get(url);\r\n        setJobDetails(response.data);\r\n        console.log(\"checking response\",response.data);\r\n\r\n  \r\nif (response.data.steps && response.data.steps.length > 0) {\r\n  // jobdetails.steps = jobdetails.steps.sort((a, b) => a.stepNumber - b.stepNumber);\r\n  setSelectedStep(response.data.steps[0]);\r\n  setEditData({\r\n    stepName: response.data.steps[0].stepName,\r\n    description: response.data.steps[0].description,\r\n    // userStep: response.data.steps[0].doneBy,\r\n    doneBy:userstep,\r\n    upload:true,\r\n    \r\n   \r\n  });\r\n \r\n \r\n}\r\n        \r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        \r\n      }\r\n}\r\n\r\n    useEffect(()=>{\r\n       \r\n        LawyerJobsDetails();\r\n       \r\n    \r\n    },[url])\r\n\r\n\r\n    const isFormFilled = () => {\r\n      return (\r\n        editData.stepName.trim() !== '' &&\r\n        editData.description.trim() !== '' &&\r\n        userstep !== ''\r\n      );\r\n    };\r\n  \r\n\r\n    const handleAddStepCard = () => {\r\n       \r\n      if (jobdetails && jobdetails.steps) {\r\n        const newStepNumber = jobdetails.steps.length + 1;\r\n        const newCard = {\r\n          id: newStepNumber,\r\n          stepNumber: newStepNumber,\r\n          stepName: 'New Step',\r\n          description: 'Description',\r\n          doneBy: 'CLIENT',\r\n          \r\n        };\r\n\r\n        const updatedJobDetails = {\r\n          ...jobdetails,\r\n          steps: [...jobdetails.steps, newCard]\r\n          // steps: updatedSteps,\r\n        };\r\n        setJobDetails(updatedJobDetails);\r\n        setIsNewStep(true);\r\n        setEditMode(true);\r\n        setSelectedStep(newCard);\r\n        setEditData({\r\n          stepName: '',\r\n          description: '',\r\n          doneBy: '',\r\n          upload: true,\r\n        });\r\n    \r\n      \r\n      }\r\n    };\r\n\r\n    \r\n  //   function getTokenRes() {\r\n  //     return localStorage.getItem('tokenRes');\r\n  // }\r\n \r\n  function getRoleRes() {\r\n    return localStorage.getItem('roleRes');\r\n  }\r\n  const roleRes = getRoleRes();\r\n  const showEdit = () => {\r\n\r\n    \r\n\r\n    if (!isNewStep && roleRes.includes(\"LAWYER\")) {\r\n      return (\r\n         <div>\r\n                <Button className='mr-2' outline color=\"primary\" onClick={() => setEditMode(!editMode)}>\r\n                \r\n                \r\n                 {editMode ? <i className='simple-icon-close' /> : <i className='simple-icon-pencil ' />\r\n                  \r\n                  } \r\n                \r\n\r\n                  </Button>\r\n                  <Button outline color=\"primary\" >\r\n                  <i className='simple-icon-trash ' />\r\n                  </Button>\r\n                </div>\r\n        \r\n      );\r\n    }\r\n    return null; \r\n  };\r\n\r\n  // const token = getTokenRes();\r\n  const history = useHistory();\r\n\r\n  \r\n    const handleStepClick = (step) => {\r\n      setSelectedStep(step);\r\n      setEditMode(false);\r\n      setEditData({\r\n        stepName: step.stepName,\r\n        description: step.description,\r\n        doneBy: step.doneBy,\r\n        upload: true,\r\n      });   \r\n    };\r\n  \r\n    \r\n    const handleEditChange = (e) => {\r\n      const { name, value } = e.target;\r\n      setEditData(prev => ({ ...prev, [name]: value }));\r\n    };\r\n    \r\n   \r\n    const handleJobNameClick = () => {\r\n      setJobEditMode(true);\r\n     \r\n    };\r\n    const handleJobStatusClick=()=>{\r\n      setJobStatusEditMode(true);\r\n    }\r\n  \r\n   \r\n  const showClientNoJob=()=>{\r\n    \r\n    if(roleRes.includes(\"USER\")){\r\n      return(\r\n        <div>\r\n           <Card className='text-center'>\r\n        <CardBody>\r\n          <h3>Your lawyer is working on your job<span className='mx-2'>\r\n          <i className='iconsminds-information'/></span></h3>\r\n        </CardBody>\r\n      </Card>\r\n        </div>\r\n       \r\n      );\r\n     \r\n    }\r\n  \r\n     return  <div>\r\n     <Card className='text-center'>\r\n  <CardBody>\r\n    <h3>You didnt created step yet <span className='mx-2'>\r\n    <i className='iconsminds-information'/></span></h3>\r\n    <Button color='primary' onClick={handleAddStepCard}>Create your first step </Button>\r\n  </CardBody>\r\n</Card>\r\n  </div>;\r\n  };\r\n\r\n  const ApproveJobStatusByClient=async()=>{\r\n    const approveUrl=`${baseUrl}/api/lawyer/job/${jid}/status/client`\r\n    try{\r\n      const response= await axios.put(approveUrl,{status:\"COMPLETED\"});\r\n      if(response.status===200){\r\n        LawyerJobsDetails();\r\n      }\r\n    }\r\n    catch(error){\r\n      console.error('Failed to update job status:', error);\r\n    }\r\n  }\r\n  const RejectJobStatusByClient=async()=>{\r\n    const approveUrl=`${baseUrl}/api/lawyer/job/${jid}/status/client`\r\n    try{\r\n      const response= await axios.put(approveUrl,{status:\"IN_DISPUTE\"});\r\n      if(response.status===200){\r\n        LawyerJobsDetails();\r\n      }\r\n    }\r\n    catch(error){\r\n      console.error('Failed to update job status:', error);\r\n    }\r\n  }\r\n  \r\n  const clientJobApproveInfo=()=>{\r\n    if(roleRes.includes(\"USER\")&&jobdetails.jobStatus===\"LAWYER_COMPLETED\"){\r\n      return(\r\n          <Row>\r\n          <Col  className='text-center my-2'  style={{ position: 'relative', top: '50%', bottom:'-50%'  }}>\r\n          <Card className='mx-auto '>\r\n          <CardBody>\r\n            <h3>Your lawyer has marked the job as completed</h3>\r\n            <p>Do you agree ?</p>\r\n            <Button className='mr-2' color='primary' onClick={ApproveJobStatusByClient}>Accept</Button>\r\n            <Button className='' outline onClick={RejectJobStatusByClient}>Raise a dispute</Button>\r\n          </CardBody>\r\n         \r\n          </Card>\r\n        </Col>\r\n        </Row> \r\n      )\r\n    }\r\n    return null;\r\n  }\r\n  \r\n\r\n \r\n    const handleCancelClick = () => {\r\n      setJobEditMode(false);\r\n    };\r\n    const handleCancelStatusClick = () => {\r\n      setJobStatusEditMode(false);\r\n    };\r\n   \r\n   \r\n    \r\n  \r\n    const saveEdits = async () => {\r\n      // const updateUrl = `${url}/steps/${selectedStep.id}`;\r\n      const updateUrl = `${url}/jobDetail/${selectedStep.stepNumber} `;\r\n      const dataToSend = {\r\n        ...editData,\r\n         doneBy:userstep, \r\n       \r\n      };\r\n      console.log('Payload to send:', dataToSend); \r\n     \r\n      try {\r\n       \r\n        const response = await axios.put(updateUrl,dataToSend);\r\n       \r\n     \r\n         \r\n        if (response.status === 200) {\r\n          \r\n            LawyerJobsDetails();\r\n          setEditMode(false);\r\n\r\n\r\n            // Reassign step numbers to be sequential\r\n      // const updatedSteps = reassignStepNumbers(jobdetails.steps);\r\n\r\n      // const updatedJobDetails = {\r\n      //   ...jobdetails,\r\n      //   steps: updatedSteps,\r\n      // };\r\n\r\n      // setJobDetails(updatedJobDetails);\r\n      // Reassign step numbers to be sequential\r\n    \r\n      \r\n      \r\n          \r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to update step:', error);\r\n      }\r\n    };\r\n    // const saveEdits1 = async () => {\r\n    //   // const newStepNumber = jobdetails && jobdetails.steps ? jobdetails.steps.length + 1 : 1;\r\n    //   const updateUrl = `${baseUrl}/api/lawyer/job/${jid}/jobDetail/step/${selectedStep.stepNumber} `;\r\n    //   const dataToSend = {\r\n    //     ...editData,\r\n    //      doneBy:userstep, \r\n        \r\n    //   };\r\n    //   console.log('Payload to send:', dataToSend); \r\n     \r\n    //   try {\r\n    //     const response = await axios.post(updateUrl,dataToSend);\r\n         \r\n    //     if (response.status === 200) {\r\n    //       LawyerJobsDetails();\r\n    //       setEditMode(false);\r\n\r\n\r\n    //       // Reassign step numbers to be sequential\r\n    //   // const updatedSteps = reassignStepNumbers(jobdetails.steps);\r\n\r\n    //   // const updatedJobDetails = {\r\n    //   //   ...jobdetails,\r\n    //   //   steps: updatedSteps,\r\n    //   // };\r\n\r\n    //   // setJobDetails(updatedJobDetails);\r\n      \r\n    //   // setIsNewStep(false); // Reset the new step flag after creation\r\n\r\n\r\n      \r\n          \r\n    //     }\r\n    //   } catch (error) {\r\n    //     console.error('Failed to update step:', error);\r\n    //   }\r\n    // };\r\n    const saveEdits1 = async () => {\r\n      const updateUrl = `${baseUrl}/api/lawyer/job/${jid}/jobDetail/step/${selectedStep.stepNumber} `;\r\n      const dataToSend = {\r\n        ...editData,\r\n        doneBy: userstep,\r\n      };\r\n    \r\n      console.log('Payload to send:', dataToSend); \r\n    \r\n      try {\r\n         \r\n        const response = await axios.get(`${baseUrl}/api/lawyer/job/${jid}`);\r\n        const existingSteps = response.data.steps;\r\n        const existingStepNumbers = existingSteps.map(step => step.stepNumber);\r\n    \r\n        const selectedStepNumber = selectedStep.stepNumber;\r\n    \r\n        // Check if all steps up to selectedStepNumber - 1 are in existingStepNumbers\r\n        const allPreviousStepsOccupied = [...Array(selectedStepNumber - 1).keys()].every(stepNumber => existingStepNumbers.includes(stepNumber + 1));\r\n    \r\n        if (allPreviousStepsOccupied) {\r\n          // Post the current step\r\n          const postResponse = await axios.post(updateUrl, dataToSend);\r\n    \r\n          ToasterComponent('success', postResponse.data.statuses);\r\n          if (postResponse.status === 200) {\r\n            LawyerJobsDetails();\r\n            setEditMode(false);\r\n          }\r\n        } else {\r\n          alert('Please fill out all previous steps before creating or updating this step.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to update step:', error);\r\n      }\r\n    };\r\n    \r\n    \r\n    \r\n    \r\n   \r\n    const saveJobs = async () => {\r\n      // const updateUrl1 = `${url}/jobDetail/${jid}/step/${selectedStep.id}`;\r\n      const updateUrl1 = `${baseUrl}/api/lawyer/lawyerJob`;\r\n      try {\r\n        const response = await axios.put(updateUrl1, { jobId:`${jid}` , jobName: jobdetails.jobName }); \r\n        if (response.status === 200) {\r\n          LawyerJobsDetails();\r\n          setEditMode(false);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to update job name:', error);\r\n      }\r\n    };\r\n    \r\n    const handleSaveJobName = () => {\r\n      saveJobs();\r\n      setJobEditMode(false);\r\n    };\r\n    \r\n    // const handleSaveJobStatus=()=>{\r\n    //   setJobStatusEditMode(false);\r\n    // }\r\n   \r\n    \r\n    const saveStatus=async( selectedKey)=>{\r\n     \r\n      const updateStatusUrl=`${baseUrl}/api/lawyer/job/${jid}/jobdetail-status/${selectedStep.stepNumber}`\r\n      try{\r\n        const response = await axios.put(updateStatusUrl, {status:selectedKey}); \r\n        if (response.status === 200) {\r\n          LawyerJobsDetails();\r\n          \r\n          setEditMode(false);\r\n          \r\n         \r\n        }\r\n      }\r\n      catch (error) {\r\n        console.error('Failed to update job status:', error);\r\n      }\r\n    }\r\n\r\n    const saveJobStatus=async(selectedKey)=>{\r\n      const updateJobStatusUrl=`${baseUrl}/api/lawyer/job/${jid}/status/lawyer`\r\n      try{\r\n        const response= await axios.put(updateJobStatusUrl,{status:selectedKey});\r\n        if (response.status === 200) {\r\n          LawyerJobsDetails();\r\n          setJobStatusEditMode(false);\r\n          \r\n         \r\n        }\r\n      }\r\n      catch(error){\r\n        console.error('Failed to update job status:', error);\r\n      }\r\n    }\r\n\r\n\r\n   \r\n\r\n    // const handleSave = () => {\r\n    //   if (isNewStep) {\r\n        \r\n    //     saveEdits1();\r\n    //   } else {\r\n        \r\n    //     saveEdits();\r\n    //   }\r\n    // };\r\n    const handleSave = () => {\r\n      if (isNewStep) {\r\n        if (isFormFilled()) {\r\n          saveEdits1();\r\n        } else {\r\n          console.warn('Please fill all required fields.');\r\n        }\r\n      } else {\r\n        saveEdits();\r\n      }\r\n    };\r\n    \r\n\r\n    const showPlusCard = () => {\r\n      if (roleRes.includes(\"LAWYER\")) {\r\n        return (\r\n          null\r\n        );\r\n      }\r\n    \r\n      if (roleRes.includes(\"USER\")) {\r\n        return (\r\n          <Card className='d-none'>\r\n            {/* <CardBody className='my-2' style={{cursor: \"pointer\"}} onClick={handleAddCard}> */}\r\n            <CardBody className='my-2' style={{cursor: \"pointer\"}} onClick={handleAddStepCard}>\r\n              <h1 className='text-center mx-auto w-100' style={{fontSize: \"60px\", cursor: \"pointer\"}}>\r\n                +\r\n              </h1>\r\n            </CardBody>\r\n          </Card>\r\n        );\r\n      }\r\n    \r\n      return null; \r\n    };\r\n    const showJobEditIcon = () => {\r\n\r\n      // if (!jobdetails || !jobdetails.jobName) {\r\n      //   return <h1 className='ml-1'>Loading job name...</h1>;  // Provide a loading or default placeholder\r\n      // }\r\n      if (roleRes.includes(\"LAWYER\")) {\r\n        return (\r\n          <div\r\n            className='font-weight-semibold text-large '\r\n            style={{ cursor: 'pointer' }}\r\n            onMouseEnter={() => setIsHovered(true)}\r\n            onMouseLeave={() => setIsHovered(false)}\r\n            onClick={() => setJobEditMode(true)}\r\n            onKeyDown={(event) => {\r\n              if (event.key === 'Enter' || event.key === 'Space') {\r\n                handleJobNameClick();\r\n                event.preventDefault();\r\n              }\r\n            }}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n          >\r\n            <h1 className=''>{jobdetails.jobName}</h1>\r\n            \r\n            {isHovered && (\r\n              <span className='ml-2 text-primary text-one'>\r\n                <i \r\n                  className='simple-icon-pencil' \r\n                  style={{ cursor: 'pointer' }} \r\n                  size='sm'\r\n                />\r\n              </span>\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n      \r\n      return <h1 className=''>{jobdetails.jobName} </h1>;\r\n    };\r\n    \r\n   const showJobStatusEditIcon=()=>{\r\n    if (roleRes.includes(\"LAWYER\")) {\r\n      return (\r\n        <div\r\n          className='font-weight-semibold text-large d-flex'\r\n          style={{ cursor: 'pointer' }}\r\n          onMouseEnter={() => setIsHovered1(true)}\r\n          onMouseLeave={() => setIsHovered1(false)}\r\n          onClick={() => setJobStatusEditMode(true)}\r\n          onKeyDown={(event) => {\r\n            if (event.key === 'Enter' || event.key === 'Space') {\r\n              handleJobStatusClick();\r\n              event.preventDefault();\r\n            }\r\n          }}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n        >\r\n          <h6 className='text-muted'>job status : {jobdetails.jobStatus}</h6>\r\n          \r\n          {isHovered1 && (\r\n            <span className='ml-2 text-primary text-one'>\r\n              <i \r\n                className='simple-icon-pencil' \r\n                style={{ cursor: 'pointer' }} \r\n                size='sm'\r\n              />\r\n            </span>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    return <h6 className='text-muted'>job status : {jobdetails.jobStatus}</h6>;\r\n   }\r\n    \r\n    const showAddStepCard = () => {\r\n      if (roleRes.includes(\"LAWYER\")) {\r\n        return (\r\n          <>\r\n          \r\n            <Card>\r\n              <CardBody className='my-2' style={{cursor: \"pointer\"}} onClick={handleAddStepCard}>\r\n                <h1 className='text-center mx-auto w-100' style={{fontSize: \"60px\", cursor: \"pointer\"}}>\r\n                  +\r\n                </h1>\r\n              </CardBody>\r\n            </Card>\r\n          </>\r\n        );\r\n      }\r\n    \r\n      if (roleRes.includes(\"USER\")) {\r\n        return (\r\n          <>\r\n          \r\n            <Card className='d-none'>\r\n              <CardBody className='my-2' style={{cursor: \"pointer\"}} onClick={handleAddStepCard}>\r\n                <h1 className='text-center mx-auto w-100' style={{fontSize: \"60px\", cursor: \"pointer\"}}>\r\n                  +\r\n                </h1>\r\n              </CardBody>\r\n            </Card>\r\n          </>\r\n        );\r\n      }\r\n    \r\n      return null; \r\n    };\r\n    \r\n    const downloadDocument = async (documentId) => {\r\n      \r\n      const updateUrl1 = `${baseUrl}/api/lawyer/job/document/${documentId}`;\r\n      try {\r\n        const response = await axios.get(updateUrl1); \r\n        console.log(\"document response\",response);\r\n        \r\n        if (response.status === 200) {\r\n          // const documentUrl = updateUrl1;\r\n          window.open(updateUrl1, '_blank');\r\n    \r\n\r\n     \r\n          // if (documentUrl) {\r\n          //   window.open(documentUrl, '_blank');\r\n          // } else {\r\n          //   console.error('Document URL is missing in the response');\r\n          // }\r\n        } else {\r\n          console.error('Failed to fetch the document');\r\n        }\r\n      }\r\n      \r\n      catch (error) {\r\n        console.error('Failed to update job name:', error);\r\n      }\r\n    };\r\n\r\n    const deleteDocument = async (documentId) => {\r\n      const deleteUrl = `${baseUrl}/api/lawyer/job/document/${documentId}`;\r\n      try {\r\n        const response = await axios.delete(deleteUrl);\r\n        if (response.status === 200) {\r\n          window.location.reload();\r\n          \r\n          \r\n        } else {\r\n          console.error('Failed to delete the document');\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to delete the document:', error);\r\n      }\r\n    };\r\n    const handleKeyDown = (event, action, documentId) => {\r\n      if (event.key === 'Enter' || event.key === ' ') {\r\n        event.preventDefault();\r\n        action(documentId);\r\n      }\r\n    };\r\n\r\n    const location = useLocation();\r\n  const { lawyerName,clientName,lawyerId ,clientId} = location.state || {};\r\n  const isLawyer = roleRes.includes(\"LAWYER\");\r\n\r\n  const navigateToProfile = () => {\r\n    history.push(`/app/lawyerprofile/${lawyerId}`);\r\n  };\r\n  \r\n    \r\n\r\n  return (\r\n    <div>\r\n \r\n        <Row>\r\n\r\n        {/* <Col md={12} lg={12} sm={12} className='my-2'>\r\n        {jobdetails.steps&&jobdetails.steps.length>0?(\r\n         null\r\n        ):(\r\n          showClientNoJob()\r\n        )}\r\n        </Col> */}\r\n        <Col md={12} lg={4}>\r\n        \r\n        \r\n      \r\n        {jobeditmode ? (\r\n          <Row className='d-flex align-items-center'>\r\n           \r\n            <Col md={6}>\r\n            <div className=''>\r\n          <Input\r\n              type=\"text\"\r\n              value={jobdetails.jobName}\r\n              // onChange={(e) => setJobName(e.target.value)}\r\n              onChange={(e) => setJobDetails({ ...jobdetails, jobName: e.target.value })}\r\n            />\r\n           \r\n          </div>\r\n            </Col>\r\n            <Col md={6}> \r\n            <div className='my-3'>\r\n              <Button color=\"primary\" onClick={handleSaveJobName}>Save</Button>\r\n              <Button color=\"secondary\" className=\"ml-2\" onClick={handleCancelClick}>Cancel</Button>\r\n            </div></Col>\r\n            \r\n          </Row>\r\n          \r\n            \r\n          ) : (\r\n           \r\n\r\n          showJobEditIcon()\r\n          \r\n          \r\n       \r\n          )\r\n        }\r\n        <Row>\r\n        <Col>\r\n        <div>\r\n         \r\n         {/* <NavLink href={`/app/lawyerprofile/${lawyerId}`}>\r\n          <h6 className='text-muted'>Lawyer: {lawyerName}</h6>\r\n          </NavLink> */}\r\n     \r\n        {lawyerName ? (\r\n         \r\n          \r\n      <div role='button' tabIndex={0}  onClick={navigateToProfile} \r\n       onKeyPress={(e) => {\r\n        if (e.key === 'Enter' || e.key === ' ') {\r\n          navigateToProfile();\r\n        }\r\n      }}\r\n      style={{ cursor: 'pointer' }}>\r\n      <h6 className='text-muted'>Lawyer: {lawyerName}</h6>\r\n    </div>\r\n          \r\n       \r\n      ) : (\r\n         <h6 className='text-muted'>Client: {clientName}</h6>\r\n      )}\r\n        </div>\r\n        </Col>\r\n         \r\n        </Row>\r\n        <Row>\r\n        <Col>\r\n            \r\n            {jobstatuseditmode ? (\r\n          <Row className='d-flex align-items-center'>\r\n           \r\n            <Col md={6}>\r\n            <div className=''>\r\n           <Select\r\n          components={{ Input: CustomSelectInput }}\r\n          className=\"react-select\"\r\n          classNamePrefix=\"react-select\"\r\n          name=\"form-field-name\"\r\n          \r\n          // value={selectedOption}\r\n          value={jobstatuschange}\r\n          \r\n          onChange={(val) => {\r\n         console.log(val);  \r\n          // setSelectedOption(val);\r\n          setJobStatusChange(val);\r\n          // handleJobStatusChange\r\n          // setSelectedStep(val);\r\n          // saveJobStatus(val.key);\r\n          saveJobStatus(val.value);\r\n      }}\r\n          \r\n            options={jobStatusData}\r\n          \r\n        />\r\n           \r\n          </div>\r\n            </Col>\r\n            <Col md={6}> \r\n            <div className='my-3'>\r\n              {/* <Button color=\"primary\" onClick={handleSaveJobStatus}>Save</Button> */}\r\n              <Button color=\"secondary\" className=\"ml-2\" onClick={handleCancelStatusClick}>Cancel</Button>\r\n            </div></Col>\r\n            \r\n          </Row>\r\n          \r\n            \r\n          ) : (\r\n           \r\n\r\n          showJobStatusEditIcon()\r\n          \r\n          \r\n       \r\n          )\r\n        }\r\n          </Col>\r\n        </Row>\r\n       \r\n\r\n\r\n          {clientJobApproveInfo()}\r\n      \r\n        </Col>\r\n        {/* <Col className=''>\r\n        <LawyerJobNotes jobId={jid}/></Col> */}\r\n       \r\n\r\n        <Col className=''>\r\n        <div className='d-flex justify-content-end align-items-center '>\r\n        <div className=''>\r\n        {roleRes.includes(\"USER\") ? (\r\n          <Button \r\n            className='mr-2'  \r\n            outline \r\n            color='primary' \r\n            onClick={() => history.push({\r\n              pathname: '/app/lawyer/reviews',\r\n              state: { lawyerName, clientId, clientName, lawyerId } \r\n            })}\r\n          >\r\n            Add Reviews\r\n          </Button>\r\n        ) : null}\r\n        \r\n        \r\n  \r\n        </div>\r\n        <div className=''>\r\n        <LawyerJobNotes jobId={jid} />\r\n        </div>\r\n        </div>\r\n        \r\n       \r\n       </Col>\r\n\r\n       \r\n\r\n\r\n        </Row>\r\n        \r\n        <Row>\r\n        <Col md={12} lg={12} sm={12} className='my-2'>\r\n\r\n        \r\n        \r\n        {jobdetails.steps&&jobdetails.steps.length>0?(\r\n         null\r\n        ):(\r\n          showClientNoJob()\r\n        )}\r\n        </Col>\r\n        </Row>\r\n      <Row>\r\n      \r\n      <Colxx lg={4}>\r\n     \r\n      {jobdetails.steps&&jobdetails.steps.map((s)=>{\r\n            return(\r\n              <div key={s.id}>\r\n           \r\n           \r\n      <Card className='mb-2'\r\n      onClick={() => handleStepClick(s)}\r\n        style={{ border: selectedStep === s ? `3px solid var(--theme-color-1)` : 'none' ,cursor:'pointer'}}\r\n      >\r\n        <CardBody className=''>\r\n        <div className='d-flex align-items-center'>\r\n          <div> \r\n\r\n   \r\n          <h1>{s.stepNumber}</h1>\r\n          \r\n         \r\n          </div>\r\n          <div className='d-flex justify-content-between flex-grow-1 align-items-center  '>\r\n          <div className='ml-3'>\r\n          <h3>{s.stepName}</h3>\r\n            <h6 className='text-muted'>{s.description}</h6>\r\n            <h6>By <span className='text-muted'>{s.doneBy}</span></h6>\r\n          </div>\r\n          <div className='text-end'>\r\n    <span \r\n        className='text-xlarge text-muted' \r\n        style={{cursor: 'pointer'}}\r\n        onClick={() => handleStepClick(s)}\r\n        onKeyDown={(event) => {\r\n            if (event.key === 'Enter' || event.key === 'Space') {\r\n                handleStepClick(s);\r\n                event.preventDefault();  \r\n            }\r\n        }}\r\n        role=\"button\"\r\n        tabIndex=\"0\"\r\n        onMouseEnter={(event) => { \r\n            const { target } = event;\r\n            target.style.fontWeight = 'bold';\r\n        }}\r\n        onMouseLeave={(event) => { \r\n            const { target } = event;\r\n            target.style.fontWeight = 'normal';\r\n        }}\r\n    >\r\n        <i className='simple-icon-arrow-right' />\r\n    </span>\r\n</div>\r\n          </div>\r\n         \r\n        </div>\r\n     \r\n        \r\n    \r\n        </CardBody>\r\n      </Card>\r\n      \r\n              </div>\r\n             \r\n            )\r\n           \r\n          })}\r\n             \r\n\r\n          \r\n          {jobdetails.steps&&jobdetails.steps.length>0?(\r\n           \r\n         \r\n          showAddStepCard()\r\n          ):( \r\n          showPlusCard() \r\n          )}\r\n      </Colxx>\r\n \r\n      <Colxx>\r\n     \r\n      \r\n          <Col>\r\n          {/* right side step details */}\r\n         \r\n          {selectedStep && (\r\n            \r\n            <Card className='mb-2  '>\r\n              <CardBody>\r\n                <Form>\r\n                <FormGroup>\r\n                  <Col>\r\n                  <div className='d-flex justify-content-between'>\r\n                <h2 className='text-primary '>Step {selectedStep.stepNumber} \r\n                {editMode ? ` : ${editData.stepName}` : \"\"}\r\n                </h2>\r\n              \r\n                  {showEdit()}\r\n\r\n                  \r\n                </div>\r\n                  </Col>\r\n                </FormGroup>\r\n                \r\n                 \r\n                  {editMode ? (\r\n                    <>\r\n                      <FormGroup className='py-2'>\r\n                      <Col sm={2}>\r\n                      <Label>Name</Label>\r\n                      </Col>\r\n                        <Col>\r\n                        <Input type=\"text\" value={editData.stepName} onChange={handleEditChange} name=\"stepName\" />\r\n                        </Col>\r\n                      </FormGroup>\r\n                      <FormGroup className='py-2'>\r\n                      <Col sm={2}>\r\n                      <Label>Description</Label>\r\n                      </Col>\r\n                        <Col>\r\n                        <Input type=\"text\" value={editData.description} onChange={handleEditChange} name=\"description\" />\r\n\r\n                        </Col>\r\n                      </FormGroup>\r\n                      {/* <FormGroup className='py-2'>\r\n                      <Col sm={2}>\r\n                      <Label>Done by</Label>\r\n                      </Col>\r\n                        <Col>\r\n                        <Input type=\"text\" value={editData.doneBy} onChange={handleEditChange} name=\"doneBy\" />\r\n\r\n                        </Col>\r\n                      </FormGroup> */}\r\n                      <FormGroup className='py-2'>\r\n                      <Col sm={2}>\r\n                      <Label>Done by</Label>\r\n                      </Col>\r\n                        <Col>\r\n                        <Select\r\n                 components={{ Input: CustomSelectInput }}\r\n                   className=\"react-select\"\r\n                classNamePrefix=\"react-select\"\r\n                  name=\"userstep\"\r\n                  // value={doneByData.find(option => option.value === userstep)}\r\n            \r\n                 onChange={handleUserStepChange}\r\n                //  onChange={(val) => {\r\n                // console.log(val);  \r\n                // setUserStep(val);\r\n             \r\n                //   }}\r\n          // onChange={saveStatus} \r\n            options={doneByData}\r\n          // options={selectData}\r\n        />\r\n                    \r\n                     \r\n                        </Col>\r\n                      </FormGroup>\r\n                     \r\n\r\n       {isNewStep ? null : (\r\n            <>\r\n              <FormGroup className='py-2'>\r\n                <Col sm={2}>\r\n                  <Label>Documents</Label>\r\n                </Col>\r\n                <Col>\r\n                <DropzoneExample   jobId={`${jid}`} stepNo={`${selectedStep.stepNumber}`}/>\r\n                  <div className='mt-4'>\r\n                  {selectedStep.documentList && selectedStep.documentList.map((document) => (\r\n                                  <h5 key={document.id}>{document.name}\r\n                                  <span className='ml-2 text-primary' role=\"button\"\r\n                                 tabIndex=\"0\" \r\n                               onKeyDown={(e) => handleKeyDown(e, downloadDocument, document.id)}\r\n                               onClick={() => downloadDocument(document.id)}>\r\n\r\n                                <i className='iconsminds-download-1 mx-1 '  \r\n                                  style={{cursor:\"pointer\"}}/>\r\n                               </span>\r\n                                  <span  tabIndex=\"0\" role='button'\r\n                               onKeyDown={(e) => handleKeyDown(e, deleteDocument, document.id)}\r\n                               onClick={() => deleteDocument(document.id)}>\r\n                                  \r\n                                  \r\n                                  \r\n                                  <i className='simple-icon-trash mx-1 ' style={{cursor:\"pointer\"}}/>\r\n                                  </span></h5>\r\n                                ))}\r\n                  </div>\r\n                </Col>\r\n              </FormGroup>\r\n            </>\r\n          )}\r\n\r\n        \r\n      <FormGroup>\r\n      <Col>   \r\n      {/* {isNewStep ? (\r\n        \r\n        <Button color=\"primary\" onClick={handleSave}>Create</Button>\r\n      ) : (\r\n        // Save button for editing an existing step\r\n        <Button color=\"primary\" onClick={handleSave}>Save</Button>\r\n      )} */}\r\n      {isNewStep ? (\r\n        <Button \r\n          color=\"primary\" \r\n          onClick={handleSave}\r\n          disabled={!isFormFilled()} \r\n        >\r\n          Create\r\n        </Button>\r\n      ) : (\r\n        <Button color=\"primary\" onClick={handleSave}>Save</Button>\r\n      )}\r\n     </Col>\r\n     </FormGroup>\r\n    \r\n   \r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                            <FormGroup className='py-2'>\r\n\r\n                      <Col sm={2}>\r\n                      <Label className='text-one'>Name</Label>\r\n                      </Col>\r\n                      <Col>\r\n                      <h3>{selectedStep.stepName}</h3>\r\n\r\n                      </Col>\r\n\r\n                          \r\n                          </FormGroup>\r\n                  <FormGroup  className='py-2'>\r\n                  <Col sm={2}>\r\n                  <Label className='text-one'>Description</Label>\r\n                  </Col>\r\n                  <Col>\r\n                  <h3 className=''>{selectedStep.description}</h3>\r\n                  </Col>\r\n                  \r\n                  </FormGroup>\r\n                  <FormGroup className='py-2' >\r\n                  <Col sm={2}>\r\n                  <Label className='text-one'>Done by</Label>\r\n                  </Col>\r\n                  <Col>\r\n                  <h3>{selectedStep.doneBy}</h3>\r\n                  </Col>\r\n                  \r\n                  </FormGroup>\r\n                  <FormGroup  className='py-2'>\r\n                  {(selectedStep.doneBy === 'CLIENT' || (selectedStep.doneBy === 'LAWYER' && isLawyer)) && (\r\n                    <Col sm={2}>\r\n                  <Label className='text-one'>Documents</Label>\r\n                  </Col>\r\n                  )}\r\n                 \r\n                  <Col>\r\n                  {(selectedStep.doneBy === 'CLIENT' || (selectedStep.doneBy === 'LAWYER' && isLawyer)) && (\r\n                    <DropzoneExample jobId={`${jid}`} stepNo={`${selectedStep.stepNumber}`} />\r\n                  )}\r\n                  {/* <DropzoneExample   jobId={`${jid}`} stepNo={`${selectedStep.stepNumber}`}/> */}\r\n                 \r\n\r\n                  <div className='mt-4'>\r\n                      {selectedStep.documentList && selectedStep.documentList.map((document) => (\r\n                        <h5 key={document.id}>{document.name}\r\n                        <span className='ml-2 text-primary' role=\"button\"\r\n                        tabIndex=\"0\" \r\n                      onKeyDown={(e) => handleKeyDown(e, downloadDocument, document.id)}\r\n                      onClick={() => downloadDocument(document.id)}>\r\n                      <i className='iconsminds-download-1 mx-1 '  \r\n                        style={{cursor:\"pointer\"}}/>\r\n                        </span>\r\n                        <span  tabIndex=\"0\" role='button'\r\n                      onKeyDown={(e) => handleKeyDown(e, deleteDocument, document.id)}\r\n                      onClick={() => deleteDocument(document.id)}>\r\n                        \r\n                        \r\n                        <i className='simple-icon-trash mx-1 ' style={{cursor:\"pointer\"}}/>\r\n                        </span></h5>\r\n                      ))}\r\n      \r\n                    </div>\r\n                  </Col>\r\n                    \r\n                    </FormGroup>\r\n                    {/* <FormGroup>\r\n                    <Col sm={2}>\r\n                    <Label className='text-one'>Comment</Label>\r\n                    </Col>\r\n                    <Col>\r\n                    <Input type=\"textarea\" name=\"comment\" />\r\n                    </Col>\r\n                      \r\n                      </FormGroup> */}\r\n                  <FormGroup>\r\n                    <Col sm={2}>\r\n                      <Label className='text-one'>\r\n                        Status \r\n                      </Label>\r\n                    </Col>\r\n                    <Col>\r\n                    \r\n                    {/* <h3>{selectedStep.status}</h3> */}\r\n                    {/* <Select\r\n                    components={{ Input: CustomSelectInput }}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"react-select\"\r\n                    name=\"form-field-name\"\r\n                    \r\n                    value={selectedStep.status}\r\n                    \r\n                    onChange={(val) => {\r\n                  console.log(val);  \r\n                    setSelectedOption(val);\r\n                    setSelectedStep(val);\r\n                    saveStatus(val.key);\r\n                }}\r\n                    \r\n                      options={selectData}\r\n                    \r\n                  /> */}\r\n\r\n                  {(selectedStep.doneBy === 'LAWYER' && isLawyer) || selectedStep.doneBy === 'CLIENT' ? (\r\n                  <Select\r\n                    components={{ Input: CustomSelectInput }}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"react-select\"\r\n                    name=\"form-field-name\"\r\n                    value={selectData.find(option => option.value === selectedStep.status)}\r\n                    placeholder={selectedStep.status ? selectedStep.status : 'Select status'}\r\n                    onChange={(val) => {\r\n                      console.log(val);\r\n                      setSelectedStep({ ...selectedStep, status: val.value });\r\n                      saveStatus(val.key);\r\n                    }}\r\n                    options={selectData}\r\n                  />\r\n                ) : (\r\n                  <h3>{selectedStep.status}</h3>\r\n                )}\r\n\r\n\r\n                  {/* <Select\r\n                    components={{ Input: CustomSelectInput }}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"react-select\"\r\n                    name=\"form-field-name\"\r\n                    value={selectData.find(option => option.value === selectedStep.status)}\r\n                    placeholder={selectedStep.status ? selectedStep.status : 'Select status'}\r\n                    onChange={(val) => {\r\n                      console.log(val);\r\n                      setSelectedStep({ ...selectedStep, status: val.value });\r\n                      saveStatus(val.key);\r\n                    }}\r\n                    options={selectData}\r\n                  /> */}\r\n                    \r\n\r\n                    \r\n                    \r\n                    </Col>\r\n\r\n                    </FormGroup>  \r\n\r\n\r\n\r\n                    {/* <FormGroup className='py-2'>\r\n                    <Col sm={2}>\r\n                      <Label>Status</Label>\r\n                    </Col>\r\n                    <Col>\r\n                    <Select\r\n                  components={{ Input: CustomSelectInput }}\r\n                  className=\"react-select\"\r\n                  classNamePrefix=\"react-select\"\r\n                  name=\"form-field-name\"\r\n                  \r\n                  value={selectedStep.status}\r\n                  \r\n                  onChange={(val) => {\r\n                console.log(val);  \r\n                setSelectedOption(val);\r\n                setSelectedStep(val);\r\n                saveStatus(val.key);\r\n            }}\r\n                \r\n                  options={selectData}\r\n                \r\n              />\r\n              \r\n              </Col>\r\n            </FormGroup> */}\r\n                    {/* <FormGroup>\r\n                      <Label>\r\n                        Status\r\n                      </Label>\r\n                      <Input type=\"select\">\r\n                        \r\n                        <option>{selectedStep.status}</option>\r\n                        <option>In Progress</option>\r\n                        <option>completed</option>\r\n                        \r\n                         \r\n                      </Input>\r\n                    </FormGroup> */}\r\n                    </>\r\n\r\n                    \r\n\r\n\r\n                       \r\n                  )}\r\n\r\n\r\n        \r\n                 \r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          )}\r\n        </Col>\r\n       \r\n        </Colxx>\r\n      </Row>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobDetails;\r\n","import React from 'react';\r\n\r\nconst ShowNotifications = () => {\r\n  return <h1>ShowNotifications</h1>;\r\n};\r\n\r\nexport default ShowNotifications;\r\n","import React from 'react';\r\n\r\nimport ShowNotifications from './notifications/show-notifications';\r\nimport MyApplications from './my-applications/my-applications';\r\nimport MyDocuments from './my-documents/my-documents';\r\nimport MyDetails from './my-details/my-details';\r\n\r\nconst MyApp = () => {\r\n  return (\r\n    <div>\r\n      <ShowNotifications />\r\n      <hr />\r\n      <hr />\r\n      <MyApplications />\r\n      <hr />\r\n      <hr />\r\n      <MyDetails />\r\n      <hr />\r\n      <hr />\r\n      <MyDocuments />\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyApp;\r\n","const CategoryData = [\r\n  {\r\n    name: \"IT\",\r\n    short: \"IT\",\r\n  },\r\n  {\r\n    name: \"MANUFACTURING_MECHANICAL\",\r\n    short: \"MANUFACTURING_MECHANICAL\",\r\n  },\r\n  {\r\n    name: \"CIVIL\",\r\n    short: \"CIVIL\",\r\n  },\r\n  {\r\n    name: \"INTERVIEW_PREPARATION\",\r\n    short: \"INTERVIEW_PREPARATION\",\r\n  },\r\n  {\r\n    name: \" UNIV_ADMISSIONS\",\r\n    short: \" UNIV_ADMISSIONS\",\r\n  },\r\n  {\r\n    name: \"RESUMES_WRITTING\",\r\n    short: \"RESUMES_WRITTING,\",\r\n  },\r\n];\r\n\r\nexport default CategoryData;\r\n","/* eslint-disable no-param-reassign */\r\n\r\nimport axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { SliderTooltip } from \"components/common/SliderTooltips\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { createRef, useEffect, useState } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  InputGroup,\r\n  Jumbotron,\r\n  Label,\r\n  NavLink,\r\n  Row,\r\n  Spinner,\r\n} from \"reactstrap\";\r\n// import { FormikTagsInput } from \"containers/form-validations/FormikFields\";\r\nimport { adminRoot, baseUrl } from \"constants/defaultValues\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  validateAchievement,\r\n  validateBio,\r\n  validateCategory,\r\n  validateCompany,\r\n  validateIdentityStatus,\r\n  validateJobTitle,\r\n  validateLocation,\r\n  validateReasonForMentor,\r\n} from \"./validation\";\r\n\r\nimport indentityStatusList from \"../CommonCardList/IdentityStatusList\";\r\nimport { EmploymentTypeData } from \"../Listing/ListingData\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\nimport CategoryData from \"./CategoryData\";\r\nimport country from \"./Country\";\r\nimport language from \"./Languages\";\r\n\r\nconst currentYear = new Date().getFullYear();\r\nconst years = [];\r\nfor (let year = currentYear; year >= 2005; year -= 1) {\r\n  years.push(year);\r\n}\r\n\r\nconst ApplyMentor = () => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const steps = [\"About you\", \"profile\", \"Experience\"];\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [file1, setFile1] = useState(null);\r\n  const [amount, setAmount] = useState(500);\r\n  const [loading, setLoading] = useState(false);\r\n  const [skillsTag, setSkillsTag] = useState([]);\r\n  const [toolsTag, setToolsTag] = useState([]);\r\n  const [imageError, setImageError] = useState(false);\r\n  const [imageError1, setImageError1] = useState(false);\r\n  const [skillError, setSkillError] = useState(false);\r\n  const [imageErrorMessage, setImageErrorMessage] = useState(null);\r\n  const [imageErrorMessage1, setImageErrorMessage1] = useState(null);\r\n  const [skillErrorMessage, setSkillErrorMessage] = useState(null);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [aboutLoading, setAboutLoading] = useState(false);\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n  const [experienceLoading, setExperienceLoading] = useState(false);\r\n  const [aboutField, setAboutField] = useState({});\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [works, setWorks] = useState([\r\n    {\r\n      company: \"\",\r\n      jobTitle: \"\",\r\n      employmentType: \"\",\r\n      jobLocation: \"\",\r\n      startYear: \"\",\r\n      endYear: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleWorkInputChange = (index, field, value) => {\r\n    const updatedWorks = works.map((work, i) =>\r\n      i === index ? { ...work, [field]: value } : work\r\n    );\r\n    setWorks(updatedWorks);\r\n  };\r\n\r\n  const addWorkExperience = () => {\r\n    setWorks([\r\n      ...works,\r\n      {\r\n        company: \"\",\r\n        jobTitle: \"\",\r\n        employmentType: \"\",\r\n        jobLocation: \"\",\r\n        startYear: \"\",\r\n        endYear: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const status = localStorage.getItem(\"status\");\r\n    console.log(\"status\", status);\r\n    if (status) {\r\n      if (status === \"0\") {\r\n        setCurrentStep(0);\r\n      } else if (status === \"1\") {\r\n        setCurrentStep(1);\r\n      } else if (status === \"3\") {\r\n        setCurrentStep(2);\r\n      } else if (status === \"7\") {\r\n        setCurrentStep(3);\r\n      } else {\r\n        setCurrentStep(0);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // file upload validation\r\n  const validateFile = (file) => {\r\n    // const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\r\n    const maxSize = 2 * 1024 * 1024; // 5MB\r\n    // if (!file) {\r\n    //   setImageError(true);\r\n    //   setImageErrorMessage(\"A profile picture is required\");\r\n    //   return false;\r\n    // }\r\n    // if (!allowedTypes.includes(file.type)) {\r\n    //   setImageError(true);\r\n    //   setImageErrorMessage(\r\n    //     \"Please upload a valid image file (JPEG, PNG, or GIF)\"\r\n    //   );\r\n    //   return false;\r\n    // }\r\n    if (file && file.size > maxSize) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"File size must be less than 2MB\");\r\n      return false;\r\n    }\r\n\r\n    setImageError(false);\r\n    setImageErrorMessage(\"\");\r\n    return true;\r\n  };\r\n  // file upload validation end\r\n\r\n  const [fields] = useState({\r\n    // image: \"\",\r\n\r\n    jobTitle: \"\",\r\n    company: \"\",\r\n    location: \"\",\r\n    category: \"\",\r\n    skills: [],\r\n    bio: \"\",\r\n    // linkedinUrl: \"\",\r\n    identityStatus: \"\",\r\n    twitterHandle: \"\",\r\n    website: \"\",\r\n    introVideo: \"\",\r\n    featuredArticle: \"\",\r\n    reasonForMentor: \"\",\r\n    achievement: \"\",\r\n    experience: [\r\n      {\r\n        company: \"\",\r\n        jobTitle: \"\",\r\n        employmentType: \"\",\r\n        jobLocation: \"\",\r\n        startYear: \"\",\r\n        endYear: \"\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  // const CategoryData = [\r\n  //   \"Select Category\",\r\n  //   \"Engineering & Data\",\r\n  //   \"UX & Design\",\r\n  //   \"Business & Management\",\r\n  //   \"Product & Marketing\",\r\n  // ];\r\n  //   console.log(\"step\", currentStep);\r\n  const languageOptions = language.map((option) => ({\r\n    value: option.iso_code,\r\n    label: option.name,\r\n  }));\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setFile1(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      setImageError(false);\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        // .split(\",\")[1];\r\n        setSelectedFile(base64Image);\r\n        // setFieldValue(\"image\", base64Image);\r\n        setAboutField({ ...aboutField, image: base64Image });\r\n        // console.log(base64Image)\r\n        validateFile(file);\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const [selectedFile2, setSelectedFile2] = useState(null);\r\n\r\n  // Handle file change\r\n  const handleFileChangeResume = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const fileType = file.type;\r\n      const fileSize = file.size / 1024 / 1024; // Convert size to MB\r\n\r\n      if (fileType !== \"application/pdf\") {\r\n        // alert(\"Please upload a PDF file.\");\r\n        setImageError1(true);\r\n        setImageErrorMessage1(\"Please upload a PDF file.\");\r\n        return;\r\n      }\r\n\r\n      if (fileSize > 2) {\r\n        // alert(\"File size exceeds 2MB. Please upload a smaller file.\");\r\n        setImageError1(true);\r\n        setImageErrorMessage1(\"File size must be less than  2MB\");\r\n        return;\r\n      }\r\n\r\n      setSelectedFile2(file);\r\n      setImageError1(false);\r\n      setImageErrorMessage1(\"\");\r\n    }\r\n  };\r\n  //   const mentorAboutUrl=`${baseUrl}/api/mentor/details/about`;\r\n  //   const mentorAboutUrl=\"http://localhost:3001/acheckabout\";\r\n  const mentorAboutUrl = `${baseUrl}/api/mentor/details/about`;\r\n  const imageUploadUrl = `${baseUrl}/api/mentor/profile-image`;\r\n  const mentorProfileUrl = `${baseUrl}/api/mentor/details/profile`;\r\n  const experienceUrl = `${baseUrl}/api/mentor/details/experience`;\r\n  const mentorResumeUrl = `${baseUrl}/api/resume?role=MENTOR`;\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n  // const indentityStatusList = [\r\n  //   { value: \"IMMIGRANT\", label: \"IMMIGRANT\" },\r\n  //   { value: \"PR_CITIZEN\", label: \"PR_CITIZEN\" },\r\n  // ];\r\n\r\n  // const postDataAbout = async (data) => {\r\n  //   console.log(data);\r\n  //   setAboutLoading(true);\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"image\", file1);\r\n\r\n  //   const mentorProfile = {\r\n  //     jobTitle: data.jobTitle,\r\n  //     company: data.company,\r\n  //     location: data.location,\r\n  //     // linkedinUrl: data.linkedinUrl,\r\n  //     twitterHandle: data.twitterHandle,\r\n  //     language: data.language,\r\n  //   };\r\n  //   formData.append(\r\n  //     \"mentorProfile\",\r\n  //     new Blob([JSON.stringify(mentorProfile)], { type: \"application/json\" })\r\n  //   );\r\n  //   console.log(formData);\r\n\r\n  //   try {\r\n  //     const response = await axios.post(mentorAboutUrl, formData, {\r\n  //       headers: {\r\n  //         Authorization: `Bearer ${token}`,\r\n  //       },\r\n  //     });\r\n  //     // setNextStep(true)\r\n  //     setAboutLoading(false);\r\n  //     //   console.log(`resres ${response.status}`);\r\n  //     ToasterComponent(\"success\", response.data.statuses);\r\n  //     handleNextStep();\r\n  //     localStorage.setItem(\"status\", \"1\");\r\n  //   } catch (error) {\r\n  //     setImageError(false);\r\n  //     // console.error(error);\r\n  //     setAboutLoading(false);\r\n  //     if (error.response) {\r\n  //       error.response.data.statuses.forEach((status) => {\r\n  //         NotificationManager.error(\r\n  //           status.message,\r\n  //           \"Oops!\",\r\n  //           3000,\r\n  //           null,\r\n  //           null,\r\n  //           \"\"\r\n  //         );\r\n  //         if (status.code === 40327) {\r\n  //           setImageErrorMessage(status.message);\r\n  //           setImageError(true);\r\n  //         }\r\n  //       });\r\n  //     } else {\r\n  //       NotificationManager.error(\r\n  //         \"something went wrong\",\r\n  //         \"Oops!\",\r\n  //         3000,\r\n  //         null,\r\n  //         null,\r\n  //         \"\"\r\n  //       );\r\n  //     }\r\n  //     // console.log(\"er\",error.response.data.statuses)\r\n  //     // NotificationManager.warning(\r\n  //     //   \"Something went wrong\",\r\n  //     //   \"Oops!\",\r\n  //     //   3000,\r\n  //     //   null,\r\n  //     //   null,\r\n  //     //   \"\"\r\n  //     // );\r\n  //   }\r\n  // };\r\n  // Helper function for error handling\r\n  const handleError = (error) => {\r\n    if (error.response) {\r\n      error.response.data.statuses.forEach((status) => {\r\n        NotificationManager.error(\r\n          status.message,\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      });\r\n    } else {\r\n      NotificationManager.error(\r\n        \"Something went wrong\",\r\n        \"Oops!\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n    }\r\n  };\r\n\r\n  // const postDataAbout = async (data) => {\r\n  //   console.log(data);\r\n  //   setAboutLoading(true);\r\n\r\n  //   // Check if an image is available\r\n  //   const hasImage = file1 !== null && file1.size > 0;\r\n\r\n  //   // Create the mentor profile object\r\n  //   const mentorProfile = {\r\n  //     jobTitle: data.jobTitle,\r\n  //     company: data.company,\r\n  //     location: data.location,\r\n  //     twitterHandle: data.twitterHandle,\r\n  //     languages: data.language, // Assuming `language` is a string that should be in an array\r\n  //   };\r\n\r\n  //   try {\r\n  //     if (hasImage) {\r\n  //       // If there's an image, append it to the form data\r\n  //       const imageData = new FormData();\r\n  //       imageData.append(\"image\", file1);\r\n  //       await axios.post(imageUploadUrl, imageData, {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${token}`,\r\n  //         },\r\n  //       });\r\n\r\n  //       // After uploading the image, prepare the JSON payload\r\n  //       const response = await axios.post(mentorAboutUrl, mentorProfile, {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${token}`,\r\n  //           \"Content-Type\": \"application/json\", // Set content type to JSON\r\n  //         },\r\n  //       });\r\n\r\n  //       setAboutLoading(false);\r\n  //       ToasterComponent(\"success\", response.data.statuses);\r\n  //       handleNextStep();\r\n  //       localStorage.setItem(\"status\", \"1\");\r\n  //     }\r\n\r\n  //     else {\r\n  //       // No image, directly submit the mentor profile\r\n  //       const response = await axios.post(mentorAboutUrl, mentorProfile, {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${token}`,\r\n  //           \"Content-Type\": \"application/json\", // Set content type to JSON\r\n  //         },\r\n  //       });\r\n\r\n  //       setAboutLoading(false);\r\n  //       ToasterComponent(\"success\", response.data.statuses);\r\n  //       handleNextStep();\r\n  //       localStorage.setItem(\"status\", \"1\");\r\n  //     }\r\n  //   } catch (error) {\r\n  //     // Error handling\r\n  //     setAboutLoading(false);\r\n  //     handleError(error);\r\n  //   }\r\n  // };\r\n  const postDataAbout = async (data) => {\r\n    console.log(data);\r\n    setAboutLoading(true);\r\n\r\n    // Create the mentor profile object\r\n    const mentorProfile = {\r\n      jobTitle: data.jobTitle,\r\n      company: data.company,\r\n      location: data.location,\r\n      twitterHandle: data.twitterHandle,\r\n      identityStatus: data.identityStatus,\r\n      languages: Array.isArray(data.language) ? data.language : [data.language], // Ensure languages is always an array\r\n    };\r\n\r\n    try {\r\n      // Submit the mentor profile first\r\n      const response = await axios.post(mentorAboutUrl, mentorProfile, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      setAboutLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n\r\n      // Check if an image is available\r\n      const hasImage = file1 !== null && file1.size > 0;\r\n\r\n      if (hasImage) {\r\n        // If there's an image, append it to the form data\r\n        const imageData = new FormData();\r\n        imageData.append(\"image\", file1);\r\n        await axios.post(imageUploadUrl, imageData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n      }\r\n\r\n      // Check if a resume is available\r\n      const hasResume = selectedFile2 !== null && selectedFile2.size > 0;\r\n\r\n      if (hasResume) {\r\n        // If there's a resume, append it to the form data\r\n        const formData = new FormData();\r\n        formData.append(\"resume\", selectedFile2);\r\n        await axios.post(mentorResumeUrl, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n      }\r\n\r\n      localStorage.setItem(\"status\", \"1\");\r\n    } catch (error) {\r\n      // Error handling\r\n      setAboutLoading(false);\r\n      handleError(error);\r\n    }\r\n  };\r\n\r\n  const postDataProfile = async (data) => {\r\n    setProfileLoading(true);\r\n    try {\r\n      const response = await axios.post(mentorProfileUrl, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // setNextStep(true)\r\n      setProfileLoading(false);\r\n      //   console.log(`resres ${response.status}`);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"3\");\r\n    } catch (error) {\r\n      setSkillError(false);\r\n      setProfileLoading(false);\r\n      if (error.response) {\r\n        error.response.data.statuses.forEach((status) => {\r\n          NotificationManager.error(\r\n            status.message,\r\n            \"Oops!\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n          if (status.code === 40110) {\r\n            setSkillErrorMessage(status.message);\r\n            setSkillError(true);\r\n          }\r\n        });\r\n      } else {\r\n        NotificationManager.error(\r\n          \"something went wrong\",\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const postDataExperience = async (data) => {\r\n    setExperienceLoading(true);\r\n    const postDataExp = { ...data, price: amount, experiences: works };\r\n    try {\r\n      const response = await axios.post(experienceUrl, postDataExp, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // setNextStep(true)\r\n      // console.log(response);\r\n      setExperienceLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"7\");\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 3000);\r\n    } catch (error) {\r\n      setExperienceLoading(false);\r\n      if (error.response) {\r\n        error.response.data.statuses.forEach((status) => {\r\n          NotificationManager.error(\r\n            status.message,\r\n            \"Oops!\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n        });\r\n      } else {\r\n        NotificationManager.error(\r\n          \"something went wrong\",\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSliderChange = (value) => {\r\n    setAmount(value);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   axios.get(mentorAboutUrl).then((response) => {\r\n  //     console.log(\"reslog\", response.data);\r\n  //     // setLoading(false);\r\n  //   });\r\n  // }, [currentStep]);\r\n\r\n  const handleTagsChange = (newSkills) => {\r\n    // setSkillError(false);\r\n    setSkillsTag(newSkills);\r\n  };\r\n  const handleToolsTagsChange = (newTools) => {\r\n    setSkillError(false);\r\n    setToolsTag(newTools);\r\n  };\r\n\r\n  const history = useHistory();\r\n  const handleMySlotsClick = () =>\r\n    history.push(`${adminRoot}/calendar/mentor/appointment`);\r\n\r\n  return (\r\n    <Card className=\"mx-auto my-4 \" style={{ maxWidth: \"900px\" }}>\r\n      <CardBody className=\"wizard wizard-default\">\r\n        <h1 className=\"mt-4 font-weight-bold\">Apply as a Ment</h1>\r\n        <ul className=\"nav nav-tabs justify-content-center\">\r\n          {steps.map((stepItem, index) => (\r\n            // <li key={`topNavStep_${index}`} className={`nav-item ${index === currentStep ? 'step-doing' : ''}`}>\r\n            <li\r\n              // eslint-disable-next-line\r\n              key={`topNavStep_${index}`}\r\n              className={`nav-item ${\r\n                // eslint-disable-next-line\r\n                index === currentStep\r\n                  ? \"step-doing\"\r\n                  : index < currentStep\r\n                  ? \"step-done\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <NavLink to=\"#\" location={{}} className=\"nav-link\">\r\n                <span>{stepItem}</span>\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"wizard-basic-step\">\r\n          {currentStep === 0 && (\r\n            <Formik\r\n              innerRef={forms[0]}\r\n              initialValues={{\r\n                jobTitle: fields.jobTitle,\r\n                company: fields.company,\r\n                location: fields.location,\r\n                // linkedinUrl: fields.linkedinUrl,\r\n                twitterHandle: fields.twitterHandle,\r\n                identityStatus: fields.identityStatus,\r\n              }}\r\n              validateOnMount\r\n              // onSubmit={(values) => {\r\n              //   postDataAbout({ ...values, language: languages })\r\n              // }}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                // if (validateFile(file1)) {\r\n                //   postDataAbout({ ...values, language: languages });\r\n                // } else {\r\n                //   setSubmitting(false);\r\n                // }\r\n                postDataAbout({ ...values, language: languages });\r\n                setSubmitting(false);\r\n              }}\r\n              // onSubmit={async (values, { setSubmitting }) => {\r\n              //   try {\r\n              //     if (validateFile(file1)) {\r\n              //       const response = await postDataAbout({\r\n              //         ...values,\r\n              //         language: languages,\r\n              //       });\r\n              //       if (response.status === 200) {\r\n              //         // Move to the next step\r\n              //         setCurrentStep(1);\r\n              //       }\r\n              //     }\r\n              //   } catch (error) {\r\n              //     // Handle error case if the request fails\r\n              //     console.error(\"Error submitting form:\", error);\r\n              //   } finally {\r\n              //     setSubmitting(false);\r\n              //   }\r\n              // }}\r\n            >\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-right \">\r\n                  <Alert color=\"primary\">\r\n                    <strong>Lovely to see you!</strong>\r\n                    <br /> Filling out the form only takes a couple of minutes.\r\n                    We&apos;d love to learn more about your background and the\r\n                    ins-and-outs of why you&apos;d like to become a mentor. Keep\r\n                    things personal and talk directly to us and your mentees. We\r\n                    don&apos;t need jargon and polished cover letters here!{\" \"}\r\n                    <br />\r\n                    <br />\r\n                    You agree to our code of conduct and the mentor agreement by\r\n                    sending the form, so be sure to have a look at those.\r\n                  </Alert>\r\n                  <FormGroup>\r\n                    <Label for=\"image\">Image</Label>\r\n                    {imageError && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {imageErrorMessage}\r\n                      </div>\r\n                    )}\r\n                    <Row>\r\n                      <Col md={2} className=\"\">\r\n                        <img\r\n                          src={\r\n                            selectedFile || \"/assets/img/profiles/l-1.jpg\"\r\n                            // \"https://gogo-react.coloredstrategies.com/assets/img/profiles/l-1.jpg\"\r\n                          }\r\n                          className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                          style={{\r\n                            width: \"70px\",\r\n                            height: \"70px\",\r\n                            objectFit: \"cover\",\r\n                          }}\r\n                          alt=\"img\"\r\n                        />\r\n                      </Col>\r\n                      <Col md={5} className=\"mt-3 \">\r\n                        <InputGroup className=\"mb-3\">\r\n                          <div className=\"mt-1.5\">\r\n                            <Button\r\n                              className=\"default\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                document.getElementById(\"file-upload\").click()\r\n                              }\r\n                            >\r\n                              Upload profile pic\r\n                              <i className=\"iconsminds-upload \" />\r\n                            </Button>\r\n                            {/* <Form> */}\r\n                            <Input\r\n                              id=\"file-upload\"\r\n                              type=\"file\"\r\n                              className=\"form-control d-none\"\r\n                              onChange={handleFileChange}\r\n                            />\r\n                            {/* {errors.fileUpload && touched.fileUpload && (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.fileUpload}\r\n                              </div>\r\n                            )} */}\r\n                            {/* </Form> */}\r\n                            {file1 && (\r\n                              <p className=\"mt-2\">\r\n                                Selected file: {file1.name}\r\n                              </p>\r\n                            )}\r\n                          </div>\r\n                        </InputGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n\r\n                  <Row>\r\n                    <Col md={6}>\r\n                      <FormGroup className=\"error-l-75\">\r\n                        <Label>Job Title*</Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"jobTitle\"\r\n                          validate={validateJobTitle}\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        {errors.jobTitle && touched.jobTitle && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.jobTitle}\r\n                          </div>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <FormGroup className=\"error-l-75\">\r\n                        <Label>Company*</Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"company\"\r\n                          validate={validateCompany}\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        {errors.company && touched.company && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.company}\r\n                          </div>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md={6}>\r\n                      <FormGroup className=\"error-l-75\">\r\n                        <Label>Country*</Label>\r\n                        <Field\r\n                          as=\"select\"\r\n                          name=\"location\"\r\n                          validate={validateLocation}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option disabled value=\"\">\r\n                            Select Country\r\n                          </option>\r\n                          {country.map((option) => (\r\n                            <option\r\n                              key={option.iso_code}\r\n                              value={option.iso_code}\r\n                            >\r\n                              {option.name}\r\n                            </option>\r\n                          ))}\r\n                        </Field>\r\n                        {errors.location && touched.location && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.location}\r\n                          </div>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <Label>Identity Status*</Label>\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"identityStatus\"\r\n                        validate={validateIdentityStatus}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          Select Identity Satus\r\n                        </option>\r\n                        {indentityStatusList.map((option) => (\r\n                          <option key={option.name} value={option.name}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Field>\r\n                      {errors.identityStatus && touched.identityStatus && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.identityStatus}\r\n                        </div>\r\n                      )}\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <FormGroup className=\"error-l-125\">\r\n                    <Row>\r\n                      {/* <Col md={6}>\r\n                        <Label for=\"linkedinUrl\">LinkedIn URL*</Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          name=\"linkedinUrl\"\r\n                          type=\"url\"\r\n                          validate={validateLinkedinUrl}\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        <FormText color=\"muted\" className=\"\">\r\n                          e.g. https://www.linkedin.com/in/username/\r\n                        </FormText>\r\n                        {errors.linkedinUrl && touched.linkedinUrl && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.linkedinUrl}\r\n                          </div>\r\n                        )}\r\n                      </Col> */}\r\n                      <Col md={6}>\r\n                        <Label for=\"twitterHandle\">\r\n                          Twitter Handle (optional)\r\n                        </Label>\r\n                        <Field\r\n                          type=\"text\"\r\n                          name=\"twitterHandle\"\r\n                          id=\"twitterHandle\"\r\n                          className=\"form-control\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        <FormText color=\"muted\" className=\"\">\r\n                          Omit the &ldquo;@&rdquo; -e.g. &ldquo;dqmonn&rdquo;\r\n                        </FormText>\r\n                        {/* {errors.twitterHandle && touched.twitterHandle && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.twitterHandle}\r\n                        </div>\r\n                      )} */}\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Label>CV</Label>\r\n                        {imageError1 && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {imageErrorMessage1}\r\n                          </div>\r\n                        )}\r\n\r\n                        <InputGroup className=\"\">\r\n                          <div className=\"\">\r\n                            <Button\r\n                              className=\"default\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                document\r\n                                  .getElementById(\"file-upload-resume\")\r\n                                  .click()\r\n                              }\r\n                            >\r\n                              Upload Resume{\" \"}\r\n                              <i className=\"iconsminds-upload ml-2\" />\r\n                            </Button>\r\n                            {/* <Form> */}\r\n                            <Input\r\n                              id=\"file-upload-resume\"\r\n                              type=\"file\"\r\n                              className=\"d-none\"\r\n                              onChange={handleFileChangeResume}\r\n                              // validate={validateFile}\r\n                            />\r\n                          </div>\r\n                        </InputGroup>\r\n                        <div className=\"  my-2 \">\r\n                          {/* {selectedFile2 ? selectedFile2.name : \"\"} */}\r\n                          {selectedFile2\r\n                            ? `selected file is ${selectedFile2.name}`\r\n                            : \"\"}\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup className=\"error-l-75\">\r\n                    <Label for=\"languages\">Languages known*</Label>\r\n                    <Select\r\n                      placeholder=\"Select Languages\"\r\n                      name=\"languages\"\r\n                      isMulti\r\n                      options={languageOptions}\r\n                      // validate={validateLanguages}\r\n                      className=\"react-select\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(selectedOptions) => {\r\n                        const languagesArray = selectedOptions\r\n                          ? selectedOptions.map((option) => option.value)\r\n                          : [];\r\n                        setLanguages(languagesArray);\r\n                      }}\r\n                    >\r\n                      {/* <option disabled value=\"\">\r\n                              Select Languages\r\n                            </option>\r\n                          {language.map((option) => (\r\n                            <option key={option.iso_code} value={option.iso_code}>\r\n                              {option.name}\r\n                            </option>\r\n                          ))} */}\r\n                    </Select>\r\n                    {/* {errors.languages && touched.languages && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.languages}\r\n                          </div>\r\n                        )} */}\r\n                  </FormGroup>\r\n                  <Row>\r\n                    <Col className=\"text-center\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          aboutLoading ? \"show-spinner\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">Next</span>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          )}\r\n          {currentStep === 1 && (\r\n            <Formik\r\n              innerRef={forms[1]}\r\n              initialValues={{\r\n                category: fields.category,\r\n                skills: fields.skills,\r\n                bio: fields.bio,\r\n                // linkedinUrl: fields.linkedinUrl,\r\n                // twitterHandle: fields.twitterHandle,\r\n                website: fields.website,\r\n              }}\r\n              onSubmit={(values) => {\r\n                const profileData = {\r\n                  ...values,\r\n                  skills: skillsTag,\r\n                  tools: toolsTag,\r\n                };\r\n                postDataProfile(profileData);\r\n              }}\r\n              validateOnMount\r\n            >\r\n              {({\r\n                errors,\r\n                touched,\r\n                // values,\r\n                // setFieldValue,\r\n                // setFieldTouched,\r\n              }) => (\r\n                <Form className=\"av-tooltip tooltip-label-right\">\r\n                  <FormGroup className=\"error-l-75\">\r\n                    <Label>Category*</Label>\r\n                    <Field\r\n                      as=\"select\"\r\n                      name=\"category\"\r\n                      validate={validateCategory}\r\n                      className=\"form-control\"\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select Category\r\n                      </option>\r\n                      {CategoryData.map((option) => (\r\n                        <option key={option.short} value={option.short}>\r\n                          {option.name}\r\n                        </option>\r\n                      ))}\r\n                    </Field>\r\n                    {errors.category && touched.category && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.category}\r\n                      </div>\r\n                    )}\r\n                  </FormGroup>\r\n\r\n                  <FormGroup>\r\n                    <Label for=\"skills\">Skills*</Label>\r\n                    <TagsInput\r\n                      value={skillsTag}\r\n                      onChange={handleTagsChange}\r\n                      inputProps={{ placeholder: \"Add skills \" }}\r\n                      addOnBlur\r\n                      addKeys={[13, 188]}\r\n                    />\r\n                    {skillError && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {skillErrorMessage}\r\n                      </div>\r\n                    )}\r\n                    <FormText>Add skill and press Enter or comma </FormText>\r\n                    <FormText color=\"muted\">\r\n                      Describe your expertise to connect with mentees who have\r\n                      similar interests.\r\n                      <br />\r\n                      Comma-separated list of your skills (keep it below 10).\r\n                      Mentees will use this to find you.\r\n                    </FormText>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"tools\">Tools*</Label>\r\n                    <TagsInput\r\n                      value={toolsTag}\r\n                      onChange={handleToolsTagsChange}\r\n                      inputProps={{ placeholder: \"Add Tools \" }}\r\n                      addOnBlur\r\n                      addKeys={[13, 188]}\r\n                    />\r\n                    {skillError && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {/* {skillErrorMessage} */}\r\n                        Required\r\n                      </div>\r\n                    )}\r\n                    <FormText>Add Tools and press Enter or Comma </FormText>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup>\r\n                    <Label for=\"bio\">Bio*</Label>\r\n                    <Field\r\n                      as=\"textarea\"\r\n                      name=\"bio\"\r\n                      id=\"bio\"\r\n                      className=\"form-control\"\r\n                      validate={validateBio}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {errors.bio && touched.bio && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.bio}\r\n                      </div>\r\n                    )}\r\n                    <FormText color=\"muted\">\r\n                      Tell us (and your mentees) a little bit about yourself.\r\n                      Talk about yourself in the first person, as if you&apos;d\r\n                      directly talk to a mentee. This will be public.\r\n                    </FormText>\r\n                  </FormGroup>\r\n                  {/* <FormGroup className=\"error-l-125\">\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Label for=\"linkedinUrl\">LinkedIn URL*</Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          name=\"linkedinUrl\"\r\n                          type=\"url\"\r\n                          // validate={validateLinkedinUrl}\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        {errors.linkedinUrl && touched.linkedinUrl && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.linkedinUrl}\r\n                          </div>\r\n                        )}\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Label for=\"twitterHandle\">\r\n                          Twitter Handle (optional)\r\n                        </Label>\r\n                        <Field\r\n                          type=\"text\"\r\n                          name=\"twitterHandle\"\r\n                          id=\"twitterHandle\"\r\n                          className=\"form-control\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        <FormText color=\"muted\">\r\n                          Omit the &ldquo;@&rdquo; -e.g. &ldquo;dqmonn&rdquo;\r\n                        </FormText>\r\n                        {errors.twitterHandle && touched.twitterHandle && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.twitterHandle}\r\n                        </div>\r\n                      )}\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup> */}\r\n                  <FormGroup>\r\n                    <Label for=\"website\">Personal Website (optional)</Label>\r\n                    <Field\r\n                      type=\"url\"\r\n                      name=\"website\"\r\n                      id=\"website\"\r\n                      className=\"form-control\"\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    <FormText color=\"muted\">\r\n                      You can add your blog, GitHub profile or similar here\r\n                    </FormText>\r\n                    {/* {errors.website && touched.website && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.website}\r\n                    </div>\r\n                  )} */}\r\n                  </FormGroup>\r\n                  <Row>\r\n                    {\" \"}\r\n                    <Col>\r\n                      {\" \"}\r\n                      <Button color=\"primary\" onClick={handlePrevStep}>\r\n                        Previous\r\n                      </Button>\r\n                    </Col>\r\n                    <Col className=\"text-right\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          profileLoading ? \"show-spinner\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">Next</span>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          )}\r\n          {currentStep === 2 && (\r\n            <Formik\r\n              innerRef={forms[2]}\r\n              initialValues={{\r\n                introVideo: fields.introVideo,\r\n                featuredArticle: fields.featuredArticle,\r\n                reasonForMentor: fields.reasonForMentor,\r\n                achievement: fields.achievement,\r\n                experiences: works,\r\n              }}\r\n              onSubmit={(values) => {\r\n                postDataExperience(values);\r\n              }}\r\n              validateOnMount\r\n            >\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-right\">\r\n                  <Alert color=\"primary\">\r\n                    <strong>Almost there!</strong> <br /> You&apos;re just one\r\n                    last step away from being a mentor and connecting with\r\n                    mentees all over the world! in this step, shows off your\r\n                    accomplishments and how you can help others.\r\n                    <br />\r\n                    <br /> Many of these fields are optional, but will help us\r\n                    get better insights into your work - and therefore\r\n                    exponentially increase your chances. They also give you a\r\n                    jumpstart once you&apos;re a mentor.\r\n                  </Alert>\r\n                  {/* <FormGroup>\r\n                    <Row>\r\n                      <Col md={12}>\r\n                        <FormGroup className=\"error-l-75\">\r\n                          <Label>6 month price*</Label>\r\n\r\n                          <SliderTooltip\r\n                            min={2000}\r\n                            max={100000}\r\n                            defaultValue={500}\r\n                            className=\"mb-5\"\r\n                            step={500}\r\n                            value={amount}\r\n                            onChange={handleSliderChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md={12}>\r\n                        <FormGroup className=\"error-l-75\">\r\n                          <Label>3 month price*</Label>\r\n\r\n                          <SliderTooltip\r\n                            min={1000}\r\n                            max={100000}\r\n                            defaultValue={500}\r\n                            className=\"mb-5\"\r\n                            step={500}\r\n                            value={amount}\r\n                            onChange={handleSliderChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup> */}\r\n                  {works.map((work, index) => {\r\n                    return (\r\n                      <div key={work}>\r\n                        <Row>\r\n                          <Col md={6}>\r\n                            <FormGroup className=\"error-l-75\">\r\n                              <Label>Company Name*</Label>\r\n                              <Input\r\n                                className=\"form-control\"\r\n                                required\r\n                                name={`experiences[${index}].company`}\r\n                                value={work.company}\r\n                                onChange={(e) =>\r\n                                  handleWorkInputChange(\r\n                                    index,\r\n                                    \"company\",\r\n                                    e.target.value\r\n                                  )\r\n                                }\r\n                              />\r\n                              {errors.experiences?.[index]?.jobTitle &&\r\n                                touched.experiences?.[index]?.jobTitle && (\r\n                                  <div className=\"invalid-feedback d-block\">\r\n                                    {errors.experiences[index].company}\r\n                                  </div>\r\n                                )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={6}>\r\n                            <FormGroup>\r\n                              <Label for={`experiences[${index}].jobTitle`}>\r\n                                Job title*\r\n                              </Label>\r\n                              <Input\r\n                                name={`experiences[${index}].jobTitle`}\r\n                                id={`experiences[${index}].jobTitle`}\r\n                                required\r\n                                className=\"form-control\"\r\n                                value={work.jobTitle}\r\n                                onChange={(e) =>\r\n                                  handleWorkInputChange(\r\n                                    index,\r\n                                    \"jobTitle\",\r\n                                    e.target.value\r\n                                  )\r\n                                }\r\n                              />\r\n                              {errors.experiences?.[index]?.jobTitle &&\r\n                                touched.experiences?.[index]?.jobTitle && (\r\n                                  <div className=\"invalid-feedback d-block\">\r\n                                    {errors.experiences[index].jobTitle}\r\n                                  </div>\r\n                                )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col md={6}>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for={`experiences[${index}].employmentType`}\r\n                              >\r\n                                Employment type*\r\n                              </Label>\r\n                              <Input\r\n                                type=\"select\"\r\n                                name={`experiences[${index}].employmentType`}\r\n                                id={`experiences[${index}].employmentType`}\r\n                                className=\"form-control\"\r\n                                value={work.employmentType}\r\n                                required\r\n                                onChange={(e) =>\r\n                                  handleWorkInputChange(\r\n                                    index,\r\n                                    \"employmentType\",\r\n                                    e.target.value\r\n                                  )\r\n                                }\r\n                              >\r\n                                <option key=\"\" value=\"\" disabled>\r\n                                  Select Employment type\r\n                                </option>\r\n                                {EmploymentTypeData.map((option, i) => (\r\n                                  // eslint-disable-next-line react/no-array-index-key\r\n                                  <option key={i} value={option.label}>\r\n                                    {option.label}\r\n                                  </option>\r\n                                ))}\r\n                              </Input>\r\n\r\n                              {errors.experiences?.[index]?.employmentType &&\r\n                                touched.experiences?.[index]\r\n                                  ?.employmentType && (\r\n                                  <div className=\"invalid-feedback d-block\">\r\n                                    {errors.experiences[index].employmentType}\r\n                                  </div>\r\n                                )}\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={6}>\r\n                            <FormGroup>\r\n                              <Label for={`experiences[${index}].jobLocation`}>\r\n                                Job location*\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name={`experiences[${index}].jobLocation`}\r\n                                id={`experiences[${index}].jobLocation`}\r\n                                className=\"form-control\"\r\n                                required\r\n                                value={work.jobLocation}\r\n                                onChange={(e) =>\r\n                                  handleWorkInputChange(\r\n                                    index,\r\n                                    \"jobLocation\",\r\n                                    e.target.value\r\n                                  )\r\n                                }\r\n                                // validate={validatePackageDescription}\r\n                              />\r\n                              {errors.experiences?.[index]?.jobLocation &&\r\n                                touched.experiences?.[index]?.jobLocation && (\r\n                                  <div className=\"invalid-feedback d-block\">\r\n                                    {errors.experiences[index].jobLocation}\r\n                                  </div>\r\n                                )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <FormGroup>\r\n                              <Label for={`experiences[${index}].startDate`}>\r\n                                Start year*\r\n                              </Label>\r\n\r\n                              <Input\r\n                                type=\"select\"\r\n                                name={`experiences[${index}].startYear`}\r\n                                id={`experiences[${index}].startYear`}\r\n                                className=\"form-control\"\r\n                                value={work.startYear}\r\n                                required\r\n                                onChange={(e) =>\r\n                                  handleWorkInputChange(\r\n                                    index,\r\n                                    \"startYear\",\r\n                                    parseInt(e.target.value, 10)\r\n                                  )\r\n                                }\r\n                              >\r\n                                <option disabled value=\"\">\r\n                                  Select year\r\n                                </option>\r\n                                {years.map((yr) => (\r\n                                  <option key={yr} value={yr}>\r\n                                    {yr}\r\n                                  </option>\r\n                                ))}\r\n                              </Input>\r\n\r\n                              {errors.experiences?.[index]?.startYear &&\r\n                                touched.experiences?.[index]?.startYear && (\r\n                                  <div className=\"invalid-feedback d-block\">\r\n                                    {errors.experiences[index].startYear}\r\n                                  </div>\r\n                                )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col>\r\n                            <FormGroup>\r\n                              <Label for={`experiences[${index}].endYear`}>\r\n                                End year*\r\n                              </Label>\r\n                              <Input\r\n                                type=\"select\"\r\n                                name={`experiences[${index}].endYear`}\r\n                                id={`experiences[${index}].endYear`}\r\n                                className=\"form-control\"\r\n                                value={work.endYear}\r\n                                required\r\n                                onChange={(e) =>\r\n                                  handleWorkInputChange(\r\n                                    index,\r\n                                    \"endYear\",\r\n                                    parseInt(e.target.value, 10)\r\n                                  )\r\n                                }\r\n                                // validate={validatePackageDescription}\r\n                              >\r\n                                <option disabled value=\"\">\r\n                                  Select year\r\n                                </option>\r\n                                {years.map((yr) => (\r\n                                  <option key={yr} value={yr}>\r\n                                    {currentYear === yr ? \"Present\" : yr}\r\n                                  </option>\r\n                                ))}\r\n                              </Input>\r\n                              {errors.experiences?.[index]?.endYear &&\r\n                                touched.experiences?.[index]?.endYear && (\r\n                                  <div className=\"invalid-feedback d-block\">\r\n                                    {errors.experiences[index].endYear}\r\n                                  </div>\r\n                                )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col md={12}>\r\n                            <Card\r\n                              onClick={addWorkExperience}\r\n                              className=\"p-3 text-center my-5\"\r\n                              style={{ cursor: \"pointer\" }}\r\n                            >\r\n                              <h3 className=\"font-weight-bold text-primary\">\r\n                                + Add more work experience\r\n                              </h3>\r\n                            </Card>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    );\r\n                  })}\r\n\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md={12}>\r\n                        <FormGroup className=\"error-l-75\">\r\n                          <Label>Amount*</Label>\r\n\r\n                          <SliderTooltip\r\n                            min={500}\r\n                            max={100000}\r\n                            defaultValue={500}\r\n                            className=\"mb-5\"\r\n                            step={500}\r\n                            value={amount}\r\n                            onChange={handleSliderChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Label for=\"introVideo\">Intro Video (Optional)</Label>\r\n                        <Field\r\n                          type=\"url\"\r\n                          name=\"introVideo\"\r\n                          id=\"introVideo\"\r\n                          className=\"form-control\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        <FormText color=\"muted\">\r\n                          Add a youTube video or record a Loom for your future\r\n                          mentees\r\n                        </FormText>\r\n                        {/* {errors.introvideo && touched.introvideo && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.introvideo}\r\n                    </div>\r\n                    )} */}\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Label for=\"featuredArticle\">\r\n                          Featured Article (Optional)\r\n                        </Label>\r\n                        <Field\r\n                          type=\"url\"\r\n                          name=\"featuredArticle\"\r\n                          id=\"featuredArticle\"\r\n                          className=\"form-control\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        <FormText color=\"muted\">\r\n                          Link an interview / podcast / piece of writing you are\r\n                          proud of or were featured in.\r\n                        </FormText>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Why do you want to become a mentor?(Not publicly visible)*\r\n                    </Label>\r\n                    <Field\r\n                      as=\"textarea\"\r\n                      name=\"reasonForMentor\"\r\n                      id=\"reasonForMentor\"\r\n                      className=\"form-control\"\r\n                      validate={validateReasonForMentor}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {errors.reasonForMentor && touched.reasonForMentor && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.reasonForMentor}\r\n                      </div>\r\n                    )}\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label>\r\n                      What, in your opinion, has been your greatest achievement\r\n                      so far?(Not publicly visible)*\r\n                    </Label>\r\n                    <Field\r\n                      as=\"textarea\"\r\n                      name=\"achievement\"\r\n                      id=\"achievement\"\r\n                      className=\"form-control\"\r\n                      validate={validateAchievement}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {errors.achievement && touched.achievement && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.achievement}\r\n                      </div>\r\n                    )}\r\n                  </FormGroup>\r\n                  <Row>\r\n                    {\" \"}\r\n                    <Col>\r\n                      {\" \"}\r\n                      <Button color=\"primary\" onClick={handlePrevStep}>\r\n                        Previous\r\n                      </Button>\r\n                    </Col>\r\n                    <Col className=\"text-right\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          experienceLoading ? \"show-spinner\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">Submit</span>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          )}\r\n          {loading ? (\r\n            <div className=\"wizard-basic-step text-center pt-3\">\r\n              <Spinner color=\"primary\" className=\"mb-1\" />\r\n              <p>Submitting</p>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {currentStep === 3 && (\r\n                <Row>\r\n                  <Colxx xxs=\"12\" className=\"mb-4\">\r\n                    <Card>\r\n                      <CardBody className=\"text-center\">\r\n                        <i\r\n                          alt=\"\"\r\n                          className=\"glyph-icon iconsminds-yes text-success\"\r\n                          style={{ fontSize: \"75px\" }}\r\n                        />\r\n                        <Jumbotron className=\"text-center\">\r\n                          <h1 className=\"display-4\">Submitted Successfully!</h1>\r\n                          <p className=\"lead\">We will reach you shortly</p>\r\n                          <hr className=\"my-4\" />\r\n                          <p className=\"lead mb-0\">\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"lg\"\r\n                              onClick={() => handleMySlotsClick()}\r\n                            >\r\n                              My slots\r\n                            </Button>\r\n                          </p>\r\n                        </Jumbotron>\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Colxx>\r\n                </Row>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default injectIntl(ApplyMentor);\r\n","const validateFirstName = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter your first name\";\r\n  } else if (!/^[a-zA-Z]+$/.test(value)) {\r\n    error = \"Only alphabets are allowed\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n\r\n  return error;\r\n};\r\nfunction validateIdentityStatus(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a identity status\";\r\n  }\r\n  return error;\r\n}\r\n\r\nconst validateLastName = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter your first name\";\r\n  } else if (!/^[a-zA-Z]+$/.test(value)) {\r\n    error = \"Only alphabets are allowed\";\r\n  } else if (value.length < 1) {\r\n    error = \"Must be longer than 1 characters\";\r\n  }\r\n\r\n  return error;\r\n};\r\n\r\nconst validateEmail = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter your email address\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n    error = \"Invalid email address\";\r\n  }\r\n  return error;\r\n};\r\n\r\nconst validatePassword = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please choose a password\";\r\n  } else if (value.length < 6) {\r\n    error = \"Password must be longer than 6 characters\";\r\n  }\r\n  return error;\r\n};\r\nfunction validateCategory(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a category\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateLanguages(value) {\r\n  // let error;\r\n  // if (!value || value.length === 0) {\r\n  //    error = \"Please specify a languages\";\r\n  // } else if (value.some(tag => tag.length < 2)) {\r\n  //    error = \"Each language must be longer than 2 characters\";\r\n  // }\r\n  // return error;\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a languages\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateLocation(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a location\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateCompany(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please provide the company name\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateJobTitle(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter a job title\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\n// function validateSkills(value) {\r\n//   let error;\r\n//   if (!value) {\r\n//     error = \"Please specify a skill\";\r\n//   } else if (value.length < 2) {\r\n//       error = \"Must be longer than 2 characters\";\r\n//     }\r\n//   return error;\r\n// }\r\nfunction validateSkills(value) {\r\n  let error;\r\n  if (!value || value.length === 0) {\r\n    error = \"Please specify a skill\";\r\n  } else if (value.some((tag) => tag.length < 2)) {\r\n    error = \"Each skill must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateTopics(value) {\r\n  let error;\r\n  if (!value || value.length === 0) {\r\n    error = \"Please specify a topic\";\r\n  } else if (value.some((tag) => tag.length < 2)) {\r\n    error = \"Each topic must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateBio(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please provide a bio\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validatePackageTopic(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please provide a topic\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateAbout(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please provide a about\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\nfunction validatePackageDescription(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please provide a service descripiton\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateLinkedinUrl(value) {\r\n  let error;\r\n\r\n  if (!value) {\r\n    error = \"Please provide your LinkedIn URL\";\r\n  } else if (\r\n    !/^https?:\\/\\/(?:www\\.)?linkedin\\.com\\/(?:[a-z]{2,3}\\.)?in\\/[a-zA-Z0-9_-]+\\/?$/i.test(\r\n      value\r\n    )\r\n  ) {\r\n    error = \"Invalid LinkedIn URL format\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateReasonForMentor(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateAchievement(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\n\r\n// function validateFile(value) {\r\n//   let error;\r\n//   if (!value) {\r\n//     error = \"This field is required.\";\r\n//   }\r\n//   //  else if (![\"image/jpeg\", \"image/png\"].includes(file.type)) {\r\n//   //   error = \"Unsupported file type. Only JPEG and PNG images are allowed\";\r\n//   // }\r\n//   return error;\r\n// }\r\nfunction validateFile(value) {\r\n  let error;\r\n\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  } else {\r\n    const fileType = value.type;\r\n    if (![\"image/jpeg\", \"image/png\"].includes(fileType)) {\r\n      error = \"Unsupported file type. Only JPEG and PNG images are allowed\";\r\n    }\r\n  }\r\n\r\n  return error;\r\n}\r\nfunction validatePackageTitle(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\nfunction validatePackageAmount(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateServiceName(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateServiceDescription(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\nexport {\r\n  validateAbout,\r\n  validateAchievement,\r\n  validateBio,\r\n  validateCategory,\r\n  validateCompany,\r\n  validateEmail,\r\n  validateFile,\r\n  validateFirstName,\r\n  validateIdentityStatus,\r\n  validateJobTitle,\r\n  validateLanguages,\r\n  validateLastName,\r\n  validateLinkedinUrl,\r\n  validateLocation,\r\n  validatePackageAmount,\r\n  validatePackageDescription,\r\n  validatePackageTitle,\r\n  validatePackageTopic,\r\n  validatePassword,\r\n  validateReasonForMentor,\r\n  validateServiceDescription,\r\n  validateServiceName,\r\n  validateSkills,\r\n  validateTopics,\r\n};\r\n","/* eslint-disable no-param-reassign */\r\n\r\nimport axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { SliderTooltip } from \"components/common/SliderTooltips\";\r\nimport { adminRoot, baseUrl } from \"constants/defaultValues\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { createRef, useEffect, useState } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  InputGroup,\r\n  Jumbotron,\r\n  Label,\r\n  NavLink,\r\n  Row,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport {\r\n  validateAbout,\r\n  validateBio,\r\n  validateIdentityStatus,\r\n  validateLocation,\r\n  validatePackageDescription,\r\n  validatePackageTopic,\r\n  validateServiceName,\r\n} from \"./ValidationsPart\";\r\n\r\nimport indentityStatusList from \"../CommonCardList/IdentityStatusList\";\r\nimport country from \"../my-login/Country\";\r\nimport language from \"../my-login/Languages\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst ApplyAsLawyer = () => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const steps = [\"About you\", \"profile\", \"Services\"];\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [file1, setFile1] = useState(null);\r\n  const [topicsTag, setTopicsTag] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [AboutLoading, setAboutLoading] = useState(false);\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n  const [servicesLoading, setServicesLoading] = useState(false);\r\n  const [topicsInputValue, setTopicsInputValue] = useState(\"\");\r\n\r\n  const [aboutField, setAboutField] = useState({\r\n    image: \"\",\r\n  });\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  useEffect(() => {\r\n    const status = localStorage.getItem(\"status\");\r\n    console.log(\"status\", status);\r\n    if (status) {\r\n      if (status === \"0\") {\r\n        setCurrentStep(0);\r\n      } else if (status === \"1\") {\r\n        setCurrentStep(1);\r\n      } else if (status === \"3\") {\r\n        setCurrentStep(2);\r\n      } else if (status === \"7\") {\r\n        setCurrentStep(3);\r\n      } else {\r\n        setCurrentStep(0);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const [fields] = useState({\r\n    image: \"\",\r\n    headline: \"\",\r\n    topics: [],\r\n    serviceName: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    location: \"\",\r\n    bio: \"\",\r\n    languages: [],\r\n    about: \"\",\r\n    identityStatus: \"\",\r\n  });\r\n\r\n  // file upload validation\r\n\r\n  const [imageError, setImageError] = useState(false);\r\n  const [imageErrorMessage, setImageErrorMessage] = useState(null);\r\n  const [imageError1, setImageError1] = useState(false);\r\n  const [imageErrorMessage1, setImageErrorMessage1] = useState(null);\r\n\r\n  const validateFile = (file) => {\r\n    // const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\r\n    const maxSize = 2 * 1024 * 1024; // 5MB\r\n    if (!file) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"A profile picture is required\");\r\n      return false;\r\n    }\r\n    // if (!allowedTypes.includes(file.type)) {\r\n    //   setImageError(true);\r\n    //   setImageErrorMessage(\r\n    //     \"Please upload a valid image file (JPEG, PNG, or GIF)\"\r\n    //   );\r\n    //   return false;\r\n    // }\r\n    if (file.size > maxSize) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"File size must be less than 2MB\");\r\n      return false;\r\n    }\r\n\r\n    setImageError(false);\r\n    setImageErrorMessage(\"\");\r\n    return true;\r\n  };\r\n  // file upload validation end\r\n\r\n  const languageOptions = language.map((option) => ({\r\n    value: option.iso_code,\r\n    label: option.name,\r\n  }));\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setFile1(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        setSelectedFile(base64Image);\r\n        setAboutField({ ...aboutField, image: base64Image });\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  const [services, setServices] = useState([\r\n    { serviceName: \"\", headline: \"\", description: \"\", amount: 1000 },\r\n  ]);\r\n\r\n  const addService = () => {\r\n    setServices([\r\n      ...services,\r\n      { serviceName: \"\", headline: \"\", description: \"\", amount: 1000 },\r\n    ]);\r\n  };\r\n\r\n  const [selectedFile2, setSelectedFile2] = useState(null);\r\n\r\n  // Handle file change\r\n  // const handleFileChange2 = (event) => {\r\n  //   const file = event.target.files[0];\r\n  //   setSelectedFile2(file);\r\n  // };\r\n  const handleFileChange2 = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    if (!file) return; // No file selected\r\n\r\n    if (!(file.type === \"application/pdf\")) {\r\n      // alert(\"Please select a valid PDF file.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"Please upload a PDF file.\");\r\n      return;\r\n    }\r\n\r\n    const fileSizeMB = file.size / (1024 * 1024); // Convert bytes to MB\r\n\r\n    if (fileSizeMB > 2) {\r\n      // alert(\"File size exceeds 2MB limit.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"File size must be less than  2MB\");\r\n\r\n      return;\r\n    }\r\n\r\n    setSelectedFile2(file);\r\n    setImageError1(false);\r\n    setImageErrorMessage1(\"\");\r\n  };\r\n\r\n  const lawyerAboutUrl = `${baseUrl}/api/lawyer/about`;\r\n  const lawyerProfileUrl = `${baseUrl}/api/lawyer/profile`;\r\n  const packageUrl = `${baseUrl}/api/lawyer/services`;\r\n  const lawyerImagePostUrl = `${baseUrl}/api/lawyer/lawyer-profile-images`;\r\n  const lawyerResumePostUrl = ` ${baseUrl}/api/resume?role=LAWYER`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  const postImageData = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", file1);\r\n\r\n      await axios.post(lawyerImagePostUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // console.log(`resres ${response.status}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const postResumeData = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"resume\", selectedFile2);\r\n\r\n      await axios.post(lawyerResumePostUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // console.log(`resres ${response.status}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const postDataAbout = async (data) => {\r\n    setAboutLoading(true);\r\n    try {\r\n      const response = await axios.post(lawyerAboutUrl, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setAboutLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"1\");\r\n      // console.log(`resres ${response.status}`);\r\n    } catch (error) {\r\n      setAboutLoading(false);\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      }\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const postDataProfile = async (data) => {\r\n    setProfileLoading(true);\r\n    try {\r\n      const response = await axios.post(lawyerProfileUrl, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setProfileLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"3\");\r\n      // console.log(`resres ${response.status}`);\r\n    } catch (error) {\r\n      setProfileLoading(false);\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      }\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleTopicsTagsChange = (newTopics) => {\r\n    setTopicsTag(newTopics);\r\n  };\r\n\r\n  const handleTopicsChangeInput = (value) => {\r\n    if (value.endsWith(\",\")) {\r\n      const newTag = value.slice(0, -1).trim();\r\n      if (newTag && !topicsTag.includes(newTag)) {\r\n        setTopicsTag([...topicsTag, newTag]);\r\n      }\r\n      setTopicsInputValue(\"\");\r\n    } else {\r\n      setTopicsInputValue(value);\r\n    }\r\n  };\r\n\r\n  const handleAddTopicsTag = () => {\r\n    if (\r\n      topicsInputValue.trim() &&\r\n      !topicsTag.includes(topicsInputValue.trim())\r\n    ) {\r\n      setTopicsTag([...topicsTag, topicsInputValue.trim()]);\r\n      setTopicsInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  const removeService = (index) => {\r\n    const newServices = [...services];\r\n    newServices.splice(index, 1);\r\n    setServices(newServices);\r\n  };\r\n\r\n  const handleInputChange = (index, field, value) => {\r\n    setServices((prevServices) =>\r\n      prevServices.map((service, i) =>\r\n        i === index ? { ...service, [field]: value } : service\r\n      )\r\n    );\r\n  };\r\n  const postServices = async (services1) => {\r\n    setServicesLoading(true);\r\n    try {\r\n      const response = await axios.post(packageUrl, services1, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setServicesLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"7\");\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 3000);\r\n      // console.log(response.data);\r\n    } catch (error) {\r\n      setServicesLoading(false);\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      }\r\n      console.error(error);\r\n    }\r\n  };\r\n  const history = useHistory();\r\n\r\n  const handleJobsListClick = () => history.push(`${adminRoot}/jobslist`);\r\n  //   const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n  return (\r\n    <Card className=\"mx-auto my-4 \" style={{ maxWidth: \"900px\" }}>\r\n      <CardBody className=\"wizard wizard-default\">\r\n        <h1 className=\"mt-4 font-weight-bold\">Apply as a Lawyer</h1>\r\n        <ul className=\"nav nav-tabs justify-content-center\">\r\n          {steps.map((stepItem, index) => (\r\n            // <li key={`topNavStep_${index}`} className={`nav-item ${index === currentStep ? 'step-doing' : ''}`}>\r\n            <li\r\n              // eslint-disable-next-line\r\n              key={`topNavStep_${index}`}\r\n              className={`nav-item ${\r\n                // eslint-disable-next-line\r\n                index === currentStep\r\n                  ? \"step-doing\"\r\n                  : index < currentStep\r\n                  ? \"step-done\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <NavLink to=\"#\" location={{}} className=\"nav-link\">\r\n                <span>{stepItem}</span>\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"wizard-basic-step\">\r\n          {currentStep === 0 && (\r\n            <Formik\r\n              innerRef={forms[0]}\r\n              initialValues={{\r\n                // firstName: fields.firstName,\r\n                // lastName: fields.lastName,\r\n                location: fields.location,\r\n                languages: fields.languages,\r\n                identityStatus: fields.identityStatus,\r\n              }}\r\n              validateOnMount\r\n              onSubmit={(values) => {\r\n                if (validateFile(file1)) {\r\n                  postDataAbout(values);\r\n                  postImageData();\r\n                  postResumeData();\r\n                }\r\n\r\n                // console.log(aboutField.image);\r\n              }}\r\n            >\r\n              {({ setFieldValue, errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-right \">\r\n                  <Alert color=\"primary\">\r\n                    <strong>Lovely to see you!</strong>\r\n                    <br /> Filling out the form only takes a couple of minutes.\r\n                    We&apos;d love to learn more about your background and the\r\n                    ins-and-outs of why you&apos;d like to become a mentor. Keep\r\n                    things personal and talk directly to us and your mentees. We\r\n                    don&apos;t need jargon and polished cover letters here!{\" \"}\r\n                    <br />\r\n                    <br />\r\n                    You agree to our code of conduct and the mentor agreement by\r\n                    sending the form, so be sure to have a look at those.\r\n                  </Alert>\r\n\r\n                  <FormGroup>\r\n                    <Label for=\"image\">Image</Label>\r\n                    {imageError && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {imageErrorMessage}\r\n                      </div>\r\n                    )}\r\n                    <Row>\r\n                      <Col md={2} className=\"\">\r\n                        <img\r\n                          src={\r\n                            selectedFile || \"/assets/img/profiles/l-1.jpg\"\r\n                            // \"https://gogo-react.coloredstrategies.com/assets/img/profiles/l-1.jpg\"\r\n                          }\r\n                          className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                          style={{\r\n                            width: \"70px\",\r\n                            height: \"70px\",\r\n                            objectFit: \"cover\",\r\n                          }}\r\n                          alt=\"img\"\r\n                        />\r\n                      </Col>\r\n                      <Col md={5} className=\"mt-3 \">\r\n                        <InputGroup className=\"mb-3\">\r\n                          {errors.image && touched.image && (\r\n                            <div className=\"invalid-feedback d-block\">\r\n                              {errors.image}\r\n                            </div>\r\n                          )}\r\n                          <div className=\"mt-1.5\">\r\n                            <Button\r\n                              className=\"default\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                document.getElementById(\"file-upload\").click()\r\n                              }\r\n                            >\r\n                              Upload profile pic{\" \"}\r\n                              <i className=\"iconsminds-upload \" />\r\n                            </Button>\r\n                            {/* <Form> */}\r\n                            <Input\r\n                              id=\"file-upload\"\r\n                              type=\"file\"\r\n                              className=\"form-control d-none\"\r\n                              onChange={handleFileChange}\r\n                              validate={validateFile}\r\n                            />\r\n                            {/* </Form> */}\r\n                            {file1 && (\r\n                              <p className=\"mt-2\">\r\n                                Selected file: {file1.name}\r\n                              </p>\r\n                            )}\r\n                            {errors.image && touched.image && (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.image}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </InputGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup className=\"error-l-75\">\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Label>Location*</Label>\r\n                        <Field\r\n                          as=\"select\"\r\n                          name=\"location\"\r\n                          validate={validateLocation}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option disabled value=\"\">\r\n                            Select Location\r\n                          </option>\r\n                          {country.map((option) => (\r\n                            <option\r\n                              key={option.iso_code}\r\n                              value={option.iso_code}\r\n                            >\r\n                              {option.name}\r\n                            </option>\r\n                          ))}\r\n                        </Field>\r\n                        {errors.location && touched.location && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.location}\r\n                          </div>\r\n                        )}\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Label>Identity Status*</Label>\r\n                        <Field\r\n                          as=\"select\"\r\n                          name=\"identityStatus\"\r\n                          validate={validateIdentityStatus}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option disabled value=\"\">\r\n                            Select Identity Satus\r\n                          </option>\r\n                          {indentityStatusList.map((option) => (\r\n                            <option key={option.name} value={option.name}>\r\n                              {option.label}\r\n                            </option>\r\n                          ))}\r\n                        </Field>\r\n                        {errors.identityStatus && touched.identityStatus && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.identityStatus}\r\n                          </div>\r\n                        )}\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row className=\"my-2\">\r\n                      <Col md={6}>\r\n                        <Label>CV</Label>\r\n                        {imageError1 && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {imageErrorMessage1}\r\n                          </div>\r\n                        )}\r\n\r\n                        <InputGroup className=\"\">\r\n                          <div className=\"\">\r\n                            <Button\r\n                              className=\"default\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                document\r\n                                  .getElementById(\"file-upload-resume\")\r\n                                  .click()\r\n                              }\r\n                            >\r\n                              Upload Resume{\" \"}\r\n                              <i className=\"iconsminds-upload ml-2\" />\r\n                            </Button>\r\n                            {/* <Form> */}\r\n                            <Input\r\n                              id=\"file-upload-resume\"\r\n                              type=\"file\"\r\n                              className=\"d-none\"\r\n                              onChange={handleFileChange2}\r\n                              // validate={validateFile}\r\n                            />\r\n                          </div>\r\n                        </InputGroup>\r\n                        <div className=\"  my-2 \">\r\n                          {/* {selectedFile2 ? selectedFile2.name : \"\"} */}\r\n                          {selectedFile2\r\n                            ? `selected file is ${selectedFile2.name}`\r\n                            : \"\"}\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup className=\"error-l-75\">\r\n                    <Label>Languages known*</Label>\r\n                    <Select\r\n                      placeholder=\"Select Languages\"\r\n                      name=\"languages\"\r\n                      isMulti\r\n                      options={languageOptions}\r\n                      // validate={validateLanguages}\r\n                      className=\"react-select\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(selectedOptions) => {\r\n                        const languagesArray = selectedOptions\r\n                          ? selectedOptions.map((option) => option.value)\r\n                          : [];\r\n                        setFieldValue(\"languages\", languagesArray);\r\n                      }}\r\n                    />\r\n                    {errors.languages && touched.languages && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.languages}\r\n                      </div>\r\n                    )}\r\n                  </FormGroup>\r\n                  <Row>\r\n                    <Col className=\"text-center\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          AboutLoading ? \"show-spinner\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">Next</span>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          )}\r\n          {currentStep === 1 && (\r\n            <Formik\r\n              innerRef={forms[1]}\r\n              initialValues={{\r\n                bio: fields.bio,\r\n                about: fields.about,\r\n              }}\r\n              onSubmit={(values) => {\r\n                const profileData = { ...values, topics: topicsTag };\r\n                postDataProfile(profileData);\r\n              }}\r\n              validateOnMount\r\n            >\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-right\">\r\n                  <FormGroup>\r\n                    <Label for=\"topics\">Consulting areas*</Label>\r\n\r\n                    {/* <TagsInput\r\n                      value={topicsTag}\r\n                      onChange={handleTopicsTagsChange}\r\n                      inputProps={{ placeholder: \"Add topics \" }}\r\n                      addOnBlur\r\n                      addKeys={[188]}\r\n                    /> */}\r\n                    <TagsInput\r\n                      value={topicsTag}\r\n                      onChange={handleTopicsTagsChange}\r\n                      renderInput={({ addTag, ...inputProps }) => {\r\n                        const { onChange, value, ...other } = inputProps;\r\n                        return (\r\n                          <input\r\n                            {...other}\r\n                            value={topicsInputValue}\r\n                            onChange={(e) =>\r\n                              handleTopicsChangeInput(e.target.value)\r\n                            }\r\n                            onKeyDown={(e) => {\r\n                              if (e.key === \"Enter\") {\r\n                                handleAddTopicsTag();\r\n                                e.preventDefault();\r\n                              }\r\n                            }}\r\n                            placeholder=\"Add Consulting areas\"\r\n                          />\r\n                        );\r\n                      }}\r\n                    />\r\n                    {errors.topics && touched.topics && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.topics}\r\n                      </div>\r\n                    )}\r\n                    <FormText color=\"muted\">\r\n                      Describe your expertise to connect with Students who have\r\n                      similar interests.\r\n                      <br />\r\n                      Comma-separated list of your skills (keep it below 10).\r\n                      Students will use this to find you.\r\n                    </FormText>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"bio\">Bio*</Label>\r\n                    <Field\r\n                      name=\"bio\"\r\n                      id=\"bio\"\r\n                      className=\"form-control\"\r\n                      validate={validateBio}\r\n                    />\r\n                    {errors.bio && touched.bio && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.bio}\r\n                      </div>\r\n                    )}\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"about\">About*</Label>\r\n                    <Field\r\n                      as=\"textarea\"\r\n                      name=\"about\"\r\n                      id=\"about\"\r\n                      className=\"form-control\"\r\n                      validate={validateAbout}\r\n                    />\r\n                    {errors.about && touched.about && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.about}\r\n                      </div>\r\n                    )}\r\n                    <FormText color=\"muted\">\r\n                      Tell us (and your mentees) a little bit about yourself.\r\n                      Talk about yourself in the first person, as if you&apos;d\r\n                      directly talk to a mentee. This will be public.\r\n                    </FormText>\r\n                  </FormGroup>\r\n                  <Row>\r\n                    {\" \"}\r\n                    <Col>\r\n                      {\" \"}\r\n                      <Button color=\"primary\" onClick={handlePrevStep}>\r\n                        Previous\r\n                      </Button>\r\n                    </Col>\r\n                    <Col className=\"text-right\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          profileLoading ? \"show-spinner\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">Next</span>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          )}\r\n          {currentStep === 2 && (\r\n            <Formik\r\n              innerRef={forms[2]}\r\n              initialValues={{\r\n                services: [\r\n                  {\r\n                    serviceName: \"\",\r\n                    headline: \"\",\r\n                    description: \"\",\r\n                    amount: 1000,\r\n                  },\r\n                ],\r\n              }}\r\n              onSubmit={() => {\r\n                postServices(services);\r\n                // console.log(\"my services\", services);\r\n                // console.log(\"values\", values);\r\n              }}\r\n              validateOnMount\r\n            >\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-right my-4\">\r\n                  <Alert color=\"primary\">\r\n                    <strong>Almost there!</strong> <br /> You&apos;re just one\r\n                    last step away from being a lawyer and connecting with\r\n                    mentees all over the world! In this step, show off your\r\n                    accomplishments and how you can help others.\r\n                    <br />\r\n                    <br /> Many of these fields are optional, but will help us\r\n                    get better insights into your work - and therefore\r\n                    exponentially increase your chances. They also give you a\r\n                    jumpstart once you&apos;re a lawyer.\r\n                  </Alert>\r\n\r\n                  {services.map((service, index) => (\r\n                    // eslint-disable-next-line react/no-array-index-key\r\n                    <div key={index}>\r\n                      <div className=\"text-right\">\r\n                        {/* <Button outline className=\"icon-button\" onClick={() => removeService(index)}>\r\n                        <i className=\"simple-icon-close\" />\r\n                      </Button> */}\r\n                        {services.length > 1 && (\r\n                          <span>\r\n                            <Button\r\n                              id=\"closeButton\"\r\n                              color=\"primary\"\r\n                              outline\r\n                              className=\"icon-button\"\r\n                              onClick={() => removeService(index)}\r\n                            >\r\n                              <i className=\"iconsminds-close\" />\r\n                            </Button>\r\n                            {/* <Tooltip\r\n                            placement=\"left\"\r\n                            isOpen={tooltipOpen}\r\n                            target=\"closeButton\"\r\n                            toggle={() => setTooltipOpen(!tooltipOpen)}\r\n                          >\r\n                            <PopoverBody> Remove service</PopoverBody>\r\n                          </Tooltip> */}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Row>\r\n                        <Col md={12}>\r\n                          <FormGroup className=\"error-l-75\">\r\n                            <Label>Service Name*</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name={`services[${index}].serviceName`}\r\n                              value={service.serviceName}\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"serviceName\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              validate={validateServiceName}\r\n                            />\r\n                            {errors.services?.[index]?.serviceName &&\r\n                              touched.services?.[index]?.serviceName && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.services[index].serviceName}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col md={12}>\r\n                          <FormGroup>\r\n                            <Label for={`services[${index}].headline`}>\r\n                              Headline*\r\n                            </Label>\r\n                            <Input\r\n                              name={`services[${index}].headline`}\r\n                              id={`services[${index}].headline`}\r\n                              className=\"form-control\"\r\n                              value={service.headline}\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"headline\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              validate={validatePackageTopic}\r\n                            />\r\n                            {errors.services?.[index]?.headline &&\r\n                              touched.services?.[index]?.headline && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.services[index].headline}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col md={12}>\r\n                          <FormGroup>\r\n                            <Label for={`services[${index}].description`}>\r\n                              Description*\r\n                            </Label>\r\n                            <Input\r\n                              type=\"textarea\"\r\n                              name={`services[${index}].description`}\r\n                              id={`services[${index}].description`}\r\n                              className=\"form-control\"\r\n                              value={service.description}\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"description\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              validate={validatePackageDescription}\r\n                            />\r\n                            {errors.services?.[index]?.description &&\r\n                              touched.services?.[index]?.description && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.services[index].description}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col md={12}>\r\n                          <FormGroup className=\"error-l-75\">\r\n                            <Label>Amount*</Label>\r\n                            <SliderTooltip\r\n                              min={0}\r\n                              max={500000}\r\n                              defaultValue={service.amount}\r\n                              className=\"mb-5\"\r\n                              step={500}\r\n                              value={service.amount}\r\n                              onChange={(value) =>\r\n                                handleInputChange(index, \"amount\", value)\r\n                              }\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        {/* <Col md={12}>\r\n                      <Button color=\"primary\" className=\"my-3\" onClick={() => removeService(index)}>\r\n                        Remove Service\r\n                      </Button>\r\n                    </Col> */}\r\n                      </Row>\r\n                      <hr />\r\n                    </div>\r\n                  ))}\r\n\r\n                  {/* <Button color=\"primary\" className=\"my-5\" onClick={addService}>\r\n                    Add more services\r\n                  </Button> */}\r\n                  <Card\r\n                    onClick={addService}\r\n                    className=\"p-3 text-center my-5\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <h3 className=\"font-weight-bold text-primary\">\r\n                      + Add more services\r\n                    </h3>\r\n                  </Card>\r\n                  <Row>\r\n                    {\" \"}\r\n                    <Col>\r\n                      {\" \"}\r\n                      <Button color=\"primary\" onClick={handlePrevStep}>\r\n                        Previous\r\n                      </Button>\r\n                    </Col>\r\n                    <Col className=\"text-right\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          servicesLoading ? \"show-spinner\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">Submit</span>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          )}\r\n          {loading ? (\r\n            <div className=\"wizard-basic-step text-center pt-3\">\r\n              <Spinner color=\"primary\" className=\"mb-1\" />\r\n              <p>Submitting</p>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {currentStep === 3 && (\r\n                <Row>\r\n                  <Colxx xxs=\"12\" className=\"mb-4\">\r\n                    <Card>\r\n                      <CardBody className=\"text-center\">\r\n                        <i\r\n                          alt=\"\"\r\n                          className=\"glyph-icon iconsminds-yes text-success\"\r\n                          style={{ fontSize: \"75px\" }}\r\n                        />\r\n                        <Jumbotron className=\"text-center\">\r\n                          <h1 className=\"display-4\">Submitted Successfully!</h1>\r\n                          <p className=\"lead\">We will reach you shortly</p>\r\n                          <hr className=\"my-4\" />\r\n                          <p className=\"lead mb-0\">\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"lg\"\r\n                              onClick={() => handleJobsListClick()}\r\n                            >\r\n                              My jobs list\r\n                            </Button>\r\n                          </p>\r\n                        </Jumbotron>\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Colxx>\r\n                </Row>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default injectIntl(ApplyAsLawyer);\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { RangeTooltip } from \"components/common/SliderTooltips\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  // CustomInput,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  // FormGroup,\r\n  // Label,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport country from \"../my-login/Country\";\r\nimport language from \"../my-login/Languages\";\r\n\r\nconst LawyerCardFilter = ({\r\n  onTopicsChange,\r\n  onPriceChange,\r\n  onLocationChange,\r\n  onLanguageChange,\r\n  selectedTopics,\r\n  selectedLocation,\r\n  selectedLanguage,\r\n}) => {\r\n  const [dropdownBasicOpen, setDropdownBasicOpen] = useState(false);\r\n  const [dropdownBasicOpen1, setDropdownBasicOpen1] = useState(false);\r\n  const [dropdownBasicOpen2, setDropdownBasicOpen2] = useState(false);\r\n  const [dropdownBasicOpen3, setDropdownBasicOpen3] = useState(false);\r\n  const [priceRange, setPriceRange] = useState([500, 15000]);\r\n\r\n  const topicSearchUrl = `${baseUrl}/api/lawyer/search/lawyertopic`;\r\n\r\n  const [topicsSize, setTopicsSize] = useState(10);\r\n\r\n  const [topicsPaginationMeta, setTopicsPaginationMeta] = useState([]);\r\n\r\n  const [topicsData, setTopicsData] = useState([]);\r\n\r\n  const [topicsFetched, setTopicsFetched] = useState(false);\r\n  // const topics = [\r\n  //   \"Visas\",\r\n  //   \"Immigration\",\r\n  //   \"Accreditation\",\r\n  //   \"Rights\",\r\n  //   \"Employment\",\r\n  //   \"Work-permits\",\r\n  //   \"Housing\",\r\n  //   \"Intellectual-property\",\r\n  //   \"Dependents\",\r\n  //   \"Healthcare\"\r\n  // ]\r\n\r\n  const handleTopicsSelect = (topic) => {\r\n    onTopicsChange(topic);\r\n  };\r\n  const handleLanguageSelect = (lang) => {\r\n    onLanguageChange(lang);\r\n  };\r\n\r\n  const handleLocationSelect = (location) => {\r\n    onLocationChange(location);\r\n  };\r\n\r\n  const handleSliderChange = (value) => {\r\n    setPriceRange(value);\r\n  };\r\n  const handleAfterChange = useCallback((finalRange) => {\r\n    onPriceChange(finalRange);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [filteredCountry, setFilteredCountry] = useState(country);\r\n  const [filteredLanguage, setFilteredLanguage] = useState(language);\r\n  const [searchLanguage, setSearchLanguage] = useState(\"\");\r\n  // const [filteredTopics, setFilteredTopics] = useState(topics);\r\n  const [searchTopics, setSearchTopics] = useState(\"\");\r\n  const [viewFilters, setViewFilters] = useState(false);\r\n\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkIfMobile = () => {\r\n      setIsMobile(window.innerWidth < 992);\r\n    };\r\n\r\n    checkIfMobile();\r\n    window.addEventListener(\"resize\", checkIfMobile);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", checkIfMobile);\r\n    };\r\n  }, []);\r\n\r\n  const handleSearchChange = (event) => {\r\n    const newText = event.target.value.toLowerCase();\r\n    setSearchText(newText);\r\n    setFilteredCountry(\r\n      country.filter((c) => c.name.toLowerCase().includes(newText))\r\n    );\r\n  };\r\n\r\n  const handleSearchLanguage = (event) => {\r\n    const newText = event.target.value.toLowerCase();\r\n    setSearchLanguage(newText);\r\n    setFilteredLanguage(\r\n      language.filter((s) => s.name.toLowerCase().includes(newText))\r\n    );\r\n  };\r\n  const handleSearchTopics = (event) => {\r\n    // const newText = event.target.value.toLowerCase();\r\n    setSearchTopics(event.target.value);\r\n    // setFilteredTopics(topics.filter((t) => t.toLowerCase().includes(newText)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const FetchTopics = async () => {\r\n      const params = {};\r\n\r\n      if (searchTopics) {\r\n        params.skill = searchTopics;\r\n      }\r\n\r\n      params.size = topicsSize;\r\n      params.page = 0;\r\n      try {\r\n        const response = await axios.get(topicSearchUrl, { params });\r\n        setTopicsData(response.data.data);\r\n        setTopicsPaginationMeta(response.data.paginationMeta);\r\n        setTopicsFetched(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setTopicsFetched(false);\r\n      }\r\n    };\r\n    FetchTopics();\r\n  }, [searchTopics, topicsSize]);\r\n\r\n  const handleViewFilters = () => {\r\n    setViewFilters(!viewFilters);\r\n  };\r\n\r\n  const handleTopicsLoadMore = () => setTopicsSize(topicsSize + 5);\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"mb-4\">\r\n        <Colxx xxs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" className=\" \">\r\n          <div className=\"\">\r\n            <div className=\"d-flex flex-wrap  my-3\">\r\n              {isMobile && (\r\n                <Button\r\n                  size=\"sm\"\r\n                  color=\"primary\"\r\n                  outline\r\n                  className=\"d-block d-lg-none col-sm-12 mb-3 position-relative\"\r\n                  onClick={handleViewFilters}\r\n                >\r\n                  {viewFilters ? (\r\n                    <span>\r\n                      Close filters\r\n                      <i\r\n                        className=\"simple-icon-arrow-up mr-0 icon-right\"\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          right: \"10px\",\r\n                          top: \"50%\",\r\n                          transform: \"translateY(-50%)\",\r\n                        }}\r\n                      />\r\n                    </span>\r\n                  ) : (\r\n                    <span>\r\n                      View filters\r\n                      <i\r\n                        className=\"simple-icon-arrow-down icon-right\"\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          right: \"10px\",\r\n                          top: \"50%\",\r\n                          transform: \"translateY(-50%)\",\r\n                        }}\r\n                      />\r\n                    </span>\r\n                  )}\r\n                </Button>\r\n              )}\r\n              {(!isMobile || viewFilters) && (\r\n                <>\r\n                  <Dropdown\r\n                    isOpen={dropdownBasicOpen}\r\n                    toggle={() => setDropdownBasicOpen(!dropdownBasicOpen)}\r\n                    className=\"mb-3 col-lg-auto col-sm-12\"\r\n                  >\r\n                    <DropdownToggle\r\n                      size=\"sm\"\r\n                      caret\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"col-lg-auto col-sm-12 \"\r\n                    >\r\n                      {selectedTopics[0] ? selectedTopics : <span>Topics</span>}\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                      <div className=\"search-sm mr-1 ml-1 mb-1 align-top\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"Search topic\"\r\n                          value={searchTopics}\r\n                          onChange={handleSearchTopics}\r\n                        />\r\n                      </div>\r\n                      <PerfectScrollbar\r\n                        style={{ maxHeight: \"200px\" }}\r\n                        options={{\r\n                          suppressScrollX: true,\r\n                          wheelPropagation: false,\r\n                        }}\r\n                      >\r\n                        {selectedTopics[0] && (\r\n                          <DropdownItem\r\n                            onClick={() => handleTopicsSelect(\"\")}\r\n                            className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                          >\r\n                            <span>{selectedTopics}</span>\r\n                            <i className=\"iconsminds-close ml-auto\" />\r\n                          </DropdownItem>\r\n                        )}\r\n                        {topicsFetched && topicsData.length === 0 && (\r\n                          <Card className=\" d-flex justify-content-between align-items-center\">\r\n                            {searchTopics} was not found\r\n                          </Card>\r\n                        )}\r\n                        {!topicsFetched && (\r\n                          <Card className=\" d-flex justify-content-between align-items-center\">\r\n                            Failed to load data!\r\n                          </Card>\r\n                        )}\r\n                        {topicsData.map((t, index) => (\r\n                          <DropdownItem\r\n                            // eslint-disable-next-line react/no-array-index-key\r\n                            key={index}\r\n                            onClick={() => handleTopicsSelect(t)}\r\n                          >\r\n                            {t}\r\n                          </DropdownItem>\r\n                        ))}\r\n                        {!topicsPaginationMeta.last && topicsFetched && (\r\n                          <Card\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={handleTopicsLoadMore}\r\n                            className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                          >\r\n                            load more\r\n                          </Card>\r\n                        )}\r\n                      </PerfectScrollbar>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n\r\n                  <Dropdown\r\n                    isOpen={dropdownBasicOpen1}\r\n                    toggle={() => setDropdownBasicOpen1(!dropdownBasicOpen1)}\r\n                    className=\"mb-3 col-lg-auto col-sm-12\"\r\n                  >\r\n                    <DropdownToggle\r\n                      size=\"sm\"\r\n                      caret\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"col-lg-auto col-sm-12 \"\r\n                    >\r\n                      {selectedLanguage ? (\r\n                        language.find((l) => l.iso_code === selectedLanguage)\r\n                          ?.name\r\n                      ) : (\r\n                        <span>Languages</span>\r\n                      )}\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                      <div className=\"search-sm mr-1 ml-1 mb-1 align-top\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"Search language\"\r\n                          value={searchLanguage}\r\n                          onChange={handleSearchLanguage}\r\n                        />\r\n                      </div>\r\n                      <PerfectScrollbar\r\n                        style={{ maxHeight: \"200px\" }}\r\n                        options={{\r\n                          suppressScrollX: true,\r\n                          wheelPropagation: false,\r\n                        }}\r\n                      >\r\n                        {selectedLanguage[0] && (\r\n                          <DropdownItem\r\n                            onClick={() => handleLanguageSelect(\"\")}\r\n                            className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                          >\r\n                            <span>\r\n                              {\r\n                                language.find(\r\n                                  (c) => c.iso_code === selectedLanguage\r\n                                )?.name\r\n                              }\r\n                            </span>\r\n                            <i className=\"iconsminds-close  ml-auto\" />\r\n                          </DropdownItem>\r\n                        )}\r\n                        {filteredLanguage.map((l) => (\r\n                          <DropdownItem\r\n                            key={l.iso_code}\r\n                            onClick={() => handleLanguageSelect(l.iso_code)}\r\n                          >\r\n                            <span>{l.name}</span>\r\n                          </DropdownItem>\r\n                        ))}\r\n                      </PerfectScrollbar>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                  <Dropdown\r\n                    isOpen={dropdownBasicOpen2}\r\n                    toggle={() => setDropdownBasicOpen2(!dropdownBasicOpen2)}\r\n                    className=\"mb-3 col-lg-auto col-sm-12\"\r\n                  >\r\n                    <DropdownToggle\r\n                      size=\"sm\"\r\n                      caret\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"col-lg-auto col-sm-12 \"\r\n                    >\r\n                      Price\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                      <DropdownItem>\r\n                        {/* <SliderExamples onChange={onPriceChange} /> */}\r\n                        <Row>\r\n                          <Colxx xxs=\"12\" sm=\"12\">\r\n                            <RangeTooltip\r\n                              min={500}\r\n                              max={15000}\r\n                              className=\"mb-5\"\r\n                              defaultValue={[500, 15000]}\r\n                              allowCross={false}\r\n                              pushable={100}\r\n                              value={priceRange}\r\n                              step={500}\r\n                              onChange={handleSliderChange}\r\n                              onAfterChange={handleAfterChange}\r\n                            />\r\n                          </Colxx>\r\n                        </Row>\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                  <Dropdown\r\n                    isOpen={dropdownBasicOpen3}\r\n                    toggle={() => setDropdownBasicOpen3(!dropdownBasicOpen3)}\r\n                    className=\"mb-3 col-lg-auto col-sm-12\"\r\n                  >\r\n                    <DropdownToggle\r\n                      size=\"sm\"\r\n                      caret\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"col-lg-auto col-sm-12 \"\r\n                    >\r\n                      {selectedLocation ? (\r\n                        country.find((c) => c.iso_code === selectedLocation)\r\n                          ?.name\r\n                      ) : (\r\n                        <span>Location</span>\r\n                      )}\r\n                    </DropdownToggle>\r\n\r\n                    <DropdownMenu>\r\n                      <div className=\"search-sm mr-1 ml-1 mb-1 align-top\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"Search Country\"\r\n                          value={searchText}\r\n                          onChange={handleSearchChange}\r\n                        />\r\n                      </div>\r\n                      <PerfectScrollbar\r\n                        style={{ maxHeight: \"200px\" }}\r\n                        options={{\r\n                          suppressScrollX: true,\r\n                          wheelPropagation: false,\r\n                        }}\r\n                      >\r\n                        {selectedLocation && (\r\n                          <DropdownItem\r\n                            onClick={() => handleLocationSelect(\"\")}\r\n                            className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                          >\r\n                            <span>\r\n                              {\r\n                                country.find(\r\n                                  (c) => c.iso_code === selectedLocation\r\n                                )?.name\r\n                              }\r\n                            </span>\r\n                            <i className=\"iconsminds-close  ml-auto\" />\r\n                          </DropdownItem>\r\n                        )}\r\n                        {filteredCountry.map((c) => (\r\n                          <DropdownItem\r\n                            key={c.iso_code}\r\n                            onClick={() => handleLocationSelect(c.iso_code)}\r\n                          >\r\n                            {c.name}\r\n                          </DropdownItem>\r\n                        ))}\r\n                      </PerfectScrollbar>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n\r\n                  {/* <Dropdown\r\n                isOpen={dropdownBasicOpen4}\r\n                toggle={() => setDropdownBasicOpen4(!dropdownBasicOpen4)}\r\n                className=\"mb-5 mx-2\"\r\n              >\r\n                <DropdownToggle caret color=\"secondary\" outline>\r\n                  More Filters\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  <DropdownItem>\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </Dropdown> */}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Colxx>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LawyerCardFilter;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport Rating from \"components/common/Rating\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\nimport { Badge, Button, Card, CardBody, CardText, Row } from \"reactstrap\";\r\n// import MentorDropDown from '../mentorship/MentorDropDown';\r\nimport \"./ThumbnailImage.css\";\r\n\r\nimport LawyerCardFilter from \"./LawyerCardFilter\";\r\n\r\nconst UserCard = () => {\r\n  const [selectedTopics, setSelectedTopics] = useState([]);\r\n  const [selectedPrice, setSelectedPrice] = useState([]);\r\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\r\n  const [selectedLanguage, setSelectedLanguage] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isFirst, setIsFirst] = useState(true);\r\n  const [isLast, setIsLast] = useState(true);\r\n  const [totalPage, setTotalPage] = useState(1);\r\n\r\n  // const [searchClick, setSearchClick] = useState(\"\")\r\n  // const [searchClicked, setSearchClicked] = useState(false)\r\n\r\n  const url = `${baseUrl}/api/lawyer/lawyercards`;\r\n\r\n  const handleTopicsChange = (topics) => setSelectedTopics(topics);\r\n  const handlePriceChange = (price) => setSelectedPrice(price);\r\n  const handleLocationChange = (location) => setSelectedLocation(location);\r\n  const handleLanguageChange = (language) => setSelectedLanguage(language);\r\n\r\n  // console.log(\"selectedTopics\",selectedTopics)\r\n  // console.log(\"selectedLanguage\",selectedLanguage)\r\n  // console.log(\"selectedPrice\",selectedPrice)\r\n  // console.log(\"selectedLocation\",selectedLocation)\r\n\r\n  const [isLawyerCardFetched, setIsLawyerCardFetched] = useState(false);\r\n\r\n  const [userdetails, setUserDetails] = useState(\"\");\r\n  const [inputkey, setInputKey] = useState(\"\");\r\n  // const handleSearchByName = () => {\r\n  //   setSearchClick(inputkey);\r\n  //   // setSearchClicked(true);\r\n  // }\r\n  // const handleSearchClear = () =>{\r\n  //   setInputKey(\"\");\r\n  //   setSearchClick(\"\");\r\n  //   setSearchClicked(false);\r\n  // }\r\n  // const url=`${baseUrl}/user/cards`\r\n  // const history = useHistory();\r\n\r\n  // Backend url below\r\n  // const url =`${baseUrl}/api/lawyer`\r\n  // useEffect(()=>{\r\n  //   setIsLawyerCardFetched(false);\r\n  //   const UserList = async () => {\r\n  //     try {\r\n  //       const response = await axios.get(url);\r\n  //       setUserDetails(response.data);\r\n  //       setIsLawyerCardFetched(true);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching data:', error);\r\n  //       setIsLawyerCardFetched(true);\r\n  //     }\r\n  //   };\r\n  //   UserList();\r\n  // },[])\r\n\r\n  useEffect(() => {\r\n    setIsLawyerCardFetched(false);\r\n    const LawyerCardDetails = async () => {\r\n      // const params = {\r\n      //   company: selectedIndustry,\r\n      //   location: selectedLocation,\r\n      //   skills: selectedSkills,\r\n      // };\r\n      const params = {};\r\n\r\n      if (selectedLocation) {\r\n        params.location = selectedLocation;\r\n      }\r\n      if (selectedPrice) {\r\n        // params.price = selectedPrice;\r\n        params.minPrice = selectedPrice.at(0);\r\n        params.maxPrice = selectedPrice.at(1);\r\n      }\r\n      if (selectedLanguage) {\r\n        params.languages = selectedLanguage;\r\n      }\r\n      if (selectedTopics) {\r\n        params.topic = selectedTopics;\r\n      }\r\n      if (inputkey) {\r\n        params.firstName = inputkey;\r\n      }\r\n      params.page = currentPage - 1;\r\n      params.size = 10;\r\n      try {\r\n        const response = await axios.get(url, { params });\r\n        setUserDetails(response.data.data);\r\n        // setCurrentPage(response.data.paginationMeta.pageNumber);\r\n        setTotalPage(response.data.paginationMeta.totalPage);\r\n        setIsFirst(response.data.paginationMeta.first);\r\n        setIsLast(response.data.paginationMeta.last);\r\n        setIsLawyerCardFetched(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setIsLawyerCardFetched(true);\r\n      }\r\n    };\r\n    LawyerCardDetails();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    selectedLocation,\r\n    selectedLanguage,\r\n    selectedTopics,\r\n    currentPage,\r\n    selectedPrice,\r\n    inputkey,\r\n  ]);\r\n\r\n  const truncateBio = (bio, lineCount) => {\r\n    if (!bio) return \"\";\r\n    const words = bio.split(\" \");\r\n\r\n    const truncatedBio = words.slice(0, lineCount).join(\" \");\r\n\r\n    if (words.length > lineCount) {\r\n      return `${truncatedBio}...`;\r\n    }\r\n    return truncatedBio;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n        <div>\r\n          <div className=\"\">\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group\">\r\n                {/* <input\r\n            type=\"text\"\r\n            className=\"form-control rounded col-12 col-lg-8 col-md-8 py-2\"\r\n            placeholder='Search by name'\r\n            // disabled={searchClicked}\r\n            value={inputkey}\r\n            onChange={(e) =>setInputKey(e.target.value)}\r\n          /> */}\r\n                <div\r\n                  style={{ position: \"relative\" }}\r\n                  className=\"col-12 col-lg-7 col-md-7\"\r\n                >\r\n                  <i\r\n                    className=\"simple-icon-magnifier mr-3\"\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: \"50%\",\r\n                      right: \"15px\",\r\n                      transform: \"translateY(-50%)\",\r\n                      zIndex: 2,\r\n                      color: \"#aaa\",\r\n                    }}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control rounded py-2\"\r\n                    placeholder=\"Search by name\"\r\n                    value={inputkey}\r\n                    onChange={(e) => setInputKey(e.target.value)}\r\n                    style={{ paddingRight: \"2.5rem\" }}\r\n                  />\r\n                </div>\r\n\r\n                {/* {!searchClicked ? (\r\n      \r\n          <Button disabled={!inputkey} className='ml-3 ' color='primary' onClick={() => handleSearchByName()} >Search</Button> ) : (\r\n          <Button className='ml-3 ' onClick={() => handleSearchClear()} color='primary' >Clear</Button>\r\n        )} */}\r\n              </div>\r\n\r\n              <LawyerCardFilter\r\n                onTopicsChange={handleTopicsChange}\r\n                onPriceChange={handlePriceChange}\r\n                onLocationChange={handleLocationChange}\r\n                onLanguageChange={handleLanguageChange}\r\n                selectedTopics={selectedTopics}\r\n                selectedLocation={selectedLocation}\r\n                selectedLanguage={selectedLanguage}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Colxx>\r\n      {!isLawyerCardFetched ? (\r\n        <div className=\"loading\" />\r\n      ) : (\r\n        <>\r\n          {userdetails.length === 0 ? (\r\n            <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n              <Card>\r\n                <CardBody>\r\n                  <h2 className=\"text-center text-large \">No Lawyers</h2>\r\n                </CardBody>\r\n              </Card>\r\n            </Colxx>\r\n          ) : (\r\n            userdetails.map((users) => {\r\n              return (\r\n                <Colxx xxs=\"12\" key={users.id}>\r\n                  <Row>\r\n                    <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto\">\r\n                      <Card\r\n                        className=\"flex-row flex-wrap flex-sm-nowrap listing-card-container my-3 p-3\"\r\n                        style={{ gap: \"16px\" }}\r\n                      >\r\n                        {/* <Col md={5} lg={5}> */}\r\n                        <div className=\"d-block lawyer-card-img-container\">\r\n                          {users.imageUrl === null ? (\r\n                            <div\r\n                              className=\"card-img-left bg-primary \r\n               d-flex align-items-center justify-content-center\"\r\n                              style={{\r\n                                width: \"200px\",\r\n                                // width: \"150px\",\r\n                                height: \"250px\",\r\n                                // height: \"250px\",\r\n                                borderRadius: \"0.75rem\",\r\n                              }}\r\n                            >\r\n                              <ThumbnailLetters\r\n                                rounded\r\n                                text={users.firstName}\r\n                                className=\"text-xlarge border border-1\"\r\n                                style={{\r\n                                  textAlign: \"center\",\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          ) : (\r\n                            <img\r\n                              className=\"lawyer-card-width\"\r\n                              src={`${baseUrl}/${users.imageUrl}`}\r\n                              alt=\"Card\"\r\n                            />\r\n                          )}\r\n                          {/* <img src=\"/assets/img/profiles/1.jpg\" alt='card' className='card-img-left'/> */}\r\n                        </div>\r\n                        {/* <div className=\"my-5  \">\r\n                              <CardText className=\"text-primary \">\r\n                                <span className=\"text-xlarge font-weight-semibold\">\r\n                                  ₹{Math.floor(users.price).toLocaleString()}\r\n                                </span>\r\n                              </CardText>\r\n                            </div>\r\n                          </div> */}\r\n                        {/* </Col> */}\r\n                        {/* <Col md={7} lg={7}> */}\r\n                        {/* <div className=\" d-flex align-items-center\"> */}\r\n                        <CardBody className=\"d-flex flex-column flex-fill p-0\">\r\n                          {/* <div className=\"min-width-zero\"> */}\r\n                          {/* <CardText className=\" font-weight-semibold text-xlarge mb-4\">\r\n                     {users.firstName} {users.lastName}\r\n                    </CardText> */}\r\n                          <div\r\n                            className=\"d-flex flex-wrap justify-content-between mb-1\"\r\n                            style={{ columnGap: \"24px\" }}\r\n                          >\r\n                            <div\r\n                              className=\"d-flex flex-wrap\"\r\n                              style={{ gap: \"10px\" }}\r\n                            >\r\n                              <div className=\"font-weight-semibold text-xlarge text-capitalize\">\r\n                                {users.firstName}\r\n                              </div>\r\n                              <div className=\"font-weight-semibold text-xlarge text-capitalize\">\r\n                                {users.lastName}\r\n                              </div>\r\n                            </div>\r\n                            {/* <CardText className=\" text-one mb-2 text-primary\">\r\n                     {users.company}\r\n                    </CardText> */}\r\n                            <CardText\r\n                              className=\"text-one d-flex flex-wrap align-items-center\"\r\n                              style={{ gap: \"4px\" }}\r\n                            >\r\n                              <span className=\"font-weight-semibold\">\r\n                                <Rating\r\n                                  total={5}\r\n                                  rating={users.star}\r\n                                  interactive={false}\r\n                                />\r\n                              </span>\r\n                              <span className=\"font-weight-semibold\">\r\n                                {users.star}\r\n                              </span>\r\n                              <span> ({users.ratings} reviews)</span>\r\n                            </CardText>\r\n                          </div>\r\n                          {/* <div className=\"d-flex\" style={{ gap: \"8px\" }}>\r\n                            <CardText className=\"text-one text-muted mb-2\">\r\n                              {users.jobTitle}\r\n                            </CardText>\r\n                            <div>|</div>\r\n                            <CardText className=\"text-one text-primary mb-2\">\r\n                              {users.company}\r\n                            </CardText>\r\n                          </div> */}\r\n                          <CardText\r\n                            className=\"text-one mb-2\"\r\n                            style={{ maxHeight: \"62px\", overflow: \"hidden\" }}\r\n                          >\r\n                            {truncateBio(users.bio, 20)}\r\n                          </CardText>\r\n                          <CardText className=\"d-flex flex-wrap\">\r\n                            {users.topic &&\r\n                              users.topic.slice(0, 3).map((skill) => (\r\n                                <div\r\n                                  key={skill}\r\n                                  className=\"pr-2\"\r\n                                  id=\"btn.rounded\"\r\n                                >\r\n                                  <Badge color=\"light\">{skill}</Badge>\r\n                                </div>\r\n                              ))}\r\n                          </CardText>\r\n\r\n                          <div\r\n                            className=\"d-flex justify-content-between align-items-center mt-auto flex-wrap\"\r\n                            style={{ columnGap: \"24px\" }}\r\n                          >\r\n                            {/* <NavLink href={`/app/mentorprofile/${users.id}`}>\r\n                       <Button color=\"primary \" className=\"default w-80 py-2  rounded\" >\r\n                        View Profile\r\n              </Button>\r\n              </NavLink> */}\r\n                            {/* <NavLink href={`/app/lawyerprofile/${users.id}`}>\r\n              <Button color=\"primary \" className=\"default w-80 py-2  rounded\" >\r\n                        View Profile\r\n              </Button>\r\n              </NavLink> */}\r\n                            <div className=\"text-primary\">\r\n                              <span className=\"text-xlarge font-weight-semibold\">\r\n                                ₹{Math.floor(users.price).toLocaleString()}\r\n                              </span>\r\n                            </div>\r\n                            {/* <Button\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                history.push(`/app/lawyerprofile/${users.id}`)\r\n                              }\r\n                              className=\"rounded\"\r\n                            >\r\n                              View Profile\r\n                            </Button> */}\r\n                            <a\r\n                              href={`/app/lawyerprofile/${users.id}`}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                            >\r\n                              <Button color=\"primary\" className=\"rounded\">\r\n                                View Profile\r\n                              </Button>\r\n                            </a>\r\n                          </div>\r\n                        </CardBody>\r\n                        {/* </div> */}\r\n                        {/* </Col> */}\r\n                      </Card>\r\n                    </Colxx>\r\n                  </Row>\r\n                </Colxx>\r\n              );\r\n            })\r\n          )}\r\n        </>\r\n      )}\r\n      {isLawyerCardFetched && (\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPage={totalPage}\r\n          onChangePage={(i) => setCurrentPage(i)}\r\n          lastIsActive={isFirst}\r\n          firstIsActive={isLast}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { useState ,useEffect} from 'react';\r\nimport { adminRoot, baseUrl } from 'constants/defaultValues';\r\nimport axios from 'axios';\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  Nav,\r\n  NavItem,\r\n  TabContent,\r\n  TabPane,\r\n  Col,\r\n  Button,\r\n \r\n} from 'reactstrap';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\n\r\nimport classnames from 'classnames';\r\n// import IntlMessages from 'helpers/IntlMessages';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\n\r\n\r\nconst LawyerTabCard = ({pid, handlePurchase, userId}) => {\r\n  const [activeFirstTab, setActiveFirstTab] = useState('1');\r\n  const [packages,setPackages]=useState('');\r\n  // const packageURL=`${baseUrl}/lawyerPackages`;\r\n  \r\n  // backend url \r\n// console.log(\"ck\",userId)\r\n// console.log(\"pk\",pid)\r\n\r\n    const packageURL=`${baseUrl}/api/lawyer/${pid}/package`\r\n  useEffect(()=>{\r\n   \r\n   \r\n  const LawyerPackage=async()=>{\r\n    console.log(pid);\r\n    try {\r\n        const response = await axios.get(packageURL);\r\n        const fetchedPackages = response.data;\r\n        setPackages(fetchedPackages);\r\n        \r\n\r\n        if (fetchedPackages.length > 0) {\r\n          setActiveFirstTab(fetchedPackages[0].id);\r\n        }\r\n       \r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n}\r\nLawyerPackage();\r\n},[])\r\n//   const [activeSecondTab, setActiveSecondTab] = useState('1');\r\nconst history = useHistory()\r\nconst handleChatClick = () => {\r\n    history.push(`${adminRoot}/chat/${userId}`);\r\n}\r\nconst role = localStorage.getItem(\"roleRes\")\r\n\r\n  return (\r\n    // <Row>\r\n    //   <Colxx xxs=\"12\">\r\n       \r\n    //     <Row>\r\n    //       <Colxx xxs=\"12\" xs=\"6\" lg=\"10\">\r\n    //         <Card className=\"mb-4 \">\r\n    //           <CardHeader>\r\n    //             <Nav tabs className=\"card-header-tabs \">\r\n    //               <NavItem>\r\n    //                 <NavLink\r\n    //                   to=\"#\"\r\n    //                   location={{}}\r\n    //                   className={classnames({\r\n    //                     active: activeFirstTab === '1',\r\n    //                     'nav-link': true,\r\n    //                   })}\r\n    //                   onClick={() => {\r\n    //                     setActiveFirstTab('1');\r\n    //                   }}\r\n    //                 >\r\n    //                   Basic\r\n    //                 </NavLink>\r\n    //               </NavItem>\r\n    //               <NavItem>\r\n    //                 <NavLink\r\n    //                   to=\"#\"\r\n    //                   location={{}}\r\n    //                   className={classnames({\r\n    //                     active: activeFirstTab === '2',\r\n    //                     'nav-link': true,\r\n    //                   })}\r\n    //                   onClick={() => {\r\n    //                     setActiveFirstTab('2');\r\n    //                   }}\r\n    //                 >\r\n    //                   Standard\r\n    //                 </NavLink>\r\n    //               </NavItem>\r\n    //               <NavItem>\r\n    //                 <NavLink\r\n    //                   to=\"#\"\r\n    //                   location={{}}\r\n    //                   className={classnames({\r\n    //                     active: activeFirstTab === '3',\r\n    //                     'nav-link': true,\r\n    //                   })}\r\n    //                   onClick={() => {\r\n    //                     setActiveFirstTab('3');\r\n    //                   }}\r\n    //                 >\r\n    //                   Premium\r\n    //                 </NavLink>\r\n    //               </NavItem>\r\n    //               <NavItem>\r\n    //                 <NavLink\r\n    //                   to=\"#\"\r\n    //                   location={{}}\r\n    //                   className={classnames({\r\n    //                     active: activeFirstTab === '4',\r\n    //                     'nav-link': true,\r\n    //                   })}\r\n    //                   onClick={() => {\r\n    //                     setActiveFirstTab('4');\r\n    //                   }}\r\n    //                 >\r\n    //                   Premium1\r\n    //                 </NavLink>\r\n    //               </NavItem>\r\n    //               <NavItem>\r\n    //                 <NavLink\r\n    //                   to=\"#\"\r\n    //                   location={{}}\r\n    //                   className={classnames({\r\n    //                     active: activeFirstTab === '5',\r\n    //                     'nav-link': true,\r\n    //                   })}\r\n    //                   onClick={() => {\r\n    //                     setActiveFirstTab('5');\r\n    //                   }}\r\n    //                 >\r\n    //                   Premium2\r\n    //                 </NavLink>\r\n    //               </NavItem>\r\n    //             </Nav>\r\n    //           </CardHeader>\r\n\r\n    //           <TabContent activeTab={activeFirstTab}>\r\n    //             <TabPane tabId=\"1\">\r\n    //               <Row>\r\n    //                 <Colxx sm=\"12\">\r\n    //                   <CardBody>\r\n    //                     <CardTitle className=\"mb-4\">\r\n    //                       <h2>₹4500</h2>\r\n    //                       <h5>Basic package</h5>\r\n    //                     </CardTitle>\r\n                       \r\n    //                   </CardBody>\r\n    //                 </Colxx>\r\n    //               </Row>\r\n    //             </TabPane>\r\n    //             <TabPane tabId=\"2\">\r\n    //               <Row>\r\n    //                 <Colxx sm=\"12\">\r\n    //                   <CardBody>\r\n    //                     <CardTitle className=\"mb-4\">\r\n    //                     <h2>₹8500</h2>\r\n    //                       <h5>Standard package</h5>\r\n    //                     </CardTitle>\r\n                       \r\n    //                   </CardBody>\r\n    //                 </Colxx>\r\n    //               </Row>\r\n    //             </TabPane>\r\n    //             <TabPane tabId=\"3\">\r\n    //               <Row>\r\n    //                 <Colxx sm=\"12\">\r\n    //                   <CardBody>\r\n    //                     <CardTitle className=\"mb-4\">\r\n    //                     <h2>₹12500</h2>\r\n    //                       <h5>Premium package</h5>\r\n    //                     </CardTitle>\r\n                       \r\n    //                   </CardBody>\r\n    //                 </Colxx>\r\n    //               </Row>\r\n    //             </TabPane>\r\n    //             <TabPane tabId=\"4\">\r\n    //               <Row>\r\n    //                 <Colxx sm=\"12\">\r\n    //                   <CardBody>\r\n    //                     <CardTitle className=\"mb-4\">\r\n    //                     <h2>₹12500</h2>\r\n    //                       <h5>Premium package 1</h5>\r\n    //                     </CardTitle>\r\n                       \r\n    //                   </CardBody>\r\n    //                 </Colxx>\r\n    //               </Row>\r\n    //             </TabPane>\r\n    //             <TabPane tabId=\"5\">\r\n    //               <Row>\r\n    //                 <Colxx sm=\"12\">\r\n    //                   <CardBody>\r\n    //                     <CardTitle className=\"mb-4\">\r\n    //                     <h2>₹15500</h2>\r\n    //                       <h5>Premium package 2</h5>\r\n    //                     </CardTitle>\r\n                       \r\n    //                   </CardBody>\r\n    //                 </Colxx>\r\n    //               </Row>\r\n    //             </TabPane>\r\n    //           </TabContent>\r\n    //         </Card>\r\n    //       </Colxx>\r\n\r\n    //       {/* <Colxx xxs=\"12\" xs=\"6\" lg=\"3\">\r\n    //         <Card className=\"mb-4\">\r\n    //           <CardHeader className=\"pl-0 pr-0\">\r\n    //             <Nav tabs className=\" card-header-tabs  ml-0 mr-0\">\r\n    //               <NavItem className=\"w-50 text-center\">\r\n    //                 <NavLink\r\n    //                   to=\"#\"\r\n    //                   location={{}}\r\n    //                   className={classnames({\r\n    //                     active: activeSecondTab === '1',\r\n    //                     'nav-link': true,\r\n    //                   })}\r\n    //                   onClick={() => {\r\n    //                     setActiveSecondTab('1');\r\n    //                   }}\r\n    //                 >\r\n    //                   Tab 1\r\n    //                 </NavLink>\r\n    //               </NavItem>\r\n    //               <NavItem className=\"w-50 text-center\">\r\n    //                 <NavLink\r\n    //                   to=\"#\"\r\n    //                   location={{}}\r\n    //                   className={classnames({\r\n    //                     active: activeSecondTab === '2',\r\n    //                     'nav-link': true,\r\n    //                   })}\r\n    //                   onClick={() => {\r\n    //                     setActiveSecondTab('2');\r\n    //                   }}\r\n    //                 >\r\n    //                   Tab 2\r\n    //                 </NavLink>\r\n    //               </NavItem>\r\n    //             </Nav>\r\n    //           </CardHeader>\r\n\r\n    //           <TabContent activeTab={activeSecondTab}>\r\n    //             <TabPane tabId=\"1\">\r\n    //               <Row>\r\n    //                 <Colxx sm=\"12\">\r\n    //                   <CardBody>\r\n    //                     <CardTitle className=\"mb-4\">\r\n    //                       Homemade Cheesecake with Fresh Berries and Mint\r\n    //                     </CardTitle>\r\n    //                     <Button outline size=\"sm\" color=\"primary\">\r\n    //                       Edit\r\n    //                     </Button>\r\n    //                   </CardBody>\r\n    //                 </Colxx>\r\n    //               </Row>\r\n    //             </TabPane>\r\n    //             <TabPane tabId=\"2\">\r\n    //               <Row>\r\n    //                 <Colxx sm=\"12\">\r\n    //                   <CardBody>\r\n    //                     <CardTitle className=\"mb-4\">\r\n    //                       Wedding Cake with Flowers Macarons and Blueberries\r\n    //                     </CardTitle>\r\n    //                     <Button outline size=\"sm\" color=\"primary\">\r\n    //                       Edit\r\n    //                     </Button>\r\n    //                   </CardBody>\r\n    //                 </Colxx>\r\n    //               </Row>\r\n    //             </TabPane>\r\n    //             <TabPane tabId=\"3\">\r\n    //               <Row>\r\n    //                 <Colxx sm=\"12\">\r\n    //                   <CardBody>\r\n    //                     <CardTitle className=\"mb-4\">\r\n    //                       Cheesecake with Chocolate Cookies and Cream Biscuits\r\n    //                     </CardTitle>\r\n    //                     <Button outline size=\"sm\" color=\"primary\">\r\n    //                       Edit\r\n    //                     </Button>\r\n    //                   </CardBody>\r\n    //                 </Colxx>\r\n    //               </Row>\r\n    //             </TabPane>\r\n    //           </TabContent>\r\n    //         </Card>\r\n    //       </Colxx> */}\r\n    //     </Row>\r\n    //   </Colxx>\r\n    // </Row>\r\n    <Row>\r\n    <Colxx xxs=\"12\">\r\n      <Row>\r\n        <Colxx xxs=\"12\" xs=\"10\" lg=\"10\">\r\n          <Card className=\"mb-4\">\r\n            <CardHeader>\r\n              <Nav tabs className=\"card-header-tabs\">\r\n                {packages&&packages.map((pack) => (\r\n                  <NavItem key={pack.id}>\r\n                    <NavLink\r\n                      to=\"#\"\r\n                      location={{}}\r\n                      className={classnames({\r\n                        active: activeFirstTab === pack.id,\r\n                        'nav-link': true,\r\n                      })}\r\n                      onClick={() => {\r\n                        setActiveFirstTab(pack.id);\r\n                      }}\r\n                    >\r\n                     <h6>{pack.serviceName}</h6> \r\n                    </NavLink>\r\n                  </NavItem>\r\n                ))}\r\n              </Nav>\r\n            </CardHeader>\r\n\r\n            <TabContent activeTab={activeFirstTab}>\r\n              {packages&&packages.map((pack) => (\r\n                <TabPane key={pack.id} tabId={pack.id}>\r\n                  <Row>\r\n                    <Col sm=\"12\">\r\n                      <CardBody>\r\n                        <CardTitle className=\"mb-4\">\r\n                          <h2>₹{Math.floor(pack.amount).toLocaleString()}</h2>\r\n                          <h5>{pack.serviceName}</h5>\r\n                          <p className='text-muted'>{pack.description}</p>\r\n                          <div className='d-flex '>\r\n                            {role.includes(\"USER\") && (\r\n                              <>\r\n                          <Button className=' text-one'  outline color='primary' onClick={handleChatClick} >Contact</Button>\r\n                            \r\n                          <Button color='primary' className='text-one ml-2'  onClick={() => handlePurchase(pack)}>Purchase</Button>\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                         \r\n                          \r\n                        </CardTitle>\r\n                      </CardBody>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n              ))}\r\n            </TabContent>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n    </Colxx>\r\n  </Row>\r\n  );\r\n};\r\n\r\nexport default LawyerTabCard;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\n// import Rating from 'components/common/Rating';\r\nimport { adminRoot, baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Card, CardBody, Col, NavLink, Row } from \"reactstrap\";\r\n// import data from 'data/profileStatuses';\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport ReviewsComponent from \"../Reviews/ReviewsComponent\";\r\nimport country from \"../my-login/Country\";\r\nimport LawyerTabCard from \"./LawyerTabCard\";\r\n\r\nconst LawyerProfile = () => {\r\n  const { pid } = useParams();\r\n  const history = useHistory();\r\n  const [lawyerprofile, setLawyerProfile] = useState(\"\");\r\n  // const[reviews,setReviews]=useState('');\r\n  const [packages, setPackages] = useState(\"\");\r\n  const [showAll, setShowAll] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  // const [isFixed, setIsFixed] = useState(false);\r\n  const toggleShowAll = () => {\r\n    setShowAll(!showAll);\r\n  };\r\n\r\n  const handlePurchase = (pack) => {\r\n    history.push(`/app/lawyer/payment`, {\r\n      firstName: lawyerprofile.firstName,\r\n      lastName: lawyerprofile.lastName,\r\n      serviceName: pack.serviceName,\r\n      amount: pack.amount,\r\n      packageId: pack.id,\r\n      lawyerId: lawyerprofile.id,\r\n    });\r\n  };\r\n\r\n  // const url=`${baseUrl}/lawyerProfile/${pid}`;\r\n\r\n  // backend lawyerprofile url\r\n\r\n  const url = `${baseUrl}/api/lawyer/${pid}`;\r\n\r\n  // const reviewURL=`${baseUrl}/lawyerReviews`;\r\n  // backend  url\r\n  // const reviewURL=`${baseUrl}/api/law/rating/${pid}`;\r\n\r\n  // const packageURL=`${baseUrl}/lawyerPackages`;\r\n  // backend url\r\n\r\n  const packageURL = `${baseUrl}/api/lawyer/${pid}/package`;\r\n  useEffect(() => {\r\n    const ProfileLawyer = async () => {\r\n      try {\r\n        const response = await axios.get(url);\r\n        setLawyerProfile(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    ProfileLawyer();\r\n\r\n    const LawyerPackage = async () => {\r\n      try {\r\n        const response = await axios.get(packageURL);\r\n        setPackages(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    LawyerPackage();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (showAll) {\r\n      // Scroll to the skills section when showAll becomes true\r\n      document.getElementById(\"skillsSection\").scrollIntoView();\r\n    }\r\n  }, [showAll]);\r\n\r\n  // const status=5;\r\n\r\n  const remainingSkillsCount = lawyerprofile.topic\r\n    ? lawyerprofile.topic.length - 3\r\n    : 0;\r\n\r\n  const handleChatClick = () => {\r\n    history.push(`${adminRoot}/chat/${lawyerprofile.chatUserName}`);\r\n  };\r\n  const role = localStorage.getItem(\"roleRes\");\r\n  const countryName = country.find(\r\n    (c) => c.iso_code === lawyerprofile.location\r\n  )?.name;\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <div className=\"loading\" />\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <div className=\"w-100 py-3 position-relative bg-primary d-flex justify-content-between align-items-center\">\r\n              <div className=\" \">\r\n                {/* <img src=\"/assets/img/profiles/2.jpg\" className=' col-2 mx-2 w-60\r\n             rounded-circle img-thumbnail border    ' alt=\"\" /> */}\r\n                {/* <img src={lawyerprofile.image} className=' col-2 mx-2 w-60\r\n             rounded-circle img-thumbnail border    ' alt=\"\" /> */}\r\n\r\n                {lawyerprofile.imageUrl === null ? (\r\n                  <div className=\"\">\r\n                    <ThumbnailLetters\r\n                      rounded\r\n                      small\r\n                      text={lawyerprofile.firstName}\r\n                      className=\"border border-1 mx-2\"\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <img\r\n                    // src={lawyerprofile.image}\r\n                    src={`${baseUrl}/${lawyerprofile.imageUrl}`}\r\n                    // className='col-2 col-sm-4 col-xs-4  mx-2 mx-sm-2 w-100 col-lg-2 col-xl-2 rounded-circle img-thumbnail border'\r\n                    className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                    alt=\"\"\r\n                    style={{\r\n                      width: \"110px\",\r\n                      height: \"110px\",\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                {role.includes(\"USER\") && (\r\n                  <NavLink>\r\n                    <Button\r\n                      onClick={handleChatClick}\r\n                      color=\"light\"\r\n                      className=\" font-weight-semibold mx-2 \"\r\n                      size=\"large\"\r\n                    >\r\n                      <span className=\"font-weight-semibold text-primary text-one\">\r\n                        Contact\r\n                      </span>\r\n                    </Button>\r\n                  </NavLink>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Row>\r\n            <Colxx lg={6}>\r\n              <div className=\" mt-4\">\r\n                <h1 className=\"font-weight-semibold text-xlarge\">\r\n                  {lawyerprofile.firstName} {lawyerprofile.lastName}\r\n                </h1>\r\n                {/* <h1 className='font-weight-semibold text-xlarge'>{mentorprofiledetails1.firstName} {mentorprofiledetails1.lastName}</h1> */}\r\n                <h3 className=\"text-large  text-muted  \">\r\n                  {lawyerprofile.jobTitle}\r\n                </h3>\r\n                <h2 className=\"text-one  text-primary\">\r\n                  {lawyerprofile.company}\r\n                </h2>\r\n\r\n                <p className=\"text-one font-weight-medium text-primary \">\r\n                  {lawyerprofile.bio}\r\n                </p>\r\n\r\n                <h5 className=\"font-weight-medium\">\r\n                  <i className=\"simple-icon-location-pin text-primary\" />\r\n                  <span className=\"ml-2\">{countryName}</span>\r\n                </h5>\r\n                <h6 className=\"\">\r\n                  <i className=\"simple-icon-star text-primary \" />\r\n                  <span className=\"ml-2\">\r\n                    {lawyerprofile.star} ({lawyerprofile.ratings} reviews)\r\n                  </span>\r\n                </h6>\r\n                {/* <h6 className=''><i className='simple-icon-clock text-primary'/><span className='ml-2'>Last Seen</span></h6> */}\r\n              </div>\r\n\r\n              <div className=\" mt-4\">\r\n                <h2 className=\"\">Consulting areas</h2>\r\n\r\n                <div className=\"d-flex align-items-center flex-wrap\">\r\n                  <div className=\"d-flex\">\r\n                    {lawyerprofile.topic &&\r\n                      lawyerprofile.topic.slice(0, 3).map((skill) => (\r\n                        <div key={skill.id}>\r\n                          <Button\r\n                            color=\"light\"\r\n                            className=\"mb-2 font-weight-semibold mr-2\"\r\n                            size=\"xs\"\r\n                          >\r\n                            {skill.topicName}\r\n                          </Button>\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n                  {lawyerprofile.topic && lawyerprofile.topic.length > 3 && (\r\n                    <div className=\"\">\r\n                      <Button\r\n                        color=\"link\"\r\n                        className=\"text-one font-weight-bold \"\r\n                        style={{ textDecoration: \"underline\" }}\r\n                        onClick={toggleShowAll}\r\n                      >\r\n                        + {remainingSkillsCount}more\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-2 d-md-block d-sm-block d-lg-none d-xl-none  \">\r\n                <LawyerTabCard\r\n                  pid={pid}\r\n                  handlePurchase={handlePurchase}\r\n                  userId={lawyerprofile.chatUserName}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"mt-4\">\r\n                <h2 className=\"\">About</h2>\r\n                <p className=\"text-one\">{lawyerprofile.about}</p>\r\n              </div>\r\n              <div>\r\n                <div className=\"my-4 \" id=\"skillsSection\">\r\n                  <h2 className=\"text-start mr-2\">All Consulting areas</h2>\r\n                  <div className=\"d-flex flex-wrap \">\r\n                    {lawyerprofile.topic &&\r\n                      lawyerprofile.topic.map((skill) => (\r\n                        <div key={skill}>\r\n                          <Button\r\n                            color=\"light\"\r\n                            className=\"mb-2 font-weight-semibold mr-2\"\r\n                            size=\"sm\"\r\n                          >\r\n                            {skill.topicName}\r\n                          </Button>\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Colxx>\r\n\r\n            <Colxx lg={12} xl={12} className=\"mt-4\">\r\n              <hr />\r\n              <h2 className=\"\">Packages</h2>\r\n              <Row className=\"d-flex\">\r\n                {packages &&\r\n                  packages.map((pack) => (\r\n                    <Col lg={6} key={pack.id} className=\"my-2\">\r\n                      <Card className=\"pt-5 pb-5 d-flex\">\r\n                        <CardBody className=\"pt-5 pb-5\">\r\n                          <div className=\"price-top-part\">\r\n                            <i className=\"\" />\r\n                            <h2 className=\"mb-0 font-weight-semibold text-primary text-large mb-4\">\r\n                              {pack.serviceName}\r\n                            </h2>\r\n                            {/* <p className=''>{pack.headline}</p> */}\r\n                            <p className=\"text-large mb-2 text-default\">\r\n                              ₹{Math.floor(pack.amount).toLocaleString()}\r\n                            </p>\r\n                            <p className=\"text-muted text-small\">\r\n                              {pack.description}\r\n                            </p>\r\n                            <div className=\"\">\r\n                              {role.includes(\"USER\") && (\r\n                                <Button\r\n                                  color=\"primary  text-one\"\r\n                                  onClick={() => handlePurchase(pack)}\r\n                                >\r\n                                  Purchase\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Col>\r\n                  ))}\r\n              </Row>\r\n            </Colxx>\r\n\r\n            <Colxx className=\"mt-4\" lg={12}>\r\n              <hr />\r\n            </Colxx>\r\n\r\n            {/* <Colxx className=\"mt-4\" lg={6} xl={6} md={12}>\r\n              <div\r\n                style={{\r\n                  width: \"40%\",\r\n                  position: \"fixed\",\r\n                  top: \"40%\",\r\n                  right: \"20px\",\r\n                }}\r\n                className=\"mt-2 d-lg-block d-xl-block d-none\"\r\n              >\r\n                <LawyerTabCard\r\n                  pid={pid}\r\n                  handlePurchase={handlePurchase}\r\n                  userId={lawyerprofile.chatUserName}\r\n                />\r\n              </div>\r\n            </Colxx> */}\r\n          </Row>\r\n          <ReviewsComponent category=\"law\" revieweeId={pid} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LawyerProfile;\r\n","/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-param-reassign */\r\nimport axios from 'axios';\r\nimport { baseUrl } from 'constants/defaultValues';\r\nimport React from 'react';\r\nimport { WithWizard } from 'react-albus';\r\nimport { Button, NavLink } from 'reactstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst  BottomNavigationWizard = ({\r\n  className,\r\n  onClickPrev,\r\n  prevLabel,\r\n  onClickNext,\r\n  nextLabel,\r\n  paymentButtonType,\r\n  packageId,\r\n  lawyerId\r\n}) => {\r\n\r\n  const handlePayFromWallet = async () => {\r\n    try {\r\n      const response = await axios.post(`${baseUrl}/api/lawyer/${lawyerId}/service/${packageId}/purchase`, {\r\n        paymentMethod: 'WALLET'\r\n      });\r\n      console.log('Payment success:', response.data);\r\n      // Handle success response here\r\n    } catch (error) {\r\n      console.error('Payment failed:', error);\r\n      // Handle error here\r\n    }\r\n  };\r\n  // const handlePayFromOnline = async () => {\r\n  //   try {\r\n  //     const response = await axios.post(`${baseUrl}/api/lawyer/${lawyerId}/service/${packageId}/purchase`, {\r\n  //       paymentMethod: 'ONLINE'\r\n  //     });\r\n  //     console.log('Payment success:', response.data);\r\n  //     // Handle success response here\r\n  //   } catch (error) {\r\n  //     console.error('Payment failed:', error);\r\n  //     // Handle error here\r\n  //   }\r\n  // };\r\n\r\n  const history = useHistory();\r\n\r\n  const handlePayFullyFromOnline = async () => {\r\n    try {\r\n      const response = await axios.post(`${baseUrl}/api/lawyer/${lawyerId}/service/${packageId}/purchase`, {\r\n        paymentMethod: 'ONLINE'\r\n      });\r\n      if (response.status === 200) {\r\n        console.log('Payment success:', response.data);\r\n        history.push('/app/lawyerjobslist');\r\n      } else {\r\n        console.error('Payment failed. Unexpected status code:', response.status);\r\n      }\r\n     \r\n     \r\n    } catch (error) {\r\n      console.error('Payment failed:', error);\r\n      \r\n    }\r\n  };\r\n  \r\n  return (\r\n    <WithWizard\r\n      render={({ next, previous, step, steps }) => (\r\n        \r\n        // default previous button\r\n        <div className={`wizard-buttons ${className}`}>\r\n          {/* <Button\r\n            color=\"primary\"\r\n            className={`mr-1 ${steps.indexOf(step) <= 1 ? 'disabled' : ''}`}\r\n            onClick={() => {\r\n              onClickPrev(previous, steps, step);\r\n            }}\r\n          >\r\n            {prevLabel}\r\n          </Button> */}\r\n          {steps.indexOf(step) > 0 && steps.indexOf(step) < steps.length - 1 &&(\r\n    <Button\r\n      color=\"primary\"\r\n      className={`mr-2 ${steps.indexOf(step) <= 1 ? 'disabled' : ''}`}\r\n      onClick={() => {\r\n        onClickPrev(previous, steps, step);\r\n      }}\r\n    >\r\n      {prevLabel}\r\n    </Button>\r\n  )}\r\n\r\n         {/* first step pay from online button */}\r\n          <Button \r\n            color='primary'\r\n\r\n            className={`mx-2 ${steps.indexOf(step) === 0 ? '' : 'd-none'}`}\r\n            onClick={() => {\r\n              onClickPrev(previous, steps, step);\r\n              handlePayFullyFromOnline();\r\n            }}\r\n          >\r\n            pay fully online\r\n          </Button>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            className={\r\n              // steps.indexOf(step) >= steps.length - 1 ? 'disabled' : ''\r\n              steps.indexOf(step) <=steps.length-1 ? 'd-none' : ''\r\n            }\r\n            onClick={() => {\r\n              onClickNext(next, steps, step);\r\n            }}\r\n          >\r\n            {nextLabel}\r\n          </Button>\r\n         \r\n\r\n          {/* hide last step button */}\r\n         {/* <Button\r\n           color=\"primary\"\r\n            className={`${steps.indexOf(step) === 2 ? 'd-none' : ''}`}\r\n            onClick={() => {\r\n              onClickNext(next, steps, step);\r\n             \r\n            }}\r\n          >\r\n            {nextLabel}\r\n          </Button>   */}\r\n\r\n\r\n            <Button \r\n            color='primary'\r\n            className={steps.indexOf(step) === 0 ? '' : 'd-none'}\r\n            onClick={() => {\r\n              onClickNext(next, steps, step);\r\n            }}\r\n          >\r\n            pay from wallet\r\n          </Button>\r\n\r\n\r\n          <Button \r\n            color='primary'\r\n            className={steps.indexOf(step) === 1 ? '' : 'd-none'}\r\n            onClick={() => {\r\n              onClickNext(next, steps, step);\r\n              if (paymentButtonType === 'payFromWallet') {\r\n                handlePayFromWallet();\r\n              }\r\n              // else{\r\n              //   handlePayFromOnline();\r\n              // }\r\n              \r\n            }}\r\n          >\r\n            {paymentButtonType === 'payFromWallet' ? 'Proceed to payment' : 'Pay remaining online'}\r\n          </Button>\r\n\r\n\r\n\r\n           <NavLink href='/app/lawyerjobslist'>\r\n           <Button \r\n            color='primary'\r\n            className={steps.indexOf(step) === steps.length-1 ? '' : 'd-none'}\r\n            onClick={() => {\r\n              onClickNext(next, steps, step);\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n           </NavLink>\r\n         \r\n\r\n\r\n          \r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n};\r\nexport default BottomNavigationWizard;\r\n","/* eslint-disable no-param-reassign */\r\nimport React, { useEffect,useState } from 'react';\r\nimport axios from 'axios';\r\nimport { baseUrl } from 'constants/defaultValues';\r\nimport { Card, CardBody, Form, FormGroup,  Label } from 'reactstrap';\r\nimport { Wizard, Steps, Step } from 'react-albus';\r\nimport { injectIntl } from 'react-intl';\r\nimport { useLocation } from 'react-router-dom';\r\nimport TopNavigation from 'components/wizard/TopNavigation';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\n\r\nimport BottomNavigationWizard from './BottomNavigationWizard';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst PaymentWizard = ({ intl }) => {\r\n\r\n\r\n \r\n  const location = useLocation();\r\n  \r\n  const { firstName, lastName, serviceName ,amount,packageId ,lawyerId} = location.state || {};\r\n const [walletamount,setWalletAmount]=useState(\"\")\r\n\r\n  const topNavClick = (stepItem, push) => {\r\n    push(stepItem.id);\r\n  };\r\n\r\n  const onClickNext = (goToNext, steps, step) => {\r\n    step.isDone = true;\r\n    if (steps.length - 1 <= steps.indexOf(step)) {\r\n      return;\r\n    }\r\n    goToNext();\r\n  };\r\n\r\n  const onClickPrev = (goToPrev, steps, step) => {\r\n    if (steps.indexOf(step) <= 0) {\r\n      return;\r\n    }\r\n    goToPrev();\r\n  };\r\n\r\n  const getWalletAmountUrl=`${baseUrl}/api/wallet/balance`\r\n\r\n  useEffect(()=>{\r\n    \r\n    const WalletAmountGet=async()=>{\r\n        try {\r\n          \r\n            const response = await axios.get(getWalletAmountUrl);\r\n            \r\n            setWalletAmount(response.data);\r\n            console.log(response);\r\n            \r\n          } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n          }\r\n    }\r\n    WalletAmountGet();\r\n  \r\n},[getWalletAmountUrl])\r\n\r\nconst calculateBalanceAfterDeduction = () => {\r\n  if (walletamount.balance !== null) {\r\n    const balanceAfterDeduction = walletamount.balance - amount;\r\n    return balanceAfterDeduction >= 0 ? balanceAfterDeduction : 0;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst calculateRemainingAmountToPay = () => {\r\n  if (walletamount.balance !== null) {\r\n    return amount - walletamount.balance >= 0 ? amount - walletamount.balance : 0;\r\n  }\r\n  return null;\r\n};\r\n  const { messages } = intl;\r\n  return (\r\n    <Colxx lg={6} mg={6} className='mx-auto'>\r\n        <Card className='py-3'>\r\n      <CardBody className=\"wizard wizard-default\">\r\n        <Wizard>\r\n          <TopNavigation\r\n            className=\"justify-content-center\"\r\n            disableNav\r\n            topNavClick={topNavClick}\r\n          />\r\n          <Steps>\r\n            <Step\r\n              id=\"step1\"\r\n              name={messages['wizard.step-name-1']}\r\n              desc=\"payment\"\r\n            >\r\n              <div className=\"wizard-basic-step\">\r\n                <Form>\r\n                  <FormGroup>\r\n                   <div className=''>\r\n                   <h2>You are purchasing the service <strong className=''>{serviceName}</strong></h2>\r\n                     <h2> from the lawyer \r\n                     <strong> {firstName} {lastName}</strong></h2>\r\n                   </div>\r\n                  \r\n                    \r\n                  </FormGroup>\r\n\r\n                 \r\n                  <FormGroup className='w-100'>\r\n                                <div className='d-flex justify-content-between align-items-center'>\r\n                                    <Label className='text-one'>Your Package Amount</Label>\r\n                                    <Colxx lg={5} className=''>\r\n                                        <h3 className=''><span className='font-weight-bold color-theme-1'>₹{amount}</span></h3>\r\n                                    </Colxx>\r\n                                </div>\r\n                            </FormGroup>\r\n                            <FormGroup className='w-100'>\r\n                                <div className='d-flex justify-content-between align-items-center'>\r\n                                    <Label className='text-one'>Your Wallet Balance</Label>\r\n                                    <Colxx lg={5}>\r\n                                     \r\n                                        <h3 className=''><span className='font-weight-bold color-theme-1'>₹{walletamount.balance}</span></h3>\r\n                                    </Colxx>\r\n                                </div>\r\n                            </FormGroup>\r\n                            \r\n                            \r\n                </Form>\r\n              </div>\r\n            </Step>\r\n            <Step\r\n              id=\"step2\"\r\n              name={messages['wizard.step-name-2']}\r\n              desc=\"Pay from wallet\"\r\n            >\r\n              <div className=\"wizard-basic-step\">\r\n              {walletamount.balance>amount?(\r\n                <Form>\r\n                <FormGroup className='w-100'>\r\n                                <div className='d-flex justify-content-between align-items-center'>\r\n                                    <Label className='text-one'>Your Package Amount</Label>\r\n                                    <Colxx lg={5} className=''>\r\n                                        <h3 className=''><span className='font-weight-bold color-theme-1'>₹{amount}</span></h3>\r\n                                    </Colxx>\r\n                                </div>\r\n                            </FormGroup>\r\n                            <FormGroup className='w-100'>\r\n                            \r\n                                <div className='d-flex justify-content-between align-items-center'>\r\n                                    <Label className='text-one'>Your Wallet Balance</Label>\r\n                                    <Colxx lg={5}>\r\n                                     \r\n                                        <h3 className=''><span className='font-weight-bold color-theme-1'>₹{walletamount.balance}</span></h3>\r\n                                    </Colxx>\r\n                                </div>\r\n                            </FormGroup>\r\n                            <FormGroup className='w-100'>\r\n                                <div className='d-flex justify-content-between align-items-center'>\r\n                                    <Label className='text-one'>Your Balance after deduction</Label>\r\n                                    <Colxx lg={5}>\r\n                                     \r\n                                        <h3 className=''><span className='font-weight-bold color-theme-1'>\r\n                                        {calculateBalanceAfterDeduction() !== null ? `₹${calculateBalanceAfterDeduction()}` : 'Loading...'}</span></h3>\r\n                                      \r\n                                      \r\n                                    </Colxx>\r\n                                    \r\n                                </div>\r\n                               \r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                            <div>\r\n                                  <h3 className='text-one text-muted'>Do you want to pay</h3>\r\n                                </div>\r\n                            </FormGroup>\r\n                </Form>\r\n              ):(\r\n                <Form>\r\n                <FormGroup className='w-100'>\r\n                                <div className='d-flex justify-content-between align-items-center'>\r\n                                    <Label className='text-one'>Your Package Amount</Label>\r\n                                    <Colxx lg={5} className=''>\r\n                                        <h3 className=''><span className='font-weight-bold color-theme-1'>₹{amount}</span></h3>\r\n                                    </Colxx>\r\n                                </div>\r\n                            </FormGroup>\r\n                            <FormGroup className='w-100'>\r\n                            \r\n                                <div className='d-flex justify-content-between align-items-center'>\r\n                                    <Label className='text-one'>Your Wallet Balance</Label>\r\n                                    <Colxx lg={5}>\r\n                                     \r\n                                        <h3 className=''><span className='font-weight-bold color-theme-1'>₹{walletamount.balance}</span></h3>\r\n                                    </Colxx>\r\n                                </div>\r\n                            </FormGroup>\r\n                            <FormGroup className='w-100'>\r\n                                <div className='d-flex justify-content-between align-items-center'>\r\n                                    <Label className='text-one'>Remaining amount to pay</Label>\r\n                                    <Colxx lg={5}>\r\n                                     \r\n                                        <h3 className=''><span className='font-weight-bold color-theme-1'>\r\n                                        ₹{calculateRemainingAmountToPay() !== null ? calculateRemainingAmountToPay() : 'Loading...'}\r\n                                       </span></h3>\r\n                                      \r\n                                      \r\n                                    </Colxx>\r\n                                    \r\n                                </div>\r\n                               \r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                            <div>\r\n                                  <h3 className='text-one text-muted'>Do you want to pay</h3>\r\n                                </div>\r\n                            </FormGroup>\r\n                </Form>\r\n              )\r\n              }\r\n                \r\n               \r\n              </div>\r\n            </Step>\r\n            {/* <Step\r\n              id=\"step3\"\r\n              name={messages['wizard.step-name-3']}\r\n              desc={messages['wizard.step-desc-3']}\r\n            >\r\n              <div className=\"wizard-basic-step\">\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label>\r\n                      sss\r\n                    </Label>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder={messages['forms.password']}\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n            </Step> */}\r\n            <Step id=\"step4\" hideTopNav>\r\n            <div className=\"wizard-basic-step text-center\">\r\n                <h2 className=\"mt-4\">\r\n                 \r\n                Your Payment is successfull\r\n                </h2>\r\n                {/* <p>\r\n                 \r\n                  Thank you\r\n                </p> */}\r\n              </div>\r\n            </Step>\r\n          </Steps>\r\n          <BottomNavigationWizard\r\n            onClickNext={onClickNext}\r\n            onClickPrev={onClickPrev}\r\n            className=\"justify-content-center\"\r\n            prevLabel=\"Back\"\r\n            nextLabel=\"Next\"\r\n            packageId={packageId}\r\n            lawyerId={lawyerId}\r\n            paymentButtonType={walletamount.balance > amount ? 'payFromWallet' : 'payRemaining'}\r\n/>\r\n          \r\n        </Wizard>\r\n      </CardBody>\r\n    </Card>\r\n    </Colxx>\r\n  \r\n  );\r\n};\r\n\r\nexport default injectIntl(PaymentWizard);\r\n"],"sourceRoot":""}