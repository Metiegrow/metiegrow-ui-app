{"version":3,"sources":["components/common/CustomBootstrap.js","views/app/myapp/notifications/ToasterComponent.js","components/cards/ThumbnailLetters.js","views/app/myapp/Calculation/TimestampConverter.js","containers/pages/Pagination.js","helpers/IntlMessages.js","views/app/myapp/my-login/Country.js","redux/menu/actions.js","redux/settings/actions.js","views/app/myapp/Listing/ListingData.js","views/app/myapp/my-login/Languages.js","views/app/myapp/CommonCardList/IdentityStatusList.js","components/common/Rating.js","components/common/CustomSelectInput.js","views/app/myapp/AlumniRegister/validation.js","views/app/myapp/Chat/ThumbnailLetters.js","components/common/SliderTooltips.js","components/carousel/GlideComponent.js","views/app/myapp/mentorship/MentorFilter.js","views/app/myapp/Reviews/ReviewsComponent.js","views/app/myapp/BigCalendar/DateRangePicker.js","views/app/myapp/AlumniRegister/Languages.js","views/app/myapp/AlumniRegister/DomainList.js","views/app/myapp/mentorship/MentorTabCard.js","components/wizard/TopNavigation.js","views/app/myapp/my-login/validation.js","views/app/myapp/AlumniRegister/Country.js","views/app/myapp/Listing/JobPosting.js","views/app/myapp/Listing/OtherPosting.js","views/app/myapp/Listing/StayPosting.js","containers/pages/DataListView-personal.js","services/services.js","views/app/myapp/my-details/data/educationalInformation-data.js","views/app/myapp/my-details/input/educationalInformation-input.js","views/app/myapp/my-details/educational-information.js","views/app/myapp/my-details/data/personalInformation-data.js","views/app/myapp/my-details/input/personalInformation-input.js","views/app/myapp/my-details/personal-information.js","views/app/myapp/my-details/data/professionalInformation-data.js","views/app/myapp/my-details/input/professionalInformation-input.js","views/app/myapp/my-details/professional-information.js","views/app/myapp/my-details/my-details.js","views/app/myapp/my-documents/data/admission-documents-data.js","views/app/myapp/my-documents/upload-data.js","views/app/myapp/my-documents/admission-documents.js","views/app/myapp/my-documents/data/financial-documents-data.js","views/app/myapp/my-documents/financial-documents.js","views/app/myapp/my-documents/data/supporting-documents-data.js","views/app/myapp/my-documents/supporting-documents.js","views/app/myapp/my-documents/my-documents.js","views/app/myapp/my-applications/show-allUser-application.js","views/app/myapp/my-applications/select-college-modal.js","views/app/myapp/my-applications/my-applications.js","views/app/myapp/my-applications/applications-data.js","views/app/myapp/DashBoard/DashBoard.js","views/app/myapp/mentorship/mentorcard.js","views/app/myapp/mentorship/MentorProfile.js","views/app/myapp/mentorship/MentorAnswers.js","views/app/myapp/mentorship/MentorConsult.js","views/app/myapp/mentorship/MentorCreatedSlot.js","views/app/myapp/mentorship/FilterQuestions.js","views/app/myapp/mentorship/AskQuestion.js","views/app/myapp/mentorship/myQandA.js","views/app/myapp/BigCalendar/MentorSessionList.js","views/app/myapp/mentorship/MentorSessionUpcoming.js","views/app/myapp/my-profile/MyProfile.js","views/app/myapp/my-wallet/MyWallet.js","views/app/myapp/Listing/ViewOtherListing.js","views/app/myapp/Listing/ViewJobListing.js","views/app/myapp/Listing/ViewStayListing.js","views/app/myapp/Lawyer/LawQuestionAnswer.js","views/app/myapp/Lawyer/JobList.js","views/app/myapp/Lawyer/LawyerJobList.js","views/app/myapp/Lawyer/AddReview.js","views/app/myapp/VideoCall/VideoCallCompletedPage.js","views/app/myapp/Classroom/AgoraClass.js","views/app/myapp/Lawyer/LawyerMyProfile.js","views/app/myapp/Mentee/MenteeMyProfile.js","views/app/myapp/Mentee/MenteeProfile.js","views/app/myapp/Mentee/StudentList.js","views/app/myapp/Mentee/StudentViewProfile.js","views/app/myapp/Alumni/AlumniMyProfile.js","views/app/myapp/Alumni/AlumniCalendar.js","views/app/myapp/Alumni/AlumniSessionLists.js","views/app/myapp/Mentee/ApplyAsUser.js","views/app/myapp/Settings/Settings.js","views/app/myapp/Alumni/AlumniLists.js","views/app/myapp/Alumni/AlumniProfile.js","containers/navs/Footer.js","constants/menu.js","containers/navs/Sidebar.js","components/svg/MenuIcon.js","components/svg/MobileMenuIcon.js","containers/navs/Topnav.DarkSwitch.js","containers/navs/Topnav.Notifications.js","containers/navs/Topnav.js","layout/AppLayout.js","views/app/index.js","views/app/myapp/Listing/All.js","views/app/myapp/Listing/JobListing.js","views/app/myapp/notifications/DesktopNotifications.js","views/app/myapp/Listing/OtherListing.js","views/app/myapp/Listing/StayListing.js","views/app/myapp/Listing/Listing.js","views/app/myapp/VideoCall/RTCVideoCall/settings.js","views/app/myapp/VideoCall/RTCVideoCall/Controls.js","views/app/myapp/VideoCall/RTCVideoCall/Video.js","views/app/myapp/VideoCall/RTCVideoCall/VideoCallCtrl.js","views/app/myapp/VideoCall/RTCVideoCall/VideoCall.js","components/applications/SaySomething.js","components/common/ApplicationMenu.js","views/app/myapp/Chat/ChatHeading.js","views/app/myapp/Chat/Chat.js","views/app/myapp/AlumniRegister/ApplyAsAlumniAbout.js","views/app/myapp/AlumniRegister/ApplyAsAlumniExperience.js","views/app/myapp/AlumniRegister/ApplyAsAlumniProfile.js","views/app/myapp/AlumniRegister/ApplyAlumni.js","views/app/myapp/HumanResource/HRRegistration/ApplyAsHrAbout.js","views/app/myapp/HumanResource/HRRegistration/ApplyAsHrExperience.js","views/app/myapp/HumanResource/HRRegistration/ApplyAsHrProfile.js","views/app/myapp/HumanResource/HRRegistration/ApplyHR.js","views/app/myapp/Listing/MyJobListing.js","views/app/myapp/Listing/MyOtherListing.js","views/app/myapp/Listing/MyStayListing.js","views/app/myapp/Listing/MyListing.js","views/app/myapp/RealEstateAgent/RealEstateAgentRegistration/RealEstateAgentAbout.js","views/app/myapp/RealEstateAgent/RealEstateAgentRegistration/RealEstateAgentExperience.js","views/app/myapp/RealEstateAgent/RealEstateAgentRegistration/RealEstateAgentProfile.js","views/app/myapp/RealEstateAgent/RealEstateAgentRegistration/RealEstateAgentApply.js","views/app/myapp/my-login/BottomNavigation.js","views/app/myapp/BigCalendar/PopupWizard.js","views/app/myapp/BigCalendar/Month.js","views/app/myapp/Notes/LawyerJobNotes.js","views/app/myapp/Lawyer/UploadDropZone.js","views/app/myapp/Lawyer/JobDetails.js","views/app/myapp/notifications/show-notifications.js","views/app/myapp/index.js","views/app/myapp/my-login/CategoryData.js","views/app/myapp/my-login/ApplyMentor.js","views/app/myapp/lawyer-login/ValidationsPart.js","views/app/myapp/lawyer-login/ApplyAsLawyer.js","views/app/myapp/Lawyer/LawyerCardFilter.js","views/app/myapp/Lawyer/UserCard.js","views/app/myapp/Lawyer/LawyerTabCard.js","views/app/myapp/Lawyer/LawyerProfile.js","views/app/myapp/Lawyer/BottomNavigationWizard.js","views/app/myapp/Lawyer/PaymentWizard.js"],"names":["Colxx","props","_jsx","Col","_objectSpread","widths","ToasterComponent","type","messages","title","arguments","length","undefined","duration","forEach","message","NotificationManager","success","status","warning","error","info","ThumbnailLetters","_ref","text","color","className","rounded","small","letters","indexOf","split","map","word","slice","concat","classnames","children","React","memo","TimestampConverter","timeStamp","format","formattedDateTime","formatDateTime","time","Date","parseInt","Hours","String","getHours","padStart","Minutes","getMinutes","Period","Month","getMonth","Day","getDate","Year","getFullYear","getDayWithSuffix","day","_jsxs","_Fragment","isToday","today","isYesterday","yesterday","setDate","Pagination","totalPage","currentPage","numberLimit","lastIsActive","firstIsActive","onChangePage","startPoint","endPoint","points","i","push","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","xxs","Nav","NavItem","NavLink","onClick","injectIntl","FormattedMessage","withRef","country","changeSelectedMenuHasSubItems","payload","MENU_CHANGE_HAS_SUB_ITEM_STATUS","changeDefaultClassnames","strCurrentClasses","MENU_CHANGE_DEFAULT_CLASSES","addContainerClassname","classname","newClasses","MENU_CONTAINER_ADD_CLASSNAME","clickOnMobileMenu","currentClasses","filter","x","nextClasses","includes","join","MENU_CLICK_MOBILE_MENU","containerClassnames","menuClickCount","setContainerClassnames","clickIndex","selectedMenuHasSubItems","MENU_SET_CLASSNAMES","changeLocale","locale","setCurrentLanguage","CHANGE_LOCALE","ApartmentTypeData","label","value","BHKData","FloorData","RoomTypeData","WorkPlaceTypeData","EmploymentTypeData","RoomMateType","parkingOptions","language","indentityStatusList","Star","starProps","nameMap","isDisabled","isActive","isActiveHalf","willBeActive","Object","keys","prop","defaultProps","Rating","Rater","CustomSelectInput","customProps","autoCorrect","autoCapitalize","components","Input","validateLocation","validateDomain","validateIdentityStatus","validateBio","extraSmall","appliedStyles","width","height","fontSize","padding","style","sliderHandle","dragging","index","offset","restProps","_objectWithoutProperties","_excluded","positionStyle","position","left","Slider","Handle","SliderTooltip","handle","RangeTooltip","Range","resizeTimeOut","mountTimeOut","GlideComponent","carousel","glideCarousel","onResize","clearTimeout","setTimeout","update","useEffect","Glide","settings","direction","getDirection","mount","on","event","document","createEvent","initEvent","window","dispatchEvent","destroy","ref","node","hideNav","renderDots","total","Children","count","dots","MentorFilter","_country$find","_country$find2","_DomainList$find","onSkillsChange","onToolsChange","onIndustryChange","onUniversityChange","onPriceChange","onLocationChange","onDomainChange","selectedSkills","selectedLocation","selectedIndustry","selectedUniversity","selectedTools","userRole","dropdownBasicOpen","setDropdownBasicOpen","useState","dropdownBasicOpen1","setDropdownBasicOpen1","dropdownBasicOpen2","setDropdownBasicOpen2","dropdownBasicOpen3","setDropdownBasicOpen3","dropdownBasicOpen4","setDropdownBasicOpen4","dropdownBasicOpen5","setDropdownBasicOpen5","dropdownBasicOpen6","setDropdownBasicOpen6","priceRange","setPriceRange","selectedDomain","setSelectedDomain","getApiEndpoint","endpointType","baseUrl","Error","handleSkillSelect","skill","handleToolSelect","tool","handleIndustrySelect","industry","handleUniversitySelect","university","handleLocationSelect","location","handleDomainSelect","domain","handleAfterChange","useCallback","finalRange","searchText","setSearchText","searchText1","setSearchText1","searchCompanies","setSearchCompanies","searchUniversities","setSearchUniversities","searchTools","setSearchTools","searchSkills","setSearchSkills","filteredCountry","setFilteredCountry","filteredDomain","setFilteredDomain","DomainList","viewFilters","setViewFilters","skillsData","setSkillsData","companyData","setCompanyData","universityData","setUniversityData","toolsData","setToolsData","paginationMeta","setPaginationMeta","companyPaginationMeta","setCompanyPaginationMeta","universityPaginationMeta","setUniversityPaginationMeta","toolsPaginationMeta","setToolsPaginationMeta","size","setSize","companySize","setCompanySize","universitySize","setUniversitySize","toolsSize","setToolsSize","skillsFetched","setSkillsFetched","toolsFetched","setToolsFetched","companiesFetched","setCompaniesFetched","universityFetched","setUniversitiesFetched","isMobile","setIsMobile","checkIfMobile","innerWidth","addEventListener","removeEventListener","async","params","page","response","axios","get","data","console","FetchSkills","company","FetchCompanies","FetchUniversities","FetchTools","Row","sm","md","lg","Button","outline","handleViewFilters","right","top","transform","Dropdown","isOpen","toggle","DropdownToggle","caret","DropdownMenu","placeholder","onChange","target","PerfectScrollbar","maxHeight","options","suppressScrollX","wheelPropagation","DropdownItem","Card","c","last","cursor","handleUniversityLoadMore","s","handleLoadMore","t","handleToolsLoadMore","handleCompanyLoadMore","min","max","defaultValue","allowCross","pushable","step","onAfterChange","find","iso_code","name","newText","toLowerCase","ReviewsComponent","revieweeId","category","averageStar","setAverageStar","totalRatings","setTotalRatings","totalFeedBack","setTotalFeedBack","reviews","setReviews","starRatings","setStarRatings","oneStar","twoStar","threeStar","fourStar","fiveStar","metaRatingUrl","ratingUrl","reviewData","ReviewDetails","fetchData","calculatePercentage","starCount","xl","CardBody","rating","interactive","Progress","barStyle","backgroundColor","rv","href","reviewerId","imageUrl","src","alt","objectFit","to","dangerouslySetInnerHTML","__html","feedBack","star","selectedDate","setSelectedDate","DatePicker","selected","date","MentorTabCard","handleConnectClick","chatUserId","price","activeFirstTab","setActiveFirstTab","role","localStorage","getItem","history","useHistory","xs","CardHeader","tabs","active","TabContent","activeTab","TabPane","tabId","CardTitle","Math","floor","toLocaleString","handleChatClick","adminRoot","TopNavigation","disableNav","topNavClick","getClassName","steps","stepItem","isDone","WithWizard","render","_ref2","next","previous","go","hideTopNav","itemClick","desc","validateCategory","validateStudent","validateCompany","validateJobTitle","validateLinkedinUrl","test","validateReasonForMentor","validateAchievement","quillModules","toolbar","list","indent","quillFormats","JobPosting","closeModal","initialData","onEdit","id","jobTitle","workPlaceType","workPlaceTypeValue","jobLocation","employmentType","employmentTypeValue","identityStatus","description","skillsTag","skills","isLoading","setIsLoading","selectedFile2","setSelectedFile2","url","token","handleFileChange2","file","files","maxWidth","Formik","initialValues","validate","values","errors","trim","onSubmit","setSubmitting","formData","FormData","append","Blob","JSON","stringify","post","headers","Authorization","statuses","_ref3","isValid","touched","setFieldValue","handleSubmit","setFieldTouched","Form","FormGroup","Label","Field","_ref4","alphabeticValue","replace","required","e","as","disabled","option","TagsInput","tags","addOnBlur","addKeys","InputGroup","getElementById","click","ReactQuill","theme","val","onBlur","modules","formats","OtherPosting","job","_ref5","StayPosting","availableFrom","setAvailableFrom","getTime","monthlyMaintenance","setMonthlyMaintenance","maintenanceAmount","setMaintenanceAmount","handleDateChange","timestampInMilliseconds","selectedFiles","setSelectedFiles","BHKType","bhkTypeValue","floorValue","apartmentType","apartmentTypeValue","roomType","roomTypeValue","roomMate","roomMateValue","expectedRent","expectedDeposit","email","ownerName","mobileNumber","parking","parkingValue","stayCategory","parkingCount","bhkType","log","InputGroupAddon","addonType","owenerName","multiple","DataListViewpersonal","product","onCheckItem","ContextMenuTrigger","boxShadow","paddingLeft","getEducationalInformation","then","res","catch","postEducationalInformation","body","getPersonalInformation","postPersonalInformation","getProfessionalInformation","postProfessionalInformation","educationalInformationData","statusColor","bachelorDgDomainCourseOptions","InputEducationalInformation","setData","TwelfthPercentage","TenthPercentage","TwelfthGroup","BachelorDegreeName","BachelorDegreeDomainCourse","BachelorPercentage","Backlogs","open","setOpen","toggleModalFunction","oldValue","handleChange","prevValue","margin","Modal","centered","display","justifyContent","ModalHeader","alignSelf","ModalBody","inline","course","ModalFooter","EducationalInformation","setToggle","marginRight","Collapse","flexWrap","flex","DataListViewPersonal","isSelect","collect","personalInformationData","InputPersonalInformation","firstName","lastName","Gender","Age","dateOfBirth","addressLane1","addressLane2","zipCode","state","adhaarNumber","scrollable","PersonalInformation","professionalInformationData","InputProfessionalInformation","Organization","Role","StartDate","EndDate","TerminationReason","ProfessinalInformation","MyDetails","AdmissionDocumentsData","UploadData","MenuOptions","dropDownValue","setDropDownValue","dropDowsState","setDropDownState","handleUploadData","ButtonDropdown","innerHTML","AdmissionDocuments","justifySelf","marginTop","FinancialDocumetsData","FinancialDocumets","classNames","SupportingDocumentsData","SupportingDocuments","MyDocuments","AllUserApplications","userType","currentItem","expand","onSetToggle","handleClickScroll","element","scrollIntoView","behavior","Container","collegeName","createdAt","Table","applnEventLogs","subItem","eventName","updatedAt","applnMsgLogs","Fragment","senderName","created_at","borderColor","SelectCollegeModal","InputGroupButtonDropdown","MyApplications","selectedElement","item","DashBoard","_currentJobList$image","modalBasic","setModalBasic","currentSessionIndex","setCurrentSessionIndex","currentMentorIndex","setCurrentMentorIndex","currentLawyerIndex","setCurrentLawyerIndex","currentAlumniIndex","setCurrentAlumniIndex","currentJobIndex","setCurrentJobIndex","currentStayIndex","setCurrentStayIndex","currentBatchMateIndex","setCurrentBatchMateIndex","walletBalance","setWalletBalance","profileStatus","setProfileStatus","recentSessions","setRecentSessions","mentors","setMentors","experience","lawyers","setLawyers","services","languages","alumni","setAlumni","experienceYears","newSession","setNewSession","chatStatus","fromTimeStamp","toTimeStamp","mentorUserId","mode","recentChats","setRecentChats","dashboardQuestions","setDashboardQuestions","jobList","setJobList","stayList","setStaylist","batchMates","setBatchMates","inputkey","setInputKey","selectedCategory","setSelectedCategory","pathname","walletUrl","profileStatusUrl","mentorsUrl","sessionsUrl","lawyersUrl","batchUrl","alumniUrl","newSessionUrl","recentChatsDataUrl","questionsUrl","joblistUrl","staylistUrl","fetchProfileStatus","balance","fetchWalletBalance","fetchRecentSessions","fetchMentors","fetchBatchMates","fetchLawyers","fetchAlumni","fetchNewsession","fetchRecentChats","fetchLatestQuestions","fetchJobList","fetchStayList","currentSession","currentMentor","currentLawyer","currentAlumni","currentJobList","currentStayList","currentBatchMate","interval","setInterval","prevIndex","clearInterval","formatDate","timestamp","zIndex","Select","classNamePrefix","key","background","handleProfileClick","borderRadius","alignItems","minWidth","minHeight","border","percentage","handleWalletClick","handlePrevious","textDecoration","handleNext","TransitionGroup","CSSTransition","timeout","handleViewMentors","handleMentorPrevious","overflow","handleMentorNext","CardText","renderMentorsDots","handleViewLawyers","handleLawyerPrevious","handleLawyerNext","lang","_language$find","l","renderLawyerDots","handleViewAlumnis","handleAlumniPrevious","handleAlumniNext","renderAlumniDots","CardImg","images","interestedCount","renderStayListDots","image","postedOn","renderJobListDots","marginLeft","gap","perView","items","questionHeading","questionHeadingBrief","views","handleViewBatchmates","handleBatchMatePrevious","handleBatchMateNext","renderBatchMateDots","sessions","chats","username","MentorCard","_locationCategory$sta","setSelectedSkills","setSelectedTools","setSelectedIndustry","selectedPrice","setSelectedPrice","setSelectedLocation","setCurrentPage","useLocation","isMentorCardFetched","setIsMentorCardFetched","url2","mentordetails","setMentorDetails","truncateBio","bio","lineCount","words","truncatedBio","tools","minPrice","at","maxPrice","mentorCardDetails","paddingRight","Array","isArray","textAlign","columnGap","Badge","pill","consultations","ratings","rel","first","MentorProfile","mid","useParams","url1","mentorprofiledetails1","setMentorProfileDetails1","loading","setLoading","skillsSectionRef","useRef","showAll","setShowAll","scrollToSkills","current","y","getBoundingClientRect","pageYOffset","scrollTo","toggleShowAll","prevShowAll","mentorReviews","mentorProfile","remainingSkillsCount","countryName","videoUrl","introVideo","thumbnailUrl","regex","match","videoID","achievement","mentorId","mentorName","featuredArticle","MentorAnswers","questionId","answers","setAnswers","answers1","setAnswers1","editing","setEditing","editedQuestion","setEditedQuestion","editedAnswer1","setEditedAnswer1","editStates","setEditStates","loadingStates","setLoadingStates","questionLoadingStates","setQuestionLoadingStates","updateTrigger","setUpdateTrigger","textQuillStandart","setTextQuillStandart","AnswersByMentors","AnswersByMentors1","roleRes","userId","menteeUserId","put","prevAnswers","Spinner","handleCancel","handleEdit","deleteUrl","delete","animation","block","answer","an","mentorRole","answered","prev","updatedAnswer","answerText","updatedAnswers","ans","prevState","handleSave1","handleCancel1","answerToUpdate","handleEdit1","answerId","handleDeleteAnswer","szie","strippedAnswerText","DOMParser","parseFromString","textContent","updatedResponse","isArrayOfLength","MentorConsult","inputkey1","setInputKey1","MentorCreatedSlot","mentoravailable","setMentorAvailable","currentWeekStart","setCurrentWeekStart","URLSearchParams","search","selectedHourDropdown","setSelectedHourDropdown","selectedHourDropdown1","setSelectedHourDropdown1","minutedrop","setMinutedrop","minutedrop1","setMinutedrop1","modalSmall","setModalSmall","selectedfromampm","setSelectedFromAmPm","selectedfromampm1","setSelectedFromAmPm1","fetchMentorSlotsCreate","fromTime","toTime","availability","startOfWeekTimestamp","setHours","endOfWeekTimestamp","newUrl","origin","replaceState","startOfWeek","getStartOfWeek","currentDate","getDay","diff","generateDropdownItemsSelect","formattedHour","generateMinuteDropdownItems","minute","formattedMinute","generateDropdownItems1","generateMinuteDropdownItems1","goToPreviousWeek","newStartDate","goToNextWeek","month","isPreviousWeekDisabled","currentWeekStartDate","storedWeekStart","handleTimeSlotClick","handleAddSlotClick","handleDeleteSlotClick","confirm","selectedDateTime","selectedHourFrom","toDateTime","selectedHourTo","deleteMentorSlot","handleCloseIconClick","stopPropagation","selectData","minutesSelectData","toHoursSelectData","toMinutesSelectData","fromAmPmSelectData","generateAmPmDropdownItems","amPm","toAmPmSelectData","generateAmPmDropdownItems1","opacity","onKeyDown","tabIndex","bordered","getWeekDates","weekDates","startDate","hasSlotsForDay","slots","availableSlots","avail","toDateString","FromDate","ToDate","fromHours","fromMinutes","fromPeriod","toHours","toMinutes","toPeriod","isPastTime","onMouseEnter","currentTarget","classList","add","onMouseLeave","remove","every","some","bookedSlots","row","DateRangePicker","selectedHour","selectedMinute","selectedAmPmFrom","selectedAmPmTo","slot","redirectToSessionLists1","FilterQuestions","isQuestionFetched","setIsQuestionFetched","multiquestions","setMultiQuestions","originalQuestions","setOriginalQuestions","selectedValue","setSelectedValue","selectedCategories","setSelectedCategories","handleSelect","handleCategoryChange","checked","prevQuestions","q","oq","sort","categories","FilterMultiQuestions","CustomInput","qs","newValue","questionToUpdate","handleSave","questionToEdit","question","AskQuestion","MyQandA","myanswers","setMyAnswers","answerPagination","setAnswerPagination","myquestions","setMyQuestions","currentPage1","setCurrentPage1","pagination","setPagination","MyAnswers","MyQuestions","totalQuestions","questions","qdate","qsdateformat","totalAnswers","MentorSessionList","session","setSession","upcomingsession","setUpcomingSession","sessionPagination","setSessionPagination","showSuccessCard","setShowSuccessCard","setMentorName","upcomingSessionsUrl","sessionHistoryUrl","SessionHistroy","queryParams","upcomingSessions","SessionUpcomingHistroy","up","fromtime","totime","updateformat","timeOptions","hour","toLocaleTimeString","handleJoinCall","fullUrl","sh","shdateformat","durationInMs","toFixed","MentorSessionUpcoming","upcomingSession","appointment","menteeId","MyProfile","isEditing","setIsEditing","isEditingAbout","setIsEditingAbout","isEditingButton","setIsEditingButton","isEditingPrice","setIsEditingPrice","setImage","setFirstName","setJobTitle","resumeFileName","setResumeFileName","resumeFileId","setResumeFileId","setExperience","setLocation","newInputSkill","setNewInputSkill","setSkills","setUserId","setLastName","setEmail","setCompany","setCategory","setBio","setPrice","linkedinUrl","setLinkedinUrl","twitterHandle","setTwitterHandle","website","setWebsite","setIntroVideo","setFeaturedArticle","reasonForMentor","setReasonForMentor","setAchievement","setProfileLoading","skillValidationMessage","setSkillValidationMessage","isProfileUpdated","setIsProfileUpdated","imageEditModal","setImageEditModal","selectedFile","setSelectedFile","selectedFileBase64","setSelectedFileBase64","fileError","setFileError","endUrl","inputUrl","imageEditUrl","mentorProfileDetails","userData","documentName","documentId","inputData","mentorProfileDetails1","updateMEntorProfile","updatedData","_error$response","_error$response$data","postImageData","handleAddSkill","newSkill","dropdownOpen","setDropdownOpen","borderBottom","reader","FileReader","onloadend","base64Image","result","readAsDataURL","for","toggleDropdown","viewUrl","fileId","handleView","_error$response2","_error$response2$data","handleDelete","fileType","fileSize","uploadUrl","handleFileChange1","borderTop","ReactSortable","setList","_","handleRemoveSkill","MyWallet","setBalance","transactions","setTransactions","rechargeAmount","setRechargeAmount","fetchDataFromServer","walletData","newBalance","newTransactions","handleAmountButtonClick","amount","prevAmount","parseFloat","toString","preventDefault","handleRecharge","postData","transaction","abs","paymentmethod","ViewOtherListing","copied","setCopied","navigator","clipboard","writeText","xmlns","fill","viewBox","fillRule","d","ViewJobListing","contact","LawQuestionAnswer","listClassName","PaginationItem","PaginationLink","JobList","joblist","LawyerJobsList","inProgress","j","createdAtDate","formattedDate","toLocaleDateString","modifiedAtDate","modifiedAt","formattedModifiedAt","lawyerName","lawyerId","onKeyPress","handleKeyPress","path","jobName","completed","LawyerJobList","clientName","clientId","clientUserId","AddReview","setRating","setFeedBack","setPost","Reviewurl","onRate","ratingVal","handleBackToLawyerJobsClick","VideoCallCompletedPage","submissionStatus","setSubmissionStatus","setName","setFromTime","setToTime","setMode","setDuration","waitingForData","setWaitingForData","sid","getUrl","intervalId","attempts","dur","Jumbotron","handleMentorClick","handleDashboardClick","MyComponent","process","LawyerMyProfile","newInputTopics","setNewInputTopics","setImageUrl","setLanguages","topic","setTopic","setRatings","setStar","about","setAbout","packages","setPackages","topicValidationMessage","setTopicValidationMessage","isPosted","setIsPosted","isEditingLanguages","setIsEditingLanguages","isEditingTopics","setIsEditingTopics","isEditingPackages","setIsEditingPackages","isAddPackage","setIsAddPackage","pid","setPid","editPackage","setEditPackage","serviceName","newPackage","setNewPackage","packageURL","topicName","LawyerPackage","fetchedPackages","handleAddTopics","newTopics","languageOptions","selectedLanguages","setSelectedLanguages","selectedOptions","languagesArray","newLanguages","currentPackage","setCurrentPackage","headline","handleInputChange","listStyle","content","isMulti","_language$find2","handleRemoveLanguages","handleLanguagesSave","handleLanguagesCancel","handleRemoveTopics","handleSaveTopics","handleTopicCancel","pack","handlePackageEditClick","prevPackages","handleAddPackageCancel","deleteURL","handlePackageDeleteClick","updateURL","handlePackageCancelEdit","currentYear","years","year","linkedInUrl","setLinkedInUrl","personalWebsite","setPersonalWebsite","education","setEducation","work","setWork","goal","setGoal","certifications","setCertifications","seekingFor","setSeekingFor","newInputCertifications","setNewInputCertifications","certificationsValidationMessage","setCertificationsValidationMessage","uid","profileData","setProfileData","modalEditProfile","setModalEditProfile","modalEditExperience","setModalEditExperience","modalEditSkills","setModalEditSkills","modalEditLanguage","setModalEditLanguage","modalEditEducation","setModalEditEducation","modalAbout","setModalAbout","profileUpdate","setProfileUpdate","modalEditCertifications","setModalEditCertifications","experienceEditOpen","setExperienceEditOpen","educationEditOpen","setEducationEditOpen","selectedIndex","setSelectedIndex","selectedWorkIndex","setSelectedWorkIndex","newWork","setNewWork","newEducation","setNewEducation","userPhotoUrl","updateMentorProfile","updatedEducation","updatedWork","handleAddCertifications","newCertification","handleImagePost","w","endDate","handleAddWork","yr","prevWork","newWorkArray","handleEditWork","certification","handleRemoveCertifications","college","degree","department","handleAddEducation","handleSaveEducation","prevEducation","newEducationArray","handleEditEducation","UserProfile","linkedIn","handleLinkedInClick","handleTwitterClick","twitterUrl","StudentList","studentListData","setStudentListData","isStudentCardFetched","setIsStudentCardFetched","getStudentData","students","StudentViewProfile","studentProfileDetails","setStudentProfileDetails","StudentProfileDetails","edc","AlumniMyProfile","_college$","_college$2","_college$3","_experience$editingIn","_experience$editingIn2","_experience$editingIn3","_experience$editingIn4","_experience$editingIn5","_experience$editingIn6","isEditingExp","setIsEditingExp","setCollege","isEditingSkills","setIsEditingSkills","isEditingEducation","setIsEditingEducation","isEditingEducationSecond","setIsEditingEducationSecond","expId","setExpId","collegeId","setCollegeId","isEditingExpSecond","setIsEditingExpSecond","editingIndex","setEditingIndex","colleges","addExperienceUrl","field","updatedExperience","addEducationUrl","handleInputEducationChange","updatedCollege","handleDeleteEducation","collegeToDelete","prevCollege","visibility","handlePersonalWebsiteClick","startsWith","rows","jobtitle","startYear","endYear","handleEditExperience","experienceToDelete","prevExperience","handleDeleteExperience","handleSaveExp","currentExperience","experienceData","updateUrl","updateExperience","handleCancelEditExp","newCollegeEntry","currentCollege","Number","educationUpdateUrl","newCollegeId","entry","updateEducation","handleCancelEditEducation","handleSaveSkill","handleSkillCancel","AlumniCalendar","AlumniSessionLists","ApplyAsMentor","forms","createRef","currentStep","setCurrentStep","file1","setFile1","setSkillsTag","certificationsTag","setCertificationsTag","imageError","setImageError","imageErrorMessage","setImageErrorMessage","aboutLoading","setAboutLoading","profileLoading","experienceLoading","setExperienceLoading","aboutField","setAboutField","certificateInputValue","setCertificateInputValue","studentTypeOptions","handleNextStep","handlePrevStep","handleFileChange","validateFile","userProfileUrl","ImageUrl","mentorExperienceUrl","userAboutUrl","ResumeUploadUrl","imageError1","setImageError1","imageErrorMessage1","setImageErrorMessage1","addEducation","addWorkExperience","previousEducation","edu","handleWorkInputChange","previousWorkExperience","works","handleTagsChange","newSkills","handleCertificationsChange","newCertifications","studentType","userProfile","setItem","code","postDataUserProfile","Alert","autoComplete","FormText","innerRef","postExperience","validateOnMount","service","_errors$education","_errors$education$ind","_touched$education","_touched$education$in","_errors$education2","_errors$education2$in","_touched$education2","_touched$education2$i","_errors$education3","_errors$education3$in","_touched$education3","_touched$education3$i","_errors$education4","_errors$education4$in","_touched$education4","_touched$education4$i","_errors$education5","_errors$education5$in","_touched$education5","_touched$education5$i","splice","removeEducation","_errors$education6","_errors$education6$in","_touched$education6","_touched$education6$i","_errors$education7","_errors$education7$in","_touched$education7","_touched$education7$i","_errors$education8","_errors$education8$in","_touched$education8","_touched$education8$i","_errors$education9","_errors$education9$in","_touched$education9","_touched$education9$i","_errors$education10","_errors$education10$i","_touched$education10","_touched$education10$","_errors$education11","_errors$education11$i","_touched$education11","_touched$education11$","newWorkExperience","removeWorkExperience","postDataExp","postAboutData","inputProps","renderInput","addTag","other","_excluded2","endsWith","newTag","handleCertificateChangeInput","Settings","AlumniLists","setSelectedUniversity","AlumniProfile","alumniprofiledetails","setAlumniProfileDetails","backgroundImage","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","Footer","icon","roles","subs","Sidebar","Component","constructor","super","handleWindowResize","isTrusted","this","getMenuClassesForResize","handleDocumentClick","container","getContainer","isMenuClick","contains","parentElement","setState","viewingParentMenu","classes","menuHiddenBreakpoint","subHiddenBreakpoint","windowWidth","ReactDOM","findDOMNode","hasSubItems","getIsHasSubItem","handleProps","addEvents","removeEvents","setSelectedLiActive","callback","oldli","querySelector","oldliSub","selectedSublink","selectedlink","selectedParentMenu","getAttribute","selectedParentNoSubItem","menuItems","setHasSubItemStatus","hasSubmenu","menuItem","openSubMenu","selectedParent","hasSubMenu","toggleMenuCollapse","menuKey","collapsedMenus","filteredList","currentUser","componentDidUpdate","prevProps","componentDidMount","componentWillUnmount","vertical","newWindow","IntlMessages","sub","thirdSub","thirdIndex","withRouter","connect","menu","authUser","MenuIcon","MobileMenuIcon","TopnavDarkSwitch","switchChecked","setSwitchChecked","tooltipOpen","setTooltipOpen","getCurrentColor","Switch","changeMode","setCurrentColor","reload","Tooltip","placement","TopnavNotifications","notifications","setNotifications","clicked","setClicked","fetchNotifications","UncontrolledDropdown","handleClick","notification","setContainerClassnamesAction","clickOnMobileMenuAction","logoutUserAction","logoutUser","changeLocaleAction","searchKeyword","setSearchKeyword","timeUntilExpiration","now","myProfile","clear","handleMySessionsClick","handleMySlots","userName","menuButtonClick","_clickCount","_conClassnames","mobileMenuButtonClick","_containerClassnames","isDarkSwitchActive","handleSettingsClick","divider","removeItem","TopNav","ViewMyApp","lazy","ViewMyApplications","ViewDashBoard","ViewMyDetails","ViewMyDocuments","ProfilePage","MentorCreatedSlots","ViewMyChat","ViewActivities","MentorListSessions","ViewMylogin","ViewLawyerlogin","ViewAlumnilogin","ViewHrlogin","ViewMyProfile","ViewMyWallet","ViewMyListing","ViewVideoCall","ViewListingTab","ViewStayListingTab","ViewJobListingTab","ViewOtherListingTab","ViewStayListing","ViewLawyer","ViewUserCard","ViewLawyerProfile","ViewLawyerPayment","ViewJobDetail","ViewJobList","ViewLawyerJobList","ViewLawyerReviews","ViewCallCompleted","ViewClassRoom","ViewLawyerMyProfile","ViewUserMyProfile","ViewUserProfile","ViewStudentList","ViewStudentProfile","ViewAlumniMyProfile","ViewAlumniCalendar","ViewMyAlumniSessions","ViewUserApply","ViewSettings","ViewAlumniLists","ViewAlumniProfile","ViewRealEstateAgentApply","statusRes","redirectTo","AppLayout","Suspense","fallback","Redirect","exact","from","Route","JobListing","isLoaded","setIsLoaded","setItems","expandedIndex","setExpandedIndex","sortedData","a","b","CardSubtitle","toggleExpand","setTotalPage","isFirst","setIsFirst","isLast","setIsLast","interestedClickUrl","currentUserId","currentUserRole","currentUserName","jobLists","removeTags","str","_data$description","isCurrentlyInterested","itemId","interestedUsers","loggedInUserInterested","user","jobListingId","interested","handleInterestedButtonClick","DesktopNotifications","permission","setPermission","Notification","showNotification","requestPermission","clickedCardTitle","setClickedCardTitle","copiedId","setCopiedId","noData","setNoData","isHovered","setIsHovered","otherposts","otherPostId","handleShareButtonClick","StayListing","isOwnerInfoVisible","setIsOwnerInfoVisible","stayrooms","toggleOwnerInfo","prevId","transition","pointerEvents","stayroomId","DetailsAltPages","setActiveTab","modal","setModal","modalTitle","setModalTitle","listingType","setListingType","toggleModal","toggleModalState","pop","changeTab","tab","All","OtherListing","config","codec","appId","useClient","createClient","useMicrophoneAndCameraTracks","createMicrophoneAndCameraTracks","Controls","client","tracks","setStart","setInCall","setStatus","trackState","setTrackState","video","audio","mute","setEnabled","ps","fluid","leave","removeAllListeners","close","leaveChannel","Video","users","bookedByName","createdByName","otherUser","AgoraVideoPlayer","videoTrack","bottom","VideoCallCtrl","setUsers","start","callStartTime","setCallStartTime","endTime","setEndTime","timeRemaining","setTimeRemaining","channelName","setChannelName","rtcToken","setRtcToken","setAppId","setBookedByName","setCreatedByName","ready","readyForCall","setReadyForCall","getToken","remainingDuration","init","mediaType","subscribe","prevUsers","audioTrack","play","stop","User","publish","iTime","hours","minutes","period","initiatedTime","timerId","prevTime","minutesRemaining1","setMinutesRemaining1","updateRemainingTime","callCurrentTime","callTimeRemaining","minutesRemaining","VideoCall","inCall","timer","SaySomething","messageInput","handleChatInputPress","handleChatInputChange","handleSendButtonClick","ApplicationMenu","containerRef","setIsOpen","ChatHeading","thumb","lastSeenDate","chatApp","allContacts","conversations","loadingConversations","loadingContacts","selectedUser","selectedUserId","getContactsAction","getContacts","getConversationsAction","getConversations","changeConversationAction","changeConversation","addMessageToConversationAction","addMessageToConversation","setMessageInput","scrollBarRef","focusScrollBottom","_ps","scrollTop","contentHeight","selectedConversation","connection","setConnection","setToken","peerId","setPeerId","tokenRes","fullName","setFullName","UserNameUrl","chatUserName","err","peerMessage","setPeerMessage","logs","setLogs","serverConversations","setServerConversations","loadingConversation","setLoadingConversation","chatLoading","setChatLoading","conversationIds","setConversationIds","conversationFullName","setConversationFullName","ids","conversation","conversationId","timeoutId","conn","AC","appKey","addEventHandler","onConnected","getServerConversations","pageSize","getHistoryMessages","targetId","chatType","searchDirection","searchOptions","msgTypes","startTime","newLogs","msg","prevLogs","onTextMessage","addLog","onTokenWillExpire","onTokenExpired","onError","agoraToken","handleSendMessage","create","send","handleConversationClick","ApplyAsAlumniAbout","fields","mentorAboutUrl","imageUploadUrl","alumniResumePostUrl","postProfileData","alumniProfile","postImage","postResumeData","ApplyAsAlumniexperience","experiences","alumniExperienceUrl","exp","_e$target","ApplyAsAlumniProfile","alumniProfileUrl","fieldStudy","ApplyAlumni","ApplyAsHrAbout","hrAboutUrl","hrResumePostUrl","residentType","jobType","HRAbout","ApplyAsHrExperience","hrExperienceUrl","ApplyAsHrProfile","hrProfileUrl","hrProfile","ApplyHR","MyJobListing","deleteJobPost","setDeleteJobPost","interestUsersModal","setInterestedUsersModal","selectedJob","setSelectedJob","jobId","setJobId","request","fetchMyJobListingData","handleEditJob","editUrl","jobData","handleMyJobListDelete","stayDeleteUrl","deletePost","interestedPeopleUrl","handleModalToggle","ListGroup","flush","datas","ListGroupItem","tag","lowerCaseRole","handleUserClick","MyOtherListing","deleteStayPost","setDeleteStayPost","selectedOther","setSelectedOther","fetchMyOtherListingData","handleEditOthers","othersData","handleMyOtherListDelete","otherDeleteUrl","MyStayListing","selectedStay","setSelectedStay","fetchMyStayListingData","handleEditStay","stayData","handleMyStayListDelete","MyListing","RealEstateAgentAbout","RealEstateAgentExperience","RealEstateAgentProfile","RealEstateAgentApply","BottomNavigation","onClickPrev","prevLabel","onClickNext","nextLabel","licenseBalance","redirectToSessionLists","selectedradiobutton","setSelectedRadioButton","license","setLicense","handleLicenseNextButtonClick","newData","queryString","encodeURIComponent","LicenseDetails","Wizard","Steps","Step","sessionPrice","availableBalance","balanceAfterDeducation","goToNext","handleNextButtonClick","handleCheckAvailability","availabilityUrl","alert","goToPrev","searchParams","fetchMentorAvailability","nextWeekStart","nextWeekEnd","PopupWizard","LawyerJobNotes","notes","setNotes","newNote","setNewNote","newTitle","setNewTitle","editModal","setEditModal","editNoteId","setEditNoteId","editedTitle","setEditedTitle","editedText","setEditedText","setUpdate","notsFetched","setNotesFetched","addNoteLoading","setAddNoteLoading","saveLoading","setSaveLoading","deleteLoading","setDeleteLoading","addModal","setAddModal","notesUrl","fetchNotes","toggleAddModal","toggleEditModal","wrapClassName","backdrop","newNoteData","details","handleAddNote","note","noteToEdit","handleEditNote","updatedNotes","handleDeleteNote","updatedNote","saveEditedNote","ReactDOMServer","require","dropzoneConfig","thumbnailHeight","maxFilesize","previewTemplate","renderToStaticMarkup","DropzoneExample","myDropzone","removeAllFiles","stepNo","dropzoneComponentConfig","postUrl","DropzoneComponent","djsConfig","eventHandlers","dropzone","doneByData","jobStatusData","JobDetails","selectedStep","setSelectedStep","jobdetails","setJobDetails","jid","editMode","setEditMode","isHovered1","setIsHovered1","jobeditmode","setJobEditMode","isNewStep","setIsNewStep","jobstatuseditmode","setJobStatusEditMode","userstep","setUserStep","jobstatuschange","setJobStatusChange","editData","setEditData","stepName","doneBy","upload","LawyerJobsDetails","isFormFilled","handleAddStepCard","newStepNumber","newCard","stepNumber","updatedJobDetails","handleStepClick","handleEditChange","ApproveJobStatusByClient","approveUrl","RejectJobStatusByClient","dataToSend","existingStepNumbers","selectedStepNumber","postResponse","saveEdits1","warn","saveEdits","downloadDocument","updateUrl1","deleteDocument","handleKeyDown","action","isLawyer","navigateToProfile","handleSaveJobName","saveJobs","handleCancelClick","updateJobStatusUrl","selectedKey","saveJobStatus","handleCancelStatusClick","jobStatus","fontWeight","documentList","updateStatusUrl","saveStatus","ShowNotifications","MyApp","CategoryData","short","ApplyMentor","setAmount","toolsTag","setToolsTag","skillError","setSkillError","skillErrorMessage","setSkillErrorMessage","setWorks","updatedWorks","handleFileChangeResume","mentorProfileUrl","experienceUrl","mentorResumeUrl","postDataAbout","imageData","handleError","handleSliderChange","handleToolsTagsChange","newTools","postDataProfile","postDataExperience","_errors$experiences","_errors$experiences$i","_touched$experiences","_touched$experiences$","_errors$experiences2","_errors$experiences2$","_touched$experiences2","_touched$experiences3","_errors$experiences3","_errors$experiences3$","_touched$experiences4","_touched$experiences5","_errors$experiences4","_errors$experiences4$","_touched$experiences6","_touched$experiences7","_errors$experiences5","_errors$experiences5$","_touched$experiences8","_touched$experiences9","_errors$experiences6","_errors$experiences6$","_touched$experiences10","_touched$experiences11","validatePackageTopic","validateAbout","validatePackageDescription","validateServiceName","ApplyAsLawyer","topicsTag","setTopicsTag","AboutLoading","servicesLoading","setServicesLoading","topicsInputValue","setTopicsInputValue","topics","setServices","addService","lawyerAboutUrl","lawyerProfileUrl","packageUrl","lawyerImagePostUrl","lawyerResumePostUrl","handleTopicsTagsChange","prevServices","handleTopicsChangeInput","services1","postServices","_errors$services","_errors$services$inde","_touched$services","_touched$services$ind","_errors$services2","_errors$services2$ind","_touched$services2","_touched$services2$in","_errors$services3","_errors$services3$ind","_touched$services3","_touched$services3$in","newServices","removeService","LawyerCardFilter","onTopicsChange","onLanguageChange","selectedTopics","selectedLanguage","topicSearchUrl","topicsSize","setTopicsSize","topicsPaginationMeta","setTopicsPaginationMeta","topicsData","setTopicsData","topicsFetched","setTopicsFetched","handleTopicsSelect","handleLanguageSelect","filteredLanguage","setFilteredLanguage","searchLanguage","setSearchLanguage","searchTopics","setSearchTopics","FetchTopics","handleTopicsLoadMore","UserCard","setSelectedTopics","setSelectedLanguage","isLawyerCardFetched","setIsLawyerCardFetched","userdetails","setUserDetails","LawyerCardDetails","LawyerTabCard","handlePurchase","LawyerProfile","lawyerprofile","setLawyerProfile","packageId","ProfileLawyer","BottomNavigationWizard","paymentButtonType","paymentMethod","handlePayFullyFromOnline","handlePayFromWallet","intl","walletamount","setWalletAmount","getWalletAmountUrl","WalletAmountGet","calculateBalanceAfterDeduction","balanceAfterDeduction","calculateRemainingAmountToPay","mg"],"mappings":"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","file":"static/js/views-app.cf4f1a36.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col } from 'reactstrap';\r\n\r\nconst Colxx = (props) => (\r\n  <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = ({ className }) => (\r\n  <div className={`separator ${className}`} />\r\n);\r\nexport { Colxx, Separator };\r\n","import { NotificationManager } from 'components/common/react-notifications';\r\n\r\nconst ToasterComponent = (type, messages, title = \"\", duration = 3000) => {\r\n  messages.forEach((message) => {\r\n    switch (type) {\r\n      case \"success\":\r\n        NotificationManager.success(\r\n          message.message,\r\n          title || message.status,\r\n          duration,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n        break;\r\n      case \"warning\":\r\n        NotificationManager.warning(\r\n          message.message,\r\n          title || \"Warning\",\r\n          duration,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n        break;\r\n      case \"error\":\r\n        NotificationManager.error(\r\n          message.message,\r\n          title || \"Error\",\r\n          duration,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n        break;\r\n      default:\r\n        NotificationManager.info(\r\n          message.message,\r\n          title || \"Info\",\r\n          duration,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default ToasterComponent;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nconst ThumbnailLetters = ({ text, color, className, rounded, small }) => {\r\n  let letters = '';\r\n  if (text.indexOf(' ') > -1) {\r\n    text.split(' ').map((word) => {\r\n      if (word.length > 1) letters += word.slice(0, 1);\r\n      return '';\r\n    });\r\n  } else {\r\n    letters += text.slice(0, 2);\r\n  }\r\n\r\n  if (letters.length > 2) {\r\n    letters = letters.slice(0, 2);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`align-self-center list-thumbnail-letters ${\r\n        color ? `btn-${color}` : ''\r\n      }  ${className}  ${classnames({\r\n        'rounded-circle': rounded,\r\n        small,\r\n      })}`}\r\n      title={text}\r\n    >\r\n      {letters}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ThumbnailLetters);\r\n","const TimestampConverter = ({ timeStamp, format }) => {\r\n  const formatDateTime = () => {\r\n    const time = new Date(parseInt(timeStamp, 10));\r\n    const Hours = String(time.getHours() % 12 || 12).padStart(2, \"0\");\r\n    const Minutes = String(time.getMinutes()).padStart(2, \"0\");\r\n    const Period = time.getHours() < 12 ? \"am\" : \"pm\";\r\n    const MonthNames = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    const Month = MonthNames[time.getMonth()];\r\n    const Day = time.getDate();\r\n    const Year = time.getFullYear();\r\n\r\n    const getDayWithSuffix = (day) => {\r\n      if (day > 3 && day < 21)\r\n        return (\r\n          <>\r\n            {day}\r\n            <sup>th</sup>\r\n          </>\r\n        );\r\n      switch (day % 10) {\r\n        case 1:\r\n          return (\r\n            <>\r\n              {day}\r\n              <sup>st</sup>\r\n            </>\r\n          );\r\n        case 2:\r\n          return (\r\n            <>\r\n              {day}\r\n              <sup>nd</sup>\r\n            </>\r\n          );\r\n        case 3:\r\n          return (\r\n            <>\r\n              {day}\r\n              <sup>rd</sup>\r\n            </>\r\n          );\r\n        default:\r\n          return (\r\n            <>\r\n              {day}\r\n              <sup>th</sup>\r\n            </>\r\n          );\r\n      }\r\n    };\r\n\r\n    const isToday = () => {\r\n      const today = new Date();\r\n      return (\r\n        today.getDate() === time.getDate() &&\r\n        today.getMonth() === time.getMonth() &&\r\n        today.getFullYear() === time.getFullYear()\r\n      );\r\n    };\r\n\r\n    const isYesterday = () => {\r\n      const yesterday = new Date();\r\n      yesterday.setDate(yesterday.getDate() - 1);\r\n      return (\r\n        yesterday.getDate() === time.getDate() &&\r\n        yesterday.getMonth() === time.getMonth() &&\r\n        yesterday.getFullYear() === time.getFullYear()\r\n      );\r\n    };\r\n\r\n    switch (format) {\r\n      case \"time\":\r\n        return `${Hours}:${Minutes} ${Period}`;\r\n      case \"datetime\":\r\n        if (isToday()) {\r\n          return `Today ${Hours}:${Minutes} ${Period}`;\r\n        }\r\n        if (isYesterday()) {\r\n          return `Yesterday ${Hours}:${Minutes} ${Period}`;\r\n        }\r\n        return (\r\n          <span>\r\n            {getDayWithSuffix(Day)} {Month} {Year} {Hours}:{Minutes} {Period}\r\n          </span>\r\n        );\r\n      case \"date\":\r\n        if (isToday()) {\r\n          return \"Today\";\r\n        }\r\n        if (isYesterday()) {\r\n          return \"Yesterday\";\r\n        }\r\n        return (\r\n          <span>\r\n            {getDayWithSuffix(Day)} {Month} {Year}\r\n          </span>\r\n        );\r\n      default:\r\n        return \"Invalid format\";\r\n    }\r\n  };\r\n\r\n  const formattedDateTime = formatDateTime();\r\n\r\n  return <span className=\"mx-1\">{formattedDateTime}</span>;\r\n};\r\n\r\n// <TimestampConverter timeStamp={timestamp} format=\"time\" />   For Time only\r\n// <TimestampConverter timeStamp={timestamp} format=\"datetime\" />   For Date and Time\r\n// <TimestampConverter timeStamp={timestamp} format=\"date\" />   For Date only\r\n\r\nexport default TimestampConverter;\r\n","import React from 'react';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\n\r\nconst Pagination = ({\r\n  totalPage = 0,\r\n  currentPage = 1,\r\n  numberLimit = 5,\r\n  lastIsActive = true,\r\n  firstIsActive = true,\r\n  onChangePage,\r\n}) => {\r\n  let startPoint = 1;\r\n  let endPoint = numberLimit;\r\n\r\n  if (numberLimit > totalPage) {\r\n    startPoint = 1;\r\n    endPoint = totalPage;\r\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\r\n    startPoint = 1;\r\n    endPoint = numberLimit;\r\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\r\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\r\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\r\n  } else {\r\n    startPoint = totalPage - (numberLimit - 1);\r\n    endPoint = totalPage;\r\n  }\r\n  startPoint = startPoint === 0 ? 1 : startPoint;\r\n  const points = [];\r\n  for (let i = startPoint; i <= endPoint; i += 1) {\r\n    points.push(i);\r\n  }\r\n\r\n  const firstPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\r\n  const lastPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\r\n  const prevPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\r\n  const nextPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\r\n  return totalPage > 1 ? (\r\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\r\n      <Nav className=\"pagination justify-content-center\">\r\n        {firstIsActive && (\r\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link first c-pointer\"\r\n              onClick={() => onChangePage(1)}\r\n            >\r\n              <i className=\"simple-icon-control-start\" />\r\n            </NavLink>\r\n          </NavItem>\r\n        )}\r\n\r\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\r\n          <NavLink\r\n            className=\"page-link prev c-pointer\"\r\n            onClick={() => onChangePage(currentPage - 1)}\r\n          >\r\n            <i className=\"simple-icon-arrow-left\" />\r\n          </NavLink>\r\n        </NavItem>\r\n        {points.map((i) => {\r\n          return (\r\n            <NavItem\r\n              key={i}\r\n              className={`page-item ${currentPage === i && 'active'}`}\r\n            >\r\n              <NavLink\r\n                className=\"page-link c-pointer\"\r\n                onClick={() => onChangePage(i)}\r\n              >\r\n                {i}\r\n              </NavLink>\r\n            </NavItem>\r\n          );\r\n        })}\r\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\r\n          <NavLink\r\n            className=\"page-link next c-pointer\"\r\n            onClick={() => onChangePage(currentPage + 1)}\r\n          >\r\n            <i className=\"simple-icon-arrow-right\" />\r\n          </NavLink>\r\n        </NavItem>\r\n        {lastIsActive && (\r\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link last c-pointer\"\r\n              onClick={() => onChangePage(totalPage)}\r\n            >\r\n              <i className=\"simple-icon-control-end\" />\r\n            </NavLink>\r\n          </NavItem>\r\n        )}\r\n      </Nav>\r\n    </Colxx>\r\n  ) : (\r\n    <Colxx xxs=\"12\" className=\"mt-2\" />\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nconst InjectMassage = (props) => <FormattedMessage {...props} />;\r\n\r\nexport default injectIntl(InjectMassage, {\r\n  withRef: false,\r\n});\r\n","const country = [\r\n    {\r\n        \"name\": \"Afghanistan\",\r\n        \"iso_code\": \"AF\"\r\n    },\r\n    {\r\n        \"name\": \"Albania\",\r\n        \"iso_code\": \"AL\"\r\n    },\r\n    {\r\n        \"name\": \"Algeria\",\r\n        \"iso_code\": \"DZ\"\r\n    },\r\n    {\r\n        \"name\": \"American Samoa\",\r\n        \"iso_code\": \"AS\"\r\n    },\r\n    {\r\n        \"name\": \"Andorra\",\r\n        \"iso_code\": \"AD\"\r\n    },\r\n    {\r\n        \"name\": \"Angola\",\r\n        \"iso_code\": \"AO\"\r\n    },\r\n    {\r\n        \"name\": \"Anguilla\",\r\n        \"iso_code\": \"AI\"\r\n    },\r\n    {\r\n        \"name\": \"Antarctica\",\r\n        \"iso_code\": \"AQ\"\r\n    },\r\n    {\r\n        \"name\": \"Antigua and Barbuda\",\r\n        \"iso_code\": \"AG\"\r\n    },\r\n    {\r\n        \"name\": \"Argentina\",\r\n        \"iso_code\": \"AR\"\r\n    },\r\n    {\r\n        \"name\": \"Armenia\",\r\n        \"iso_code\": \"AM\"\r\n    },\r\n    {\r\n        \"name\": \"Aruba\",\r\n        \"iso_code\": \"AW\"\r\n    },\r\n    {\r\n        \"name\": \"Australia\",\r\n        \"iso_code\": \"AU\"\r\n    },\r\n    {\r\n        \"name\": \"Austria\",\r\n        \"iso_code\": \"AT\"\r\n    },\r\n    {\r\n        \"name\": \"Azerbaijan\",\r\n        \"iso_code\": \"AZ\"\r\n    },\r\n    {\r\n        \"name\": \"Bahamas The\",\r\n        \"iso_code\": \"BS\"\r\n    },\r\n    {\r\n        \"name\": \"Bahrain\",\r\n        \"iso_code\": \"BH\"\r\n    },\r\n    {\r\n        \"name\": \"Bangladesh\",\r\n        \"iso_code\": \"BD\"\r\n    },\r\n    {\r\n        \"name\": \"Barbados\",\r\n        \"iso_code\": \"BB\"\r\n    },\r\n    {\r\n        \"name\": \"Belarus\",\r\n        \"iso_code\": \"BY\"\r\n    },\r\n    {\r\n        \"name\": \"Belgium\",\r\n        \"iso_code\": \"BE\"\r\n    },\r\n    {\r\n        \"name\": \"Belize\",\r\n        \"iso_code\": \"BZ\"\r\n    },\r\n    {\r\n        \"name\": \"Benin\",\r\n        \"iso_code\": \"BJ\"\r\n    },\r\n    {\r\n        \"name\": \"Bermuda\",\r\n        \"iso_code\": \"BM\"\r\n    },\r\n    {\r\n        \"name\": \"Bhutan\",\r\n        \"iso_code\": \"BT\"\r\n    },\r\n    {\r\n        \"name\": \"Bolivia\",\r\n        \"iso_code\": \"BO\"\r\n    },\r\n    {\r\n        \"name\": \"Bosnia and Herzegovina\",\r\n        \"iso_code\": \"BA\"\r\n    },\r\n    {\r\n        \"name\": \"Botswana\",\r\n        \"iso_code\": \"BW\"\r\n    },\r\n    {\r\n        \"name\": \"Bouvet Island\",\r\n        \"iso_code\": \"BV\"\r\n    },\r\n    {\r\n        \"name\": \"Brazil\",\r\n        \"iso_code\": \"BR\"\r\n    },\r\n    {\r\n        \"name\": \"British Indian Ocean Territory\",\r\n        \"iso_code\": \"IO\"\r\n    },\r\n    {\r\n        \"name\": \"Brunei\",\r\n        \"iso_code\": \"BN\"\r\n    },\r\n    {\r\n        \"name\": \"Bulgaria\",\r\n        \"iso_code\": \"BG\"\r\n    },\r\n    {\r\n        \"name\": \"Burkina Faso\",\r\n        \"iso_code\": \"BF\"\r\n    },\r\n    {\r\n        \"name\": \"Burundi\",\r\n        \"iso_code\": \"BI\"\r\n    },\r\n    {\r\n        \"name\": \"Cambodia\",\r\n        \"iso_code\": \"KH\"\r\n    },\r\n    {\r\n        \"name\": \"Cameroon\",\r\n        \"iso_code\": \"CM\"\r\n    },\r\n    {\r\n        \"name\": \"Canada\",\r\n        \"iso_code\": \"CA\"\r\n    },\r\n    {\r\n        \"name\": \"Cape Verde\",\r\n        \"iso_code\": \"CV\"\r\n    },\r\n    {\r\n        \"name\": \"Cayman Islands\",\r\n        \"iso_code\": \"KY\"\r\n    },\r\n    {\r\n        \"name\": \"Central African Republic\",\r\n        \"iso_code\": \"CF\"\r\n    },\r\n    {\r\n        \"name\": \"Chad\",\r\n        \"iso_code\": \"TD\"\r\n    },\r\n    {\r\n        \"name\": \"Chile\",\r\n        \"iso_code\": \"CL\"\r\n    },\r\n    {\r\n        \"name\": \"China\",\r\n        \"iso_code\": \"CN\"\r\n    },\r\n    {\r\n        \"name\": \"Christmas Island\",\r\n        \"iso_code\": \"CX\"\r\n    },\r\n    {\r\n        \"name\": \"Cocos (Keeling) Islands\",\r\n        \"iso_code\": \"CC\"\r\n    },\r\n    {\r\n        \"name\": \"Colombia\",\r\n        \"iso_code\": \"CO\"\r\n    },\r\n    {\r\n        \"name\": \"Comoros\",\r\n        \"iso_code\": \"KM\"\r\n    },\r\n    {\r\n        \"name\": \"Congo\",\r\n        \"iso_code\": \"CG\"\r\n    },\r\n    {\r\n        \"name\": \"Congo The Democratic Republic Of The\",\r\n        \"iso_code\": \"CD\"\r\n    },\r\n    {\r\n        \"name\": \"Cook Islands\",\r\n        \"iso_code\": \"CK\"\r\n    },\r\n    {\r\n        \"name\": \"Costa Rica\",\r\n        \"iso_code\": \"CR\"\r\n    },\r\n    {\r\n        \"name\": \"Cote D'Ivoire (Ivory Coast)\",\r\n        \"iso_code\": \"CI\"\r\n    },\r\n    {\r\n        \"name\": \"Croatia (Hrvatska)\",\r\n        \"iso_code\": \"HR\"\r\n    },\r\n    {\r\n        \"name\": \"Cuba\",\r\n        \"iso_code\": \"CU\"\r\n    },\r\n    {\r\n        \"name\": \"Cyprus\",\r\n        \"iso_code\": \"CY\"\r\n    },\r\n    {\r\n        \"name\": \"Czech Republic\",\r\n        \"iso_code\": \"CZ\"\r\n    },\r\n    {\r\n        \"name\": \"Denmark\",\r\n        \"iso_code\": \"DK\"\r\n    },\r\n    {\r\n        \"name\": \"Djibouti\",\r\n        \"iso_code\": \"DJ\"\r\n    },\r\n    {\r\n        \"name\": \"Dominica\",\r\n        \"iso_code\": \"DM\"\r\n    },\r\n    {\r\n        \"name\": \"Dominican Republic\",\r\n        \"iso_code\": \"DO\"\r\n    },\r\n    {\r\n        \"name\": \"East Timor\",\r\n        \"iso_code\": \"TP\"\r\n    },\r\n    {\r\n        \"name\": \"Ecuador\",\r\n        \"iso_code\": \"EC\"\r\n    },\r\n    {\r\n        \"name\": \"Egypt\",\r\n        \"iso_code\": \"EG\"\r\n    },\r\n    {\r\n        \"name\": \"El Salvador\",\r\n        \"iso_code\": \"SV\"\r\n    },\r\n    {\r\n        \"name\": \"Equatorial Guinea\",\r\n        \"iso_code\": \"GQ\"\r\n    },\r\n    {\r\n        \"name\": \"Eritrea\",\r\n        \"iso_code\": \"ER\"\r\n    },\r\n    {\r\n        \"name\": \"Estonia\",\r\n        \"iso_code\": \"EE\"\r\n    },\r\n    {\r\n        \"name\": \"Ethiopia\",\r\n        \"iso_code\": \"ET\"\r\n    },\r\n    {\r\n        \"name\": \"External Territories of Australia\",\r\n        \"iso_code\": \"XA\"\r\n    },\r\n    {\r\n        \"name\": \"Falkland Islands\",\r\n        \"iso_code\": \"FK\"\r\n    },\r\n    {\r\n        \"name\": \"Faroe Islands\",\r\n        \"iso_code\": \"FO\"\r\n    },\r\n    {\r\n        \"name\": \"Fiji Islands\",\r\n        \"iso_code\": \"FJ\"\r\n    },\r\n    {\r\n        \"name\": \"Finland\",\r\n        \"iso_code\": \"FI\"\r\n    },\r\n    {\r\n        \"name\": \"France\",\r\n        \"iso_code\": \"FR\"\r\n    },\r\n    {\r\n        \"name\": \"French Guiana\",\r\n        \"iso_code\": \"GF\"\r\n    },\r\n    {\r\n        \"name\": \"French Polynesia\",\r\n        \"iso_code\": \"PF\"\r\n    },\r\n    {\r\n        \"name\": \"French Southern Territories\",\r\n        \"iso_code\": \"TF\"\r\n    },\r\n    {\r\n        \"name\": \"Gabon\",\r\n        \"iso_code\": \"GA\"\r\n    },\r\n    {\r\n        \"name\": \"Gambia The\",\r\n        \"iso_code\": \"GM\"\r\n    },\r\n    {\r\n        \"name\": \"Georgia\",\r\n        \"iso_code\": \"GE\"\r\n    },\r\n    {\r\n        \"name\": \"Germany\",\r\n        \"iso_code\": \"DE\"\r\n    },\r\n    {\r\n        \"name\": \"Ghana\",\r\n        \"iso_code\": \"GH\"\r\n    },\r\n    {\r\n        \"name\": \"Gibraltar\",\r\n        \"iso_code\": \"GI\"\r\n    },\r\n    {\r\n        \"name\": \"Greece\",\r\n        \"iso_code\": \"GR\"\r\n    },\r\n    {\r\n        \"name\": \"Greenland\",\r\n        \"iso_code\": \"GL\"\r\n    },\r\n    {\r\n        \"name\": \"Grenada\",\r\n        \"iso_code\": \"GD\"\r\n    },\r\n    {\r\n        \"name\": \"Guadeloupe\",\r\n        \"iso_code\": \"GP\"\r\n    },\r\n    {\r\n        \"name\": \"Guam\",\r\n        \"iso_code\": \"GU\"\r\n    },\r\n    {\r\n        \"name\": \"Guatemala\",\r\n        \"iso_code\": \"GT\"\r\n    },\r\n    {\r\n        \"name\": \"Guernsey and Alderney\",\r\n        \"iso_code\": \"XU\"\r\n    },\r\n    {\r\n        \"name\": \"Guinea\",\r\n        \"iso_code\": \"GN\"\r\n    },\r\n    {\r\n        \"name\": \"Guinea-Bissau\",\r\n        \"iso_code\": \"GW\"\r\n    },\r\n    {\r\n        \"name\": \"Guyana\",\r\n        \"iso_code\": \"GY\"\r\n    },\r\n    {\r\n        \"name\": \"Haiti\",\r\n        \"iso_code\": \"HT\"\r\n    },\r\n    {\r\n        \"name\": \"Heard and McDonald Islands\",\r\n        \"iso_code\": \"HM\"\r\n    },\r\n    {\r\n        \"name\": \"Honduras\",\r\n        \"iso_code\": \"HN\"\r\n    },\r\n    {\r\n        \"name\": \"Hong Kong S.A.R.\",\r\n        \"iso_code\": \"HK\"\r\n    },\r\n    {\r\n        \"name\": \"Hungary\",\r\n        \"iso_code\": \"HU\"\r\n    },\r\n    {\r\n        \"name\": \"Iceland\",\r\n        \"iso_code\": \"IS\"\r\n    },\r\n    {\r\n        \"name\": \"India\",\r\n        \"iso_code\": \"IN\"\r\n    },\r\n    {\r\n        \"name\": \"Indonesia\",\r\n        \"iso_code\": \"ID\"\r\n    },\r\n    {\r\n        \"name\": \"Iran\",\r\n        \"iso_code\": \"IR\"\r\n    },\r\n    {\r\n        \"name\": \"Iraq\",\r\n        \"iso_code\": \"IQ\"\r\n    },\r\n    {\r\n        \"name\": \"Ireland\",\r\n        \"iso_code\": \"IE\"\r\n    },\r\n    {\r\n        \"name\": \"Israel\",\r\n        \"iso_code\": \"IL\"\r\n    },\r\n    {\r\n        \"name\": \"Italy\",\r\n        \"iso_code\": \"IT\"\r\n    },\r\n    {\r\n        \"name\": \"Jamaica\",\r\n        \"iso_code\": \"JM\"\r\n    },\r\n    {\r\n        \"name\": \"Japan\",\r\n        \"iso_code\": \"JP\"\r\n    },\r\n    {\r\n        \"name\": \"Jersey\",\r\n        \"iso_code\": \"XJ\"\r\n    },\r\n    {\r\n        \"name\": \"Jordan\",\r\n        \"iso_code\": \"JO\"\r\n    },\r\n    {\r\n        \"name\": \"Kazakhstan\",\r\n        \"iso_code\": \"KZ\"\r\n    },\r\n    {\r\n        \"name\": \"Kenya\",\r\n        \"iso_code\": \"KE\"\r\n    },\r\n    {\r\n        \"name\": \"Kiribati\",\r\n        \"iso_code\": \"KI\"\r\n    },\r\n    {\r\n        \"name\": \"Korea North\",\r\n        \"iso_code\": \"KP\"\r\n    },\r\n    {\r\n        \"name\": \"Korea South\",\r\n        \"iso_code\": \"KR\"\r\n    },\r\n    {\r\n        \"name\": \"Kuwait\",\r\n        \"iso_code\": \"KW\"\r\n    },\r\n    {\r\n        \"name\": \"Kyrgyzstan\",\r\n        \"iso_code\": \"KG\"\r\n    },\r\n    {\r\n        \"name\": \"Laos\",\r\n        \"iso_code\": \"LA\"\r\n    },\r\n    {\r\n        \"name\": \"Latvia\",\r\n        \"iso_code\": \"LV\"\r\n    },\r\n    {\r\n        \"name\": \"Lebanon\",\r\n        \"iso_code\": \"LB\"\r\n    },\r\n    {\r\n        \"name\": \"Lesotho\",\r\n        \"iso_code\": \"LS\"\r\n    },\r\n    {\r\n        \"name\": \"Liberia\",\r\n        \"iso_code\": \"LR\"\r\n    },\r\n    {\r\n        \"name\": \"Libya\",\r\n        \"iso_code\": \"LY\"\r\n    },\r\n    {\r\n        \"name\": \"Liechtenstein\",\r\n        \"iso_code\": \"LI\"\r\n    },\r\n    {\r\n        \"name\": \"Lithuania\",\r\n        \"iso_code\": \"LT\"\r\n    },\r\n    {\r\n        \"name\": \"Luxembourg\",\r\n        \"iso_code\": \"LU\"\r\n    },\r\n    {\r\n        \"name\": \"Macau S.A.R.\",\r\n        \"iso_code\": \"MO\"\r\n    },\r\n    {\r\n        \"name\": \"Macedonia\",\r\n        \"iso_code\": \"MK\"\r\n    },\r\n    {\r\n        \"name\": \"Madagascar\",\r\n        \"iso_code\": \"MG\"\r\n    },\r\n    {\r\n        \"name\": \"Malawi\",\r\n        \"iso_code\": \"MW\"\r\n    },\r\n    {\r\n        \"name\": \"Malaysia\",\r\n        \"iso_code\": \"MY\"\r\n    },\r\n    {\r\n        \"name\": \"Maldives\",\r\n        \"iso_code\": \"MV\"\r\n    },\r\n    {\r\n        \"name\": \"Mali\",\r\n        \"iso_code\": \"ML\"\r\n    },\r\n    {\r\n        \"name\": \"Malta\",\r\n        \"iso_code\": \"MT\"\r\n    },\r\n    {\r\n        \"name\": \"Man (Isle of)\",\r\n        \"iso_code\": \"XM\"\r\n    },\r\n    {\r\n        \"name\": \"Marshall Islands\",\r\n        \"iso_code\": \"MH\"\r\n    },\r\n    {\r\n        \"name\": \"Martinique\",\r\n        \"iso_code\": \"MQ\"\r\n    },\r\n    {\r\n        \"name\": \"Mauritania\",\r\n        \"iso_code\": \"MR\"\r\n    },\r\n    {\r\n        \"name\": \"Mauritius\",\r\n        \"iso_code\": \"MU\"\r\n    },\r\n    {\r\n        \"name\": \"Mayotte\",\r\n        \"iso_code\": \"YT\"\r\n    },\r\n    {\r\n        \"name\": \"Mexico\",\r\n        \"iso_code\": \"MX\"\r\n    },\r\n    {\r\n        \"name\": \"Micronesia\",\r\n        \"iso_code\": \"FM\"\r\n    },\r\n    {\r\n        \"name\": \"Moldova\",\r\n        \"iso_code\": \"MD\"\r\n    },\r\n    {\r\n        \"name\": \"Monaco\",\r\n        \"iso_code\": \"MC\"\r\n    },\r\n    {\r\n        \"name\": \"Mongolia\",\r\n        \"iso_code\": \"MN\"\r\n    },\r\n    {\r\n        \"name\": \"Montserrat\",\r\n        \"iso_code\": \"MS\"\r\n    },\r\n    {\r\n        \"name\": \"Morocco\",\r\n        \"iso_code\": \"MA\"\r\n    },\r\n    {\r\n        \"name\": \"Mozambique\",\r\n        \"iso_code\": \"MZ\"\r\n    },\r\n    {\r\n        \"name\": \"Myanmar\",\r\n        \"iso_code\": \"MM\"\r\n    },\r\n    {\r\n        \"name\": \"Namibia\",\r\n        \"iso_code\": \"NA\"\r\n    },\r\n    {\r\n        \"name\": \"Nauru\",\r\n        \"iso_code\": \"NR\"\r\n    },\r\n    {\r\n        \"name\": \"Nepal\",\r\n        \"iso_code\": \"NP\"\r\n    },\r\n    {\r\n        \"name\": \"Netherlands Antilles\",\r\n        \"iso_code\": \"AN\"\r\n    },\r\n    {\r\n        \"name\": \"Netherlands The\",\r\n        \"iso_code\": \"NL\"\r\n    },\r\n    {\r\n        \"name\": \"New Caledonia\",\r\n        \"iso_code\": \"NC\"\r\n    },\r\n    {\r\n        \"name\": \"New Zealand\",\r\n        \"iso_code\": \"NZ\"\r\n    },\r\n    {\r\n        \"name\": \"Nicaragua\",\r\n        \"iso_code\": \"NI\"\r\n    },\r\n    {\r\n        \"name\": \"Niger\",\r\n        \"iso_code\": \"NE\"\r\n    },\r\n    {\r\n        \"name\": \"Nigeria\",\r\n        \"iso_code\": \"NG\"\r\n    },\r\n    {\r\n        \"name\": \"Niue\",\r\n        \"iso_code\": \"NU\"\r\n    },\r\n    {\r\n        \"name\": \"Norfolk Island\",\r\n        \"iso_code\": \"NF\"\r\n    },\r\n    {\r\n        \"name\": \"Northern Mariana Islands\",\r\n        \"iso_code\": \"MP\"\r\n    },\r\n    {\r\n        \"name\": \"Norway\",\r\n        \"iso_code\": \"NO\"\r\n    },\r\n    {\r\n        \"name\": \"Oman\",\r\n        \"iso_code\": \"OM\"\r\n    },\r\n    {\r\n        \"name\": \"Pakistan\",\r\n        \"iso_code\": \"PK\"\r\n    },\r\n    {\r\n        \"name\": \"Palau\",\r\n        \"iso_code\": \"PW\"\r\n    },\r\n    {\r\n        \"name\": \"Palestinian Territory Occupied\",\r\n        \"iso_code\": \"PS\"\r\n    },\r\n    {\r\n        \"name\": \"Panama\",\r\n        \"iso_code\": \"PA\"\r\n    },\r\n    {\r\n        \"name\": \"Papua new Guinea\",\r\n        \"iso_code\": \"PG\"\r\n    },\r\n    {\r\n        \"name\": \"Paraguay\",\r\n        \"iso_code\": \"PY\"\r\n    },\r\n    {\r\n        \"name\": \"Peru\",\r\n        \"iso_code\": \"PE\"\r\n    },\r\n    {\r\n        \"name\": \"Philippines\",\r\n        \"iso_code\": \"PH\"\r\n    },\r\n    {\r\n        \"name\": \"Pitcairn Island\",\r\n        \"iso_code\": \"PN\"\r\n    },\r\n    {\r\n        \"name\": \"Poland\",\r\n        \"iso_code\": \"PL\"\r\n    },\r\n    {\r\n        \"name\": \"Portugal\",\r\n        \"iso_code\": \"PT\"\r\n    },\r\n    {\r\n        \"name\": \"Puerto Rico\",\r\n        \"iso_code\": \"PR\"\r\n    },\r\n    {\r\n        \"name\": \"Qatar\",\r\n        \"iso_code\": \"QA\"\r\n    },\r\n    {\r\n        \"name\": \"Reunion\",\r\n        \"iso_code\": \"RE\"\r\n    },\r\n    {\r\n        \"name\": \"Romania\",\r\n        \"iso_code\": \"RO\"\r\n    },\r\n    {\r\n        \"name\": \"Russia\",\r\n        \"iso_code\": \"RU\"\r\n    },\r\n    {\r\n        \"name\": \"Rwanda\",\r\n        \"iso_code\": \"RW\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Helena\",\r\n        \"iso_code\": \"SH\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Kitts And Nevis\",\r\n        \"iso_code\": \"KN\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Lucia\",\r\n        \"iso_code\": \"LC\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Pierre and Miquelon\",\r\n        \"iso_code\": \"PM\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Vincent And The Grenadines\",\r\n        \"iso_code\": \"VC\"\r\n    },\r\n    {\r\n        \"name\": \"Samoa\",\r\n        \"iso_code\": \"WS\"\r\n    },\r\n    {\r\n        \"name\": \"San Marino\",\r\n        \"iso_code\": \"SM\"\r\n    },\r\n    {\r\n        \"name\": \"Sao Tome and Principe\",\r\n        \"iso_code\": \"ST\"\r\n    },\r\n    {\r\n        \"name\": \"Saudi Arabia\",\r\n        \"iso_code\": \"SA\"\r\n    },\r\n    {\r\n        \"name\": \"Senegal\",\r\n        \"iso_code\": \"SN\"\r\n    },\r\n    {\r\n        \"name\": \"Serbia\",\r\n        \"iso_code\": \"RS\"\r\n    },\r\n    {\r\n        \"name\": \"Seychelles\",\r\n        \"iso_code\": \"SC\"\r\n    },\r\n    {\r\n        \"name\": \"Sierra Leone\",\r\n        \"iso_code\": \"SL\"\r\n    },\r\n    {\r\n        \"name\": \"Singapore\",\r\n        \"iso_code\": \"SG\"\r\n    },\r\n    {\r\n        \"name\": \"Slovakia\",\r\n        \"iso_code\": \"SK\"\r\n    },\r\n    {\r\n        \"name\": \"Slovenia\",\r\n        \"iso_code\": \"SI\"\r\n    },\r\n    {\r\n        \"name\": \"Smaller Territories of the UK\",\r\n        \"iso_code\": \"XG\"\r\n    },\r\n    {\r\n        \"name\": \"Solomon Islands\",\r\n        \"iso_code\": \"SB\"\r\n    },\r\n    {\r\n        \"name\": \"Somalia\",\r\n        \"iso_code\": \"SO\"\r\n    },\r\n    {\r\n        \"name\": \"South Africa\",\r\n        \"iso_code\": \"ZA\"\r\n    },\r\n    {\r\n        \"name\": \"South Georgia\",\r\n        \"iso_code\": \"GS\"\r\n    },\r\n    {\r\n        \"name\": \"South Sudan\",\r\n        \"iso_code\": \"SS\"\r\n    },\r\n    {\r\n        \"name\": \"Spain\",\r\n        \"iso_code\": \"ES\"\r\n    },\r\n    {\r\n        \"name\": \"Sri Lanka\",\r\n        \"iso_code\": \"LK\"\r\n    },\r\n    {\r\n        \"name\": \"Sudan\",\r\n        \"iso_code\": \"SD\"\r\n    },\r\n    {\r\n        \"name\": \"Suriname\",\r\n        \"iso_code\": \"SR\"\r\n    },\r\n    {\r\n        \"name\": \"Svalbard And Jan Mayen Islands\",\r\n        \"iso_code\": \"SJ\"\r\n    },\r\n    {\r\n        \"name\": \"Swaziland\",\r\n        \"iso_code\": \"SZ\"\r\n    },\r\n    {\r\n        \"name\": \"Sweden\",\r\n        \"iso_code\": \"SE\"\r\n    },\r\n    {\r\n        \"name\": \"Switzerland\",\r\n        \"iso_code\": \"CH\"\r\n    },\r\n    {\r\n        \"name\": \"Syria\",\r\n        \"iso_code\": \"SY\"\r\n    },\r\n    {\r\n        \"name\": \"Taiwan\",\r\n        \"iso_code\": \"TW\"\r\n    },\r\n    {\r\n        \"name\": \"Tajikistan\",\r\n        \"iso_code\": \"TJ\"\r\n    },\r\n    {\r\n        \"name\": \"Tanzania\",\r\n        \"iso_code\": \"TZ\"\r\n    },\r\n    {\r\n        \"name\": \"Thailand\",\r\n        \"iso_code\": \"TH\"\r\n    },\r\n    {\r\n        \"name\": \"Togo\",\r\n        \"iso_code\": \"TG\"\r\n    },\r\n    {\r\n        \"name\": \"Tokelau\",\r\n        \"iso_code\": \"TK\"\r\n    },\r\n    {\r\n        \"name\": \"Tonga\",\r\n        \"iso_code\": \"TO\"\r\n    },\r\n    {\r\n        \"name\": \"Trinidad And Tobago\",\r\n        \"iso_code\": \"TT\"\r\n    },\r\n    {\r\n        \"name\": \"Tunisia\",\r\n        \"iso_code\": \"TN\"\r\n    },\r\n    {\r\n        \"name\": \"Turkey\",\r\n        \"iso_code\": \"TR\"\r\n    },\r\n    {\r\n        \"name\": \"Turkmenistan\",\r\n        \"iso_code\": \"TM\"\r\n    },\r\n    {\r\n        \"name\": \"Turks And Caicos Islands\",\r\n        \"iso_code\": \"TC\"\r\n    },\r\n    {\r\n        \"name\": \"Tuvalu\",\r\n        \"iso_code\": \"TV\"\r\n    },\r\n    {\r\n        \"name\": \"Uganda\",\r\n        \"iso_code\": \"UG\"\r\n    },\r\n    {\r\n        \"name\": \"Ukraine\",\r\n        \"iso_code\": \"UA\"\r\n    },\r\n    {\r\n        \"name\": \"United Arab Emirates\",\r\n        \"iso_code\": \"AE\"\r\n    },\r\n    {\r\n        \"name\": \"United Kingdom\",\r\n        \"iso_code\": \"GB\"\r\n    },\r\n    {\r\n        \"name\": \"United States\",\r\n        \"iso_code\": \"US\"\r\n    },\r\n    {\r\n        \"name\": \"United States Minor Outlying Islands\",\r\n        \"iso_code\": \"UM\"\r\n    },\r\n    {\r\n        \"name\": \"Uruguay\",\r\n        \"iso_code\": \"UY\"\r\n    },\r\n    {\r\n        \"name\": \"Uzbekistan\",\r\n        \"iso_code\": \"UZ\"\r\n    },\r\n    {\r\n        \"name\": \"Vanuatu\",\r\n        \"iso_code\": \"VU\"\r\n    },\r\n    {\r\n        \"name\": \"Vatican City State (Holy See)\",\r\n        \"iso_code\": \"VA\"\r\n    },\r\n    {\r\n        \"name\": \"Venezuela\",\r\n        \"iso_code\": \"VE\"\r\n    },\r\n    {\r\n        \"name\": \"Vietnam\",\r\n        \"iso_code\": \"VN\"\r\n    },\r\n    {\r\n        \"name\": \"Virgin Islands (British)\",\r\n        \"iso_code\": \"VG\"\r\n    },\r\n    {\r\n        \"name\": \"Virgin Islands (US)\",\r\n        \"iso_code\": \"VI\"\r\n    },\r\n    {\r\n        \"name\": \"Wallis And Futuna Islands\",\r\n        \"iso_code\": \"WF\"\r\n    },\r\n    {\r\n        \"name\": \"Western Sahara\",\r\n        \"iso_code\": \"EH\"\r\n    },\r\n    {\r\n        \"name\": \"Yemen\",\r\n        \"iso_code\": \"YE\"\r\n    },\r\n    {\r\n        \"name\": \"Yugoslavia\",\r\n        \"iso_code\": \"YU\"\r\n    },\r\n    {\r\n        \"name\": \"Zambia\",\r\n        \"iso_code\": \"ZM\"\r\n    },\r\n    {\r\n        \"name\": \"Zimbabwe\",\r\n        \"iso_code\": \"ZW\"\r\n    }\r\n]\r\n\r\nexport default country;\r\n","/* eslint-disable no-param-reassign */\r\nimport {\r\n  MENU_SET_CLASSNAMES,\r\n  MENU_CONTAINER_ADD_CLASSNAME,\r\n  MENU_CLICK_MOBILE_MENU,\r\n  MENU_CHANGE_DEFAULT_CLASSES,\r\n  MENU_CHANGE_HAS_SUB_ITEM_STATUS,\r\n} from '../contants';\r\n\r\nexport const changeSelectedMenuHasSubItems = (payload) => {\r\n  return {\r\n    type: MENU_CHANGE_HAS_SUB_ITEM_STATUS,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const changeDefaultClassnames = (strCurrentClasses) => {\r\n  return {\r\n    type: MENU_CHANGE_DEFAULT_CLASSES,\r\n    payload: strCurrentClasses,\r\n  };\r\n};\r\n\r\nexport const addContainerClassname = (classname, strCurrentClasses) => {\r\n  const newClasses =\r\n    !strCurrentClasses.indexOf(classname) > -1\r\n      ? `${strCurrentClasses} ${classname}`\r\n      : strCurrentClasses;\r\n  return {\r\n    type: MENU_CONTAINER_ADD_CLASSNAME,\r\n    payload: newClasses,\r\n  };\r\n};\r\n\r\nexport const clickOnMobileMenu = (strCurrentClasses) => {\r\n  const currentClasses = strCurrentClasses\r\n    ? strCurrentClasses\r\n        .split(' ')\r\n        .filter((x) => x !== '' && x !== 'sub-show-temporary')\r\n    : '';\r\n  let nextClasses = '';\r\n  if (currentClasses.includes('main-show-temporary')) {\r\n    nextClasses = currentClasses\r\n      .filter((x) => x !== 'main-show-temporary')\r\n      .join(' ');\r\n  } else {\r\n    nextClasses = `${currentClasses.join(' ')} main-show-temporary`;\r\n  }\r\n  return {\r\n    type: MENU_CLICK_MOBILE_MENU,\r\n    payload: { containerClassnames: nextClasses, menuClickCount: 0 },\r\n  };\r\n};\r\n\r\nexport const setContainerClassnames = (\r\n  clickIndex,\r\n  strCurrentClasses,\r\n  selectedMenuHasSubItems\r\n) => {\r\n  const currentClasses = strCurrentClasses\r\n    ? strCurrentClasses.split(' ').filter((x) => x !== '')\r\n    : '';\r\n  let nextClasses = '';\r\n  if (!selectedMenuHasSubItems) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      (clickIndex % 4 === 0 || clickIndex % 4 === 3)\r\n    ) {\r\n      clickIndex = 1;\r\n    }\r\n    if (currentClasses.includes('menu-sub-hidden') && clickIndex % 4 === 2) {\r\n      clickIndex = 0;\r\n    }\r\n    if (\r\n      currentClasses.includes('menu-hidden') &&\r\n      (clickIndex % 4 === 2 || clickIndex % 4 === 3)\r\n    ) {\r\n      clickIndex = 0;\r\n    }\r\n  }\r\n\r\n  if (clickIndex % 4 === 0) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden';\r\n    }\r\n    clickIndex = 0;\r\n  } else if (clickIndex % 4 === 1) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden main-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default sub-hidden';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden main-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden main-show-temporary';\r\n    }\r\n  } else if (clickIndex % 4 === 2) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default main-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden sub-hidden';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden main-show-temporary sub-show-temporary';\r\n    }\r\n  } else if (clickIndex % 4 === 3) {\r\n    if (\r\n      currentClasses.includes('menu-default') &&\r\n      currentClasses.includes('menu-sub-hidden')\r\n    ) {\r\n      nextClasses = 'menu-default menu-sub-hidden sub-show-temporary';\r\n    } else if (currentClasses.includes('menu-default')) {\r\n      nextClasses = 'menu-default sub-hidden';\r\n    } else if (currentClasses.includes('menu-sub-hidden')) {\r\n      nextClasses = 'menu-sub-hidden sub-show-temporary';\r\n    } else if (currentClasses.includes('menu-hidden')) {\r\n      nextClasses = 'menu-hidden main-show-temporary';\r\n    }\r\n  }\r\n  if (currentClasses.includes('menu-mobile')) {\r\n    nextClasses += ' menu-mobile';\r\n  }\r\n  return {\r\n    type: MENU_SET_CLASSNAMES,\r\n    payload: { containerClassnames: nextClasses, menuClickCount: clickIndex },\r\n  };\r\n};\r\n","import { setCurrentLanguage } from 'helpers/Utils';\r\nimport { CHANGE_LOCALE } from '../contants';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const changeLocale = (locale) => {\r\n  setCurrentLanguage(locale);\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    payload: locale,\r\n  };\r\n};\r\n","export const ApartmentTypeData = [\r\n  { label: \"Independent House/Villa\", value: 0 },\r\n  { label: \"Gated Community Villa\", value: 1 },\r\n  { label: \"Apartment\", value: 2 },\r\n];\r\n\r\nexport const BHKData = [\r\n  { label: \"1 BHK\", value: 0 },\r\n  { label: \"2 BHK\", value: 1 },\r\n  { label: \"3 BHK\", value: 2 },\r\n];\r\n\r\nexport const FloorData = [\r\n  { label: \"Ground Floor\", value: 0 },\r\n  { label: \"1\", value: 1 },\r\n  { label: \"2\", value: 2 },\r\n  { label: \"3\", value: 3 },\r\n  { label: \"4\", value: 4 },\r\n  { label: \"5\", value: 5 },\r\n  { label: \"6\", value: 6 },\r\n];\r\n\r\nexport const RoomTypeData = [\r\n  { label: \"Single Room\", value: 0 },\r\n  { label: \"Shared Room\", value: 1 },\r\n];\r\n\r\nexport const WorkPlaceTypeData = [\r\n  { label: \"Onsite\", value: 0 },\r\n  { label: \"Hybrid\", value: 1 },\r\n  { label: \"Remote\", value: 2 },\r\n];\r\n\r\nexport const EmploymentTypeData = [\r\n  { label: \"Full time\", value: 0 },\r\n  { label: \"Part time\", value: 1 },\r\n  { label: \"Temporary\", value: 2 },\r\n  { label: \"Volunteer\", value: 3 },\r\n  { label: \"Internship\", value: 4 },\r\n  { label: \"Contract\", value: 5 },\r\n];\r\n\r\nexport const RoomMateType = [\r\n  { label: \"Male\", value: 0 },\r\n  { label: \"Female\", value: 1 },\r\n];\r\n\r\nexport const parkingOptions = [\r\n  { label: \"Car\", value: 0 },\r\n  { label: \"Bike\", value: 1 },\r\n  { label: \"Car and Bike\", value: 2 },\r\n  { label: \"NO\", value: 3 },\r\n];\r\n","const language = [\r\n    {\r\n        \"name\": \"Tamil\",\r\n        \"iso_code\": \"TA\"\r\n    },{\r\n        \"name\": \"English\",\r\n        \"iso_code\": \"EN\"\r\n    },\r\n    {\r\n        \"name\": \"Malayalam\",\r\n        \"iso_code\": \"ML\"\r\n    },\r\n    {\r\n        \"name\": \"Hindi\",\r\n        \"iso_code\": \"HI\"\r\n    },\r\n    {\r\n        \"name\": \"Bengali\",\r\n        \"iso_code\": \"BN\"\r\n    },\r\n    {\r\n        \"name\": \"Marathi\",\r\n        \"iso_code\": \"MR\"\r\n    },\r\n    {\r\n        \"name\": \"Telugu\",\r\n        \"iso_code\": \"TE\"\r\n    },\r\n    {\r\n        \"name\": \"Gujarati\",\r\n        \"iso_code\": \"GU\"\r\n    },\r\n    {\r\n        \"name\": \"Urdu\",\r\n        \"iso_code\": \"UR\"\r\n    },\r\n    {\r\n        \"name\": \"Kannada\",\r\n        \"iso_code\": \"KA\"\r\n    },\r\n    {\r\n        \"name\": \"Odia\",\r\n        \"iso_code\": \"OR\"\r\n    },\r\n    {\r\n        \"name\": \"Punjabi\",\r\n        \"iso_code\": \"PA\"\r\n    },\r\n    {\r\n        \"name\": \"Assamese\",\r\n        \"iso_code\": \"AS\"\r\n    },\r\n    {\r\n        \"name\": \"Maithili\",\r\n        \"iso_code\": \"MI\"\r\n    },\r\n    {\r\n        \"name\": \"Bhili/Bhilodi\",\r\n        \"iso_code\": \"BH\"\r\n    },\r\n    {\r\n        \"name\": \"Santali\",\r\n        \"iso_code\": \"SA\"\r\n    },\r\n    {\r\n        \"name\": \"Kashmiri\",\r\n        \"iso_code\": \"KS\"\r\n    },\r\n    {\r\n        \"name\": \"Nepali\",\r\n        \"iso_code\": \"NE\"\r\n    },\r\n    {\r\n        \"name\": \"Sindhi\",\r\n        \"iso_code\": \"SD\"\r\n    },\r\n    {\r\n        \"name\": \"Dogri\",\r\n        \"iso_code\": \"DO\"\r\n    },\r\n    {\r\n        \"name\": \"Konkani\",\r\n        \"iso_code\": \"KN\"\r\n    },\r\n    {\r\n        \"name\": \"Bodo\",\r\n        \"iso_code\": \"BO\"\r\n    },\r\n    {\r\n        \"name\": \"Manipuri\",\r\n        \"iso_code\": \"MN\"\r\n    },\r\n    {\r\n        \"name\": \"Mandarin Chinese\",\r\n        \"iso_code\": \"ZH\"\r\n    },\r\n    {\r\n        \"name\": \"Spanish\",\r\n        \"iso_code\": \"ES\"\r\n    },\r\n    {\r\n        \"name\": \"French\",\r\n        \"iso_code\": \"FR\"\r\n    },\r\n    {\r\n        \"name\": \"German\",\r\n        \"iso_code\": \"DE\"\r\n    },\r\n    {\r\n        \"name\": \"Portuguese\",\r\n        \"iso_code\": \"PT\"\r\n    },\r\n    {\r\n        \"name\": \"Russian\",\r\n        \"iso_code\": \"RU\"\r\n    },\r\n    {\r\n        \"name\": \"Japanese\",\r\n        \"iso_code\": \"JA\"\r\n    },\r\n    {\r\n        \"name\": \"Korean\",\r\n        \"iso_code\": \"KO\"\r\n    },\r\n    {\r\n        \"name\": \"Italian\",\r\n        \"iso_code\": \"IT\"\r\n    },\r\n    {\r\n        \"name\": \"Dutch\",\r\n        \"iso_code\": \"NL\"\r\n    },\r\n    {\r\n        \"name\": \"Greek\",\r\n        \"iso_code\": \"EL\"\r\n    },\r\n    {\r\n        \"name\": \"Turkish\",\r\n        \"iso_code\": \"TR\"\r\n    },\r\n    {\r\n        \"name\": \"Swedish\",\r\n        \"iso_code\": \"SV\"\r\n    },\r\n    {\r\n        \"name\": \"Polish\",\r\n        \"iso_code\": \"PL\"\r\n    },\r\n    {\r\n        \"name\": \"Ukrainian\",\r\n        \"iso_code\": \"UK\"\r\n    },\r\n    {\r\n        \"name\": \"Hebrew\",\r\n        \"iso_code\": \"HE\"\r\n    },\r\n    {\r\n        \"name\": \"Arabic\",\r\n        \"iso_code\": \"AR\"\r\n    },\r\n    {\r\n        \"name\": \"Hungarian\",\r\n        \"iso_code\": \"HU\"\r\n    },\r\n    {\r\n        \"name\": \"Thai\",\r\n        \"iso_code\": \"TH\"\r\n    },\r\n    {\r\n        \"name\": \"Czech\",\r\n        \"iso_code\": \"CS\"\r\n    },\r\n    {\r\n        \"name\": \"Finnish\",\r\n        \"iso_code\": \"FI\"\r\n    },\r\n    {\r\n        \"name\": \"Danish\",\r\n        \"iso_code\": \"DA\"\r\n    },\r\n    {\r\n        \"name\": \"Norwegian\",\r\n        \"iso_code\": \"NO\"\r\n    },\r\n    {\r\n        \"name\": \"Vietnamese\",\r\n        \"iso_code\": \"VI\"\r\n    }\r\n]\r\n\r\n\r\nexport default language;\r\n","const indentityStatusList = [\r\n  { value: \"IMMIGRANT\", label: \"IMMIGRANT\" },\r\n  { value: \"PR_CITIZEN\", label: \"PR_CITIZEN\" },\r\n];\r\nexport default indentityStatusList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Rater from 'react-rater';\r\nimport 'react-rater/lib/react-rater.css';\r\n\r\nconst Rating = (props) => (\r\n  <Rater {...props}>\r\n    <Star />\r\n  </Rater>\r\n);\r\n\r\nconst Star = (props) => {\r\n  const starProps = { ...props };\r\n  const nameMap = {\r\n    isDisabled: 'is-disabled',\r\n    isActive: 'is-active',\r\n    isActiveHalf: 'is-active-half',\r\n    willBeActive: 'will-be-active',\r\n  };\r\n\r\n  const className = Object.keys(nameMap)\r\n    // eslint-disable-next-line\r\n    .filter((prop) => (delete starProps[prop], props[prop]))\r\n    .map((prop) => nameMap[prop])\r\n    .join(' ');\r\n  return <div className={`react-rater-star ${className}`} {...starProps} />;\r\n};\r\n\r\nStar.defaultProps = {\r\n  willBeActive: false,\r\n  isActive: false,\r\n  isActiveHalf: false,\r\n  isDisabled: false,\r\n};\r\n\r\nStar.propTypes = {\r\n  isActive: PropTypes.bool,\r\n  isActiveHalf: PropTypes.bool,\r\n  willBeActive: PropTypes.bool,\r\n  isDisabled: PropTypes.bool,\r\n};\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport { components } from 'react-select';\r\n\r\nconst CustomSelectInput = (props) => {\r\n  const customProps = { ...props };\r\n  delete customProps.autoCorrect;\r\n  delete customProps.autoCapitalize;\r\n  return <components.Input {...customProps} />;\r\n};\r\n\r\nexport default CustomSelectInput;\r\n","// import react from \"react\";\r\n\r\nconst validateFirstName = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter your first name\";\r\n  } else if (!/^[a-zA-Z]+$/.test(value)) {\r\n    error = \"Only alphabets are allowed\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n\r\n  return error;\r\n};\r\n\r\nconst validateLastName = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter your first name\";\r\n  } else if (!/^[a-zA-Z]+$/.test(value)) {\r\n    error = \"Only alphabets are allowed\";\r\n  } else if (value.length < 1) {\r\n    error = \"Must be longer than 1 characters\";\r\n  }\r\n\r\n  return error;\r\n};\r\n\r\nconst validateEmail = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter your email address\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n    error = \"Invalid email address\";\r\n  }\r\n  return error;\r\n};\r\n\r\nconst validatePassword = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please choose a password\";\r\n  } else if (value.length < 6) {\r\n    error = \"Password must be longer than 6 characters\";\r\n  }\r\n  return error;\r\n};\r\nfunction validateCategory(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a category\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateLocation(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a location\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateDomain(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a domain\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateIdentityStatus(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a identity status\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateCompany(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please provide the company name\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateJobTitle(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter a job title\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\n// function validateSkills(value) {\r\n//   let error;\r\n//   if (!value) {\r\n//     error = \"Please specify a skill\";\r\n//   } else if (value.length < 2) {\r\n//       error = \"Must be longer than 2 characters\";\r\n//     }\r\n//   return error;\r\n// }\r\n// function validateSkills(value) {\r\n//   let error;\r\n//   if (!value || value.length === 0) {\r\n//      error = \"Please specify a skill\";\r\n//   } else if (value.some(tag => tag.length < 2)) {\r\n//      error = \"Each skill must be longer than 2 characters\";\r\n//   }\r\n//   return error;\r\n//  }\r\n\r\nconst validateSkills = (value) => {\r\n  if (!Array.isArray(value)) {\r\n    return \"Skills must be an array of strings\";\r\n  }\r\n\r\n  if (value.length === 0) {\r\n    return \"Please add at least one skill\";\r\n  }\r\n\r\n  const isString = value.every((skill) => typeof skill === \"string\");\r\n  if (!isString) {\r\n    return \"Skills must be strings\";\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nfunction validateBio(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please provide a bio\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateLinkedinUrl(value) {\r\n  let error;\r\n\r\n  if (!value) {\r\n    error = \"Please provide your LinkedIn URL\";\r\n  } else if (\r\n    !/^https?:\\/\\/(?:www\\.)?linkedin\\.com\\/(?:[a-z]{2,3}\\.)?in\\/[a-zA-Z0-9_-]+\\/?$/i.test(\r\n      value\r\n    )\r\n  ) {\r\n    error = \"Invalid LinkedIn URL format\";\r\n  }\r\n  return error;\r\n}\r\n\r\n// function validateLinkedinUrl(value) {\r\n//   let error;\r\n\r\n//   if (!value) {\r\n//       error = \"Please provide your LinkedIn URL\";\r\n//   } else if (!/^linkedin\\.(com|in)\\/(in|pub|profile|company)\\/[a-zA-Z0-9_-]+\\/?$/i.test(value)) {\r\n//       error = \"Invalid LinkedIn URL format\";\r\n//   }\r\n//   return error;\r\n// }\r\n\r\nfunction validateReasonForMentor(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateAchievement(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\n\r\n// function validateFile(value) {\r\n//   let error;\r\n//   if (!value) {\r\n//     error = \"This field is required.\";\r\n//   }\r\n//   //  else if (![\"image/jpeg\", \"image/png\"].includes(file.type)) {\r\n//   //   error = \"Unsupported file type. Only JPEG and PNG images are allowed\";\r\n//   // }\r\n//   return error;\r\n// }\r\n// function validateFile(value) {\r\n//   let error;\r\n\r\n//   if (!value) {\r\n//     error = \"This field is required.\";\r\n//   } else {\r\n//     const fileType = value.type;\r\n//     if (![\"image/jpeg\", \"image/png\"].includes(fileType)) {\r\n//       error = \"Unsupported file type. Only JPEG and PNG images are allowed\";\r\n//     }\r\n//   }\r\n\r\n//   return error;\r\n// }\r\nconst validateFile = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select an image file\";\r\n  } else if (!value.type.startsWith(\"image/\")) {\r\n    error = \"Please select a valid image file\";\r\n  }\r\n  return error;\r\n};\r\n\r\nexport {\r\n  validateAchievement,\r\n  validateBio,\r\n  validateCategory,\r\n  validateCompany,\r\n  validateDomain,\r\n  validateEmail,\r\n  validateFile,\r\n  validateFirstName,\r\n  validateIdentityStatus,\r\n  validateJobTitle,\r\n  validateLastName,\r\n  validateLinkedinUrl,\r\n  validateLocation,\r\n  validatePassword,\r\n  validateReasonForMentor,\r\n  validateSkills,\r\n};\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nconst ThumbnailLetters = ({ text, color, className, rounded, small, extraSmall }) => {\r\n  let letters = '';\r\n  if (text.indexOf(' ') > -1) {\r\n    text.split(' ').forEach((word) => {\r\n      if (word.length > 1) letters += word.slice(0, 1);\r\n    });\r\n  } else {\r\n    letters += text.slice(0, 2);\r\n  }\r\n\r\n  if (letters.length > 2) {\r\n    letters = letters.slice(0, 2);\r\n  }\r\n\r\n  // Define inline styles for extra small size\r\n  const extraSmallStyles = {\r\n    width: '40px',\r\n    height: '40px',\r\n    fontSize: '1.0em',\r\n    padding: '.7em',\r\n  };\r\n\r\n  // Define inline styles for small size\r\n  const smallStyles = {\r\n    width: '50px',\r\n    height: '50px',\r\n    fontSize: '0.75em',\r\n    padding: '0.25em',\r\n  };\r\n\r\n  let appliedStyles = {};\r\n  if (extraSmall) {\r\n    appliedStyles = extraSmallStyles;\r\n  } else if (small) {\r\n    appliedStyles = smallStyles;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`align-self-center list-thumbnail-letters ${\r\n        color ? `btn-${color}` : ''\r\n      } ${className} ${classnames({\r\n        'rounded-circle': rounded,\r\n      })}`}\r\n      title={text}\r\n      style={appliedStyles}\r\n    >\r\n      {letters}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ThumbnailLetters);\r\n","/* eslint-disable react/destructuring-assignment */\r\nimport Slider, { Range } from \"rc-slider\";\r\nimport \"rc-slider/assets/index.css\";\r\n\r\nconst sliderHandle = ({ value, dragging, index, offset, ...restProps }) => {\r\n  const positionStyle = {\r\n    position: \"absolute\",\r\n    left: `${offset}%`,\r\n  };\r\n  return (\r\n    <span key={index}>\r\n      <div className=\"rc-slider-tooltip \" style={positionStyle}>\r\n        {`₹${value}`}\r\n      </div>\r\n      <Slider.Handle value={value} offset={offset} {...restProps} />\r\n    </span>\r\n  );\r\n};\r\n\r\nconst SliderTooltip = (props) => {\r\n  return <Slider handle={props.handle || sliderHandle} {...props} />;\r\n};\r\n\r\nconst RangeTooltip = (props) => {\r\n  return <Range handle={props.handle || sliderHandle} {...props} />;\r\n};\r\nexport { RangeTooltip, SliderTooltip };\r\n","// eslint-disable react/forbid-prop-types\r\nimport React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Glide from '@glidejs/glide';\r\nimport { getDirection } from 'helpers/Utils';\r\nimport '@glidejs/glide/dist/css/glide.core.min.css';\r\n\r\nlet resizeTimeOut = -1;\r\nlet mountTimeOut = -1;\r\n\r\nfunction GlideComponent(props) {\r\n  let carousel;\r\n  let glideCarousel;\r\n\r\n  const onResize = () => {\r\n    clearTimeout(resizeTimeOut);\r\n    resizeTimeOut = setTimeout(() => {\r\n      glideCarousel.update();\r\n      resizeTimeOut = -1;\r\n    }, 500);\r\n  };\r\n\r\n  const initGlide = () => {\r\n    glideCarousel = new Glide(carousel, {\r\n      /* eslint-disable-next-line react/destructuring-assignment */\r\n      ...props.settings,\r\n      direction: getDirection().direction,\r\n    });\r\n    glideCarousel.mount();\r\n    glideCarousel.on('resize', onResize);\r\n    mountTimeOut = setTimeout(() => {\r\n      const event = document.createEvent('HTMLEvents');\r\n      event.initEvent('resize', false, false);\r\n      window.dispatchEvent(event);\r\n    }, 500);\r\n  };\r\n\r\n  const destroyGlide = () => {\r\n    clearTimeout(resizeTimeOut);\r\n    clearTimeout(mountTimeOut);\r\n    if (glideCarousel) {\r\n      glideCarousel.destroy();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    initGlide();\r\n    return () => {\r\n      destroyGlide();\r\n    };\r\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\r\n  }, []);\r\n\r\n  const renderDots = () => {\r\n    /* eslint-disable-next-line react/destructuring-assignment */\r\n    const total = React.Children.count(props.children);\r\n    const dots = [];\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < total; i++) {\r\n      dots.push(\r\n        <button\r\n          type=\"button\"\r\n          className=\"glide__bullet slider-dot\"\r\n          key={i}\r\n          data-glide-dir={`=${i}`}\r\n        />\r\n      );\r\n    }\r\n    return dots;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* eslint-disable-next-line no-return-assign */}\r\n      <div className=\"glide\" ref={(node) => (carousel = node)}>\r\n        <div data-glide-el=\"track\" className=\"glide__track\">\r\n          {/* eslint-disable-next-line react/destructuring-assignment */}\r\n          <div className=\"glide__slides\">{props.children}</div>\r\n        </div>\r\n        {/* eslint-disable-next-line react/destructuring-assignment */}\r\n        {!props.settings.hideNav && (\r\n          <div className=\"glide__arrows slider-nav\" data-glide-el=\"controls\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"glide__arrow glide__arrow--left left-arrow btn btn-link\"\r\n              data-glide-dir=\"<\"\r\n            >\r\n              <i className=\"simple-icon-arrow-left\" />\r\n            </button>\r\n\r\n            <div\r\n              className=\"glide__bullets slider-dot-container\"\r\n              data-glide-el=\"controls[nav]\"\r\n            >\r\n              {renderDots()}\r\n            </div>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"glide__arrow glide__arrow--right right-arrow btn btn-link\"\r\n              data-glide-dir=\">\"\r\n            >\r\n              <i className=\"simple-icon-arrow-right\" />\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nGlideComponent.defaultProps = {\r\n  settings: {},\r\n};\r\n\r\nGlideComponent.propTypes = {\r\n  settings: PropTypes.shape({\r\n    type: PropTypes.string,\r\n    startAt: PropTypes.number,\r\n    perView: PropTypes.number,\r\n    focusAt: PropTypes.oneOf([PropTypes.number, PropTypes.string]),\r\n    gap: PropTypes.number,\r\n    autoplay: PropTypes.bool,\r\n    hoverpause: PropTypes.bool,\r\n    keyboard: PropTypes.bool,\r\n    bound: PropTypes.bool,\r\n    swipeThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\r\n    dragThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\r\n    perTouch: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\r\n    touchRatio: PropTypes.number,\r\n    touchAngle: PropTypes.number,\r\n    animationDuration: PropTypes.number,\r\n    rewind: PropTypes.bool,\r\n    rewindDuration: PropTypes.number,\r\n    animationTimingFunc: PropTypes.string,\r\n    direction: PropTypes.string,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    peek: PropTypes.object,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    breakpoints: PropTypes.object,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    classes: PropTypes.object,\r\n    throttle: PropTypes.number,\r\n  }),\r\n  // id: PropTypes.string,\r\n  // className: PropTypes.string,\r\n};\r\n\r\nexport default GlideComponent;\r\n","/* eslint-disable react/no-array-index-key */\r\nimport axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { RangeTooltip } from \"components/common/SliderTooltips\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  // CustomInput,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  // FormGroup,\r\n  // Label,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport DomainList from \"../AlumniRegister/DomainList\";\r\nimport country from \"../my-login/Country\";\r\n\r\nconst MentorFilter = ({\r\n  onSkillsChange,\r\n  onToolsChange,\r\n  onIndustryChange,\r\n  onUniversityChange,\r\n  onPriceChange,\r\n  onLocationChange,\r\n  onDomainChange,\r\n  selectedSkills,\r\n  selectedLocation,\r\n  selectedIndustry,\r\n  selectedUniversity,\r\n  selectedTools,\r\n  userRole,\r\n}) => {\r\n  const [dropdownBasicOpen, setDropdownBasicOpen] = useState(false);\r\n  const [dropdownBasicOpen1, setDropdownBasicOpen1] = useState(false);\r\n  const [dropdownBasicOpen2, setDropdownBasicOpen2] = useState(false);\r\n  const [dropdownBasicOpen3, setDropdownBasicOpen3] = useState(false);\r\n  const [dropdownBasicOpen4, setDropdownBasicOpen4] = useState(false);\r\n  const [dropdownBasicOpen5, setDropdownBasicOpen5] = useState(false);\r\n  const [dropdownBasicOpen6, setDropdownBasicOpen6] = useState(false);\r\n  const [priceRange, setPriceRange] = useState([500, 15000]);\r\n  const [selectedDomain, setSelectedDomain] = useState(\"\");\r\n\r\n  // const searchUrl = `${baseUrl}/api/mentor/search/skills`;\r\n  // const companySearchUrl = `${baseUrl}/api/mentor/search/company`;\r\n  // const toolsSearchUrl = `${baseUrl}/api/mentor/search/tools`;\r\n\r\n  const getApiEndpoint = (endpointType) => {\r\n    switch (userRole) {\r\n      case \"alumni\":\r\n        switch (endpointType) {\r\n          case \"skills\":\r\n            return `${baseUrl}/api/alumni/search/skills`;\r\n          case \"company\":\r\n            return `${baseUrl}/api/alumni/search/company`;\r\n          case \"university\":\r\n            return `${baseUrl}/api/alumni/search/university`;\r\n          default:\r\n            throw new Error(`Invalid endpoint type for alumni role`);\r\n        }\r\n      case \"mentor\":\r\n        switch (endpointType) {\r\n          case \"skills\":\r\n            return `${baseUrl}/api/mentor/search/skills`;\r\n          case \"company\":\r\n            return `${baseUrl}/api/mentor/search/company`;\r\n          case \"tools\":\r\n            return `${baseUrl}/api/mentor/search/tools`;\r\n          default:\r\n            throw new Error(`Invalid endpoint type for mentor role`);\r\n        }\r\n      default:\r\n        throw new Error(`Invalid user role`);\r\n    }\r\n  };\r\n\r\n  const handleSkillSelect = (skill) => {\r\n    onSkillsChange(skill);\r\n  };\r\n\r\n  const handleToolSelect = (tool) => {\r\n    onToolsChange(tool);\r\n  };\r\n\r\n  const handleIndustrySelect = (industry) => {\r\n    onIndustryChange(industry);\r\n  };\r\n  const handleUniversitySelect = (university) => {\r\n    onUniversityChange(university);\r\n  };\r\n\r\n  const handleLocationSelect = (location) => {\r\n    onLocationChange(location);\r\n  };\r\n  const handleDomainSelect = (domain) => {\r\n    onDomainChange(domain);\r\n    setSelectedDomain(domain);\r\n  };\r\n\r\n  const handleSliderChange = (value) => {\r\n    setPriceRange(value);\r\n  };\r\n  const handleAfterChange = useCallback((finalRange) => {\r\n    onPriceChange(finalRange);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // const tools = [\r\n  //   \"VSCode\",\r\n  //   \"Git\",\r\n  //   \"GitHub\",\r\n  //   \"Docker\",\r\n  //   \"Postman\",\r\n  //   \"Jenkins\",\r\n  //   \"Webpack\",\r\n  //   \"ESLint\",\r\n  //   \"Sublime Text\",\r\n  //   \"JIRA\",\r\n  //   \"Slack\",\r\n  //   \"Figma\"\r\n  // ]\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchText1, setSearchText1] = useState(\"\");\r\n  const [searchCompanies, setSearchCompanies] = useState(\"\");\r\n  const [searchUniversities, setSearchUniversities] = useState(\"\");\r\n  const [searchTools, setSearchTools] = useState(\"\");\r\n  const [searchSkills, setSearchSkills] = useState(\"\");\r\n  const [filteredCountry, setFilteredCountry] = useState(country);\r\n  const [filteredDomain, setFilteredDomain] = useState(DomainList);\r\n  // const [filteredTools, setFilteredTools] = useState(tools);\r\n  // const [filteredCompanies, setFilteredCompanies] = useState(companies);\r\n  // const [filteredSkills, setFilteredSkills] = useState(skills);\r\n  const [viewFilters, setViewFilters] = useState(false);\r\n\r\n  const [skillsData, setSkillsData] = useState([]);\r\n  const [companyData, setCompanyData] = useState([]);\r\n  const [universityData, setUniversityData] = useState([]);\r\n  const [toolsData, setToolsData] = useState([]);\r\n\r\n  const [paginationMeta, setPaginationMeta] = useState([]);\r\n  const [companyPaginationMeta, setCompanyPaginationMeta] = useState([]);\r\n  const [universityPaginationMeta, setUniversityPaginationMeta] = useState([]);\r\n  const [toolsPaginationMeta, setToolsPaginationMeta] = useState([]);\r\n\r\n  const [size, setSize] = useState(10);\r\n  const [companySize, setCompanySize] = useState(10);\r\n  const [universitySize, setUniversitySize] = useState(10);\r\n  const [toolsSize, setToolsSize] = useState(10);\r\n\r\n  const [skillsFetched, setSkillsFetched] = useState(false);\r\n  const [toolsFetched, setToolsFetched] = useState(false);\r\n  const [companiesFetched, setCompaniesFetched] = useState(false);\r\n  const [universityFetched, setUniversitiesFetched] = useState(false);\r\n\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkIfMobile = () => {\r\n      setIsMobile(window.innerWidth < 992);\r\n    };\r\n\r\n    checkIfMobile();\r\n    window.addEventListener(\"resize\", checkIfMobile);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", checkIfMobile);\r\n    };\r\n  }, []);\r\n\r\n  const handleSearchChange = (event) => {\r\n    const newText = event.target.value.toLowerCase();\r\n    setSearchText(newText);\r\n    setFilteredCountry(\r\n      country.filter((c) => c.name.toLowerCase().includes(newText))\r\n    );\r\n  };\r\n  const handleSearchDomainChange = (event) => {\r\n    const newText = event.target.value.toLowerCase();\r\n    setSearchText1(newText);\r\n    setFilteredDomain(\r\n      DomainList.filter((c) => c.name.toLowerCase().includes(newText))\r\n    );\r\n  };\r\n\r\n  const handleSearchCompanies = (event) => {\r\n    // const newText = event.target.value.toLowerCase();\r\n    setSearchCompanies(event.target.value);\r\n    // setFilteredCompanies(companies.filter((c) => c.toLowerCase().includes(newText)));\r\n  };\r\n  const handleSearchUniversities = (event) => {\r\n    setSearchUniversities(event.target.value);\r\n  };\r\n  const handleSearchTools = (event) => {\r\n    // const newText = event.target.value.toLowerCase();\r\n    setSearchTools(event.target.value);\r\n    // setFilteredTools(tools.filter((t) => t.toLowerCase().includes(newText)));\r\n  };\r\n  const handleSearchSkills = (event) => {\r\n    // const newText = event.target.value.toLowerCase();\r\n    setSearchSkills(event.target.value);\r\n    // setFilteredSkills(skills.filter((s) => s.toLowerCase().includes(newText)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const FetchSkills = async () => {\r\n      // const params = {\r\n      //   company: selectedIndustry,\r\n      //   location: selectedLocation,\r\n      //   skills: selectedSkills,\r\n      // };\r\n      const params = {};\r\n\r\n      if (searchSkills) {\r\n        params.skill = searchSkills;\r\n      }\r\n\r\n      params.size = size;\r\n      params.page = 0;\r\n      try {\r\n        const response = await axios.get(getApiEndpoint(\"skills\"), { params });\r\n        setSkillsData(response.data.data);\r\n        setPaginationMeta(response.data.paginationMeta);\r\n        setSkillsFetched(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setSkillsFetched(false);\r\n      }\r\n    };\r\n    FetchSkills();\r\n  }, [searchSkills, size]);\r\n\r\n  useEffect(() => {\r\n    const FetchCompanies = async () => {\r\n      // const params = {\r\n      //   company: selectedIndustry,\r\n      //   location: selectedLocation,\r\n      //   skills: selectedSkills,\r\n      // };\r\n      const params = {};\r\n\r\n      if (searchCompanies) {\r\n        params.company = searchCompanies;\r\n      }\r\n\r\n      // params.size = companySize;\r\n      if (companySize) {\r\n        params.size = companySize;\r\n      }\r\n      params.page = 0;\r\n      try {\r\n        const response = await axios.get(getApiEndpoint(\"company\"), { params });\r\n        setCompanyData(response.data.data);\r\n        setCompanyPaginationMeta(response.data.paginationMeta);\r\n        setCompaniesFetched(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setCompaniesFetched(false);\r\n      }\r\n    };\r\n    FetchCompanies();\r\n  }, [searchCompanies, companySize]);\r\n\r\n  useEffect(() => {\r\n    const FetchUniversities = async () => {\r\n      // const params = {\r\n      //   company: selectedIndustry,\r\n      //   location: selectedLocation,\r\n      //   skills: selectedSkills,\r\n      // };\r\n      const params = {};\r\n\r\n      if (searchUniversities) {\r\n        params.university = searchUniversities;\r\n      }\r\n\r\n      // params.size = companySize;\r\n      if (universitySize) {\r\n        params.size = universitySize;\r\n      }\r\n      params.page = 0;\r\n      try {\r\n        const response = await axios.get(getApiEndpoint(\"university\"), {\r\n          params,\r\n        });\r\n        setUniversityData(response.data.data);\r\n        setUniversityPaginationMeta(response.data.paginationMeta);\r\n        setUniversitiesFetched(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setUniversitiesFetched(false);\r\n      }\r\n    };\r\n    FetchUniversities();\r\n  }, [searchUniversities, universitySize]);\r\n\r\n  useEffect(() => {\r\n    const FetchTools = async () => {\r\n      const params = {};\r\n\r\n      if (searchTools) {\r\n        params.tool = searchTools;\r\n      }\r\n\r\n      params.size = toolsSize;\r\n      params.page = 0;\r\n      try {\r\n        const response = await axios.get(getApiEndpoint(\"tools\"), { params });\r\n        setToolsData(response.data.data);\r\n        setToolsPaginationMeta(response.data.paginationMeta);\r\n        setToolsFetched(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setToolsFetched(false);\r\n      }\r\n    };\r\n    FetchTools();\r\n  }, [searchTools, toolsSize]);\r\n\r\n  const handleViewFilters = () => {\r\n    setViewFilters(!viewFilters);\r\n  };\r\n\r\n  const handleLoadMore = () => setSize(size + 5);\r\n  const handleCompanyLoadMore = () => setCompanySize(companySize + 5);\r\n  const handleUniversityLoadMore = () => setUniversitySize(universitySize + 5);\r\n  const handleToolsLoadMore = () => setToolsSize(toolsSize + 5);\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"mb-4\">\r\n        <Colxx xxs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" className=\" \">\r\n          <div className=\"\">\r\n            <div className=\"d-flex flex-wrap my-3\">\r\n              {/* <Dropdown\r\n                isOpen={dropdownBasicOpen}\r\n                toggle={() => setDropdownBasicOpen(!dropdownBasicOpen)}\r\n                className=\"mb-5 mx-2 col-lg-auto col-sm-12 \"\r\n              ><DropdownToggle className=\"col-lg-auto col-sm-12\" caret color=\"primary\" outline>\r\n              Check\r\n              </DropdownToggle></Dropdown> */}\r\n              {isMobile && (\r\n                <Button\r\n                  size=\"sm\"\r\n                  color=\"primary\"\r\n                  outline\r\n                  className=\"d-block d-lg-none col-sm-12 mb-3 position-relative\"\r\n                  onClick={handleViewFilters}\r\n                >\r\n                  {viewFilters ? (\r\n                    <span>\r\n                      Close filters\r\n                      <i\r\n                        className=\"simple-icon-arrow-up mr-0 icon-right\"\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          right: \"10px\",\r\n                          top: \"50%\",\r\n                          transform: \"translateY(-50%)\",\r\n                        }}\r\n                      />\r\n                    </span>\r\n                  ) : (\r\n                    <span>\r\n                      View filters\r\n                      <i\r\n                        className=\"simple-icon-arrow-down icon-right\"\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          right: \"10px\",\r\n                          top: \"50%\",\r\n                          transform: \"translateY(-50%)\",\r\n                        }}\r\n                      />\r\n                    </span>\r\n                  )}\r\n                </Button>\r\n              )}\r\n\r\n              {(!isMobile || viewFilters) && (\r\n                <>\r\n                  {/* university filter starts */}\r\n                  {userRole === \"alumni\" && (\r\n                    <Dropdown\r\n                      isOpen={dropdownBasicOpen6}\r\n                      toggle={() => setDropdownBasicOpen6(!dropdownBasicOpen6)}\r\n                      className=\"mb-3  col-lg-auto col-sm-12\"\r\n                    >\r\n                      <DropdownToggle\r\n                        size=\"sm\"\r\n                        className=\"col-lg-auto col-sm-12\"\r\n                        caret\r\n                        color=\"primary\"\r\n                        outline\r\n                      >\r\n                        {selectedUniversity || <span>Universities</span>}\r\n                      </DropdownToggle>\r\n                      <DropdownMenu className=\"col-lg-auto col-sm-12\">\r\n                        <div className=\"search-sm mr-1 ml-1 mb-1 align-top\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control \"\r\n                            placeholder=\"Search University\"\r\n                            value={searchUniversities}\r\n                            onChange={handleSearchUniversities}\r\n                          />\r\n                        </div>\r\n                        <PerfectScrollbar\r\n                          style={{ maxHeight: \"200px\" }}\r\n                          options={{\r\n                            suppressScrollX: true,\r\n                            wheelPropagation: false,\r\n                          }}\r\n                        >\r\n                          {selectedUniversity && (\r\n                            <DropdownItem\r\n                              onClick={() => handleUniversitySelect(\"\")}\r\n                              className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                            >\r\n                              <span>{selectedUniversity}</span>\r\n                              <i className=\"iconsminds-close ml-auto\" />\r\n                            </DropdownItem>\r\n                          )}\r\n                          {universityFetched && universityData.length === 0 && (\r\n                            <Card className=\" d-flex justify-content-between align-items-center\">\r\n                              {searchUniversities} was not found\r\n                            </Card>\r\n                          )}\r\n                          {!universityFetched && (\r\n                            <Card className=\" d-flex justify-content-between align-items-center\">\r\n                              Failed to load data!\r\n                            </Card>\r\n                          )}\r\n                          {universityData.map((c, index) => (\r\n                            <DropdownItem\r\n                              key={index}\r\n                              onClick={() => handleUniversitySelect(c)}\r\n                            >\r\n                              {c}\r\n                            </DropdownItem>\r\n                          ))}\r\n                          {!universityPaginationMeta.last &&\r\n                            universityFetched && (\r\n                              <Card\r\n                                style={{ cursor: \"pointer\" }}\r\n                                onClick={handleUniversityLoadMore}\r\n                                className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                              >\r\n                                load more\r\n                              </Card>\r\n                            )}\r\n                        </PerfectScrollbar>\r\n                      </DropdownMenu>\r\n                    </Dropdown>\r\n                  )}\r\n\r\n                  {/* university filter ends */}\r\n                  <Dropdown\r\n                    isOpen={dropdownBasicOpen}\r\n                    toggle={() => setDropdownBasicOpen(!dropdownBasicOpen)}\r\n                    className=\"mb-3  col-lg-auto col-sm-12 \"\r\n                  >\r\n                    <DropdownToggle\r\n                      size=\"sm\"\r\n                      className=\"col-lg-auto col-sm-12 \"\r\n                      caret\r\n                      color=\"primary\"\r\n                      outline\r\n                    >\r\n                      {selectedSkills[0] ? selectedSkills : <span>Skills</span>}\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                      <div className=\"search-sm mr-1 ml-1 mb-1 align-top\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"Search skills\"\r\n                          value={searchSkills}\r\n                          onChange={handleSearchSkills}\r\n                        />\r\n                      </div>\r\n                      <PerfectScrollbar\r\n                        style={{ maxHeight: \"200px\" }}\r\n                        options={{\r\n                          suppressScrollX: true,\r\n                          wheelPropagation: false,\r\n                        }}\r\n                      >\r\n                        {selectedSkills[0] && (\r\n                          <DropdownItem\r\n                            onClick={() => handleSkillSelect(\"\")}\r\n                            className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                          >\r\n                            <span>{selectedSkills}</span>\r\n                            <i className=\"iconsminds-close ml-auto\" />\r\n                          </DropdownItem>\r\n                        )}\r\n                        {skillsFetched && skillsData.length === 0 && (\r\n                          <Card className=\" d-flex justify-content-between align-items-center\">\r\n                            {searchSkills} was not found\r\n                          </Card>\r\n                        )}\r\n                        {!skillsFetched && (\r\n                          <Card className=\" d-flex justify-content-between align-items-center\">\r\n                            Failed to load data!\r\n                          </Card>\r\n                        )}\r\n                        {skillsData.map((s, index) => (\r\n                          <DropdownItem\r\n                            key={index}\r\n                            onClick={() => handleSkillSelect(s)}\r\n                          >\r\n                            {s}\r\n                          </DropdownItem>\r\n                        ))}\r\n                        {!paginationMeta.last && skillsFetched && (\r\n                          <Card\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={handleLoadMore}\r\n                            className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                          >\r\n                            load more\r\n                          </Card>\r\n                        )}\r\n                      </PerfectScrollbar>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n\r\n                  {userRole !== \"alumni\" && userRole !== \"user\" && (\r\n                    <Dropdown\r\n                      isOpen={dropdownBasicOpen1}\r\n                      toggle={() => setDropdownBasicOpen1(!dropdownBasicOpen1)}\r\n                      className=\"mb-3  col-lg-auto col-sm-12\"\r\n                    >\r\n                      <DropdownToggle\r\n                        size=\"sm\"\r\n                        className=\"col-lg-auto col-sm-12\"\r\n                        caret\r\n                        color=\"primary\"\r\n                        outline\r\n                      >\r\n                        {selectedTools[0] ? selectedTools : <span>Tools</span>}\r\n                      </DropdownToggle>\r\n                      <DropdownMenu>\r\n                        <div className=\"search-sm mr-1 ml-1 mb-1 align-top\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control \"\r\n                            placeholder=\"Search tools\"\r\n                            value={searchTools}\r\n                            onChange={handleSearchTools}\r\n                          />\r\n                        </div>\r\n                        <PerfectScrollbar\r\n                          style={{ maxHeight: \"200px\" }}\r\n                          options={{\r\n                            suppressScrollX: true,\r\n                            wheelPropagation: false,\r\n                          }}\r\n                        >\r\n                          {selectedTools[0] && (\r\n                            <DropdownItem\r\n                              onClick={() => handleToolSelect(\"\")}\r\n                              className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                            >\r\n                              <span>{selectedTools}</span>\r\n                              <i className=\"iconsminds-close ml-auto\" />\r\n                            </DropdownItem>\r\n                          )}\r\n                          {toolsFetched && toolsData.length === 0 && (\r\n                            <Card className=\" d-flex justify-content-between align-items-center\">\r\n                              {searchTools} was not found\r\n                            </Card>\r\n                          )}\r\n                          {!toolsFetched && (\r\n                            <Card className=\" d-flex justify-content-between align-items-center\">\r\n                              Failed to load data!\r\n                            </Card>\r\n                          )}\r\n                          {toolsData.map((t, index) => (\r\n                            <DropdownItem\r\n                              key={index}\r\n                              onClick={() => handleToolSelect(t)}\r\n                            >\r\n                              {t}\r\n                            </DropdownItem>\r\n                          ))}\r\n                          {!toolsPaginationMeta.last && toolsFetched && (\r\n                            <Card\r\n                              style={{ cursor: \"pointer\" }}\r\n                              onClick={handleToolsLoadMore}\r\n                              className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                            >\r\n                              load more\r\n                            </Card>\r\n                          )}\r\n                        </PerfectScrollbar>\r\n                      </DropdownMenu>\r\n                    </Dropdown>\r\n                  )}\r\n\r\n                  {userRole !== \"user\" && (\r\n                    <Dropdown\r\n                      isOpen={dropdownBasicOpen2}\r\n                      toggle={() => setDropdownBasicOpen2(!dropdownBasicOpen2)}\r\n                      className=\"mb-3  col-lg-auto col-sm-12\"\r\n                    >\r\n                      <DropdownToggle\r\n                        size=\"sm\"\r\n                        className=\"col-lg-auto col-sm-12\"\r\n                        caret\r\n                        color=\"primary\"\r\n                        outline\r\n                      >\r\n                        {selectedIndustry || <span>Companies</span>}\r\n                      </DropdownToggle>\r\n                      <DropdownMenu className=\"col-lg-auto col-sm-12\">\r\n                        <div className=\"search-sm mr-1 ml-1 mb-1 align-top\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control \"\r\n                            placeholder=\"Search Company\"\r\n                            value={searchCompanies}\r\n                            onChange={handleSearchCompanies}\r\n                          />\r\n                        </div>\r\n                        <PerfectScrollbar\r\n                          style={{ maxHeight: \"200px\" }}\r\n                          options={{\r\n                            suppressScrollX: true,\r\n                            wheelPropagation: false,\r\n                          }}\r\n                        >\r\n                          {selectedIndustry && (\r\n                            <DropdownItem\r\n                              onClick={() => handleIndustrySelect(\"\")}\r\n                              className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                            >\r\n                              <span>{selectedIndustry}</span>\r\n                              <i className=\"iconsminds-close ml-auto\" />\r\n                            </DropdownItem>\r\n                          )}\r\n                          {companiesFetched && companyData.length === 0 && (\r\n                            <Card className=\" d-flex justify-content-between align-items-center\">\r\n                              {searchCompanies} was not found\r\n                            </Card>\r\n                          )}\r\n                          {!companiesFetched && (\r\n                            <Card className=\" d-flex justify-content-between align-items-center\">\r\n                              Failed to load data!\r\n                            </Card>\r\n                          )}\r\n                          {companyData.map((c, index) => (\r\n                            <DropdownItem\r\n                              key={index}\r\n                              onClick={() => handleIndustrySelect(c)}\r\n                            >\r\n                              {c}\r\n                            </DropdownItem>\r\n                          ))}\r\n                          {!companyPaginationMeta.last && companiesFetched && (\r\n                            <Card\r\n                              style={{ cursor: \"pointer\" }}\r\n                              onClick={handleCompanyLoadMore}\r\n                              className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                            >\r\n                              load more\r\n                            </Card>\r\n                          )}\r\n                        </PerfectScrollbar>\r\n                      </DropdownMenu>\r\n                    </Dropdown>\r\n                  )}\r\n\r\n                  {userRole !== \"user\" && (\r\n                    <Dropdown\r\n                      isOpen={dropdownBasicOpen3}\r\n                      toggle={() => setDropdownBasicOpen3(!dropdownBasicOpen3)}\r\n                      className=\"mb-3  col-lg-auto col-sm-12\"\r\n                    >\r\n                      <DropdownToggle\r\n                        size=\"sm\"\r\n                        className=\"col-lg-auto col-sm-12\"\r\n                        caret\r\n                        color=\"primary\"\r\n                        outline\r\n                      >\r\n                        Price\r\n                      </DropdownToggle>\r\n                      <DropdownMenu>\r\n                        <DropdownItem className=\"no-bg-price\">\r\n                          {/* <SliderExamples onChange={onPriceChange} /> */}\r\n                          <Row>\r\n                            <Colxx xxs=\"12\" sm=\"12\">\r\n                              <RangeTooltip\r\n                                min={500}\r\n                                max={15000}\r\n                                className=\"mb-5\"\r\n                                defaultValue={[500, 15000]}\r\n                                allowCross={false}\r\n                                pushable={100}\r\n                                step={500}\r\n                                value={priceRange}\r\n                                onChange={handleSliderChange}\r\n                                onAfterChange={handleAfterChange}\r\n                              />\r\n                            </Colxx>\r\n                          </Row>\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </Dropdown>\r\n                  )}\r\n\r\n                  <Dropdown\r\n                    isOpen={dropdownBasicOpen4}\r\n                    toggle={() => setDropdownBasicOpen4(!dropdownBasicOpen4)}\r\n                    className=\"mb-3  col-lg-auto col-sm-12\"\r\n                  >\r\n                    <DropdownToggle\r\n                      size=\"sm\"\r\n                      className=\"col-lg-auto col-sm-12\"\r\n                      caret\r\n                      color=\"primary\"\r\n                      outline\r\n                    >\r\n                      {selectedLocation ? (\r\n                        country.find((c) => c.iso_code === selectedLocation)\r\n                          ?.name\r\n                      ) : (\r\n                        <span>Location</span>\r\n                      )}\r\n                    </DropdownToggle>\r\n\r\n                    <DropdownMenu>\r\n                      <div className=\"search-sm mr-1 ml-1 mb-1 align-top\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"Search Country\"\r\n                          value={searchText}\r\n                          onChange={handleSearchChange}\r\n                        />\r\n                      </div>\r\n                      <PerfectScrollbar\r\n                        style={{ maxHeight: \"200px\" }}\r\n                        options={{\r\n                          suppressScrollX: true,\r\n                          wheelPropagation: false,\r\n                        }}\r\n                      >\r\n                        {selectedLocation && (\r\n                          <DropdownItem\r\n                            onClick={() => handleLocationSelect(\"\")}\r\n                            className=\" d-flex justify-content-between align-items-center\"\r\n                          >\r\n                            <span>\r\n                              {\r\n                                country.find(\r\n                                  (c) => c.iso_code === selectedLocation\r\n                                )?.name\r\n                              }\r\n                            </span>\r\n                            <i className=\"iconsminds-close ml-auto\" />\r\n                          </DropdownItem>\r\n                        )}\r\n                        {filteredCountry.length === 0 && (\r\n                          <Card className=\"bg-light d-flex justify-content-between align-items-center\">\r\n                            {searchText} was not found\r\n                          </Card>\r\n                        )}\r\n                        {filteredCountry.map((c, index) => (\r\n                          <DropdownItem\r\n                            key={index}\r\n                            onClick={() => handleLocationSelect(c.iso_code)}\r\n                          >\r\n                            {c.name}\r\n                          </DropdownItem>\r\n                        ))}\r\n                      </PerfectScrollbar>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                  {/* domain filter starts */}\r\n                  {userRole === \"alumni\" && (\r\n                    <Dropdown\r\n                      isOpen={dropdownBasicOpen5}\r\n                      toggle={() => setDropdownBasicOpen5(!dropdownBasicOpen5)}\r\n                      className=\"mb-3  col-lg-auto col-sm-12\"\r\n                    >\r\n                      <DropdownToggle\r\n                        size=\"sm\"\r\n                        className=\"col-lg-auto col-sm-12\"\r\n                        caret\r\n                        color=\"primary\"\r\n                        outline\r\n                      >\r\n                        {selectedDomain || <span>Domain</span>}\r\n                      </DropdownToggle>\r\n\r\n                      <DropdownMenu>\r\n                        <div className=\"search-sm mr-1 ml-1 mb-1 align-top\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control \"\r\n                            placeholder=\"Search Domain\"\r\n                            value={searchText1}\r\n                            onChange={handleSearchDomainChange}\r\n                          />\r\n                        </div>\r\n                        <PerfectScrollbar\r\n                          style={{ maxHeight: \"200px\" }}\r\n                          options={{\r\n                            suppressScrollX: true,\r\n                            wheelPropagation: false,\r\n                          }}\r\n                        >\r\n                          {selectedDomain && (\r\n                            <DropdownItem\r\n                              onClick={() => handleDomainSelect(\"\")}\r\n                              className=\" d-flex justify-content-between align-items-center \"\r\n                            >\r\n                              <span>\r\n                                {\r\n                                  DomainList.find(\r\n                                    (c) => c.name === selectedDomain\r\n                                  )?.name\r\n                                }\r\n                              </span>\r\n                              <i className=\"iconsminds-close ml-auto \" />\r\n                            </DropdownItem>\r\n                          )}\r\n                          {filteredDomain.length === 0 && (\r\n                            <Card className=\"bg-light d-flex justify-content-between align-items-center\">\r\n                              {searchText1} was not found\r\n                            </Card>\r\n                          )}\r\n                          {filteredDomain.map((c) => (\r\n                            <DropdownItem\r\n                              key={c.name}\r\n                              onClick={() => handleDomainSelect(c.name)}\r\n                            >\r\n                              {c.name}\r\n                            </DropdownItem>\r\n                          ))}\r\n                        </PerfectScrollbar>\r\n                      </DropdownMenu>\r\n                    </Dropdown>\r\n                  )}\r\n                  {/* domain filter ends */}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Colxx>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MentorFilter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport Rating from \"components/common/Rating\";\r\n\r\nimport { Card, CardBody, Col, NavLink, Progress, Row } from \"reactstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport axios from \"axios\";\r\n// import ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\nimport ThumbnailLetters from \"../Chat/ThumbnailLetters\";\r\n\r\nconst ReviewsComponent = ({revieweeId,category}) => {\r\n  // console.log(\"prop chk\", props);\r\n  // const rid = props;\r\n  // const revieweeId = rid.id;\r\n  const [averageStar, setAverageStar] = useState(0);\r\n  const [totalRatings, setTotalRatings] = useState(0);\r\n  const [totalFeedBack, setTotalFeedBack] = useState(0);\r\n  const [reviews, setReviews] = useState([]);\r\n  const [starRatings, setStarRatings] = useState({\r\n    oneStar: 0,\r\n    twoStar: 0,\r\n    threeStar: 0,\r\n    fourStar: 0,\r\n    fiveStar: 0,\r\n  });\r\n  const metaRatingUrl = `${baseUrl}/api/${category}/rating/meta/${revieweeId}`;\r\n  const ratingUrl = `${baseUrl}/api/${category}/rating/${revieweeId}`;\r\n  useEffect(() => {\r\n    const ReviewDetails = async () => {\r\n      try {\r\n        const response = await axios.get(metaRatingUrl);\r\n        const reviewData = response.data;\r\n        // console.log(\"reviewData:\", reviewData);\r\n        // console.log(\"reviewData1:\", reviewData.averageStar);\r\n        if (reviewData) {\r\n          setAverageStar(reviewData.averageStar);\r\n          setTotalRatings(reviewData.totalRatings);\r\n          setTotalFeedBack(reviewData.totalFeedBack);\r\n          setStarRatings({\r\n            oneStar: reviewData.oneStar,\r\n            twoStar: reviewData.twoStar,\r\n            threeStar: reviewData.threeStar,\r\n            fourStar: reviewData.fourStar,\r\n            fiveStar: reviewData.fiveStar,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    ReviewDetails();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await axios.get(ratingUrl);\r\n        const response = res.data;\r\n        // console.log(response);\r\n        setReviews(response);\r\n        // setIsLoaded(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n\r\n        // setIsLoaded(true);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const calculatePercentage = (starCount) => {\r\n    return (starCount / totalRatings) * 100;\r\n  };\r\n\r\n\r\n  \r\n//   function removeTags(str) {\r\n//     if (str === null || str === '') {\r\n//         return false;\r\n//     }\r\n//     const newStr = str.toString();\r\n//     return newStr.replace(/(<([^>]+)>)/ig, '');\r\n// }\r\n\r\n\r\n\r\n  return (\r\n    <Colxx xl=\"12\" lg=\"12\" md=\"12\" className=\"mb-4\">\r\n            <h1 className=\"fw-bold mb-4\">Ratings & Reviews</h1>\r\n      {totalRatings > 0 && (\r\n        <Card className=\"mb-3 col-lg-4 col-12\" >\r\n          <CardBody>\r\n            {/* <h3 className=\"fw-bold\">Ratings & Reviews</h3> */}\r\n\r\n            <Row xxs=\"12\" sm=\"6\">\r\n              <Col>\r\n                <Rating total={5} rating={averageStar} interactive={false} />\r\n              </Col>\r\n              <Col>\r\n                <h4>{averageStar} out of 5 stars</h4>\r\n              </Col>\r\n            </Row>\r\n            <h4>\r\n              {totalRatings} ratings & {totalFeedBack} Reviews\r\n            </h4>\r\n            <div className=\"mb-4\">\r\n              <p className=\"mb-2\">\r\n                5 Star\r\n                <span className=\"float-right text-muted\">\r\n                  {starRatings.fiveStar}\r\n                </span>\r\n              </p>\r\n              <Progress value={calculatePercentage(starRatings.fiveStar)} />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <p className=\"mb-2\">\r\n                4 Star\r\n                <span className=\"float-right text-muted\">\r\n                  {starRatings.fourStar}\r\n                </span>\r\n              </p>\r\n              <Progress value={calculatePercentage(starRatings.fourStar)} />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <p className=\"mb-2\">\r\n                3 Star\r\n                <span className=\"float-right text-muted\">\r\n                  {starRatings.threeStar}\r\n                </span>\r\n              </p>\r\n              <Progress value={calculatePercentage(starRatings.threeStar)} />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <p className=\"mb-2\">\r\n                2 Star\r\n                <span className=\"float-right text-muted\">\r\n                  {starRatings.twoStar}\r\n                </span>\r\n              </p>\r\n              <Progress value={calculatePercentage(starRatings.twoStar)} />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <p className=\"mb-2\">\r\n                1 Star\r\n                <span className=\"float-right text-muted\">\r\n                  {starRatings.oneStar}\r\n                </span>\r\n              </p>\r\n              <Progress\r\n                value={calculatePercentage(starRatings.oneStar)}\r\n                barStyle={{ backgroundColor: \"primary\" }}\r\n              />\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      )}\r\n      {reviews.length > 0 ? (\r\n      <div className=\"\">\r\n        {reviews &&\r\n          reviews.map((rv) => {\r\n            <hr />;\r\n            return (\r\n\r\n              <div\r\n                  key={rv.reviewerId}\r\n                  className=\"d-flex flex-row   border-bottom \"\r\n                >\r\n                  <NavLink href={`/app/user/profile/${rv.reviewerId}`}>\r\n                  {!rv.imageUrl ? (\r\n                  <ThumbnailLetters\r\n                      rounded\r\n                      extraSmall\r\n                      text={rv.name}\r\n                      className=\"\"\r\n                    />\r\n                    ) : (\r\n                     <img\r\n                      src={`${baseUrl}/${rv.imageUrl}`}\r\n                      alt={rv.name}\r\n                      // className=\"img-thumbnail border-0 rounded-circle list-thumbnail align-self-center xsmall\"\r\n                      className=\" rounded-circle img-thumbnail border\"\r\n                      style={{ width: \"40px\", height: \"40px\", objectFit: \"cover\"  }}\r\n                    /> \r\n                    )}\r\n                  </NavLink>\r\n\r\n                  <div className=\" pr-2\">\r\n                    <NavLink to='#'>\r\n                      {/* <p className=\"font-weight-medium mb-0\">{removeTags(rv.feedBack)}</p> */}\r\n                      <div className=\"\"  dangerouslySetInnerHTML={{ __html: rv.feedBack }} />\r\n                      <p className=\"text-muted mb-0 text-small\">\r\n                      {rv.name} | {\" \"}\r\n                      <span>\r\n                        <TimestampConverter timeStamp={rv.time} format=\"datetime\" />\r\n                      </span>\r\n                      </p>\r\n                      {/* {displayRate && ( */}\r\n                        <div className=\"form-group mb-1 mt-2\">\r\n                          <Rating total={5} rating={rv.star} interactive={false} />\r\n                        </div>\r\n                      {/* )} */}\r\n                    </NavLink>\r\n                  </div>\r\n                </div>\r\n\r\n              // <div\r\n              //   className=\"d-flex  justify-content-start my-4\"\r\n              //   key={rv.reviewerId}\r\n              // >\r\n              //   <div>\r\n              //     <NavLink className=\"\">\r\n              //       <ThumbnailLetters\r\n              //         rounded\r\n              //         small\r\n              //         text={rv.name}\r\n              //         className=\"\"\r\n              //       />\r\n              //     </NavLink>\r\n              //   </div>\r\n              //   <div className=\"ml-2\">\r\n              //     <h6 className=\"font-weight-bold\">{rv.name}</h6>\r\n              //     {/* <h6>country</h6> */}\r\n\r\n              //     <div className=\"d-flex align-items-center my-2\">\r\n              //       <Rating total={5} rating={rv.star} interactive={false} />\r\n              //       <p className=\"text-small  mb-0 d-inline-block ml-2\">\r\n              //         {rv.star}\r\n              //       </p>\r\n              //     </div>\r\n              //     {/* <p>{rv.feedBack}</p> */}\r\n              //     {/* <div>{rv.feedBack}</div> */}\r\n              //     <div>{removeTags(rv.feedBack)}</div>\r\n              //     {/* <p>{timeConvert(rv.time)}</p> */}\r\n              //     <p><TimestampConverter timeStamp={rv.time} format=\"datetime\" /></p>\r\n              //     <div className=\"d-flex font-weight-medium\">\r\n              //       <p>Helpful?</p>\r\n              //       <div className=\"d-flex \">\r\n              //         <span className=\" ml-2\">\r\n              //           <i className=\"simple-icon-like mr-2\" />\r\n              //           yes\r\n              //         </span>\r\n              //         <span className=\" ml-2\">\r\n              //           <i className=\"simple-icon-dislike mr-2\" />\r\n              //           no\r\n              //         </span>\r\n              //       </div>\r\n              //       <hr />\r\n              //     </div>\r\n              //   </div>\r\n              // </div>\r\n            );\r\n          })}\r\n      </div>\r\n      ): (\r\n        // <Button>Be the first to write a review</Button>\r\n        <div className=\"ml-4\">No reviews available</div>    \r\n      )}\r\n    </Colxx>\r\n  );\r\n};\r\n\r\nexport default ReviewsComponent;\r\n","import React from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { injectIntl } from 'react-intl';\r\n\r\n\r\nconst DateRangePicker = ({selectedDate,setSelectedDate}) => {\r\n    // const [startDate, setStartDate] = useState(new Date());\r\n    // const [startDate, setStartDate] = useState(selectedDate);\r\n    // const { messages } = intl;\r\n    const handleDateChange = (date) => {\r\n      setSelectedDate(date);\r\n    };\r\n  return (\r\n    <div>\r\n       <div className=\"\">\r\n              <DatePicker\r\n                // selected={startDate}\r\n                selected={selectedDate}\r\n                // onChange={setStartDate}\r\n                // onChange={date => setSelectedDate(date)}\r\n                onChange={handleDateChange} // Pass the handler function to onChange\r\n                // setSelectedDate={setSelectedDate} \r\n                // placeholderText={messages['forms.date']}\r\n                // placeholderText='MM/DD/YYYY'\r\n              />\r\n            </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default  injectIntl(DateRangePicker);\r\n","const language = [\r\n    {\r\n        \"name\": \"Tamil\",\r\n        \"iso_code\": \"TA\"\r\n    },{\r\n        \"name\": \"English\",\r\n        \"iso_code\": \"EN\"\r\n    },\r\n    {\r\n        \"name\": \"Malayalam\",\r\n        \"iso_code\": \"ML\"\r\n    },\r\n    {\r\n        \"name\": \"Hindi\",\r\n        \"iso_code\": \"HI\"\r\n    },\r\n    {\r\n        \"name\": \"Bengali\",\r\n        \"iso_code\": \"BN\"\r\n    },\r\n    {\r\n        \"name\": \"Marathi\",\r\n        \"iso_code\": \"MR\"\r\n    },\r\n    {\r\n        \"name\": \"Telugu\",\r\n        \"iso_code\": \"TE\"\r\n    },\r\n    {\r\n        \"name\": \"Gujarati\",\r\n        \"iso_code\": \"GU\"\r\n    },\r\n    {\r\n        \"name\": \"Urdu\",\r\n        \"iso_code\": \"UR\"\r\n    },\r\n    {\r\n        \"name\": \"Kannada\",\r\n        \"iso_code\": \"KA\"\r\n    },\r\n    {\r\n        \"name\": \"Odia\",\r\n        \"iso_code\": \"OR\"\r\n    },\r\n    {\r\n        \"name\": \"Punjabi\",\r\n        \"iso_code\": \"PA\"\r\n    },\r\n    {\r\n        \"name\": \"Assamese\",\r\n        \"iso_code\": \"AS\"\r\n    },\r\n    {\r\n        \"name\": \"Maithili\",\r\n        \"iso_code\": \"MI\"\r\n    },\r\n    {\r\n        \"name\": \"Bhili/Bhilodi\",\r\n        \"iso_code\": \"BH\"\r\n    },\r\n    {\r\n        \"name\": \"Santali\",\r\n        \"iso_code\": \"SA\"\r\n    },\r\n    {\r\n        \"name\": \"Kashmiri\",\r\n        \"iso_code\": \"KS\"\r\n    },\r\n    {\r\n        \"name\": \"Nepali\",\r\n        \"iso_code\": \"NE\"\r\n    },\r\n    {\r\n        \"name\": \"Sindhi\",\r\n        \"iso_code\": \"SD\"\r\n    },\r\n    {\r\n        \"name\": \"Dogri\",\r\n        \"iso_code\": \"DO\"\r\n    },\r\n    {\r\n        \"name\": \"Konkani\",\r\n        \"iso_code\": \"KN\"\r\n    },\r\n    {\r\n        \"name\": \"Bodo\",\r\n        \"iso_code\": \"BO\"\r\n    },\r\n    {\r\n        \"name\": \"Manipuri\",\r\n        \"iso_code\": \"MN\"\r\n    },\r\n    {\r\n        \"name\": \"Mandarin Chinese\",\r\n        \"iso_code\": \"ZH\"\r\n    },\r\n    {\r\n        \"name\": \"Spanish\",\r\n        \"iso_code\": \"ES\"\r\n    },\r\n    {\r\n        \"name\": \"French\",\r\n        \"iso_code\": \"FR\"\r\n    },\r\n    {\r\n        \"name\": \"German\",\r\n        \"iso_code\": \"DE\"\r\n    },\r\n    {\r\n        \"name\": \"Portuguese\",\r\n        \"iso_code\": \"PT\"\r\n    },\r\n    {\r\n        \"name\": \"Russian\",\r\n        \"iso_code\": \"RU\"\r\n    },\r\n    {\r\n        \"name\": \"Japanese\",\r\n        \"iso_code\": \"JA\"\r\n    },\r\n    {\r\n        \"name\": \"Korean\",\r\n        \"iso_code\": \"KO\"\r\n    },\r\n    {\r\n        \"name\": \"Italian\",\r\n        \"iso_code\": \"IT\"\r\n    },\r\n    {\r\n        \"name\": \"Dutch\",\r\n        \"iso_code\": \"NL\"\r\n    },\r\n    {\r\n        \"name\": \"Greek\",\r\n        \"iso_code\": \"EL\"\r\n    },\r\n    {\r\n        \"name\": \"Turkish\",\r\n        \"iso_code\": \"TR\"\r\n    },\r\n    {\r\n        \"name\": \"Swedish\",\r\n        \"iso_code\": \"SV\"\r\n    },\r\n    {\r\n        \"name\": \"Polish\",\r\n        \"iso_code\": \"PL\"\r\n    },\r\n    {\r\n        \"name\": \"Ukrainian\",\r\n        \"iso_code\": \"UK\"\r\n    },\r\n    {\r\n        \"name\": \"Hebrew\",\r\n        \"iso_code\": \"HE\"\r\n    },\r\n    {\r\n        \"name\": \"Arabic\",\r\n        \"iso_code\": \"AR\"\r\n    },\r\n    {\r\n        \"name\": \"Hungarian\",\r\n        \"iso_code\": \"HU\"\r\n    },\r\n    {\r\n        \"name\": \"Thai\",\r\n        \"iso_code\": \"TH\"\r\n    },\r\n    {\r\n        \"name\": \"Czech\",\r\n        \"iso_code\": \"CS\"\r\n    },\r\n    {\r\n        \"name\": \"Finnish\",\r\n        \"iso_code\": \"FI\"\r\n    },\r\n    {\r\n        \"name\": \"Danish\",\r\n        \"iso_code\": \"DA\"\r\n    },\r\n    {\r\n        \"name\": \"Norwegian\",\r\n        \"iso_code\": \"NO\"\r\n    },\r\n    {\r\n        \"name\": \"Vietnamese\",\r\n        \"iso_code\": \"VI\"\r\n    }\r\n]\r\n\r\n\r\nexport default language;\r\n","const DomainList = [\r\n  {\r\n    name: \"IT\",\r\n  },\r\n  {\r\n    name: \"AGRICULTURE\",\r\n  },\r\n  {\r\n    name: \"MEDICAL\",\r\n  },\r\n  {\r\n    name: \"FINANCE\",\r\n  },\r\n  {\r\n    name: \"EDUCATION\",\r\n  },\r\n  {\r\n    name: \"MARKETING\",\r\n  },\r\n  {\r\n    name: \"ENGINEERING\",\r\n  },\r\n  {\r\n    name: \"LAW\",\r\n  },\r\n  {\r\n    name: \"DESIGN\",\r\n  },\r\n  {\r\n    name: \"HUMAN_RESOURCES\",\r\n  },\r\n];\r\nexport default DomainList;\r\n","import { useState } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Nav,\r\n  NavItem,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\n\r\nimport classnames from \"classnames\";\r\n\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { adminRoot } from \"constants/defaultValues\";\r\n\r\nconst MentorTabCard = ({ handleConnectClick, chatUserId, price }) => {\r\n  const [activeFirstTab, setActiveFirstTab] = useState(\"3\");\r\n  const role = localStorage.getItem(\"roleRes\");\r\n\r\n  const history = useHistory();\r\n  const handleChatClick = () => {\r\n    history.push(`${adminRoot}/chat/${chatUserId}`);\r\n  };\r\n  return (\r\n    <Row className=\"mt-4\">\r\n      <Colxx xxs=\"12\">\r\n        <Row>\r\n          <Colxx xxs=\"12\" xs=\"12\" lg=\"12\">\r\n            <Card className=\"mb-4 \">\r\n              <CardHeader>\r\n                <Nav tabs className=\"card-header-tabs \">\r\n                  {/* <NavItem>\r\n                    <NavLink\r\n                      to=\"#\"\r\n                      location={{}}\r\n                      className={classnames({\r\n                        active: activeFirstTab === '1',\r\n                        'nav-link': true,\r\n                      })}\r\n                      onClick={() => {\r\n                        setActiveFirstTab('1');\r\n                      }}\r\n                    >\r\n                      6 months\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      to=\"#\"\r\n                      location={{}}\r\n                      className={classnames({\r\n                        active: activeFirstTab === '2',\r\n                        'nav-link': true,\r\n                      })}\r\n                      onClick={() => {\r\n                        setActiveFirstTab('2');\r\n                      }}\r\n                    >\r\n                      3 months\r\n                    </NavLink>\r\n                  </NavItem> */}\r\n                  <NavItem>\r\n                    <NavLink\r\n                      to=\"#\"\r\n                      location={{}}\r\n                      className={classnames({\r\n                        active: activeFirstTab === \"3\",\r\n                        \"nav-link\": true,\r\n                      })}\r\n                      onClick={() => {\r\n                        setActiveFirstTab(\"3\");\r\n                      }}\r\n                    >\r\n                      Hourly plan\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  {/* <NavItem>\r\n                    <NavLink\r\n                      to=\"#\"\r\n                      location={{}}\r\n                      className={classnames({\r\n                        active: activeFirstTab === '4',\r\n                        'nav-link': true,\r\n                      })}\r\n                      onClick={() => {\r\n                        setActiveFirstTab('4');\r\n                      }}\r\n                    >\r\n                      Premium1\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      to=\"#\"\r\n                      location={{}}\r\n                      className={classnames({\r\n                        active: activeFirstTab === '5',\r\n                        'nav-link': true,\r\n                      })}\r\n                      onClick={() => {\r\n                        setActiveFirstTab('5');\r\n                      }}\r\n                    >\r\n                      Premium2\r\n                    </NavLink>\r\n                  </NavItem> */}\r\n                </Nav>\r\n              </CardHeader>\r\n\r\n              <TabContent activeTab={activeFirstTab}>\r\n                {/* <TabPane tabId=\"1\">\r\n                <Row>\r\n                    <Colxx sm=\"12\">\r\n                      <CardBody>\r\n                        <CardTitle className=\"mb-4\">\r\n                        <h2>₹12500</h2>\r\n                          <h5>Premium package</h5>\r\n                        </CardTitle>\r\n                       \r\n                      </CardBody>\r\n                    </Colxx>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tabId=\"2\">\r\n                  <Row>\r\n                    <Colxx sm=\"12\">\r\n                      <CardBody>\r\n                        <CardTitle className=\"mb-4\">\r\n                        <h2>₹8500</h2>\r\n                          <h5>Standard package</h5>\r\n                        </CardTitle>\r\n                       \r\n                      </CardBody>\r\n                    </Colxx>\r\n                  </Row>\r\n                </TabPane> */}\r\n                <TabPane tabId=\"3\">\r\n                  <Row>\r\n                    <Colxx sm=\"12\">\r\n                      <CardBody>\r\n                        <CardTitle className=\"mb-4\">\r\n                          {price && (\r\n                            <h2>₹{Math.floor(price).toLocaleString()}</h2>\r\n                          )}\r\n                          <h5>Basic package</h5>\r\n                          <div className=\"mt-4 \">\r\n                            <div className=\"\">\r\n                              {role.includes(\"USER\") && (\r\n                                <Row>\r\n                                  <Button\r\n                                    onClick={handleConnectClick}\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    className=\" font-weight-semibold mx-2 \"\r\n                                    size=\"large\"\r\n                                  >\r\n                                    <span className=\"font-weight-semibold  text-one\">\r\n                                      Connect\r\n                                    </span>\r\n                                  </Button>\r\n                                  <Button\r\n                                    onClick={handleChatClick}\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    className=\" font-weight-semibold mx-2 \"\r\n                                    size=\"large\"\r\n                                  >\r\n                                    <span className=\"font-weight-semibold  text-one\">\r\n                                      Contact\r\n                                    </span>\r\n                                  </Button>\r\n                                </Row>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </CardTitle>\r\n                      </CardBody>\r\n                    </Colxx>\r\n                  </Row>\r\n                </TabPane>\r\n                {/* <TabPane tabId=\"4\">\r\n                  <Row>\r\n                    <Colxx sm=\"12\">\r\n                      <CardBody>\r\n                        <CardTitle className=\"mb-4\">\r\n                        <h2>₹12500</h2>\r\n                          <h5>Premium package 1</h5>\r\n                        </CardTitle>\r\n                       \r\n                      </CardBody>\r\n                    </Colxx>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tabId=\"5\">\r\n                  <Row>\r\n                    <Colxx sm=\"12\">\r\n                      <CardBody>\r\n                        <CardTitle className=\"mb-4\">\r\n                        <h2>₹15500</h2>\r\n                          <h5>Premium package 2</h5>\r\n                        </CardTitle>\r\n                       \r\n                      </CardBody>\r\n                    </Colxx>\r\n                  </Row>\r\n                </TabPane> */}\r\n              </TabContent>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default MentorTabCard;\r\n","/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-param-reassign */\r\nimport React from 'react';\r\nimport { WithWizard } from 'react-albus';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst TopNavigation = ({ className, disableNav, topNavClick }) => {\r\n  const getClassName = (steps, step, index, stepItem) => {\r\n    if (steps.indexOf(step) === index) {\r\n      return 'step-doing';\r\n    }\r\n    if (steps.indexOf(step) > index || stepItem.isDone) {\r\n      stepItem.isDone = true;\r\n      return 'step-done';\r\n    }\r\n    return 'step';\r\n  };\r\n\r\n  const itemClick = (stepItem, push) => {\r\n    if (disableNav) {\r\n      return;\r\n    }\r\n    topNavClick(stepItem, push);\r\n  };\r\n\r\n  return (\r\n    <WithWizard\r\n      render={({ next, previous, step, steps, go, push }) => (\r\n        <ul\r\n          className={`nav nav-tabs ${className}${\r\n            disableNav ? ' disabled' : ''\r\n          }`}\r\n        >\r\n          {steps.map((stepItem, index) => {\r\n            if (!stepItem.hideTopNav) {\r\n              return (\r\n                <li\r\n                  key={`topNavStep_${index}`}\r\n                  className={`nav-item ${getClassName(\r\n                    steps,\r\n                    step,\r\n                    index,\r\n                    stepItem\r\n                  )}`}\r\n                >\r\n                  <NavLink\r\n                    to=\"#\"\r\n                    location={{}}\r\n                    className=\"nav-link\"\r\n                    onClick={() => itemClick(stepItem, push)}\r\n                  >\r\n                    <span>{stepItem.name}</span>\r\n                    <small>{stepItem.desc}</small>\r\n                  </NavLink>\r\n                </li>\r\n              );\r\n            }\r\n            return <span key={`topNavStep_${index}`} />;\r\n          })}\r\n          {/* <li>\r\n            <h1>Hello</h1>\r\n          </li> */}\r\n        </ul>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TopNavigation;\r\n","// import react from \"react\";\r\n\r\nconst validateFirstName = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter your first name\";\r\n  } else if (!/^[a-zA-Z]+$/.test(value)) {\r\n    error = \"Only alphabets are allowed\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n\r\n  return error;\r\n};\r\n\r\nconst validateLastName = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter your first name\";\r\n  } else if (!/^[a-zA-Z]+$/.test(value)) {\r\n    error = \"Only alphabets are allowed\";\r\n  } else if (value.length < 1) {\r\n    error = \"Must be longer than 1 characters\";\r\n  }\r\n\r\n  return error;\r\n};\r\n\r\nconst validateEmail = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter your email address\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n    error = \"Invalid email address\";\r\n  }\r\n  return error;\r\n};\r\n\r\nconst validatePassword = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please choose a password\";\r\n  } else if (value.length < 6) {\r\n    error = \"Password must be longer than 6 characters\";\r\n  }\r\n  return error;\r\n};\r\nfunction validateCategory(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a category\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateLocation(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a location\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateStudent(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a student type\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateCompany(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please provide the company name\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateIdentityStatus(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a identity status\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateJobTitle(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter a job title\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\n// function validateSkills(value) {\r\n//   let error;\r\n//   if (!value) {\r\n//     error = \"Please specify a skill\";\r\n//   } else if (value.length < 2) {\r\n//       error = \"Must be longer than 2 characters\";\r\n//     }\r\n//   return error;\r\n// }\r\n// function validateSkills(value) {\r\n//   let error;\r\n//   if (!value || value.length === 0) {\r\n//      error = \"Please specify a skill\";\r\n//   } else if (value.some(tag => tag.length < 2)) {\r\n//      error = \"Each skill must be longer than 2 characters\";\r\n//   }\r\n//   return error;\r\n//  }\r\n\r\nconst validateSkills = (value) => {\r\n  if (!Array.isArray(value)) {\r\n    return \"Skills must be an array of strings\";\r\n  }\r\n\r\n  if (value.length === 0) {\r\n    return \"Please add at least one skill\";\r\n  }\r\n\r\n  const isString = value.every((skill) => typeof skill === \"string\");\r\n  if (!isString) {\r\n    return \"Skills must be strings\";\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nfunction validateBio(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please provide a bio\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateLinkedinUrl(value) {\r\n  let error;\r\n\r\n  if (!value) {\r\n    error = \"Please provide your LinkedIn URL\";\r\n  } else if (\r\n    !/^https?:\\/\\/(?:www\\.)?linkedin\\.com\\/(?:[a-z]{2,3}\\.)?in\\/[a-zA-Z0-9_-]+\\/?$/i.test(\r\n      value\r\n    )\r\n  ) {\r\n    error = \"Invalid LinkedIn URL format\";\r\n  }\r\n  return error;\r\n}\r\n\r\n// function validateLinkedinUrl(value) {\r\n//   let error;\r\n\r\n//   if (!value) {\r\n//       error = \"Please provide your LinkedIn URL\";\r\n//   } else if (!/^linkedin\\.(com|in)\\/(in|pub|profile|company)\\/[a-zA-Z0-9_-]+\\/?$/i.test(value)) {\r\n//       error = \"Invalid LinkedIn URL format\";\r\n//   }\r\n//   return error;\r\n// }\r\n\r\nfunction validateReasonForMentor(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateAchievement(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\n\r\n// function validateFile(value) {\r\n//   let error;\r\n//   if (!value) {\r\n//     error = \"This field is required.\";\r\n//   }\r\n//   //  else if (![\"image/jpeg\", \"image/png\"].includes(file.type)) {\r\n//   //   error = \"Unsupported file type. Only JPEG and PNG images are allowed\";\r\n//   // }\r\n//   return error;\r\n// }\r\n// function validateFile(value) {\r\n//   let error;\r\n\r\n//   if (!value) {\r\n//     error = \"This field is required.\";\r\n//   } else {\r\n//     const fileType = value.type;\r\n//     if (![\"image/jpeg\", \"image/png\"].includes(fileType)) {\r\n//       error = \"Unsupported file type. Only JPEG and PNG images are allowed\";\r\n//     }\r\n//   }\r\n\r\n//   return error;\r\n// }\r\nconst validateFile = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select an image file\";\r\n  } else if (!value.type.startsWith(\"image/\")) {\r\n    error = \"Please select a valid image file\";\r\n  }\r\n  return error;\r\n};\r\n\r\nexport {\r\n  validateAchievement,\r\n  validateBio,\r\n  validateCategory,\r\n  validateCompany,\r\n  validateEmail,\r\n  validateFile,\r\n  validateFirstName,\r\n  validateIdentityStatus,\r\n  validateJobTitle,\r\n  validateLastName,\r\n  validateLinkedinUrl,\r\n  validateLocation,\r\n  validatePassword,\r\n  validateReasonForMentor,\r\n  validateSkills,\r\n  validateStudent,\r\n};\r\n","const country = [\r\n    {\r\n        \"name\": \"Afghanistan\",\r\n        \"iso_code\": \"AF\"\r\n    },\r\n    {\r\n        \"name\": \"Albania\",\r\n        \"iso_code\": \"AL\"\r\n    },\r\n    {\r\n        \"name\": \"Algeria\",\r\n        \"iso_code\": \"DZ\"\r\n    },\r\n    {\r\n        \"name\": \"American Samoa\",\r\n        \"iso_code\": \"AS\"\r\n    },\r\n    {\r\n        \"name\": \"Andorra\",\r\n        \"iso_code\": \"AD\"\r\n    },\r\n    {\r\n        \"name\": \"Angola\",\r\n        \"iso_code\": \"AO\"\r\n    },\r\n    {\r\n        \"name\": \"Anguilla\",\r\n        \"iso_code\": \"AI\"\r\n    },\r\n    {\r\n        \"name\": \"Antarctica\",\r\n        \"iso_code\": \"AQ\"\r\n    },\r\n    {\r\n        \"name\": \"Antigua and Barbuda\",\r\n        \"iso_code\": \"AG\"\r\n    },\r\n    {\r\n        \"name\": \"Argentina\",\r\n        \"iso_code\": \"AR\"\r\n    },\r\n    {\r\n        \"name\": \"Armenia\",\r\n        \"iso_code\": \"AM\"\r\n    },\r\n    {\r\n        \"name\": \"Aruba\",\r\n        \"iso_code\": \"AW\"\r\n    },\r\n    {\r\n        \"name\": \"Australia\",\r\n        \"iso_code\": \"AU\"\r\n    },\r\n    {\r\n        \"name\": \"Austria\",\r\n        \"iso_code\": \"AT\"\r\n    },\r\n    {\r\n        \"name\": \"Azerbaijan\",\r\n        \"iso_code\": \"AZ\"\r\n    },\r\n    {\r\n        \"name\": \"Bahamas The\",\r\n        \"iso_code\": \"BS\"\r\n    },\r\n    {\r\n        \"name\": \"Bahrain\",\r\n        \"iso_code\": \"BH\"\r\n    },\r\n    {\r\n        \"name\": \"Bangladesh\",\r\n        \"iso_code\": \"BD\"\r\n    },\r\n    {\r\n        \"name\": \"Barbados\",\r\n        \"iso_code\": \"BB\"\r\n    },\r\n    {\r\n        \"name\": \"Belarus\",\r\n        \"iso_code\": \"BY\"\r\n    },\r\n    {\r\n        \"name\": \"Belgium\",\r\n        \"iso_code\": \"BE\"\r\n    },\r\n    {\r\n        \"name\": \"Belize\",\r\n        \"iso_code\": \"BZ\"\r\n    },\r\n    {\r\n        \"name\": \"Benin\",\r\n        \"iso_code\": \"BJ\"\r\n    },\r\n    {\r\n        \"name\": \"Bermuda\",\r\n        \"iso_code\": \"BM\"\r\n    },\r\n    {\r\n        \"name\": \"Bhutan\",\r\n        \"iso_code\": \"BT\"\r\n    },\r\n    {\r\n        \"name\": \"Bolivia\",\r\n        \"iso_code\": \"BO\"\r\n    },\r\n    {\r\n        \"name\": \"Bosnia and Herzegovina\",\r\n        \"iso_code\": \"BA\"\r\n    },\r\n    {\r\n        \"name\": \"Botswana\",\r\n        \"iso_code\": \"BW\"\r\n    },\r\n    {\r\n        \"name\": \"Bouvet Island\",\r\n        \"iso_code\": \"BV\"\r\n    },\r\n    {\r\n        \"name\": \"Brazil\",\r\n        \"iso_code\": \"BR\"\r\n    },\r\n    {\r\n        \"name\": \"British Indian Ocean Territory\",\r\n        \"iso_code\": \"IO\"\r\n    },\r\n    {\r\n        \"name\": \"Brunei\",\r\n        \"iso_code\": \"BN\"\r\n    },\r\n    {\r\n        \"name\": \"Bulgaria\",\r\n        \"iso_code\": \"BG\"\r\n    },\r\n    {\r\n        \"name\": \"Burkina Faso\",\r\n        \"iso_code\": \"BF\"\r\n    },\r\n    {\r\n        \"name\": \"Burundi\",\r\n        \"iso_code\": \"BI\"\r\n    },\r\n    {\r\n        \"name\": \"Cambodia\",\r\n        \"iso_code\": \"KH\"\r\n    },\r\n    {\r\n        \"name\": \"Cameroon\",\r\n        \"iso_code\": \"CM\"\r\n    },\r\n    {\r\n        \"name\": \"Canada\",\r\n        \"iso_code\": \"CA\"\r\n    },\r\n    {\r\n        \"name\": \"Cape Verde\",\r\n        \"iso_code\": \"CV\"\r\n    },\r\n    {\r\n        \"name\": \"Cayman Islands\",\r\n        \"iso_code\": \"KY\"\r\n    },\r\n    {\r\n        \"name\": \"Central African Republic\",\r\n        \"iso_code\": \"CF\"\r\n    },\r\n    {\r\n        \"name\": \"Chad\",\r\n        \"iso_code\": \"TD\"\r\n    },\r\n    {\r\n        \"name\": \"Chile\",\r\n        \"iso_code\": \"CL\"\r\n    },\r\n    {\r\n        \"name\": \"China\",\r\n        \"iso_code\": \"CN\"\r\n    },\r\n    {\r\n        \"name\": \"Christmas Island\",\r\n        \"iso_code\": \"CX\"\r\n    },\r\n    {\r\n        \"name\": \"Cocos (Keeling) Islands\",\r\n        \"iso_code\": \"CC\"\r\n    },\r\n    {\r\n        \"name\": \"Colombia\",\r\n        \"iso_code\": \"CO\"\r\n    },\r\n    {\r\n        \"name\": \"Comoros\",\r\n        \"iso_code\": \"KM\"\r\n    },\r\n    {\r\n        \"name\": \"Congo\",\r\n        \"iso_code\": \"CG\"\r\n    },\r\n    {\r\n        \"name\": \"Congo The Democratic Republic Of The\",\r\n        \"iso_code\": \"CD\"\r\n    },\r\n    {\r\n        \"name\": \"Cook Islands\",\r\n        \"iso_code\": \"CK\"\r\n    },\r\n    {\r\n        \"name\": \"Costa Rica\",\r\n        \"iso_code\": \"CR\"\r\n    },\r\n    {\r\n        \"name\": \"Cote D'Ivoire (Ivory Coast)\",\r\n        \"iso_code\": \"CI\"\r\n    },\r\n    {\r\n        \"name\": \"Croatia (Hrvatska)\",\r\n        \"iso_code\": \"HR\"\r\n    },\r\n    {\r\n        \"name\": \"Cuba\",\r\n        \"iso_code\": \"CU\"\r\n    },\r\n    {\r\n        \"name\": \"Cyprus\",\r\n        \"iso_code\": \"CY\"\r\n    },\r\n    {\r\n        \"name\": \"Czech Republic\",\r\n        \"iso_code\": \"CZ\"\r\n    },\r\n    {\r\n        \"name\": \"Denmark\",\r\n        \"iso_code\": \"DK\"\r\n    },\r\n    {\r\n        \"name\": \"Djibouti\",\r\n        \"iso_code\": \"DJ\"\r\n    },\r\n    {\r\n        \"name\": \"Dominica\",\r\n        \"iso_code\": \"DM\"\r\n    },\r\n    {\r\n        \"name\": \"Dominican Republic\",\r\n        \"iso_code\": \"DO\"\r\n    },\r\n    {\r\n        \"name\": \"East Timor\",\r\n        \"iso_code\": \"TP\"\r\n    },\r\n    {\r\n        \"name\": \"Ecuador\",\r\n        \"iso_code\": \"EC\"\r\n    },\r\n    {\r\n        \"name\": \"Egypt\",\r\n        \"iso_code\": \"EG\"\r\n    },\r\n    {\r\n        \"name\": \"El Salvador\",\r\n        \"iso_code\": \"SV\"\r\n    },\r\n    {\r\n        \"name\": \"Equatorial Guinea\",\r\n        \"iso_code\": \"GQ\"\r\n    },\r\n    {\r\n        \"name\": \"Eritrea\",\r\n        \"iso_code\": \"ER\"\r\n    },\r\n    {\r\n        \"name\": \"Estonia\",\r\n        \"iso_code\": \"EE\"\r\n    },\r\n    {\r\n        \"name\": \"Ethiopia\",\r\n        \"iso_code\": \"ET\"\r\n    },\r\n    {\r\n        \"name\": \"External Territories of Australia\",\r\n        \"iso_code\": \"XA\"\r\n    },\r\n    {\r\n        \"name\": \"Falkland Islands\",\r\n        \"iso_code\": \"FK\"\r\n    },\r\n    {\r\n        \"name\": \"Faroe Islands\",\r\n        \"iso_code\": \"FO\"\r\n    },\r\n    {\r\n        \"name\": \"Fiji Islands\",\r\n        \"iso_code\": \"FJ\"\r\n    },\r\n    {\r\n        \"name\": \"Finland\",\r\n        \"iso_code\": \"FI\"\r\n    },\r\n    {\r\n        \"name\": \"France\",\r\n        \"iso_code\": \"FR\"\r\n    },\r\n    {\r\n        \"name\": \"French Guiana\",\r\n        \"iso_code\": \"GF\"\r\n    },\r\n    {\r\n        \"name\": \"French Polynesia\",\r\n        \"iso_code\": \"PF\"\r\n    },\r\n    {\r\n        \"name\": \"French Southern Territories\",\r\n        \"iso_code\": \"TF\"\r\n    },\r\n    {\r\n        \"name\": \"Gabon\",\r\n        \"iso_code\": \"GA\"\r\n    },\r\n    {\r\n        \"name\": \"Gambia The\",\r\n        \"iso_code\": \"GM\"\r\n    },\r\n    {\r\n        \"name\": \"Georgia\",\r\n        \"iso_code\": \"GE\"\r\n    },\r\n    {\r\n        \"name\": \"Germany\",\r\n        \"iso_code\": \"DE\"\r\n    },\r\n    {\r\n        \"name\": \"Ghana\",\r\n        \"iso_code\": \"GH\"\r\n    },\r\n    {\r\n        \"name\": \"Gibraltar\",\r\n        \"iso_code\": \"GI\"\r\n    },\r\n    {\r\n        \"name\": \"Greece\",\r\n        \"iso_code\": \"GR\"\r\n    },\r\n    {\r\n        \"name\": \"Greenland\",\r\n        \"iso_code\": \"GL\"\r\n    },\r\n    {\r\n        \"name\": \"Grenada\",\r\n        \"iso_code\": \"GD\"\r\n    },\r\n    {\r\n        \"name\": \"Guadeloupe\",\r\n        \"iso_code\": \"GP\"\r\n    },\r\n    {\r\n        \"name\": \"Guam\",\r\n        \"iso_code\": \"GU\"\r\n    },\r\n    {\r\n        \"name\": \"Guatemala\",\r\n        \"iso_code\": \"GT\"\r\n    },\r\n    {\r\n        \"name\": \"Guernsey and Alderney\",\r\n        \"iso_code\": \"XU\"\r\n    },\r\n    {\r\n        \"name\": \"Guinea\",\r\n        \"iso_code\": \"GN\"\r\n    },\r\n    {\r\n        \"name\": \"Guinea-Bissau\",\r\n        \"iso_code\": \"GW\"\r\n    },\r\n    {\r\n        \"name\": \"Guyana\",\r\n        \"iso_code\": \"GY\"\r\n    },\r\n    {\r\n        \"name\": \"Haiti\",\r\n        \"iso_code\": \"HT\"\r\n    },\r\n    {\r\n        \"name\": \"Heard and McDonald Islands\",\r\n        \"iso_code\": \"HM\"\r\n    },\r\n    {\r\n        \"name\": \"Honduras\",\r\n        \"iso_code\": \"HN\"\r\n    },\r\n    {\r\n        \"name\": \"Hong Kong S.A.R.\",\r\n        \"iso_code\": \"HK\"\r\n    },\r\n    {\r\n        \"name\": \"Hungary\",\r\n        \"iso_code\": \"HU\"\r\n    },\r\n    {\r\n        \"name\": \"Iceland\",\r\n        \"iso_code\": \"IS\"\r\n    },\r\n    {\r\n        \"name\": \"India\",\r\n        \"iso_code\": \"IN\"\r\n    },\r\n    {\r\n        \"name\": \"Indonesia\",\r\n        \"iso_code\": \"ID\"\r\n    },\r\n    {\r\n        \"name\": \"Iran\",\r\n        \"iso_code\": \"IR\"\r\n    },\r\n    {\r\n        \"name\": \"Iraq\",\r\n        \"iso_code\": \"IQ\"\r\n    },\r\n    {\r\n        \"name\": \"Ireland\",\r\n        \"iso_code\": \"IE\"\r\n    },\r\n    {\r\n        \"name\": \"Israel\",\r\n        \"iso_code\": \"IL\"\r\n    },\r\n    {\r\n        \"name\": \"Italy\",\r\n        \"iso_code\": \"IT\"\r\n    },\r\n    {\r\n        \"name\": \"Jamaica\",\r\n        \"iso_code\": \"JM\"\r\n    },\r\n    {\r\n        \"name\": \"Japan\",\r\n        \"iso_code\": \"JP\"\r\n    },\r\n    {\r\n        \"name\": \"Jersey\",\r\n        \"iso_code\": \"XJ\"\r\n    },\r\n    {\r\n        \"name\": \"Jordan\",\r\n        \"iso_code\": \"JO\"\r\n    },\r\n    {\r\n        \"name\": \"Kazakhstan\",\r\n        \"iso_code\": \"KZ\"\r\n    },\r\n    {\r\n        \"name\": \"Kenya\",\r\n        \"iso_code\": \"KE\"\r\n    },\r\n    {\r\n        \"name\": \"Kiribati\",\r\n        \"iso_code\": \"KI\"\r\n    },\r\n    {\r\n        \"name\": \"Korea North\",\r\n        \"iso_code\": \"KP\"\r\n    },\r\n    {\r\n        \"name\": \"Korea South\",\r\n        \"iso_code\": \"KR\"\r\n    },\r\n    {\r\n        \"name\": \"Kuwait\",\r\n        \"iso_code\": \"KW\"\r\n    },\r\n    {\r\n        \"name\": \"Kyrgyzstan\",\r\n        \"iso_code\": \"KG\"\r\n    },\r\n    {\r\n        \"name\": \"Laos\",\r\n        \"iso_code\": \"LA\"\r\n    },\r\n    {\r\n        \"name\": \"Latvia\",\r\n        \"iso_code\": \"LV\"\r\n    },\r\n    {\r\n        \"name\": \"Lebanon\",\r\n        \"iso_code\": \"LB\"\r\n    },\r\n    {\r\n        \"name\": \"Lesotho\",\r\n        \"iso_code\": \"LS\"\r\n    },\r\n    {\r\n        \"name\": \"Liberia\",\r\n        \"iso_code\": \"LR\"\r\n    },\r\n    {\r\n        \"name\": \"Libya\",\r\n        \"iso_code\": \"LY\"\r\n    },\r\n    {\r\n        \"name\": \"Liechtenstein\",\r\n        \"iso_code\": \"LI\"\r\n    },\r\n    {\r\n        \"name\": \"Lithuania\",\r\n        \"iso_code\": \"LT\"\r\n    },\r\n    {\r\n        \"name\": \"Luxembourg\",\r\n        \"iso_code\": \"LU\"\r\n    },\r\n    {\r\n        \"name\": \"Macau S.A.R.\",\r\n        \"iso_code\": \"MO\"\r\n    },\r\n    {\r\n        \"name\": \"Macedonia\",\r\n        \"iso_code\": \"MK\"\r\n    },\r\n    {\r\n        \"name\": \"Madagascar\",\r\n        \"iso_code\": \"MG\"\r\n    },\r\n    {\r\n        \"name\": \"Malawi\",\r\n        \"iso_code\": \"MW\"\r\n    },\r\n    {\r\n        \"name\": \"Malaysia\",\r\n        \"iso_code\": \"MY\"\r\n    },\r\n    {\r\n        \"name\": \"Maldives\",\r\n        \"iso_code\": \"MV\"\r\n    },\r\n    {\r\n        \"name\": \"Mali\",\r\n        \"iso_code\": \"ML\"\r\n    },\r\n    {\r\n        \"name\": \"Malta\",\r\n        \"iso_code\": \"MT\"\r\n    },\r\n    {\r\n        \"name\": \"Man (Isle of)\",\r\n        \"iso_code\": \"XM\"\r\n    },\r\n    {\r\n        \"name\": \"Marshall Islands\",\r\n        \"iso_code\": \"MH\"\r\n    },\r\n    {\r\n        \"name\": \"Martinique\",\r\n        \"iso_code\": \"MQ\"\r\n    },\r\n    {\r\n        \"name\": \"Mauritania\",\r\n        \"iso_code\": \"MR\"\r\n    },\r\n    {\r\n        \"name\": \"Mauritius\",\r\n        \"iso_code\": \"MU\"\r\n    },\r\n    {\r\n        \"name\": \"Mayotte\",\r\n        \"iso_code\": \"YT\"\r\n    },\r\n    {\r\n        \"name\": \"Mexico\",\r\n        \"iso_code\": \"MX\"\r\n    },\r\n    {\r\n        \"name\": \"Micronesia\",\r\n        \"iso_code\": \"FM\"\r\n    },\r\n    {\r\n        \"name\": \"Moldova\",\r\n        \"iso_code\": \"MD\"\r\n    },\r\n    {\r\n        \"name\": \"Monaco\",\r\n        \"iso_code\": \"MC\"\r\n    },\r\n    {\r\n        \"name\": \"Mongolia\",\r\n        \"iso_code\": \"MN\"\r\n    },\r\n    {\r\n        \"name\": \"Montserrat\",\r\n        \"iso_code\": \"MS\"\r\n    },\r\n    {\r\n        \"name\": \"Morocco\",\r\n        \"iso_code\": \"MA\"\r\n    },\r\n    {\r\n        \"name\": \"Mozambique\",\r\n        \"iso_code\": \"MZ\"\r\n    },\r\n    {\r\n        \"name\": \"Myanmar\",\r\n        \"iso_code\": \"MM\"\r\n    },\r\n    {\r\n        \"name\": \"Namibia\",\r\n        \"iso_code\": \"NA\"\r\n    },\r\n    {\r\n        \"name\": \"Nauru\",\r\n        \"iso_code\": \"NR\"\r\n    },\r\n    {\r\n        \"name\": \"Nepal\",\r\n        \"iso_code\": \"NP\"\r\n    },\r\n    {\r\n        \"name\": \"Netherlands Antilles\",\r\n        \"iso_code\": \"AN\"\r\n    },\r\n    {\r\n        \"name\": \"Netherlands The\",\r\n        \"iso_code\": \"NL\"\r\n    },\r\n    {\r\n        \"name\": \"New Caledonia\",\r\n        \"iso_code\": \"NC\"\r\n    },\r\n    {\r\n        \"name\": \"New Zealand\",\r\n        \"iso_code\": \"NZ\"\r\n    },\r\n    {\r\n        \"name\": \"Nicaragua\",\r\n        \"iso_code\": \"NI\"\r\n    },\r\n    {\r\n        \"name\": \"Niger\",\r\n        \"iso_code\": \"NE\"\r\n    },\r\n    {\r\n        \"name\": \"Nigeria\",\r\n        \"iso_code\": \"NG\"\r\n    },\r\n    {\r\n        \"name\": \"Niue\",\r\n        \"iso_code\": \"NU\"\r\n    },\r\n    {\r\n        \"name\": \"Norfolk Island\",\r\n        \"iso_code\": \"NF\"\r\n    },\r\n    {\r\n        \"name\": \"Northern Mariana Islands\",\r\n        \"iso_code\": \"MP\"\r\n    },\r\n    {\r\n        \"name\": \"Norway\",\r\n        \"iso_code\": \"NO\"\r\n    },\r\n    {\r\n        \"name\": \"Oman\",\r\n        \"iso_code\": \"OM\"\r\n    },\r\n    {\r\n        \"name\": \"Pakistan\",\r\n        \"iso_code\": \"PK\"\r\n    },\r\n    {\r\n        \"name\": \"Palau\",\r\n        \"iso_code\": \"PW\"\r\n    },\r\n    {\r\n        \"name\": \"Palestinian Territory Occupied\",\r\n        \"iso_code\": \"PS\"\r\n    },\r\n    {\r\n        \"name\": \"Panama\",\r\n        \"iso_code\": \"PA\"\r\n    },\r\n    {\r\n        \"name\": \"Papua new Guinea\",\r\n        \"iso_code\": \"PG\"\r\n    },\r\n    {\r\n        \"name\": \"Paraguay\",\r\n        \"iso_code\": \"PY\"\r\n    },\r\n    {\r\n        \"name\": \"Peru\",\r\n        \"iso_code\": \"PE\"\r\n    },\r\n    {\r\n        \"name\": \"Philippines\",\r\n        \"iso_code\": \"PH\"\r\n    },\r\n    {\r\n        \"name\": \"Pitcairn Island\",\r\n        \"iso_code\": \"PN\"\r\n    },\r\n    {\r\n        \"name\": \"Poland\",\r\n        \"iso_code\": \"PL\"\r\n    },\r\n    {\r\n        \"name\": \"Portugal\",\r\n        \"iso_code\": \"PT\"\r\n    },\r\n    {\r\n        \"name\": \"Puerto Rico\",\r\n        \"iso_code\": \"PR\"\r\n    },\r\n    {\r\n        \"name\": \"Qatar\",\r\n        \"iso_code\": \"QA\"\r\n    },\r\n    {\r\n        \"name\": \"Reunion\",\r\n        \"iso_code\": \"RE\"\r\n    },\r\n    {\r\n        \"name\": \"Romania\",\r\n        \"iso_code\": \"RO\"\r\n    },\r\n    {\r\n        \"name\": \"Russia\",\r\n        \"iso_code\": \"RU\"\r\n    },\r\n    {\r\n        \"name\": \"Rwanda\",\r\n        \"iso_code\": \"RW\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Helena\",\r\n        \"iso_code\": \"SH\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Kitts And Nevis\",\r\n        \"iso_code\": \"KN\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Lucia\",\r\n        \"iso_code\": \"LC\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Pierre and Miquelon\",\r\n        \"iso_code\": \"PM\"\r\n    },\r\n    {\r\n        \"name\": \"Saint Vincent And The Grenadines\",\r\n        \"iso_code\": \"VC\"\r\n    },\r\n    {\r\n        \"name\": \"Samoa\",\r\n        \"iso_code\": \"WS\"\r\n    },\r\n    {\r\n        \"name\": \"San Marino\",\r\n        \"iso_code\": \"SM\"\r\n    },\r\n    {\r\n        \"name\": \"Sao Tome and Principe\",\r\n        \"iso_code\": \"ST\"\r\n    },\r\n    {\r\n        \"name\": \"Saudi Arabia\",\r\n        \"iso_code\": \"SA\"\r\n    },\r\n    {\r\n        \"name\": \"Senegal\",\r\n        \"iso_code\": \"SN\"\r\n    },\r\n    {\r\n        \"name\": \"Serbia\",\r\n        \"iso_code\": \"RS\"\r\n    },\r\n    {\r\n        \"name\": \"Seychelles\",\r\n        \"iso_code\": \"SC\"\r\n    },\r\n    {\r\n        \"name\": \"Sierra Leone\",\r\n        \"iso_code\": \"SL\"\r\n    },\r\n    {\r\n        \"name\": \"Singapore\",\r\n        \"iso_code\": \"SG\"\r\n    },\r\n    {\r\n        \"name\": \"Slovakia\",\r\n        \"iso_code\": \"SK\"\r\n    },\r\n    {\r\n        \"name\": \"Slovenia\",\r\n        \"iso_code\": \"SI\"\r\n    },\r\n    {\r\n        \"name\": \"Smaller Territories of the UK\",\r\n        \"iso_code\": \"XG\"\r\n    },\r\n    {\r\n        \"name\": \"Solomon Islands\",\r\n        \"iso_code\": \"SB\"\r\n    },\r\n    {\r\n        \"name\": \"Somalia\",\r\n        \"iso_code\": \"SO\"\r\n    },\r\n    {\r\n        \"name\": \"South Africa\",\r\n        \"iso_code\": \"ZA\"\r\n    },\r\n    {\r\n        \"name\": \"South Georgia\",\r\n        \"iso_code\": \"GS\"\r\n    },\r\n    {\r\n        \"name\": \"South Sudan\",\r\n        \"iso_code\": \"SS\"\r\n    },\r\n    {\r\n        \"name\": \"Spain\",\r\n        \"iso_code\": \"ES\"\r\n    },\r\n    {\r\n        \"name\": \"Sri Lanka\",\r\n        \"iso_code\": \"LK\"\r\n    },\r\n    {\r\n        \"name\": \"Sudan\",\r\n        \"iso_code\": \"SD\"\r\n    },\r\n    {\r\n        \"name\": \"Suriname\",\r\n        \"iso_code\": \"SR\"\r\n    },\r\n    {\r\n        \"name\": \"Svalbard And Jan Mayen Islands\",\r\n        \"iso_code\": \"SJ\"\r\n    },\r\n    {\r\n        \"name\": \"Swaziland\",\r\n        \"iso_code\": \"SZ\"\r\n    },\r\n    {\r\n        \"name\": \"Sweden\",\r\n        \"iso_code\": \"SE\"\r\n    },\r\n    {\r\n        \"name\": \"Switzerland\",\r\n        \"iso_code\": \"CH\"\r\n    },\r\n    {\r\n        \"name\": \"Syria\",\r\n        \"iso_code\": \"SY\"\r\n    },\r\n    {\r\n        \"name\": \"Taiwan\",\r\n        \"iso_code\": \"TW\"\r\n    },\r\n    {\r\n        \"name\": \"Tajikistan\",\r\n        \"iso_code\": \"TJ\"\r\n    },\r\n    {\r\n        \"name\": \"Tanzania\",\r\n        \"iso_code\": \"TZ\"\r\n    },\r\n    {\r\n        \"name\": \"Thailand\",\r\n        \"iso_code\": \"TH\"\r\n    },\r\n    {\r\n        \"name\": \"Togo\",\r\n        \"iso_code\": \"TG\"\r\n    },\r\n    {\r\n        \"name\": \"Tokelau\",\r\n        \"iso_code\": \"TK\"\r\n    },\r\n    {\r\n        \"name\": \"Tonga\",\r\n        \"iso_code\": \"TO\"\r\n    },\r\n    {\r\n        \"name\": \"Trinidad And Tobago\",\r\n        \"iso_code\": \"TT\"\r\n    },\r\n    {\r\n        \"name\": \"Tunisia\",\r\n        \"iso_code\": \"TN\"\r\n    },\r\n    {\r\n        \"name\": \"Turkey\",\r\n        \"iso_code\": \"TR\"\r\n    },\r\n    {\r\n        \"name\": \"Turkmenistan\",\r\n        \"iso_code\": \"TM\"\r\n    },\r\n    {\r\n        \"name\": \"Turks And Caicos Islands\",\r\n        \"iso_code\": \"TC\"\r\n    },\r\n    {\r\n        \"name\": \"Tuvalu\",\r\n        \"iso_code\": \"TV\"\r\n    },\r\n    {\r\n        \"name\": \"Uganda\",\r\n        \"iso_code\": \"UG\"\r\n    },\r\n    {\r\n        \"name\": \"Ukraine\",\r\n        \"iso_code\": \"UA\"\r\n    },\r\n    {\r\n        \"name\": \"United Arab Emirates\",\r\n        \"iso_code\": \"AE\"\r\n    },\r\n    {\r\n        \"name\": \"United Kingdom\",\r\n        \"iso_code\": \"GB\"\r\n    },\r\n    {\r\n        \"name\": \"United States\",\r\n        \"iso_code\": \"US\"\r\n    },\r\n    {\r\n        \"name\": \"United States Minor Outlying Islands\",\r\n        \"iso_code\": \"UM\"\r\n    },\r\n    {\r\n        \"name\": \"Uruguay\",\r\n        \"iso_code\": \"UY\"\r\n    },\r\n    {\r\n        \"name\": \"Uzbekistan\",\r\n        \"iso_code\": \"UZ\"\r\n    },\r\n    {\r\n        \"name\": \"Vanuatu\",\r\n        \"iso_code\": \"VU\"\r\n    },\r\n    {\r\n        \"name\": \"Vatican City State (Holy See)\",\r\n        \"iso_code\": \"VA\"\r\n    },\r\n    {\r\n        \"name\": \"Venezuela\",\r\n        \"iso_code\": \"VE\"\r\n    },\r\n    {\r\n        \"name\": \"Vietnam\",\r\n        \"iso_code\": \"VN\"\r\n    },\r\n    {\r\n        \"name\": \"Virgin Islands (British)\",\r\n        \"iso_code\": \"VG\"\r\n    },\r\n    {\r\n        \"name\": \"Virgin Islands (US)\",\r\n        \"iso_code\": \"VI\"\r\n    },\r\n    {\r\n        \"name\": \"Wallis And Futuna Islands\",\r\n        \"iso_code\": \"WF\"\r\n    },\r\n    {\r\n        \"name\": \"Western Sahara\",\r\n        \"iso_code\": \"EH\"\r\n    },\r\n    {\r\n        \"name\": \"Yemen\",\r\n        \"iso_code\": \"YE\"\r\n    },\r\n    {\r\n        \"name\": \"Yugoslavia\",\r\n        \"iso_code\": \"YU\"\r\n    },\r\n    {\r\n        \"name\": \"Zambia\",\r\n        \"iso_code\": \"ZM\"\r\n    },\r\n    {\r\n        \"name\": \"Zimbabwe\",\r\n        \"iso_code\": \"ZW\"\r\n    }\r\n]\r\n\r\nexport default country;\r\n","import { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Field, Formik } from \"formik\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport indentityStatusList from \"../CommonCardList/IdentityStatusList\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\nimport { EmploymentTypeData, WorkPlaceTypeData } from \"./ListingData\";\r\n\r\nconst quillModules = {\r\n  toolbar: [\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    // [\"link\", \"image\"],\r\n    // [\"clean\"],\r\n  ],\r\n};\r\nconst quillFormats = [\r\n  \"header\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n];\r\n\r\n// const WorkPlaceTypeData = [\r\n//   { label: \"Onsite\", value: 0 },\r\n//   { label: \"Hybrid\", value: 1 },\r\n//   { label: \"Remote\", value: 2 },\r\n// ];\r\n\r\n// const EmploymentTypeData = [\r\n//   { label: \"Full time\", value: 0 },\r\n//   { label: \"Part time\", value: 1 },\r\n//   { label: \"Temporary\", value: 2 },\r\n//   { label: \"Volunteer\", value: 3 },\r\n//   { label: \"Internship\", value: 4 },\r\n//   { label: \"Contract\", value: 5 },\r\n// ];\r\n\r\n// const validateJobTitle = (value) => {\r\n//   let error;\r\n//   if (!value) {\r\n//      error = 'Job title is required';\r\n//   }\r\n//   return error;\r\n//  };\r\n\r\n// const validateDescription = (value) => {\r\n//   let error;\r\n//   if (!value) {\r\n//     error = \"Description is required\";\r\n//   }\r\n//   return error;\r\n// };\r\n\r\nconst JobPosting = ({ closeModal, initialData, onEdit }) => {\r\n  const [id] = useState(initialData?.id || 0);\r\n  const [title] = useState(initialData?.title || \"\");\r\n  const [jobTitle] = useState(initialData?.jobTitle || \"\");\r\n  const [company] = useState(initialData?.company || \"\");\r\n  const [workPlaceType] = useState(initialData?.workPlaceTypeValue || null);\r\n  const [jobLocation] = useState(initialData?.jobLocation || \"\");\r\n  const [employmentType] = useState(initialData?.employmentTypeValue || null);\r\n  const [identityStatus] = useState(initialData?.identityStatus || null);\r\n  const [description] = useState(initialData?.description || \"\");\r\n  const [skillsTag] = useState(initialData?.skills || []);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedFile2, setSelectedFile2] = useState(null);\r\n\r\n  const url = `${baseUrl}/api/posts/job-post/`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  const handleFileChange2 = (event) => {\r\n    // const file = event.target.files[0];\r\n    // setSelectedFile2(file);\r\n    const file = event.target.files[0];\r\n\r\n    if (!file) return; // No file selected\r\n\r\n    // if (!(file.type === \"application/pdf\")) {\r\n    //   // alert(\"Please select a valid PDF file.\");\r\n    //   setImageError1(true);\r\n    //   setImageErrorMessage1(\"Please upload a PDF file.\");\r\n    //   return;\r\n    // }\r\n    if (file) {\r\n      setSelectedFile2(file);\r\n    }\r\n    // const fileSizeMB = file.size / (1024 * 1024); // Convert bytes to MB\r\n\r\n    // if (fileSizeMB > 2) {\r\n    //   // alert(\"File size exceeds 2MB limit.\");\r\n    //   setImageError1(true);\r\n    //   setImageErrorMessage1(\"File size must be less than  2MB\");\r\n\r\n    //   return;\r\n    // }\r\n\r\n    setSelectedFile2(file);\r\n    // setImageError1(false);\r\n    // setImageErrorMessage1(\"\");\r\n  };\r\n\r\n  // const handleSubmit = async () => {\r\n  //   setIsLoading(true);\r\n  //   try {\r\n  //     const data = {\r\n  //       id,\r\n  //       title,\r\n  //       jobTitle,\r\n  //       company,\r\n  //       workPlaceType,\r\n  //       jobLocation,\r\n  //       employmentType,\r\n  //       description,\r\n  //       skills: skillsTag,\r\n  //     };\r\n  //     if (initialData) {\r\n  //       await onEdit(data);\r\n  //     } else {\r\n  //       const response = await axios.post(url, data, {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${token}`,\r\n  //         },\r\n  //       });\r\n  //       ToasterComponent(\"success\", response.data.statuses);\r\n  //     }\r\n  //     closeModal();\r\n  //     setIsLoading(false);\r\n  //   } catch (error) {\r\n  //     setIsLoading(false);\r\n  //     if (\r\n  //       error.response &&\r\n  //       error.response.data &&\r\n  //       error.response.data.statuses\r\n  //     ) {\r\n  //       ToasterComponent(\"error\", error.response.data.statuses);\r\n  //     } else {\r\n  //       console.error(\"Error posting/editing job:\", error);\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  // const handleTagsChange = (newSkills) => {\r\n  //   // setSkillError(false);\r\n  //   setSkillsTag(newSkills);\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"mx-auto my-4 p-3\" style={{ maxWidth: \"900px\" }}>\r\n        {/* <h1 className=\"font-weight-semibold\">Create a job post</h1> */}\r\n        <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"mx-auto \">\r\n          <Formik\r\n            initialValues={{\r\n              title: title || \"\",\r\n              jobTitle: jobTitle || \"\",\r\n              company: company || \"\",\r\n              workPlaceType: workPlaceType || \"\",\r\n              jobLocation: jobLocation || \"\",\r\n              employmentType: employmentType || \"\",\r\n              identityStatus: identityStatus || \"\",\r\n              description: description || \"\",\r\n              skills: skillsTag || [],\r\n            }}\r\n            validate={(values) => {\r\n              const errors = {};\r\n              if (!values.title.trim()) {\r\n                errors.title = \"Title is required\";\r\n              }\r\n              if (!values.jobTitle.trim()) {\r\n                errors.jobTitle = \"Job title is required\";\r\n              }\r\n\r\n              if (!values.jobLocation.trim()) {\r\n                errors.jobLocation = \"Job location is required\";\r\n              }\r\n              if (!values.company.trim()) {\r\n                errors.company = \"Company is required\";\r\n              }\r\n              if (!values.employmentType.trim()) {\r\n                errors.employmentType = \"employment type is required\";\r\n              }\r\n              if (!values.identityStatus.trim()) {\r\n                errors.employmentType = \"identity status is required\";\r\n              }\r\n              if (!values.workPlaceType.trim()) {\r\n                errors.workPlaceType = \"workplace type is required\";\r\n              }\r\n\r\n              if (!values.description.trim()) {\r\n                errors.description = \"Description is required\";\r\n              }\r\n              if (values.skills.length === 0) {\r\n                errors.skills = \"At least one skill is required\";\r\n              }\r\n              return errors;\r\n            }}\r\n            onSubmit={async (values, { setSubmitting }) => {\r\n              setIsLoading(true);\r\n\r\n              try {\r\n                const data = {\r\n                  id,\r\n                  title: values.title,\r\n                  jobTitle: values.jobTitle,\r\n                  company: values.company,\r\n                  workPlaceType: values.workPlaceType,\r\n                  jobLocation: values.jobLocation,\r\n                  employmentType: values.employmentType,\r\n                  identityStatus: values.identityStatus,\r\n                  description: values.description,\r\n                  skills: values.skills,\r\n                };\r\n                const formData = new FormData();\r\n                // formData.append(\"jobListing\", JSON.stringify(data));\r\n                formData.append(\r\n                  \"jobListing\",\r\n                  new Blob([JSON.stringify(data)], {\r\n                    type: \"application/json\",\r\n                  })\r\n                );\r\n                if (selectedFile2) {\r\n                  formData.append(\"images\", selectedFile2);\r\n                }\r\n\r\n                if (initialData) {\r\n                  await onEdit(data);\r\n                } else {\r\n                  const response = await axios.post(url, formData, {\r\n                    headers: {\r\n                      Authorization: `Bearer ${token}`,\r\n                    },\r\n                  });\r\n                  ToasterComponent(\"success\", response.data.statuses);\r\n                  // if (selectedFile2) {\r\n                  //   const formData = new FormData();\r\n                  //   formData.append(\"image\", selectedFile2);\r\n\r\n                  //   const imageUploadUrl = `${baseUrl}/api/posts/job-post/image`;\r\n                  //   await axios.post(imageUploadUrl, formData, {\r\n                  //     headers: {\r\n                  //       Authorization: `Bearer ${token}`,\r\n                  //       // \"Content-Type\": \"multipart/form-data\",\r\n                  //     },\r\n                  //   });\r\n\r\n                  //   ToasterComponent(\"success\", \"Image uploaded successfully\");\r\n                  // }\r\n                }\r\n                closeModal();\r\n                setIsLoading(false);\r\n              } catch (error) {\r\n                setIsLoading(false);\r\n                if (\r\n                  error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.statuses\r\n                ) {\r\n                  ToasterComponent(\"error\", error.response.data.statuses);\r\n                } else {\r\n                  console.error(\"Error posting/editing job:\", error);\r\n                }\r\n              }\r\n              setSubmitting(false);\r\n            }}\r\n          >\r\n            {({\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldValue,\r\n              handleSubmit,\r\n              setFieldTouched,\r\n              values,\r\n            }) => (\r\n              <Form className=\"av-tooltip tooltip-label-right\">\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Title*</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"title\"\r\n                        onChange={({ target: { value } }) => {\r\n                          const alphabeticValue = value.replace(\r\n                            /[^a-zA-Z ]/g,\r\n                            \"\"\r\n                          );\r\n                          setFieldValue(\"title\", alphabeticValue);\r\n                        }}\r\n                        value={values.title}\r\n                        required\r\n                      />\r\n                      {errors.title && touched.title && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.title}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Job Title*</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"jobTitle\"\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"jobTitle\", e.target.value)\r\n                        }\r\n                        value={values.jobTitle}\r\n                        required\r\n                      />\r\n                      {errors.jobTitle && touched.jobTitle && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.jobTitle}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Company*</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"company\"\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"company\", e.target.value)\r\n                        }\r\n                        value={values.company}\r\n                        required\r\n                      />\r\n                      {errors.company && touched.company && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.company}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Workplace Type*</Label>\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"workPlaceType\"\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"workPlaceType\", e.target.value)\r\n                        }\r\n                        className=\"form-control\"\r\n                        value={values.workPlaceType}\r\n                      >\r\n                        <option value=\"\" disabled>\r\n                          Select Workplace Type\r\n                        </option>\r\n                        {WorkPlaceTypeData &&\r\n                          WorkPlaceTypeData.map((option) => (\r\n                            <option key={option} value={option.value}>\r\n                              {option.label}\r\n                            </option>\r\n                          ))}\r\n                      </Field>\r\n                      {errors.workPlaceType && touched.workPlaceType && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.workPlaceType}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Job Location*</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"jobLocation\"\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"jobLocation\", e.target.value)\r\n                        }\r\n                        value={values.jobLocation}\r\n                        required\r\n                      />\r\n                      {errors.jobLocation && touched.jobLocation && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.jobLocation}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Employment Type*</Label>\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"employmentType\"\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"employmentType\", e.target.value)\r\n                        }\r\n                        className=\"form-control\"\r\n                        value={values.employmentType}\r\n                      >\r\n                        <option value=\"\" disabled>\r\n                          Select Employment Type\r\n                        </option>\r\n                        {EmploymentTypeData &&\r\n                          EmploymentTypeData.map((option) => (\r\n                            <option key={option} value={option.value}>\r\n                              {option.label}\r\n                            </option>\r\n                          ))}\r\n                      </Field>\r\n                      {errors.employmentType && touched.employmentType && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.employmentType}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Label>Employment Category*</Label>\r\n                    <Field\r\n                      as=\"select\"\r\n                      name=\"identityStatus\"\r\n                      // validate={validateIdentityStatus}\r\n                      onChange={(e) =>\r\n                        setFieldValue(\"identityStatus\", e.target.value)\r\n                      }\r\n                      className=\"form-control\"\r\n                      value={values.identityStatus}\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select Employment Category\r\n                      </option>\r\n                      {indentityStatusList.map((option) => (\r\n                        <option key={option.name} value={option.name}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))}\r\n                    </Field>\r\n                    {errors.identityStatus && touched.identityStatus && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.identityStatus}\r\n                      </div>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Skills*</Label>\r\n                      <TagsInput\r\n                        value={values.skills}\r\n                        onChange={(tags) => setFieldValue(\"skills\", tags)}\r\n                        addOnBlur\r\n                        addKeys={[13, 188]}\r\n                      />\r\n                      {errors.skills && touched.skills && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.skills}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Label>Image</Label>\r\n                    {/* {imageError1 && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {imageErrorMessage1}\r\n                          </div>\r\n                        )} */}\r\n\r\n                    <InputGroup className=\"\">\r\n                      <div className=\"\">\r\n                        <Button\r\n                          className=\"default\"\r\n                          color=\"primary\"\r\n                          onClick={() =>\r\n                            document\r\n                              .getElementById(\"file-upload-resume\")\r\n                              .click()\r\n                          }\r\n                        >\r\n                          Upload Photo <i className=\"iconsminds-upload ml-2\" />\r\n                        </Button>\r\n                        {/* <Form> */}\r\n                        <Input\r\n                          id=\"file-upload-resume\"\r\n                          type=\"file\"\r\n                          className=\"d-none\"\r\n                          onChange={handleFileChange2}\r\n                          // validate={validateFile}\r\n                        />\r\n                      </div>\r\n                    </InputGroup>\r\n                    <div\r\n                      className=\"  my-2 \"\r\n                      // style={{\r\n                      //   border: \"1px solid #ccc\",\r\n                      //   minWidth: \"200px\",\r\n                      // }}\r\n                    >\r\n                      {/* {selectedFile2 ? selectedFile2.name : \"\"} */}\r\n                      {selectedFile2\r\n                        ? `selected file is ${selectedFile2.name}`\r\n                        : \"\"}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <FormGroup className=\"error-l-75\">\r\n                  <Label>Description*</Label>\r\n                  <ReactQuill\r\n                    theme=\"snow\"\r\n                    value={values.description}\r\n                    onChange={(val) => setFieldValue(\"description\", val)}\r\n                    onBlur={() => setFieldTouched(\"description\", true)}\r\n                    modules={quillModules}\r\n                    formats={quillFormats}\r\n                  />\r\n                  {errors.description && touched.description && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.description}\r\n                    </div>\r\n                  )}\r\n                </FormGroup>\r\n\r\n                <div className=\"mt-3 d-flex justify-content-end\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    className={`col-12 col-md-3 btn-shadow btn-multiple-state ${\r\n                      isLoading ? \"show-spinner\" : \"\"\r\n                    }`}\r\n                    onClick={handleSubmit}\r\n                    type=\"submit\"\r\n                    disabled={!isValid} // Disable the button if the form is invalid\r\n                  >\r\n                    <span className=\"spinner d-inline-block\">\r\n                      <span className=\"bounce1\" />\r\n                      <span className=\"bounce2\" />\r\n                      <span className=\"bounce3\" />\r\n                    </span>\r\n                    <span className=\"label\">\r\n                      {initialData ? \"Submit\" : \"Post a job\"}\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Colxx>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobPosting;\r\n","import { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport { Button, Card, Col, Form, FormGroup, Label, Row } from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Field, Formik } from \"formik\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst quillModules = {\r\n  toolbar: [\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    // [\"link\", \"image\"],\r\n    // [\"clean\"],\r\n  ],\r\n};\r\nconst quillFormats = [\r\n  \"header\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n];\r\n// const validate = (values) => {\r\n//   const errors = {};\r\n//   if (!values.title) {\r\n//     errors.title = \"Title is required\";\r\n//   }\r\n//   return errors;\r\n// };\r\n\r\nconst OtherPosting = ({ closeModal, initialData, onEdit }) => {\r\n  const [id] = useState(initialData?.id || 0);\r\n  const [title] = useState(initialData?.title || \"\");\r\n  const [job] = useState(initialData?.job || \"\");\r\n  const [description] = useState(initialData?.description || \"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // const [skills, setSkills] = useState([]);\r\n\r\n  const url = `${baseUrl}/api/posts/other-post/`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  // const handleSubmit = async () => {\r\n  //   setIsLoading(true);\r\n  //   try {\r\n  //     const data = {\r\n  //       id,\r\n  //       title,\r\n  //       job,\r\n  //       description,\r\n  //     };\r\n  //     if (initialData) {\r\n  //       await onEdit(data);\r\n  //     } else {\r\n  //      const response = await axios.post(url, data, {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${token}`,\r\n  //         },\r\n  //       });\r\n  //     ToasterComponent('success', response.data.statuses);\r\n\r\n  //     }\r\n  //     setIsLoading(false);\r\n  //     closeModal();\r\n  //     // console.log(\"job posted successfully\");\r\n  //   } catch (error) {\r\n  //     if (\r\n  //       error.response &&\r\n  //       error.response.data &&\r\n  //       error.response.data.statuses\r\n  //     ) {\r\n  //       ToasterComponent(\"error\", error.response.data.statuses);\r\n  //     } else {\r\n  //       console.error(\"Error posting\", error);\r\n  //     }\r\n  //     setIsLoading(false);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"mx-auto my-4 p-3\" style={{ maxWidth: \"900px\" }}>\r\n        {/* <h1 className=\"font-weight-semibold\">Other Post</h1> */}\r\n        <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"mx-auto \">\r\n          <Formik\r\n            initialValues={{\r\n              // title,\r\n              title: title || \"\",\r\n              // job,\r\n              job: job || \"\",\r\n              // description,\r\n              description: description || \"\",\r\n            }}\r\n            // validate={validate}\r\n            validate={(values) => {\r\n              const errors = {};\r\n              if (!values.title.trim()) {\r\n                errors.title = \"Title is required\";\r\n              }\r\n              if (!values.job.trim()) {\r\n                errors.job = \"Job  is required\";\r\n              }\r\n\r\n              if (!values.description.trim()) {\r\n                errors.description = \"Description is required\";\r\n              }\r\n\r\n              return errors;\r\n            }}\r\n            onSubmit={async (values, { setSubmitting }) => {\r\n              setIsLoading(true);\r\n              try {\r\n                const data = {\r\n                  id,\r\n                  title: values.title,\r\n                  job: values.job,\r\n\r\n                  description: values.description,\r\n                };\r\n                if (initialData) {\r\n                  await onEdit(data);\r\n                } else {\r\n                  const response = await axios.post(url, data, {\r\n                    headers: {\r\n                      Authorization: `Bearer ${token}`,\r\n                    },\r\n                  });\r\n                  ToasterComponent(\"success\", response.data.statuses);\r\n                }\r\n                closeModal();\r\n                setIsLoading(false);\r\n              } catch (error) {\r\n                setIsLoading(false);\r\n                if (\r\n                  error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.statuses\r\n                ) {\r\n                  ToasterComponent(\"error\", error.response.data.statuses);\r\n                } else {\r\n                  console.error(\"Error posting/editing job:\", error);\r\n                }\r\n              }\r\n              setSubmitting(false);\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              touched,\r\n              isValid,\r\n              setFieldTouched,\r\n              handleSubmit,\r\n              setFieldValue,\r\n              values,\r\n            }) => (\r\n              <Form className=\"av-tooltip tooltip-label-right \">\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Title*</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"title\"\r\n                        // onChange={(e) => setTitle(e.target.value)}\r\n                        // validate={validate}\r\n                        onChange={({ target: { value } }) => {\r\n                          const alphabeticValue = value.replace(\r\n                            /[^a-zA-Z ]/g,\r\n                            \"\"\r\n                          );\r\n                          setFieldValue(\"title\", alphabeticValue);\r\n                        }}\r\n                        value={values.title}\r\n                      />\r\n                      {errors.title && touched.title && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.title}\r\n                        </div>\r\n                      )}\r\n                      {/* <ErrorMessage name=\"title\" component=\"div\" className=\"invalid-feedback d-block\" /> */}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Job*</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"job\"\r\n                        value={values.job}\r\n                        // onChange={(e) => setJob(e.target.value)}\r\n                        // onChange={(e) => setFieldValue(\"job\", e.target.value)}\r\n                        onChange={({ target: { value } }) => {\r\n                          const alphabeticValue = value.replace(\r\n                            /[^a-zA-Z ]/g,\r\n                            \"\"\r\n                          );\r\n                          setFieldValue(\"job\", alphabeticValue);\r\n                        }}\r\n                        required\r\n                        //   validate={}\r\n                      />\r\n                      {/* {errors.company && touched.company && (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.company}\r\n                              </div>\r\n                            )} */}\r\n                      {errors.job && touched.job && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.job}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <div className=\"mt-4\">\r\n                  <h6 className=\"font-weight-semibold\">Add a description*</h6>\r\n                  {/* <p className='text-muted'>Include all the information would need to answer your question</p> */}\r\n                  <Row className=\"mb-4\">\r\n                    <Colxx xxs=\"12\">\r\n                      <ReactQuill\r\n                        theme=\"snow\"\r\n                        value={values.description}\r\n                        onChange={(val) => setFieldValue(\"description\", val)}\r\n                        onBlur={() => setFieldTouched(\"description\", true)}\r\n                        modules={quillModules}\r\n                        formats={quillFormats}\r\n                      />\r\n                      {errors.description && touched.description && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.description}\r\n                        </div>\r\n                      )}\r\n                    </Colxx>\r\n                  </Row>\r\n                </div>\r\n                {/* <div className=\"mt-2\">\r\n                <h6 className=\"font-weight-semibold\">Add Skills</h6> */}\r\n                {/* <p className=\"text-muted\">\r\n              Add up to 5 tags to decribe what your question is about\r\n            </p> */}\r\n                {/* <input\r\n                  type=\"text\"\r\n                  className=\"form-control shadow-none border-none  text-one font-weight-medium my-3\"\r\n                  placeholder=\"\" */}\r\n                {/* //   value={inputkey1}\r\n              //     onChange={(e) => setSkills(e.target.value)}\r\n              //   />\r\n              // </div> */}\r\n\r\n                <div className=\"mt-3 d-flex justify-content-end\">\r\n                  {/* <Button\r\n                  color=\"primary \"\r\n                  className=\"default  py-2 \"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Post\r\n                </Button> */}\r\n                  {/* <Button\r\n                    color=\"primary\"\r\n                    // className=\"py-2\"\r\n                    className={`col-12 col-md-3 btn-shadow btn-multiple-state ${\r\n                      isLoading ? \"show-spinner\" : \"\"\r\n                    }`}\r\n                    // disabled={!isValid}\r\n                    onClick={() => {\r\n                      handleSubmit();\r\n                      // closeModal();\r\n                    }}\r\n                  >\r\n                    <span className=\"spinner d-inline-block\">\r\n                      <span className=\"bounce1\" />\r\n                      <span className=\"bounce2\" />\r\n                      <span className=\"bounce3\" />\r\n                    </span>\r\n                    <span className=\"label\">\r\n                      {initialData ? \"Submit\" : \"Post\"}\r\n                    </span>\r\n                  </Button> */}\r\n                  <Button\r\n                    color=\"primary\"\r\n                    className={`col-12 col-md-3 btn-shadow btn-multiple-state ${\r\n                      isLoading ? \"show-spinner\" : \"\"\r\n                    }`}\r\n                    onClick={handleSubmit}\r\n                    type=\"submit\"\r\n                    disabled={!isValid} // Disable the button if the form is invalid\r\n                  >\r\n                    <span className=\"spinner d-inline-block\">\r\n                      <span className=\"bounce1\" />\r\n                      <span className=\"bounce2\" />\r\n                      <span className=\"bounce3\" />\r\n                    </span>\r\n                    <span className=\"label\">\r\n                      {initialData ? \"Submit\" : \"Post\"}\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Colxx>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtherPosting;\r\n","import { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Field, Formik } from \"formik\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport indentityStatusList from \"../CommonCardList/IdentityStatusList\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\nimport {\r\n  ApartmentTypeData,\r\n  BHKData,\r\n  FloorData,\r\n  RoomMateType,\r\n  RoomTypeData,\r\n  parkingOptions,\r\n} from \"./ListingData\";\r\n\r\nconst quillModules = {\r\n  toolbar: [\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    // [\"link\", \"image\"],\r\n    // [\"clean\"],\r\n  ],\r\n};\r\nconst quillFormats = [\r\n  \"header\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n];\r\n\r\n// const ApartmentTypeData = [\r\n//   { label: \"Independent House/Villa\", value: 0 },\r\n//   { label: \"Gated Community Villa\", value: 1 },\r\n//   { label: \"Apartment\", value: 2 },\r\n// ];\r\n\r\n// const BHKData = [\r\n//   { label: \"1 BHK\", value: 0 },\r\n//   { label: \"2 BHK\", value: 1 },\r\n//   { label: \"3 BHK\", value: 2 },\r\n// ];\r\n\r\n// const FloorData = [\r\n//   { label: \"Ground Floor\", value: 0 },\r\n//   { label: \"1\", value: 1 },\r\n//   { label: \"2\", value: 2 },\r\n//   { label: \"3\", value: 3 },\r\n//   { label: \"4\", value: 4 },\r\n//   { label: \"5\", value: 5 },\r\n//   { label: \"6\", value: 6 },\r\n// ];\r\n\r\n// const RoomTypeData = [\r\n//   { label: \"Single Room\", value: 0 },\r\n//   { label: \"Shared Room\", value: 1 },\r\n// ];\r\n\r\nconst StayPosting = ({ closeModal, initialData, onEdit }) => {\r\n  const [id] = useState(initialData?.id || 0);\r\n  const [availableFrom, setAvailableFrom] = useState(\r\n    initialData?.availableFrom || new Date().getTime()\r\n  );\r\n  // const [title] = useState(initialData?.title || \"\");\r\n  // const [apartmentType] = useState(initialData?.apartmentTypeValue || null);\r\n  // const [BHKType] = useState(initialData?.bhkTypeValue || null);\r\n  // const [floor] = useState(initialData?.floorValue || null);\r\n  // const [roomType] = useState(initialData?.roomTypeValue || null);\r\n  // const [roomMate] = useState(initialData?.roomMateValue || null);\r\n  // const [expectedRent] = useState(initialData?.expectedRent || null);\r\n  // const [expectedDeposit] = useState(initialData?.expectedDeposit || null);\r\n  const [monthlyMaintenance, setMonthlyMaintenance] = useState(\r\n    initialData?.monthlyMaintenance || false\r\n  );\r\n  const [maintenanceAmount, setMaintenanceAmount] = useState(\r\n    initialData?.maintenanceAmount || null\r\n  );\r\n  // const [parking] = useState(initialData?.parkingValue || null);\r\n  // const [contact, setContact] = useState(initialData?.contact || \"\");\r\n  // const [email, setEmail] = useState(initialData?.email || \"\");\r\n  // const [mobileNumber, setMobileNumber] = useState(\r\n  //   initialData?.mobileNumber || \"\"\r\n  // );\r\n  // const [ownerName, setOwnerName] = useState(initialData?.ownerName || \"\");\r\n  // const [location, setLocation] = useState(initialData?.location || \"\");\r\n  // const [description, setDescription] = useState(\r\n  //   initialData?.description || \"\"\r\n  // );\r\n  // console.log(\"init\",initialData)\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!monthlyMaintenance) {\r\n      setMaintenanceAmount(null);\r\n    }\r\n  }, [monthlyMaintenance]);\r\n\r\n  const url = `${baseUrl}/api/posts/stay-post/`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  // const handleSubmit = async () => {\r\n  //   setIsLoading(true);\r\n  //   try {\r\n  //     const data = {\r\n  //       id,\r\n  //       title,\r\n  //       apartmentType,\r\n  //       bhkType: BHKType,\r\n  //       floor,\r\n  //       roomType,\r\n  //       roomMate,\r\n  //       expectedRent,\r\n  //       expectedDeposit,\r\n  //       availableFrom,\r\n  //       monthlyMaintenance,\r\n  //       maintenanceAmount: monthlyMaintenance ? maintenanceAmount : null,\r\n  //       parking,\r\n  //       contact,\r\n  //       description,\r\n  //     };\r\n  //     if (initialData) {\r\n  //       await onEdit(data);\r\n  //     } else {\r\n  //       const response = await axios.post(url, data, {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${token}`,\r\n  //         },\r\n  //       });\r\n  //       ToasterComponent(\"success\", response.data.statuses);\r\n  //     }\r\n  //     closeModal();\r\n  //     setIsLoading(false);\r\n  //     // console.log(\"job posted successfully\");\r\n  //   } catch (error) {\r\n  //     setIsLoading(false);\r\n  //     if (\r\n  //       error.response &&\r\n  //       error.response.data &&\r\n  //       error.response.data.statuses\r\n  //     ) {\r\n  //       ToasterComponent(\"error\", error.response.data.statuses);\r\n  //     } else {\r\n  //       console.error(\"Error posting job:\", error);\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  const handleDateChange = (date) => {\r\n    setAvailableFrom(date);\r\n    // const timestampInSeconds = date ? Math.floor(date.getTime() / 1000) : null;\r\n    const timestampInMilliseconds = date ? date.getTime() : null;\r\n\r\n    // console.log(timestampInSeconds);\r\n    setAvailableFrom(timestampInMilliseconds);\r\n  };\r\n\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleFileChange2 = (e) => {\r\n    setSelectedFiles([...e.target.files]); // Converts FileList to an array\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"mx-auto my-4 p-3\" style={{ maxWidth: \"900px\" }}>\r\n        {/* <h1 className=\"font-weight-semibold\">Create a Room Stay post</h1> */}\r\n        {/* <Card className=\"mt-3 p-3\"> */}\r\n        <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"mx-auto \">\r\n          <Formik\r\n            initialValues={{\r\n              title: initialData?.title || \"\",\r\n              BHKType: initialData?.bhkTypeValue || \"\",\r\n              floor: initialData?.floorValue || \"\",\r\n              apartmentType: initialData?.apartmentTypeValue || \"\",\r\n              roomType: initialData?.roomTypeValue || \"\",\r\n              roomMate: initialData?.roomMateValue || \"\",\r\n              expectedRent: initialData?.expectedRent || \"\",\r\n              expectedDeposit: initialData?.expectedDeposit || \"\",\r\n              // contact: initialData?.contact || \"\",\r\n              email: initialData?.email || \"\",\r\n              location: initialData?.location || \"\",\r\n              ownerName: initialData?.ownerName || \"\",\r\n              mobileNumber: initialData?.mobileNumber || \"\",\r\n              monthlyMaintenance: initialData?.monthlyMaintenance || false,\r\n              maintenanceAmount: initialData?.maintenanceAmount || null,\r\n              parking: initialData?.parkingValue || \"\",\r\n              description: initialData?.description || \"\",\r\n              stayCategory: initialData?.stayCategory || \"\",\r\n              parkingCount: initialData?.parkingCount || \"\",\r\n            }}\r\n            validate={(values) => {\r\n              const errors = {};\r\n              if (!values.title.trim()) {\r\n                errors.title = \"Title is required\";\r\n              }\r\n              if (!values.parkingCount.trim()) {\r\n                errors.parkingCount = \"Parking count is required\";\r\n              }\r\n              // if (!values.jobTitle.trim()) {\r\n              //   errors.jobTitle = \"Job title is required\";\r\n              // }\r\n\r\n              // if (!values.jobLocation.trim()) {\r\n              //   errors.jobLocation = \"Job location is required\";\r\n              // }\r\n              // if (!values.company.trim()) {\r\n              //   errors.company = \"Company is required\";\r\n              // }\r\n\r\n              if (!values.description.trim()) {\r\n                errors.description = \"Description is required\";\r\n              }\r\n              if (!values.BHKType.trim()) {\r\n                errors.BHKType = \"BHK type is required\";\r\n              }\r\n              if (!values.roomMate.trim()) {\r\n                errors.roomMate = \"Room mate is required\";\r\n              }\r\n              if (!values.apartmentType.trim()) {\r\n                errors.apartmentType = \"Apartment type is required\";\r\n              }\r\n              if (!values.floor.trim()) {\r\n                errors.floor = \"Floor type is required\";\r\n              }\r\n              if (!values.expectedRent.trim()) {\r\n                errors.expectedRent = \"Expected rent is required\";\r\n              }\r\n              if (!values.parking.trim()) {\r\n                errors.parking = \"parking is required\";\r\n              }\r\n              if (!values.stayCategory.trim()) {\r\n                errors.stayCategory = \"stay category is required\";\r\n              }\r\n              // if (values.skills.length === 0) {\r\n              //   errors.skills = \"At least one skill is required\";\r\n              // }\r\n              return errors;\r\n            }}\r\n            onSubmit={async (values, { setSubmitting }) => {\r\n              setIsLoading(true);\r\n              try {\r\n                const formData = new FormData();\r\n                // formData.append(\r\n                //   \"images\",\r\n                //   // selectedFiles.map((file) => file)\r\n                //   selectedFiles\r\n                // );\r\n                // const data = {\r\n                //   id,\r\n                //   title: values.title,\r\n                //   apartmentType: values.apartmentType,\r\n                //   bhkType: values.BHKType,\r\n                //   floor: values.floor,\r\n                //   roomType: values.roomType,\r\n                //   roomMate: values.roomMate,\r\n                //   expectedRent: values.expectedRent,\r\n                //   expectedDeposit: values.expectedDeposit,\r\n                //   availableFrom,\r\n                //   monthlyMaintenance,\r\n                //   maintenanceAmount: monthlyMaintenance\r\n                //     ? maintenanceAmount\r\n                //     : null,\r\n                //   parking: values.parking,\r\n                //   parkingCount: values.parkingCount,\r\n                //   contact,\r\n                //   description: values.description,\r\n                //   // stayCategory: values.stayCategory,\r\n                // };\r\n                // const data = {\r\n                //   id,\r\n                //   title: values.title,\r\n                //   apartmentType: parseInt(values.apartmentType, 10),\r\n                //   bhkType: parseInt(values.BHKType, 10),\r\n                //   floor: parseInt(values.floor, 10),\r\n                //   roomType: parseInt(values.roomType, 10),\r\n                //   roomMate: parseInt(values.roomMate, 10),\r\n                //   expectedRent: parseInt(values.expectedRent, 10),\r\n                //   expectedDeposit: parseInt(values.expectedDeposit, 10),\r\n                //   availableFrom: parseInt(availableFrom, 10),\r\n                //   monthlyMaintenance: values.monthlyMaintenance,\r\n                //   maintenanceAmount: values.monthlyMaintenance\r\n                //     ? parseInt(maintenanceAmount, 10)\r\n                //     : null,\r\n                //   parking: parseInt(values.parking, 10),\r\n                //   parkingCount: parseInt(values.parkingCount, 10),\r\n                //   ownerName: values.ownerName,\r\n                //   mobileNumber: parseInt(values.mobileNumber, 10),\r\n                //   email: values.email,\r\n                //   location: values.location,\r\n                //   description: values.description,\r\n                // };\r\n                const data = {\r\n                  id,\r\n                  title: values.title,\r\n                  apartmentType: parseInt(values.apartmentType, 10),\r\n                  bhkType: parseInt(values.BHKType, 10),\r\n                  floor: parseInt(values.floor, 10),\r\n                  roomType: parseInt(values.roomType, 10),\r\n                  roomMate: parseInt(values.roomMate, 10),\r\n                  expectedRent: parseInt(values.expectedRent, 10),\r\n                  expectedDeposit: parseInt(values.expectedDeposit, 10),\r\n                  availableFrom: parseInt(availableFrom, 10),\r\n                  monthlyMaintenance: values.monthlyMaintenance,\r\n                  maintenanceAmount: monthlyMaintenance\r\n                    ? parseInt(maintenanceAmount, 10)\r\n                    : null,\r\n                  parking: parseInt(values.parking, 10),\r\n                  parkingCount: parseInt(values.parkingCount, 10),\r\n                  // contact,\r\n                  ownerName: values.ownerName,\r\n                  // mobileNumber: parseInt(values.mobileNumber, 10),\r\n                  mobileNumber: `+91${parseInt(values.mobileNumber, 10)}`,\r\n                  // mobileNumber: +${values.mobileNumber},\r\n                  identityStatus: values.stayCategory,\r\n                  // };\r\n                  email: values.email,\r\n                  location: values.location,\r\n                  description: values.description,\r\n                };\r\n\r\n                // selectedFiles.forEach((file) => {\r\n                //   formData.append(\"images\", file);\r\n                // });\r\n\r\n                // formData.append(\r\n                //   \"stayRoom\",\r\n                //   // new Blob([JSON.stringify(data)], { type: \"application/json\" })\r\n                //   JSON.stringify(data)\r\n                // );\r\n\r\n                // formData.append(\"stayRoom\", JSON.stringify(data));\r\n                formData.append(\r\n                  \"stayRoom\",\r\n                  new Blob([JSON.stringify(data)], {\r\n                    type: \"application/json\",\r\n                  })\r\n                );\r\n\r\n                // formData.append(\r\n                //   \"stayRoom\",\r\n                //   new Blob([JSON.stringify(data)], { type: \"application/json\" })\r\n                // );\r\n\r\n                // Then append each file in selectedFiles as \"images\"\r\n                // selectedFiles.forEach((file) => {\r\n                //   formData.append(\"images\", file);\r\n                // });\r\n                console.log(\"Selected files:\", selectedFiles);\r\n                if (selectedFiles && selectedFiles.length > 0) {\r\n                  selectedFiles.forEach((file) => {\r\n                    console.log(\"File:\", file);\r\n                    formData.append(\"images\", file);\r\n                  });\r\n                }\r\n\r\n                console.log(\"FormData being sent: \", formData);\r\n                if (initialData) {\r\n                  await onEdit(data);\r\n                } else {\r\n                  const response = await axios.post(url, formData, {\r\n                    headers: {\r\n                      Authorization: `Bearer ${token}`,\r\n                    },\r\n                  });\r\n                  ToasterComponent(\"success\", response.data.statuses);\r\n                }\r\n                closeModal();\r\n                setIsLoading(false);\r\n              } catch (error) {\r\n                setIsLoading(false);\r\n                if (\r\n                  error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.statuses\r\n                ) {\r\n                  ToasterComponent(\"error\", error.response.data.statuses);\r\n                } else {\r\n                  console.error(\"Error posting/editing job:\", error);\r\n                }\r\n              }\r\n              setSubmitting(false);\r\n            }}\r\n          >\r\n            {({\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldValue,\r\n              handleSubmit,\r\n              setFieldTouched,\r\n              values,\r\n            }) => (\r\n              <Form className=\"av-tooltip tooltip-label-right \">\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Title*</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"title\"\r\n                        placeholder=\"\"\r\n                        value={values.title}\r\n                        // onChange={(e) => setTitle(e.target.value)}\r\n                        onChange={(e) => setFieldValue(\"title\", e.target.value)}\r\n                        required\r\n                        //   validate={}\r\n                      />\r\n\r\n                      {/* {errors.apartmentType && touched.apartmentType && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.apartmentType}\r\n                          </div>\r\n                        )} */}\r\n                      {errors.title && touched.title && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.title}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>BHK Type*</Label>\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"BHKType\"\r\n                        // onChange={(e) => setBHKType(e.target.value)}\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"BHKType\", e.target.value)\r\n                        }\r\n                        //   validate={}\r\n                        className=\"form-control\"\r\n                        // value={BHKType || \"\"}\r\n                        value={values.BHKType}\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select BHK type\r\n                        </option>\r\n                        {BHKData.map((option, index) => (\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          <option key={index} value={option.value}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Field>\r\n                      {errors.BHKType && touched.BHKType && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.BHKType}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Floor*</Label>\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"floor\"\r\n                        // onChange={(e) => setFloor(e.target.value)}\r\n                        onChange={(e) => setFieldValue(\"floor\", e.target.value)}\r\n                        //   validate={}\r\n                        className=\"form-control\"\r\n                        // value={floor || \"\"}\r\n                        value={values.floor}\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select Floor\r\n                        </option>\r\n                        {FloorData.map((option, index) => (\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          <option key={index} value={option.value}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Field>\r\n                      {errors.floor && touched.floor && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.floor}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Apartment Type*</Label>\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"apartmentType\"\r\n                        // onChange={(e) => setApartmentType(e.target.value)}\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"apartmentType\", e.target.value)\r\n                        }\r\n                        //   validate={}\r\n                        className=\"form-control\"\r\n                        // value={apartmentType || \"\"}\r\n                        value={values.apartmentType}\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select Apartment type\r\n                        </option>\r\n                        {ApartmentTypeData.map((option, index) => (\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          <option key={index} value={option.value}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Field>\r\n                      {errors.apartmentType && touched.apartmentType && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.apartmentType}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Room Type</Label>\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"roomType\"\r\n                        // onChange={(e) => setRoomType(e.target.value)}\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"roomType\", e.target.value)\r\n                        }\r\n                        //   validate={}\r\n                        className=\"form-control\"\r\n                        // value={roomType || \"\"}\r\n                        value={values.roomType}\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select Room Type\r\n                        </option>\r\n                        {RoomTypeData.map((option, index) => (\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          <option key={index} value={option.value}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Field>\r\n                      {errors.roomType && touched.roomType && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.roomType}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Room Mate*</Label>\r\n\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"roomMate\"\r\n                        // onChange={(e) => setRoomMate(e.target.value)}\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"roomMate\", e.target.value)\r\n                        }\r\n                        className=\"form-control\"\r\n                        // value={roomMate || \"\"}\r\n                        value={values.roomMate}\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select Room Mate\r\n                        </option>\r\n                        {RoomMateType.map((option, index) => (\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          <option key={index} value={option.value}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Field>\r\n\r\n                      {errors.roomMate && touched.roomMate && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.roomMate}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Expected Rent*</Label>\r\n\r\n                      <InputGroup className=\"mb-3\">\r\n                        <InputGroupAddon addonType=\"prepend\">₹</InputGroupAddon>\r\n                        <Input\r\n                          type=\"number\"\r\n                          placeholder=\"Enter Amount\"\r\n                          //   value={}\r\n                          // onChange={(e) => setExpectedRent(e.target.value)}\r\n                          onChange={(e) =>\r\n                            setFieldValue(\"expectedRent\", e.target.value)\r\n                          }\r\n                          //   className=\"col-12 col-md-3\"\r\n                          // value={expectedRent}\r\n                          value={values.expectedRent}\r\n                        />\r\n                      </InputGroup>\r\n                      {errors.expectedRent && touched.expectedRent && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.expectedRent}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Expected Deposit</Label>\r\n                      <InputGroup className=\"mb-3\">\r\n                        <InputGroupAddon addonType=\"prepend\">₹</InputGroupAddon>\r\n                        <Input\r\n                          type=\"number\"\r\n                          placeholder=\"Enter Amount\"\r\n                          //   value={}\r\n                          // onChange={(e) => setExpectedDeposit(e.target.value)}\r\n                          onChange={(e) =>\r\n                            setFieldValue(\"expectedDeposit\", e.target.value)\r\n                          }\r\n                          //   className=\"col-12 col-md-3\"\r\n                          // value={expectedDeposit}\r\n                          value={values.expectedDeposit}\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Monthly Maintenance</Label>\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"monthlyMaintenance\"\r\n                        // onChange={(e) => setMonthlyMaintenance(e.target.value)}\r\n                        onChange={(e) =>\r\n                          setMonthlyMaintenance(e.target.value === \"extra\")\r\n                        }\r\n                        // onChange={(e) =>\r\n                        //     setFieldValue(\"monthlyMaintenence\", e.target.value)\r\n                        //   }\r\n                        //   validate={}\r\n                        className=\"form-control\"\r\n                        value={monthlyMaintenance ? \"extra\" : \"include\"}\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select\r\n                        </option>\r\n                        <option key=\"include\" value=\"include\">\r\n                          Include\r\n                        </option>\r\n                        <option key=\"Extra\" value=\"extra\">\r\n                          Extra\r\n                        </option>\r\n                      </Field>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Maintenance Amount</Label>\r\n                      <InputGroup className=\"mb-3\">\r\n                        <InputGroupAddon addonType=\"prepend\">₹</InputGroupAddon>\r\n                        <Input\r\n                          type=\"number\"\r\n                          placeholder=\"Enter Amount\"\r\n                          disabled={!monthlyMaintenance}\r\n                          //   value={}\r\n                          value={maintenanceAmount || \"\"}\r\n                          onChange={(e) => setMaintenanceAmount(e.target.value)}\r\n                          //   className=\"col-12 col-md-3\"\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Owner name</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"ownerName\"\r\n                        placeholder=\"Enter owner name\"\r\n                        // onChange={(e) => setOwnerName(e.target.value)}\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"ownerName\", e.target.value)\r\n                        }\r\n                        value={values.owenerName}\r\n                        //   validate={}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Mobile number</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"mobile\"\r\n                        placeholder=\"Enter mobile number\"\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"mobileNumber\", e.target.value)\r\n                        }\r\n                        value={values.mobileNumber}\r\n                        //   validate={}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Email</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"company\"\r\n                        placeholder=\"Enter your email \"\r\n                        onChange={(e) => setFieldValue(\"email\", e.target.value)}\r\n                        value={values.email}\r\n                        //   validate={}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Available From</Label>\r\n                      <DatePicker\r\n                        selected={availableFrom}\r\n                        onChange={handleDateChange}\r\n                        // placeholderText={messages['forms.date']}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Parking</Label>\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"parking\"\r\n                        // onChange={(e) => setParking(e.target.value)}\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"parking\", e.target.value)\r\n                        }\r\n                        //   validate={}\r\n                        className=\"form-control\"\r\n                        // value={parking || \"\"}\r\n                        value={values.parking}\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select\r\n                        </option>\r\n\r\n                        {parkingOptions.map((option, index) => (\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          <option key={index} value={option.value}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Field>\r\n                      {errors.parking && touched.parking && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.parking}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Label>Stay Category*</Label>\r\n                    <Field\r\n                      as=\"select\"\r\n                      name=\"stayCategory\"\r\n                      // validate={validateIdentityStatus}\r\n                      onChange={(e) =>\r\n                        setFieldValue(\"stayCategory\", e.target.value)\r\n                      }\r\n                      className=\"form-control\"\r\n                      value={values.stayCategory}\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select Stay Category\r\n                      </option>\r\n                      {indentityStatusList.map((option) => (\r\n                        <option key={option.name} value={option.name}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))}\r\n                    </Field>\r\n                    {errors.stayCategory && touched.stayCategory && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.stayCategory}\r\n                      </div>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Parking Count*</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"parkingCount\"\r\n                        placeholder=\"\"\r\n                        value={values.parkingCount}\r\n                        // onChange={(e) => setTitle(e.target.value)}\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"parkingCount\", e.target.value)\r\n                        }\r\n                        required\r\n                        //   validate={}\r\n                      />\r\n\r\n                      {errors.parkingCount && touched.parkingCount && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.parkingCount}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Location</Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"company\"\r\n                        placeholder=\"Enter your location\"\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"location\", e.target.value)\r\n                        }\r\n                        value={values.location}\r\n                        //   validate={}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Label>Image</Label>\r\n                    {/* Image Error Message */}\r\n                    {/* {imageError1 && (\r\n    <div className=\"invalid-feedback d-block\">\r\n      {imageErrorMessage1}\r\n    </div>\r\n  )} */}\r\n\r\n                    <InputGroup>\r\n                      <div>\r\n                        <Button\r\n                          className=\"default\"\r\n                          color=\"primary\"\r\n                          onClick={() =>\r\n                            document\r\n                              .getElementById(\"file-upload-resume\")\r\n                              .click()\r\n                          }\r\n                        >\r\n                          Upload Photos <i className=\"iconsminds-upload ml-2\" />\r\n                        </Button>\r\n                        <Input\r\n                          id=\"file-upload-resume\"\r\n                          type=\"file\"\r\n                          multiple\r\n                          className=\"d-none\"\r\n                          onChange={handleFileChange2}\r\n                        />\r\n                      </div>\r\n                    </InputGroup>\r\n                    <div className=\"my-2\">\r\n                      {selectedFiles.length > 0 ? (\r\n                        <ul>\r\n                          {selectedFiles.map((file) => (\r\n                            <li key={file}>Selected file: {file.name}</li>\r\n                          ))}\r\n                        </ul>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Description*</Label>\r\n                      <ReactQuill\r\n                        theme=\"snow\"\r\n                        value={values.description}\r\n                        onChange={(val) => setFieldValue(\"description\", val)}\r\n                        onBlur={() => setFieldTouched(\"description\", true)}\r\n                        modules={quillModules}\r\n                        formats={quillFormats}\r\n                      />\r\n                      {errors.description && touched.description && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.description}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <div className=\"mt-3 d-flex justify-content-end\">\r\n                  <Button\r\n                    color=\"primary \"\r\n                    className={`col-12 col-md-3 btn-shadow btn-multiple-state ${\r\n                      isLoading ? \"show-spinner\" : \"\"\r\n                    }`}\r\n                    // onClick={() => {\r\n                    //   handleSubmit();\r\n                    //   // closeModal();\r\n                    // }}\r\n                    onClick={handleSubmit}\r\n                    type=\"submit\"\r\n                    disabled={!isValid}\r\n                  >\r\n                    <span className=\"spinner d-inline-block\">\r\n                      <span className=\"bounce1\" />\r\n                      <span className=\"bounce2\" />\r\n                      <span className=\"bounce3\" />\r\n                    </span>\r\n                    <span className=\"label\">\r\n                      {initialData ? \"Submit\" : \"List a Room\"}\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Colxx>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StayPosting;\r\n","import React from 'react';\r\nimport { Card } from 'reactstrap'; // import CustomInput for using checkbox\r\n// import { NavLink } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport { ContextMenuTrigger } from 'react-contextmenu';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\n\r\nconst DataListViewpersonal = ({\r\n  product,\r\n  onCheckItem,\r\n  // isSelect, collect, onCheckItem\r\n}) => {\r\n  return (\r\n    <Colxx xs=\"4\" className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={product.id}>\r\n        <Card\r\n          onClick={(event) => onCheckItem(event, product.id)}\r\n          style={{ boxShadow: 'none' }}\r\n          className={classnames('d-flex flex-row', {\r\n            // active: isSelect,\r\n          })}\r\n        >\r\n          <p\r\n            style={{ paddingLeft: '5%' }}\r\n            className=\"list-item-heading mb-1 truncate warp\"\r\n          >\r\n            {`${product.title}    :   ${product.value}`}\r\n          </p>\r\n\r\n          {/* <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\"> */}\r\n          {/* <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\"> */}\r\n          {/* <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\r\n              </NavLink> */}\r\n          {/* <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                {product.category}\r\n                </p>\r\n                <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                {product.date}\r\n            </p> */}\r\n          {/* <p className=\"w-15 w-sm-100 \">\r\n              {product.value}\r\n              <Badge color={product.statusColor} pill>\r\n              </Badge>\r\n              </p> \r\n             */}\r\n          {/* </div> */}\r\n          {/* <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\r\n              <CustomInput\r\n              className=\"item-check mb-0\"\r\n              type=\"checkbox\"\r\n              id={`check_${product.id}`}\r\n              checked={isSelect}\r\n              onChange={() => {}}\r\n              label=\"\"\r\n              />\r\n            </div> */}\r\n          {/* </div> */}\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\r\nexport default React.memo(DataListViewpersonal);\r\n","import axios from 'axios';\r\nimport { baseUrl } from 'constants/defaultValues';\r\n\r\nexport const documentsService = {};\r\nexport const myDetailsService = {\r\n  async getEducationalInformation() {\r\n    // https://api.sampleapis.com/baseball/hitsSingleSeason\r\n    const url = `${baseUrl}api/student/edu/info`;\r\n    try {\r\n      return await axios\r\n        .get(url)\r\n        .then((res) => {\r\n          console.log('Response getEducationalInformation', res);\r\n          return res;\r\n        })\r\n        .catch((error) => {\r\n          return error;\r\n        });\r\n    } catch (e) {\r\n      return e;\r\n    }\r\n  },\r\n  async postEducationalInformation(body) {\r\n    const url = `${baseUrl}api/student/info`;\r\n    try {\r\n      return await axios\r\n        .post(url, body)\r\n        .then((res) => {\r\n          console.log('Response', res);\r\n          return res;\r\n        })\r\n        .catch((error) => {\r\n          console.log('err on post ', error);\r\n          return error;\r\n        });\r\n    } catch (e) {\r\n      return e;\r\n    }\r\n  },\r\n  async getPersonalInformation() {\r\n    const url = `${baseUrl}api/student/personal/info`;\r\n    try {\r\n      return await axios\r\n        .get(url)\r\n        .then((res) => {\r\n          console.log('Response', res);\r\n          return res;\r\n        })\r\n        .catch((error) => {\r\n          return error;\r\n        });\r\n    } catch (e) {\r\n      return e;\r\n    }\r\n  },\r\n  async postPersonalInformation(body) {\r\n    const url = `${baseUrl}api/student/personal/info`;\r\n    try {\r\n      return await axios\r\n        .post(url, body)\r\n        .then((res) => {\r\n          console.log('Response', res);\r\n          return res;\r\n        })\r\n        .catch((error) => {\r\n          return error;\r\n        });\r\n    } catch (e) {\r\n      return e;\r\n    }\r\n  },\r\n  async getProfessionalInformation() {\r\n    const url = `${baseUrl}api/student/prof/info`;\r\n    try {\r\n      return await axios\r\n        .get(url)\r\n        .then((res) => {\r\n          console.log('Response', res);\r\n          return res;\r\n        })\r\n        .catch((error) => {\r\n          return error;\r\n        });\r\n    } catch (e) {\r\n      return e;\r\n    }\r\n  },\r\n  async postProfessionalInformation(body) {\r\n    const url = `${baseUrl}api/student/prof/info`;\r\n    try {\r\n      return await axios\r\n        .post(url, body)\r\n        .then((res) => {\r\n          console.log('Response', res);\r\n          return res;\r\n        })\r\n        .catch((error) => {\r\n          return error;\r\n        });\r\n    } catch (e) {\r\n      return e;\r\n    }\r\n  },\r\n};\r\n","import { myDetailsService } from '../../../../../services/services';\r\n// import { jobService } from '../../../../../services/jobservice';\r\n\r\n// myDetailsService.postEducationalInformation({\r\n//   bachelorDegName: 'BS 2',\r\n//   bachelorDomain: 2,\r\n//   bachelorPercent: 210,\r\n//   backlogs: 23,\r\n//   tenthPercent: 215,\r\n//   twelfthGroup: 'group 1',\r\n//   twelfthPercent: 14,\r\n//   userId: 1,\r\n// });\r\n\r\n// jobService.getJob().then((res) => {\r\n//   console.log(res);\r\n// });\r\n\r\nmyDetailsService.getEducationalInformation();\r\n\r\nconst educationalInformationData = {\r\n  id: 0,\r\n  payload: [\r\n    {\r\n      id: 0,\r\n      title: 'Tenth Percentage',\r\n      value: `92.3`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 1,\r\n      title: 'Twelveth Percentage',\r\n      value: `83`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Twelveth Group',\r\n      value: 'Group1',\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Bachelor Degree',\r\n      value: 'CS',\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Bachelor Domain Course',\r\n      value: 'Computer',\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Bachelors Percentage',\r\n      value: `3.8`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Backlogs',\r\n      value: 0,\r\n      statusColor: 'red',\r\n    },\r\n  ],\r\n};\r\n\r\nexport default educationalInformationData;\r\n\r\n// Section 2: Educational Information\r\n// 1. tenth_percent float\r\n// 2. twelfth_percent float\r\n// 3. twelfth_group varchar\r\n// 4. bachelor_deg_name varchar\r\n// 5. bachelor_domain course_category\r\n// 6. bachelor_percent float\r\n// 7. backlogs int\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from 'reactstrap';\r\nimport educationalInformationData from '../data/educationalInformation-data';\r\n// import classNames from 'classnames';\r\n\r\nconst bachelorDgDomainCourseOptions = [\r\n  'Select',\r\n  'pf',\r\n  'oop',\r\n  'databse',\r\n  'psycology',\r\n  'calculus',\r\n  'discrete math',\r\n  'communication skill',\r\n  'technical writing',\r\n  'functional english',\r\n  'ISL',\r\n  'PS',\r\n  'Human resource management',\r\n];\r\n\r\nconst { payload } = educationalInformationData;\r\nfunction InputEducationalInformation() {\r\n  const [data, setData] = useState({\r\n    TwelfthPercentage: '',\r\n    TenthPercentage: '',\r\n    TwelfthGroup: '',\r\n    BachelorDegreeName: '',\r\n    BachelorDegreeDomainCourse: '',\r\n    BachelorPercentage: '',\r\n    Backlogs: '',\r\n  });\r\n\r\n  const [open, setOpen] = useState(false);\r\n  function toggleModalFunction() {\r\n    setOpen((oldValue) => !oldValue);\r\n  }\r\n\r\n  function handleChange(event) {\r\n    switch (event.target.name) {\r\n      case 'twelfth_percent':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, TwelfthPercentage: event.target.value };\r\n        });\r\n\r\n        break;\r\n      case 'tenth_percent':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, TenthPercentage: event.target.value };\r\n        });\r\n        break;\r\n      case 'twelfth_group':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, TwelfthGroup: event.target.value };\r\n        });\r\n        break;\r\n      case 'bachelor_degName':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, BachelorDegreeName: event.target.value };\r\n        });\r\n        break;\r\n      case 'bachelor_degDomain_course':\r\n        setData((prevValue) => {\r\n          return {\r\n            ...prevValue,\r\n            BachelorDegreeDomainCourse: event.target.value,\r\n          };\r\n        });\r\n        break;\r\n      case 'bachelor_degPercentage':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, BachelorPercentage: event.target.value };\r\n        });\r\n        break;\r\n      case 'Backlogs':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, Backlogs: event.target.value };\r\n        });\r\n        break;\r\n\r\n      default:\r\n        console.log('default ran');\r\n        break;\r\n    }\r\n    setTimeout(() => {\r\n      console.log(data);\r\n    }, 2000);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"d-flex flex-row-reverse justify-content-between\">\r\n        <Button\r\n          outline\r\n          style={{ margin: '0 3% 3% 0' }}\r\n          onClick={() => {\r\n            toggleModalFunction();\r\n          }}\r\n        >\r\n          {payload.title === null ? 'Enter' : 'Edit'}\r\n        </Button>\r\n      </span>\r\n\r\n      <div>\r\n        <Modal\r\n          style={{ maxWidth: '70%', maxHeight: '80%' }}\r\n          isOpen={open}\r\n          toggle={() => {\r\n            toggleModalFunction();\r\n          }}\r\n          centered={!false}\r\n        >\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <ModalHeader\r\n              style={{\r\n                display: 'inline',\r\n                alignSelf: 'flex-end',\r\n              }}\r\n            >\r\n              Educational Information\r\n            </ModalHeader>\r\n\r\n            <Button\r\n              onClick={() => {\r\n                toggleModalFunction();\r\n              }}\r\n              outline\r\n              style={{ height: '2rem' }}\r\n              color=\"danger\"\r\n            >\r\n              <i className=\"iconsminds-close\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <ModalBody>\r\n            <Form>\r\n              {/* <div\r\n        style={{\r\n          display: 'flex',\r\n          flexBasis: '40%',\r\n          flexWrap: 'wrap',\r\n          rowGap: '10px',\r\n          justifyContent: 'space-evenly',\r\n          alignContent: 'space-between',\r\n        }}\r\n        > */}\r\n              {/* <div\r\n            style={{ width: '50%' }}\r\n          > */}\r\n              <FormGroup inline>\r\n                <Row>\r\n                  <Col xs=\"6\">\r\n                    <Label>Twelfth Percentage</Label>\r\n                    <Input\r\n                      // style={{ width: '50%' }}\r\n                      type=\"text\"\r\n                      name=\"twelfth_percent\"\r\n                      id=\"twelfth_percent\"\r\n                      placeholder=\"eg 80\"\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  {/* </FormGroup>\r\n                <FormGroup> */}\r\n                  <Col xs=\"6\">\r\n                    <Label>Tenth Percentage</Label>\r\n                    <Input\r\n                      // style={{ width: '50%' }}\r\n                      type=\"text\"\r\n                      name=\"tenth_percent\"\r\n                      id=\"tenthth_percent\"\r\n                      placeholder=\"eg 80\"\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label>Twelfth Group</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"twelfth_group\"\r\n                  id=\"twelfth_group\"\r\n                  placeholder=\"eg A\"\r\n                  onChange={(e) => {\r\n                    handleChange(e);\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col xs=\"6\">\r\n                    <Label>Bachelor Degree Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"bachelor_degName\"\r\n                      id=\"bachelor_degName\"\r\n                      placeholder=\"eg Computer Science\"\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  {/* </FormGroup> */}\r\n                  {/* </div> */}\r\n                  {/* <div style={{ width: '50%' }}> */}\r\n                  {/* <FormGroup> */}\r\n                  <Col xs=\"6\">\r\n                    <Label>Bachelor Degree Domain Course</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"bachelor_degDomain_course\"\r\n                      id=\"bachelor_degDomain_course\"\r\n                      placeholder=\"eg Computer Science\"\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                    >\r\n                      {bachelorDgDomainCourseOptions.map((course, id) => {\r\n                        // random key generation\r\n                        let i = id;\r\n                        i += 17;\r\n                        return <option key={i}>{course}</option>;\r\n                      })}\r\n                    </Input>\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col xs=\"6\">\r\n                    <Label>Bachelor Percentage</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"bachelor_degPercentage\"\r\n                      id=\"bachelor_degPercentage\"\r\n                      placeholder=\"eg 80\"\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  {/* </FormGroup>\r\n              <FormGroup> */}\r\n                  <Col xs=\"6\">\r\n                    <Label>Backlogs</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"Backlogs\"\r\n                      id=\"Backlogs\"\r\n                      placeholder=\"0\"\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              {/* </div> */}\r\n              {/* </div> */}\r\n            </Form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              //   type=\"submit\"\r\n              onClick={() => {\r\n                console.log('pushed : ', data);\r\n                setOpen(false);\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputEducationalInformation;\r\n","import React, {\r\n  // useEffect,\r\n  useState,\r\n} from 'react';\r\n// import { myDetailsService } from 'services/services';\r\nimport DataListViewPersonal from 'containers/pages/DataListView-personal';\r\nimport { Collapse, Card, Button } from 'reactstrap';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\nimport { ContextMenuTrigger } from 'react-contextmenu';\r\nimport educationalInformationData from './data/educationalInformation-data';\r\nimport InputEducationalInformation from './input/educationalInformation-input';\r\n\r\nconst title = 'Educational Information';\r\n\r\nconst EducationalInformation = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n  function onSetToggle() {\r\n    setToggle((prevValue) => {\r\n      return !prevValue;\r\n    });\r\n  }\r\n  const { payload } = educationalInformationData;\r\n  return (\r\n    <Colxx xxs=\"12\" className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={title}>\r\n        <Card>\r\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row  min-width-zero align-items-lg-center\">\r\n              <span className=\"d-flex \">\r\n                <h1 style={{ marginRight: '1rem' }}>{title}</h1>\r\n                {toggle && <InputEducationalInformation />}\r\n              </span>\r\n            </div>\r\n            <div className=\"align-self-center\">\r\n              <Button\r\n                color=\"link\"\r\n                size=\"lg\"\r\n                onClick={() => {\r\n                  onSetToggle();\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    toggle === !false\r\n                      ? 'iconsminds-arrow-up'\r\n                      : 'iconsminds-arrow-down'\r\n                  }\r\n                />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <Collapse isOpen={toggle}>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', flex: '0 0 73%' }}>\r\n              {payload.map((product) => {\r\n                return (\r\n                  <DataListViewPersonal\r\n                    key={product.id}\r\n                    product={product}\r\n                    isSelect={() => {\r\n                      console.log('isSelect ran');\r\n                    }}\r\n                    onCheckItem={() => {\r\n                      console.log('onCheckitem ran');\r\n                    }}\r\n                    collect={() => {\r\n                      console.log('collect ran');\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </Collapse>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\nexport default EducationalInformation;\r\n","const personalInformationData = {\r\n  id: 0,\r\n  payload: [\r\n    {\r\n      id: 0,\r\n      title: 'First Name',\r\n      value: `Test`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 1,\r\n      title: 'Last Name',\r\n      value: `User`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Age',\r\n      value: `20`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Date of Birth',\r\n      value: `20-03-1999`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Adress Lane 1',\r\n      value: `346 Walton Street Newyork city`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Adress Lane 2',\r\n      value: `Newyork `,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 7,\r\n      title: 'ZipCode',\r\n      value: 56770,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 8,\r\n      title: 'State',\r\n      value: `California`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 9,\r\n      title: 'Country ',\r\n      value: `USA`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 10,\r\n      title: 'ADHAAR',\r\n      value: `0000548618961885`,\r\n      statusColor: 'red',\r\n    },\r\n  ],\r\n};\r\n\r\nexport default personalInformationData;\r\n\r\n// Section 1: Personal Information\r\n// 1. first_name varchar\r\n// 2. last_name varchar\r\n// 3. gender varchar\r\n// 4. age int\r\n// 5. dob date\r\n// 6. address_l1 varchar\r\n// 7. address_l2 varchar\r\n// 8. zip_code bigint\r\n// 9. state varchar\r\n// 10. country varchar\r\n// 11. adhaar_no bigint\r\n","import React, { useState } from 'react'; //\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from 'reactstrap';\r\nimport personalInformationData from '../data/personalInformation-data';\r\n\r\nconst bachelorDgDomainCourseOptions = ['Select', 'Male', 'Female', 'Other'];\r\nconst { payload } = personalInformationData;\r\n\r\nfunction InputPersonalInformation() {\r\n  const [data, setData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    Gender: '',\r\n    Age: 0,\r\n    dateOfBirth: '',\r\n    addressLane1: '',\r\n    addressLane2: '',\r\n    zipCode: 0,\r\n    state: '',\r\n    country: '',\r\n    adhaarNumber: '',\r\n  });\r\n\r\n  const [open, setOpen] = useState(false);\r\n  function toggleModalFunction() {\r\n    setOpen((oldValue) => !oldValue);\r\n  }\r\n  function handleChange(event) {\r\n    switch (event.target.name) {\r\n      case 'first_name':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, firstName: event.target.value };\r\n        });\r\n\r\n        break;\r\n      case 'last_name':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, lastName: event.target.value };\r\n        });\r\n        break;\r\n      case 'age':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, Age: event.target.value };\r\n        });\r\n        break;\r\n      case 'date_of_birth':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, dateOfBirth: event.target.value };\r\n        });\r\n        break;\r\n      case 'address_L1':\r\n        setData((prevValue) => {\r\n          return {\r\n            ...prevValue,\r\n            addressLane1: event.target.value,\r\n          };\r\n        });\r\n        break;\r\n      case 'address_L2':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, addressLane2: event.target.value };\r\n        });\r\n        break;\r\n      case 'gender':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, Gender: event.target.value };\r\n        });\r\n        break;\r\n      case 'state':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, state: event.target.value };\r\n        });\r\n        break;\r\n      case 'country':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, country: event.target.value };\r\n        });\r\n        break;\r\n      case 'zip_code':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, zipCode: event.target.value };\r\n        });\r\n        break;\r\n      case 'adhaar_number':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, adhaarNumber: event.target.value };\r\n        });\r\n        break;\r\n\r\n      default:\r\n        console.log('default ran');\r\n        break;\r\n    }\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"d-flex flex-row-reverse justify-content-between\">\r\n        <Button\r\n          outline\r\n          style={{ margin: '0 3% 3% 0' }}\r\n          onClick={() => {\r\n            toggleModalFunction();\r\n          }}\r\n        >\r\n          {payload.title === null ? 'Enter' : 'Edit'}\r\n        </Button>\r\n      </span>\r\n      <Modal\r\n        scrollable={!false}\r\n        style={{ maxWidth: '70%', maxHeight: '80%' }}\r\n        isOpen={open}\r\n        toggle={() => {\r\n          toggleModalFunction();\r\n        }}\r\n        centered={!false}\r\n      >\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <ModalHeader\r\n            style={{\r\n              display: 'inline',\r\n              alignSelf: 'flex-end',\r\n            }}\r\n          >\r\n            Personal Information\r\n          </ModalHeader>\r\n\r\n          <Button\r\n            onClick={() => {\r\n              toggleModalFunction();\r\n            }}\r\n            outline\r\n            style={{ height: '2rem' }}\r\n            color=\"danger\"\r\n          >\r\n            <i className=\"iconsminds-close\" />\r\n          </Button>\r\n        </div>\r\n\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Row>\r\n                <Col xs=\"6\">\r\n                  <Label>First Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"first_name\"\r\n                    id=\"first_name\"\r\n                    placeholder=\"Alex\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                {/* </FormGroup>\r\n            <FormGroup> */}\r\n                <Col xs=\"6\">\r\n                  <Label>Last Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"last_name\"\r\n                    id=\"last_name\"\r\n                    placeholder=\"Murfy\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Row>\r\n                <Col xs=\"6\">\r\n                  <Label>Age</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"age\"\r\n                    id=\"age\"\r\n                    placeholder=\"eg. 18\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                {/* </FormGroup>\r\n            <FormGroup> */}\r\n                <Col xs=\"6\">\r\n                  <Label>Gender</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"gender\"\r\n                    id=\"gender\"\r\n                    placeholder=\"\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  >\r\n                    {bachelorDgDomainCourseOptions.map((course, id) => {\r\n                      // random key generation\r\n                      let i = id;\r\n                      i += 17;\r\n                      return <option key={i}>{course}</option>;\r\n                    })}\r\n                  </Input>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Date Of Birth</Label>\r\n              <Input\r\n                type=\"date\"\r\n                name=\"date_of_birth\"\r\n                id=\"date_of_birth\"\r\n                placeholder=\"\"\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Address Lane 1</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"address_L1\"\r\n                id=\"address_L1\"\r\n                placeholder=\"...\"\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Address Lane 2</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"address_L2\"\r\n                id=\"address_L2\"\r\n                placeholder=\"...\"\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                }}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Row>\r\n                <Col xs=\"6\">\r\n                  <Label>State</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"state\"\r\n                    id=\"state\"\r\n                    placeholder=\"California\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                {/* </FormGroup>\r\n            <FormGroup> */}\r\n                <Col xs=\"6\">\r\n                  <Label>Country</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"country\"\r\n                    id=\"country\"\r\n                    placeholder=\"USA\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Row>\r\n                <Col xs=\"6\">\r\n                  <Label>ZIP Code</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"zip_code\"\r\n                    id=\"zip_code\"\r\n                    placeholder=\"54770\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                {/* </FormGroup>\r\n            <FormGroup> */}\r\n                <Col xs=\"6\">\r\n                  <Label>ADHAAR Number</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"adhaar_number\"\r\n                    id=\"adhaar_number\"\r\n                    placeholder=\"0\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            //   type=\"submit\"\r\n            onClick={() => {\r\n              console.log('pushed : ', data);\r\n              setOpen(false);\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputPersonalInformation;\r\n","import React, { useState } from 'react';\r\nimport DataListViewPersonal from 'containers/pages/DataListView-personal';\r\nimport { Collapse, Card, Button } from 'reactstrap';\r\nimport { ContextMenuTrigger } from 'react-contextmenu';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\nimport personalInformationData from './data/personalInformation-data';\r\nimport InputPersonalInformation from './input/personalInformation-input';\r\n\r\nconst title = 'Personal Information';\r\n\r\nconst PersonalInformation = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n  function onSetToggle() {\r\n    setToggle((prevValue) => {\r\n      return !prevValue;\r\n    });\r\n  }\r\n  const { payload } = personalInformationData;\r\n\r\n  return (\r\n    <Colxx xxs=\"12\" className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={title}>\r\n        <Card>\r\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n              <span className=\"d-flex \">\r\n                <h1 style={{ marginRight: '1rem' }}>{title}</h1>\r\n\r\n                {toggle && <InputPersonalInformation />}\r\n              </span>\r\n            </div>\r\n            <div className=\"align-self-center\">\r\n              <Button\r\n                color=\"link\"\r\n                size=\"lg\"\r\n                onClick={() => {\r\n                  onSetToggle();\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    toggle === !false\r\n                      ? 'iconsminds-arrow-up'\r\n                      : 'iconsminds-arrow-down'\r\n                  }\r\n                />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <Collapse isOpen={toggle}>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n              {payload.map((product) => {\r\n                return (\r\n                  <DataListViewPersonal\r\n                    key={product.id}\r\n                    product={product}\r\n                    isSelect={() => {\r\n                      console.log('isSelect ran');\r\n                    }}\r\n                    onCheckItem={() => {\r\n                      console.log('onCheckitem ran');\r\n                    }}\r\n                    collect={() => {\r\n                      console.log('collect ran');\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </Collapse>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\nexport default PersonalInformation;\r\n","const professionalInformationData = {\r\n  id: 0,\r\n  payload: [\r\n    {\r\n      id: 0,\r\n      title: 'Organisation Name',\r\n      value: `XYZ`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 1,\r\n      title: 'Role',\r\n      value: `Student`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Start Date',\r\n      value: `20-09-2020`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'End Date',\r\n      value: `20-03-2026`,\r\n      statusColor: 'red',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Termination Reason',\r\n      value: `RSN`,\r\n      statusColor: 'red',\r\n    },\r\n  ],\r\n};\r\n\r\nexport default professionalInformationData;\r\n\r\n// Section 3: Professional Information\r\n// 1. organisation varchar\r\n// 2. role varchar\r\n// 3. start_date date\r\n// 4. end_date date\r\n// 5. terminatn_rsn varchar\r\n","import React, { useState } from 'react'; //\r\n\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from 'reactstrap';\r\nimport professionalInformationData from '../data/professionalInformation-data';\r\n\r\nfunction InputProfessionalInformation() {\r\n  const [data, setData] = useState({\r\n    Organization: '',\r\n    Role: '',\r\n    StartDate: '',\r\n    EndDate: '',\r\n    TerminationReason: '',\r\n  });\r\n  const { payload } = professionalInformationData;\r\n  const [open, setOpen] = useState(false);\r\n  function toggleModalFunction() {\r\n    setOpen((oldValue) => !oldValue);\r\n  }\r\n\r\n  function handleChange(event) {\r\n    switch (event.target.name) {\r\n      case 'organization':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, Organization: event.target.value };\r\n        });\r\n\r\n        break;\r\n      case 'role':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, Role: event.target.value };\r\n        });\r\n        break;\r\n      case 'start_date':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, StartDate: event.target.value };\r\n        });\r\n        break;\r\n      case 'end_date':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, EndDate: event.target.value };\r\n        });\r\n        break;\r\n      case 'termination_rsn':\r\n        setData((prevValue) => {\r\n          return {\r\n            ...prevValue,\r\n            TerminationReason: event.target.value,\r\n          };\r\n        });\r\n        break;\r\n      default:\r\n        console.log('default ran');\r\n        break;\r\n    }\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"d-flex flex-row-reverse justify-content-between\">\r\n        <Button\r\n          style={{ margin: '0 3% 3% 0' }}\r\n          outline\r\n          onClick={() => {\r\n            toggleModalFunction();\r\n          }}\r\n        >\r\n          {payload.title === null ? 'Enter' : 'Edit'}\r\n        </Button>\r\n      </span>\r\n      <Modal\r\n        scrollable={!false}\r\n        style={{ maxWidth: '70%', maxHeight: '80%' }}\r\n        isOpen={open}\r\n        toggle={() => {\r\n          toggleModalFunction();\r\n        }}\r\n        centered={!false}\r\n      >\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <ModalHeader\r\n            style={{\r\n              display: 'inline',\r\n              alignSelf: 'flex-end',\r\n            }}\r\n          >\r\n            Professional Information\r\n          </ModalHeader>\r\n\r\n          <Button\r\n            onClick={() => {\r\n              toggleModalFunction();\r\n            }}\r\n            outline\r\n            style={{ height: '2rem' }}\r\n            color=\"danger\"\r\n          >\r\n            <i className=\"iconsminds-close\" />\r\n          </Button>\r\n        </div>\r\n\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Row>\r\n                <Col xs=\"6\">\r\n                  <Label>Organization</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"organization\"\r\n                    id=\"organization\"\r\n                    placeholder=\"NUST\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                {/* </FormGroup>\r\n            <FormGroup> */}\r\n                <Col xs=\"6\">\r\n                  <Label>Role</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"role\"\r\n                    id=\"role\"\r\n                    placeholder=\"Professor\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Row>\r\n                <Col xs=\"6\">\r\n                  <Label>Start Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"start_date\"\r\n                    id=\"start_date\"\r\n                    placeholder=\"\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                {/* </FormGroup>\r\n            <FormGroup> */}\r\n                <Col xs=\"6\">\r\n                  <Label>End Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"end_date\"\r\n                    id=\"end_date\"\r\n                    placeholder=\"\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Termination Reason</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"termination_rsn\"\r\n                id=\"termination_rsn\"\r\n                placeholder=\"bad manners\"\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                }}\r\n              />\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            //   type=\"submit\"\r\n            onClick={() => {\r\n              console.log('pushed : ', data);\r\n              setOpen(false);\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputProfessionalInformation;\r\n","import React, { useState } from 'react';\r\nimport DataListViewPersonal from 'containers/pages/DataListView-personal';\r\nimport { Collapse, Card, Button } from 'reactstrap';\r\nimport { ContextMenuTrigger } from 'react-contextmenu';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\nimport professionalInformationData from './data/professionalInformation-data';\r\nimport InputProfessionalInformation from './input/professionalInformation-input';\r\n\r\nconst title = 'Professional Information';\r\nconst ProfessinalInformation = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n  function onSetToggle() {\r\n    setToggle(!toggle);\r\n  }\r\n\r\n  const { payload } = professionalInformationData;\r\n\r\n  return (\r\n    <Colxx xxs=\"12\" className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={title}>\r\n        <Card>\r\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n              <span className=\"d-flex \">\r\n                <h1 style={{ marginRight: '1rem' }}>{title}</h1>\r\n                {toggle && <InputProfessionalInformation />}\r\n              </span>\r\n            </div>\r\n            <div className=\"align-self-center\">\r\n              <Button\r\n                color=\"link\"\r\n                size=\"lg\"\r\n                onClick={() => {\r\n                  onSetToggle();\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    toggle === !false\r\n                      ? 'iconsminds-arrow-up'\r\n                      : 'iconsminds-arrow-down'\r\n                  }\r\n                />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <Collapse isOpen={toggle}>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', flex: '0 0 33%' }}>\r\n              {payload.map((product) => {\r\n                return (\r\n                  <DataListViewPersonal\r\n                    key={product.id}\r\n                    product={product}\r\n                    isSelect={() => {\r\n                      console.log('isSelect ran');\r\n                    }}\r\n                    onCheckItem={() => {\r\n                      console.log('onCheckitem ran');\r\n                    }}\r\n                    collect={() => {\r\n                      console.log('collect ran');\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </Collapse>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\nexport default ProfessinalInformation;\r\n","import React from 'react';\r\nimport EducationalInformation from './educational-information';\r\nimport PersonalInformation from './personal-information';\r\nimport ProfessinalInformation from './professional-information';\r\n// import InputEducationalInformation from './input/educationalInformation-input';\r\n// import InputProfessionalInformation from './input/professionalInformation-input';\r\n// import InputPersonalInformation from './input/personalInformation-input';\r\n\r\nconst MyDetails = () => {\r\n  return (\r\n    <div>\r\n      <h1>MyDetails</h1>\r\n      <EducationalInformation />\r\n      {/* <InputEducationalInformation /> */}\r\n      <ProfessinalInformation />\r\n      {/* <InputProfessionalInformation /> */}\r\n      <PersonalInformation />\r\n      {/* <InputPersonalInformation /> */}\r\n      {/* <ul>\r\n        <li></li>\r\n        <li></li>\r\n        <br />\r\n        <li></li>\r\n        <li></li>\r\n        <br />\r\n        <li></li>\r\n        <li></li>\r\n        <br />\r\n      </ul> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyDetails;\r\n","const AdmissionDocumentsData = {\r\n  id: 0,\r\n  payload: [\r\n    {\r\n      id: 0,\r\n      title: 'SOP',\r\n      value: `Value`,\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 1,\r\n      title: 'ENG exam Marksheet',\r\n      value: `Value`,\r\n      date: '15-03-2021',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'APT exam Marksheet',\r\n      value: 'Value',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'LOR',\r\n      value: 'CS',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'COE',\r\n      value: 'value',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Admission Essay',\r\n      value: `Submitted`,\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Personal Statement',\r\n      value: 'submitted',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 7,\r\n      title: 'Cond Offer Letter',\r\n      value: 'none',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 8,\r\n      title: 'uncond Offer letter',\r\n\r\n      value: 'none',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 9,\r\n      title: 'Record of Achievement',\r\n      value: 'none',\r\n      date: '15-03-2022',\r\n    },\r\n  ],\r\n};\r\n\r\nexport default AdmissionDocumentsData;\r\n\r\n//   Section 2: Admission documents\r\n// 1. sop varchar\r\n// 2. english_exm_mrksheet varchar\r\n// 3. apt_exam_mrksheet varchar\r\n// 4. lor varchar\r\n// 5. coe varchar\r\n// 6. addm_eaasy varchar\r\n// 7. personal_stmt varchar\r\n// 8. cond_offer_ltr varchar\r\n// 9. uncond_offer_ltr varchar\r\n// 10. record_of_achvmnt varchar\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n  ButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  Row,\r\n  Col,\r\n} from 'reactstrap';\r\n\r\nfunction UploadData(props) {\r\n  const { MenuOptions } = props;\r\n  const [dropDownValue, setDropDownValue] = useState('Document Type');\r\n  const [dropDowsState, setDropDownState] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [data, setData] = useState({\r\n    file: '',\r\n    type: '',\r\n  });\r\n\r\n  function handleUploadData(type, value) {\r\n    switch (type) {\r\n      case 'documentTypeSelect':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, type: value };\r\n        });\r\n        break;\r\n      case 'fileName':\r\n        setData((prevValue) => {\r\n          return { ...prevValue, file: value };\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function toggleModalFunction() {\r\n    setOpen((oldValue) => !oldValue);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"d-flex flex-row-reverse justify-content-between\">\r\n        <Button\r\n          outline\r\n          style={{ margin: '0 3% 3% 0' }}\r\n          onClick={() => {\r\n            toggleModalFunction();\r\n          }}\r\n        >\r\n          {MenuOptions.title === null ? 'Upload Document' : 'Edit'}\r\n        </Button>\r\n      </span>\r\n\r\n      <div>\r\n        <Modal\r\n          style={{ maxWidth: '70%' }}\r\n          isOpen={open}\r\n          toggle={() => {\r\n            toggleModalFunction();\r\n          }}\r\n          centered={!false}\r\n        >\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <ModalHeader\r\n              style={{\r\n                display: 'inline',\r\n                alignSelf: 'flex-end',\r\n              }}\r\n            >\r\n              Upload Document\r\n            </ModalHeader>\r\n\r\n            <Button\r\n              onClick={() => {\r\n                toggleModalFunction();\r\n              }}\r\n              outline\r\n              style={{ height: '2rem' }}\r\n              color=\"danger\"\r\n            >\r\n              <i className=\"iconsminds-close\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <ModalBody>\r\n            <Row>\r\n              <Col xs=\"6\">\r\n                <Input\r\n                  onChange={(e) => {\r\n                    console.log(e.target.files);\r\n                    handleUploadData('fileName', e.target.files);\r\n                  }}\r\n                  type=\"file\"\r\n                />\r\n              </Col>\r\n              <Col xs=\"6\">\r\n                <ButtonDropdown\r\n                  direction=\"right\"\r\n                  isOpen={dropDowsState}\r\n                  toggle={() => {\r\n                    setDropDownState((prevValue) => {\r\n                      return !prevValue;\r\n                    });\r\n                  }}\r\n                >\r\n                  <DropdownToggle caret>{dropDownValue}</DropdownToggle>\r\n                  <DropdownMenu>\r\n                    {MenuOptions.map((product) => {\r\n                      return (\r\n                        <DropdownItem\r\n                          name=\"documentTypeSelect\"\r\n                          onClick={(e) => {\r\n                            console.log(e);\r\n                            setDropDownValue(e.target.innerHTML);\r\n                            handleUploadData(\r\n                              'documentTypeSelect',\r\n                              e.target.innerHTML\r\n                            );\r\n                          }}\r\n                          key={product.id}\r\n                        >\r\n                          {product.title}\r\n                        </DropdownItem>\r\n                      );\r\n                    })}\r\n                  </DropdownMenu>\r\n                </ButtonDropdown>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              //   type=\"submit\"\r\n              onClick={() => {\r\n                console.log('pushed : ', data);\r\n                setOpen(false);\r\n              }}\r\n            >\r\n              Upload\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadData;\r\n","import React, { useState } from 'react';\r\n// import DataListViewPersonal from 'containers/pages/DataListView-personal';\r\nimport { Collapse, Card, Button, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\nimport { ContextMenuTrigger } from 'react-contextmenu';\r\nimport AdmissionDocumentsData from './data/admission-documents-data';\r\nimport UploadData from './upload-data';\r\n\r\nconst title = 'Admission Documents';\r\nconst { payload } = AdmissionDocumentsData;\r\n\r\nconst AdmissionDocuments = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n  function onSetToggle() {\r\n    setToggle((prevValue) => {\r\n      return !prevValue;\r\n    });\r\n  }\r\n  return (\r\n    <Colxx xxs=\"12\" className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={title}>\r\n        <Card>\r\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n              <span className=\"d-flex \">\r\n                <p\r\n                  style={{ marginRight: '1rem' }}\r\n                  className=\"h3 mb-1 truncate align-self-end\"\r\n                >\r\n                  {title}\r\n                </p>\r\n                {toggle && <UploadData MenuOptions={payload} />}\r\n              </span>\r\n              <div className=\"align-self-center\">\r\n                <Button\r\n                  color=\"link\"\r\n                  size=\"lg\"\r\n                  onClick={() => {\r\n                    onSetToggle();\r\n                  }}\r\n                >\r\n                  <i\r\n                    className={\r\n                      toggle === !false\r\n                        ? 'iconsminds-arrow-up'\r\n                        : 'iconsminds-arrow-down'\r\n                    }\r\n                  />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Collapse isOpen={toggle}>\r\n            <div\r\n              style={{ padding: '5px' }}\r\n              className=\"d-flex justify-content-end mr-3 pb-3\"\r\n            >\r\n              <Button>List Documents</Button>\r\n            </div>\r\n            <div>\r\n              {payload.map((product) => {\r\n                return (\r\n                  <div key={product.id}>\r\n                    <Colxx xs=\"12\" className=\"mb-5\">\r\n                      <ContextMenuTrigger id=\"menu_id\" data={product.id}>\r\n                        <Card\r\n                          onClick={(event) => console.log(event)}\r\n                          style={{ boxShadow: 'none' }}\r\n                          className={classnames('d-flex flex-row', {})}\r\n                        >\r\n                          <Card className=\"w-100 d-flex flex-row\">\r\n                            <Col xs=\"4\">\r\n                              <h3\r\n                                style={{ padding: '5px', justifySelf: 'start' }}\r\n                              >\r\n                                {`${product.title}    :   ${product.value}`}\r\n                              </h3>\r\n                            </Col>\r\n                            <Col xs=\"4\">\r\n                              <p\r\n                                style={{\r\n                                  marginTop: '10px',\r\n                                }}\r\n                                className=\"text-center\"\r\n                              >\r\n                                {product.date}\r\n                              </p>\r\n                            </Col>\r\n                            <Col xs=\"4\" className=\"d-flex flex-row-reverse\">\r\n                              <Button\r\n                                style={{\r\n                                  maxWidth: 'fit-content',\r\n                                }}\r\n                                outline\r\n                                color=\"info\"\r\n                              >\r\n                                <i className=\"iconsminds-download\" />\r\n                              </Button>\r\n                            </Col>\r\n                          </Card>\r\n                        </Card>\r\n                      </ContextMenuTrigger>\r\n                    </Colxx>\r\n                  </div>\r\n                );\r\n\r\n                // return (\r\n                //   <DataListViewPersonal\r\n                //     key={product.id}\r\n                //     product={product}\r\n                //     isSelect={() => {\r\n                //       console.log('isSelect ran');\r\n                //     }}\r\n                //     onCheckItem={() => {\r\n                //       console.log('onCheckitem ran');\r\n                //     }}\r\n                //     collect={() => {\r\n                //       console.log('collect ran');\r\n                //     }}\r\n                //   />\r\n                // );\r\n              })}\r\n            </div>\r\n          </Collapse>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\nexport default AdmissionDocuments;\r\n","const FinancialDocumetsData = {\r\n  id: 0,\r\n  payload: [\r\n    {\r\n      id: 0,\r\n      title: 'PF Letter',\r\n      value: `Value`,\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 1,\r\n      title: 'Bank Account DTMT',\r\n      value: `Value`,\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Loan Approve Letter',\r\n      value: 'Value',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Scolorship Approval',\r\n      value: 'CS',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Sponser Affidevit',\r\n      value: 'value',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Loan Capability',\r\n      value: `Submitted`,\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Ca CERT',\r\n      value: 'submitted',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 7,\r\n      title: 'Prop Evaluation',\r\n      value: 'none',\r\n      date: '15-03-2022',\r\n    },\r\n  ],\r\n};\r\n\r\nexport default FinancialDocumetsData;\r\n\r\n// Section 3: Financial Documents\r\n// 1. pf_letter varchar\r\n// 2. bank_acc_dtmt varchar\r\n// 3. loan_appr_ltr varchar\r\n// 4. scholarship_ltr varchar\r\n// 5. sponsor_affidavit varchar\r\n// 6. loan_capability_ltr varchar\r\n// 7. ca_cert varchar\r\n// 8. prop_eval_report varchar\r\n","import React, { useState } from 'react';\r\nimport { Collapse, Card, Button, Col } from 'reactstrap';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\nimport { ContextMenuTrigger } from 'react-contextmenu';\r\nimport classNames from 'classnames';\r\nimport FinancialDocumetsData from './data/financial-documents-data';\r\nimport UploadData from './upload-data';\r\n\r\nconst title = 'Financial Documents';\r\nconst { payload } = FinancialDocumetsData;\r\n\r\nconst FinancialDocumets = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  function onSetToggle() {\r\n    setToggle((prevValue) => {\r\n      return !prevValue;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Colxx xxs=\"12\" className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={title}>\r\n        <Card>\r\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n              <span className=\"d-flex \">\r\n                <p\r\n                  style={{ marginRight: '1rem' }}\r\n                  className=\"h3 mb-1 truncate align-self-end\"\r\n                >\r\n                  {title}\r\n                </p>\r\n                {toggle && <UploadData MenuOptions={payload} />}\r\n              </span>\r\n              <div className=\"align-self-center\">\r\n                <Button\r\n                  color=\"link\"\r\n                  size=\"lg\"\r\n                  onClick={() => {\r\n                    onSetToggle();\r\n                  }}\r\n                >\r\n                  <i\r\n                    className={\r\n                      toggle === !false\r\n                        ? 'iconsminds-arrow-up'\r\n                        : 'iconsminds-arrow-down'\r\n                    }\r\n                  />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Collapse isOpen={toggle}>\r\n            <div\r\n              // style={{ padding: '5px' }}\r\n              className=\"d-flex justify-content-end mr-3 pb-3 \"\r\n            >\r\n              <Button>List Documents</Button>\r\n            </div>\r\n            <div>\r\n              {payload.map((product) => {\r\n                return (\r\n                  <div key={product.id}>\r\n                    <Colxx xs=\"12\" className=\"mb-5\">\r\n                      <ContextMenuTrigger id=\"menu_id\" data={product.id}>\r\n                        <Card\r\n                          onClick={(event) => console.log(event)}\r\n                          style={{ boxShadow: 'none' }}\r\n                          className={classNames('d-flex flex-row', {})}\r\n                        >\r\n                          <Card className=\"w-100 d-flex flex-row\">\r\n                            <Col xs=\"4\">\r\n                              <h3\r\n                                style={{ padding: '5px', justifySelf: 'start' }}\r\n                              >\r\n                                {`${product.title}    :   ${product.value}`}\r\n                              </h3>\r\n                            </Col>\r\n                            <Col xs=\"4\">\r\n                              <p\r\n                                style={{\r\n                                  marginTop: '10px',\r\n                                }}\r\n                                className=\"text-center\"\r\n                              >\r\n                                {product.date}\r\n                              </p>\r\n                            </Col>\r\n                            <Col xs=\"4\" className=\"d-flex flex-row-reverse\">\r\n                              <Button\r\n                                style={{\r\n                                  maxWidth: 'fit-content',\r\n                                }}\r\n                                outline\r\n                                color=\"info\"\r\n                              >\r\n                                <i className=\"iconsminds-download\" />\r\n                              </Button>\r\n                            </Col>\r\n                          </Card>\r\n                        </Card>\r\n                      </ContextMenuTrigger>\r\n                    </Colxx>\r\n                  </div>\r\n                );\r\n\r\n                // return (\r\n                //   <DataListViewPersonal\r\n                //     key={product.id}\r\n                //     product={product}\r\n                //     isSelect={() => {\r\n                //       console.log('isSelect ran');\r\n                //     }}\r\n                //     onCheckItem={() => {\r\n                //       console.log('onCheckitem ran');\r\n                //     }}\r\n                //     collect={() => {\r\n                //       console.log('collect ran');\r\n                //     }}\r\n                //   />\r\n                // );\r\n              })}\r\n            </div>\r\n          </Collapse>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n\r\n  // return (\r\n  //   <Colxx xxs=\"12\" className=\"mb-3\">\r\n  //     <ContextMenuTrigger id=\"menu_id\" data={title}>\r\n  //       <Card\r\n  //         onClick={() => {\r\n  //           onSetToggle();\r\n  //         }}\r\n  //       >\r\n  //         <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n  //           <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n  //             <h1 className=\"list-item-heading mb-1 truncate\">{title}</h1>\r\n  //           </div>\r\n  //         </div>\r\n  //         <Collapse isOpen={toggle}>\r\n  //           <div style={{ display: 'flex', flexWrap: 'wrap', flex: '0 0 73%' }}>\r\n  //             {payload.map((product) => {\r\n  //               return (\r\n  //                 <DataListViewPersonal\r\n  //                   key={product.id}\r\n  //                   product={product}\r\n  //                   isSelect={() => {\r\n  //                     console.log('isSelect ran');\r\n  //                   }}\r\n  //                   onCheckItem={() => {\r\n  //                     console.log('onCheckitem ran');\r\n  //                   }}\r\n  //                   collect={() => {\r\n  //                     console.log('collect ran');\r\n  //                   }}\r\n  //                 />\r\n  //               );\r\n  //             })}\r\n  //           </div>\r\n  //         </Collapse>\r\n  //       </Card>\r\n  //     </ContextMenuTrigger>\r\n  //   </Colxx>\r\n  // );\r\n};\r\nexport default FinancialDocumets;\r\n","const SupportingDocumentsData = {\r\n  id: 0,\r\n  payload: [\r\n    {\r\n      id: 0,\r\n      title: 'Photo',\r\n      value: `Value`,\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 1,\r\n      title: 'ID proff',\r\n      value: `Value`,\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'ADHARR',\r\n      value: 'Value',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Bachelor Certificate',\r\n      value: 'CS',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Tenth Certificate',\r\n      value: 'value',\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Tweleveth Certificate',\r\n      value: `Submitted`,\r\n      date: '15-03-2022',\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Residance Proff',\r\n      value: 'submitted',\r\n      date: '15-03-2022',\r\n    },\r\n  ],\r\n};\r\n\r\nexport default SupportingDocumentsData;\r\n\r\n// Section 1: Supporting documents\r\n// 1. photo varchar\r\n// 2. id_proof varchar\r\n// 3. adhaar_card varchar\r\n// 4. bachelor_cert varchar\r\n// 5. tenth_cert varchar\r\n// 6. twelfth_cert varchar\r\n// 7. residense_proof varchar\r\n","import React, { useState } from 'react';\r\n// import DataListViewPersonal from 'containers/pages/DataListView-personal';\r\nimport { Collapse, Card, Col, Button } from 'reactstrap';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\nimport { ContextMenuTrigger } from 'react-contextmenu';\r\nimport classNames from 'classnames';\r\nimport SupportingDocumentsData from './data/supporting-documents-data';\r\nimport UploadData from './upload-data';\r\n\r\nconst title = 'Supporting Documents';\r\nconst { payload } = SupportingDocumentsData;\r\n\r\nconst SupportingDocuments = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  function onSetToggle() {\r\n    setToggle((prevValue) => {\r\n      return !prevValue;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Colxx xxs=\"12\" className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={title}>\r\n        <Card>\r\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n              <span className=\"d-flex \">\r\n                <p\r\n                  style={{ marginRight: '1rem' }}\r\n                  className=\"h3 mb-1 truncate align-self-end\"\r\n                >\r\n                  {title}\r\n                </p>\r\n                {toggle && <UploadData MenuOptions={payload} />}\r\n              </span>\r\n              <div className=\"align-self-center\">\r\n                <Button\r\n                  color=\"link\"\r\n                  size=\"lg\"\r\n                  onClick={() => {\r\n                    onSetToggle();\r\n                  }}\r\n                >\r\n                  <i\r\n                    className={\r\n                      toggle === !false\r\n                        ? 'iconsminds-arrow-up'\r\n                        : 'iconsminds-arrow-down'\r\n                    }\r\n                  />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Collapse isOpen={toggle}>\r\n            <div\r\n              style={{ padding: '5px' }}\r\n              className=\"d-flex justify-content-end mr-3 pb-3  \"\r\n            >\r\n              <Button>List Documents</Button>\r\n            </div>\r\n            <div>\r\n              {payload.map((product) => {\r\n                return (\r\n                  <div key={product.id}>\r\n                    <Colxx xs=\"12\" className=\"mb-5\">\r\n                      <ContextMenuTrigger id=\"menu_id\" data={product.id}>\r\n                        <Card\r\n                          onClick={(event) => console.log(event)}\r\n                          style={{ boxShadow: 'none' }}\r\n                          className={classNames('d-flex flex-row', {})}\r\n                        >\r\n                          <Card className=\"w-100 d-flex flex-row\">\r\n                            <Col xs=\"4\">\r\n                              <h3\r\n                                style={{ padding: '5px', justifySelf: 'start' }}\r\n                              >\r\n                                {`${product.title}    :   ${product.value}`}\r\n                              </h3>\r\n                            </Col>\r\n                            <Col xs=\"4\">\r\n                              <p\r\n                                style={{\r\n                                  margin: '10px 0',\r\n                                }}\r\n                                className=\"text-center\"\r\n                              >\r\n                                {product.date}\r\n                              </p>\r\n                            </Col>\r\n                            <Col xs=\"4\" className=\"d-flex flex-row-reverse\">\r\n                              <Button\r\n                                style={{\r\n                                  maxWidth: 'fit-content',\r\n                                }}\r\n                                outline\r\n                                color=\"info\"\r\n                              >\r\n                                <i className=\"iconsminds-download\" />\r\n                              </Button>\r\n                            </Col>\r\n                          </Card>\r\n                        </Card>\r\n                      </ContextMenuTrigger>\r\n                    </Colxx>\r\n                  </div>\r\n                );\r\n\r\n                // return (\r\n                //   <DataListViewPersonal\r\n                //     key={product.id}\r\n                //     product={product}\r\n                //     isSelect={() => {\r\n                //       console.log('isSelect ran');\r\n                //     }}\r\n                //     onCheckItem={() => {\r\n                //       console.log('onCheckitem ran');\r\n                //     }}\r\n                //     collect={() => {\r\n                //       console.log('collect ran');\r\n                //     }}\r\n                //   />\r\n                // );\r\n              })}\r\n            </div>\r\n          </Collapse>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n\r\n  // return (\r\n  //   <Colxx xxs=\"12\" className=\"mb-3\">\r\n  //     <ContextMenuTrigger id=\"menu_id\" data={title}>\r\n  //       <Card\r\n  //         onClick={() => {\r\n  //           onSetToggle();\r\n  //         }}\r\n  //       >\r\n  //         <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n  //           <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n  //             <h1 className=\"list-item-heading mb-1 truncate\">{title}</h1>\r\n  //           </div>\r\n  //         </div>\r\n  //         <Collapse isOpen={toggle}>\r\n  //           <div style={{ display: 'flex', flexWrap: 'wrap', flex: '0 0 73%' }}>\r\n  //             {payload.map((product) => {\r\n  //               return (\r\n  //                 <DataListViewPersonal\r\n  //                   key={product.id}\r\n  //                   product={product}\r\n  //                   isSelect={() => {\r\n  //                     console.log('isSelect ran');\r\n  //                   }}\r\n  //                   onCheckItem={() => {\r\n  //                     console.log('onCheckitem ran');\r\n  //                   }}\r\n  //                   collect={() => {\r\n  //                     console.log('collect ran');\r\n  //                   }}\r\n  //                 />\r\n  //               );\r\n  //             })}\r\n  //           </div>\r\n  //         </Collapse>\r\n  //       </Card>\r\n  //     </ContextMenuTrigger>\r\n  //   </Colxx>\r\n  // );\r\n};\r\nexport default SupportingDocuments;\r\n","import React from 'react';\r\nimport AdmissionDocuments from './admission-documents';\r\nimport FinancialDocumets from './financial-documents';\r\nimport SupportingDocuments from './supporting-documents';\r\n\r\nconst MyDocuments = () => {\r\n  return (\r\n    <div>\r\n      <h1>MyDocuments</h1>\r\n      <AdmissionDocuments />\r\n      <FinancialDocumets />\r\n      <SupportingDocuments />\r\n    </div>\r\n  );\r\n};\r\nexport default MyDocuments;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Table,\r\n  InputGroup,\r\n  Input,\r\n  InputGroupAddon,\r\n} from 'reactstrap';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\nimport { ContextMenuTrigger } from 'react-contextmenu';\r\n\r\nconst AllUserApplications = (props) => {\r\n  const userType = localStorage.getItem('userType');\r\n\r\n  const { currentItem, expand } = props;\r\n  console.log(props);\r\n  const [toggle, onSetToggle] = useState(expand);\r\n  function onButtonClick() {\r\n    onSetToggle((prevValue) => !prevValue);\r\n  }\r\n  const title = 'Application';\r\n\r\n  const handleClickScroll = () => {\r\n    const element = document.getElementById('9');\r\n    if (element) {\r\n      element.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      handleClickScroll();\r\n    }, 200);\r\n  }, []);\r\n\r\n  return (\r\n    <div id={`${currentItem.id}`}>\r\n      <Colxx xxs=\"12\" className=\"mb-3\" key={currentItem.id}>\r\n        <ContextMenuTrigger id=\"menu_id\" data={title}>\r\n          <Card>\r\n            <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n              <div className=\"card-body align-self-center d-flex flex-column flex-lg-row  min-width-zero align-items-lg-center\">\r\n                <span className=\"d-flex \">\r\n                  <p className=\"h4\" style={{ marginRight: '1rem' }}>\r\n                    {`${title} ${currentItem.id}`}\r\n                  </p>\r\n                </span>\r\n              </div>\r\n              <div className=\"align-self-center\">\r\n                {userType === 'COORDINATOR' && toggle === true && (\r\n                  <Button outline>Update Status</Button>\r\n                )}\r\n                <Button\r\n                  color=\"link\"\r\n                  size=\"lg\"\r\n                  onClick={() => {\r\n                    onButtonClick();\r\n                  }}\r\n                >\r\n                  <i\r\n                    className={\r\n                      toggle === !false\r\n                        ? 'iconsminds-arrow-up'\r\n                        : 'iconsminds-arrow-down'\r\n                    }\r\n                  />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <Collapse isOpen={toggle}>\r\n              <div\r\n                className=\"pl-4\"\r\n                style={{\r\n                  display: 'flex',\r\n                  flexWrap: 'wrap',\r\n                  flex: '0 0 73%',\r\n                }}\r\n              >\r\n                <Container>\r\n                  <Row className=\"mr-3\">\r\n                    <Col xs=\"4\">\r\n                      <p className=\"h6\">Application Id : {currentItem.id}</p>\r\n                    </Col>\r\n                    <Col xs=\"4\">\r\n                      <p className=\"h6\">\r\n                        College Name : {currentItem.collegeName}\r\n                      </p>\r\n                    </Col>\r\n                    <Col xs=\"4\">\r\n                      <p className=\"h6\">\r\n                        Applied Date : {currentItem.createdAt}\r\n                      </p>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mr-3 mt-3\">\r\n                    <Col xs=\"8\">\r\n                      <p className=\"h5\">Status</p>\r\n                      <Card>\r\n                        <Table>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>#</th>\r\n                              <th>Event</th>\r\n                              <th>Updated at</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {currentItem.applnEventLogs.map((subItem) => {\r\n                              return (\r\n                                <tr key={subItem.updatedAt}>\r\n                                  <td>\r\n                                    <i className=\"iconsminds-yes\" />\r\n                                  </td>\r\n                                  <td>{subItem.eventName}</td>\r\n                                  <td>{subItem.updatedAt} pm</td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\" mt-5 mb-5 \">\r\n                    <Col xs=\"8\">\r\n                      <p className=\"h5\">Comments</p>\r\n                      <Card>\r\n                        <Table>\r\n                          <tbody>\r\n                            {currentItem.applnMsgLogs.map((subItem) => {\r\n                              return (\r\n                                <React.Fragment key={subItem.created_at}>\r\n                                  <tr>\r\n                                    <th>{subItem.senderName}</th>\r\n                                    <th className=\"text-right\">\r\n                                      {subItem.created_at}pm\r\n                                    </th>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>{subItem.message}</td>\r\n                                  </tr>\r\n                                </React.Fragment>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </Table>\r\n                        <InputGroup className=\"p-3\">\r\n                          <Input\r\n                            placeholder=\"New Comment\"\r\n                            style={{ borderColor: '#4556ac' }}\r\n                          />\r\n                          <InputGroupAddon addonType=\"append\">\r\n                            <Button\r\n                              onClick={() => {\r\n                                console.log('i was clicked');\r\n                              }}\r\n                            >\r\n                              Post\r\n                            </Button>\r\n                          </InputGroupAddon>\r\n                        </InputGroup>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </div>\r\n            </Collapse>\r\n          </Card>\r\n        </ContextMenuTrigger>\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllUserApplications;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  InputGroup,\r\n  InputGroupButtonDropdown,\r\n  Row,\r\n  Col,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n} from 'reactstrap';\r\n\r\nconst MenuOptions = [\r\n  {\r\n    id: 0,\r\n    name: 'UCP',\r\n  },\r\n  {\r\n    id: 1,\r\n    name: 'UOL',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'BNU',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'ITU',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'GCU',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'GUL',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'LUMS',\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'ATC',\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'PU',\r\n  },\r\n];\r\n\r\nfunction SelectCollegeModal() {\r\n  const [open, setOpen] = useState(false);\r\n  const [dropDowsState, setDropDownState] = useState(false);\r\n  const [dropDownValue, setDropDownValue] = useState('Select College');\r\n\r\n  //   const [data, setData] = useState({\r\n  //     value: '',\r\n  //   });\r\n  function toggleModalFunction() {\r\n    setOpen((oldValue) => !oldValue);\r\n  }\r\n  //   function handleUploadData(e) {\r\n  //     setData(e.target.value);\r\n  //   }\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        outline\r\n        // style={{ margin: '0 3% 3% 0' }}\r\n        onClick={() => {\r\n          toggleModalFunction();\r\n        }}\r\n      >\r\n        Add New\r\n      </Button>\r\n\r\n      <div>\r\n        <Modal\r\n          style={{ maxWidth: '30%' }}\r\n          isOpen={open}\r\n          toggle={() => {\r\n            toggleModalFunction();\r\n          }}\r\n          centered={!false}\r\n        >\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <ModalHeader\r\n              style={{\r\n                display: 'inline',\r\n                alignSelf: 'flex-end',\r\n              }}\r\n            >\r\n              College Name\r\n            </ModalHeader>\r\n\r\n            <Button\r\n              onClick={() => {\r\n                toggleModalFunction();\r\n              }}\r\n              outline\r\n              style={{ height: '2rem' }}\r\n              color=\"danger\"\r\n            >\r\n              <i className=\"iconsminds-close\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <ModalBody>\r\n            <Row>\r\n              <Col xs=\"12\">\r\n                <InputGroup>\r\n                  <InputGroupButtonDropdown\r\n                    addonType=\"prepend\"\r\n                    isOpen={dropDowsState}\r\n                    toggle={() => {\r\n                      setDropDownState((prevValue) => {\r\n                        return !prevValue;\r\n                      });\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      outline\r\n                      color={\r\n                        dropDownValue === 'Select College'\r\n                          ? 'danger'\r\n                          : 'secondary'\r\n                      }\r\n                    >\r\n                      {dropDownValue}\r\n                    </Button>\r\n                    <DropdownToggle\r\n                      split\r\n                      outline\r\n                      color={\r\n                        dropDownValue === 'Select College'\r\n                          ? 'danger'\r\n                          : 'secondary'\r\n                      }\r\n                    />\r\n                    <DropdownMenu>\r\n                      {MenuOptions.map((product) => {\r\n                        return (\r\n                          <DropdownItem\r\n                            key={product.id}\r\n                            onClick={(e) => {\r\n                              setDropDownValue(e.target.innerHTML);\r\n                            }}\r\n                          >\r\n                            {product.name}\r\n                          </DropdownItem>\r\n                        );\r\n                      })}\r\n                    </DropdownMenu>\r\n                  </InputGroupButtonDropdown>\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              onClick={() => {\r\n                console.log('Selected College : ', dropDownValue);\r\n                setOpen(false);\r\n              }}\r\n            >\r\n              Add\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectCollegeModal;\r\n","import React from 'react'; //  ,{ useRef }\r\n\r\nimport { Row } from 'reactstrap';\r\nimport AllUserApplications from './show-allUser-application';\r\nimport SelectCollegeModal from './select-college-modal';\r\nimport applicationInformationData from './applications-data';\r\n\r\nconst payload = applicationInformationData;\r\n\r\nconst MyApplications = () => {\r\n  const selectedApp = 10;\r\n  const selectedElement = document.getElementById(`10`);\r\n  // setTimeout(() => {\r\n  //   document.getElementById(10).scrollIntoView();\r\n  // }, 3000);\r\n  // const myRef = useRef(selectedApp);\r\n  // console.log(myRef);\r\n  // const executeScroll = () => myRef.current.scrollIntoView();\r\n  // executeScroll();\r\n  if (selectedElement) {\r\n    selectedElement.scrollIntoView();\r\n  }\r\n  return (\r\n    <div>\r\n      <Row className=\" ml-3 mr-3 mb-3 justify-content-between\">\r\n        <h1>MyApplications</h1>\r\n        <SelectCollegeModal />\r\n      </Row>\r\n      {payload.map((item) => {\r\n        return (\r\n          <div id=\"10\" key={item.id}>\r\n            <AllUserApplications\r\n              expand={selectedApp === item.id}\r\n              currentItem={item}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n      {/* <AllUserApplications /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyApplications;\r\n","const applicationInformationData = [\r\n  {\r\n    id: 1,\r\n    createdAt: 10,\r\n    collegeName: 'UCP',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'Completed',\r\n        updatedAt: 4,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 3,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 2,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 1,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 0,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 10,\r\n        senderName: 'Alex',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 11,\r\n        senderName: 'Max',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 12,\r\n        senderName: 'Alex',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 14,\r\n        senderName: 'Max',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    createdAt: 20,\r\n    collegeName: 'UOL',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'UnCompleted',\r\n        updatedAt: 9,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 8,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 7,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 6,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 5,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 20,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 22,\r\n        senderName: 'Aria',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 24,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 26,\r\n        senderName: 'Aria',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    createdAt: 20,\r\n    collegeName: 'UOL',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'UnCompleted',\r\n        updatedAt: 9,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 8,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 7,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 6,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 5,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 20,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 22,\r\n        senderName: 'Aria',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 24,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 26,\r\n        senderName: 'Aria',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 4,\r\n    createdAt: 20,\r\n    collegeName: 'UOL',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'UnCompleted',\r\n        updatedAt: 9,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 8,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 7,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 6,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 5,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 20,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 22,\r\n        senderName: 'Aria',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 24,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 26,\r\n        senderName: 'Aria',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 5,\r\n    createdAt: 20,\r\n    collegeName: 'UOL',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'UnCompleted',\r\n        updatedAt: 9,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 8,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 7,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 6,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 5,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 20,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 22,\r\n        senderName: 'Aria',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 24,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 26,\r\n        senderName: 'Aria',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 6,\r\n    createdAt: 20,\r\n    collegeName: 'UOL',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'UnCompleted',\r\n        updatedAt: 9,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 8,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 7,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 6,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 5,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 20,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 22,\r\n        senderName: 'Aria',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 24,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 26,\r\n        senderName: 'Aria',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 7,\r\n    createdAt: 20,\r\n    collegeName: 'UOL',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'UnCompleted',\r\n        updatedAt: 9,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 8,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 7,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 6,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 5,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 20,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 22,\r\n        senderName: 'Aria',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 24,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 26,\r\n        senderName: 'Aria',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 8,\r\n    createdAt: 20,\r\n    collegeName: 'UOL',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'UnCompleted',\r\n        updatedAt: 9,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 8,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 7,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 6,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 5,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 20,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 22,\r\n        senderName: 'Aria',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 24,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 26,\r\n        senderName: 'Aria',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 9,\r\n    createdAt: 20,\r\n    collegeName: 'UOL',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'UnCompleted',\r\n        updatedAt: 9,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 8,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 7,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 6,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 5,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 20,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 22,\r\n        senderName: 'Aria',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 24,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 26,\r\n        senderName: 'Aria',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 10,\r\n    createdAt: 20,\r\n    collegeName: 'UOL',\r\n    applnEventLogs: [\r\n      {\r\n        eventName: 'UnCompleted',\r\n        updatedAt: 9,\r\n      },\r\n      {\r\n        eventName: 'Pending',\r\n        updatedAt: 8,\r\n      },\r\n      {\r\n        eventName: 'Letter Wating',\r\n        updatedAt: 7,\r\n      },\r\n      {\r\n        eventName: 'Open',\r\n        updatedAt: 6,\r\n      },\r\n      {\r\n        eventName: 'Created',\r\n        updatedAt: 5,\r\n      },\r\n    ],\r\n    applnMsgLogs: [\r\n      {\r\n        message:\r\n          'Tempor aute ea deserunt ut aliquip laborum sit ad consectetur ex.',\r\n        created_at: 20,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message: 'Sit reprehenderit ea sunt nostrud labore magna dolore qui.',\r\n        created_at: 22,\r\n        senderName: 'Aria',\r\n      },\r\n      {\r\n        message:\r\n          'Aliqua esse ad pariatur duis aliqua fugiat adipisicing mollit Lorem officia aliqua eiusmod.',\r\n        created_at: 24,\r\n        senderName: 'John',\r\n      },\r\n      {\r\n        message:\r\n          'Elit consequat laborum sunt irure aliquip amet deserunt sint non. Laborum qui minim aliqua non incididunt deserunt nulla laborum minim magna. Proident aute ex qui irure duis culpa veniam consectetur laborum tempor. Minim irure adipisicing duis elit nulla quis. Labore exercitation officia deserunt ad culpa dolore ad sunt sit labore minim mollit commodo occaecat. Occaecat esse aliqua voluptate id.',\r\n        created_at: 26,\r\n        senderName: 'Aria',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default applicationInformationData;\r\n\r\n// Enum appln_status { open, completed ,pending ,user_canceled, rejected ,await_cond_offer_ltr, recd_cond_offer_ltr, await_uncond_offer_ltr, recd_uncond_offer_ltr, fee_paid, await_visa, visa_processed, coe_received }\r\n","import \"@glidejs/glide/dist/css/glide.core.min.css\";\r\nimport axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport GlideComponent from \"components/carousel/GlideComponent\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport CustomSelectInput from \"components/common/CustomSelectInput\";\r\nimport Rating from \"components/common/Rating\";\r\nimport { adminRoot, baseUrl } from \"constants/defaultValues\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardText,\r\n  CardTitle,\r\n  Col,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  NavLink,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\nimport language from \"../my-login/Languages\";\r\n\r\n// import { alumniData } from \"./Data\";\r\n\r\nconst DashBoard = () => {\r\n  const [modalBasic, setModalBasic] = useState(false);\r\n  const [currentSessionIndex, setCurrentSessionIndex] = useState(0);\r\n  const [currentMentorIndex, setCurrentMentorIndex] = useState(0);\r\n  const [currentLawyerIndex, setCurrentLawyerIndex] = useState(0);\r\n  const [currentAlumniIndex, setCurrentAlumniIndex] = useState(0);\r\n  const [currentJobIndex, setCurrentJobIndex] = useState(0);\r\n  const [currentStayIndex, setCurrentStayIndex] = useState(0);\r\n  const [currentBatchMateIndex, setCurrentBatchMateIndex] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const [walletBalance, setWalletBalance] = useState(0);\r\n  const [profileStatus, setProfileStatus] = useState(0);\r\n  const [recentSessions, setRecentSessions] = useState([]);\r\n  const [mentors, setMentors] = useState([\r\n    {\r\n      imageUrl: \"\",\r\n      company: \"\",\r\n      price: 0,\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      jobTitle: \"\",\r\n      experience: 0,\r\n    },\r\n  ]);\r\n  const [lawyers, setLawyers] = useState([\r\n    {\r\n      imageUrl: \"\",\r\n      firstName: \"\",\r\n      price: 0,\r\n      lastName: \"\",\r\n      services: [],\r\n      languages: [],\r\n    },\r\n  ]);\r\n  // const [alumni, setAlumni] = useState(alumniData);\r\n  const [alumni, setAlumni] = useState([\r\n    {\r\n      imageUrl: \"\",\r\n      company: \"\",\r\n      price: 0,\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      jobTitle: \"\",\r\n      experienceYears: 0,\r\n    },\r\n  ]);\r\n  const [newSession, setNewSession] = useState([\r\n    {\r\n      id: 0,\r\n      chatStatus: \"\",\r\n      fromTimeStamp: 0,\r\n      toTimeStamp: 0,\r\n      mentorUserId: 0,\r\n      mode: \"\",\r\n      name: \"\",\r\n      imageUrl: \"\",\r\n    },\r\n  ]);\r\n  const [recentChats, setRecentChats] = useState([]);\r\n  const [dashboardQuestions, setDashboardQuestions] = useState([]);\r\n  const [jobList, setJobList] = useState(\"\");\r\n  const [stayList, setStaylist] = useState(\"\");\r\n  const [batchMates, setBatchMates] = useState(\"\");\r\n  const [inputkey, setInputKey] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n\r\n  const SelectedCategoryOptions = [\r\n    { label: \"IT\", value: \"IT\", key: 0 },\r\n    {\r\n      label: \"MANUFACTURING_MECHANICAL\",\r\n      value: \"MANUFACTURING_MECHANICAL\",\r\n      key: 1,\r\n    },\r\n    { label: \"CIVIL\", value: \"CIVIL\", key: 2 },\r\n    { label: \"INTERVIEW_PREPARATION\", value: \"INTERVIEW_PREPARATION\", key: 3 },\r\n    { label: \"UNIV_ADMISSIONS\", value: \"UNIV_ADMISSIONS\", key: 4 },\r\n    { label: \"RESUMES_WRITTING\", value: \"RESUMES_WRITTING\", key: 5 },\r\n    { label: \"VISA_ASSITANCE\", value: \"VISA_ASSITANCE\", key: 6 },\r\n  ];\r\n\r\n  // useEffect(() => {\r\n  //   if (selectedCategory?.value === \"VISA_ASSITANCE\") {\r\n  //     history.push(\"/app/lawyer/list\");\r\n  //   }\r\n  // }, [selectedCategory]);\r\n\r\n  useEffect(() => {\r\n    if (selectedCategory?.value === \"VISA_ASSITANCE\") {\r\n      history.push(\"/app/lawyer/list\");\r\n    } else if (selectedCategory) {\r\n      history.push({\r\n        pathname: \"/app/mentor/list\",\r\n        state: { category: selectedCategory },\r\n      });\r\n    }\r\n  }, [selectedCategory, history]);\r\n  console.log(\"selected\", selectedCategory);\r\n\r\n  const walletUrl = `${baseUrl}/api/wallet/balance`;\r\n  const profileStatusUrl = `${baseUrl}/api/userprofile/dashboard/status/profile-completion`;\r\n  const mentorsUrl = `${baseUrl}/api/mentor/cards?page=0&size=10`;\r\n  const sessionsUrl = `${baseUrl}/api/calendar/dashboard/appointment/session-history`;\r\n  const lawyersUrl = `${baseUrl}/api/lawyer/lawyercards?page=0&size=10`;\r\n  // const alumniUrl = `${baseUrl}/api/dashboard/alumni`;\r\n  const batchUrl = `${baseUrl}/api/userprofile/dashboard/batchmates`;\r\n  const alumniUrl = `${baseUrl}/api/alumni/cards?page=0&size=10`;\r\n  const newSessionUrl = `${baseUrl}/api/calendar/dashboard/appointment/upcoming-bookedslots`;\r\n  const recentChatsDataUrl = `${baseUrl}/api/chat/recent-contact`;\r\n  const questionsUrl = `${baseUrl}/api/dashboard/latest`;\r\n  const joblistUrl = `${baseUrl}/api/posts/job-post/dashboard`;\r\n  const staylistUrl = `${baseUrl}/api/posts/stay-post/dashboard`;\r\n\r\n  // console.log(\"mentors\",mentors)\r\n  useEffect(() => {\r\n    const fetchProfileStatus = async () => {\r\n      try {\r\n        const response = await axios.get(profileStatusUrl);\r\n        setProfileStatus(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching profile status:\", error);\r\n      }\r\n    };\r\n    fetchProfileStatus();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchWalletBalance = async () => {\r\n      try {\r\n        const response = await axios.get(walletUrl);\r\n        setWalletBalance(response.data.balance);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching Balance:\", error);\r\n      }\r\n    };\r\n    fetchWalletBalance();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchRecentSessions = async () => {\r\n      try {\r\n        const response = await axios.get(sessionsUrl);\r\n        setRecentSessions(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching RecentSessions:\", error);\r\n      }\r\n    };\r\n    fetchRecentSessions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchMentors = async () => {\r\n      try {\r\n        const response = await axios.get(mentorsUrl);\r\n        setMentors(response.data.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching Mentors:\", error);\r\n      }\r\n    };\r\n    fetchMentors();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchBatchMates = async () => {\r\n      try {\r\n        const response = await axios.get(batchUrl);\r\n        setBatchMates(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching Mentors:\", error);\r\n      }\r\n    };\r\n    fetchBatchMates();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchLawyers = async () => {\r\n      try {\r\n        const response = await axios.get(lawyersUrl);\r\n        setLawyers(response.data.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching Lawyers:\", error);\r\n      }\r\n    };\r\n    fetchLawyers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchAlumni = async () => {\r\n      try {\r\n        const response = await axios.get(alumniUrl);\r\n        setAlumni(response.data.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching Alumni:\", error);\r\n      }\r\n    };\r\n    fetchAlumni();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchNewsession = async () => {\r\n      try {\r\n        const response = await axios.get(newSessionUrl);\r\n        setNewSession(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching Newsession:\", error);\r\n      }\r\n    };\r\n    fetchNewsession();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchRecentChats = async () => {\r\n      try {\r\n        const response = await axios.get(recentChatsDataUrl);\r\n        setRecentChats(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching RecentChats:\", error);\r\n      }\r\n    };\r\n    fetchRecentChats();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchLatestQuestions = async () => {\r\n      try {\r\n        const response = await axios.get(questionsUrl);\r\n        setDashboardQuestions(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching questions and answers\", error);\r\n      }\r\n    };\r\n    fetchLatestQuestions();\r\n  }, []);\r\n  useEffect(() => {\r\n    const fetchJobList = async () => {\r\n      try {\r\n        const response = await axios.get(joblistUrl);\r\n        setJobList(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching joblist status:\", error);\r\n      }\r\n    };\r\n    fetchJobList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchStayList = async () => {\r\n      try {\r\n        const response = await axios.get(staylistUrl);\r\n        setStaylist(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching Staylist status:\", error);\r\n      }\r\n    };\r\n    fetchStayList();\r\n  }, []);\r\n\r\n  const renderDots = () => {\r\n    // const total = React.Children.count(props.children);\r\n    const total = newSession.length;\r\n    const dots = [];\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < total; i++) {\r\n      dots.push(\r\n        <button\r\n          type=\"button\"\r\n          className={`glide__bullet slider-dot ${\r\n            i === currentSessionIndex ? \"bg-primary\" : \"bg-light\"\r\n          }`}\r\n          key={i}\r\n          data-glide-dir={`=${i}`}\r\n          onClick={() => setCurrentSessionIndex(i)}\r\n        />\r\n      );\r\n    }\r\n    return dots;\r\n  };\r\n  const renderMentorsDots = () => {\r\n    // const total = React.Children.count(props.children);\r\n    const total = mentors.length;\r\n    const dots = [];\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < total; i++) {\r\n      dots.push(\r\n        <button\r\n          type=\"button\"\r\n          className={`glide__bullet slider-dot ${\r\n            i === currentMentorIndex ? \"bg-primary\" : \"bg-light\"\r\n          }`}\r\n          key={i}\r\n          data-glide-dir={`=${i}`}\r\n          onClick={() => setCurrentMentorIndex(i)}\r\n        />\r\n      );\r\n    }\r\n    return dots;\r\n  };\r\n  const renderBatchMateDots = () => {\r\n    // const total = React.Children.count(props.children);\r\n    const total = batchMates.length;\r\n    const dots = [];\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < total; i++) {\r\n      dots.push(\r\n        <button\r\n          type=\"button\"\r\n          className={`glide__bullet slider-dot ${\r\n            i === currentBatchMateIndex ? \"bg-primary\" : \"bg-light\"\r\n          }`}\r\n          key={i}\r\n          data-glide-dir={`=${i}`}\r\n          onClick={() => setCurrentBatchMateIndex(i)}\r\n        />\r\n      );\r\n    }\r\n    return dots;\r\n  };\r\n  const renderLawyerDots = () => {\r\n    // const total = React.Children.count(props.children);\r\n    const total = lawyers.length;\r\n    const dots = [];\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < total; i++) {\r\n      dots.push(\r\n        <button\r\n          type=\"button\"\r\n          className={`glide__bullet slider-dot ${\r\n            i === currentLawyerIndex ? \"bg-primary\" : \"bg-light\"\r\n          }`}\r\n          key={i}\r\n          data-glide-dir={`=${i}`}\r\n          onClick={() => setCurrentLawyerIndex(i)}\r\n        />\r\n      );\r\n    }\r\n    return dots;\r\n  };\r\n  const renderAlumniDots = () => {\r\n    // const total = React.Children.count(props.children);\r\n    const total = alumni.length;\r\n    const dots = [];\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < total; i++) {\r\n      dots.push(\r\n        <button\r\n          type=\"button\"\r\n          className={`glide__bullet slider-dot ${\r\n            i === currentAlumniIndex ? \"bg-primary\" : \"bg-light\"\r\n          }`}\r\n          key={i}\r\n          data-glide-dir={`=${i}`}\r\n          onClick={() => setCurrentAlumniIndex(i)}\r\n        />\r\n      );\r\n    }\r\n    return dots;\r\n  };\r\n\r\n  const renderJobListDots = () => {\r\n    // const total = React.Children.count(props.children);\r\n    const total = jobList.length;\r\n    const dots = [];\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < total; i++) {\r\n      dots.push(\r\n        <button\r\n          type=\"button\"\r\n          className={`glide__bullet slider-dot ${\r\n            i === currentJobIndex ? \"bg-primary\" : \"bg-light\"\r\n          }`}\r\n          key={i}\r\n          data-glide-dir={`=${i}`}\r\n          onClick={() => setCurrentJobIndex(i)}\r\n        />\r\n      );\r\n    }\r\n    return dots;\r\n  };\r\n\r\n  const renderStayListDots = () => {\r\n    // const total = React.Children.count(props.children);\r\n    const total = stayList.length;\r\n    const dots = [];\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < total; i++) {\r\n      dots.push(\r\n        <button\r\n          type=\"button\"\r\n          className={`glide__bullet slider-dot ${\r\n            i === currentStayIndex ? \"bg-primary\" : \"bg-light\"\r\n          }`}\r\n          key={i}\r\n          data-glide-dir={`=${i}`}\r\n          onClick={() => setCurrentStayIndex(i)}\r\n        />\r\n      );\r\n    }\r\n    return dots;\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentSessionIndex((prevIndex) =>\r\n      prevIndex > 0 ? prevIndex - 1 : newSession.length - 1\r\n    );\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentSessionIndex((prevIndex) =>\r\n      prevIndex < newSession.length - 1 ? prevIndex + 1 : 0\r\n    );\r\n  };\r\n\r\n  const handleMentorPrevious = () => {\r\n    setCurrentMentorIndex((prevIndex) =>\r\n      prevIndex > 0 ? prevIndex - 1 : mentors.length - 1\r\n    );\r\n  };\r\n\r\n  const handleMentorNext = () => {\r\n    setCurrentMentorIndex((prevIndex) =>\r\n      prevIndex < mentors.length - 1 ? prevIndex + 1 : 0\r\n    );\r\n  };\r\n\r\n  const handleBatchMatePrevious = () => {\r\n    setCurrentBatchMateIndex((prevIndex) =>\r\n      prevIndex > 0 ? prevIndex - 1 : batchMates.length - 1\r\n    );\r\n  };\r\n\r\n  const handleBatchMateNext = () => {\r\n    setCurrentBatchMateIndex((prevIndex) =>\r\n      prevIndex < batchMates.length - 1 ? prevIndex + 1 : 0\r\n    );\r\n  };\r\n\r\n  const handleLawyerPrevious = () => {\r\n    setCurrentLawyerIndex((prevIndex) =>\r\n      prevIndex > 0 ? prevIndex - 1 : lawyers.length - 1\r\n    );\r\n  };\r\n\r\n  const handleLawyerNext = () => {\r\n    setCurrentLawyerIndex((prevIndex) =>\r\n      prevIndex < lawyers.length - 1 ? prevIndex + 1 : 0\r\n    );\r\n  };\r\n\r\n  const handleAlumniPrevious = () => {\r\n    setCurrentAlumniIndex((prevIndex) =>\r\n      prevIndex > 0 ? prevIndex - 1 : alumni.length - 1\r\n    );\r\n  };\r\n\r\n  const handleAlumniNext = () => {\r\n    setCurrentAlumniIndex((prevIndex) =>\r\n      prevIndex < alumni.length - 1 ? prevIndex + 1 : 0\r\n    );\r\n  };\r\n\r\n  // const handleJobPrevious = () => {\r\n  //   setCurrentJobIndex((prevIndex) =>\r\n  //     prevIndex > 0 ? prevIndex - 1 : jobList.length - 1\r\n  //   );\r\n  // };\r\n\r\n  // const handleJobNext = () => {\r\n  //   setCurrentJobIndex((prevIndex) =>\r\n  //     prevIndex < alumni.length - 1 ? prevIndex + 1 : 0\r\n  //   );\r\n  // };\r\n\r\n  const currentSession = newSession[currentSessionIndex];\r\n  const currentMentor = mentors[currentMentorIndex];\r\n  // const currentMentor = mentors && currentMentorIndex >= 0 && currentMentorIndex < mentors.length ? mentors[currentMentorIndex] : null;\r\n  const currentLawyer = lawyers[currentLawyerIndex];\r\n  // const currentLawyer = lawyers && currentLawyerIndex >= 0 && currentLawyerIndex < lawyers.length ? lawyers[currentLawyerIndex] : null;\r\n\r\n  const currentAlumni = alumni[currentAlumniIndex];\r\n  const currentJobList = jobList[currentJobIndex];\r\n  const currentStayList = stayList[currentStayIndex];\r\n  const currentBatchMate = batchMates[currentBatchMateIndex];\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentSessionIndex((prevIndex) =>\r\n        prevIndex < newSession.length - 1 ? prevIndex + 1 : 0\r\n      );\r\n    }, 3300);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentMentorIndex((prevIndex) =>\r\n        prevIndex < mentors.length - 1 ? prevIndex + 1 : 0\r\n      );\r\n    }, 3600);\r\n    return () => clearInterval(interval);\r\n  }, [mentors]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentBatchMateIndex((prevIndex) =>\r\n        prevIndex < batchMates.length - 1 ? prevIndex + 1 : 0\r\n      );\r\n    }, 3000);\r\n    return () => clearInterval(interval);\r\n  }, [batchMates]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentLawyerIndex((prevIndex) =>\r\n        prevIndex < lawyers.length - 1 ? prevIndex + 1 : 0\r\n      );\r\n    }, 3600);\r\n    return () => clearInterval(interval);\r\n  }, [lawyers]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentAlumniIndex((prevIndex) =>\r\n        prevIndex < alumni.length - 1 ? prevIndex + 1 : 0\r\n      );\r\n    }, 3800);\r\n    return () => clearInterval(interval);\r\n  }, [alumni]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentJobIndex((prevIndex) =>\r\n        prevIndex < jobList.length - 1 ? prevIndex + 1 : 0\r\n      );\r\n    }, 3800);\r\n    return () => clearInterval(interval);\r\n  }, [jobList]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentStayIndex((prevIndex) =>\r\n        prevIndex < stayList.length - 1 ? prevIndex + 1 : 0\r\n      );\r\n    }, 3800);\r\n    return () => clearInterval(interval);\r\n  }, [stayList]);\r\n\r\n  const formatDate = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return `${String(date.getDate()).padStart(2, \"0\")}-${String(\r\n      date.getMonth() + 1\r\n    ).padStart(2, \"0\")}-${date.getFullYear()}`;\r\n  };\r\n\r\n  const handleViewMentors = () => history.push(\"/app/mentor/list\");\r\n  const handleViewLawyers = () => history.push(\"/app/lawyer/list\");\r\n  const handleViewAlumnis = () => history.push(\"/app/alumni/alumnilists\");\r\n  const handleWalletClick = () => history.push(\"/app/mywallet\");\r\n  const handleProfileClick = () => history.push(\"/app/user/myprofile\");\r\n  const handleNewSessionClick = () => history.push(\"/app/sessionlists\");\r\n  const handleViewBatchmates = () => history.push(\"/app/student/list\");\r\n\r\n  console.log(\"Current Mentor:\", currentMentor);\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"mx-auto\" style={{ maxWidth: \"1000px\" }}>\r\n        <Col xs={12} lg={12} className=\"mb-3 mb-lg-0\">\r\n          <div className=\"form-group\">\r\n            <div className=\"input-group\">\r\n              <div\r\n                style={{ position: \"relative\" }}\r\n                className=\"col-12 col-lg-12 col-md-12\"\r\n              >\r\n                <i\r\n                  className=\"simple-icon-magnifier mr-3\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: \"50%\",\r\n                    right: \"15px\",\r\n                    transform: \"translateY(-50%)\",\r\n                    zIndex: 2,\r\n                    color: \"#aaa\",\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control rounded p-2\"\r\n                  placeholder=\"Search by Category\"\r\n                  value={inputkey}\r\n                  onChange={(e) => setInputKey(e.target.value)}\r\n                  // style={{ paddingRight: \"2.5rem\" }}\r\n                  onClick={() => setModalBasic(true)}\r\n                />\r\n\r\n                <Modal\r\n                  isOpen={modalBasic}\r\n                  toggle={() => setModalBasic(!modalBasic)}\r\n                >\r\n                  <ModalHeader>\r\n                    <h1>Category</h1>\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <Label>Category</Label>\r\n                    <Select\r\n                      components={{ Input: CustomSelectInput }}\r\n                      className=\"react-select\"\r\n                      classNamePrefix=\"react-select\"\r\n                      name=\"form-field-name\"\r\n                      value={selectedCategory}\r\n                      onChange={setSelectedCategory}\r\n                      options={SelectedCategoryOptions}\r\n                    />\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      onClick={() => setModalBasic(false)}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mx-auto\" style={{ maxWidth: \"1000px\" }}>\r\n        <Col xs={12} lg={3} className=\"mb-3 mb-lg-0\">\r\n          <Card\r\n            className=\"h-100\"\r\n            style={{\r\n              background: \"linear-gradient(to right, #7B42C5, #AA5D93)\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            <div className=\"p-3 d-flex flex-column h-100\">\r\n              <Row className=\"d-flex align-items-center justify-content-between\">\r\n                <Col>\r\n                  <h3 className=\"mb-2 fw-bold\">Profile Status</h3>\r\n                </Col>\r\n                <Col className=\"col-auto\" xs=\"auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"icon-button\"\r\n                    color=\"light\"\r\n                    onClick={handleProfileClick}\r\n                    style={{\r\n                      padding: \"0.05rem 0.15rem\",\r\n                      fontSize: \"0.4rem\",\r\n                      borderRadius: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      width: \"1.5rem\",\r\n                      height: \"1.5rem\",\r\n                      minWidth: \"1.5rem\",\r\n                      minHeight: \"1.5rem\",\r\n                      border: \"none\",\r\n                      outline: \"none\",\r\n                    }}\r\n                  >\r\n                    <i\r\n                      className=\"simple-icon-pencil text-primary\"\r\n                      style={{ fontSize: \"0.6rem\" }}\r\n                    />\r\n                  </button>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"mt-auto\">\r\n                <h1 className=\"mb-0 fw-bold display-6\">\r\n                  {profileStatus.percentage}{\" \"}\r\n                </h1>\r\n                <span> % completed</span>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n        <Col xs={12} lg={3} className=\"mb-3 mb-lg-0\">\r\n          <Card\r\n            className=\"h-100\"\r\n            style={{\r\n              background: \"linear-gradient(to right, #7B42C5, #AA5D93)\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            <div className=\"p-3 d-flex flex-column h-100\">\r\n              <Row className=\"d-flex align-items-center justify-content-between\">\r\n                <Col>\r\n                  <h3 className=\"mb-2 fw-bold\">Wallet Balance</h3>\r\n                </Col>\r\n                <Col className=\"col-auto\" xs=\"auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"icon-button\"\r\n                    color=\"light\"\r\n                    onClick={handleWalletClick}\r\n                    style={{\r\n                      padding: \"0.05rem 0.15rem\",\r\n                      fontSize: \"0.4rem\",\r\n                      borderRadius: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      width: \"1.5rem\",\r\n                      height: \"1.5rem\",\r\n                      minWidth: \"1.5rem\",\r\n                      minHeight: \"1.5rem\",\r\n                      border: \"none\",\r\n                      outline: \"none\",\r\n                    }}\r\n                  >\r\n                    {/* <i className=\"iconsminds-add text-primary\" style={{ fontSize: '0.8rem' }} /> */}\r\n                    <span\r\n                      className=\"text-primary\"\r\n                      style={{ fontSize: \"0.9rem\" }}\r\n                    >\r\n                      <strong>+</strong>\r\n                    </span>\r\n                  </button>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"mt-auto\">\r\n                <h1 className=\"mb-0 fw-bold display-6\">₹{walletBalance} </h1>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n        <Col xs={12} lg={6} className=\"mb-3 mb-lg-0\">\r\n          <Card className=\"h-100\">\r\n            <div className=\"p-3 d-flex flex-column h-100\">\r\n              <Row className=\"\">\r\n                <Col>\r\n                  {\" \"}\r\n                  <h3 className=\"mb-3 fw-bold\">New Session</h3>\r\n                </Col>\r\n                {currentSession && currentSession.length > 1 && (\r\n                  <Col className=\"d-flex justify-content-end\">\r\n                    <button\r\n                      onClick={handlePrevious}\r\n                      type=\"button\"\r\n                      className=\" left-arrow btn btn-link btn-xs\"\r\n                      style={{ textDecoration: \"none\", padding: \"5px\" }}\r\n                      // data-glide-dir=\"<\"\r\n                    >\r\n                      <i className=\"simple-icon-arrow-left\" />\r\n                    </button>\r\n                    <button\r\n                      onClick={handleNext}\r\n                      type=\"button\"\r\n                      className=\"glide__arrow glide__arrow--right right-arrow btn btn-link btn-xs\"\r\n                      data-glide-dir=\">\"\r\n                      style={{ textDecoration: \"none\", padding: \"5px\" }}\r\n                    >\r\n                      <i className=\"simple-icon-arrow-right\" />\r\n                    </button>\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n              {currentSession ? (\r\n                <TransitionGroup>\r\n                  <CSSTransition classNames=\"card\" timeout={500}>\r\n                    <div className=\"d-flex flex-row mt-auto glide-item card-transition\">\r\n                      <img\r\n                        className=\"rounded-circle me-3\"\r\n                        alt=\"Profile\"\r\n                        src={`${baseUrl}/${currentSession.imageUrl}`}\r\n                        style={{\r\n                          width: \"40px\",\r\n                          height: \"40px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                      />\r\n                      <div className=\"d-flex flex-grow-1 min-width-zero\">\r\n                        <div className=\"pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\r\n                          <div className=\"min-width-zero ml-2\">\r\n                            <h4 className=\"mb-1\">{currentSession.name}</h4>\r\n                            <h5 className=\"text-muted text-small mb-0\">\r\n                              {currentSession.chatStatus}\r\n                            </h5>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <Col xs=\"auto\">\r\n                        <Button\r\n                          onClick={() => handleNewSessionClick()}\r\n                          color=\"primary\"\r\n                          size=\"xs\"\r\n                          outline\r\n                        >\r\n                          <span>\r\n                            <TimestampConverter\r\n                              timeStamp={currentSession.fromTimeStamp}\r\n                              format=\"datetime\"\r\n                            />\r\n                          </span>\r\n                        </Button>\r\n                      </Col>\r\n                    </div>\r\n                  </CSSTransition>\r\n                </TransitionGroup>\r\n              ) : (\r\n                <div className=\"d-flex justify-content-center\">\r\n                  There is no new sessions\r\n                </div>\r\n              )}\r\n              <div className=\"d-flex justify-content-center\">\r\n                <div\r\n                  className=\"glide__bullets slider-dot-container\"\r\n                  data-glide-el=\"controls[nav]\"\r\n                >\r\n                  {renderDots()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mx-auto my-4 \" style={{ maxWidth: \"1000px\" }}>\r\n        <Colxx md=\"6\" sm=\"6\" lg=\"4\" xxs=\"12\">\r\n          <Card className=\"mb-2\">\r\n            {currentMentor && (\r\n              <CardBody>\r\n                <Row className=\"mb-3 align-items-center\">\r\n                  <Col>\r\n                    <h3 className=\"mb-0 fw-bold\">\r\n                      <strong>Mentors</strong>\r\n                    </h3>\r\n                  </Col>\r\n                  <Col xs=\"auto\">\r\n                    <Button\r\n                      size=\"xs\"\r\n                      color=\"primary\"\r\n                      onClick={handleViewMentors}\r\n                    >\r\n                      <span>View all</span>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <div className=\"text-center\">\r\n                  <Row>\r\n                    <Col className=\"d-flex align-items-center\">\r\n                      <button\r\n                        onClick={handleMentorPrevious}\r\n                        type=\"button\"\r\n                        className=\"glide__arrow glide__arrow--left left-arrow btn btn-link btn-xs\"\r\n                        data-glide-dir=\"<\"\r\n                        style={{ textDecoration: \"none\" }}\r\n                      >\r\n                        <i className=\"simple-icon-arrow-left\" />\r\n                      </button>\r\n                    </Col>\r\n                    <Col className=\"d-flex justify-content-center align-items-center\">\r\n                      {/* <CardImg\r\n                  top\r\n                  src={`${baseUrl}/${currentMentor.imageUrl}`}\r\n                  alt=\"Card image cap\"\r\n                  className=\"img-thumbnail border-0 rounded-circle mb-2 list-thumbnail\"\r\n                /> */}\r\n                      {!currentMentor.imageUrl ? (\r\n                        <ThumbnailLetters\r\n                          // small\r\n                          rounded\r\n                          text={currentMentor.firstName}\r\n                          className=\"mx-2 mb-3\"\r\n                          color=\"secondary\"\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          src={`${baseUrl}/${currentMentor.imageUrl}`}\r\n                          className=\" rounded-circle mb-2\"\r\n                          style={{\r\n                            width: \"90px\",\r\n                            height: \"90px\",\r\n                            objectFit: \"cover\",\r\n                            overflow: \"hidden\",\r\n                          }}\r\n                          alt=\"img\"\r\n                        />\r\n                      )}\r\n                    </Col>\r\n                    <Col className=\"d-flex align-items-center justify-content-end\">\r\n                      <button\r\n                        onClick={handleMentorNext}\r\n                        type=\"button\"\r\n                        className=\"glide__arrow glide__arrow--right right-arrow btn btn-link btn-xs\"\r\n                        data-glide-dir=\">\"\r\n                        style={{ textDecoration: \"none\" }}\r\n                      >\r\n                        <i className=\"simple-icon-arrow-right\" />\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                  <NavLink to=\"#\">\r\n                    <h3 className=\"mb-0\">\r\n                      <strong>\r\n                        {currentMentor.firstName} {currentMentor.lastName}\r\n                      </strong>\r\n                    </h3>\r\n                  </NavLink>\r\n                  <CardText className=\"text-muted text-small mb-2\">\r\n                    {currentMentor.jobTitle} | {currentMentor.company}\r\n                  </CardText>\r\n                  <span>\r\n                    {currentMentor.experience === undefined ||\r\n                    currentMentor.experience === 0\r\n                      ? \"No experience\"\r\n                      : `${currentMentor.experience} years of experience`}\r\n                  </span>\r\n\r\n                  <div className=\"separator mb-2 mt-2\" />\r\n                  <h3 className=\"mb-0 fw-bold\">\r\n                    <strong>\r\n                      ₹{Math.floor(currentMentor.price).toLocaleString()}/hr\r\n                    </strong>\r\n                  </h3>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <div\r\n                    className=\"glide__bullets slider-dot-container\"\r\n                    data-glide-el=\"controls[nav]\"\r\n                  >\r\n                    {renderMentorsDots()}\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            )}\r\n          </Card>\r\n        </Colxx>\r\n        <Colxx md=\"6\" sm=\"6\" lg=\"4\" xxs=\"12\">\r\n          <Card className=\"mb-2\">\r\n            <CardBody>\r\n              <Row className=\"mb-3 align-items-center\">\r\n                <Col>\r\n                  <h3 className=\"mb-0 fw-bold\">\r\n                    <strong>Lawyers</strong>\r\n                  </h3>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Button size=\"xs\" color=\"primary\" onClick={handleViewLawyers}>\r\n                    <span>View all</span>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"text-center\">\r\n                <Row>\r\n                  <Col className=\"d-flex align-items-center\">\r\n                    <button\r\n                      onClick={handleLawyerPrevious}\r\n                      type=\"button\"\r\n                      className=\"glide__arrow glide__arrow--left left-arrow btn btn-link btn-xs\"\r\n                      data-glide-dir=\"<\"\r\n                      style={{ textDecoration: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-arrow-left\" />\r\n                    </button>\r\n                  </Col>\r\n                  <Col className=\"d-flex justify-content-center align-items-center\">\r\n                    {/* <CardImg\r\n                  top\r\n                  src={currentLawyer.imageUrl}\r\n                  alt=\"Card image cap\"\r\n                  className=\"img-thumbnail border-0 rounded-circle mb-2 list-thumbnail\"\r\n                /> */}\r\n                    {!currentLawyer.imageUrl ? (\r\n                      <ThumbnailLetters\r\n                        // small\r\n                        rounded\r\n                        text={currentLawyer.firstName}\r\n                        className=\"mx-2 mb-3\"\r\n                        color=\"secondary\"\r\n                      />\r\n                    ) : (\r\n                      <img\r\n                        src={`${baseUrl}/${currentLawyer.imageUrl}`}\r\n                        className=\" rounded-circle mb-2\"\r\n                        style={{\r\n                          width: \"90px\",\r\n                          height: \"90px\",\r\n                          objectFit: \"cover\",\r\n                          overflow: \"hidden\",\r\n                        }}\r\n                        alt=\"img\"\r\n                      />\r\n                    )}\r\n                  </Col>\r\n                  <Col className=\"d-flex align-items-center justify-content-end\">\r\n                    <button\r\n                      onClick={handleLawyerNext}\r\n                      type=\"button\"\r\n                      className=\"glide__arrow glide__arrow--right right-arrow btn btn-link btn-xs\"\r\n                      data-glide-dir=\">\"\r\n                      style={{ textDecoration: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-arrow-right\" />\r\n                    </button>\r\n                  </Col>\r\n                </Row>\r\n                <NavLink to=\"#\">\r\n                  <h3 className=\"mb-0\">\r\n                    <strong>\r\n                      {currentLawyer.firstName} {currentLawyer.lastName}\r\n                    </strong>\r\n                  </h3>\r\n                </NavLink>\r\n                {!currentLawyer === null ? (\r\n                  <CardText className=\"text-muted text-small mb-2 text-truncate\">\r\n                    {currentLawyer.services.map((s, index) => (\r\n                      <>\r\n                        <span key={s}>{s}</span>\r\n                        {index < currentLawyer.services.length - 1 && \" | \"}\r\n                      </>\r\n                    ))}\r\n                  </CardText>\r\n                ) : (\r\n                  <CardText className=\"text-muted text-small mb-2 text-truncate\">\r\n                    No services\r\n                  </CardText>\r\n                )}\r\n                <span className=\"text-truncate\">\r\n                  {currentLawyer.languages.length > 0 ? (\r\n                    currentLawyer.languages.map((lang, index) => (\r\n                      <React.Fragment key={lang}>\r\n                        <span>\r\n                          {language.find((l) => l.iso_code === lang)?.name}\r\n                        </span>\r\n                        {index < currentLawyer.languages.length - 1 && \" | \"}\r\n                      </React.Fragment>\r\n                    ))\r\n                  ) : (\r\n                    <span>-</span>\r\n                  )}\r\n                </span>\r\n                <div className=\"separator mb-2 mt-2\" />\r\n                <h3 className=\"mb-0 fw-bold\">\r\n                  <strong>\r\n                    ₹{Math.floor(currentLawyer.price).toLocaleString()}/mo\r\n                  </strong>\r\n                </h3>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <div\r\n                  className=\"glide__bullets slider-dot-container\"\r\n                  data-glide-el=\"controls[nav]\"\r\n                >\r\n                  {renderLawyerDots()}\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n        <Colxx md=\"6\" sm=\"6\" lg=\"4\" xxs=\"12\">\r\n          <Card className=\"mb-2\">\r\n            <CardBody>\r\n              <Row className=\"mb-3 align-items-center\">\r\n                <Col>\r\n                  <h3 className=\"mb-0 fw-bold\">\r\n                    <strong>Alumni</strong>\r\n                  </h3>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Button size=\"xs\" color=\"primary\" onClick={handleViewAlumnis}>\r\n                    <span>View all</span>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"text-center\">\r\n                <Row>\r\n                  <Col className=\"d-flex align-items-center\">\r\n                    <button\r\n                      onClick={handleAlumniPrevious}\r\n                      type=\"button\"\r\n                      className=\"glide__arrow glide__arrow--left left-arrow btn btn-link btn-xs\"\r\n                      data-glide-dir=\"<\"\r\n                      style={{ textDecoration: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-arrow-left\" />\r\n                    </button>\r\n                  </Col>\r\n                  <Col className=\"d-flex justify-content-center align-items-center\">\r\n                    {/* <CardImg\r\n                  top\r\n                  src={currentAlumni.imageUrl}\r\n                  alt=\"Card image cap\"\r\n                  className=\"img-thumbnail border-0 rounded-circle mb-2 list-thumbnail\"\r\n                /> */}\r\n                    {!currentAlumni.imageUrl ? (\r\n                      <ThumbnailLetters\r\n                        // small\r\n                        rounded\r\n                        text={currentAlumni.firstName}\r\n                        className=\"mx-2 mb-3\"\r\n                        color=\"secondary\"\r\n                      />\r\n                    ) : (\r\n                      <img\r\n                        // src={currentAlumni.imageUrl}\r\n                        src={`${baseUrl}/${currentAlumni.imageUrl}`}\r\n                        className=\" rounded-circle mb-2\"\r\n                        style={{\r\n                          width: \"90px\",\r\n                          height: \"90px\",\r\n                          objectFit: \"cover\",\r\n                          overflow: \"hidden\",\r\n                        }}\r\n                        alt=\"img\"\r\n                      />\r\n                    )}\r\n                  </Col>\r\n                  <Col className=\"d-flex align-items-center justify-content-end\">\r\n                    <button\r\n                      onClick={handleAlumniNext}\r\n                      type=\"button\"\r\n                      className=\"glide__arrow glide__arrow--right right-arrow btn btn-link btn-xs\"\r\n                      data-glide-dir=\">\"\r\n                      style={{ textDecoration: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-arrow-right\" />\r\n                    </button>\r\n                  </Col>\r\n                </Row>\r\n                <NavLink to=\"#\">\r\n                  <h3 className=\"mb-0\">\r\n                    <strong>{currentAlumni.firstName}</strong>\r\n                  </h3>\r\n                </NavLink>\r\n                <CardText className=\"text-muted text-small mb-2\">\r\n                  {currentAlumni.jobTitle} | {currentAlumni.company}\r\n                </CardText>\r\n                <span>{currentAlumni.experienceYears} years of experience</span>\r\n                <div className=\"separator mb-2 mt-2\" />\r\n                <h3 className=\"mb-0 fw-bold\">\r\n                  <strong>\r\n                    ₹{Math.floor(currentAlumni.price).toLocaleString()}/mo\r\n                  </strong>\r\n                </h3>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <div\r\n                  className=\"glide__bullets slider-dot-container\"\r\n                  data-glide-el=\"controls[nav]\"\r\n                >\r\n                  {renderAlumniDots()}\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n      {/* job and stay listing starts */}\r\n      <Row className=\"mx-auto  \" style={{ maxWidth: \"1000px\" }}>\r\n        <Colxx lg=\"6\" md=\"12\" sm=\"12\">\r\n          <Card className=\"mb-2\" style={{ height: \"500px\" }}>\r\n            {currentStayList ? (\r\n              <CardBody>\r\n                <div className=\"p-4 position-relative\">\r\n                  <Button\r\n                    className=\"rounded-circle px-2 py-0   text-one bg-white position-absolute \"\r\n                    style={{\r\n                      border: \"3px solid #a16390\",\r\n                      top: \"30px\",\r\n                      right: \"30px\",\r\n                      cursor: \"pointer\",\r\n                      zIndex: 10,\r\n                    }}\r\n                    // onClick={toggleOwnerInfo}\r\n                  >\r\n                    <i\r\n                      className=\"fa-solid fa-user\"\r\n                      color=\"secondary\"\r\n                      style={{ color: \"#a16390\" }}\r\n                    />\r\n                  </Button>\r\n                  <CardImg\r\n                    top\r\n                    // src=\"/assets/img/cards/thumb-1.jpg\"\r\n                    // src=\"https://images.pexels.com/photos/106399/pexels-photo-106399.jpeg\"\r\n                    src={\r\n                      currentStayList.images.length > 0\r\n                        ? `${baseUrl}/${currentStayList.images[0].imageUrl}` // Use the first image URL\r\n                        : \"https://via.placeholder.com/300x200?text=No+Image\" // Fallback image\r\n                    }\r\n                    alt=\"Card image cap\"\r\n                    className=\"mb-2\"\r\n                    style={{ height: \"250px\", objectFit: \"fill\" }}\r\n                    // style={{\r\n                    //   opacity: isOwnerInfoVisible ? 0.1 : 1, // Reduce opacity when info is visible\r\n                    //   transition: \"opacity 0.3s ease-in-out\", // Add a transition effect\r\n                    // }}\r\n                  />\r\n\r\n                  {/* <span\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"100px\",\r\n                  right: \"80px\",\r\n\r\n                  padding: \"10px\",\r\n                  borderRadius: \"5px\",\r\n                  \r\n                }}\r\n                className=\"font-weight-bold\"\r\n              >\r\n                <h2 className=\"text-large\">Owner: Prakash Raj</h2>\r\n                <h4 className=\"\">\r\n                  \r\n                  <i className=\"fa-solid fa-phone mr-2\" />\r\n                  9876543210\r\n                </h4>\r\n                <h4\r\n                  className=\"d-inline-flex align-items-center\"\r\n                  style={{ display: \"inline-flex\" }}\r\n                >\r\n               \r\n                  <i className=\"fa-solid fa-envelope mr-2\" /> prakash@gmail.com\r\n                </h4>\r\n              </span> */}\r\n\r\n                  <Row>\r\n                    <Col xs=\"12\" sm=\"12\" className=\"d-flex align-items-center\">\r\n                      <h3 className=\"font-weight-bold mt-2 text-one \">\r\n                        Rent: <span className=\"text-primary\">₹</span>\r\n                        <span data-toggle=\"tooltip\" title=\"Expected Rent\">\r\n                          {currentStayList.expectedRent}\r\n                        </span>\r\n                      </h3>\r\n                      <Button\r\n                        color=\"light\"\r\n                        className=\" font-weight-semibold mx-2\"\r\n                        size=\"xs\"\r\n                      >\r\n                        {currentStayList.apartmentType}\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  {/* icons tstart */}\r\n                  <Row className=\"my-2\">\r\n                    <Col className=\"d-flex flex-wrap\">\r\n                      <Button\r\n                        color=\"light\"\r\n                        className=\"font-weight-bold mr-1 my-1\"\r\n                        size=\"sm\"\r\n                      >\r\n                        <i className=\"fas fa-bed \" />{\" \"}\r\n                        {currentStayList.bhkTypeValue}\r\n                      </Button>\r\n                      <Button\r\n                        color=\"light\"\r\n                        className=\"font-weight-bold m-1\"\r\n                        size=\"sm\"\r\n                      >\r\n                        <i className=\"fa-solid fa-shower\" />{\" \"}\r\n                        {currentStayList.bhkTypeValue}\r\n                      </Button>\r\n                      <Button\r\n                        color=\"light\"\r\n                        className=\"font-weight-bold m-1\"\r\n                        size=\"sm\"\r\n                      >\r\n                        <i className=\"fa-solid fa-car\" />{\" \"}\r\n                        {currentStayList.parkingValue}\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  {/* icons end */}\r\n\r\n                  <Row className=\"mt-2\">\r\n                    <Col className=\"text-start text-sm-left\" xs={12} sm={6}>\r\n                      <div className=\"text-muted mt-2\">\r\n                        {/* {data.interestedCount} liked this property */}{\" \"}\r\n                        {currentStayList.interestedCount} liked this property\r\n                      </div>\r\n                    </Col>\r\n                    <Col\r\n                      className=\"text-sm-right texr-start mt-sm-0 mt-2\"\r\n                      xs={12}\r\n                      sm={6}\r\n                    >\r\n                      <Button\r\n                        // onClick={() => handleInterestedButtonClick(data.id)}\r\n                        outline\r\n                        color=\"primary\"\r\n                        size=\"xs\"\r\n                        // active={data.loggedInUserInterested}\r\n                      >\r\n                        I&apos;m interested\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <div\r\n                    className=\"glide__bullets slider-dot-container\"\r\n                    data-glide-el=\"controls[nav]\"\r\n                  >\r\n                    {renderStayListDots()}\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            ) : (\r\n              <CardBody className=\"h-100 d-flex justify-content-center align-items-center\">\r\n                <h1 className=\"text-center mx-auto\">There is no stay list</h1>\r\n              </CardBody>\r\n            )}\r\n          </Card>\r\n        </Colxx>\r\n        {/* <Colxx lg=\"6\" md=\"6\">\r\n          <Card className=\" my-2\">\r\n            <CardBody className=\"p-3\">\r\n              <CardImg\r\n                top\r\n                \r\n                src=\"https://images.pexels.com/photos/269077/pexels-photo-269077.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\"\r\n                alt=\"Card image cap\"\r\n                style={{ height: \"250px\" }}\r\n              />\r\n\r\n              <Row>\r\n                <Col>\r\n                  <h3 className=\"font-weight-bold mt-2 text-large\">\r\n                    developer\r\n                  </h3>\r\n                  <h6>TCS</h6>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col>\r\n                  <Button\r\n                    color=\"light\"\r\n                    className=\"mb-2 font-weight-semibold\"\r\n                    size=\"xs\"\r\n                  >\r\n                    job\r\n                  </Button>\r\n                  <Button\r\n                    color=\"light\"\r\n                    className=\"mb-2 font-weight-semibold mx-1\"\r\n                    size=\"xs\"\r\n                  >\r\n                    fresher\r\n                  </Button>\r\n                  <Button\r\n                    color=\"light\"\r\n                    className=\"mb-2 font-weight-semibold mx-1\"\r\n                    size=\"xs\"\r\n                  >\r\n                    fffffff\r\n                  </Button>\r\n                  <Button\r\n                    color=\"light\"\r\n                    className=\"mb-2 font-weight-semibold mx-1\"\r\n                    size=\"xs\"\r\n                  >\r\n                    chennai\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mt-2 text-one\">\r\n                <Col className=\"\" xs={12} sm={8}>\r\n                  <span className=\"text-muted \">\r\n                    Posted on\r\n                    <TimestampConverter\r\n                                timeStamp={data.postedOn}\r\n                                format=\"datetime\"\r\n                              />\r\n                  </span>\r\n                </Col>\r\n                <Col\r\n                  // className=\"text-sm-right text-start mt-sm-0 mt-2\"\r\n                  className=\"d-flex justify-content-sm-end justify-content-start align-items-center mt-sm-0 mt-2\"\r\n                  xs={12}\r\n                  sm={4}\r\n                >\r\n                  <Button\r\n                    outline\r\n                    // className=\"d-none d-lg-block\"\r\n                    color=\"primary\"\r\n                    size=\"xs\"\r\n                  >\r\n                    I&apos;m interested\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx> */}\r\n        <Colxx lg=\"6\" md=\"12\" sm=\"12\">\r\n          <Card className=\"mb-2\" style={{ height: \"500px\" }}>\r\n            {currentJobList ? (\r\n              <CardBody>\r\n                <div className=\"text-center d-flex justify-content-center align-items-center\">\r\n                  <Row>\r\n                    {/* <Col className=\"text-center d-flex align-items-center\">\r\n                      <button\r\n                        onClick={handleJobPrevious}\r\n                        type=\"button\"\r\n                        className=\"glide__arrow glide__arrow--left left-arrow btn btn-link btn-xs\"\r\n                        data-glide-dir=\"<\"\r\n                        style={{ textDecoration: \"none\" }}\r\n                      >\r\n                        <i className=\"simple-icon-arrow-left\" />\r\n                      </button>\r\n                    </Col> */}\r\n                    <Col md={12}>\r\n                      <div className=\"\">\r\n                        <CardImg\r\n                          top\r\n                          // src=\"/assets/img/cards/thumb-1.jpg\"\r\n                          // src=\"https://images.pexels.com/photos/269077/pexels-photo-269077.jpeg\"\r\n                          src={\r\n                            currentJobList?.image?.imageUrl\r\n                              ? `${baseUrl}/${currentJobList.image.imageUrl}`\r\n                              : \"https://placehold.co/300x200?text=No%20Image\" // Fallback image\r\n                          }\r\n                          alt=\"Card image cap\"\r\n                          style={{ height: \"250px\", objectFit: \"fill\" }}\r\n                        />\r\n\r\n                        <Row>\r\n                          <Col>\r\n                            <h3 className=\"font-weight-bold mt-2 text-large\">\r\n                              {currentJobList.jobTitle}\r\n                            </h3>\r\n                            <h6>{currentJobList.company}</h6>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                          <Col>\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"mb-2 font-weight-semibold\"\r\n                              size=\"xs\"\r\n                            >\r\n                              {currentJobList.jobTitle}\r\n                            </Button>\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"mb-2 font-weight-semibold mx-1\"\r\n                              size=\"xs\"\r\n                            >\r\n                              {currentJobList.workPlaceType}\r\n                            </Button>\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"mb-2 font-weight-semibold mx-1\"\r\n                              size=\"xs\"\r\n                            >\r\n                              {currentJobList.employmentType}\r\n                            </Button>\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"mb-2 font-weight-semibold mx-1\"\r\n                              size=\"xs\"\r\n                            >\r\n                              {currentJobList.jobLocation}\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"mt-2 \">\r\n                          <Col className=\"\" xs={12} sm={8}>\r\n                            <span className=\"text-muted \">\r\n                              Posted on\r\n                              <TimestampConverter\r\n                                timeStamp={currentJobList.postedOn}\r\n                                format=\"datetime\"\r\n                              />\r\n                            </span>\r\n                          </Col>\r\n                          <Col\r\n                            // className=\"text-sm-right text-start mt-sm-0 mt-2\"\r\n                            className=\"d-flex justify-content-sm-end justify-content-start align-items-center mt-sm-0 mt-2\"\r\n                            xs={12}\r\n                            sm={4}\r\n                          >\r\n                            <Button\r\n                              outline\r\n                              // className=\"d-none d-lg-block\"\r\n                              color=\"primary\"\r\n                              size=\"xs\"\r\n                            >\r\n                              I&apos;m interested\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    </Col>\r\n                    {/* <Col className=\"text-center d-flex align-items-center\">\r\n                      <button\r\n                        onClick={handleJobNext}\r\n                        type=\"button\"\r\n                        className=\"glide__arrow glide__arrow--right right-arrow btn btn-link btn-xs\"\r\n                        data-glide-dir=\">\"\r\n                        style={{ textDecoration: \"none\" }}\r\n                      >\r\n                        <i className=\"simple-icon-arrow-right\" />\r\n                      </button>\r\n                    </Col> */}\r\n                  </Row>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <div\r\n                    className=\"glide__bullets slider-dot-container\"\r\n                    data-glide-el=\"controls[nav]\"\r\n                  >\r\n                    {renderJobListDots()}\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            ) : (\r\n              <CardBody className=\"h-100 d-flex justify-content-center align-items-center\">\r\n                <h1 className=\"text-center mx-auto\">There is no job list</h1>\r\n              </CardBody>\r\n            )}\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n\r\n      {/* job and stay listing ends */}\r\n      {/* Q and A starts */}\r\n      <Row className=\"mx-auto mt-4 mb-3\" style={{ maxWidth: \"1040px\", paddingLeft: \"2px\"}}>\r\n        <Colxx lg=\"8\" md=\"7\" className=\"mb-2\" style={{ marginLeft: \"-4px\" }}>\r\n        \r\n          <Col lg={12} md={12}>\r\n            {dashboardQuestions && dashboardQuestions.length > 0 ? (\r\n              <Card className=\"ms-[-12px]\" style={{ height: \"360px\" }}>\r\n                <CardBody>\r\n                  <GlideComponent\r\n                    settings={{\r\n                      gap: 5,\r\n                      perView: 1,\r\n                      type: \"carousel\",\r\n                    }}\r\n                  >\r\n                    {dashboardQuestions.map((items) => (\r\n                      <div key={items.id}>\r\n                        <Card>\r\n                          <div>\r\n                            <CardTitle>\r\n                              <strong className=\"text-large\">Q&A</strong>\r\n                            </CardTitle>\r\n                            <div>\r\n                              <div className=\"d-flex align-items-center justify-content-between\">\r\n                                <h2 className=\"font-weight-semi-bold text-large py-1\">\r\n                                  {items.questionHeading}\r\n                                </h2>\r\n                                <p className=\"text-muted\">\r\n                                  {formatDate(items.time)}\r\n                                </p>\r\n                              </div>\r\n                              <p className=\"text-one font-weight-semibold text-muted py-1\">\r\n                                {items.questionHeadingBrief}\r\n                              </p>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"d-flex align-items-center justify-content-between my-2\">\r\n                              <span className=\"text-one\">\r\n                                {items.views} views\r\n                              </span>\r\n                              <span className=\"text-one\">\r\n                                <i\r\n                                  className=\"simple-icon-envelope\"\r\n                                  color=\"primary\"\r\n                                />\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"w-full d-flex\">\r\n                              <Button\r\n                                className=\"text-center mx-auto\"\r\n                                color=\"primary\"\r\n                                size=\"sm\"\r\n                                style={{ cursor: \"pointer\" }}\r\n                                onClick={() =>\r\n                                  history.push(`/app/questions/${items.id}`)\r\n                                }\r\n                              >\r\n                                View all answers\r\n                              </Button>\r\n                            </div>\r\n                          </div>\r\n                        </Card>\r\n                      </div>\r\n                    ))}\r\n                  </GlideComponent>\r\n                </CardBody>\r\n              </Card>\r\n            ) : (\r\n              <Card className=\"my-2\" style={{ height: \"360px\" }}>\r\n                <CardBody className=\"d-flex align-items-center justify-content-center\">\r\n                  <h2>No Q&A Available</h2>\r\n                </CardBody>\r\n              </Card>\r\n            )}\r\n          </Col>\r\n\r\n          {/* </Col> */}\r\n        </Colxx>\r\n        <Colxx lg=\"4\" md=\"5\" className=\"mb-2\" style={{ marginLeft: \"-12px\" }}>\r\n        \r\n          {/* <Col lg={5}> */}\r\n          <Card className=\"mb-2\">\r\n            {currentBatchMate ? (\r\n              <CardBody style={{ minHeight: \"360px\" }}>\r\n                <Row className=\"mb-3 align-items-center\">\r\n                  <Col>\r\n                    <h3 className=\"mb-0 fw-bold\">\r\n                      <strong>Batch Mates</strong>\r\n                    </h3>\r\n                  </Col>\r\n                  <Col xs=\"auto\">\r\n                    <Button\r\n                      size=\"xs\"\r\n                      color=\"primary\"\r\n                      onClick={handleViewBatchmates}\r\n                    >\r\n                      <span>View all</span>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <div className=\"text-center\">\r\n                  <Row>\r\n                    <Col className=\"d-flex align-items-center\">\r\n                      <button\r\n                        onClick={handleBatchMatePrevious}\r\n                        type=\"button\"\r\n                        className=\"glide__arrow glide__arrow--left left-arrow btn btn-link btn-xs\"\r\n                        data-glide-dir=\"<\"\r\n                        style={{ textDecoration: \"none\" }}\r\n                      >\r\n                        <i className=\"simple-icon-arrow-left\" />\r\n                      </button>\r\n                    </Col>\r\n                    <Col className=\"d-flex justify-content-center align-items-center\">\r\n                      {!currentBatchMate.imageUrl ? (\r\n                        <ThumbnailLetters\r\n                          // small\r\n                          rounded\r\n                          text={currentBatchMate.firstName}\r\n                          className=\"mx-2 mb-3\"\r\n                          color=\"secondary\"\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          src={`${baseUrl}/${currentBatchMate.imageUrl}`}\r\n                          className=\" rounded-circle mb-2\"\r\n                          style={{\r\n                            width: \"90px\",\r\n                            height: \"90px\",\r\n                            objectFit: \"cover\",\r\n                            overflow: \"hidden\",\r\n                          }}\r\n                          alt=\"img\"\r\n                        />\r\n                      )}\r\n                    </Col>\r\n                    <Col className=\"d-flex align-items-center justify-content-end\">\r\n                      <button\r\n                        onClick={handleBatchMateNext}\r\n                        type=\"button\"\r\n                        className=\"glide__arrow glide__arrow--right right-arrow btn btn-link btn-xs\"\r\n                        data-glide-dir=\">\"\r\n                        style={{ textDecoration: \"none\" }}\r\n                      >\r\n                        <i className=\"simple-icon-arrow-right\" />\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                  <NavLink to=\"#\">\r\n                    <h3 className=\"mb-0\">\r\n                      <strong>\r\n                        {currentBatchMate.firstName} {currentBatchMate.lastName}\r\n                      </strong>\r\n                    </h3>\r\n                  </NavLink>\r\n                  <CardText className=\"text-muted text-small mb-2\">\r\n                    {currentBatchMate.jobTitle} | {currentBatchMate.company}\r\n                  </CardText>\r\n                  {/* <span>\r\n                    {currentBatchMate.experience === undefined ||\r\n                    currentBatchMate.experience === 0\r\n                      ? \"No experience\"\r\n                      : `${currentBatchMate.experience} years of experience`}\r\n                  </span> */}\r\n\r\n                  <div className=\"separator mb-2 mt-2\" />\r\n                  {/* <h3 className=\"mb-0 fw-bold\">\r\n                    <strong>\r\n                      ₹{Math.floor(currentBatchMate.price).toLocaleString()}/hr\r\n                    </strong>\r\n                  </h3> */}\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <div\r\n                    className=\"glide__bullets slider-dot-container\"\r\n                    data-glide-el=\"controls[nav]\"\r\n                  >\r\n                    {renderBatchMateDots()}\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            ) : (\r\n              <CardBody\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{ height: \"360px\" }}\r\n              >\r\n                <h2>No Batchmates</h2>\r\n              </CardBody>\r\n            )}\r\n          </Card>\r\n          {/* </Col> */}\r\n        </Colxx>\r\n      </Row>\r\n      {/* Q and A ends */}\r\n\r\n      {/* recent chats and recent sessions start */}\r\n      <Row className=\"mx-auto  \" style={{ maxWidth: \"1020px\" }}>\r\n        <Colxx lg=\"7\" md=\"6\" className=\"mb-2\">\r\n          {/* <Col lg={7}> */}\r\n          <Card>\r\n            <CardBody>\r\n              <CardTitle>\r\n                <strong>Recent Sessions</strong>\r\n              </CardTitle>\r\n              <div className=\"dashboard-list-with-user\">\r\n                <PerfectScrollbar\r\n                  options={{ suppressScrollX: true, wheelPropagation: false }}\r\n                >\r\n                  {recentSessions.length > 0 ? (\r\n                    <>\r\n                      {recentSessions &&\r\n                        recentSessions.map((sessions, index) => {\r\n                          return (\r\n                            <div\r\n                              // eslint-disable-next-line react/no-array-index-key\r\n                              key={index}\r\n                              className=\"d-flex flex-row mb-2 pb-2 border-bottom\"\r\n                            >\r\n                              <Row className=\"w-100\">\r\n                                <NavLink href=\"#\">\r\n                                  <img\r\n                                    src={`${baseUrl}/${sessions.imageUrl}`}\r\n                                    alt={sessions.name}\r\n                                    className=\" rounded-circle img-thumbnail border\"\r\n                                    style={{\r\n                                      width: \"50px\",\r\n                                      height: \"50px\",\r\n                                      objectFit: \"cover\",\r\n                                      overflow: \"hidden\",\r\n                                    }}\r\n                                  />\r\n                                </NavLink>\r\n                                <Col>\r\n                                  {/* <div className=\"pl-2 pr-2\"> */}\r\n                                  <NavLink to=\"#\">\r\n                                    <p className=\"font-weight-medium mb-0 \">\r\n                                      {sessions.name}\r\n                                    </p>\r\n                                    <p className=\"text-muted mb-0 text-small\">\r\n                                      {sessions.chatStatus}\r\n                                    </p>\r\n                                  </NavLink>\r\n                                  {/* </div> */}\r\n                                </Col>\r\n                                <Col className=\"mt-3  d-flex flex-column align-items-center\">\r\n                                  {/* <div className=\"mt-3 pr-2 ml-4\"> */}\r\n                                  <p className=\"text-muted mb-0 text-small\">\r\n                                    <TimestampConverter\r\n                                      timeStamp={sessions.fromTimeStamp}\r\n                                      format=\"date\"\r\n                                    />\r\n                                  </p>\r\n                                  <p className=\"text-muted mb-0 text-small\">\r\n                                    <TimestampConverter\r\n                                      timeStamp={sessions.fromTimeStamp}\r\n                                      format=\"time\"\r\n                                    />{\" \"}\r\n                                    -{\" \"}\r\n                                    <TimestampConverter\r\n                                      timeStamp={sessions.toTimeStamp}\r\n                                      format=\"time\"\r\n                                    />\r\n                                  </p>\r\n                                  {/* </div> */}\r\n                                </Col>\r\n                                <Col className=\"mt-3\">\r\n                                  {/* <div className=\"d-flex justify-end ml-4 mr-2 pr-2 mt-3\"> */}\r\n                                  <Rating\r\n                                    total={5}\r\n                                    rating={sessions.star}\r\n                                    interactive={false}\r\n                                  />\r\n                                  {/* </div> */}\r\n                                </Col>\r\n                              </Row>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                    </>\r\n                  ) : (\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      There is no recent sessions\r\n                    </div>\r\n                  )}\r\n                </PerfectScrollbar>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n          {/* </Col> */}\r\n        </Colxx>\r\n        <Colxx lg=\"5\" md=\"6\" className=\"mb-2\">\r\n          {/* <Col lg={5}> */}\r\n          <Card>\r\n            <CardBody>\r\n              <CardTitle>\r\n                <strong>Recent Chats</strong>\r\n              </CardTitle>\r\n              <div className=\"dashboard-list-with-user\">\r\n                <PerfectScrollbar\r\n                  options={{ suppressScrollX: true, wheelPropagation: false }}\r\n                >\r\n                  {recentChats.length > 0 ? (\r\n                    <>\r\n                      {recentChats &&\r\n                        recentChats.map((chats, index) => {\r\n                          return (\r\n                            <div\r\n                              // eslint-disable-next-line react/no-array-index-key\r\n                              key={index}\r\n                              className=\"d-flex flex-row mb-2 pb-2 border-bottom\"\r\n                            >\r\n                              <NavLink\r\n                                href={`${adminRoot}/chat/${chats.username}`}\r\n                              >\r\n                                <img\r\n                                  src={`${baseUrl}/${chats.imageUrl}`}\r\n                                  alt={chats.name}\r\n                                  // className=\"img-thumbnail border-0 rounded-circle list-thumbnail align-self-center xsmall\"\r\n                                  className=\" rounded-circle img-thumbnail border\"\r\n                                  style={{\r\n                                    width: \"50px\",\r\n                                    height: \"50px\",\r\n                                    objectFit: \"cover\",\r\n                                    overflow: \"hidden\",\r\n                                  }}\r\n                                />\r\n                              </NavLink>\r\n\r\n                              <div className=\"pl-3 pr-2 mt-2\">\r\n                                <NavLink\r\n                                  href={`${adminRoot}/chat/${chats.username}`}\r\n                                >\r\n                                  <p className=\"font-weight-medium mb-0 \">\r\n                                    {chats.name}\r\n                                  </p>\r\n                                  <p\r\n                                    className=\"text-muted mb-0 text-small w-100 text-truncate\"\r\n                                    style={{ maxWidth: \"170px\" }}\r\n                                  >\r\n                                    {chats.chatStatus}\r\n                                  </p>\r\n                                </NavLink>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                    </>\r\n                  ) : (\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      There is no recent chats\r\n                    </div>\r\n                  )}\r\n                </PerfectScrollbar>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n          {/* </Col> */}\r\n        </Colxx>\r\n      </Row>\r\n      {/* recent chats and recent sessions end */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashBoard;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import IntlMessages from 'helpers/IntlMessages';\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Badge, Button, Card, CardBody, CardText, Row } from \"reactstrap\";\r\n// import RatingExamples from './RatingExamples';\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport Rating from \"components/common/Rating\";\r\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport MentorFilter from \"./MentorFilter\";\r\nimport \"./mentorcard.css\";\r\n// import MentorDropDown from './MentorDropDown';\r\n\r\nconst MentorCard = () => {\r\n  const [selectedSkills, setSelectedSkills] = useState([]);\r\n  const [selectedTools, setSelectedTools] = useState(\"\");\r\n  const [selectedIndustry, setSelectedIndustry] = useState(\"\");\r\n  const [selectedPrice, setSelectedPrice] = useState([]);\r\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [paginationMeta, setPaginationMeta] = useState([]);\r\n\r\n  const locationCategory = useLocation();\r\n  const category = locationCategory.state?.category;\r\n\r\n  // const [searchClick, setSearchClick] = useState(\"\")\r\n  // const [searchClicked, setSearchClicked] = useState(false)\r\n\r\n  // const [pageSize, setPageSize] = useState(2)\r\n  // console.log(paginationMeta.totalPage)\r\n  // console.log(paginationMeta.first)\r\n  // console.log(paginationMeta.last)\r\n\r\n  const handleSkillsChange = (skills) => setSelectedSkills(skills);\r\n  const handleToolsChange = (tools) => setSelectedTools(tools);\r\n  const handleIndustryChange = (industry) => setSelectedIndustry(industry);\r\n  const handlePriceChange = (price) => setSelectedPrice(price);\r\n  const handleLocationChange = (location) => setSelectedLocation(location);\r\n\r\n  // console.log(\"skills\",selectedSkills)\r\n  // console.log(\"selectedTools\",selectedTools)\r\n  // console.log(\"selectedIndustry\",selectedIndustry)\r\n  // console.log(\"selectedPrice\", selectedPrice);\r\n  // console.log(\"selectedLocation\", selectedLocation);\r\n\r\n  const [isMentorCardFetched, setIsMentorCardFetched] = useState(false);\r\n\r\n  // const url1=`${baseUrl}/mentorDetails`\r\n  // const url1=`${baseUrl}/api/mentor`\r\n  const url2 = `${baseUrl}/api/mentor/cards`;\r\n  // const imageUrl = `${baseUrl}/api/public/images`;\r\n  // To change to backend api url uncomment the below line\r\n  // const url1=`${baseUrl}/api/mentor`\r\n  // const history = useHistory();\r\n\r\n  const [mentordetails, setMentorDetails] = useState([]);\r\n  // const[mentorfilter,setMentorFilter]=useState([]);\r\n  // const [image]=useState('');\r\n  const [inputkey, setInputKey] = useState(\"\");\r\n\r\n  // const [filteredMentors, setFilteredMentors] = useState([]);\r\n  const truncateBio = (bio, lineCount) => {\r\n    if (!bio) return \"\";\r\n    const words = bio.split(\" \");\r\n\r\n    const truncatedBio = words.slice(0, lineCount).join(\" \");\r\n\r\n    if (words.length > lineCount) {\r\n      return `${truncatedBio}...`;\r\n    }\r\n    return truncatedBio;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsMentorCardFetched(false);\r\n    const mentorCardDetails = async () => {\r\n      const params = {};\r\n\r\n      if (selectedIndustry) {\r\n        params.company = selectedIndustry;\r\n      }\r\n      if (selectedLocation) {\r\n        params.location = selectedLocation;\r\n      }\r\n      if (selectedSkills) {\r\n        params.skills = selectedSkills;\r\n      }\r\n      if (selectedTools) {\r\n        params.tools = selectedTools;\r\n      }\r\n      if (selectedPrice) {\r\n        params.minPrice = selectedPrice.at(0);\r\n        params.maxPrice = selectedPrice.at(1);\r\n      }\r\n      if (inputkey) {\r\n        params.firstName = inputkey;\r\n      }\r\n      if (category) {\r\n        params.category = category.value; // Adding selectedCategory.value\r\n      }\r\n      params.size = 10;\r\n      params.page = currentPage - 1;\r\n      try {\r\n        const response = await axios.get(url2, { params });\r\n        setMentorDetails(response.data.data);\r\n        setPaginationMeta(response.data.paginationMeta);\r\n        setIsMentorCardFetched(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setIsMentorCardFetched(true);\r\n      }\r\n    };\r\n    mentorCardDetails();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    selectedLocation,\r\n    selectedIndustry,\r\n    selectedSkills,\r\n    selectedTools,\r\n    selectedPrice,\r\n    currentPage,\r\n    inputkey,\r\n  ]);\r\n\r\n  return (\r\n    <div>\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n        <div>\r\n          <div className=\"\">\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group\">\r\n                <div\r\n                  style={{ position: \"relative\" }}\r\n                  className=\"col-12 col-lg-8 col-md-8\"\r\n                >\r\n                  <i\r\n                    className=\"simple-icon-magnifier mr-3\"\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: \"50%\",\r\n                      right: \"15px\",\r\n                      transform: \"translateY(-50%)\",\r\n                      zIndex: 2,\r\n                      color: \"#aaa\",\r\n                    }}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control rounded py-2\"\r\n                    placeholder=\"Search by name\"\r\n                    value={inputkey}\r\n                    onChange={(e) => setInputKey(e.target.value)}\r\n                    style={{ paddingRight: \"2.5rem\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <MentorFilter\r\n                onSkillsChange={handleSkillsChange}\r\n                onToolsChange={handleToolsChange}\r\n                onIndustryChange={handleIndustryChange}\r\n                onPriceChange={handlePriceChange}\r\n                onLocationChange={handleLocationChange}\r\n                selectedSkills={selectedSkills}\r\n                selectedLocation={selectedLocation}\r\n                selectedIndustry={selectedIndustry}\r\n                selectedTools={selectedTools}\r\n                userRole=\"mentor\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Colxx>\r\n\r\n      {/* searchbar ends */}\r\n      {!isMentorCardFetched ? (\r\n        <div className=\"loading\" />\r\n      ) : (\r\n        <>\r\n          <div>\r\n            {mentordetails.length === 0 ? (\r\n              <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n                <Card>\r\n                  <CardBody>\r\n                    <h2 className=\"text-center text-large \">No mentors</h2>\r\n                  </CardBody>\r\n                </Card>\r\n              </Colxx>\r\n            ) : (\r\n              Array.isArray(mentordetails) &&\r\n              mentordetails.map((mentors) => {\r\n                return (\r\n                  <Colxx xxs=\"12\" key={mentors.id}>\r\n                    <Row>\r\n                      <Colxx\r\n                        sm=\"12\"\r\n                        md=\"12\"\r\n                        lg=\"9\"\r\n                        xxs=\"12\"\r\n                        className=\"mx-auto\"\r\n                      >\r\n                        <Card\r\n                          className=\"flex-row flex-wrap flex-sm-nowrap listing-card-container my-3 p-3\"\r\n                          style={{ gap: \"16px\" }}\r\n                        >\r\n                          <div className=\"d-block mentor-card-img-container\">\r\n                            {/* <img\r\n                      className=\"card-img-left\"\r\n                      src={mentors.image}\r\n                      alt=\"Card\"\r\n                      style={{minWidth:'150px',minHeight:\"300px\"}}\r\n                    /> */}\r\n                            {mentors.imageUrl == null ? (\r\n                              <div\r\n                                className=\"card-img-left bg-primary \r\n                 d-flex align-items-center justify-content-center\"\r\n                                style={{\r\n                                  width: \"200px\",\r\n                                  height: \"250px\",\r\n                                  borderRadius: \"0.75rem\",\r\n                                }}\r\n                              >\r\n                                <ThumbnailLetters\r\n                                  rounded\r\n                                  text={mentors.firstName}\r\n                                  className=\"text-xlarge border border-1\"\r\n                                  style={{ textAlign: \"center\" }}\r\n                                />\r\n                              </div>\r\n                            ) : (\r\n                              <img\r\n                                className=\"mentor-card-width\"\r\n                                // src={`${baseUrl}/api/public/images/${mentors.id}/profile-pic`}\r\n                                src={`${baseUrl}/${mentors.imageUrl}`}\r\n                                // src={`${baseUrl/${mentors.imageUrl}`}\r\n                                alt=\"Card\"\r\n                              />\r\n                            )}\r\n                          </div>\r\n\r\n                          {/* <div className=\"d-flex flex-fill\"> */}\r\n                          <CardBody className=\"d-flex flex-column flex-fill p-0\">\r\n                            {/* <CardText className=\" font-weight-semibold text-xlarge text-sm-small mb-4\">\r\n                     {mentors.firstName} {mentors.lastName}\r\n                    </CardText> */}\r\n                            <div\r\n                              className=\"d-flex flex-wrap justify-content-between mb-1\"\r\n                              style={{ columnGap: \"24px\" }}\r\n                            >\r\n                              <div\r\n                                className=\"d-flex flex-wrap align-items-center\"\r\n                                style={{ gap: \"10px\" }}\r\n                              >\r\n                                <div className=\"font-weight-semibold text-large text-capitalize\">\r\n                                  {mentors.firstName}\r\n                                </div>\r\n                                <div className=\"font-weight-semibold text-large text-capitalize\">\r\n                                  {mentors.lastName}\r\n                                </div>\r\n                                <div className=\"mx-2\">\r\n                                  <Badge\r\n                                    pill\r\n                                    style={{\r\n                                      background: \"#fcba0a\",\r\n                                    }}\r\n                                    color=\"#fcba0a\"\r\n                                    className=\"py-1 px-2 text-one text-dark\"\r\n                                  >\r\n                                    {mentors.consultations} consultants\r\n                                  </Badge>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <CardText\r\n                                className=\"text-one d-flex align-items-center flex-wrap\"\r\n                                style={{ gap: \"4px\" }}\r\n                              >\r\n                                <span className=\"font-weight-semibold mt-md-0 mt-2\">\r\n                                  <Rating\r\n                                    total={5}\r\n                                    rating={mentors.star}\r\n                                    interactive={false}\r\n                                  />\r\n                                </span>\r\n                                <span className=\"font-weight-semibold\">\r\n                                  {mentors.star}\r\n                                </span>\r\n                                <span> ({mentors.ratings} reviews)</span>\r\n                              </CardText>\r\n                            </div>\r\n                            <div className=\"d-flex\" style={{ gap: \"8px\" }}>\r\n                              <CardText className=\"text-one text-muted mb-2\">\r\n                                {mentors.jobTitle}\r\n                              </CardText>\r\n                              <div>|</div>\r\n                              <CardText className=\"text-one text-primary mb-2\">\r\n                                {mentors.company}\r\n                              </CardText>\r\n                            </div>\r\n                            <CardText\r\n                              className=\"text-one mb-2\"\r\n                              style={{ maxHeight: \"62px\", overflow: \"hidden\" }}\r\n                            >\r\n                              {/* {mentors.bio} */}\r\n                              {truncateBio(mentors.bio, 20)}\r\n                            </CardText>\r\n\r\n                            <div>\r\n                              <CardText>\r\n                                <p className=\"text-muted \">Ready to offer</p>\r\n                              </CardText>\r\n\r\n                              <CardText className=\"d-flex flex-wrap\">\r\n                                {/* {mentordetails.skills&&mentordetails.skills.map((skill) => (\r\n              <span key={skill} className=\"\">{skill}</span>\r\n            ))} */}\r\n\r\n                                {mentors.skills &&\r\n                                  mentors.skills.slice(0, 3).map((skill) => (\r\n                                    <div\r\n                                      key={skill}\r\n                                      className=\"pr-2\"\r\n                                      id=\"btn.rounded\"\r\n                                    >\r\n                                      <Badge color=\"light\">{skill}</Badge>\r\n                                    </div>\r\n                                  ))}\r\n                              </CardText>\r\n                            </div>\r\n\r\n                            <div\r\n                              className=\"d-flex justify-content-between align-items-center mt-auto flex-wrap\"\r\n                              style={{ columnGap: \"24px\" }}\r\n                            >\r\n                              {/* <NavLink href={`/app/mentorprofile/${mentors.id}`}>\r\n                       <Button color=\"primary \" className=\"default w-80 py-2  rounded\" >\r\n                        View Profile\r\n              </Button>\r\n              </NavLink> */}\r\n                              <div className=\"text-primary\">\r\n                                <span className=\"text-xlarge font-weight-semibold\">\r\n                                  ₹{Math.floor(mentors.price).toLocaleString()}\r\n                                </span>\r\n                                /Hour\r\n                              </div>\r\n                              {/* <Button\r\n                                color=\"primary\"\r\n                                onClick={() =>\r\n                                  history.push(\r\n                                    `/app/mentorprofile/${mentors.id}`\r\n                                  )\r\n                                }\r\n                                className=\"rounded\"\r\n                              >\r\n                                View Profile\r\n                              </Button> */}\r\n                              <a\r\n                                href={`/app/mentorprofile/${mentors.id}`}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                              >\r\n                                <Button color=\"primary\" className=\"rounded\">\r\n                                  View Profile\r\n                                </Button>\r\n                              </a>\r\n                            </div>\r\n                          </CardBody>\r\n                          {/* </div> */}\r\n                        </Card>\r\n                      </Colxx>\r\n                    </Row>\r\n                  </Colxx>\r\n                );\r\n              })\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {isMentorCardFetched && (\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPage={paginationMeta.totalPage}\r\n          onChangePage={(i) => setCurrentPage(i)}\r\n          lastIsActive={paginationMeta.last}\r\n          firstIsActive={paginationMeta.first}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MentorCard;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Card, CardBody, CardImg, NavLink, Row } from \"reactstrap\";\r\nimport ThumbnailLetters from \"../Chat/ThumbnailLetters\";\r\nimport ReviewsComponent from \"../Reviews/ReviewsComponent\";\r\nimport country from \"../my-login/Country\";\r\nimport MentorTabCard from \"./MentorTabCard\";\r\n\r\nconst MentorProfile = () => {\r\n  const { mid } = useParams();\r\n  // console.log('Mentor Profile ID:', mid);\r\n  // const url=`${baseUrl}/mentor/profile`;\r\n  // const url1=`${baseUrl}/mentor/cards/${mid}`;\r\n  // const url=`${baseUrl}/mentorDetails/${mid}`;\r\n  //  const url1=`${baseUrl}/mentorProfile/${mid}`;\r\n\r\n  //  To change url to backend please uncomment the below line\r\n  const url1 = `${baseUrl}/api/mentor/${mid}`;\r\n  const ratingUrl = `${baseUrl}/api/mentorship/rating/meta/${mid}`;\r\n\r\n  //  const url1=`${baseUrl}/mentor/myprofile`;\r\n  // const[mentorprofiledetails,setMentorProfileDetails]=useState([]);\r\n  const [mentorprofiledetails1, setMentorProfileDetails1] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [reviews, setReviews] = useState(\"\");\r\n  const skillsSectionRef = useRef(null);\r\n\r\n  const history = useHistory();\r\n\r\n  const [showAll, setShowAll] = useState(false);\r\n\r\n  const scrollToSkills = useCallback(() => {\r\n    const yOffset = -60;\r\n\r\n    if (skillsSectionRef.current) {\r\n      const y =\r\n        skillsSectionRef.current.getBoundingClientRect().top +\r\n        window.pageYOffset +\r\n        yOffset;\r\n      window.scrollTo({ top: y, behavior: \"smooth\" });\r\n      return;\r\n    }\r\n\r\n    const element = document.getElementById(\"skillsSection\");\r\n    if (element) {\r\n      const y =\r\n        element.getBoundingClientRect().top + window.pageYOffset + yOffset;\r\n      window.scrollTo({ top: y, behavior: \"smooth\" });\r\n    } else {\r\n      console.error(\"unable to scroll\");\r\n    }\r\n  }, []);\r\n\r\n  const toggleShowAll = useCallback(() => {\r\n    setShowAll((prevShowAll) => !prevShowAll);\r\n\r\n    setTimeout(scrollToSkills, 100);\r\n  }, [scrollToSkills]);\r\n\r\n  // const handleConnectClick = () => {\r\n  //   // Construct the URL with mentor's name as query parameter\r\n  //   const mentorName = `${mentorprofiledetails.firstName} ${mentorprofiledetails.lastName}`;\r\n  //   const url2 = `/app/calendar?mentorName=${mentorName}`;\r\n\r\n  //   // Navigate to the Month component with the mentor's name as a query parameter\r\n  //   history.push(url2);\r\n  // };\r\n  // const handleConnectClick = () => {\r\n  //   // Construct the URL with mentor's ID and name as query parameters\r\n  //   const mentorId = mentorprofiledetails1.id;\r\n  //   const mentorName = `${mentorprofiledetails1.firstName} ${mentorprofiledetails1.lastName}`;\r\n  //   const role = mentorprofiledetails1.role;\r\n  //   const url2 = `/app/calendar?mentorId=${mentorId}&mentorName=${mentorName}&role=${role}`;\r\n\r\n  //   // Navigate to the Month component with the mentor's ID and name as query parameters\r\n  //   history.push(url2);\r\n  // };\r\n  const handleConnectClick = () => {\r\n    // Destructure the properties from mentorprofiledetails1\r\n    const { id: mentorId, firstName, lastName, role } = mentorprofiledetails1;\r\n    console.log(\"Role:\", role);\r\n\r\n    // Construct the mentorName using destructured values\r\n    const mentorName = `${firstName} ${lastName}`;\r\n\r\n    // Construct the URL with mentor's ID and name as query parameters\r\n    const url2 = `/app/calendar?mentorId=${mentorId}&mentorName=${mentorName}&role=${role}`;\r\n\r\n    // Navigate to the Month component with the mentor's ID and name as query parameters\r\n    history.push(url2);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // const mentorProfileDetails = async () => {\r\n\r\n    //   try {\r\n    //     const response = await axios.get(url);\r\n    //     setMentorProfileDetails(response.data);\r\n    //   } catch (error) {\r\n    //     console.error('Error fetching data:', error);\r\n    //   }\r\n    // };\r\n    // mentorProfileDetails();\r\n    const mentorReviews = async () => {\r\n      try {\r\n        const response = await axios.get(ratingUrl);\r\n        setReviews(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    mentorReviews();\r\n\r\n    const mentorProfile = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await axios.get(url1);\r\n        setMentorProfileDetails1(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    mentorProfile();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (showAll && skillsSectionRef.current) {\r\n      skillsSectionRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [showAll]);\r\n\r\n  const remainingSkillsCount = mentorprofiledetails1.skills\r\n    ? mentorprofiledetails1.skills.length - 3\r\n    : 0;\r\n  // const handleLinkedInClick = () => {\r\n  //   // Assuming mentorprofiledetails1 contains the LinkedIn URL of the mentor\r\n  //   const linkedInUrl = mentorprofiledetails1.linkedinUrl;\r\n\r\n  //   // Open the mentor's LinkedIn profile in a new tab/window\r\n  //   window.open(linkedInUrl, \"_blank\");\r\n  // };\r\n  const countryName = country.find(\r\n    (c) => c.iso_code === mentorprofiledetails1.location\r\n  )?.name;\r\n  const chatUserId = mentorprofiledetails1.username;\r\n  const videoUrl = mentorprofiledetails1.introVideo;\r\n  let thumbnailUrl = \"\";\r\n  if (videoUrl) {\r\n    const regex =\r\n      /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?/\\s]{11})/;\r\n    const match = videoUrl.match(regex);\r\n    if (match && match[1]) {\r\n      const videoID = match[1];\r\n      thumbnailUrl = `https://img.youtube.com/vi/${videoID}/0.jpg`;\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"mentor-profile\">\r\n      {loading ? (\r\n        <div className=\"loading\" />\r\n      ) : (\r\n        <div className=\"\">\r\n          <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"\">\r\n            <div className=\"\">\r\n              <Row className=\"h-100\">\r\n                <div className=\"w-100 py-3 position-relative bg-primary d-flex justify-content-between align-items-center\">\r\n                  <div className=\"d-flex align-items-center \">\r\n                    {mentorprofiledetails1.imageUrl == null ? (\r\n                      <div\r\n                        style={{\r\n                          width: \"110px\",\r\n                          height: \"110px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                        className=\"mx-2 rounded-circle border img-thumbnail\"\r\n                      >\r\n                        <ThumbnailLetters\r\n                          rounded\r\n                          small\r\n                          text={mentorprofiledetails1.firstName}\r\n                          // className=\"border border-1 mx-2\"\r\n                          className=\"w-100 h-100\"\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <img\r\n                        src={`${baseUrl}/${mentorprofiledetails1.imageUrl}`}\r\n                        // className=' col-2 mx-2 w-60 rounded-circle img-thumbnail border'\r\n                        className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                        alt=\"\"\r\n                        style={{\r\n                          width: \"110px\",\r\n                          height: \"110px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                      />\r\n                    )}\r\n\r\n                    <Button\r\n                      color=\"light\"\r\n                      className=\" font-weight-semibold mx-2\"\r\n                      size=\"large\"\r\n                      style={{ cursor: \"default\" }}\r\n                    >\r\n                      <span\r\n                        className=\"font-weight-semibold text-one\"\r\n                        style={{ cursor: \"default\" }}\r\n                      >\r\n                        <i className=\"iconsminds-thunder text-primary\" />\r\n                        {mentorprofiledetails1.achievement}\r\n                      </span>\r\n                    </Button>\r\n\r\n                    {/* <img  src={`${baseUrl}/api/public/images/${mid}/profile-pic`} className=' col-2 mx-2 w-60 rounded-circle\r\n              img-thumbnail border    ' alt=\"\" /> */}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-sm-5 mt-4 \">\r\n                  <h1 className=\"font-weight-semibold text-xlarge\">\r\n                    {mentorprofiledetails1.firstName}{\" \"}\r\n                    {mentorprofiledetails1.lastName}\r\n                  </h1>\r\n                  {/* <h1 className='font-weight-semibold text-xlarge'>{mentorprofiledetails1.firstName} {mentorprofiledetails1.lastName}</h1> */}\r\n                  <h3 className=\"text-large  text-muted  \">\r\n                    {mentorprofiledetails1.jobTitle}\r\n                  </h3>\r\n                  <h2 className=\"text-one  text-primary\">\r\n                    {mentorprofiledetails1.company}\r\n                  </h2>\r\n                  <p className=\"text-one font-weight-medium text-primary\">\r\n                    {mentorprofiledetails1.bio}\r\n                  </p>\r\n\r\n                  <h5 className=\"font-weight-medium\">\r\n                    <i className=\"simple-icon-location-pin text-primary\" />\r\n                    <span className=\"ml-2\">{countryName}</span>\r\n                  </h5>\r\n                  {/* <h6 className=''><i className='simple-icon-star text-primary '/><span className='ml-2'>{mentorprofiledetails1.star} ({mentorprofiledetails1.ratings} reviews)</span></h6> */}\r\n                  <h6 className=\"\">\r\n                    <i className=\"simple-icon-star text-primary \" />\r\n                    <span className=\"ml-2\">\r\n                      {reviews.averageStar} ({reviews.totalRatings} reviews)\r\n                    </span>\r\n                  </h6>\r\n                  {/* <h6 className=''><i className='simple-icon-clock text-primary'/><span className='ml-2'>Last Seen</span></h6> */}\r\n                </div>\r\n\r\n                <div className=\"col-sm-7 mt-4\">\r\n                  <h2 className=\"mx-2\">Skills</h2>\r\n\r\n                  {/* <div className='d-flex'>\r\n              {mentorprofiledetails.skills&&mentorprofiledetails.skills.map((skill)=>{\r\n               \r\n                \r\n               return (\r\n               \r\n\r\n                <div  key={skill}>\r\n                <Button color=\"light\" className=\"mb-2 font-weight-semibold mx-2\" size='xs'>\r\n                {skill}\r\n              </Button>\r\n                </div>\r\n               )\r\n              })}\r\n            </div> */}\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <div className=\"d-flex\">\r\n                      {mentorprofiledetails1.skills &&\r\n                        mentorprofiledetails1.skills\r\n                          .slice(0, 3)\r\n                          .map((skill) => (\r\n                            <div key={skill}>\r\n                              <Button\r\n                                color=\"light\"\r\n                                className=\"mb-2 font-weight-semibold mx-2\"\r\n                                size=\"xs\"\r\n                              >\r\n                                {skill}\r\n                              </Button>\r\n                            </div>\r\n                          ))}\r\n                    </div>\r\n                    {mentorprofiledetails1.skills &&\r\n                      mentorprofiledetails1.skills.length > 3 && (\r\n                        <div className=\"\">\r\n                          <Button\r\n                            color=\"link\"\r\n                            className=\"text-one font-weight-bold \"\r\n                            style={{ textDecoration: \"underline\" }}\r\n                            onClick={toggleShowAll}\r\n                          >\r\n                            + {remainingSkillsCount}more\r\n                          </Button>\r\n                        </div>\r\n                      )}\r\n                  </div>\r\n                  {/* <div className='mt-2'>\r\n            <h2 className='mx-2'>Topics</h2>\r\n              <Button color=\"light\" className=\"mb-2 font-weight-semibold mx-2\" size='xs'>\r\n                Change jobs\r\n              </Button>\r\n              <Button color=\"light\" className=\"mb-2 font-weight-semibold mx-2\" size='xs'>\r\n                Learn a new Skill\r\n              </Button>\r\n              <Button color=\"light\" className=\"mb-2 font-weight-semibold mx-2\" size='xs'>\r\n                Grow your career\r\n              </Button>\r\n            </div> */}\r\n                  {/* <div className='mt-2 '>\r\n            <NavLink className=''  onClick={handleConnectClick}>\r\n              <Button outline color=\"primary\" className=\" font-weight-semibold mx-2 \" size='large'>\r\n                <span className='font-weight-semibold  text-one'>Connect</span>\r\n                <i className='simple-icon-social-linkedin text-primary font-weight-semibold text-one  '/>\r\n              </Button>\r\n              </NavLink>\r\n            </div> */}\r\n                  <MentorTabCard\r\n                    handleConnectClick={handleConnectClick}\r\n                    chatUserId={chatUserId}\r\n                    price={mentorprofiledetails1.price}\r\n                  />\r\n                </div>\r\n              </Row>\r\n              <hr />\r\n              <Colxx className='sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" mt-5'>\r\n                <Row>\r\n                  <div className=\"w-100 \">\r\n                    <h1 className=\"font-weight-semibold text-large\">About</h1>\r\n\r\n                    <p className=\"text-one font-weight-medium \">\r\n                      {mentorprofiledetails1.bio}\r\n                    </p>\r\n                  </div>\r\n                </Row>\r\n                <hr />\r\n                {(mentorprofiledetails1.featuredArticle ||\r\n                  mentorprofiledetails1.introVideo) && (\r\n                  // <Colxx className='sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" mt-5'>\r\n                  <Row>\r\n                    <div>\r\n                      <h1>\r\n                        Get to know {mentorprofiledetails1.firstName}{\" \"}\r\n                        {mentorprofiledetails1.lastName}\r\n                      </h1>\r\n                    </div>\r\n                    {/* <h3 className='font-weight-semibold text-large'>Get to Know Arun Prasad</h3> */}\r\n                  </Row>\r\n                )}\r\n                {/* </Colxx> */}\r\n                {/* <Colxx xxs=\"12\"> */}\r\n\r\n                <Row>\r\n                  {mentorprofiledetails1 &&\r\n                    mentorprofiledetails1.featuredArticle && (\r\n                      <Colxx xxs=\"12\" xs=\"12\" lg=\"4\" md=\"6\">\r\n                        <NavLink href={mentorprofiledetails1.featuredArticle}>\r\n                          <Card className=\"mb-4 \">\r\n                            {/* <div className=\"position-relative\">\r\n             <CardImg\r\n               top\r\n               src=\"/assets/img/profiles/2.jpg\"\r\n               alt=\"Card image cap\"\r\n             />\r\n            \r\n           </div> */}\r\n                            <CardBody>\r\n                              <h4 className=\"font-weight-semibold text-one text-center\">\r\n                                Featured Article\r\n                              </h4>\r\n                              <h4 className=\"color-theme-2 mt-4 text-center\">\r\n                                LINK\r\n                              </h4>\r\n                              {/* <CardSubtitle className=\"mb-4 text-one text-muted\">\r\n             Yeah, you read that right. Titles are not something which should\r\n              drive your decision to join a new company.\r\n             </CardSubtitle> */}\r\n                            </CardBody>\r\n                          </Card>\r\n                        </NavLink>\r\n                      </Colxx>\r\n                    )}\r\n                  {mentorprofiledetails1 &&\r\n                    mentorprofiledetails1.introVideo && (\r\n                      <Colxx xxs=\"12\" xs=\"12\" lg=\"4\" md=\"6\">\r\n                        <NavLink href={mentorprofiledetails1.introVideo}>\r\n                          <Card className=\"mb-4 w-80\">\r\n                            {thumbnailUrl && (\r\n                              <div className=\"position-relative\">\r\n                                <CardImg\r\n                                  top\r\n                                  src={thumbnailUrl}\r\n                                  alt=\"Card image cap\"\r\n                                  className=\"\"\r\n                                />\r\n                              </div>\r\n                            )}\r\n                            <CardBody>\r\n                              {!thumbnailUrl && (\r\n                                <h4 className=\"font-weight-semibold text-one text-center mb-4\">\r\n                                  Intro video\r\n                                </h4>\r\n                              )}\r\n                              <h4 className=\"color-theme-2  text-center\">\r\n                                VIDEO\r\n                              </h4>\r\n                              {/* <h4 className='font-weight-semibold text-one'>Concatenating Strings\r\n                 Mock Interview (Senior MAANG Engineer)\r\n                </h4>\r\n                <CardSubtitle className=\"mb-4 text-one text-muted\">\r\n                Dont leave your software engineering career to chance. \r\n                Sign up for Exponents SWE interview course today:Concatenating strings is …\r\n                </CardSubtitle> */}\r\n                            </CardBody>\r\n                          </Card>\r\n                        </NavLink>\r\n                      </Colxx>\r\n                    )}\r\n                  {/* <Colxx xxs=\"12\" xs=\"6\" lg=\"4\">\r\n            <Card className=\"mb-4\">\r\n              <CardBody>\r\n                <CardSubtitle className=\"mb-4\">\r\n                  Homemade Cheesecake with Fresh Berries and Mint\r\n                </CardSubtitle>\r\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\r\n                  09.04.2018\r\n                </CardText>\r\n              </CardBody>\r\n              <div className=\"position-relative\">\r\n                <CardImg\r\n                  bottom\r\n                  src=\"/assets/img/cards/thumb-1.jpg\"\r\n                  alt=\"Card image cap\"\r\n                />\r\n                <Badge\r\n                  color=\"primary\"\r\n                  pill\r\n                  className=\"position-absolute badge-top-left\"\r\n                >\r\n                  NEW\r\n                </Badge>\r\n                <Badge\r\n                  color=\"secondary\"\r\n                  pill\r\n                  className=\"position-absolute badge-top-left-2\"\r\n                >\r\n                  TRENDING\r\n                </Badge>\r\n              </div>\r\n            </Card>\r\n          </Colxx> */}\r\n                  {/* {showAll && (\r\n          <Colxx  lg={7} className=\"my-4\" id=\"skillsSection\">\r\n            <h1>Skills</h1>\r\n            <div className='d-flex flex-wrap '>\r\n              {mentorprofiledetails.skills && mentorprofiledetails.skills.map((skill) => (\r\n                <div key={skill}>\r\n              <Button color=\"light\" className=\"mb-2 font-weight-semibold mx-2\" size='md'>\r\n                {skill}\r\n              </Button>\r\n            </div>\r\n              ))}\r\n            </div>\r\n          </Colxx>\r\n        )} */}\r\n                  <div id=\"skillsSection\" />\r\n                  <Colxx lg={7} className=\"my-4\" ref={skillsSectionRef}>\r\n                    <Row>\r\n                      <h1 className=\"font-weight-semibold text-large\">\r\n                        Skills{\" \"}\r\n                      </h1>\r\n                    </Row>\r\n                    <Row>\r\n                      <div className=\"d-flex flex-wrap \">\r\n                        {mentorprofiledetails1.skills &&\r\n                          mentorprofiledetails1.skills.map((skill) => (\r\n                            <div key={skill}>\r\n                              <Button\r\n                                color=\"light\"\r\n                                className=\"mb-2 font-weight-semibold mr-2\"\r\n                                size=\"md\"\r\n                              >\r\n                                {skill}\r\n                              </Button>\r\n                            </div>\r\n                          ))}\r\n                      </div>\r\n                    </Row>\r\n                  </Colxx>\r\n                </Row>\r\n                {/* </Colxx> */}\r\n              </Colxx>\r\n            </div>\r\n          </Colxx>\r\n\r\n          <ReviewsComponent\r\n            category=\"mentorship\" // for lawyer profile \"law\"\r\n            revieweeId={mid}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MentorProfile;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Card, CardBody, NavLink, Row, Spinner } from \"reactstrap\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst quillModules = {\r\n  toolbar: [\r\n    // [{ header: [1, 2, false] }],\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    // [\"link\", \"image\"],\r\n    // [\"clean\"],\r\n  ],\r\n};\r\nconst quillFormats = [\r\n  \"header\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n];\r\n\r\nconst MentorAnswers = () => {\r\n  const { questionId } = useParams();\r\n  const history = useHistory();\r\n\r\n  // Backend url\r\n  const url1 = `${baseUrl}/api/mentee/multipleQuestions/${questionId}`;\r\n  const url = `${baseUrl}/api/mentorAnswers/${questionId}`;\r\n  const [answers, setAnswers] = useState([]);\r\n  const [answers1, setAnswers1] = useState([]);\r\n  const [editing, setEditing] = useState(false);\r\n  const [editedQuestion, setEditedQuestion] = useState(\"\");\r\n  const [editedAnswer1, setEditedAnswer1] = useState(\"\");\r\n  const [editStates, setEditStates] = useState({});\r\n  const [loadingStates, setLoadingStates] = useState({});\r\n  const [questionLoadingStates, setQuestionLoadingStates] = useState(false);\r\n\r\n  const [updateTrigger, setUpdateTrigger] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const isArrayOfLength = (value, length) => {\r\n    return Array.isArray(value) && value.length > length;\r\n  };\r\n\r\n  const [textQuillStandart, setTextQuillStandart] = useState(\"\");\r\n  const AnswersByMentors = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(url1);\r\n      setAnswers(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setLoading(false); // Set loading to false once data is fetched or error occurs\r\n    }\r\n  };\r\n  const AnswersByMentors1 = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(url);\r\n      setAnswers1(response.data);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    AnswersByMentors();\r\n    AnswersByMentors1();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleEdit = () => {\r\n    setEditedQuestion(answers.questionHeadingBrief);\r\n    setEditing(true);\r\n  };\r\n\r\n  function getRoleRes() {\r\n    return localStorage.getItem(\"roleRes\");\r\n  }\r\n  const roleRes = getRoleRes();\r\n  const userId = localStorage.getItem(\"userId\");\r\n\r\n  const handleSave = async () => {\r\n    setQuestionLoadingStates(true);\r\n    try {\r\n      // await axios.put(`${baseUrl}/multipleQuestions/${questionId}`,\r\n      const response = await axios.put(`${baseUrl}/api/mentee/question`, {\r\n        id: questionId,\r\n        questionHeading: answers.questionHeading,\r\n        questionHeadingBrief: editedQuestion,\r\n        views: answers.views, // Keep the views unchanged\r\n        time: answers.time, // Keep the time unchanged\r\n      });\r\n      setAnswers((prevAnswers) => ({\r\n        ...prevAnswers,\r\n        questionHeadingBrief: editedQuestion,\r\n      }));\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n    } catch (error) {\r\n      console.error(\"Error updating question:\", error);\r\n    }\r\n    setEditing(false);\r\n    setQuestionLoadingStates(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditedQuestion(\"\");\r\n    setEditing(false);\r\n  };\r\n\r\n  //   const handleEdit1 = (id) => {\r\n  //     const answerToUpdate = answers1.answer.find(answer => answer.id === id);\r\n  //     setEditedAnswer1(answerToUpdate.answerText); // Update the edited answer text\r\n  //     setEditStates(prevState => ({\r\n  //       ...prevState,\r\n  //       [id]: !prevState[id]\r\n  //     }));\r\n  //   };\r\n  // ;\r\n  const handleEdit1 = (id) => {\r\n    const answerToUpdate = answers1.answer.find((answer) => answer.id === id);\r\n    if (answerToUpdate) {\r\n      setEditedAnswer1(answerToUpdate.answered); // Use answered to initialize editedAnswer1\r\n      setEditStates((prevState) => ({\r\n        ...prevState,\r\n        [id]: true, // Set edit mode to true\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSave1 = async (id) => {\r\n    setLoadingStates((prev) => ({ ...prev, [id]: true }));\r\n    try {\r\n      const updatedAnswer = {\r\n        id,\r\n        answerText: editedAnswer1,\r\n      };\r\n\r\n      const response = await axios.put(\r\n        `${baseUrl}/api/mentor/answer`,\r\n        updatedAnswer\r\n      );\r\n\r\n      if (response.status === 201) {\r\n        // or 200, depending on your API\r\n        // Log the response to check if it contains the updated data\r\n        console.log(\"Server response:\", response.data);\r\n\r\n        // Update the local state with the data from the server\r\n        const updatedAnswers = answers1.answer.map((ans) =>\r\n          ans.id === id\r\n            ? { ...ans, answerText: response.data.answerText || editedAnswer1 }\r\n            : ans\r\n        );\r\n        setAnswers1((prevAnswers) => ({\r\n          ...prevAnswers,\r\n          answer: updatedAnswers,\r\n        }));\r\n\r\n        // Force a re-render\r\n        setUpdateTrigger((prev) => !prev);\r\n\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n\r\n        // Refresh the answers from the server\r\n        await AnswersByMentors1();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating answer:\", error);\r\n      ToasterComponent(\"error\", \"Failed to update answer. Please try again.\");\r\n    } finally {\r\n      setEditStates((prevState) => ({\r\n        ...prevState,\r\n        [id]: false,\r\n      }));\r\n      setLoadingStates((prev) => ({ ...prev, [id]: false }));\r\n    }\r\n  };\r\n\r\n  const handleCancel1 = (id) => {\r\n    setEditStates((prevState) => ({\r\n      ...prevState,\r\n      [id]: false,\r\n    }));\r\n  };\r\n\r\n  const handleDeleteAnswer = async (answerId) => {\r\n    setLoadingStates((prev) => ({ ...prev, [answerId]: true }));\r\n    try {\r\n      // Construct the URL for deleting the answer\r\n      // const deleteUrl = `${baseUrl}/mentorAnswers/${questionId}/answer/${answerId}`;\r\n      const deleteUrl = `${baseUrl}/api/mentor/${answerId}/answer`;\r\n\r\n      const response = await axios.delete(deleteUrl);\r\n\r\n      if (response.status === 200) {\r\n        NotificationManager.success(\r\n          `Answer successfully deleted`,\r\n          \"Success\",\r\n          3000\r\n        );\r\n        setAnswers1((prevState) => ({\r\n          ...prevState,\r\n          answer: prevState.answer.filter((answer) => answer.id !== answerId),\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting answer:\", error);\r\n    }\r\n    setLoadingStates((prev) => ({ ...prev, [answerId]: false }));\r\n  };\r\n  const handleDeleteQuestion = async () => {\r\n    setQuestionLoadingStates(true);\r\n    try {\r\n      const deleteUrl = `${baseUrl}/api/mentee/${questionId}/question`;\r\n\r\n      const response = await axios.delete(deleteUrl);\r\n      if (response.status === 200) {\r\n        NotificationManager.success(\r\n          `Question successfully deleted`,\r\n          \"Success\",\r\n          3000\r\n        );\r\n        // setAnswers1(prevState => ({\r\n        //   ...prevState,\r\n        //   question: prevState.question.filter(question => question.id !== questionsId)\r\n        // }));\r\n        history.push(\"/app/questions\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting question:\", error);\r\n    }\r\n    setQuestionLoadingStates(false);\r\n  };\r\n\r\n  const handlePostAnswer = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const doc = new DOMParser().parseFromString(\r\n        textQuillStandart,\r\n        \"text/html\"\r\n      );\r\n      const strippedAnswerText = doc.body.textContent || \"\";\r\n\r\n      await axios.post(`${baseUrl}/api/mentor/${questionId}/answer`, {\r\n        answerText: strippedAnswerText,\r\n      });\r\n      NotificationManager.success(\r\n        `Answer posted successfully`,\r\n        \"Success\",\r\n        3000\r\n      );\r\n    } catch (error) {\r\n      NotificationManager.error(`Error posting answer`, \"Error\", 3000);\r\n      console.error(\"Error posting answer:\", error);\r\n    }\r\n    try {\r\n      const updatedResponse = await axios.get(\r\n        `${baseUrl}/api/mentorAnswers/${questionId}`\r\n      );\r\n      setAnswers1(updatedResponse.data.answer);\r\n      await AnswersByMentors();\r\n      await AnswersByMentors1();\r\n      setTextQuillStandart(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error fecting answer:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAnswers1(answers1);\r\n  }, [answers1, editStates]);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n        <div className=\"form-group\">\r\n          {/*  Questions card starts */}\r\n          <Card className=\"mt-3\">\r\n            <CardBody>\r\n              <div className=\"d-flex justify-content-between\">\r\n                <h3 className=\"font-weight-semibold\">\r\n                  {answers.questionHeading}\r\n                </h3>\r\n                {/* {roleRes.includes(\"USER\") && ( */}\r\n                {+userId === answers.menteeUserId && (\r\n                  <div className=\"d-flex \">\r\n                    {editing ? (\r\n                      <>\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          onClick={handleSave}\r\n                          className=\"mr-2\"\r\n                        >\r\n                          {questionLoadingStates ? (\r\n                            <Spinner size=\"sm\" color=\"primary\" />\r\n                          ) : (\r\n                            \"Save\"\r\n                          )}\r\n                        </Button>\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          onClick={handleCancel}\r\n                          className=\"mr-2\"\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"mr-2\"\r\n                          onClick={handleEdit}\r\n                        >\r\n                          <i className=\"simple-icon-pencil\" />\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          onClick={handleDeleteQuestion}\r\n                        >\r\n                          {questionLoadingStates ? (\r\n                            <Spinner size=\"sm\" color=\"primary\" />\r\n                          ) : (\r\n                            <i className=\"simple-icon-trash\" />\r\n                          )}\r\n                        </Button>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                {/* )} */}\r\n              </div>\r\n\r\n              {editing ? (\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control my-2 py-2\"\r\n                  value={editedQuestion}\r\n                  onChange={(e) => setEditedQuestion(e.target.value)}\r\n                />\r\n              ) : (\r\n                <p className=\"text-one\">{answers.questionHeadingBrief}</p>\r\n              )}\r\n              {loading ? (\r\n                <div\r\n                  className=\"d-flex justify-content-center align-items-center\"\r\n                  style={{ height: \"100px\" }}\r\n                >\r\n                  <Spinner animation=\"border\" size=\"sm\" color=\"primary\" />\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <h6 className=\"text-muted\">\r\n                    Asked on {new Date(answers.time).toLocaleString()}\r\n                  </h6>\r\n                  <hr />\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <h6 className=\"font-weight-semibold\">\r\n                      {answers.views}\r\n                      <span className=\"text-muted\"> views</span>\r\n                    </h6>\r\n                    {/* <span className=\"text-one\">\r\n                  <i className=\"iconsminds-mail-inbox\" />\r\n                </span> */}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n\r\n          <div className=\"w-100\">\r\n            <NavLink href=\"/app/askquestions\">\r\n              <Button\r\n                color=\"primary\"\r\n                outline\r\n                block\r\n                className=\"default mt-3 mb-2 text-one py-3 w-100\"\r\n              >\r\n                Ask a Free Question\r\n              </Button>\r\n            </NavLink>\r\n          </div>\r\n\r\n          {/*  Questions  card ends  */}\r\n          {isArrayOfLength(answers1.answer, 0) && (\r\n            <div\r\n              className=\" mt-3 d-flex justify-content-between font-weight-medium\"\r\n              style={{ gap: \"16px\" }}\r\n            >\r\n              <h6 className=\"text-nowrap\">\r\n                Answers {answers1.answer && answers1.answer.length}\r\n              </h6>\r\n\r\n              {/* <h6>\r\n                Like the answers? Consult privately with the Mentor of your\r\n                choice\r\n              </h6> */}\r\n            </div>\r\n          )}\r\n          {/*  answer starts  */}\r\n\r\n          {/* {answers1.answer &&\r\n            answers1.answer.map((an) => {\r\n              return (\r\n                <Card key={updateTrigger} className=\"mt-3 \">\r\n                  <CardBody>\r\n                    <div className=\"d-flex w-100 justify-content-between\">\r\n                      <div className=\" \">\r\n                        <h3>{an.mentorName}</h3>\r\n                        <p className=\"text-one text-muted\">{an.mentorRole}</p>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {editStates[an.id] ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control py-2 my-2\"\r\n                        value={editedAnswer1}\r\n                        onChange={(e) => setEditedAnswer1(e.target.value)}\r\n                      />\r\n                    ) : (\r\n                      <p>{an.answered}</p>\r\n                    )}\r\n                    <p>Answered {an.answeredYear} years ago</p>\r\n\r\n                    <hr />\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <div>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          {+userId === an.mentorId && (\r\n                            <>\r\n                              {editStates[an.id] ? (\r\n                                <>\r\n                                  <Button\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    onClick={() => handleSave1(an.id)}\r\n                                    className=\"mr-2\"\r\n                                    disabled={loadingStates[an.id]}\r\n                                  >\r\n                                    {loadingStates[an.id] ? (\r\n                                      <Spinner size=\"sm\" color=\"primary\" />\r\n                                    ) : (\r\n                                      \"Save\"\r\n                                    )}\r\n                                  </Button>\r\n                                  <Button\r\n                                    className=\"mr-2\"\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    onClick={() => handleCancel1(an.id)}\r\n                                  >\r\n                                    Cancel\r\n                                  </Button>\r\n                                </>\r\n                              ) : (\r\n                                <>\r\n                                  <Button\r\n                                    className=\"mr-2\"\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    onClick={() => handleEdit1(an.id)}\r\n                                  >\r\n                                    <i className=\"simple-icon-pencil\" />\r\n                                  </Button>\r\n                                  <Button\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    onClick={() => handleDeleteAnswer(an.id)}\r\n                                  >\r\n                                    {loadingStates[an.id] ? (\r\n                                      <Spinner size=\"sm\" />\r\n                                    ) : (\r\n                                      <i className=\"simple-icon-trash\" />\r\n                                    )}\r\n                                  </Button>\r\n                                </>\r\n                              )}\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n              );\r\n            })} */}\r\n          {answers1.answer ? (\r\n            answers1.answer.map((an) => (\r\n              <Card key={updateTrigger} className=\"mt-3\">\r\n                <CardBody>\r\n                  <div className=\"d-flex w-100 justify-content-between\">\r\n                    <div>\r\n                      <h3>{an.mentorName}</h3>\r\n                      <p className=\"text-one text-muted\">{an.mentorRole}</p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {editStates[an.id] ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control py-2 my-2\"\r\n                      value={editedAnswer1}\r\n                      onChange={(e) => setEditedAnswer1(e.target.value)}\r\n                    />\r\n                  ) : (\r\n                    <p>{an.answered}</p>\r\n                  )}\r\n                  {/* <p>Answered {an.answeredYear} years ago</p> */}\r\n\r\n                  <hr />\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <div>\r\n                      <div className=\"d-flex align-items-center\">\r\n                        {+userId === an.mentorId && (\r\n                          <>\r\n                            {editStates[an.id] ? (\r\n                              <>\r\n                                <Button\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  onClick={() => handleSave1(an.id)}\r\n                                  className=\"mr-2\"\r\n                                  disabled={loadingStates[an.id]}\r\n                                >\r\n                                  {loadingStates[an.id] ? (\r\n                                    <Spinner\r\n                                      size=\"sm\"\r\n                                      animation=\"border\"\r\n                                      color=\"primary\"\r\n                                    />\r\n                                  ) : (\r\n                                    \"Save\"\r\n                                  )}\r\n                                </Button>\r\n                                <Button\r\n                                  className=\"mr-2\"\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  onClick={() => handleCancel1(an.id)}\r\n                                >\r\n                                  Cancel\r\n                                </Button>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <Button\r\n                                  className=\"mr-2\"\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  onClick={() => handleEdit1(an.id)}\r\n                                >\r\n                                  <i className=\"simple-icon-pencil\" />\r\n                                </Button>\r\n                                <Button\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  onClick={() => handleDeleteAnswer(an.id)}\r\n                                >\r\n                                  {loadingStates[an.id] ? (\r\n                                    <Spinner size=\"sm\" animation=\"border\" />\r\n                                  ) : (\r\n                                    <i className=\"simple-icon-trash\" />\r\n                                  )}\r\n                                </Button>\r\n                              </>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            ))\r\n          ) : (\r\n            <div\r\n              className=\"d-flex justify-content-center align-items-center\"\r\n              style={{ height: \"100px\" }}\r\n            >\r\n              <Spinner size=\"sm\" animation=\"border\" color=\"primary\" />\r\n            </div>\r\n          )}\r\n\r\n          {/*  answer ends  */}\r\n          {roleRes.includes(\"USER\") ? (\r\n            <></>\r\n          ) : (\r\n            <div className=\"mt-4\">\r\n              <h5 className=\"font-weight-semibold\">Your Answer</h5>\r\n              <Row className=\"mb-4\">\r\n                <Colxx xxs=\"12\">\r\n                  <ReactQuill\r\n                    theme=\"snow\"\r\n                    value={textQuillStandart}\r\n                    onChange={(val) => setTextQuillStandart(val)}\r\n                    modules={quillModules}\r\n                    formats={quillFormats}\r\n                  />\r\n                  <div>\r\n                    <Button\r\n                      className=\"mt-2\"\r\n                      szie=\"xs\"\r\n                      color=\"primary\"\r\n                      onClick={handlePostAnswer}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? \"Posting...\" : \"Post your answer\"}\r\n                    </Button>\r\n                  </div>\r\n                </Colxx>\r\n              </Row>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MentorAnswers;\r\n","import { Colxx } from 'components/common/CustomBootstrap';\r\nimport React,{useState} from 'react';\r\nimport {Button, Card, CardBody } from 'reactstrap';\r\n\r\nconst MentorConsult = () => {\r\n    const [inputkey,setInputKey]=useState('')\r\n    const [inputkey1,setInputKey1]=useState('')\r\n  return (\r\n    <div>\r\n        <Colxx  sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className='mx-auto '>\r\n         <Card>\r\n            <CardBody>\r\n             <h1 className='font-weight-semibold'>Chat with the mentor</h1>\r\n             <Card className='my-3 w-50'>\r\n                <CardBody>\r\n                    <h3>Mentor Name</h3>\r\n                    <h4>Mentor qualification</h4>\r\n                    <h4>Mentor role</h4>\r\n                    <h4>Mentor experience</h4>\r\n                </CardBody>\r\n             </Card>\r\n             <div>\r\n             <h3>Student Name</h3>\r\n             <div className='input-group my-3'>\r\n       <input\r\n            type=\"text\"\r\n            className=\"form-control  py-3\"\r\n            placeholder ='Enter student name'\r\n            value={inputkey}\r\n            onChange={(e) =>setInputKey(e.target.value)}\r\n          />\r\n         \r\n       </div>\r\n       <h3>Mobile Number</h3>\r\n             <div className='input-group my-3'>\r\n       <input\r\n            type=\"text\"\r\n            className=\"form-control   py-3\"\r\n            placeholder ='Enter mobile number'\r\n            value={inputkey1}\r\n            onChange={(e) =>setInputKey1(e.target.value)}\r\n          />\r\n         \r\n       </div>\r\n       <p className='text-muted'>A verification code will be sent to this number</p>\r\n             </div>\r\n             <Button color=\"primary\" outline size='lg' className=\" default\">\r\n              Continue\r\n              </Button>\r\n            </CardBody>\r\n         </Card>\r\n        </Colxx>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MentorConsult;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport CustomSelectInput from \"components/common/CustomSelectInput\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  // FormGroup,\r\n  //   Dropdown,\r\n  // DropdownToggle,\r\n  // DropdownItem,\r\n  // DropdownMenu,CustomInput,\r\n  FormGroup,\r\n  // Form,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  Row,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport DateRangePicker from \"../BigCalendar/DateRangePicker\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst MentorCreatedSlot = () => {\r\n  // const url=`${baseUrl}/mentorSlotAvailablity`;\r\n\r\n  // To change the url to backend uncomment the below line\r\n  const url = `${baseUrl}/api/calendar/appointment/mentor`;\r\n\r\n  const [mentoravailable, setMentorAvailable] = useState([]);\r\n  const [currentWeekStart, setCurrentWeekStart] = useState(new Date());\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  // const mentorName = searchParams.get('mentorName');\r\n  const mentorId = searchParams.get(\"mentorId\");\r\n  const history = useHistory();\r\n  // const redirectToSessionLists1 = () => {\r\n  //   // Redirect to the specified URL with the query parameter\r\n  //   history.push('/app/sessionmentor');\r\n  // };\r\n\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  // const [selectedDate, setSelectedDate] = useState('');\r\n  // const [selectedDates, setSelectedDates] = useState([]);\r\n  // const [dropdownBasicOpen, setDropdownBasicOpen] = useState(false);\r\n  // const [dropdownBasicOpen1, setDropdownBasicOpen1] = useState(false);\r\n  // const [dropdownBasicOpen2, setDropdownBasicOpen2] = useState(false);\r\n  // const [dropdownBasicOpen3, setDropdownBasicOpen3] = useState(false);\r\n  // const [dropdownBasicOpen4, setDropdownBasicOpen4] = useState(false);\r\n  // const [dropdownBasicOpen5, setDropdownBasicOpen5] = useState(false);\r\n  const [selectedHourDropdown, setSelectedHourDropdown] = useState(null); // Renamed state variable\r\n  const [selectedHourDropdown1, setSelectedHourDropdown1] = useState(null); // Renamed state variable\r\n  //  const [upcomingSessions] = useState([]);\r\n  const [minutedrop, setMinutedrop] = useState(null);\r\n  const [minutedrop1, setMinutedrop1] = useState(null);\r\n  const [modalSmall, setModalSmall] = useState(false);\r\n  const [selectedfromampm, setSelectedFromAmPm] = useState(null); // State for AM selection\r\n  const [selectedfromampm1, setSelectedFromAmPm1] = useState(null); // State for AM selection\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  function getRoleRes() {\r\n    return localStorage.getItem(\"roleRes\");\r\n  }\r\n  const roleRes = getRoleRes();\r\n\r\n  const redirectToSessionLists1 = () => {\r\n    // Redirect to the specified URL with the query parameter\r\n    history.push(\"/app/sessionmentor\");\r\n  };\r\n\r\n  // Function to get the start date of the current week\r\n  const getStartOfWeek = () => {\r\n    const currentDate = new Date();\r\n    const day = currentDate.getDay();\r\n    const diff = currentDate.getDate() - day + (day === 0 ? -6 : 1); // Adjust when day is Sunday\r\n    return new Date(currentDate.setDate(diff));\r\n  };\r\n\r\n  const fetchMentorSlotsCreate = async (fromTime, toTime) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${url}?&fromTime=${fromTime}&toTime=${toTime}`\r\n      );\r\n\r\n      const availability = response.data;\r\n      setMentorAvailable(availability);\r\n      // console.log(availability);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleOkButtonClick = async () => {\r\n    setLoading(true);\r\n    // Ensure selectedDate is not null\r\n    if (!selectedDate) {\r\n      console.error(\"Selected date is null\");\r\n      return;\r\n    }\r\n\r\n    // Convert selected date to UTC timestamp\r\n    const selectedDateTime = new Date(selectedDate);\r\n\r\n    // Set the hours and minutes for the selected date\r\n    const selectedHourFrom =\r\n      (selectedHourDropdown % 12) + (selectedfromampm === \"PM\" ? 12 : 0); // Adjust for PM\r\n    selectedDateTime.setHours(selectedHourFrom, minutedrop, 0, 0);\r\n    const fromTimeStamp = selectedDateTime.getTime(); // Get the UTC timestamp for 'from' time\r\n\r\n    // Calculate 'to' time\r\n    const toDateTime = new Date(selectedDateTime); // Create a new Date object based on 'from' time\r\n    const selectedHourTo =\r\n      (selectedHourDropdown1 % 12) + (selectedfromampm1 === \"PM\" ? 12 : 0); // Adjust for PM\r\n    toDateTime.setHours(selectedHourTo, minutedrop1, 0, 0); // Set the 'to' hour\r\n    const toTimeStamp = toDateTime.getTime(); // Get the UTC timestamp for 'to' time\r\n\r\n    // Create an object with the required structure\r\n    const slot = {\r\n      fromTimeStamp,\r\n      toTimeStamp,\r\n    };\r\n\r\n    // Make the POST request\r\n    try {\r\n      const response = await axios.post(url, [slot]);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      // console.log('Data saved successfully:', response.data);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      }\r\n      console.error(\"Error saving data:\", error);\r\n    }\r\n\r\n    setLoading(false);\r\n    setModalSmall(false);\r\n\r\n    // window.location.reload();\r\n    const startOfWeekTimestamp = new Date(currentWeekStart);\r\n    startOfWeekTimestamp.setHours(0, 0, 0, 0);\r\n    const endOfWeekTimestamp = new Date(currentWeekStart);\r\n    endOfWeekTimestamp.setDate(endOfWeekTimestamp.getDate() + 6);\r\n    endOfWeekTimestamp.setHours(23, 59, 59, 999);\r\n    fetchMentorSlotsCreate(\r\n      startOfWeekTimestamp.getTime(),\r\n      endOfWeekTimestamp.getTime()\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Set the time of currentWeekStart to 12:00 PM (noon)\r\n    const startOfWeekTimestamp = new Date(currentWeekStart);\r\n    startOfWeekTimestamp.setHours(0, 0, 0, 0);\r\n\r\n    // Set the time of endOfWeekTimestamp to 11:59 PM\r\n    const endOfWeekTimestamp = new Date(currentWeekStart);\r\n    endOfWeekTimestamp.setDate(endOfWeekTimestamp.getDate() + 6); // Set to end of week\r\n    endOfWeekTimestamp.setHours(23, 59, 59, 999);\r\n\r\n    const newUrl = `${window.location.origin}${\r\n      window.location.pathname\r\n    }?&fromTime=${startOfWeekTimestamp.getTime()}&toTime=${endOfWeekTimestamp.getTime()}`;\r\n    window.history.replaceState(null, \"\", newUrl);\r\n\r\n    fetchMentorSlotsCreate(\r\n      startOfWeekTimestamp.getTime(),\r\n      endOfWeekTimestamp.getTime()\r\n    );\r\n  }, [currentWeekStart, mentorId]);\r\n\r\n  useEffect(() => {\r\n    const startOfWeek = getStartOfWeek();\r\n    setCurrentWeekStart(startOfWeek);\r\n  }, []);\r\n\r\n  // const handleDropdownItemClick = (selectedHour) => {\r\n  //   // Handle the selected hour as needed\r\n  //   setSelectedHourDropdown(selectedHour);\r\n\r\n  //   console.log(`Selected hour: ${selectedHour}`);\r\n  //   // setSelectedHourDropdown(selectedHour);\r\n  // };\r\n  // const handleDropdownItemClick1 = (selectedMinute) => {\r\n  //   // Handle the selected minutes as needed\r\n  //   setMinutedrop(selectedMinute);\r\n  // //  setMinutedrop1(selectedMinute);\r\n  //   // console.log(`Selected minute: ${selectedMinute}`);\r\n  //   // setMinuteDrop(selectedMinute);\r\n  // };\r\n  // const handleDropdownItemClick2 = (selectedHour) => {\r\n  //   // Handle the selected hour as needed\r\n  //   setSelectedHourDropdown1(selectedHour)\r\n  //   // console.log(`Selected hour: ${selectedHour}`);\r\n  //   // setSelectedHourDropdown(selectedHour);\r\n  // };\r\n  // const handleDropdownItemClick3 = (selectedMinute) => {\r\n  //   // Handle the selected minutes as needed\r\n  //   setMinutedrop1(selectedMinute);\r\n  //   // console.log(`Selected minute: ${selectedMinute}`);\r\n  //   // setMinuteDrop(selectedMinute);\r\n  // };\r\n  // const handleDropdownItemClick4 = (selectedAmPmFrom) => {\r\n  //   // Handle the selected minutes as needed\r\n  //   setSelectedFromAmPm(selectedAmPmFrom);\r\n  //   // console.log(`Selected from AM/PM: ${selectedAmPmFrom}`);\r\n  //   // setMinuteDrop(selectedMinute);\r\n  // };\r\n  // const handleDropdownItemClick5 = (selectedAmPmTo) => {\r\n  //   // Handle the selected minutes as needed\r\n  //   setSelectedFromAmPm1(selectedAmPmTo);\r\n\r\n  //   // setMinuteDrop(selectedMinute);\r\n  // };\r\n  // const generateDropdownItems = () => {\r\n  //   const items = [];\r\n  //   for (let i = 1; i <= 12; i+=1) {\r\n  //     const formattedHour = i < 10 ? `0${i}` : i;\r\n  //     items.push(\r\n  //       <DropdownItem key={i} onClick={() => handleDropdownItemClick(i)} >\r\n  //         {formattedHour}\r\n  //       </DropdownItem>\r\n  //     );\r\n  //   }\r\n  //   return items;\r\n  // };\r\n  // const generateMinuteDropdownItems = () => {\r\n  //   const minutes = [0, 15, 30, 45];\r\n  //   const items = minutes.map((minute) => {\r\n  //     const formattedMinute = minute < 10 ? `0${minute}` : minute;\r\n  //     return (\r\n  //       <DropdownItem key={minute} onClick={() => handleDropdownItemClick1(minute)}>\r\n  //         {formattedMinute}\r\n  //       </DropdownItem>\r\n  //     );\r\n  //   });\r\n  //   return items;\r\n  // };\r\n  // const generateDropdownItems1 = () => {\r\n  //   const items = [];\r\n  //   for (let i = 1; i <= 12; i+=1) {\r\n  //     const formattedHour = i < 10 ? `0${i}` : i;\r\n  //     items.push(\r\n  //       <DropdownItem key={i} onClick={() => handleDropdownItemClick2(i)} >\r\n  //         {formattedHour}\r\n  //       </DropdownItem>\r\n  //     );\r\n  //   }\r\n  //   return items;\r\n  // };\r\n\r\n  // const generateMinuteDropdownItems1 = () => {\r\n  //   const minutes = [0, 15, 30, 45];\r\n  //   const items = minutes.map((minute) => {\r\n  //     const formattedMinute = minute < 10 ? `0${minute}` : minute;\r\n  //     return (\r\n  //       <DropdownItem key={minute} onClick={() => handleDropdownItemClick3(minute)}>\r\n  //         {formattedMinute}\r\n  //       </DropdownItem>\r\n  //     );\r\n  //   });\r\n  //   return items;\r\n  // };\r\n  // const generateAmPmDropdownItems = () => {\r\n  //   const amPmOptions = ['AM', 'PM'];\r\n  //   return amPmOptions.map((amPm) => (\r\n  //     <DropdownItem key={amPm} onClick={() => handleDropdownItemClick4(amPm)}>\r\n  //       {amPm}\r\n  //     </DropdownItem>\r\n  //   ));\r\n  // };\r\n  // const generateAmPmDropdownItems1 = () => {\r\n  //   const amPmOptions = ['AM', 'PM'];\r\n  //   return amPmOptions.map((amPm) => (\r\n  //     <DropdownItem key={amPm} onClick={() => handleDropdownItemClick5(amPm)}>\r\n  //       {amPm}\r\n  //     </DropdownItem>\r\n  //   ));\r\n  // };\r\n\r\n  // weeklist functions start\r\n  const handleDropdownItemClick = (selectedHour) => {\r\n    setSelectedHourDropdown(selectedHour.value);\r\n\r\n    console.log(`Selected hour: ${selectedHour.value}`);\r\n  };\r\n\r\n  const handleDropdownItemClick1 = (selectedMinute) => {\r\n    setMinutedrop(selectedMinute.value);\r\n  };\r\n\r\n  const handleDropdownItemClick2 = (selectedHour) => {\r\n    setSelectedHourDropdown1(selectedHour.value);\r\n  };\r\n  const handleDropdownItemClick3 = (selectedMinute) => {\r\n    setMinutedrop1(selectedMinute.value);\r\n  };\r\n\r\n  const handleDropdownItemClick4 = (selectedAmPmFrom) => {\r\n    setSelectedFromAmPm(selectedAmPmFrom.value);\r\n    console.log(`Selected from AM/PM: ${selectedAmPmFrom.value}`);\r\n  };\r\n  const handleDropdownItemClick5 = (selectedAmPmTo) => {\r\n    setSelectedFromAmPm1(selectedAmPmTo.value);\r\n    console.log(`Selected from AM/PM: ${selectedAmPmTo.value}`);\r\n  };\r\n  const generateDropdownItemsSelect = () => {\r\n    const items = [];\r\n    for (let i = 1; i <= 12; i += 1) {\r\n      const formattedHour = i < 10 ? `0${i}` : i;\r\n      items.push({ value: formattedHour, label: formattedHour });\r\n    }\r\n    return items;\r\n  };\r\n  const generateMinuteDropdownItems = () => {\r\n    const minutes = [0, 15, 30, 45];\r\n    const items = [];\r\n\r\n    minutes.forEach((minute) => {\r\n      const formattedMinute = minute < 10 ? `0${minute}` : `${minute}`;\r\n      items.push({ value: formattedMinute, label: formattedMinute });\r\n    });\r\n\r\n    return items;\r\n  };\r\n  const generateAmPmDropdownItems1 = () => {\r\n    const amPmOptions = [\"AM\", \"PM\"];\r\n    const items = [];\r\n\r\n    amPmOptions.forEach((amPm) => {\r\n      items.push({ value: amPm, label: amPm });\r\n    });\r\n\r\n    return items;\r\n  };\r\n  const generateDropdownItems1 = () => {\r\n    const items = [];\r\n    for (let i = 1; i <= 12; i += 1) {\r\n      const formattedHour = i < 10 ? `0${i}` : i;\r\n      items.push({ value: formattedHour, label: formattedHour });\r\n    }\r\n    return items;\r\n  };\r\n  const generateMinuteDropdownItems1 = () => {\r\n    const minutes = [0, 15, 30, 45];\r\n    const items = [];\r\n\r\n    minutes.forEach((minute) => {\r\n      const formattedMinute = minute < 10 ? `0${minute}` : `${minute}`;\r\n      items.push({ value: formattedMinute, label: formattedMinute });\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n  const generateAmPmDropdownItems = () => {\r\n    const amPmOptions = [\"AM\", \"PM\"];\r\n    const items = [];\r\n\r\n    amPmOptions.forEach((amPm) => {\r\n      items.push({ value: amPm, label: amPm });\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n  const goToPreviousWeek = () => {\r\n    const newStartDate = new Date(currentWeekStart);\r\n    newStartDate.setDate(newStartDate.getDate() - 7);\r\n    setCurrentWeekStart(newStartDate);\r\n  };\r\n\r\n  const goToNextWeek = () => {\r\n    const newStartDate = new Date(currentWeekStart);\r\n    newStartDate.setDate(newStartDate.getDate() + 7);\r\n    setCurrentWeekStart(newStartDate);\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    const monthNames = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    const month = monthNames[date.getMonth()];\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    return `${day}-${month}-${date.getFullYear()}`;\r\n  };\r\n  const getWeekDates = () => {\r\n    const weekDates = [];\r\n    const startDate = new Date(currentWeekStart);\r\n    for (let i = 0; i < 7; i += 1) {\r\n      const currentDate = new Date(startDate);\r\n      currentDate.setDate(startDate.getDate() + i);\r\n      weekDates.push(currentDate);\r\n    }\r\n    return weekDates;\r\n  };\r\n\r\n  const isPreviousWeekDisabled = () => {\r\n    // Disable the button if you're already in the current week\r\n    const today = new Date();\r\n    const currentWeekStartDate = new Date(today);\r\n    const day = today.getDay(); // Get the day of the week (0 = Sunday, 1 = Monday, ..., 6 = Saturday)\r\n\r\n    if (day === 0) {\r\n      // If today is Sunday, subtract 6 days to get the start of the current week\r\n      currentWeekStartDate.setDate(today.getDate() - 6);\r\n    } else {\r\n      // Otherwise, subtract the number of days from the current day to get the start of the current week\r\n      currentWeekStartDate.setDate(today.getDate() - (day - 1));\r\n    }\r\n\r\n    // Set hours, minutes, seconds, and milliseconds to zero\r\n    currentWeekStartDate.setHours(0, 0, 0, 0);\r\n\r\n    const storedWeekStart = new Date(currentWeekStart);\r\n    storedWeekStart.setHours(0, 0, 0, 0); // Set hours, minutes, seconds, and milliseconds to zero\r\n\r\n    const disabled =\r\n      currentWeekStartDate.getTime() === storedWeekStart.getTime();\r\n\r\n    return disabled;\r\n  };\r\n\r\n  const handleTimeSlotClick = (date) => {\r\n    setSelectedDate(date);\r\n\r\n    setModalSmall(true); // Optionally open the modal when a time slot is clicked\r\n  };\r\n\r\n  const handleAddSlotClick = (date) => {\r\n    setSelectedDate(date); // Set the selected date\r\n    setModalSmall(true); // Show the modal\r\n  };\r\n  const deleteMentorSlot = async (id, fromTime, toTime) => {\r\n    try {\r\n      await axios.delete(`${baseUrl}/api/calendar/delete/${id}`);\r\n      // Fetch the updated slots after deletion\r\n      await fetchMentorSlotsCreate(fromTime, toTime);\r\n    } catch (error) {\r\n      console.error(\"Error deleting slot:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSlotClick = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this slot?\")) {\r\n      // Use selected date and time from state\r\n      const selectedDateTime = new Date(selectedDate);\r\n\r\n      // Set the hours and minutes for the selected date\r\n      const selectedHourFrom =\r\n        (selectedHourDropdown % 12) + (selectedfromampm === \"PM\" ? 12 : 0); // Adjust for PM\r\n      selectedDateTime.setHours(selectedHourFrom, minutedrop, 0, 0);\r\n      const fromTime = selectedDateTime.getTime(); // Get the UTC timestamp for 'from' time\r\n\r\n      // Calculate 'to' time\r\n      const toDateTime = new Date(selectedDateTime); // Create a new Date object based on 'from' time\r\n      const selectedHourTo =\r\n        (selectedHourDropdown1 % 12) + (selectedfromampm1 === \"PM\" ? 12 : 0); // Adjust for PM\r\n      toDateTime.setHours(selectedHourTo, minutedrop1, 0, 0); // Set the 'to' hour\r\n      const toTime = toDateTime.getTime(); // Get the UTC timestamp for 'to' time\r\n\r\n      deleteMentorSlot(id, fromTime, toTime);\r\n    }\r\n  };\r\n\r\n  const handleCloseIconClick = (e, id) => {\r\n    e.stopPropagation();\r\n    handleDeleteSlotClick(id);\r\n  };\r\n\r\n  const selectData = generateDropdownItemsSelect();\r\n  const minutesSelectData = generateMinuteDropdownItems();\r\n  const toHoursSelectData = generateDropdownItems1();\r\n  const toMinutesSelectData = generateMinuteDropdownItems1();\r\n  const fromAmPmSelectData = generateAmPmDropdownItems();\r\n  const toAmPmSelectData = generateAmPmDropdownItems1();\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Colxx xxs=\"8\" className=\"mx-auto\">\r\n          {/* <h1 className='py-4 text-large'> {mentorName} availability</h1> */}\r\n          <h1 className=\"py-4 text-large\">My slots</h1>\r\n\r\n          <div className=\"font-weight-semibold d-flex justify-content-center align-items-center\">\r\n            <span\r\n              className=\"font-weight-semibold text-xlarge mr-2 cursor-pointer\"\r\n              style={{\r\n                cursor: isPreviousWeekDisabled() ? \"not-allowed\" : \"pointer\",\r\n                opacity: isPreviousWeekDisabled() ? 0.5 : 1, // Lower opacity for disabled state\r\n              }}\r\n              onClick={!isPreviousWeekDisabled() ? goToPreviousWeek : undefined}\r\n              onKeyDown={(e) => {\r\n                if (\r\n                  !isPreviousWeekDisabled() &&\r\n                  (e.key === \"Enter\" || e.key === \" \")\r\n                ) {\r\n                  goToPreviousWeek();\r\n                }\r\n              }}\r\n              role=\"button\"\r\n              tabIndex={!isPreviousWeekDisabled() ? 0 : -1}\r\n              aria-disabled={isPreviousWeekDisabled()}\r\n            >\r\n              {/* <i className='simple-icon-arrow-left' /> */}\r\n              <i\r\n                className={`simple-icon-arrow-left ${\r\n                  isPreviousWeekDisabled() ? \"disabled\" : \"\"\r\n                }`}\r\n              />\r\n            </span>\r\n\r\n            <div>\r\n              <h4 className=\" font-weight-semibold\">\r\n                {formatDate(currentWeekStart)} -{\" \"}\r\n                {formatDate(\r\n                  new Date(currentWeekStart.getTime() + 6 * 24 * 60 * 60 * 1000)\r\n                )}\r\n              </h4>\r\n            </div>\r\n            <span\r\n              className=\"ml-2 font-weight-semibold text-xlarge\"\r\n              role=\"button\"\r\n              tabIndex={0}\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={goToNextWeek}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\" || e.key === \" \") {\r\n                  goToNextWeek();\r\n                }\r\n              }}\r\n            >\r\n              <i className=\"simple-icon-arrow-right\" />\r\n            </span>\r\n            {/* <Button className='ml-5 font-weight-semibold text-one' color=\"primary\" onClick={goToNextWeek} ><i className='simple-icon-arrow-right '/></Button> */}\r\n          </div>\r\n          <Card className=\"mb-4 mt-4\">\r\n            <CardBody>\r\n              <Table bordered>\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-one\">Date</th>\r\n                    <th className=\"text-center text-one\">Availablilty time</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {getWeekDates().map((date) => (\r\n                    <tr key={date.getTime()}>\r\n                      {/* <td>{getMonthName(date.getMonth())} {formatDate(date)}</td> */}\r\n                      <td> {formatDate(date)}</td>\r\n\r\n                      <td>\r\n                        {/*  new one */}\r\n\r\n                        {/* {mentoravailable.map((availability) => (\r\n  availability.availableSlots.map((avail) => {\r\n    const availDate = new Date(avail.fromTimeStamp);\r\n    if (availDate.toDateString() === date.toDateString()) {\r\n      const FromDate = new Date(avail.fromTimeStamp);\r\n      const ToDate = new Date(avail.toTimeStamp);\r\n      \r\n      const fromHours = FromDate.getHours() % 12 || 12; \r\n      const fromMinutes = String(FromDate.getMinutes()).padStart(2, '0');\r\n      const fromPeriod = FromDate.getHours() < 12 ? 'AM' : 'PM';\r\n      \r\n      const toHours = ToDate.getHours() % 12 || 12; \r\n      const toMinutes = String(ToDate.getMinutes()).padStart(2, '0');\r\n      const toPeriod = ToDate.getHours() < 12 ? 'AM' : 'PM';\r\n      \r\n      const fromTime = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n      const toTime = `${toHours}:${toMinutes} ${toPeriod}`;\r\n\r\n      const isPastTime = ToDate < new Date();\r\n\r\n      return (\r\n        <>\r\n         \r\n    \r\n          <div\r\n      key={date.getTime()}\r\n      role=\"button\" // Add role attribute for accessibility\r\n      tabIndex={0}   // Add tabIndex for keyboard accessibility\r\n      className={`text-center ${isPastTime ? 'cursor-not-allowed' : 'cursor-pointer'} py-2 mt-2`}\r\n      style={{ outline: `1px solid black`,cursor:\"pointer\" }} // Remove default focus outline if needed\r\n      onClick={() => handleTimeSlotClick(date)}\r\n      onKeyDown={(e) => {\r\n        if (e.key === 'Enter' || e.key === ' ') {\r\n          handleTimeSlotClick(date);\r\n        }\r\n      }}\r\n      onMouseEnter={(e) => { e.currentTarget.classList.add('bg-primary'); }}\r\n  onMouseLeave={(e) => { e.currentTarget.classList.remove('bg-primary'); }} \r\n    >\r\n      <span className='d-flex gap-5 justify-content-center align-items-center'> {fromTime} to {toTime} <i className='simple-icon-close ml-4'/></span> \r\n    </div>\r\n    <div className='mt-2 text-center mx-auto' key={`edit-${date.getTime()}`}>\r\n          <Button\r\n            size='sm'\r\n            className='text-center mx-auto my-4 '\r\n            onClick={()=>handleAddSlotClick(date)}\r\n            key={`edit-${date.getTime()}`}\r\n            outline\r\n            color=\"primary\"\r\n            block\r\n          >\r\n            +\r\n          </Button>\r\n        </div>\r\n        </>\r\n      );\r\n    }\r\n   \r\n   return  null;\r\n    \r\n  })\r\n \r\n \r\n))} */}\r\n                        {/* {date>=new Date()&&(\r\n  <>\r\n  {\r\n  mentoravailable.map((availability) => {\r\n    let hasSlotsForDay = false; // Flag to track if there are slots for the particular day\r\n\r\n    const slots = availability.availableSlots.map((avail) => {\r\n      const availDate = new Date(avail.fromTimeStamp);\r\n      if (availDate.toDateString() === date.toDateString()) {\r\n        hasSlotsForDay = true; // Set flag true if there's at least one slot for the day\r\n\r\n        const FromDate = new Date(avail.fromTimeStamp);\r\n        const ToDate = new Date(avail.toTimeStamp);\r\n        \r\n        const fromHours = FromDate.getHours() % 12 || 12; \r\n        const fromMinutes = String(FromDate.getMinutes()).padStart(2, '0');\r\n        const fromPeriod = FromDate.getHours() < 12 ? 'AM' : 'PM';\r\n        \r\n        const toHours = ToDate.getHours() % 12 || 12; \r\n        const toMinutes = String(ToDate.getMinutes()).padStart(2, '0');\r\n        const toPeriod = ToDate.getHours() < 12 ? 'AM' : 'PM';\r\n        \r\n        const fromTime = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n        const toTime = `${toHours}:${toMinutes} ${toPeriod}`;\r\n\r\n        const isPastTime = ToDate < new Date();\r\n\r\n        return (\r\n          <div\r\n            key={avail.fromTimeStamp} // Updated key to use timestamp to ensure it is unique\r\n            role=\"button\"\r\n            tabIndex={0}\r\n            className={`text-center ${isPastTime ? 'cursor-not-allowed' : 'cursor-pointer'} py-2 mt-2`}\r\n            style={{ outline: `1px solid black`, cursor: \"pointer\" }}\r\n            onClick={() => handleTimeSlotClick(avail.fromTimeStamp)}\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter' || e.key === ' ') {\r\n                handleTimeSlotClick(avail.fromTimeStamp);\r\n              }\r\n            }}\r\n            onMouseEnter={(e) => { e.currentTarget.classList.add('bg-primary'); }}\r\n            onMouseLeave={(e) => { e.currentTarget.classList.remove('bg-primary'); }}\r\n          >\r\n            <span className='d-flex gap-5 justify-content-center align-items-center'>\r\n              {fromTime} to {toTime} <i className='simple-icon-close ml-4'/>\r\n            </span> \r\n          </div>\r\n        );\r\n      }\r\n      return null;\r\n    });\r\n\r\n    // Add slot button only once per date\r\n    return (\r\n      <>\r\n        {slots}\r\n        {hasSlotsForDay && (\r\n          <div className='mt-2 text-center mx-auto' key={`add-slot-${date.getTime()}`}>\r\n            <Button\r\n              size='sm'\r\n              className='text-center mx-auto my-4'\r\n              onClick={() => handleAddSlotClick(date)}\r\n              outline\r\n              color=\"primary\"\r\n              block\r\n            >\r\n              +\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  })\r\n}\r\n{mentoravailable.every(availability => (\r\n        !availability.availableSlots.some(avail => new Date(avail.fromTimeStamp).toDateString() === date.toDateString())\r\n      ))  &&(\r\n        <div className='mt-2 text-center mx-auto' key={`edit-${date.getTime()}`}>\r\n          <Button\r\n            size='sm'\r\n            className='text-center mx-auto my-4 '\r\n            onClick={()=>handleAddSlotClick(date)}\r\n            key={`edit-${date.getTime()}`}\r\n            outline\r\n            color=\"primary\"\r\n            block\r\n          >\r\n            +\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n{mentoravailable.map((availability) => (\r\n  availability.bookedSlots.map((avail) => {\r\n    const availDate = new Date(avail.fromTimeStamp);\r\n    if (availDate.toDateString() === date.toDateString()) {\r\n      const FromDate = new Date(avail.fromTimeStamp);\r\n      const ToDate = new Date(avail.toTimeStamp);\r\n      \r\n      const fromHours = FromDate.getHours() % 12 || 12; \r\n      const fromMinutes = String(FromDate.getMinutes()).padStart(2, '0');\r\n      const fromPeriod = FromDate.getHours() < 12 ? 'AM' : 'PM';\r\n      \r\n      const toHours = ToDate.getHours() % 12 || 12; \r\n      const toMinutes = String(ToDate.getMinutes()).padStart(2, '0');\r\n      const toPeriod = ToDate.getHours() < 12 ? 'AM' : 'PM';\r\n      \r\n      const fromTime = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n      const toTime = `${toHours}:${toMinutes} ${toPeriod}`;\r\n\r\n      const isPastTime = ToDate < new Date();\r\n\r\n      return (\r\n        <>\r\n          \r\n\r\n    <div\r\n      key={date.getTime()}\r\n      role=\"button\" // Add role attribute for accessibility\r\n      tabIndex={0}   // Add tabIndex for keyboard accessibility\r\n      className={`text-center ${isPastTime ? 'cursor-not-allowed' : 'cursor-pointer'} bg-primary py-2 mt-2`}\r\n      style={{ outline: 'none'}} // Remove default focus outline if needed\r\n      // onClick={() => handleTimeSlotClick(date)}\r\n      onKeyDown={(e) => {\r\n        if (e.key === 'Enter' || e.key === ' ') {\r\n          handleTimeSlotClick(date);\r\n        }\r\n      }}\r\n    >\r\n      <span className='d-flex gap-5 justify-content-center align-items-center'> {fromTime} to {toTime}<i className='iconsminds-full-view-2 ml-4'/></span> \r\n    </div>\r\n    \r\n\r\n         \r\n        </>\r\n      );\r\n    }\r\n   \r\n  return null;\r\n  })\r\n))}\r\n  </>\r\n)} */}\r\n                        {mentoravailable.map((availability) => {\r\n                          let hasSlotsForDay = false; // Flag to track if there are slots for the particular day\r\n\r\n                          const slots = availability.availableSlots.map(\r\n                            (avail) => {\r\n                              const availDate = new Date(avail.fromTimeStamp);\r\n                              if (\r\n                                availDate.toDateString() === date.toDateString()\r\n                              ) {\r\n                                hasSlotsForDay = true; // Set flag true if there's at least one slot for the day\r\n\r\n                                const FromDate = new Date(avail.fromTimeStamp);\r\n                                const ToDate = new Date(avail.toTimeStamp);\r\n\r\n                                const fromHours =\r\n                                  FromDate.getHours() % 12 || 12;\r\n                                const fromMinutes = String(\r\n                                  FromDate.getMinutes()\r\n                                ).padStart(2, \"0\");\r\n                                const fromPeriod =\r\n                                  FromDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                                const toHours = ToDate.getHours() % 12 || 12;\r\n                                const toMinutes = String(\r\n                                  ToDate.getMinutes()\r\n                                ).padStart(2, \"0\");\r\n                                const toPeriod =\r\n                                  ToDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                                const fromTime = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n                                const toTime = `${toHours}:${toMinutes} ${toPeriod}`;\r\n\r\n                                const isPastTime = ToDate < new Date();\r\n\r\n                                return (\r\n                                  <div\r\n                                    key={avail.fromTimeStamp} // Updated key to use timestamp to ensure it is unique\r\n                                    role=\"button\"\r\n                                    tabIndex={0}\r\n                                    className={`text-center ${\r\n                                      isPastTime\r\n                                        ? \"cursor-not-allowed\"\r\n                                        : \"cursor-pointer\"\r\n                                    } py-2 mt-2`}\r\n                                    style={{\r\n                                      outline: `1px solid black`,\r\n                                      cursor: \"pointer\",\r\n                                    }}\r\n                                    onClick={() =>\r\n                                      handleTimeSlotClick(avail.fromTimeStamp)\r\n                                    }\r\n                                    onKeyDown={(e) => {\r\n                                      if (e.key === \"Enter\" || e.key === \" \") {\r\n                                        handleTimeSlotClick(\r\n                                          avail.fromTimeStamp\r\n                                        );\r\n                                      }\r\n                                    }}\r\n                                    onMouseEnter={(e) => {\r\n                                      e.currentTarget.classList.add(\r\n                                        \"bg-primary\"\r\n                                      );\r\n                                    }}\r\n                                    onMouseLeave={(e) => {\r\n                                      e.currentTarget.classList.remove(\r\n                                        \"bg-primary\"\r\n                                      );\r\n                                    }}\r\n                                  >\r\n                                    <span className=\"d-flex gap-5 justify-content-center align-items-center\">\r\n                                      {fromTime} to {toTime}\r\n                                      <i\r\n                                        className=\"simple-icon-close ml-4 text-one\"\r\n                                        role=\"button\"\r\n                                        tabIndex={0}\r\n                                        onClick={(e) =>\r\n                                          handleCloseIconClick(e, avail.id)\r\n                                        }\r\n                                        onKeyDown={(e) => {\r\n                                          if (\r\n                                            e.key === \"Enter\" ||\r\n                                            e.key === \" \"\r\n                                          ) {\r\n                                            handleCloseIconClick(e, avail.id);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    </span>\r\n                                  </div>\r\n                                );\r\n                              }\r\n                              return null;\r\n                            }\r\n                          );\r\n\r\n                          // Add slot button only once per date\r\n                          return (\r\n                            <>\r\n                              {slots}\r\n                              {hasSlotsForDay && (\r\n                                <div\r\n                                  className=\"mt-2 text-center mx-auto\"\r\n                                  key={`add-slot-${date.getTime()}`}\r\n                                >\r\n                                  <Button\r\n                                    size=\"sm\"\r\n                                    className=\"text-center mx-auto my-4\"\r\n                                    onClick={() => handleAddSlotClick(date)}\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    block\r\n                                    style={{ borderRadius: \"0px\" }}\r\n                                  >\r\n                                    +\r\n                                  </Button>\r\n                                </div>\r\n                              )}\r\n                            </>\r\n                          );\r\n                        })}\r\n                        {mentoravailable.every(\r\n                          (availability) =>\r\n                            !availability.availableSlots.some(\r\n                              (avail) =>\r\n                                new Date(avail.fromTimeStamp).toDateString() ===\r\n                                date.toDateString()\r\n                            )\r\n                        ) && (\r\n                          <div\r\n                            className=\"mt-2 text-center mx-auto\"\r\n                            key={`edit-${date.getTime()}`}\r\n                          >\r\n                            <Button\r\n                              size=\"sm\"\r\n                              className=\"text-center mx-auto my-4\"\r\n                              onClick={() => handleAddSlotClick(date)}\r\n                              key={`edit-${date.getTime()}`}\r\n                              outline\r\n                              color=\"primary\"\r\n                              block\r\n                              style={{ borderRadius: \"0px\" }}\r\n                            >\r\n                              +\r\n                            </Button>\r\n                          </div>\r\n                        )}\r\n\r\n                        {mentoravailable.map((availability) =>\r\n                          availability.bookedSlots.map((avail) => {\r\n                            const availDate = new Date(avail.fromTimeStamp);\r\n                            if (\r\n                              availDate.toDateString() === date.toDateString()\r\n                            ) {\r\n                              const FromDate = new Date(avail.fromTimeStamp);\r\n                              const ToDate = new Date(avail.toTimeStamp);\r\n\r\n                              const fromHours = FromDate.getHours() % 12 || 12;\r\n                              const fromMinutes = String(\r\n                                FromDate.getMinutes()\r\n                              ).padStart(2, \"0\");\r\n                              const fromPeriod =\r\n                                FromDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                              const toHours = ToDate.getHours() % 12 || 12;\r\n                              const toMinutes = String(\r\n                                ToDate.getMinutes()\r\n                              ).padStart(2, \"0\");\r\n                              const toPeriod =\r\n                                ToDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                              const fromTime = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n                              const toTime = `${toHours}:${toMinutes} ${toPeriod}`;\r\n\r\n                              const isPastTime = ToDate < new Date();\r\n\r\n                              return (\r\n                                <>\r\n                                  <div\r\n                                    key={date.getTime()}\r\n                                    role=\"button\" // Add role attribute for accessibility\r\n                                    tabIndex={0} // Add tabIndex for keyboard accessibility\r\n                                    className={`text-center ${\r\n                                      isPastTime\r\n                                        ? \"cursor-not-allowed\"\r\n                                        : \"cursor-pointer\"\r\n                                    } bg-primary py-2 mt-2`}\r\n                                    style={{ outline: \"none\" }} // Remove default focus outline if needed\r\n                                    // onClick={() => handleTimeSlotClick(date)}\r\n                                    onKeyDown={(e) => {\r\n                                      if (e.key === \"Enter\" || e.key === \" \") {\r\n                                        handleTimeSlotClick(date);\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    <span className=\"d-flex gap-5 justify-content-center align-items-center\">\r\n                                      {\" \"}\r\n                                      {fromTime} to {toTime}\r\n                                      <i className=\"iconsminds-full-view-2 ml-4\" />\r\n                                    </span>\r\n                                  </div>\r\n                                </>\r\n                              );\r\n                            }\r\n\r\n                            return null;\r\n                          })\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n\r\n              <div className=\"mb-4\">\r\n                <div>\r\n                  <div className=\"\">\r\n                    <Modal\r\n                      isOpen={modalSmall}\r\n                      toggle={() => setModalSmall(!modalSmall)}\r\n                      className=\"mt-5\"\r\n                    >\r\n                      <ModalBody>\r\n                        {/* <div className='text-right p-2'>\r\n                  \r\n                   <span style={{cursor:'pointer'}} \r\n            className='mt-2'\r\n            role='button'\r\n            tabIndex={0}\r\n            onClick={() => setModalSmall(false)}\r\n            onKeyDown={(e) => {\r\n                if (e.key === 'Enter' || e.key === ' ') {\r\n                    setModalSmall(false);\r\n                }\r\n            }}\r\n        >\r\n            <i className='simple-icon-close text-large' />\r\n        </span>\r\n          \r\n          <div>\r\n            <Form className='mt-4'>\r\n            <FormGroup row className=''>\r\n                  <Label  sm={2} className='font-weight-bold'>\r\n                    Date\r\n                  </Label>\r\n                  <Colxx sm={10}>\r\n                  <DateRangePicker  selectedDate={selectedDate} setSelectedDate={setSelectedDate}/>\r\n                  </Colxx>\r\n                </FormGroup>\r\n            <FormGroup row>\r\n                  <Label  sm={2} className='font-weight-bold'>\r\n                    From\r\n                  </Label>\r\n                  <Colxx sm={10}>\r\n                  <div>\r\n       <div className='d-flex '>\r\n    \r\n       <Dropdown direction=\"down\"\r\n  isOpen={dropdownBasicOpen}\r\n  toggle={() => setDropdownBasicOpen(!dropdownBasicOpen)}\r\n  className=\"mb-5  \"\r\n  \r\n \r\n>\r\n\r\n  <DropdownToggle caret color=\"primary\" outline className=''>\r\n    \r\n    \r\n    {selectedHourDropdown !== null ? selectedHourDropdown : 'Hours'} \r\n  </DropdownToggle>\r\n  <DropdownMenu className='' style={{ maxHeight: '200px', overflowY: 'auto'}}>\r\n  {generateDropdownItems()}\r\n  </DropdownMenu>\r\n</Dropdown>\r\n<Dropdown direction='down'\r\n            isOpen={dropdownBasicOpen1}\r\n            toggle={() => setDropdownBasicOpen1(!dropdownBasicOpen1)}\r\n            className=\"mb-5 ml-3\"\r\n           \r\n          >\r\n            <DropdownToggle caret color=\"primary\" outline>\r\n           \r\n              {minutedrop !== null ? minutedrop : 'Minutes'} \r\n   \r\n            </DropdownToggle>\r\n            <DropdownMenu style={{ maxHeight: '200px', overflowY: 'auto' }}>\r\n             {generateMinuteDropdownItems()}\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n          <Dropdown direction=\"down\"\r\n  isOpen={dropdownBasicOpen4}\r\n  toggle={() => setDropdownBasicOpen4(!dropdownBasicOpen4)}\r\n  className=\"mb-5 \"\r\n  \r\n \r\n>\r\n<DropdownToggle caret color=\"primary\" outline className='ml-3'>\r\n{selectedfromampm !==null ? selectedfromampm : 'AM /PM' }\r\n<DropdownMenu className=''>\r\n  { generateAmPmDropdownItems ()}\r\n  </DropdownMenu>\r\n</DropdownToggle>\r\n      \r\n  </Dropdown>\r\n       </div>\r\n     </div>\r\n                  </Colxx>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label  sm={2} className='font-weight-bold'>\r\n                    To\r\n                  </Label>\r\n                  <Colxx sm={10}>\r\n                  <div className=''>\r\n       \r\n       <div className='d-flex'>\r\n       <Dropdown direction=\"down\"\r\n  isOpen={dropdownBasicOpen2}\r\n  toggle={() => setDropdownBasicOpen2(!dropdownBasicOpen2)}\r\n  className=\"mb-5\"\r\n  \r\n \r\n>\r\n\r\n  <DropdownToggle caret color=\"primary\" outline className='' >\r\n    \r\n    \r\n    {selectedHourDropdown1 !== null ? selectedHourDropdown1 : 'Hours'} \r\n  </DropdownToggle>\r\n  <DropdownMenu className='' style={{ maxHeight: '200px', overflowY: 'auto'}}>\r\n  {generateDropdownItems1()}\r\n  </DropdownMenu>\r\n</Dropdown>\r\n<Dropdown direction='down'\r\n            isOpen={dropdownBasicOpen3}\r\n            toggle={() => setDropdownBasicOpen3(!dropdownBasicOpen3)}\r\n            className=\"mb-5 ml-3\"\r\n           \r\n          >\r\n            <DropdownToggle caret color=\"primary\" outline>\r\n           \r\n              {minutedrop1 !== null ? minutedrop1 : 'Minutes'} \r\n   \r\n            </DropdownToggle>\r\n            <DropdownMenu style={{ maxHeight: '200px', overflowY: 'auto' }}>\r\n             {generateMinuteDropdownItems1()}\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n          <Dropdown direction=\"down\"\r\n  isOpen={dropdownBasicOpen5}\r\n  toggle={() => setDropdownBasicOpen5(!dropdownBasicOpen5)}\r\n  className=\"mb-5 \"\r\n  \r\n \r\n>\r\n<DropdownToggle caret color=\"primary\" outline className='ml-3'>\r\n{selectedfromampm1 !==null ? selectedfromampm1 : 'AM /PM' }\r\n<DropdownMenu className=''>\r\n  { generateAmPmDropdownItems1 ()}\r\n  </DropdownMenu>\r\n</DropdownToggle>\r\n      \r\n  </Dropdown>\r\n       </div>\r\n       <Button onClick={handleOkButtonClick} color='primary'>OK</Button>\r\n     </div>\r\n                  </Colxx>\r\n                </FormGroup>\r\n            </Form>\r\n          </div>\r\n                 </div> */}\r\n\r\n                        <div className=\"\">\r\n                          <div>\r\n                            <span\r\n                              style={{ cursor: \"pointer\" }}\r\n                              className=\"mt-2\"\r\n                              role=\"button\"\r\n                              tabIndex={0}\r\n                              onClick={() => setModalSmall(false)}\r\n                              onKeyDown={(e) => {\r\n                                if (e.key === \"Enter\" || e.key === \" \") {\r\n                                  setModalSmall(false);\r\n                                }\r\n                              }}\r\n                            >\r\n                              <i className=\"simple-icon-close text-large\" />\r\n                            </span>\r\n\r\n                            <div>\r\n                              <Form className=\"mt-4\">\r\n                                <FormGroup row className=\"\">\r\n                                  <Label sm={2} className=\"font-weight-bold\">\r\n                                    Date\r\n                                  </Label>\r\n                                  <Colxx sm={10}>\r\n                                    <DateRangePicker\r\n                                      selectedDate={selectedDate}\r\n                                      setSelectedDate={setSelectedDate}\r\n                                    />\r\n                                  </Colxx>\r\n                                </FormGroup>\r\n                              </Form>\r\n                            </div>\r\n\r\n                            <Label className=\"text-one font-weight-bold\">\r\n                              From\r\n                            </Label>\r\n                            <Row>\r\n                              <Col md={4} sm={12} lg={4}>\r\n                                <div className=\"form-group has-float-label\">\r\n                                  <Label>Hours</Label>\r\n\r\n                                  <Select\r\n                                    components={{ Input: CustomSelectInput }}\r\n                                    className=\"react-select\"\r\n                                    classNamePrefix=\"react-select\"\r\n                                    name=\"form-field-name\"\r\n                                    value={generateDropdownItemsSelect().find(\r\n                                      (option) =>\r\n                                        option.value === selectedHourDropdown\r\n                                    )}\r\n                                    onChange={handleDropdownItemClick}\r\n                                    options={[\r\n                                      {\r\n                                        value: \"\",\r\n                                        label: \"Hours\",\r\n                                        isDisabled: true,\r\n                                      },\r\n                                      ...selectData,\r\n                                    ]}\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n                              <Col md={4} sm={12} lg={4}>\r\n                                <div className=\"form-group has-float-label\">\r\n                                  <Label>Minutes</Label>\r\n\r\n                                  <Select\r\n                                    components={{ Input: CustomSelectInput }}\r\n                                    className=\"react-select\"\r\n                                    classNamePrefix=\"react-select\"\r\n                                    name=\"form-field-name\"\r\n                                    value={generateMinuteDropdownItems().find(\r\n                                      (option) => option.value === minutedrop\r\n                                    )}\r\n                                    onChange={handleDropdownItemClick1}\r\n                                    options={[\r\n                                      {\r\n                                        value: \"\",\r\n                                        label: \"Minutes\",\r\n                                        isDisabled: true,\r\n                                      },\r\n                                      ...minutesSelectData,\r\n                                    ]}\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n                              <Col md={4} sm={12} lg={4}>\r\n                                <div className=\"form-group has-float-label\">\r\n                                  <Label>AM/PM</Label>\r\n\r\n                                  <Select\r\n                                    components={{ Input: CustomSelectInput }}\r\n                                    className=\"react-select\"\r\n                                    classNamePrefix=\"react-select\"\r\n                                    name=\"form-field-name\"\r\n                                    // value={selectedfromampm}\r\n                                    value={fromAmPmSelectData.find(\r\n                                      (option) =>\r\n                                        option.value === selectedfromampm\r\n                                    )}\r\n                                    onChange={handleDropdownItemClick4}\r\n                                    options={[\r\n                                      {\r\n                                        value: \"\",\r\n                                        label: \"AM/PM\",\r\n                                        isDisabled: true,\r\n                                      },\r\n                                      ...fromAmPmSelectData,\r\n                                    ]}\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n                            </Row>\r\n                          </div>\r\n\r\n                          <div className=\"\">\r\n                            <Label className=\"text-one font-weight-bold\">\r\n                              To\r\n                            </Label>\r\n                            <div className=\"\">\r\n                              <Row>\r\n                                <Col md={4} lg={4} sm={12}>\r\n                                  <div className=\"form-group has-float-label\">\r\n                                    <Label>Hours</Label>\r\n\r\n                                    <Select\r\n                                      components={{ Input: CustomSelectInput }}\r\n                                      className=\"react-select\"\r\n                                      classNamePrefix=\"react-select\"\r\n                                      name=\"form-field-name\"\r\n                                      value={generateDropdownItems1().find(\r\n                                        (option) =>\r\n                                          option.value === selectedHourDropdown1\r\n                                      )}\r\n                                      onChange={handleDropdownItemClick2}\r\n                                      options={[\r\n                                        {\r\n                                          value: \"\",\r\n                                          label: \"Hours\",\r\n                                          isDisabled: true,\r\n                                        },\r\n                                        ...toHoursSelectData,\r\n                                      ]}\r\n                                    />\r\n                                  </div>\r\n                                </Col>\r\n                                <Col md={4} lg={4} sm={12}>\r\n                                  <div className=\"form-group has-float-label\">\r\n                                    <Label>Minutes</Label>\r\n\r\n                                    <Select\r\n                                      components={{ Input: CustomSelectInput }}\r\n                                      className=\"react-select\"\r\n                                      classNamePrefix=\"react-select\"\r\n                                      name=\"form-field-name\"\r\n                                      value={generateMinuteDropdownItems1().find(\r\n                                        (option) =>\r\n                                          option.value === selectedHourDropdown1\r\n                                      )}\r\n                                      onChange={handleDropdownItemClick3}\r\n                                      options={[\r\n                                        {\r\n                                          value: \"\",\r\n                                          label: \"Minutes\",\r\n                                          isDisabled: true,\r\n                                        },\r\n                                        ...toMinutesSelectData,\r\n                                      ]}\r\n                                    />\r\n                                  </div>\r\n                                </Col>\r\n                                <Col md={4} lg={4} sm={12}>\r\n                                  <div>\r\n                                    <div className=\"form-group has-float-label\">\r\n                                      <Label>AM/PM</Label>\r\n\r\n                                      <Select\r\n                                        components={{\r\n                                          Input: CustomSelectInput,\r\n                                        }}\r\n                                        className=\"react-select\"\r\n                                        classNamePrefix=\"react-select\"\r\n                                        name=\"form-field-name\"\r\n                                        // value={selectedfromampm}\r\n                                        value={toAmPmSelectData.find(\r\n                                          (option) =>\r\n                                            option.value === selectedfromampm1\r\n                                        )}\r\n                                        onChange={handleDropdownItemClick5}\r\n                                        options={[\r\n                                          {\r\n                                            value: \"\",\r\n                                            label: \"AM/PM\",\r\n                                            isDisabled: true,\r\n                                          },\r\n                                          ...toAmPmSelectData,\r\n                                        ]}\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                </Col>\r\n                              </Row>\r\n                              <Row>\r\n                                <Col>\r\n                                  <div className=\"row justify-content-center\">\r\n                                    <Button\r\n                                      onClick={handleOkButtonClick}\r\n                                      className={`btn-shadow btn-multiple-state ${\r\n                                        loading ? \"show-spinner\" : \"\"\r\n                                      }`}\r\n                                      color=\"primary\"\r\n                                    >\r\n                                      <span className=\"spinner d-inline-block\">\r\n                                        <span className=\"bounce1\" />\r\n                                        <span className=\"bounce2\" />\r\n                                        <span className=\"bounce3\" />\r\n                                      </span>\r\n                                      <span className=\"label\">OK</span>\r\n                                    </Button>\r\n                                  </div>\r\n                                </Col>\r\n                              </Row>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* <PopupWizard selectedDate={selectedDate} setSelectedDate={setSelectedDate} \r\n        mentorName={mentorName} mentorId={mentorId} /> */}\r\n                      </ModalBody>\r\n                    </Modal>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n\r\n          <Card style={{ cursor: \"pointer\" }} className=\"my-2 text-center\">\r\n            <CardBody onClick={redirectToSessionLists1}>\r\n              {roleRes.includes(\"MENTOR\") ? (\r\n                <h5 className=\"font-weight-bold text-primary\">\r\n                  My Mentorship Sessions\r\n                </h5>\r\n              ) : (\r\n                <h5 className=\"font-weight-bold text-primary\">My Sessions</h5>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n          {/* <Button className='' onClick={redirectToSessionLists1}>My Sessions</Button> */}\r\n\r\n          {/* <PopupWizard/> */}\r\n        </Colxx>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MentorCreatedSlot;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CustomInput,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  NavLink,\r\n  Spinner,\r\n} from \"reactstrap\";\r\n\r\nconst FilterQuestions = () => {\r\n  const [isQuestionFetched, setIsQuestionFetched] = useState(false);\r\n  const [dropdownBasicOpen, setDropdownBasicOpen] = useState(false);\r\n  const [dropdownBasicOpen1, setDropdownBasicOpen1] = useState(false);\r\n\r\n  // Backend url below\r\n  const url = `${baseUrl}/api/questions`;\r\n\r\n  const [multiquestions, setMultiQuestions] = useState([]);\r\n  const [editing, setEditing] = useState(false);\r\n  const [editedQuestion, setEditedQuestion] = useState(\"\");\r\n  const [originalQuestions, setOriginalQuestions] = useState([]);\r\n  const [loadingStates, setLoadingStates] = useState({});\r\n  const [editStates, setEditStates] = useState({});\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [paginationMeta, setPaginationMeta] = useState([]);\r\n  const [inputkey, setInputKey] = useState(\"\");\r\n  const [selectedValue, setSelectedValue] = useState(\"Sort by\"); // Default value\r\n  const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n  const userId = localStorage.getItem(\"userId\");\r\n\r\n  // Handle dropdown item click\r\n  const handleSelect = (value) => {\r\n    setSelectedValue(value); // Update the selected value\r\n  };\r\n\r\n  const handleCategoryChange = (e) => {\r\n    const { id, checked } = e.target;\r\n    if (checked) {\r\n      setSelectedCategories([...selectedCategories, id]);\r\n    } else {\r\n      setSelectedCategories(\r\n        selectedCategories.filter((category) => category !== id)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleDeleteAnswer = async (questionId) => {\r\n    setLoadingStates((prev) => ({ ...prev, [questionId]: true }));\r\n    try {\r\n      const deleteUrl = `${baseUrl}/api/mentee/${questionId}/question`;\r\n\r\n      const response = await axios.delete(deleteUrl);\r\n\r\n      if (response.status === 200) {\r\n        NotificationManager.success(\r\n          `Question successfully deleted`,\r\n          \"Success\",\r\n          3000\r\n        );\r\n        // Update the state locally\r\n        setMultiQuestions((prevQuestions) =>\r\n          prevQuestions.filter((question) => question.id !== questionId)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting answer:\", error);\r\n      NotificationManager.error(\"Failed to delete question\", \"Error\", 3000);\r\n    }\r\n    setLoadingStates((prev) => ({ ...prev, [questionId]: false }));\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    const questionToEdit = multiquestions.find(\r\n      (question) => question.id === id\r\n    );\r\n    if (questionToEdit) {\r\n      setEditedQuestion(questionToEdit);\r\n      setEditStates((prevState) => ({\r\n        ...prevState,\r\n        [id]: true,\r\n      }));\r\n    }\r\n    setEditing(true);\r\n  };\r\n\r\n  // const handleSave = async () => {\r\n  //   try {\r\n  //     // await axios.put(`${baseUrl}/multipleQuestions/${questionId}`,\r\n  //     await axios.put(`${baseUrl}/api/mentee/question`, {\r\n  //       id: questionId,\r\n  //       questionHeading: answers.questionHeading,\r\n  //       questionHeadingBrief: editedQuestion,\r\n  //       views: answers.views, // Keep the views unchanged\r\n  //       time: answers.time, // Keep the time unchanged\r\n  //     });\r\n  //     setAnswers((prevAnswers) => ({\r\n  //       ...prevAnswers,\r\n  //       questionHeadingBrief: editedQuestion,\r\n  //     }));\r\n  //   } catch (error) {\r\n  //     console.error(\"Error updating question:\", error);\r\n  //   }\r\n  //   setEditing(false);\r\n  // };\r\n  const categories = [\r\n    { id: \"c1\", label: \"Category 1\" },\r\n    { id: \"c2\", label: \"Category 2\" },\r\n    { id: \"c3\", label: \"Category 3\" },\r\n    { id: \"c4\", label: \"Category 4\" },\r\n    { id: \"c5\", label: \"Category 5\" },\r\n  ];\r\n\r\n  const handleSave = async (id) => {\r\n    const questionToUpdate = multiquestions.find((q) => q.id === id);\r\n    if (!questionToUpdate) return;\r\n\r\n    setLoadingStates((prev) => ({ ...prev, [id]: true }));\r\n\r\n    try {\r\n      const response = await axios.put(`${baseUrl}/api/mentee/question`, {\r\n        id: questionToUpdate.id,\r\n        questionHeading: questionToUpdate.questionHeading,\r\n        questionHeadingBrief: questionToUpdate.questionHeadingBrief,\r\n        views: questionToUpdate.views,\r\n        time: questionToUpdate.time,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        // Update the original questions state\r\n        setOriginalQuestions((prevQuestions) =>\r\n          prevQuestions.map((q) => (q.id === id ? questionToUpdate : q))\r\n        );\r\n\r\n        // Update edit states\r\n        setEditStates((prevState) => ({\r\n          ...prevState,\r\n          [id]: false,\r\n        }));\r\n\r\n        setEditing(false);\r\n        setEditedQuestion(null);\r\n\r\n        NotificationManager.success(\r\n          \"Question successfully updated\",\r\n          \"Success\",\r\n          3000\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating question:\", error);\r\n      NotificationManager.error(\"Failed to update question\", \"Error\", 3000);\r\n    } finally {\r\n      setLoadingStates((prev) => ({ ...prev, [id]: false }));\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (editedQuestion) {\r\n      setMultiQuestions((prevQuestions) =>\r\n        prevQuestions.map((q) =>\r\n          q.id === editedQuestion.id\r\n            ? originalQuestions.find((oq) => oq.id === q.id)\r\n            : q\r\n        )\r\n      );\r\n      setEditStates((prevState) => ({\r\n        ...prevState,\r\n        [editedQuestion.id]: false,\r\n      }));\r\n    }\r\n    setEditing(false);\r\n    setEditedQuestion(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const FilterMultiQuestions = async () => {\r\n      const params = {};\r\n      if (inputkey) {\r\n        params.q = inputkey;\r\n      }\r\n      params.size = 10;\r\n      params.page = currentPage - 1;\r\n\r\n      // Add the sort parameter based on the selected dropdown option\r\n      if (selectedValue === \"Most liked\") {\r\n        params.sort = \"likes\";\r\n      } else if (selectedValue === \"Most Viewed\") {\r\n        params.sort = \"views\";\r\n      }\r\n\r\n      if (selectedCategories.length > 0) {\r\n        params.categories = selectedCategories.join(\",\"); // Join selected categories into a comma-separated string\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(url, { params });\r\n        setMultiQuestions(response.data.data);\r\n        setOriginalQuestions(response.data.data);\r\n        setPaginationMeta(response.data.paginationMeta);\r\n        setIsQuestionFetched(true);\r\n        console.log(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    FilterMultiQuestions();\r\n  }, [inputkey, currentPage, selectedValue, selectedCategories]);\r\n\r\n  return (\r\n    <div>\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n        <NavLink href=\"/app/askquestions\">\r\n          <Button\r\n            color=\"primary\"\r\n            outline\r\n            block\r\n            className=\"default mt-3 mb-2 text-one py-3 w-100\"\r\n          >\r\n            Ask a Free Question\r\n          </Button>\r\n        </NavLink>\r\n        <div className=\"input-group\">\r\n          <div\r\n            style={{ position: \"relative\" }}\r\n            className=\"col-12 col-lg-12 col-md-12\"\r\n          >\r\n            <i\r\n              className=\"simple-icon-magnifier mr-3\"\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"40%\",\r\n                right: \"15px\",\r\n                transform: \"translateY(-50%)\",\r\n                zIndex: 2,\r\n                color: \"#aaa\",\r\n              }}\r\n            />\r\n            {/* <input\r\n              type=\"text\"\r\n              className=\"form-control text-one py-3\"\r\n              placeholder=\"Search questions\"\r\n              value={inputkey}\r\n              onChange={(e) => setInputKey(e.target.value)}\r\n              style={{ paddingRight: \"2.5rem\" }}\r\n            /> */}\r\n\r\n            <InputGroup className=\"mb-3 \">\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <Dropdown\r\n                  isOpen={dropdownBasicOpen}\r\n                  toggle={() => setDropdownBasicOpen(!dropdownBasicOpen)}\r\n                  className=\" default\"\r\n                  style={{\r\n                    borderRadius: \"0px\",\r\n                    height: \"100%\",\r\n                  }}\r\n                >\r\n                  <DropdownToggle\r\n                    caret\r\n                    color=\"primary\"\r\n                    outline\r\n                    style={{\r\n                      borderRadius: \"0px\",\r\n                      height: \"100%\",\r\n                    }}\r\n                  >\r\n                    {/* Sort by */}\r\n                    {selectedValue}\r\n                  </DropdownToggle>\r\n                  <DropdownMenu>\r\n                    {/* <DropdownItem>Most liked</DropdownItem>\r\n                    <DropdownItem>Most Viewed</DropdownItem>\r\n                    <DropdownItem>Category</DropdownItem> */}\r\n                    <DropdownItem onClick={() => handleSelect(\"Most liked\")}>\r\n                      Most liked\r\n                    </DropdownItem>\r\n                    <DropdownItem onClick={() => handleSelect(\"Most Viewed\")}>\r\n                      Most Viewed\r\n                    </DropdownItem>\r\n                    {/* <DropdownItem onClick={() => handleSelect(\"Category\")}>\r\n                      Category\r\n                    </DropdownItem> */}\r\n                  </DropdownMenu>\r\n                </Dropdown>\r\n                {/* caategory filter */}\r\n                <Dropdown\r\n                  isOpen={dropdownBasicOpen1}\r\n                  toggle={() => setDropdownBasicOpen1(!dropdownBasicOpen1)}\r\n                  className=\" default\"\r\n                  style={{\r\n                    borderRadius: \"0px\",\r\n                    height: \"100%\",\r\n                  }}\r\n                >\r\n                  <DropdownToggle\r\n                    caret\r\n                    color=\"primary\"\r\n                    outline\r\n                    style={{\r\n                      borderRadius: \"0px\",\r\n                      height: \"100%\",\r\n                    }}\r\n                  >\r\n                    Category\r\n                  </DropdownToggle>\r\n                  <DropdownMenu>\r\n                    {categories.map((category) => (\r\n                      <CustomInput\r\n                        key={category.id}\r\n                        className=\"ml-2 \"\r\n                        type=\"checkbox\"\r\n                        id={category.id}\r\n                        label={category.label}\r\n                        onChange={handleCategoryChange}\r\n                      />\r\n                    ))}\r\n                  </DropdownMenu>\r\n                </Dropdown>\r\n              </InputGroupAddon>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control text-one py-3\"\r\n                placeholder=\"Search questions\"\r\n                value={inputkey}\r\n                onChange={(e) => setInputKey(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n          </div>\r\n        </div>\r\n        {!isQuestionFetched ? (\r\n          <div className=\"loading\" />\r\n        ) : (\r\n          <>\r\n            {multiquestions.length > 0 ? (\r\n              <Card className=\"my-3\">\r\n                <CardBody>\r\n                  <h1 className=\"font-weight-semibold\">\r\n                    Recently Answered Questions on topics\r\n                  </h1>\r\n                  <hr />\r\n                  {multiquestions.map((qs) => {\r\n                    const date = new Date(qs.time);\r\n                    return (\r\n                      <div key={qs.id}>\r\n                        {editStates[qs.id] ? (\r\n                          <>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control py-2 my-2\"\r\n                              value={qs.questionHeading}\r\n                              onChange={(e) => {\r\n                                const newValue = e.target.value;\r\n                                setMultiQuestions((prevQuestions) =>\r\n                                  prevQuestions.map((q) =>\r\n                                    q.id === qs.id\r\n                                      ? { ...q, questionHeading: newValue }\r\n                                      : q\r\n                                  )\r\n                                );\r\n                              }}\r\n                            />\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control py-2 my-2\"\r\n                              value={qs.questionHeadingBrief}\r\n                              onChange={(e) => {\r\n                                const newValue = e.target.value;\r\n                                setMultiQuestions((prevQuestions) =>\r\n                                  prevQuestions.map((q) =>\r\n                                    q.id === qs.id\r\n                                      ? { ...q, questionHeadingBrief: newValue }\r\n                                      : q\r\n                                  )\r\n                                );\r\n                              }}\r\n                            />\r\n                          </>\r\n                        ) : (\r\n                          <NavLink href={`/app/questions/${qs.id}`}>\r\n                            <h2 className=\"font-weight-medium\">\r\n                              {qs.questionHeading}\r\n                            </h2>\r\n                            <p>{qs.questionHeadingBrief}</p>\r\n                            <h6 className=\"text-muted\">{qs.views} views</h6>\r\n                            <h6 className=\"text-muted\">\r\n                              Asked on {date.toLocaleString()}\r\n                            </h6>\r\n                          </NavLink>\r\n                        )}\r\n                        {+userId === qs.menteeUserId && (\r\n                          <>\r\n                            {editing ? (\r\n                              <>\r\n                                <Button\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  onClick={() => handleSave(qs.id)}\r\n                                  className=\"mr-2\"\r\n                                  disabled={loadingStates[qs.id]}\r\n                                >\r\n                                  {loadingStates[qs.id] ? (\r\n                                    <Spinner size=\"sm\" color=\"primary\" />\r\n                                  ) : (\r\n                                    \"Save\"\r\n                                  )}\r\n                                </Button>\r\n                                <Button\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  onClick={handleCancel}\r\n                                  className=\"mr-2\"\r\n                                >\r\n                                  Cancel\r\n                                </Button>\r\n                              </>\r\n                            ) : (\r\n                              <div className=\"d-flex align-items-center justify-content-end\">\r\n                                <Button\r\n                                  className=\"mr-2\"\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  onClick={() => handleEdit(qs.id)}\r\n                                >\r\n                                  <i className=\"simple-icon-pencil\" />\r\n                                </Button>\r\n\r\n                                <Button\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  onClick={() => handleDeleteAnswer(qs.id)}\r\n                                >\r\n                                  {loadingStates[qs.id] ? (\r\n                                    <Spinner size=\"sm\" />\r\n                                  ) : (\r\n                                    <i className=\"simple-icon-trash\" />\r\n                                  )}\r\n                                </Button>\r\n                              </div>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                        <hr />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </CardBody>\r\n              </Card>\r\n            ) : (\r\n              <Card className=\"my-3\">\r\n                <CardBody>\r\n                  <h1 className=\"font-weight-semibold\">\r\n                    No Answered Questions Found\r\n                    <span className=\"ml-2\">\r\n                      <i className=\"simple-icon-ban\" />\r\n                    </span>\r\n                  </h1>\r\n                </CardBody>\r\n              </Card>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {isQuestionFetched && (\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            totalPage={paginationMeta.totalPage}\r\n            onChangePage={(i) => setCurrentPage(i)}\r\n            lastIsActive={paginationMeta.last}\r\n            firstIsActive={paginationMeta.first}\r\n          />\r\n        )}\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterQuestions;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Card, Row } from \"reactstrap\";\r\n\r\nconst quillModules = {\r\n  toolbar: [\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    // [\"link\", \"image\"],\r\n    // [\"clean\"],\r\n  ],\r\n};\r\nconst quillFormats = [\r\n  \"header\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n];\r\n\r\nconst AskQuestion = () => {\r\n  const [inputkey, setInputKey] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  // const [inputkey1,setInputKey1]=useState('')\r\n  const [textQuillStandart, setTextQuillStandart] = useState(\"\");\r\n  const history = useHistory();\r\n  const handleSubmit = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const doc = new DOMParser().parseFromString(\r\n        textQuillStandart,\r\n        \"text/html\"\r\n      );\r\n      const strippedAnswerText = doc.body.textContent || \"\";\r\n      const response = await axios.post(`${baseUrl}/api/mentee/question`, {\r\n        questionHeading: inputkey,\r\n        questionHeadingBrief: strippedAnswerText,\r\n      });\r\n      NotificationManager.success(\r\n        `Question posted successfully`,\r\n        \"Success\",\r\n        3000\r\n      );\r\n      if (response.status === 200) {\r\n        history.push(\"/app/questions\");\r\n      }\r\n      console.log(\"Response:\", response);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"font-weight-semibold\">Ask a public question</h1>\r\n      <Card className=\"mt-3\">\r\n        <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"mx-auto \">\r\n          <div className=\"mt-2\">\r\n            <h6 className=\"font-weight-semibold\">Title</h6>\r\n            <p className=\"text-muted\">\r\n              Be specific and imagine you are asking question to another person\r\n            </p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control shadow-none border-none  text-one font-weight-medium\"\r\n              placeholder=\"Type questions here\"\r\n              value={inputkey}\r\n              onChange={(e) => setInputKey(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mt-4\">\r\n            <h6 className=\"font-weight-semibold\">Body</h6>\r\n            <p className=\"text-muted\">\r\n              Include all the information would need to answer your question\r\n            </p>\r\n            <Row className=\"mb-4\">\r\n              <Colxx xxs=\"12\">\r\n                <ReactQuill\r\n                  theme=\"snow\"\r\n                  value={textQuillStandart}\r\n                  onChange={(val) => setTextQuillStandart(val)}\r\n                  modules={quillModules}\r\n                  formats={quillFormats}\r\n                />\r\n              </Colxx>\r\n            </Row>\r\n          </div>\r\n          {/* <div className='mt-2'>\r\n        <h6 className='font-weight-semibold'>Tags</h6>\r\n        <p className='text-muted'>Add up to 5 tags to decribe what your question is about</p>\r\n        <input\r\n            type=\"text\"\r\n            className=\"form-control shadow-none border-none  text-one font-weight-medium my-3\"\r\n            placeholder ='Type questions here'\r\n            value={inputkey1}\r\n            onChange={(e) =>setInputKey1(e.target.value)}\r\n          />\r\n       </div> */}\r\n        </Colxx>\r\n      </Card>\r\n      <div className=\"mt-3\">\r\n        <Button\r\n          color=\"primary \"\r\n          className=\"default  py-2 \"\r\n          onClick={handleSubmit}\r\n          disabled={loading}\r\n        >\r\n          {loading ? \"Posting...\" : \"Post your question\"}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AskQuestion;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Card, CardBody, NavLink, Row } from \"reactstrap\";\r\n\r\nconst MyQandA = () => {\r\n  const [myanswers, setMyAnswers] = useState(\"\");\r\n  const [answerPagination, setAnswerPagination] = useState(\"\");\r\n  const [myquestions, setMyQuestions] = useState(\"\");\r\n  const url = `${baseUrl}/api/mentor/myAnswers`;\r\n  const url1 = `${baseUrl}/api/mentee/myQuestions`;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentPage1, setCurrentPage1] = useState(1);\r\n  const [pagination, setPagination] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const MyAnswers = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${url}?_page=${currentPage1}&_limit=5`\r\n        );\r\n        setMyAnswers(response.data.data);\r\n        setAnswerPagination(response.data.paginationMeta);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    MyAnswers();\r\n    const MyQuestions = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${url1}?_page=${currentPage}&_size=3`\r\n        );\r\n        setMyQuestions(response.data.data);\r\n        setPagination(response.data.paginationMeta);\r\n        console.log(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    MyQuestions();\r\n  }, []);\r\n\r\n  function getRoleRes() {\r\n    return localStorage.getItem(\"roleRes\");\r\n  }\r\n\r\n  const roleRes = getRoleRes();\r\n\r\n  return (\r\n    <div>\r\n      <Colxx lg=\"8\" className=\"mx-auto\">\r\n        <Row>\r\n          {/* Pass myquestions array */}\r\n          <Colxx>\r\n            <h1 className=\"text-center text-large w-100 py-2\">\r\n              My questions and answers\r\n            </h1>\r\n            <div>\r\n              <div className=\"mt-2\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <h2 className=\"font-weight-semibold\">Questions</h2>\r\n                </div>\r\n\r\n                {myquestions && myquestions?.totalQuestions === 0 ? (\r\n                  <></>\r\n                ) : (\r\n                  <h3 className=\"my-2\">\r\n                    View all\r\n                    <span className=\"font-weight-bold px-1\">\r\n                      {myquestions.totalQuestions}\r\n                    </span>\r\n                    questions\r\n                  </h3>\r\n                )}\r\n              </div>\r\n              <div className=\"\">\r\n                <div className=\"\">\r\n                  {myquestions &&\r\n                  myquestions.questions &&\r\n                  myquestions.questions.length > 0 ? (\r\n                    myquestions.questions.map((qs) => {\r\n                      const qdate = new Date(qs.timestamp);\r\n                      const qsdateformat = `${qdate.getDate()}/${\r\n                        qdate.getMonth() + 1\r\n                      }/${qdate.getFullYear()}`;\r\n                      return (\r\n                        <Card key={qs.questionId} className=\"mb-3\">\r\n                          <NavLink\r\n                            href={`/app/questions/${qs.questionId}`}\r\n                            className=\"d-flex justify-content-between\"\r\n                          >\r\n                            <CardBody>\r\n                              <div className=\"d-flex justify-content-between\">\r\n                                <NavLink\r\n                                  href={`/app/questions/${qs.questionId}`}\r\n                                  className=\"d-flex justify-content-between\"\r\n                                >\r\n                                  <h3>{qs.question}</h3>\r\n                                </NavLink>\r\n                                <h3>{qsdateformat}</h3>\r\n                              </div>\r\n                            </CardBody>\r\n                          </NavLink>\r\n                        </Card>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <Card>\r\n                      <CardBody>\r\n                        <h3>No questions</h3>\r\n                      </CardBody>\r\n                    </Card>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Colxx>\r\n        </Row>\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPage={pagination.totalPage}\r\n          onChangePage={(i) => setCurrentPage(i)}\r\n          lastIsActive={pagination.last}\r\n          firstIsActive={pagination.first}\r\n        />\r\n        <div className=\"mt-5\" />\r\n        <hr />\r\n        {roleRes &&\r\n        (roleRes.includes(\"MENTOR\") ||\r\n          roleRes.includes(\"ALUMNI\") ||\r\n          roleRes.includes(\"LAWYER\")) ? (\r\n          <>\r\n            <Row>\r\n              <Colxx xxs=\"12\">\r\n                <div>\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <h2 className=\"font-weight-semibold\">Answers</h2>\r\n                    </div>\r\n\r\n                    {myanswers?.totalAnswers !== 0 ? (\r\n                      <h3 className=\"my-2\">\r\n                        View all\r\n                        <span className=\"font-weight-bold px-1\">\r\n                          {myanswers.totalAnswers}\r\n                        </span>\r\n                        answers\r\n                      </h3>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </div>\r\n                  {myanswers &&\r\n                  myanswers.questions &&\r\n                  myanswers.questions.length > 0 ? (\r\n                    myanswers.questions.map((qs) => {\r\n                      const qdate = new Date(qs.timestamp);\r\n                      const qsdateformat = `${qdate.getDate()}/${\r\n                        qdate.getMonth() + 1\r\n                      }/${qdate.getFullYear()}`;\r\n                      return (\r\n                        <Card key={qs.questionId} className=\"mb-3\">\r\n                          <NavLink\r\n                            href={`/app/questions/${qs.questionId}`}\r\n                            className=\"d-flex justify-content-between\"\r\n                          >\r\n                            <CardBody>\r\n                              <div className=\"d-flex justify-content-between\">\r\n                                <h3>{qs.question}</h3>\r\n                                <h3>{qsdateformat}</h3>\r\n                              </div>\r\n                            </CardBody>\r\n                          </NavLink>\r\n                        </Card>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <Card>\r\n                      <CardBody>\r\n                        <h3>No answers</h3>\r\n                      </CardBody>\r\n                    </Card>\r\n                  )}\r\n                </div>\r\n              </Colxx>\r\n            </Row>\r\n            <Pagination\r\n              currentPage={currentPage1}\r\n              totalPage={answerPagination.totalPage}\r\n              onChangePage={(i) => setCurrentPage1(i)}\r\n              lastIsActive={answerPagination.last}\r\n              firstIsActive={answerPagination.first}\r\n            />\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyQandA;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Label,\r\n  NavLink,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nconst MentorSessionList = () => {\r\n  // const { sessions } = location.state || {}; // Retrieve sessions from location state\r\n  const [session, setSession] = useState(\"\");\r\n  const [upcomingsession, setUpcomingSession] = useState(\"\");\r\n  const [sessionPagination, setSessionPagination] = useState(\"\");\r\n  const [showSuccessCard, setShowSuccessCard] = useState(false);\r\n  const [mentorName, setMentorName] = useState(\"\");\r\n\r\n  \r\n  const upcomingSessionsUrl = `${baseUrl}/api/calendar/user/upcoming-bookedslots`;\r\n  const sessionHistoryUrl = `${baseUrl}/api/calendar/user/session-history`;\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentPage1, setCurrentPage1] = useState(1);\r\n  const [pagination, setPagination] = useState(\"\");\r\n\r\n  \r\n  const location = useLocation();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleJoinCall = (userId, id) => {\r\n    const fullUrl = `/app/videocall/${userId}/${id}`;\r\n    history.push(fullUrl);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const SessionHistroy = async () => {\r\n      try {\r\n         const response = await axios.get(`${sessionHistoryUrl}?page=${currentPage1 -1}&size=10&role=MENTOR`);\r\n         setSession(response.data.data);\r\n         setSessionPagination(response.data.paginationMeta);\r\n      \r\n\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    \r\n    const SessionUpcomingHistroy = async () => {\r\n      try {\r\n        const response = await axios.get(`${upcomingSessionsUrl}?page=${currentPage -1}&size=10&role=MENTOR`);\r\n        setUpcomingSession(response.data.data );\r\n        setPagination(response.data.paginationMeta );\r\n      \r\n        const queryParams = new URLSearchParams(location.search);\r\n        const appointment = queryParams.get(\"appointment\");\r\n        // setShowSuccessCard(appointment === 'true');\r\n        if (\r\n          appointment === \"true\" &&\r\n          response.data.data.upcomingSessions.length > 0\r\n        ) {\r\n          setMentorName(response.data.data.upcomingSessions[0].name);\r\n          setShowSuccessCard(true);\r\n        } else {\r\n          setShowSuccessCard(false);\r\n        }\r\n        console.log(\"Upcoming Session Data:\", response);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    SessionHistroy();\r\n    SessionUpcomingHistroy();\r\n  }, [currentPage, currentPage1, location.search]);\r\n\r\n\r\n  // const [currentTime, setCurrentTime] = useState(new Date())\r\n  // useEffect(() => {\r\n  //   const intervalId = setInterval(() => {\r\n  //     setCurrentTime(new Date());\r\n  //   }, 30000);\r\n\r\n  //   return () => clearInterval(intervalId);\r\n  // }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Colxx sm=\"12\" md=\"12\" lg=\"7\" xxs=\"12\" className=\"mx-auto \">\r\n          {/* <Card className='my-2' >\r\n          <CardBody className='text-center'>\r\n          <span className='text-xlarge text-primary'><i className='simple-icon-check'/></span>\r\n           <h3 className='text-center'>You have successfully scheduled appointment with mentorName</h3>\r\n          </CardBody>\r\n        </Card> */}\r\n          {showSuccessCard && (\r\n            <Card className=\"my-2\">\r\n              <CardBody className=\"text-center\">\r\n                <span className=\"text-xlarge text-primary\">\r\n                  <i className=\"simple-icon-check\" />\r\n                </span>\r\n                <h3 className=\"text-center\">\r\n                  You have successfully scheduled appointment with {mentorName}\r\n                </h3>\r\n              </CardBody>\r\n            </Card>\r\n          )}\r\n          <div className=\"my-3\">\r\n            <h2 className=\"font-weight-medium\">Upcoming sessions</h2>\r\n\r\n            <div>\r\n              {/* <div  className=''>\r\n       {upcomingsession.upcomingSessions&&upcomingsession.upcomingSessions.map((up)=>{\r\n        const date=new Date(up.fromtimestamp);\r\n            const fromtime = new Date(up.fromtimestamp);\r\n            const totime=new Date(up.totimestamp);\r\n            const updateformat = `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\r\n            const timeOptions = { hour: '2-digit', minute: '2-digit' };\r\n          \r\n          return (\r\n            <div key={up.mentorId}>\r\n            <Card className='my-4'>\r\n        <Badge\r\n                  color=\"primary\"\r\n                  pill\r\n                  className=\"position-absolute badge-top-right\"\r\n                >\r\n                  NEW\r\n                </Badge>\r\n          \r\n          <CardBody className='d-flex justify-content-between' >\r\n                <div className='d-flex justify-content-between flex-column'>\r\n                <NavLink href={`/app/mentorprofile/${up.mentorId}`}>\r\n                <h4 className='text-large text-primary'>{up.name}</h4>\r\n                </NavLink>\r\n                <div className='d-flex'>\r\n                <Label className='text-one '>Date:</Label>\r\n                 <h4 className='ml-2  font-weight-bold'>{updateformat}</h4>\r\n                  </div>\r\n              \r\n                </div>\r\n                <div className='d-flex justify-content-around flex-column '>\r\n          \r\n                  <div className='d-flex justify-content-between'>\r\n                  <h4 className='mr-2'>From:</h4>\r\n                  <h4 className='mr-2 font-weight-bold'> {fromtime.toLocaleTimeString([], timeOptions)}</h4>\r\n                  <h4>to</h4>\r\n                  <h4 className=' font-weight-bold mx-2'>  {totime.toLocaleTimeString([],timeOptions)}</h4>\r\n                  </div>\r\n                  <div className='d-flex'>\r\n                  <Label className='text-one mr-2 '>Mode:</Label>\r\n                  <h4 className='font-weight-bold'>{up.mode}</h4>\r\n                  </div>\r\n                \r\n                      <Button outline color='primary' className='mt-2 text-one' onClick={() => handleJoinCall(up.name)}>Join Call</Button> \r\n              \r\n                 \r\n                </div>\r\n              </CardBody>\r\n        </Card>\r\n            </div>\r\n          )\r\n          \r\n        })\r\n        }\r\n        \r\n       </div> */}\r\n\r\n              <div className=\"\">\r\n                {\r\n                upcomingsession.length > 0 ? (\r\n                  upcomingsession.map((up) => {\r\n                    const date = new Date(up.fromTimeStamp);\r\n                    const fromtime = new Date(up.fromTimeStamp);\r\n                    const totime = new Date(up.toTimeStamp);\r\n                    const updateformat = `${date.getDate()}/${\r\n                      date.getMonth() + 1\r\n                    }/${date.getFullYear()}`;\r\n                    const timeOptions = { hour: \"2-digit\", minute: \"2-digit\" };\r\n\r\n                    // const isWithinFiveMinutes = (fromTimeStamp) => {\r\n                    //   const fiveMinutesInMs = 5 * 60 * 1000;\r\n                    //   // const currentTime = new Date().getTime();\r\n                    //   const fromTime = new Date(fromTimeStamp).getTime();\r\n                    //   const timeDiff = fromTime - currentTime;\r\n\r\n                    //   return timeDiff >= 0 && timeDiff <= fiveMinutesInMs;\r\n                    // };\r\n\r\n                    return (\r\n                      <div key={up.mentorId}>\r\n                        <Card className=\"my-4 \">\r\n                          <Badge\r\n                            color=\"primary\"\r\n                            pill\r\n                            className=\"position-absolute badge-top-right\"\r\n                          >\r\n                            NEW\r\n                          </Badge>\r\n\r\n                          <CardBody className=\"d-flex justify-content-between flex-wrap\">\r\n                            {/* <div className='d-flex justify-content-between flex-column'>\r\n                \r\n              <NavLink href={`/app/mentorprofile/${up.mentorId}`} className='d-flex align-items-center'>\r\n              <ThumbnailImage\r\n                rounded\r\n                small\r\n                src=\"/assets/img/profiles/l-1.jpg\"\r\n                alt=\"profile\"\r\n                className=\"text-start\"\r\n              />\r\n              <h4 className='text-large text-primary ml-2'>{up.name}</h4>\r\n            </NavLink>\r\n            <div className='d-flex align-items-center'>\r\n              <Label className='text-one mr-2'>Date:</Label>\r\n              <h4 className='font-weight-bold'>{updateformat}</h4>\r\n            </div>\r\n              </div> */}\r\n                            <Row className=\"\">\r\n                              <Col className=\"d-flex\">\r\n                                <NavLink\r\n                                  href={`/app/mentorprofile/${up.mentorId}`}\r\n                                  className=\"d-flex align-items-center\"\r\n                                >\r\n                                  {/* <ThumbnailImage\r\n                  rounded\r\n                  // src=\"/assets/img/profiles/l-1.jpg\"\r\n                  // src={`${baseUrl}/api/public/images/${up.mentorId}/profile-pic`}\r\n                \r\n                  src={`${baseUrl}/${up.imageUrl}`}\r\n                  alt=\"Card image cap\"\r\n                  className=\"m-4\"\r\n                /> */}{\" \"}\r\n                                  {up.imageUrl === null ? (\r\n                                    <ThumbnailLetters\r\n                                      rounded\r\n                                      text={up.name}\r\n                                      alt=\"Card image cap\"\r\n                                      className=\"m-4\"\r\n                                    />\r\n                                  ) : (\r\n                                    <img\r\n                                      style={{\r\n                                        height: \"140px\",\r\n                                        width: \"140px\",\r\n                                      }}\r\n                                      src={`${baseUrl}/${up.imageUrl}`}\r\n                                      alt=\"Card  cap\"\r\n                                      className=\"m-4 rounded-circle\"\r\n                                    />\r\n                                  )}\r\n                                  {/* <img\r\n                                    style={{ height: \"140px\", width: \"140px\" }}\r\n                                    src={`${baseUrl}/${up.imageUrl}`}\r\n                                    alt=\"Card  cap\"\r\n                                    className=\"m-4 rounded-circle\"\r\n                                  /> */}\r\n                                  <h4 className=\"text-large text-primary ml-2\">\r\n                                    {up.name}\r\n                                  </h4>\r\n                                </NavLink>\r\n                              </Col>\r\n                            </Row>\r\n\r\n                            <div className=\"d-flex justify-content-around flex-column \">\r\n                              <div className=\"d-flex \">\r\n                                <Label className=\"text-one mr-2\">Date:</Label>\r\n                                <h4 className=\"font-weight-bold \">\r\n                                  {updateformat}\r\n                                </h4>\r\n                              </div>\r\n                              <div className=\"d-flex justify-content-between\">\r\n                                <h4 className=\"mr-2\">From:</h4>\r\n                                <h4 className=\"mr-2 font-weight-bold\">\r\n                                  {fromtime.toLocaleTimeString([], timeOptions)}\r\n                                </h4>\r\n                                <h4>to</h4>\r\n                                <h4 className=\"font-weight-bold mx-2\">\r\n                                  {totime.toLocaleTimeString([], timeOptions)}\r\n                                </h4>\r\n                              </div>\r\n                              <div className=\"d-flex\">\r\n                                <Label className=\"text-one mr-2\">Mode:</Label>\r\n                                <h4 className=\"font-weight-bold\">{up.mode}</h4>\r\n                              </div>\r\n                              <Button\r\n                                outline\r\n                                color=\"primary\"\r\n                                className=\"mt-2 text-one \"\r\n                                onClick={() =>\r\n                                  handleJoinCall(up.mentorId, up.id)\r\n                                }\r\n                              >\r\n                                Join Call\r\n                              </Button>\r\n                            </div>\r\n                          </CardBody>\r\n                        </Card>\r\n                      </div>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <Card>\r\n                    <CardBody>\r\n                      <h3>No upcoming sessions</h3>\r\n                    </CardBody>\r\n                  </Card>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            totalPage={pagination.totalPage}\r\n            onChangePage={(i) => setCurrentPage(i)}\r\n            lastIsActive={pagination.last}\r\n            firstIsActive={pagination.first}\r\n          />\r\n          <div className=\"my-3 mt-4\">\r\n            <h2 className=\"font-weight-medium\">Session history</h2>\r\n            {/* <div>\r\n           {session.history&&session.history.map((sh)=>{\r\n            const date=new Date(sh.fromtimestamp);\r\n            const fromtime = new Date(sh.fromtimestamp);\r\n            const totime=new Date(sh.totimestamp);\r\n            const timeOptions = { hour: '2-digit', minute: '2-digit' };\r\n            const shdateformat = `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\r\n            return(\r\n              \r\n              <Card className='my-2 ' key={sh.mentorId}>\r\n              <CardBody className='d-flex justify-content-between' >\r\n                <div className='d-flex justify-content-between flex-column'>\r\n                <NavLink href={`/app/mentorprofile/${sh.mentorId}`}>\r\n                <h4 className='text-large text-primary'>{sh.name}</h4>\r\n                </NavLink>\r\n                 \r\n                \r\n                  <div className='d-flex'>\r\n                  <Label className='text-one'>Date:</Label>\r\n                  <h4 className='ml-2 font-weight-bold'>{shdateformat}</h4>\r\n                  </div>\r\n                 \r\n                </div>\r\n                <div className='d-flex justify-content-around flex-column '>\r\n                <div className='d-flex'>\r\n                  <Label className='text-one mr-2'>Duration:</Label>\r\n                  <h4 className='font-weight-bold'>{sh.duration}</h4>\r\n                </div>\r\n                 \r\n                  <div className='d-flex justify-content-between'>\r\n                  <div className='d-flex'>\r\n                  <h4 className=' mr-2'>From:</h4>\r\n                  <h4 className='font-weight-bold'>{fromtime.toLocaleTimeString([], timeOptions)}</h4>\r\n                  <h4 className='mx-2'>to</h4>\r\n                  <h4 className='font-weight-bold'>{totime.toLocaleTimeString([],timeOptions)}</h4>\r\n                </div>\r\n                 \r\n                  </div>\r\n                  <div className='d-flex'>\r\n                  <Label className='mr-2 text-one'>Mode:</Label>\r\n                  <h4 className='font-weight-bold '>{sh.mode}</h4>\r\n                  </div>\r\n          \r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n            )\r\n           })}\r\n           \r\n          </div> */}\r\n            <div>\r\n              {session && session.length > 0 ? (\r\n                session.map((sh) => {\r\n                  const date = new Date(sh.fromTimeStamp);\r\n                  const fromtime = new Date(sh.fromTimeStamp);\r\n                  const totime = new Date(sh.toTimeStamp);\r\n                  const timeOptions = { hour: \"2-digit\", minute: \"2-digit\" };\r\n                  const shdateformat = `${date.getDate()}/${\r\n                    date.getMonth() + 1\r\n                  }/${date.getFullYear()}`;\r\n\r\n                  // Calculate duration in minutes\r\n                  /* const durationInMs = totime.getTime() - fromtime.getTime(); */\r\n                  /* const durationInMinutes = Math.floor(durationInMs / (1000 * 60));  */\r\n                  const formatDuration = (durationInMs) => {\r\n                    const durationInMinutes = durationInMs / (1000 * 60);\r\n                    return durationInMinutes.toFixed(2); // Formats the number to two decimal places\r\n                  };\r\n\r\n                  return (\r\n                    <Card className=\"my-2\" key={sh.mentorId}>\r\n                      {/* <CardBody className='d-flex justify-content-between'>\r\n            <div className='d-flex justify-content-between flex-column'>\r\n              <NavLink href={`/app/mentorprofile/${sh.mentorId}`}>\r\n                <h4 className='text-large text-primary'>{sh.name}</h4>\r\n              </NavLink>\r\n\r\n              <div className='d-flex'>\r\n                <Label className='text-one'>Date:</Label>\r\n                <h4 className='ml-2 font-weight-bold'>{shdateformat}</h4>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='d-flex justify-content-around flex-column '>\r\n              <div className='d-flex'>\r\n                <Label className='text-one mr-2'>Duration:</Label>\r\n                <h4 className='font-weight-bold'>{sh.duration/60000} minutes</h4>\r\n                <h4 className='font-weight-bold'>{durationInMinutes}</h4>\r\n                <h4 className='font-weight-bold'>{formatDuration(sh.duration)} minutes</h4>\r\n              </div>\r\n\r\n              <div className='d-flex justify-content-between'>\r\n                <div className='d-flex'>\r\n                  <h4 className=' mr-2'>From:</h4>\r\n                  <h4 className='font-weight-bold'>{fromtime.toLocaleTimeString([], timeOptions)}</h4>\r\n                  <h4 className='mx-2'>to</h4>\r\n                  <h4 className='font-weight-bold'>{totime.toLocaleTimeString([], timeOptions)}</h4>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='d-flex'>\r\n                <Label className='mr-2 text-one'>Mode:</Label>\r\n                <h4 className='font-weight-bold '>{sh.mode}</h4>\r\n              </div>\r\n            </div>\r\n          </CardBody> */}\r\n\r\n                      <CardBody className=\"d-flex justify-content-between flex-wrap\">\r\n                        <Row className=\"\">\r\n                          <Col className=\"d-flex\">\r\n                            <NavLink\r\n                              href={`/app/mentorprofile/${sh.mentorId}`}\r\n                              className=\"d-flex align-items-center\"\r\n                            >\r\n                              {/* <ThumbnailImage\r\n                                rounded\r\n                                // src=\"/assets/img/profiles/l-1.jpg\"\r\n                                // src={`${baseUrl}/api/public/images/${sh.mentorId}/profile-pic`}\r\n                                // src={sh.imageUrl}\r\n                                src={`${baseUrl}/${sh.imageUrl}`}\r\n                                alt=\"Card image cap\"\r\n                                className=\"m-4\"\r\n                              /> */}\r\n                              {sh.imageUrl === null ? (\r\n                                <ThumbnailLetters\r\n                                  rounded\r\n                                  text={sh.name}\r\n                                  alt=\"Card image cap\"\r\n                                  className=\"m-4\"\r\n                                />\r\n                              ) : (\r\n                                <img\r\n                                  style={{ height: \"140px\", width: \"140px\" }}\r\n                                  src={`${baseUrl}/${sh.imageUrl}`}\r\n                                  alt=\"Card  cap\"\r\n                                  className=\"m-4 rounded-circle\"\r\n                                />\r\n                              )}\r\n\r\n                              <h4 className=\"text-large text-primary ml-2\">\r\n                                {sh.name}\r\n                              </h4>\r\n                            </NavLink>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <div className=\"d-flex justify-content-around flex-column \">\r\n                          <div className=\"d-flex \">\r\n                            <Label className=\"text-one mr-2\">Date:</Label>\r\n                            <h4 className=\"font-weight-bold \">\r\n                              {shdateformat}\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <Label className=\"text-one mr-2\">Duration:</Label>\r\n\r\n                            <h4 className=\"font-weight-bold\">\r\n                              {formatDuration(sh.duration)} minutes\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <h4 className=\"mr-2\">From:</h4>\r\n                            <h4 className=\"mr-2 font-weight-bold\">\r\n                              {fromtime.toLocaleTimeString([], timeOptions)}\r\n                            </h4>\r\n                            <h4>to</h4>\r\n                            <h4 className=\"font-weight-bold mx-2\">\r\n                              {totime.toLocaleTimeString([], timeOptions)}\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <Label className=\"text-one mr-2\">Mode:</Label>\r\n                            <h4 className=\"font-weight-bold\">{sh.mode}</h4>\r\n                          </div>\r\n                        </div>\r\n                      </CardBody>\r\n                    </Card>\r\n                  );\r\n                })\r\n              ) : (\r\n                <Card>\r\n                  <CardBody>\r\n                    <h3>No session history</h3>\r\n                  </CardBody>\r\n                </Card>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Colxx>\r\n      </Row>\r\n      <Pagination\r\n        currentPage={currentPage1}\r\n        totalPage={sessionPagination.totalPage}\r\n        onChangePage={(i) => setCurrentPage1(i)}\r\n        lastIsActive={sessionPagination.last}\r\n        firstIsActive={sessionPagination.first}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MentorSessionList;\r\n","// import axios from \"axios\";\r\n// import ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\n// import { Colxx } from \"components/common/CustomBootstrap\";\r\n// import { baseUrl } from \"constants/defaultValues\";\r\n// import { useEffect, useState } from \"react\";\r\n// import Pagination from \"containers/pages/Pagination\";\r\n// import { useHistory, useLocation } from \"react-router-dom\";\r\n// import {\r\n//   Badge,\r\n//   Button,\r\n//   Card,\r\n//   CardBody,\r\n//   Col,\r\n//   Label,\r\n//   NavLink,\r\n//   Row,\r\n// } from \"reactstrap\";\r\n\r\n// const MentorSessionUpcoming = () => {\r\n//   const [session, setSession] = useState(\"\");\r\n//   const [sessionPagination, setSessionPagination] = useState(\"\");\r\n//   const [upcomingSession, setUpcomingSession] = useState(\"\");\r\n//   const [pagination, setPagination] = useState(\"\");\r\n//   const [showSuccessCard, setShowSuccessCard] = useState(false);\r\n//   const location = useLocation();\r\n//   const history = useHistory();\r\n//   const [currentPage, setCurrentPage] = useState(1); // Start from page 1\r\n//   const [currentPage1, setCurrentPage1] = useState(1); // Start from page 1\r\n\r\n//   const upcomingSessionsUrl = `${baseUrl}/api/calendar/partner/upcoming-bookedslots`;\r\n//   const sessionHistoryUrl = `${baseUrl}/api/calendar/partner/session-history`;\r\n\r\n\r\n\r\n//   const handleJoinCall = (userId, id) => {\r\n//     const fullUrl = `/app/videocall/${userId}/${id}`;\r\n//     history.push(fullUrl);\r\n//   };\r\n    \r\n// useEffect(() => {\r\n//   const fetchSessionHistory = async () => {\r\n//     try {\r\n//       const response = await axios.get(`${sessionHistoryUrl}?page=${currentPage1 -1}&size=10&role=MENTOR`);\r\n//       setSession(response.data.data );\r\n//       setSessionPagination(response.data.paginationMeta );\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching session history:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const fetchUpcomingSessions = async () => {\r\n//     try {\r\n//       const response = await axios.get(`${upcomingSessionsUrl}?page=${currentPage -1}&size=10&role=MENTOR`);\r\n//       setUpcomingSession(response.data.data );\r\n//       setPagination(response.data.paginationMeta );\r\n\r\n//       const queryParams = new URLSearchParams(location.search);\r\n//       setShowSuccessCard(queryParams.get(\"appointment\") === \"true\");\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching upcoming sessions:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // const [currentTime, setCurrentTime] = useState(new Date())\r\n//   // useEffect(() => {\r\n//   //   const intervalId = setInterval(() => {\r\n//   //     setCurrentTime(new Date());\r\n//   //   }, 30000);\r\n\r\n//   //   return () => clearInterval(intervalId);\r\n//   // }, []);\r\n//   fetchSessionHistory();\r\n//   fetchUpcomingSessions();\r\n// }, [currentPage, currentPage1, location.search]);\r\n\r\n  \r\n//   return (\r\n//     <div>\r\n//       <Row>\r\n//         <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n//           {showSuccessCard && (\r\n//             <Card className=\"my-2\">\r\n//               <CardBody className=\"text-center\">\r\n//                 <span className=\"text-xlarge text-primary\">\r\n//                   <i className=\"simple-icon-check\" />\r\n//                 </span>\r\n//                 <h3 className=\"text-center\">\r\n//                   You have successfully scheduled appointment with mentorName\r\n//                 </h3>\r\n//               </CardBody>\r\n//             </Card>\r\n//           )}\r\n//           <div className=\"my-3\">\r\n//             <h2 className=\"font-weight-medium\">Upcoming sessions</h2>\r\n\r\n//             <div>\r\n//               <div className=\"\">\r\n//                 {upcomingSession.length > 0 ? (\r\n//                   upcomingSession.map((up) => {\r\n//                     const date = new Date(up.fromTimeStamp);\r\n//                     const fromtime = new Date(up.fromTimeStamp);\r\n//                     const totime = new Date(up.toTimeStamp);\r\n//                     const updateformat = `${date.getDate()}/${\r\n//                       date.getMonth() + 1\r\n//                     }/${date.getFullYear()}`;\r\n//                     const timeOptions = { hour: \"2-digit\", minute: \"2-digit\" };\r\n//                     return (\r\n//                       <div key={up.menteeId}>\r\n//                         <Card className=\"my-4\">\r\n//                           <Badge\r\n//                             color=\"primary\"\r\n//                             pill\r\n//                             className=\"position-absolute badge-top-right\"\r\n//                           >\r\n//                             NEW\r\n//                           </Badge>\r\n//                             <Row className=\"\">\r\n//                               <Col className=\"d-flex\">\r\n//                                 <NavLink\r\n//                                   href={`/app/student/profile/${up.menteeId}`}\r\n//                                   className=\"d-flex align-items-center\"\r\n//                                 >\r\n//                                   {up.imageUrl === null ? (\r\n//                                     <ThumbnailLetters\r\n//                                       rounded\r\n//                                       text={up.name}\r\n//                                       alt=\"Card image cap\"\r\n//                                       className=\"m-4\"\r\n//                                     />\r\n//                                   ) : (\r\n//                                     <img\r\n//                                       style={{\r\n//                                         height: \"140px\",\r\n//                                         width: \"140px\",\r\n//                                       }}\r\n//                                       src={`${baseUrl}/${up.imageUrl}`}\r\n//                                       alt=\"Card  cap\"\r\n//                                       className=\"m-4 rounded-circle\"\r\n//                                     />\r\n//                                   )}\r\n\r\n//                                   <h4 className=\"text-large text-primary ml-2\">\r\n//                                     {up.name}\r\n//                                   </h4>\r\n//                                 </NavLink>\r\n//                               </Col>\r\n//                             </Row>\r\n//                             <div className=\"d-flex justify-content-around flex-column \">\r\n//                               <div className=\"d-flex\">\r\n//                                 <Label className=\"text-one\">Date:</Label>\r\n//                                 <h4 className=\"ml-2 font-weight-bold\">\r\n//                                   {updateformat}\r\n//                                 </h4>\r\n//                               </div>\r\n//                               <div className=\"d-flex justify-content-between\">\r\n//                                 <h4 className=\"mr-2\">From:</h4>\r\n//                                 <h4 className=\"mr-2 font-weight-bold\">\r\n//                                   {fromtime.toLocaleTimeString([], timeOptions)}\r\n//                                 </h4>\r\n//                                 <h4>to</h4>\r\n//                                 <h4 className=\"font-weight-bold mx-2\">\r\n//                                   {totime.toLocaleTimeString([], timeOptions)}\r\n//                                 </h4>\r\n//                               </div>\r\n//                               <div className=\"d-flex\">\r\n//                                 <Label className=\"text-one mr-2\">Mode:</Label>\r\n//                                 <h4 className=\"font-weight-bold\">{up.mode}</h4>\r\n//                               </div>\r\n//                               <Button\r\n//                                 outline\r\n//                                 color=\"primary\"\r\n//                                 className=\"mt-2 text-one \"\r\n//                                 onClick={() =>\r\n//                                   handleJoinCall(up.menteeId, up.id)\r\n//                                 }\r\n//                               >\r\n//                                 Join Call\r\n//                               </Button>\r\n//                             </div>\r\n//                           </CardBody>\r\n//                         </Card>\r\n//                       </div>\r\n//                     );\r\n//                   })\r\n//                 ) : (\r\n//                   <Card>\r\n//                     <CardBody>\r\n//                       <h3>No upcoming sessions</h3>\r\n//                     </CardBody>\r\n//                   </Card>\r\n//                 )}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n// <Pagination\r\n//             currentPage={currentPage}\r\n//             totalPage={pagination.totalPage || 1}\r\n//             onChangePage={(i) => setCurrentPage(i)}\r\n//             lastIsActive={pagination.last}\r\n//             firstIsActive={pagination.first}\r\n//           />\r\n\r\n\r\n\r\n//           <div className=\"my-3 mt-4\">\r\n//             <h2 className=\"font-weight-medium\">Session history</h2>\r\n\r\n//             <div>\r\n//               {session && session.length > 0 ? (\r\n//                 session.map((sh) => {\r\n//                   const date = new Date(sh.fromTimeStamp);\r\n//                   const fromtime = new Date(sh.fromTimeStamp);\r\n//                   const totime = new Date(sh.toTimeStamp);\r\n//                   const timeOptions = { hour: \"2-digit\", minute: \"2-digit\" };\r\n//                   const shdateformat = `${date.getDate()}/${\r\n//                     date.getMonth() + 1\r\n//                   }/${date.getFullYear()}`;\r\n//                   const formatDuration = (durationInMs) => {\r\n//                     const durationInMinutes = durationInMs / (1000 * 60);\r\n//                     return durationInMinutes.toFixed(2); // Formats the number to two decimal places\r\n//                   };\r\n\r\n//                   return (\r\n//                     <Card className=\"my-2\" key={sh.menteeId}>\r\n//                       <CardBody className=\"d-flex justify-content-between flex-wrap\">\r\n\r\n\r\n//                         {/* </div> */}\r\n                      \r\n//                         {/* </div> */}\r\n\r\n//                         <Row className=\"\">\r\n//                           <Col className=\"d-flex\">\r\n//                             <NavLink\r\n//                               href={`/app/user/profile/${sh.menteeId}`}\r\n//                               className=\"d-flex align-items-center\"\r\n//                             >\r\n//                               {sh.imageUrl === null ? (\r\n//                                 <ThumbnailLetters\r\n//                                   rounded\r\n//                                   text={sh.name}\r\n//                                   alt=\"Card image cap\"\r\n//                                   className=\"m-4\"\r\n//                                 />\r\n//                               ) : (\r\n//                                 <img\r\n//                                   style={{ height: \"140px\", width: \"140px\" }}\r\n//                                   src={`${baseUrl}/${sh.imageUrl}`}\r\n//                                   alt=\"Card  cap\"\r\n//                                   className=\"m-4 rounded-circle\"\r\n//                                 />\r\n//                               )}\r\n\r\n//                               <h4 className=\"text-large text-primary ml-2\">\r\n//                                 {sh.name}\r\n//                               </h4>\r\n//                             </NavLink>\r\n//                           </Col>\r\n//                         </Row>\r\n\r\n//                         <div className=\"d-flex justify-content-around flex-column \">\r\n//                           <div className=\"d-flex\">\r\n//                             <Label className=\"text-one\">Date:</Label>\r\n//                             <h4 className=\"ml-2 font-weight-bold\">\r\n//                               {shdateformat}\r\n//                             </h4>\r\n//                           </div>\r\n//                           <div className=\"d-flex\">\r\n//                             <Label className=\"text-one mr-2\">Duration:</Label>\r\n//                             {/* <h4 className='font-weight-bold'>{sh.duration/60000} minutes</h4> */}\r\n//                             <h4 className=\"font-weight-bold\">\r\n//                               {formatDuration(sh.duration)} minutes\r\n//                             </h4>\r\n//                           </div>\r\n\r\n//                           <div className=\"d-flex justify-content-between\">\r\n//                             <div className=\"d-flex\">\r\n//                               <h4 className=\" mr-2\">From:</h4>\r\n//                               <h4 className=\"font-weight-bold\">\r\n//                                 {fromtime.toLocaleTimeString([], timeOptions)}\r\n//                               </h4>\r\n//                               <h4 className=\"mx-2\">to</h4>\r\n//                               <h4 className=\"font-weight-bold\">\r\n//                                 {totime.toLocaleTimeString([], timeOptions)}\r\n//                               </h4>\r\n//                             </div>\r\n//                           </div>\r\n\r\n//                           <div className=\"d-flex\">\r\n//                             <Label className=\"mr-2 text-one\">Mode:</Label>\r\n//                             <h4 className=\"font-weight-bold \">{sh.mode}</h4>\r\n//                           </div>\r\n//                         </div>\r\n//                       </CardBody>\r\n//                     </Card>\r\n//                   );\r\n//                 })\r\n//               ) : (\r\n//                 <Card>\r\n//                   <CardBody>\r\n//                     <h3>No session history</h3>\r\n//                   </CardBody>\r\n//                 </Card>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         </Colxx>\r\n//        </Row>\r\n// <Pagination\r\n// currentPage={currentPage1}\r\n// totalPage={sessionPagination.totalPage}\r\n// onChangePage={(i) => setCurrentPage1(i)}\r\n// lastIsActive={sessionPagination.last}\r\n// firstIsActive={sessionPagination.first}\r\n// />\r\n\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default MentorSessionUpcoming;\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Label,\r\n  NavLink,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\n// This is mentor view for the upcoming sessions\r\nconst MentorSessionUpcoming = () => {\r\n  // const { sessions } = location.state || {}; // Retrieve sessions from location state\r\n  const [session, setSession] = useState(\"\");\r\n  const [sessionPagination, setSessionPagination] = useState(\"\");\r\n  const [pagination, setPagination] = useState(\"\");\r\n  \r\n  const [upcomingSession, setUpcomingSession] = useState(\"\");\r\n  const [showSuccessCard, setShowSuccessCard] = useState(false);\r\n  const location = useLocation();\r\n  const [currentPage, setCurrentPage] = useState(1); // Start from page 1\r\n  const [currentPage1, setCurrentPage1] = useState(1); // Start from page 1\r\n\r\n\r\n  // const url1=`${baseUrl}/mentorSessionUpcomingHistory`;\r\n\r\n  // if you want to change the url to backend uncomment the below line\r\n  // const url1 = `${baseUrl}/api/calendar/mentor/upcoming-bookedslots-session-history`;\r\n\r\n  const upcomingSessionsUrl = `${baseUrl}/api/calendar/partner/upcoming-bookedslots`;\r\n  const sessionHistoryUrl = `${baseUrl}/api/calendar/partner/session-history`;\r\n\r\n\r\n  //  const deployType = 'dev'; // 'dev' or 'production'\r\n\r\n  // const urls = {\r\n  //     dev: {\r\n  //         \"baseUrl\":'localhost:3001',\r\n  //         \"mentorApp\": \"mentorSessionUpcomingHistory\"\r\n\r\n  //     },\r\n  //     production: {\r\n  //         \"baseUrl\": \"localhost:9091\",\r\n  //         \"mentorApp\": \"/api/calendar/mentor/upcoming-bookedslots-session-history\"\r\n\r\n  //     }\r\n  // };\r\n\r\n  // const { baseUrl, mentorApp } = urls[deployType];\r\n  // const getURL = (urlSlug) => {\r\n  //   return urls[deployType][urlSlug]\r\n\r\n  // };\r\n  // const urlnew=`${baseUrl}` / getURL(\"mentorApp\");\r\n  const history = useHistory();\r\n\r\n  const handleJoinCall = (userId, id) => {\r\n    const fullUrl = `/app/videocall/${userId}/${id}`;\r\n    history.push(fullUrl);\r\n  };\r\n  useEffect(() => {\r\n    //   console.log(\"Deploy Type:\", deployType);\r\n    // console.log(\"Base URL:\", urls[deployType].baseUrl);\r\n    // console.log(\"Mentor App URL:\", urls[deployType].mentorApp);\r\n\r\n    const SessionHistroy = async () => {\r\n      try {\r\n        const response = await axios.get(`${sessionHistoryUrl}?page=${currentPage1 -1}&size=10&role=MENTOR`);\r\n      setSession(response.data.data );\r\n      setSessionPagination(response.data.paginationMeta );\r\n    } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    SessionHistroy();\r\n    const SessionUpcomingHistroy = async () => {\r\n      try {\r\n        const response = await axios.get(`${upcomingSessionsUrl}?page=${currentPage -1}&size=10&role=MENTOR`);\r\n        setUpcomingSession(response.data.data );\r\n        setPagination(response.data.paginationMeta );\r\n        const queryParams = new URLSearchParams(location.search);\r\n        const appointment = queryParams.get(\"appointment\");\r\n        setShowSuccessCard(appointment === \"true\");\r\n        console.log(\"Upcoming Session Data:\", response);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    SessionUpcomingHistroy();\r\n  }, [currentPage, currentPage1, location.search]);\r\n\r\n  // const [currentTime, setCurrentTime] = useState(new Date())\r\n  // useEffect(() => {\r\n  //   const intervalId = setInterval(() => {\r\n  //     setCurrentTime(new Date());\r\n  //   }, 30000);\r\n\r\n  //   return () => clearInterval(intervalId);\r\n  // }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n          {showSuccessCard && (\r\n            <Card className=\"my-2\">\r\n              <CardBody className=\"text-center\">\r\n                <span className=\"text-xlarge text-primary\">\r\n                  <i className=\"simple-icon-check\" />\r\n                </span>\r\n                <h3 className=\"text-center\">\r\n                  You have successfully scheduled appointment with mentorName\r\n                </h3>\r\n              </CardBody>\r\n            </Card>\r\n          )}\r\n          <div className=\"my-3\">\r\n            <h2 className=\"font-weight-medium\">Upcoming sessions</h2>\r\n\r\n            <div>\r\n              <div className=\"\">\r\n                {upcomingSession.length > 0 ? (\r\n                  upcomingSession.map((up) => {\r\n                    const date = new Date(up.fromTimeStamp);\r\n                    const fromtime = new Date(up.fromTimeStamp);\r\n                    const totime = new Date(up.toTimeStamp);\r\n                    const updateformat = `${date.getDate()}/${\r\n                      date.getMonth() + 1\r\n                    }/${date.getFullYear()}`;\r\n                    const timeOptions = { hour: \"2-digit\", minute: \"2-digit\" };\r\n\r\n                    // const isWithinFiveMinutes = (fromTimeStamp) => {\r\n                    //   const fiveMinutesInMs = 5 * 60 * 1000;\r\n                    //   // const currentTime = new Date().getTime();\r\n                    //   const fromTime = new Date(fromTimeStamp).getTime();\r\n                    //   const timeDiff = fromTime - currentTime;\r\n\r\n                    //   return timeDiff >= 0 && timeDiff <= fiveMinutesInMs;\r\n                    // };\r\n\r\n                    return (\r\n                      <div key={up.menteeId}>\r\n                        <Card className=\"my-4\">\r\n                          <Badge\r\n                            color=\"primary\"\r\n                            pill\r\n                            className=\"position-absolute badge-top-right\"\r\n                          >\r\n                            NEW\r\n                          </Badge>\r\n\r\n                          <CardBody className=\"d-flex justify-content-between flex-wrap\">\r\n                            {/* <div className='d-flex justify-content-between flex-column'>\r\n              \r\n                <h4 className='text-large text-primary'>{up.name}</h4>\r\n                \r\n              </div> */}\r\n                            <Row className=\"\">\r\n                              <Col className=\"d-flex\">\r\n                                <NavLink\r\n                                  href={`/app/student/profile/${up.menteeId}`}\r\n                                  className=\"d-flex align-items-center\"\r\n                                >\r\n                                  {up.imageUrl === null ? (\r\n                                    <ThumbnailLetters\r\n                                      rounded\r\n                                      text={up.name}\r\n                                      alt=\"Card image cap\"\r\n                                      className=\"m-4\"\r\n                                    />\r\n                                  ) : (\r\n                                    <img\r\n                                      style={{\r\n                                        height: \"140px\",\r\n                                        width: \"140px\",\r\n                                      }}\r\n                                      src={`${baseUrl}/${up.imageUrl}`}\r\n                                      alt=\"Card  cap\"\r\n                                      className=\"m-4 rounded-circle\"\r\n                                    />\r\n                                  )}\r\n\r\n                                  <h4 className=\"text-large text-primary ml-2\">\r\n                                    {up.name}\r\n                                  </h4>\r\n                                </NavLink>\r\n                              </Col>\r\n                            </Row>\r\n                            <div className=\"d-flex justify-content-around flex-column \">\r\n                              <div className=\"d-flex\">\r\n                                <Label className=\"text-one\">Date:</Label>\r\n                                <h4 className=\"ml-2 font-weight-bold\">\r\n                                  {updateformat}\r\n                                </h4>\r\n                              </div>\r\n                              <div className=\"d-flex justify-content-between\">\r\n                                <h4 className=\"mr-2\">From:</h4>\r\n                                <h4 className=\"mr-2 font-weight-bold\">\r\n                                  {fromtime.toLocaleTimeString([], timeOptions)}\r\n                                </h4>\r\n                                <h4>to</h4>\r\n                                <h4 className=\"font-weight-bold mx-2\">\r\n                                  {totime.toLocaleTimeString([], timeOptions)}\r\n                                </h4>\r\n                              </div>\r\n                              <div className=\"d-flex\">\r\n                                <Label className=\"text-one mr-2\">Mode:</Label>\r\n                                <h4 className=\"font-weight-bold\">{up.mode}</h4>\r\n                              </div>\r\n                              <Button\r\n                                outline\r\n                                color=\"primary\"\r\n                                className=\"mt-2 text-one \"\r\n                                onClick={() =>\r\n                                  handleJoinCall(up.menteeId, up.id)\r\n                                }\r\n                              >\r\n                                Join Call\r\n                              </Button>\r\n                            </div>\r\n                          </CardBody>\r\n                        </Card>\r\n                      </div>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <Card>\r\n                    <CardBody>\r\n                      <h3>No upcoming sessions</h3>\r\n                    </CardBody>\r\n                  </Card>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n<Pagination\r\n            currentPage={currentPage}\r\n            totalPage={pagination.totalPage || 1}\r\n            onChangePage={(i) => setCurrentPage(i)}\r\n            lastIsActive={pagination.last}\r\n            firstIsActive={pagination.first}\r\n          />\r\n\r\n          <div className=\"my-3 mt-4\">\r\n            <h2 className=\"font-weight-medium\">Session history</h2>\r\n\r\n            <div>              \r\n              {session && session.length > 0 ? (\r\n                session.map((sh) => {\r\n                  const date = new Date(sh.fromTimeStamp);\r\n                  const fromtime = new Date(sh.fromTimeStamp);\r\n                  const totime = new Date(sh.toTimeStamp);\r\n                  const timeOptions = { hour: \"2-digit\", minute: \"2-digit\" };\r\n                  const shdateformat = `${date.getDate()}/${\r\n                    date.getMonth() + 1\r\n                  }/${date.getFullYear()}`;\r\n                  const formatDuration = (durationInMs) => {\r\n                    const durationInMinutes = durationInMs / (1000 * 60);\r\n                    return durationInMinutes.toFixed(2); // Formats the number to two decimal places\r\n                  };\r\n\r\n                  return (\r\n                    <Card className=\"my-2\" key={sh.menteeId}>\r\n                      <CardBody className=\"d-flex justify-content-between flex-wrap\">\r\n                        {/* <div className='d-flex justify-content-between flex-column'> */}\r\n                        {/* <NavLink href={`/app/mentorprofile/${sh.mentorId}`}>\r\n                <h4 className='text-large text-primary'>{sh.name}</h4>\r\n              </NavLink> */}\r\n                        {/* <h4 className='text-large text-primary'>{sh.name}</h4> */}\r\n\r\n                        {/* </div> */}\r\n\r\n                        <Row className=\"\">\r\n                          <Col className=\"d-flex\">\r\n                            <NavLink\r\n                              href={`/app/user/profile/${sh.menteeId}`}\r\n                              className=\"d-flex align-items-center\"\r\n                            >\r\n                              {sh.imageUrl === null ? (\r\n                                <ThumbnailLetters\r\n                                  rounded\r\n                                  text={sh.name}\r\n                                  alt=\"Card image cap\"\r\n                                  className=\"m-4\"\r\n                                />\r\n                              ) : (\r\n                                <img\r\n                                  style={{ height: \"140px\", width: \"140px\" }}\r\n                                  src={`${baseUrl}/${sh.imageUrl}`}\r\n                                  alt=\"Card  cap\"\r\n                                  className=\"m-4 rounded-circle\"\r\n                                />\r\n                              )}\r\n\r\n                              <h4 className=\"text-large text-primary ml-2\">\r\n                                {sh.name}\r\n                              </h4>\r\n                            </NavLink>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <div className=\"d-flex justify-content-around flex-column \">\r\n                          <div className=\"d-flex\">\r\n                            <Label className=\"text-one\">Date:</Label>\r\n                            <h4 className=\"ml-2 font-weight-bold\">\r\n                              {shdateformat}\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <Label className=\"text-one mr-2\">Duration:</Label>\r\n                            {/* <h4 className='font-weight-bold'>{sh.duration/60000} minutes</h4> */}\r\n                            <h4 className=\"font-weight-bold\">\r\n                              {formatDuration(sh.duration)} minutes\r\n                            </h4>\r\n                          </div>\r\n\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <div className=\"d-flex\">\r\n                              <h4 className=\" mr-2\">From:</h4>\r\n                              <h4 className=\"font-weight-bold\">\r\n                                {fromtime.toLocaleTimeString([], timeOptions)}\r\n                              </h4>\r\n                              <h4 className=\"mx-2\">to</h4>\r\n                              <h4 className=\"font-weight-bold\">\r\n                                {totime.toLocaleTimeString([], timeOptions)}\r\n                              </h4>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"d-flex\">\r\n                            <Label className=\"mr-2 text-one\">Mode:</Label>\r\n                            <h4 className=\"font-weight-bold \">{sh.mode}</h4>\r\n                          </div>\r\n                        </div>\r\n                      </CardBody>\r\n                    </Card>\r\n                  );\r\n                })\r\n              ) : (\r\n                <Card>\r\n                  <CardBody>\r\n                    <h3>No session history</h3>\r\n                  </CardBody>\r\n                </Card>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Colxx>\r\n      </Row>\r\n      <Pagination\r\ncurrentPage={currentPage1}\r\ntotalPage={sessionPagination.totalPage}\r\nonChangePage={(i) => setCurrentPage1(i)}\r\nlastIsActive={sessionPagination.last}\r\nfirstIsActive={sessionPagination.first}\r\n/>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MentorSessionUpcoming;","import axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport {\r\n  Button,\r\n  // Card,\r\n  // CardBody,\r\n  // CardSubtitle,\r\n  // CardImg,\r\n  ButtonDropdown,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n} from \"reactstrap\";\r\n// import { NotificationManager } from 'components/common/react-notifications';\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport country from \"../my-login/Country\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst MyProfile = () => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isEditingAbout, setIsEditingAbout] = useState(false);\r\n  const [isEditingButton, setIsEditingButton] = useState(false);\r\n  const [isEditingPrice, setIsEditingPrice] = useState(false);\r\n  const [image, setImage] = useState(null);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [jobTitle, setJobTitle] = useState(\"\");\r\n  // const [experience, setExperience] = useState(\"\");\r\n  const [resumeFileName, setResumeFileName] = useState(\"\");\r\n  const [resumeFileId, setResumeFileId] = useState(\"\");\r\n  const [setExperience] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [newInputSkill, setNewInputSkill] = useState(\"\");\r\n  const [skills, setSkills] = useState([]);\r\n  const [userId, setUserId] = useState(null);\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [linkedinUrl, setLinkedinUrl] = useState(\"\");\r\n  const [twitterHandle, setTwitterHandle] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n  const [introVideo, setIntroVideo] = useState(\"\");\r\n  const [featuredArticle, setFeaturedArticle] = useState(\"\");\r\n  const [reasonForMentor, setReasonForMentor] = useState(\"\");\r\n  const [achievement, setAchievement] = useState(\"\");\r\n  const [totalRatings, setTotalRatings] = useState(0);\r\n  const [averageStar, setAverageStar] = useState(0);\r\n  // const [profileLoading, setProfileLoading] = useState(true);\r\n  const [setProfileLoading] = useState(true);\r\n  // const [languages, setLanguages] = useState([]);\r\n  const [languages] = useState([]);\r\n  const [skillValidationMessage, setSkillValidationMessage] = useState(\"\");\r\n  const [isProfileUpdated, setIsProfileUpdated] = useState(false);\r\n  const [imageEditModal, setImageEditModal] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [selectedFileBase64, setSelectedFileBase64] = useState(null);\r\n  const [fileError, setFileError] = useState(\"\");\r\n\r\n  // const Id = 1;\r\n\r\n  // const url = `${baseUrl}/user`;\r\n  // const url = `${baseUrl}/api/mentor/11/details/profile`;\r\n  // const url1 = `${baseUrl}/mentor/profile${userId}`;\r\n  // const endUrl = `${baseUrl}/api/mentor/${Id}/details/profile`;\r\n  // const endUrl = `${baseUrl}/myprofile`;\r\n  const endUrl = `${baseUrl}/api/mentor/myprofile`;\r\n  const inputUrl = `${baseUrl}/inputs`;\r\n  const imageEditUrl = `${baseUrl}/api/mentor/profile-image`;\r\n  const mentorProfileDetails = async () => {\r\n    try {\r\n      const response = await axios.get(endUrl);\r\n      const userData = response.data;\r\n      // console.log(\"userData:\", userData);\r\n      if (userData) {\r\n        setImage(userData.imageUrl);\r\n        setFirstName(userData.firstName);\r\n        // setJobRole(userData.jobRole);\r\n        setJobTitle(userData.jobTitle);\r\n        setCompany(userData.company);\r\n        setLocation(userData.location);\r\n        setResumeFileName(userData.documentName);\r\n        setResumeFileId(userData.documentId);\r\n        // setAbout(userData.bio);\r\n        setSkills(userData.skills);\r\n        setUserId(userData.id);\r\n        // setLastseen(userData.lastSeen);\r\n        // setRatings(userData[0].ratings)\r\n        // console.log(response)\r\n        // console.log(\"Username:\", userData[1].jobRole);\r\n        setLastName(userData.lastName);\r\n        setEmail(userData.email);\r\n        // setPassword(userData.password);\r\n        setCategory(userData.category);\r\n        setBio(userData.bio);\r\n        setPrice(userData.price);\r\n        setLinkedinUrl(userData.linkedinUrl);\r\n        setTwitterHandle(userData.twitterHandle);\r\n        setWebsite(userData.website);\r\n        setIntroVideo(userData.introVideo);\r\n        setFeaturedArticle(userData.featuredArticle);\r\n        setReasonForMentor(userData.reasonForMentor);\r\n        setAchievement(userData.achievement);\r\n        setProfileLoading(false);\r\n        // setReviews(userData.reviews)\r\n        // setPrice(userData.price)\r\n        // setExperience(userData.experience)\r\n        // setTopics(userData.topics);\r\n        // setStar(userData.star);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    mentorProfileDetails();\r\n  }, [isProfileUpdated]);\r\n  useEffect(() => {\r\n    const mentorReviews = async () => {\r\n      const ratingUrl = `${baseUrl}/api/mentorship/rating/meta/${userId}`;\r\n\r\n      try {\r\n        const response = await axios.get(ratingUrl);\r\n        setTotalRatings(response.data.totalRatings);\r\n        setAverageStar(response.data.averageStar);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    mentorReviews();\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    const mentorProfileDetails1 = async () => {\r\n      try {\r\n        const response = await axios.get(inputUrl);\r\n        const inputData = response.data;\r\n        // console.log(\"inputData:\", inputData);\r\n        if (inputData) {\r\n          // setReviews(inputData.reviews)\r\n          // setPrice(inputData.price)\r\n          setExperience(inputData.experience);\r\n          // setTopics(inputData.topics);\r\n          // setStar(inputData.star);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    mentorProfileDetails1();\r\n  }, []);\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n  // console.log(token);\r\n\r\n  const updateMEntorProfile = async () => {\r\n    try {\r\n      const updatedData = {\r\n        image,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        jobTitle,\r\n        company,\r\n        location,\r\n        category,\r\n        languages,\r\n        skills,\r\n        bio,\r\n        price,\r\n        linkedinUrl,\r\n        twitterHandle,\r\n        website,\r\n        introVideo,\r\n        featuredArticle,\r\n        reasonForMentor,\r\n        achievement,\r\n        // reviews,\r\n        // star,\r\n        // topics,\r\n        // price,\r\n        // experience,\r\n      };\r\n\r\n      // console.log(\"Updated Data:\", updatedData);\r\n      // const response =\r\n\r\n      const response = await axios.put(endUrl, updatedData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      // console.log(\"Response\", response.data.statuses[0].message);\r\n      //   response.data.statuses.forEach((status) => {\r\n      //    const responseMessage = status.message;\r\n      //     NotificationManager.success(responseMessage, 'Great!', 3000, null, null, '');\r\n      // });\r\n      setIsProfileUpdated(!isProfileUpdated);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      // console.log(\"Profile updated successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error updating profile\", error);\r\n      // if (error.response && error.response.data.statuses[0]) {\r\n      //   ToasterComponent(\"warning\", error.response.data.statuses);\r\n      // }\r\n      if (error?.response?.data?.statuses[0]) {\r\n        ToasterComponent(\"warning\", error.response.data.statuses);\r\n      } else {\r\n        ToasterComponent(\"error\", [\r\n          { message: \"An unexpected error occurred\" },\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const postImageData = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", selectedFile);\r\n\r\n      const response = await axios.post(imageEditUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      setTimeout(() => {}, 2000);\r\n      // console.log(`resres ${response.status}`);\r\n      if (response.status === 200) {\r\n        await mentorProfileDetails();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleImageClick = () => setImageEditModal(true);\r\n\r\n  const handleImagePost = () => {\r\n    postImageData();\r\n    setSelectedFile(null);\r\n    setImageEditModal(false);\r\n  };\r\n\r\n  const handleImageDelete = () => {\r\n    // setSelectedFile(image);\r\n    setImageEditModal(false);\r\n  };\r\n\r\n  const handleAddSkill = (newSkill) => {\r\n    if (!newSkill.trim()) {\r\n      setSkillValidationMessage(\"Skill cannot be empty\");\r\n    } else {\r\n      setSkillValidationMessage(\"\");\r\n      setSkills([...skills, newSkill]);\r\n    }\r\n  };\r\n\r\n  // const handleEditAboutClick = () => {\r\n  //   setIsEditingAbout(true);\r\n  // };\r\n\r\n  const handleSaveAbout = () => {\r\n    setIsEditingAbout(false);\r\n    updateMEntorProfile();\r\n  };\r\n  const handleSavePrice = () => {\r\n    setIsEditingPrice(false);\r\n    updateMEntorProfile();\r\n  };\r\n\r\n  // const handleCancelEditAbout = () => {\r\n  //   setIsEditingAbout(false);\r\n  // };\r\n\r\n  // const handleEditButton = () => {\r\n  //   setIsEditingButton(true);\r\n  // };\r\n  const handleSaveButton = () => {\r\n    if (skills.length === 0) {\r\n      setSkillValidationMessage(\"At least one skill is required.\");\r\n    } else {\r\n      setIsEditingButton(false);\r\n      updateMEntorProfile();\r\n    }\r\n  };\r\n\r\n  // const handleCancelButton = () => {\r\n  //   if (skills.length === 0) {\r\n  //     setSkillValidationMessage(\"At least one skill is required.\");\r\n  //   } else {\r\n  //     setIsEditingButton(false);\r\n  //   }\r\n  // };\r\n\r\n  // const handleEditClick = () => {\r\n  //   setIsEditing(true);\r\n  // };\r\n  const handleFileChange1 = async (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    if (file) {\r\n      const fileType = file.type;\r\n      const fileSize = file.size;\r\n\r\n      // Check if the file is a PDF\r\n      if (fileType !== \"application/pdf\") {\r\n        setFileError(\"Please upload a PDF file.\");\r\n        setResumeFileName(\"\"); // Clear the file name if invalid\r\n        return;\r\n      }\r\n\r\n      // Check if the file size is more than 2MB\r\n      if (fileSize > 2 * 1024 * 1024) {\r\n        setFileError(\"File size should be less than 2MB.\");\r\n        setResumeFileName(\"\"); // Clear the file name if invalid\r\n        return;\r\n      }\r\n\r\n      // If valid, clear the error and set the file name\r\n      setFileError(\"\");\r\n      setResumeFileName(file.name);\r\n      const formData = new FormData();\r\n      formData.append(\"resume\", file);\r\n\r\n      // Post the file to the given URL\r\n      const uploadUrl = `${baseUrl}/api/resume?role=MENTOR`;\r\n\r\n      try {\r\n        const response = await axios.post(uploadUrl, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        });\r\n\r\n        // Handle successful response\r\n        if (response.status === 200) {\r\n          ToasterComponent(\"success\", response.data.statuses);\r\n          console.log(\"Resume uploaded successfully\", response.data);\r\n          setResumeFileId(response.data.documentId);\r\n        } else {\r\n          ToasterComponent(\"error\", \"Failed to upload resume\");\r\n          console.error(\"Failed to upload resume\", response.data);\r\n        }\r\n      } catch (error) {\r\n        // Handle errors\r\n        if (error.response) {\r\n          ToasterComponent(\r\n            \"error\",\r\n            error.response.data.message || \"Upload failed\"\r\n          );\r\n          console.error(\"Error uploading resume:\", error.response);\r\n        } else {\r\n          ToasterComponent(\"error\", \"An error occurred while uploading\");\r\n          console.error(\"Error uploading resume:\", error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setIsEditing(false);\r\n    updateMEntorProfile();\r\n    postImageData();\r\n  };\r\n\r\n  // const handleCancel = () => {\r\n  //   setIsEditing(false);\r\n  // };\r\n\r\n  const handleRemoveSkill = (index) => {\r\n    setSkills(skills.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        setSelectedFileBase64(base64Image);\r\n\r\n        // setAboutField({ ...aboutField, image: base64Image });\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const countryName = country.find((c) => c.iso_code === location)?.name;\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\r\n\r\n  const handleView = async (fileId) => {\r\n    const viewUrl = `${baseUrl}/api/resume/${fileId}`; // Replace with your actual API endpoint\r\n\r\n    try {\r\n      const response = await axios.get(viewUrl, {\r\n        // This is important for downloading binary files\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Include authorization if required\r\n        },\r\n      });\r\n      // const response = await axios.get(viewUrl);\r\n\r\n      if (response.status === 200) {\r\n        // Create a URL for the binary response\r\n        // const fileUrl = window.URL.createObjectURL(new Blob([response.data]));\r\n        // const blobUrl = window.URL.createObjectURL(new Blob([response.data]));\r\n\r\n        // Open the file in a new tab\r\n        window.open(viewUrl, \"_blank\");\r\n      } else {\r\n        ToasterComponent(\"error\", \"Failed to view resume\");\r\n        console.error(\"Failed to view resume\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.message || \"View failed\");\r\n        console.error(\"Error viewing resume:\", error.response);\r\n      } else {\r\n        ToasterComponent(\"error\", \"An error occurred while viewing\");\r\n        console.error(\"Error viewing resume:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (fileId) => {\r\n    const deleteUrl = `${baseUrl}/api/resume/${fileId}?role=MENTOR`; // Replace with your actual delete API endpoint\r\n\r\n    try {\r\n      const response = await axios.delete(deleteUrl);\r\n\r\n      if (response.status === 200) {\r\n        // Assuming the deletion is successful\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n        console.log(\"File deleted successfully\");\r\n        // Add any other logic here like updating the state or UI\r\n        setResumeFileName(\"\");\r\n      } else {\r\n        console.error(\"Failed to delete the file\", \"Error\");\r\n      }\r\n    } catch (error) {\r\n      // Handle the error here\r\n      // if (\r\n      //   error.response &&\r\n      //   error.response.data &&\r\n      //   error.response.data.statuses\r\n      // ) {\r\n      //   ToasterComponent(\"error\", error.response.data.statuses);\r\n      // }\r\n      if (error?.response?.data?.statuses) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error deleting the file:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mentor-profile\">\r\n      {/* <div className=\"\"> */}\r\n\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"\">\r\n        {/* new design starts */}\r\n        {/* profile section starts */}\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <CardBody\r\n                style={{\r\n                  background: \"linear-gradient(to right, #7B42C5, #AA5D93)\",\r\n                  color: \"white\",\r\n                  borderRadius: \"9px 9px 0 0\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"position-relative\"\r\n                  style={{ position: \"relative\", top: \"5px\", textAlign: \"end\" }}\r\n                >\r\n                  <Button\r\n                    color=\"primary\"\r\n                    outline\r\n                    className=\"icon-button  bg-light\"\r\n                    style={{ border: \"none\" }}\r\n                    size=\"sm\"\r\n                    onClick={() => handleImageClick()}\r\n                  >\r\n                    <i className=\"simple-icon-pencil\" />\r\n                  </Button>\r\n                </div>\r\n                <div\r\n                  className=\"position-relative\"\r\n                  style={{ position: \"relative\", top: \"70px\" }}\r\n                >\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn p-0\"\r\n                    style={{ border: \"none\", background: \"none\" }}\r\n                    // onClick={() => handleImageClick()}\r\n                    aria-label=\"Profile image\"\r\n                  >\r\n                    {image === null ? (\r\n                      <ThumbnailLetters\r\n                        // small\r\n                        rounded\r\n                        text={firstName}\r\n                        className=\"mx-2\"\r\n                        color=\"secondary\"\r\n                      />\r\n                    ) : (\r\n                      <img\r\n                        src={`${baseUrl}/${image}`}\r\n                        className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                        style={{\r\n                          width: \"110px\",\r\n                          height: \"110px\",\r\n                          objectFit: \"cover\",\r\n                          overflow: \"hidden\",\r\n                        }}\r\n                        alt=\"img\"\r\n                      />\r\n                    )}\r\n                  </button>\r\n                  <Modal\r\n                    isOpen={imageEditModal}\r\n                    toggle={() => setImageEditModal(!imageEditModal)}\r\n                    className=\"\"\r\n                    size=\"lg\"\r\n                    style={{\r\n                      borderRadius: \"10px\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                      <h2 className=\"font-weight-bold\">Profile photo</h2>\r\n                    </ModalHeader>\r\n                    <ModalBody className=\"d-flex justify-content-center align-items-center\">\r\n                      {/* <img\r\n                        src={selectedFileBase64 || `${baseUrl}/${image}`}\r\n                        className=\"rounded-circle img-thumbnail border border-3\"\r\n                        style={{\r\n                          width: \"130px\",\r\n                          height: \"130px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                        alt=\"img\"\r\n                      /> */}\r\n                      {image === null ? (\r\n                        <ThumbnailLetters\r\n                          rounded\r\n                          text={firstName}\r\n                          className=\"mx-2\"\r\n                          color=\"secondary\"\r\n                          style={{\r\n                            width: \"130px\",\r\n                            height: \"130px\",\r\n                            objectFit: \"cover\",\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          src={selectedFileBase64 || `${baseUrl}/${image}`}\r\n                          className=\"rounded-circle img-thumbnail border border-3\"\r\n                          style={{\r\n                            width: \"130px\",\r\n                            height: \"130px\",\r\n                            objectFit: \"cover\",\r\n                          }}\r\n                          alt=\"img\"\r\n                        />\r\n                      )}\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter className=\"d-flex align-items-center justify-content-center\">\r\n                      {selectedFile ? (\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          onClick={() => handleImagePost()}\r\n                          className=\"icon-button\"\r\n                          style={{ border: \"none\" }}\r\n                        >\r\n                          <i className=\"iconsminds-upload \" />\r\n                        </Button>\r\n                      ) : (\r\n                        <InputGroup\r\n                          className=\"\"\r\n                          style={{\r\n                            width: \"auto\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <div className=\"\">\r\n                            <Button\r\n                              outline\r\n                              className=\"icon-button\"\r\n                              color=\"primary\"\r\n                              style={{ border: \"none\" }}\r\n                              onClick={() =>\r\n                                document.getElementById(\"file-upload\").click()\r\n                              }\r\n                            >\r\n                              <i className=\"simple-icon-pencil\" />\r\n                            </Button>\r\n\r\n                            <Input\r\n                              id=\"file-upload\"\r\n                              type=\"file\"\r\n                              className=\"d-none\"\r\n                              onChange={handleFileChange}\r\n                            />\r\n                          </div>\r\n                        </InputGroup>\r\n                      )}\r\n\r\n                      <Button\r\n                        color=\"primary\"\r\n                        outline\r\n                        onClick={() => handleImageDelete()}\r\n                        className=\"icon-button\"\r\n                        style={{ border: \"none\" }}\r\n                      >\r\n                        <i className=\"simple-icon-trash\" />\r\n                      </Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n                </div>\r\n\r\n                {/* Modal for update profile starts */}\r\n                <Modal\r\n                  isOpen={isEditing}\r\n                  toggle={() => setIsEditing(!isEditing)}\r\n                  className=\"\"\r\n                  size=\"lg\"\r\n                  style={{\r\n                    borderRadius: \"10px\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                    <h2 className=\"font-weight-bold\">Edit Profile</h2>\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <Row className=\"\">\r\n                      <Col md=\"6\">\r\n                        <Label for=\"firstName\" className=\"text-muted\">\r\n                          <h4>First Name</h4>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"firstName\"\r\n                          value={firstName}\r\n                          onChange={(e) => setFirstName(e.target.value)}\r\n                          className=\" text-one\"\r\n                        />\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                        <Label for=\"lastName\" className=\"text-muted\">\r\n                          <h4>Last Name</h4>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"lastName\"\r\n                          value={lastName}\r\n                          onChange={(e) => setLastName(e.target.value)}\r\n                          className=\" text-one\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <br />\r\n\r\n                    <>\r\n                      <Label for=\"jobtitle\" className=\"text-muted\">\r\n                        <h4>Job Title</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"jobtitle\"\r\n                        value={jobTitle}\r\n                        onChange={(e) => setJobTitle(e.target.value)}\r\n                        className=\" text-one\"\r\n                      />\r\n                      <br />\r\n                    </>\r\n                    <>\r\n                      <Label for=\"company\" className=\"text-muted\">\r\n                        <h4>Company</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"company\"\r\n                        value={company}\r\n                        onChange={(e) => setCompany(e.target.value)}\r\n                        className=\" text-one\"\r\n                      />\r\n                      <br />\r\n                    </>\r\n\r\n                    <>\r\n                      <Label for=\"location\" className=\"text-muted\">\r\n                        <h4>Location</h4>\r\n                      </Label>\r\n\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"location\"\r\n                        value={location}\r\n                        // validate={validateLocation}\r\n                        onChange={(e) => setLocation(e.target.value)}\r\n                        className=\"form-control text-one\"\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          Select Location\r\n                        </option>\r\n                        {country.map((option) => (\r\n                          <option key={option.iso_code} value={option.iso_code}>\r\n                            {option.name}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      <br />\r\n                    </>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <>\r\n                          <Label for=\"resume\" className=\"text-muted\">\r\n                            <h4>CV</h4>\r\n                          </Label>\r\n                          <div\r\n                            className=\" p-2 my-2 d-flex text-one align-items-center justify-content-between\"\r\n                            style={{\r\n                              border: \"1px solid #ccc\",\r\n                              minWidth: \"200px\",\r\n                            }}\r\n                          >\r\n                            {resumeFileName || \"no file selected\"}\r\n                            <ButtonDropdown\r\n                              isOpen={dropdownOpen}\r\n                              toggle={toggleDropdown}\r\n                            >\r\n                              <DropdownToggle\r\n                                caret\r\n                                style={{\r\n                                  backgroundColor: \"transparent\",\r\n                                  border: \"none\",\r\n                                  padding: 0,\r\n                                }}\r\n                              >\r\n                                <i\r\n                                  className=\"fa-solid fa-ellipsis\"\r\n                                  style={{\r\n                                    color: \"#333\",\r\n                                    cursor: \"pointer\",\r\n                                  }}\r\n                                />\r\n                              </DropdownToggle>\r\n\r\n                              <DropdownMenu>\r\n                                <DropdownItem\r\n                                  onClick={() => handleView(resumeFileId)}\r\n                                >\r\n                                  view\r\n                                </DropdownItem>\r\n                                <DropdownItem\r\n                                  onClick={() => handleDelete(resumeFileId)}\r\n                                >\r\n                                  delete\r\n                                </DropdownItem>\r\n                              </DropdownMenu>\r\n                            </ButtonDropdown>\r\n                          </div>\r\n                          <InputGroup className=\"\">\r\n                            <div className=\"\">\r\n                              <button\r\n                                type=\"button\"\r\n                                style={{\r\n                                  cursor: \"pointer\",\r\n\r\n                                  background: \"none\",\r\n                                  border: \"none\",\r\n                                }}\r\n                                onClick={() =>\r\n                                  document.getElementById(\"file-upload\").click()\r\n                                }\r\n                              >\r\n                                <h5>+ Add your Resume</h5>\r\n                              </button>\r\n                              {/* <Form> */}\r\n                              <Input\r\n                                id=\"file-upload\"\r\n                                type=\"file\"\r\n                                className=\"d-none\"\r\n                                // onChange={handleFileChange1}\r\n                                // validate={validateFile}\r\n                                onChange={(e) => handleFileChange1(e)}\r\n                              />\r\n                            </div>\r\n                          </InputGroup>\r\n                          <br />\r\n                          {fileError && (\r\n                            <p style={{ color: \"red\" }}>{fileError}</p>\r\n                          )}\r\n                        </>\r\n                      </Col>\r\n                    </Row>\r\n                  </ModalBody>\r\n                  <ModalFooter\r\n                    style={{ borderTop: \"none\" }}\r\n                    className=\"d-flex align-items-center justify-content-center\"\r\n                  >\r\n                    <Button color=\"primary\" onClick={() => handleSave()}>\r\n                      Save\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      onClick={() => setIsEditing(false)}\r\n                      className=\"\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n                {/* Modal for update profile ends */}\r\n              </CardBody>\r\n              <CardBody>\r\n                <div className=\" mt-2\">\r\n                  <div className=\"text-end w-100  d-flex justify-content-end\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      style={{ border: \"none\" }}\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditing(true)}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"\">\r\n                    {/* {linkedinUrl && (\r\n                  <NavLink className=\"d-none d-md-inline-block\">\r\n                    <Button\r\n                      color=\"light\"\r\n                      className=\"font-weight-semibold icon-button\"\r\n                      size=\"large\"\r\n                      onClick={handleLinkedInClick}\r\n                    >\r\n                      <i className=\"simple-icon-social-linkedin text-primary font-weight-semibold text-one\" />\r\n                    </Button>\r\n                  </NavLink>\r\n                )}\r\n                {twitterHandle && (\r\n                  <NavLink className=\"d-none d-md-inline-block\">\r\n                    <Button\r\n                      color=\"light\"\r\n                      className=\"font-weight-semibold icon-button\"\r\n                      size=\"large\"\r\n                      onClick={handleTwitterClick}\r\n                    >\r\n                      <i className=\"simple-icon-social-twitter text-primary font-weight-semibold text-one\" />\r\n                    </Button>\r\n                  </NavLink>\r\n                )}\r\n                {website && (\r\n                  <NavLink className=\"d-none d-md-inline-block\">\r\n                    <Button\r\n                      color=\"light\"\r\n                      className=\"font-weight-semibold icon-button\"\r\n                      size=\"large\"\r\n                      onClick={handlePersonalWebsiteClick}\r\n                    >\r\n                      <i className=\"simple-icon-globe text-primary font-weight-semibold text-one\" />\r\n                    </Button>\r\n                  </NavLink>\r\n                )} */}\r\n\r\n                    <div className=\"mt-4\">\r\n                      <h2 className=\"font-weight-bold\">\r\n                        {firstName} {lastName}\r\n                      </h2>\r\n                      <h3 className=\"text-one\">\r\n                        {jobTitle} | {company}\r\n                      </h3>\r\n                      <h5 className=\"font-weight-medium\">\r\n                        <i className=\"simple-icon-location-pin text-primary\" />\r\n\r\n                        <span className=\"ml-2\">{countryName}</span>\r\n                      </h5>\r\n                      <h6 className=\"\">\r\n                        <i className=\"simple-icon-star text-primary \" />\r\n                        <span className=\"ml-2\">{`${averageStar} (${totalRatings} reviews)`}</span>\r\n                      </h6>\r\n                      <h6 className=\"text-muted\">{resumeFileName}</h6>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* profile section ends */}\r\n\r\n        {/* about section starts */}\r\n        <Row className=\"my-4 \">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row className=\"align-items-center\">\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">About</h2>\r\n\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingAbout(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <div>\r\n                  <p className=\"text-muted\">{bio}</p>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {/* about modal  */}\r\n        <Modal\r\n          isOpen={isEditingAbout}\r\n          toggle={() => setIsEditingAbout(!isEditingAbout)}\r\n          className=\"\"\r\n          size=\"lg\"\r\n          style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n        >\r\n          <ModalHeader style={{ borderBottom: \"none\" }}>\r\n            <h2 className=\"font-weight-bold\">About</h2>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <br />\r\n\r\n            <>\r\n              <Label for=\"about\" className=\"text-muted\">\r\n                <h4>About Me</h4>\r\n              </Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                id=\"about\"\r\n                value={bio}\r\n                onChange={(e) => setBio(e.target.value)}\r\n                className=\" text-one\"\r\n              />\r\n              <br />\r\n            </>\r\n\r\n            <>\r\n              <Label for=\"linkedInUrl\" className=\"text-muted\">\r\n                <h4>LinkedIn URL</h4>\r\n              </Label>\r\n              <Input\r\n                type=\"text\"\r\n                id=\"linkedInUrl\"\r\n                value={linkedinUrl}\r\n                onChange={(e) => setLinkedinUrl(e.target.value)}\r\n                className=\" text-one\"\r\n              />\r\n              <br />\r\n            </>\r\n            <>\r\n              <Label for=\"email\" className=\"text-muted\">\r\n                <h4>Twitter URL</h4>\r\n              </Label>\r\n              <Input\r\n                type=\"text\"\r\n                id=\"twitterHandle\"\r\n                value={twitterHandle}\r\n                onChange={(e) => setTwitterHandle(e.target.value)}\r\n                className=\" text-one\"\r\n              />\r\n              <p className=\"text-muted mt-1\">\r\n                Omit the &ldquo;@&rdquo; -e.g. &ldquo;dqmonn&rdquo;\r\n              </p>\r\n              <br />\r\n            </>\r\n            <>\r\n              <Label for=\"website\" className=\"text-muted\">\r\n                <h4>Personal Website URL</h4>\r\n              </Label>\r\n              <Input\r\n                type=\"text\"\r\n                id=\"website\"\r\n                value={website}\r\n                onChange={(e) => setWebsite(e.target.value)}\r\n                className=\" text-one\"\r\n              />\r\n              <br />\r\n            </>\r\n          </ModalBody>\r\n          <ModalFooter\r\n            style={{ borderTop: \"none\" }}\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n          >\r\n            <Button color=\"primary\" onClick={() => handleSaveAbout()}>\r\n              Save\r\n            </Button>{\" \"}\r\n            <Button\r\n              color=\"primary\"\r\n              outline\r\n              onClick={() => setIsEditingAbout(false)}\r\n              className=\"\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n        {/* about section ends */}\r\n\r\n        {/* skill section starts */}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row className=\"align-items-center\">\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Skills</h2>\r\n\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      style={{ border: \"none\" }}\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingButton(true)}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <div\r\n                      className=\"d-flex flex-wrap\"\r\n                      style={{ gap: \"10px\", marginTop: \"10px\" }}\r\n                    >\r\n                      {skills.map((skill, index) => (\r\n                        <Button\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          key={index}\r\n                          color={index < 3 ? \"primary\" : \"light\"}\r\n                          size=\"sm\"\r\n                        >\r\n                          {skill}\r\n                        </Button>\r\n                      ))}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n\r\n              <Modal\r\n                isOpen={isEditingButton}\r\n                toggle={() => setIsEditingButton(!isEditingButton)}\r\n                className=\"\"\r\n                size=\"lg\"\r\n                style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n              >\r\n                <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                  <h2 className=\"font-weight-bold\">Skills</h2>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                  <Row className=\"w-100 mb-3\">\r\n                    <>\r\n                      <InputGroup className=\"mb-3\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          placeholder=\"New skill\"\r\n                          value={newInputSkill}\r\n                          onChange={(e) => setNewInputSkill(e.target.value)}\r\n                          onKeyDown={(event) => {\r\n                            if (event.key === \"Enter\") {\r\n                              handleAddSkill(newInputSkill);\r\n                              setNewInputSkill(\"\");\r\n                            }\r\n                          }}\r\n                        />\r\n                        <InputGroupAddon addonType=\"append\">\r\n                          <Button\r\n                            outline\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              handleAddSkill(newInputSkill);\r\n                              setNewInputSkill(\"\");\r\n                            }}\r\n                          >\r\n                            Add Skill\r\n                          </Button>\r\n                        </InputGroupAddon>\r\n                      </InputGroup>\r\n                      {skillValidationMessage && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {skillValidationMessage}\r\n                        </div>\r\n                      )}\r\n                    </>\r\n                  </Row>\r\n                  <Row>\r\n                    <ReactSortable\r\n                      list={skills}\r\n                      setList={setSkills}\r\n                      options={{ handle: \".handle\" }}\r\n                      className=\"d-flex flex-wrap ml-2\"\r\n                    >\r\n                      {skills.map((skill, index) => (\r\n                        <Button\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          key={index}\r\n                          outline={index >= 3}\r\n                          color=\"light\"\r\n                          // color={index < 3 ? 'primary' : 'light'}\r\n                          className=\"ml-2 font-weight-semibold mx-2 d-flex align-items-center text-dark\"\r\n                          size=\"sm\"\r\n                          onClick={() => handleRemoveSkill(index)}\r\n                        >\r\n                          {skill}\r\n                          <i className=\"iconsminds-close ml-2 text-dark\" />\r\n                        </Button>\r\n                      ))}\r\n                    </ReactSortable>\r\n                    {/* <p className=\"ml-3 text-muted mt-3\">Drag skills to set top 3 (the top 3 skills will be displayed on mentor cards)</p> */}\r\n                  </Row>\r\n                </ModalBody>\r\n\r\n                <ModalFooter\r\n                  style={{ borderTop: \"none\" }}\r\n                  className=\"d-flex align-items-center justify-content-center\"\r\n                >\r\n                  <Button color=\"primary\" onClick={() => handleSaveButton()}>\r\n                    Save\r\n                  </Button>{\" \"}\r\n                  <Button\r\n                    color=\"primary\"\r\n                    outline\r\n                    onClick={() => setIsEditingButton(false)}\r\n                    className=\"\"\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </ModalFooter>\r\n              </Modal>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {/* skill section ends */}\r\n        {/* price section starts */}\r\n        <Row className=\"my-4 \">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row className=\"align-items-center\">\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Price</h2>\r\n\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingPrice(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <div>\r\n                  <h2 className=\"font-weight-semi-bold \">₹ {price}</h2>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          {/* price modal starts */}\r\n          <Modal\r\n            isOpen={isEditingPrice}\r\n            toggle={() => setIsEditingPrice(!isEditingPrice)}\r\n            className=\"\"\r\n            size=\"lg\"\r\n            style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n          >\r\n            <ModalHeader style={{ borderBottom: \"none\" }}>\r\n              <h2 className=\"font-weight-bold\">Price</h2>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <br />\r\n\r\n              <>\r\n                <Label for=\"about\" className=\"text-muted\">\r\n                  <h4>Price</h4>\r\n                </Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"about\"\r\n                  value={price}\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                  className=\" text-one\"\r\n                />\r\n                <br />\r\n              </>\r\n            </ModalBody>\r\n            <ModalFooter\r\n              style={{ borderTop: \"none\" }}\r\n              className=\"d-flex align-items-center justify-content-center\"\r\n            >\r\n              <Button color=\"primary\" onClick={() => handleSavePrice()}>\r\n                Save\r\n              </Button>{\" \"}\r\n              <Button\r\n                color=\"primary\"\r\n                outline\r\n                onClick={() => setIsEditingPrice(false)}\r\n                className=\"\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n          {/* price modal ends */}\r\n        </Row>\r\n        {/* price section ends */}\r\n        {/* new design ends */}\r\n      </Colxx>\r\n    </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default MyProfile;\r\n","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Form,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  //   ListGroup,\r\n  //   ListGroupItem,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\n// check\r\n\r\nconst MyWallet = () => {\r\n  const [balance, setBalance] = useState(0);\r\n  // const [transactionIdCounter, setTransactionIdCounter] = useState(1);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [rechargeAmount, setRechargeAmount] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // const url = `${baseUrl}/wallets`;\r\n  // const url = `${baseUrl}/wallets`;\r\n  const url1 = `${baseUrl}/api/transactions`;\r\n\r\n  const fetchDataFromServer = async () => {\r\n    try {\r\n      const response = await axios.get(url1);\r\n      const walletData = response.data;\r\n      setBalance(walletData.newBalance);\r\n      setTransactions(walletData.newTransactions);\r\n    } catch (error) {\r\n      console.error(\"Error while fetching data from the server\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDataFromServer();\r\n  }, []);\r\n\r\n  // const updateBalance = async () => {\r\n  //     try {\r\n  //       const updatedBalance = {\r\n  //         newBalance: balance\r\n  //       };\r\n\r\n  //       await axios.put(url1, updatedBalance);\r\n\r\n  //     } catch (error) {\r\n  //       console.error(\"Error updating profile\", error);\r\n  //     }\r\n  //   };\r\n\r\n  const postData = async (amount) => {\r\n    const url2 = `${baseUrl}/api/paytm/makePayment?amount=${amount}`;\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await axios.post(url2);\r\n\r\n      // console.log(\"recharge\",response)\r\n\r\n      // setTimeout(() => {\r\n      fetchDataFromServer();\r\n      // NotificationManager.success(response.data.statuses[0].message, 'Great!', 3000, null, null, '');\r\n      response.data.statuses.forEach((status) => {\r\n        NotificationManager.success(\r\n          status.message,\r\n          status.status,\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      });\r\n      setIsLoading(false);\r\n      // }, 3000);\r\n    } catch (error) {\r\n      console.error(\"Error making payment\", error);\r\n      // setTimeout(() => {\r\n      NotificationManager.warning(\r\n        \"Something went wrong\",\r\n        \"Oops!\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n      setIsLoading(false);\r\n      // }, 3000);\r\n    }\r\n  };\r\n  const handleRecharge = () => {\r\n    const amount = parseFloat(rechargeAmount);\r\n    // console.log(\"rech\", amount)\r\n\r\n    // if (!Number.isNaN(amount) && amount > 0) {\r\n    //   const newBalance = balance + amount;\r\n    //   const newTransactions = {\r\n    //     id: transactionIdCounter,\r\n    //     type: \"Recharge\",\r\n    //     amount,\r\n    //     status: \"Success\",\r\n    //     paymentmethod: \"UPI\",\r\n    //     date: new Date(),\r\n    //   };\r\n\r\n    //   setBalance(newBalance);\r\n    //   setTransactions((prevTransactions) => [\r\n    //     newTransactions,\r\n    //     ...prevTransactions,\r\n    // ]);\r\n    //   setTransactionIdCounter((prevCounter) => prevCounter + 1);\r\n    setRechargeAmount(\"\");\r\n    //   updateBalance()\r\n\r\n    postData(amount);\r\n  };\r\n\r\n  const handleRechargeSubmit = (e) => {\r\n    e.preventDefault();\r\n    // handleRecharge();\r\n  };\r\n\r\n  const handleAmountButtonClick = (amount) => {\r\n    setRechargeAmount((prevAmount) =>\r\n      (parseFloat(prevAmount || 0) + amount).toString()\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mt-4\">\r\n      <Container className=\"p-4\">\r\n        <h1>\r\n          Wallet Balance: <span className=\"font-weight-bold\">₹{balance}</span>\r\n        </h1>\r\n\r\n        <Form onSubmit={handleRechargeSubmit} className=\"mb-3\">\r\n          <InputGroup className=\"mb-3\">\r\n            <InputGroupAddon addonType=\"prepend\">₹</InputGroupAddon>\r\n            <Input\r\n              type=\"number\"\r\n              placeholder=\"Enter Amount\"\r\n              value={rechargeAmount}\r\n              // onChange={(e) => setRechargeAmount(e.target.value)}\r\n              onChange={({ target: { value } }) => {\r\n                // Convert to a valid positive number string or empty value\r\n                if (/^\\d*$/.test(value)) {\r\n                  setRechargeAmount(value);\r\n                }\r\n              }}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"-\" || e.key === \"+\" || e.key === \"e\") {\r\n                  e.preventDefault(); // Prevent these characters from being entered\r\n                }\r\n              }}\r\n              className=\"col-12 col-md-3\"\r\n            />\r\n          </InputGroup>\r\n          <Row>\r\n            <Button\r\n              color=\"primary\"\r\n              outline\r\n              className=\"mr-2 ml-4 mb-4\"\r\n              onClick={() => handleAmountButtonClick(500)}\r\n            >\r\n              + ₹500\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              outline\r\n              className=\"mr-2 mb-4\"\r\n              onClick={() => handleAmountButtonClick(1000)}\r\n            >\r\n              + ₹1000\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              outline\r\n              className=\"mb-4\"\r\n              onClick={() => handleAmountButtonClick(1500)}\r\n            >\r\n              + ₹1500\r\n            </Button>\r\n          </Row>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            onClick={handleRecharge}\r\n            className={`col-12 col-md-3 btn-shadow btn-multiple-state ${\r\n              isLoading ? \"show-spinner\" : \"\"\r\n            }`}\r\n          >\r\n            <span className=\"spinner d-inline-block\">\r\n              <span className=\"bounce1\" />\r\n              <span className=\"bounce2\" />\r\n              <span className=\"bounce3\" />\r\n            </span>\r\n            <span className=\"label\">Add money to Wallet</span>\r\n          </Button>\r\n        </Form>\r\n\r\n        <div className=\"mt-4\">\r\n          <h2>Recent Transactions</h2>\r\n          {/* <ListGroup> */}\r\n          {transactions.map((transaction) => (\r\n            <Card key={transaction.id} className=\"mb-4 p-2\">\r\n              <div className=\"d-flex flex-wrap\">\r\n                <div className=\"mr-2\">\r\n                  <strong>Transaction id:</strong> {transaction.id}\r\n                </div>\r\n                <div className=\"mr-2\">\r\n                  <strong>Amount:</strong> ₹{Math.abs(transaction.amount)}\r\n                </div>\r\n                <div className=\"mr-2\">\r\n                  <strong>Status:</strong> {transaction.status}\r\n                </div>\r\n                <div className=\" mr-2\">\r\n                  <strong>Payment Method:</strong> {transaction.paymentmethod}\r\n                </div>\r\n                <div className=\" mr-2\">\r\n                  <strong>Date:</strong>{\" \"}\r\n                  <TimestampConverter\r\n                    timeStamp={transaction.date}\r\n                    format=\"datetime\"\r\n                  />\r\n                </div>\r\n                <div className=\"mr-2\">\r\n                  <strong>Description:</strong> {transaction.description}\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          ))}\r\n          {/* </ListGroup> */}\r\n        </div>\r\n      </Container>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MyWallet;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  //   CardTitle,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\n\r\nconst ViewOtherListing = () => {\r\n  const [data, setData] = useState();\r\n  const [copied, setCopied] = useState(false);\r\n  const { id } = useParams();\r\n  const url = `${baseUrl}/api/posts/other-post/${id}`;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await axios.get(url);\r\n        setData(res.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  const handleCopyLink = async () => {\r\n    try {\r\n      if (data) {\r\n        await navigator.clipboard.writeText(window.location.href);\r\n        setCopied(true);\r\n      }\r\n      setTimeout(() => {\r\n        setCopied(false);\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error(\"Error copying link:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row className=\"mb-2\">\r\n      <Colxx xxs=\"12\">\r\n        <Card className=\"mx-auto\" style={{ maxWidth: \"900px\" }}>\r\n          <CardBody className=\"p-4\">\r\n            {data && (\r\n              <>\r\n                <Row>\r\n                  <Col className=\"d-flex flex-row mb-3\">\r\n                    <NavLink to=\"#\" location={{}}>\r\n                      <img\r\n                        src=\"https://gogo-react.coloredstrategies.com/assets/img/profiles/l-1.jpg\"\r\n                        alt=\"thumbnail\"\r\n                        className=\"img-thumbnail border-0 rounded-circle list-thumbnail align-self-center xsmall\"\r\n                      />\r\n                    </NavLink>\r\n                    <div className=\"pl-3\">\r\n                      <NavLink to=\"#\" location={{}}>\r\n                        <p className=\"font-weight-medium mb-0 \">Name</p>\r\n                        <p className=\"text-muted mb-0 text-small\">\r\n                          Posted on{\" \"}\r\n                          <TimestampConverter\r\n                            timeStamp={data.postedOn}\r\n                            format=\"datetime\"\r\n                          />\r\n                        </p>\r\n                      </NavLink>\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"text-right\">\r\n                    {copied && (\r\n                      <span className=\"text-success mr-2\">\r\n                        Link copied to clipboard!\r\n                      </span>\r\n                    )}\r\n                    <Button\r\n                      outline\r\n                      color=\"primary\"\r\n                      className=\"mr-2\"\r\n                      size=\"xs\"\r\n                      onClick={handleCopyLink}\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        className=\"bi bi-copy\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z\"\r\n                        />\r\n                      </svg>{\" \"}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <h1>{data.title}</h1>\r\n\r\n                {/* <div>{data.description}</div> */}\r\n                <div dangerouslySetInnerHTML={{ __html: data.description }} />\r\n                <Row className=\"\">\r\n                  <Col className=\"\">\r\n                    {data.interestedCount && (\r\n                      <div className=\"text-muted mt-2\">\r\n                        {data.interestedCount} people have shown interest\r\n                      </div>\r\n                    )}\r\n                  </Col>\r\n                  <Col className=\"text-right\">\r\n                    <Button\r\n                      outline\r\n                      color=\"primary\"\r\n                      size=\"xs\"\r\n                      //   onClick={() => handleInterest(data.title)}\r\n                    >\r\n                      I&apos;m interested\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ViewOtherListing;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  //   CardTitle,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\n\r\nconst ViewJobListing = () => {\r\n  const [copied, setCopied] = useState(false);\r\n  const [data, setData] = useState();\r\n  const { id } = useParams();\r\n  const url = `${baseUrl}/api/posts/job-post/${id}`;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await axios.get(url);\r\n        setData(res.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  const handleCopyLink = async () => {\r\n    try {\r\n      if (data) {\r\n        await navigator.clipboard.writeText(window.location.href);\r\n        setCopied(true);\r\n      }\r\n      setTimeout(() => {\r\n        setCopied(false);\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error(\"Error copying link:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row className=\"mb-2\">\r\n      <Colxx xxs=\"12\">\r\n        <Card className=\"mx-auto\" style={{ maxWidth: \"900px\" }}>\r\n          <CardBody className=\"p-4\">\r\n            {data && (\r\n              <>\r\n                <Row>\r\n                  <Col className=\"d-flex flex-row mb-3\">\r\n                    <NavLink to=\"#\" location={{}}>\r\n                      <img\r\n                        src=\"https://gogo-react.coloredstrategies.com/assets/img/profiles/l-1.jpg\"\r\n                        alt=\"thumbnail\"\r\n                        className=\"img-thumbnail border-0 rounded-circle list-thumbnail align-self-center xsmall\"\r\n                      />\r\n                    </NavLink>\r\n                    <div className=\"pl-3\">\r\n                      <NavLink to=\"#\" location={{}}>\r\n                        <p className=\"font-weight-medium mb-0 \">Name</p>\r\n                        <p className=\"text-muted mb-0 text-small\">\r\n                          Posted on{\" \"}\r\n                          <TimestampConverter\r\n                            timeStamp={data.postedOn}\r\n                            format=\"datetime\"\r\n                          />\r\n                        </p>\r\n                      </NavLink>\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"text-right\">\r\n                    {copied && (\r\n                      <span className=\"text-success mr-2\">\r\n                        Link copied to clipboard!\r\n                      </span>\r\n                    )}\r\n                    <Button\r\n                      outline\r\n                      color=\"primary\"\r\n                      className=\"mr-2\"\r\n                      size=\"xs\"\r\n                      onClick={handleCopyLink}\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        className=\"bi bi-copy\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z\"\r\n                        />\r\n                      </svg>{\" \"}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <h1>{data.title}</h1>\r\n\r\n                <Row className=\"mt-2 mb-2\">\r\n                  <Col>\r\n                    <i className=\"iconsminds-office text-primary\" />{\" \"}\r\n                    {data.company}\r\n                  </Col>\r\n                  <Col>\r\n                    <i className=\"iconsminds-engineering text-primary\" />{\" \"}\r\n                    {data.jobTitle}\r\n                  </Col>\r\n                  <Col>\r\n                    {\" \"}\r\n                    <i className=\"simple-icon-location-pin text-primary\" />{\" \"}\r\n                    {data.jobLocation}\r\n                  </Col>\r\n                  <Col>\r\n                    {\" \"}\r\n                    <i className=\"iconsminds-building text-primary\" />{\" \"}\r\n                    {data.workPlaceType}\r\n                  </Col>\r\n                  <Col>\r\n                    {\" \"}\r\n                    <i className=\"simple-icon-briefcase text-primary\" />{\" \"}\r\n                    {data.employmentType}\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"mt-3\">\r\n                  <Col>\r\n                    {data.skills.map((skill) => (\r\n                      <Button\r\n                        key={skill}\r\n                        color=\"light\"\r\n                        className=\"mb-2 font-weight-semibold mx-2\"\r\n                        size=\"xs\"\r\n                      >\r\n                        {skill}\r\n                      </Button>\r\n                    ))}\r\n                  </Col>\r\n                </Row>\r\n                <div\r\n                  className=\"mt-2\"\r\n                  dangerouslySetInnerHTML={{ __html: data.description }}\r\n                />\r\n                <Row className=\"\">\r\n                  <Col className=\"\">\r\n                    <div className=\"text-muted mt-2\">\r\n                      {data.interestedCount} people have shown interest\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"text-right\">\r\n                    <Button\r\n                      outline\r\n                      color=\"primary\"\r\n                      size=\"xs\"\r\n                      //   onClick={() => handleInterest(data.title)}\r\n                    >\r\n                      I&apos;m interested\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ViewJobListing;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  //   CardTitle,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\n\r\nconst ViewOtherListing = () => {\r\n  const [data, setData] = useState();\r\n  const [copied, setCopied] = useState(false);\r\n  const { id } = useParams();\r\n  const url = `${baseUrl}/api/posts/stay-post/${id}`;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await axios.get(url);\r\n        setData(res.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  const handleCopyLink = async () => {\r\n    try {\r\n      if (data) {\r\n        await navigator.clipboard.writeText(window.location.href);\r\n        setCopied(true);\r\n      }\r\n      setTimeout(() => {\r\n        setCopied(false);\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error(\"Error copying link:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row className=\"mb-2\">\r\n      <Colxx xxs=\"12\">\r\n        <Card className=\"mx-auto\" style={{ maxWidth: \"900px\" }}>\r\n          <CardBody className=\"p-4\">\r\n            {data && (\r\n              <>\r\n                <Row>\r\n                  <Col className=\"d-flex flex-row mb-3\">\r\n                    <NavLink to=\"#\" location={{}}>\r\n                      <img\r\n                        src=\"https://gogo-react.coloredstrategies.com/assets/img/profiles/l-1.jpg\"\r\n                        alt=\"thumbnail\"\r\n                        className=\"img-thumbnail border-0 rounded-circle list-thumbnail align-self-center xsmall\"\r\n                      />\r\n                    </NavLink>\r\n                    <div className=\"pl-3\">\r\n                      <NavLink to=\"#\" location={{}}>\r\n                        <p className=\"font-weight-medium mb-0 \">Name</p>\r\n                        <p className=\"text-muted mb-0 text-small\">\r\n                          Posted on{\" \"}\r\n                          <TimestampConverter\r\n                            timeStamp={data.postedOn}\r\n                            format=\"datetime\"\r\n                          />\r\n                        </p>\r\n                      </NavLink>\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"text-right\">\r\n                    {copied && (\r\n                      <span className=\"text-success mr-2\">\r\n                        Link copied to clipboard!\r\n                      </span>\r\n                    )}\r\n                    <Button\r\n                      outline\r\n                      color=\"primary\"\r\n                      className=\"mr-2\"\r\n                      size=\"xs\"\r\n                      onClick={handleCopyLink}\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        className=\"bi bi-copy\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z\"\r\n                        />\r\n                      </svg>{\" \"}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <h1>{data.title}</h1>\r\n\r\n                <Row className=\"mb-2\">\r\n                  <Col md={5}>\r\n                    <i className=\"iconsminds-office text-primary\" />{\" \"}\r\n                    <span data-toggle=\"tooltip\" title=\"Apartment Type\">\r\n                      {data.apartmentType}\r\n                    </span>{\" \"}\r\n                    |{\" \"}\r\n                    <span data-toggle=\"tooltip\" title=\"Floor\">\r\n                      {data.floor}\r\n                    </span>{\" \"}\r\n                    |{\" \"}\r\n                    <span data-toggle=\"tooltip\" title=\"BHK Type\">\r\n                      {data.bhkType}\r\n                    </span>\r\n                  </Col>\r\n                  {/* <Col>\r\n                    <i className=\"iconsminds-engineering text-primary\" />{\" \"}\r\n                    {data.BHKType}\r\n                  </Col> */}\r\n                  <Col>\r\n                    {\" \"}\r\n                    <i className=\"simple-icon-people text-primary\" />{\" \"}\r\n                    <span data-toggle=\"tooltip\" title=\"Room mate\">\r\n                      {data.roomMate}\r\n                    </span>\r\n                  </Col>\r\n                  <Col>\r\n                    {\" \"}\r\n                    {/* <i className=\"iconsminds-building text-primary\" /> */}\r\n                    <span className=\"text-primary\">₹</span>{\" \"}\r\n                    <span data-toggle=\"tooltip\" title=\"Expected Rent\">\r\n                      {data.expectedRent}\r\n                    </span>\r\n                  </Col>\r\n                  <Col>\r\n                    {/* <a href=\"#\" class=\"btn btn-primary\" title=\"This is a hover tooltip\">Hover me!</a> */}{\" \"}\r\n                    <i className=\"iconsminds-car text-primary\" />\r\n                    {/* <i className=\"iconsminds-motorcycle text-primary\"/> */}\r\n                    {\"  \"}\r\n                    <span data-toggle=\"tooltip\" title=\"Parking\">\r\n                      {data.parking}\r\n                    </span>\r\n                  </Col>\r\n                </Row>\r\n                {/* <div className=\"mt-2\">{data.description}</div> */}\r\n                <div dangerouslySetInnerHTML={{ __html: data.description }} />\r\n                <div className=\"mt-2\">\r\n                  <strong>Contact details :</strong> {data.contact}\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                  <strong>Expected deposit amount :</strong>{\" \"}\r\n                  {data.expectedDeposit}\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                  <strong>Maintenance amount :</strong> {data.maintenanceAmount}\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                  <strong>Available from: </strong>\r\n                  <TimestampConverter\r\n                    timeStamp={data.availableFrom}\r\n                    format=\"date\"\r\n                  />\r\n                </div>\r\n\r\n                <Row className=\"\">\r\n                  <Col className=\"\">\r\n                    {data.interestedCount && (\r\n                      <div className=\"text-muted mt-2\">\r\n                        {data.interestedCount} people have shown interest\r\n                      </div>\r\n                    )}\r\n                  </Col>\r\n                  <Col className=\"text-right\">\r\n                    <Button\r\n                      outline\r\n                      color=\"primary\"\r\n                      size=\"xs\"\r\n                      //   onClick={() => handleInterest(data.title)}\r\n                    >\r\n                      I&apos;m interested\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ViewOtherListing;\r\n","import { Colxx } from 'components/common/CustomBootstrap';\r\nimport React from 'react';\r\nimport { Button, Card,CardBody,Row, Pagination,\r\n  PaginationItem,\r\n  PaginationLink, } from 'reactstrap';\r\n\r\n\r\nconst LawQuestionAnswer = () => {\r\n  return (\r\n    <div>\r\n    <Row>\r\n      <Colxx>\r\n      <h1 className='text-center text-large w-100 py-2'>Lawyer questions and answers</h1>\r\n      <div>\r\n      <div className='mt-2'>\r\n      <div className='d-flex justify-content-between'>\r\n      <h2 className='font-weight-semibold'>Questions</h2>\r\n      <Button color=\"primary\" className=''>Recent</Button>\r\n      </div>\r\n      \r\n        <h3 className=''>view all 10 questions</h3>\r\n      \r\n        \r\n      </div>\r\n         <Card className='mt-3'>\r\n          <CardBody>\r\n           <div className=''>\r\n           <div className='d-flex justify-content-between'>\r\n           <h3>Question 1</h3>\r\n            <h3>Date and year</h3>\r\n           </div>\r\n            \r\n            <hr/>\r\n           </div>\r\n           <div className=''>\r\n           <div className='d-flex justify-content-between'>\r\n           <h3>Question 2</h3>\r\n            <h3>Date and year</h3>\r\n           </div>\r\n           <hr/>\r\n           </div>\r\n           <div className=''>\r\n           <div className='d-flex justify-content-between'>\r\n           <h3>Question 3</h3>\r\n            <h3>Date and year</h3>\r\n           </div>\r\n           <hr/>\r\n           </div>\r\n          </CardBody>\r\n         </Card>\r\n         <Row>\r\n        <Colxx xxs=\"12\" >\r\n         <div  className=' '>\r\n         <Pagination aria-label=\"Page navigation example\"  listClassName=\"justify-content-center my-2\">\r\n                <PaginationItem>\r\n                  <PaginationLink className=\"first\" href=\"#\">\r\n                    <i className=\"simple-icon-control-start\" />\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink className=\"prev\" href=\"#\">\r\n                    <i className=\"simple-icon-arrow-left\" />\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink href=\"#\">1</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem active>\r\n                  <PaginationLink href=\"#\">2</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink href=\"#\">3</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink className=\"next\" href=\"#\">\r\n                    <i className=\"simple-icon-arrow-right\" />\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink className=\"last\" href=\"#\">\r\n                    <i className=\"simple-icon-control-end\" />\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n              </Pagination>\r\n         </div>\r\n        \r\n        </Colxx>\r\n      </Row>\r\n      </div>\r\n      </Colxx>\r\n    </Row>\r\n    <hr/>\r\n    <Row>\r\n      <Colxx>\r\n      <div>\r\n      <div className='mt-4'>\r\n      <div className='d-flex justify-content-between'>\r\n      <h2 className='font-weight-semibold'>Answers</h2>\r\n      <Button color=\"primary\">Recent</Button>\r\n      </div>\r\n      \r\n        <h3>view all 10 answers</h3>\r\n        \r\n      </div>\r\n         <Card className='mt-3'>\r\n          <CardBody>\r\n           <div className=''>\r\n           <div className='d-flex justify-content-between'>\r\n           <h3>Answer 1</h3>\r\n            <h3>Date and year</h3>\r\n           </div>\r\n            \r\n            <hr/>\r\n           </div>\r\n           <div className=''>\r\n           <div className='d-flex justify-content-between'>\r\n           <h3>Answer 2</h3>\r\n            <h3>Date and year</h3>\r\n           </div>\r\n           <hr/>\r\n           </div>\r\n           <div className=''>\r\n           <div className='d-flex justify-content-between'>\r\n           <h3>Answer 3</h3>\r\n            <h3>Date and year</h3>\r\n           </div>\r\n           <hr/>\r\n           </div>\r\n          </CardBody>\r\n         </Card>\r\n         <Row>\r\n        <Colxx xxs=\"12\" >\r\n         <div  className=' '>\r\n         <Pagination aria-label=\"Page navigation example\"  listClassName=\"justify-content-center my-2\">\r\n                <PaginationItem>\r\n                  <PaginationLink className=\"first\" href=\"#\">\r\n                    <i className=\"simple-icon-control-start\" />\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink className=\"prev\" href=\"#\">\r\n                    <i className=\"simple-icon-arrow-left\" />\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink href=\"#\">1</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem active>\r\n                  <PaginationLink href=\"#\">2</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink href=\"#\">3</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink className=\"next\" href=\"#\">\r\n                    <i className=\"simple-icon-arrow-right\" />\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                  <PaginationLink className=\"last\" href=\"#\">\r\n                    <i className=\"simple-icon-control-end\" />\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n              </Pagination>\r\n         </div>\r\n        \r\n        </Colxx>\r\n      </Row>\r\n      </div>\r\n      </Colxx>\r\n    </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LawQuestionAnswer;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst JobList = () => {\r\n  const [joblist, setJobList] = useState(\"\");\r\n  // const url=`${baseUrl}/api/lawyer/job/client`;\r\n\r\n  // Backend url\r\n  const url = `${baseUrl}/api/lawyer/job/client`;\r\n  const history = useHistory();\r\n  // this file is logged by client\r\n  useEffect(() => {\r\n    const LawyerJobsList = async () => {\r\n      try {\r\n        const response = await axios.get(url);\r\n        setJobList(response.data);\r\n      } catch (error) {\r\n        if (error.response) {\r\n          ToasterComponent(\"error\", error.response.data.statuses);\r\n        } else {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      }\r\n    };\r\n    LawyerJobsList();\r\n  }, [url]);\r\n  console.log(\"Job list state:\", joblist);\r\n\r\n  const handleKeyPress = (event, path) => {\r\n    if (event.key === \"Enter\" || event.key === \" \") {\r\n      history.push(path);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto\">\r\n        <h1 className=\"font-weight-bold\">In Progress Jobs</h1>\r\n        {joblist && joblist.inProgress && joblist.inProgress.length > 0 ? (\r\n          joblist.inProgress.map((j) => {\r\n            const createdAtDate = new Date(j.createdAt);\r\n            const formattedDate = `${createdAtDate.toLocaleDateString()} ${createdAtDate.toLocaleTimeString()}`;\r\n\r\n            const modifiedAtDate = new Date(j.modifiedAt);\r\n            const formattedModifiedAt = `${modifiedAtDate.toLocaleDateString()} ${modifiedAtDate.toLocaleTimeString()}`;\r\n\r\n            return (\r\n              <Card\r\n                key={j.id}\r\n                className=\"my-2\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  history.push(`/app/jobsdetails/${j.id}`, {\r\n                    lawyerName: j.lawyerName,\r\n                    lawyerId: j.lawyerId,\r\n                  })\r\n                }\r\n              >\r\n                <CardBody>\r\n                  <div className=\"d-flex justify-content-between flex-wrap\">\r\n                    <div className=\"d-flex flex-column flex-wrap\">\r\n                      <div className=\"d-flex align-items-center flex-wrap\">\r\n                        <div className=\"\">\r\n                          {/* <ThumbnailLetters\r\n                            rounded\r\n                            text={j.lawyerName}\r\n                            className=\"border border-1 mr-3 \"\r\n                          /> */}\r\n                          {j.imageUrl == null ? (\r\n                            <ThumbnailLetters\r\n                              rounded\r\n                              text={j.lawyerName}\r\n                              className=\"border border-1 mr-3\"\r\n                            />\r\n                          ) : (\r\n                            <img\r\n                              src={`${baseUrl}/${j.imageUrl}`}\r\n                              alt={j.lawyerName}\r\n                              className=\"border border-1 mr-3\"\r\n                              style={{\r\n                                width: \"90px\",\r\n                                height: \"90px\",\r\n                                borderRadius: \"50%\",\r\n                                objectFit: \"cover\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                        <div className=\"d-flex flex-column \">\r\n                          <div\r\n                            role=\"button\"\r\n                            tabIndex={0}\r\n                            onClick={() =>\r\n                              history.push(`/app/lawyerprofile/${j.lawyerId}`, {\r\n                                lawyerId: j.lawyerId,\r\n                              })\r\n                            }\r\n                            onKeyPress={(event) =>\r\n                              handleKeyPress(\r\n                                event,\r\n                                `/app/lawyerprofile/${j.lawyerId}`\r\n                              )\r\n                            }\r\n                            style={{ cursor: \"pointer\" }}\r\n                          >\r\n                            <h2 className=\"text-primary\">{j.lawyerName}</h2>\r\n                          </div>\r\n\r\n                          <h4>\r\n                            Job Name:\r\n                            <span className=\"font-weight-semibold\">\r\n                              {\" \"}\r\n                              {j.jobName}\r\n                            </span>\r\n                          </h4>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-column mt-sm-2\">\r\n                      <h4>\r\n                        Status:\r\n                        <span className=\"font-weight-semibold\">\r\n                          {\" \"}\r\n                          {j.status}\r\n                        </span>{\" \"}\r\n                      </h4>\r\n                      <h4>\r\n                        Created At:\r\n                        <span className=\"text-muted\">\r\n                          {\" \"}\r\n                          {formattedDate}\r\n                        </span>{\" \"}\r\n                      </h4>\r\n                      <h4>\r\n                        Modified At:\r\n                        <span className=\"text-muted\">\r\n                          {\" \"}\r\n                          {formattedModifiedAt}\r\n                        </span>\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            );\r\n          })\r\n        ) : (\r\n          <div>\r\n            <Card>\r\n              <CardBody>\r\n                <h2 className=\"text-center\">No In Progress Jobs</h2>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </Colxx>\r\n\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto\">\r\n        <h1 className=\"font-weight-bold my-2\">Completed Jobs</h1>\r\n        {joblist && joblist.completed && joblist.completed.length > 0 ? (\r\n          joblist.completed.map((j) => {\r\n            const createdAtDate = new Date(j.createdAt);\r\n            const formattedDate = `${createdAtDate.toLocaleDateString()} ${createdAtDate.toLocaleTimeString()}`;\r\n\r\n            const modifiedAtDate = new Date(j.modifiedAt);\r\n            const formattedModifiedAt = `${modifiedAtDate.toLocaleDateString()} ${modifiedAtDate.toLocaleTimeString()}`;\r\n\r\n            return (\r\n              <Card\r\n                key={j.id}\r\n                className=\"my-2\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  history.push(`/app/jobsdetails/${j.id}`, {\r\n                    lawyerName: j.lawyerName,\r\n                    lawyerId: j.lawyerId,\r\n                  })\r\n                }\r\n              >\r\n                <CardBody>\r\n                  <div className=\"d-flex justify-content-between flex-wrap\">\r\n                    <div className=\"d-flex align-items-center flex-wrap\">\r\n                      <div className=\"\">\r\n                        {/* <ThumbnailLetters\r\n                          rounded\r\n                          text={j.lawyerName}\r\n                          className=\"border border-1 mr-3 \"\r\n                        /> */}\r\n                        {j.imageUrl == null ? (\r\n                          <ThumbnailLetters\r\n                            rounded\r\n                            text={j.lawyerName}\r\n                            className=\"border border-1 mr-3\"\r\n                          />\r\n                        ) : (\r\n                          <img\r\n                            src={`${baseUrl}/${j.imageUrl}`}\r\n                            alt={j.lawyerName}\r\n                            className=\"border border-1 mr-3\"\r\n                            style={{\r\n                              width: \"90px\",\r\n                              height: \"90px\",\r\n                              borderRadius: \"50%\",\r\n                              objectFit: \"cover\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      <div className=\"d-flex flex-column \">\r\n                        <h2 className=\"text-primary\">{j.lawyerName}</h2>\r\n                        <h4>\r\n                          Job Name:\r\n                          <span className=\"font-weight-semibold\">\r\n                            {\" \"}\r\n                            {j.jobName}\r\n                          </span>\r\n                        </h4>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-column mt-sm-2\">\r\n                      <h4>\r\n                        Status:\r\n                        <span className=\"font-weight-semibold\">\r\n                          {\" \"}\r\n                          {j.status}\r\n                        </span>{\" \"}\r\n                      </h4>\r\n                      <h4>\r\n                        Created At:\r\n                        <span className=\"text-muted\">\r\n                          {\" \"}\r\n                          {formattedDate}\r\n                        </span>{\" \"}\r\n                      </h4>\r\n                      <h4>\r\n                        Modified At:\r\n                        <span className=\"text-muted\">\r\n                          {\" \"}\r\n                          {formattedModifiedAt}\r\n                        </span>\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            );\r\n          })\r\n        ) : (\r\n          <div>\r\n            <Card>\r\n              <CardBody>\r\n                <h2 className=\"text-center\">No Completed Jobs</h2>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobList;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\n// import ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst LawyerJobList = () => {\r\n  const [joblist, setJobList] = useState(\"\");\r\n  // const url=`${baseUrl}/lawyerJobList`;\r\n  const history = useHistory();\r\n  // Backend url\r\n  const url = `${baseUrl}/api/lawyer/job`;\r\n  // this file is logged by lawyer\r\n\r\n  useEffect(() => {\r\n    const LawyerJobsList = async () => {\r\n      try {\r\n        const response = await axios.get(url);\r\n        setJobList(response.data);\r\n      } catch (error) {\r\n        if (error.response) {\r\n          // ToasterComponent(\"error\", error.response.data.statuses);\r\n        } else {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      }\r\n    };\r\n    LawyerJobsList();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto\">\r\n        <h1 className=\"font-weight-bold\">In Progress Jobs</h1>\r\n        {joblist && joblist.inProgress && joblist.inProgress.length > 0 ? (\r\n          joblist.inProgress.map((j) => {\r\n            const createdAtDate = new Date(j.createdAt);\r\n            const formattedDate = `${createdAtDate.toLocaleDateString()} ${createdAtDate.toLocaleTimeString()}`;\r\n\r\n            const modifiedAtDate = new Date(j.modifiedAt);\r\n            const formattedModifiedAt = `${modifiedAtDate.toLocaleDateString()} ${modifiedAtDate.toLocaleTimeString()}`;\r\n\r\n            return (\r\n              <Card\r\n                key={j.id}\r\n                className=\"my-2\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  history.push(`/app/jobsdetails/${j.id}`, {\r\n                    clientName: j.clientName,\r\n                  })\r\n                }\r\n              >\r\n                <CardBody>\r\n                  <div className=\"d-flex justify-content-between flex-wrap \">\r\n                    <div className=\"d-flex align-items-center flex-wrap\">\r\n                      <div className=\"\">\r\n                        {/* <ThumbnailLetters\r\n                          rounded\r\n                          text={j.clientName}\r\n                          className=\"border border-1 mr-3 \"\r\n                        /> */}\r\n                        {j.imageUrl == null ? (\r\n                          <ThumbnailLetters\r\n                            rounded\r\n                            text={j.clientName}\r\n                            className=\"border border-1 mr-3\"\r\n                          />\r\n                        ) : (\r\n                          <img\r\n                            src={`${baseUrl}/${j.imageUrl}`}\r\n                            alt={j.clientName}\r\n                            className=\"border border-1 mr-3\"\r\n                            style={{\r\n                              width: \"90px\",\r\n                              height: \"90px\",\r\n                              borderRadius: \"50%\",\r\n                              objectFit: \"cover\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      <div className=\"d-flex flex-column \">\r\n                        <h2 className=\"text-primary\">{j.clientName}</h2>\r\n                        <h4>\r\n                          Job Name:\r\n                          <span className=\"font-weight-semibold\">\r\n                            {\" \"}\r\n                            {j.jobName}\r\n                          </span>\r\n                        </h4>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-column mt-sm-2 \">\r\n                      <h4>\r\n                        Status:\r\n                        <span className=\"font-weight-semibold\">\r\n                          {\" \"}\r\n                          {j.status}\r\n                        </span>{\" \"}\r\n                      </h4>\r\n\r\n                      <h4>\r\n                        Created At:\r\n                        <span className=\"text-muted\">\r\n                          {\" \"}\r\n                          {formattedDate}\r\n                        </span>{\" \"}\r\n                      </h4>\r\n                      <h4>\r\n                        Modified At:\r\n                        <span className=\"text-muted\">\r\n                          {\" \"}\r\n                          {formattedModifiedAt}\r\n                        </span>\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            );\r\n          })\r\n        ) : (\r\n          <div>\r\n            <Card>\r\n              <CardBody>\r\n                <h2 className=\"text-center\">No In Progress Jobs</h2>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </Colxx>\r\n\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto\">\r\n        <h1 className=\"font-weight-bold my-2\">Completed Jobs</h1>\r\n        {joblist && joblist.completed && joblist.completed.length > 0 ? (\r\n          joblist.completed.map((j) => {\r\n            const createdAtDate = new Date(j.createdAt);\r\n            const formattedDate = `${createdAtDate.toLocaleDateString()} ${createdAtDate.toLocaleTimeString()}`;\r\n\r\n            const modifiedAtDate = new Date(j.modifiedAt);\r\n            const formattedModifiedAt = `${modifiedAtDate.toLocaleDateString()} ${modifiedAtDate.toLocaleTimeString()}`;\r\n\r\n            return (\r\n              <Card\r\n                key={j.id}\r\n                className=\"my-2\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  history.push(`/app/jobsdetails/${j.id}`, {\r\n                    clientName: j.clientName,\r\n                    clientId: j.clientUserId,\r\n                  })\r\n                }\r\n              >\r\n                <CardBody>\r\n                  <div className=\"d-flex justify-content-between flex-wrap\">\r\n                    <div className=\"d-flex align-items-center flex-wrap\">\r\n                      <div className=\"\">\r\n                        {/* <ThumbnailLetters\r\n                          rounded\r\n                          text={j.clientName}\r\n                          className=\"border border-1 mr-3 \"\r\n                        /> */}\r\n                        {j.imageUrl == null ? (\r\n                          <ThumbnailLetters\r\n                            rounded\r\n                            text={j.clientName}\r\n                            className=\"border border-1 mr-3\"\r\n                          />\r\n                        ) : (\r\n                          <img\r\n                            src={`${baseUrl}/${j.imageUrl}`}\r\n                            alt={j.clientName}\r\n                            className=\"border border-1 mr-3\"\r\n                            style={{\r\n                              width: \"90px\",\r\n                              height: \"90px\",\r\n                              borderRadius: \"50%\",\r\n                              objectFit: \"cover\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      <div className=\"d-flex flex-column \">\r\n                        <h2 className=\"text-primary\">{j.clientName}</h2>\r\n                        <h4>\r\n                          Job Name:\r\n                          <span className=\"font-weight-semibold\">\r\n                            {\" \"}\r\n                            {j.jobName}\r\n                          </span>\r\n                        </h4>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-column mt-sm-2\">\r\n                      <h4>\r\n                        Status:\r\n                        <span className=\"font-weight-semibold\">\r\n                          {\" \"}\r\n                          {j.status}\r\n                        </span>{\" \"}\r\n                      </h4>\r\n                      <h4>\r\n                        Created At:\r\n                        <span className=\"text-muted\">\r\n                          {\" \"}\r\n                          {formattedDate}\r\n                        </span>{\" \"}\r\n                      </h4>\r\n                      <h4>\r\n                        Modified At:\r\n                        <span className=\"text-muted\">\r\n                          {\" \"}\r\n                          {formattedModifiedAt}\r\n                        </span>\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            );\r\n          })\r\n        ) : (\r\n          <div>\r\n            <Card>\r\n              <CardBody>\r\n                <h2 className=\"text-center\">No Completed Jobs</h2>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LawyerJobList;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport Rating from \"components/common/Rating\";\r\n// import { NotificationManager } from 'components/common/react-notifications';\r\nimport { Card, CardBody, Col, Row, CardTitle, Button } from \"reactstrap\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst AddReview = () => {\r\n  const [rating, setRating] = useState(0);\r\n  const [feedBack, setFeedBack] = useState(\"\");\r\n  const location = useLocation();\r\n  const { lawyerId } = location.state || {};\r\n  const { lawyerName } = location.state || {};\r\n  const [post, setPost] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleRate = (ratingVal) => {\r\n    setRating(ratingVal.rating);\r\n  };\r\n\r\n  const handleBackToLawyerJobsClick = () => {\r\n    history.push(\"/app/lawyerjobslist\");\r\n  };\r\n\r\n  const Reviewurl = `${baseUrl}/api/law/rating`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  const ReviewsPost = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      await axios.post(\r\n        Reviewurl,\r\n        {\r\n          rating,\r\n          feedBack,\r\n          revieweeId: lawyerId,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      // console.log(response.data);\r\n      setIsLoading(false);\r\n      setPost(!post);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error submitting review\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {post ? (\r\n        <Colxx sm=\"12\" md=\"12\" lg=\"8\" className=\"mx-auto\">\r\n          <Card>\r\n            <CardBody>\r\n              <Row>\r\n                <Col>\r\n                  <h4 className=\"mt-2 text-left ml-4\">\r\n                    {\" \"}\r\n                    Please rate your experience with {lawyerName}\r\n                  </h4>\r\n                </Col>\r\n                <Col className=\"mt-2\">\r\n                  {\" \"}\r\n                  <Rating total={5} rating={rating} onRate={handleRate} />\r\n                </Col>\r\n              </Row>\r\n              <hr className=\"my-4\" />\r\n              <div className=\"\">\r\n                <CardBody>\r\n                  <CardTitle className=\"text-left\">\r\n                    Please write about your experience with {lawyerName}\r\n                  </CardTitle>\r\n                  <ReactQuill\r\n                    theme=\"bubble\"\r\n                    value={feedBack}\r\n                    onChange={(val) => setFeedBack(val)}\r\n                  />\r\n                </CardBody>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"lg\"\r\n                  className={`col-12 col-md-3 btn-shadow btn-multiple-state ${\r\n                    isLoading ? \"show-spinner\" : \"\"\r\n                  }`}\r\n                  onClick={ReviewsPost}\r\n                >\r\n                  {\" \"}\r\n                  <span className=\"spinner d-inline-block\">\r\n                    <span className=\"bounce1\" />\r\n                    <span className=\"bounce2\" />\r\n                    <span className=\"bounce3\" />\r\n                  </span>\r\n                  <span className=\"label\">Submit</span>\r\n                </Button>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      ) : (\r\n        <div className=\"mt-2\">\r\n          <Card className=\"mx-auto\">\r\n            <CardBody className=\"text-center\">\r\n              <CardTitle className=\"h4\">\r\n                Thank you for your valuable feedback\r\n              </CardTitle>\r\n              <p className=\"lead\">Your review submitted successfully!</p>\r\n              <Button\r\n                color=\"primary\"\r\n                size=\"lg\"\r\n                className=\"mt-4\"\r\n                onClick={handleBackToLawyerJobsClick}\r\n              >\r\n                Back to lawyer jobs\r\n              </Button>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      )}\r\n      {/* <Colxx sm='12' md=\"12\" lg=\"8\" className=\"mx-auto\">\r\n    <Card>\r\n        <CardBody>\r\n        <Row>\r\n      <Col>\r\n        <h4 className=\"mt-2 text-left ml-4\">\r\n        {\" \"}\r\n        Please rate your experience with {lawyerName}\r\n         </h4>\r\n     </Col>\r\n     <Col className=\"mt-2\">\r\n         {\" \"}\r\n         <Rating\r\n          total={5}\r\n         rating={rating}\r\n           onRate={handleRate}\r\n         />\r\n    </Col>\r\n     </Row>\r\n     <hr className=\"my-4\" />\r\n     <div className=\"\">\r\n    <CardBody>\r\n        <CardTitle className=\"text-left\">\r\n        Please write about your experience with {lawyerName}\r\n        </CardTitle>\r\n        <ReactQuill\r\n        theme=\"bubble\"\r\n          value={feedBack}\r\n          onChange={(val) => setFeedBack(val)}\r\n        />\r\n    </CardBody>\r\n    \r\n    </div>\r\n    <div className='text-center'>\r\n    <Button color=\"primary\" size='lg' onClick={ReviewsPost}>Submit</Button>\r\n    </div>\r\n    \r\n    </CardBody>\r\n      </Card>\r\n    </Colxx> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddReview;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  Button,\r\n  Jumbotron,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n} from \"reactstrap\";\r\n// import { NotificationManager } from 'components/common/react-notifications';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport ReactQuill from \"react-quill\";\r\nimport Rating from \"components/common/Rating\";\r\n\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport { adminRoot, baseUrl } from \"constants/defaultValues\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst VideoCallCompletedPage = () => {\r\n  const [feedBack, setFeedBack] = useState(\"\");\r\n  const [rating, setRating] = useState(0);\r\n  const [submissionStatus, setSubmissionStatus] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [fromTime, setFromTime] = useState(null);\r\n  const [toTime, setToTime] = useState(0);\r\n  const [mode, setMode] = useState(\"\");\r\n  const [duration, setDuration] = useState(0);\r\n  const [post, setPost] = useState(true);\r\n  const [waitingForData, setWaitingForData] = useState(true);\r\n  const { id, sid } = useParams();\r\n  const history = useHistory();\r\n  function getRoleRes() {\r\n    return localStorage.getItem(\"roleRes\");\r\n  }\r\n  const roleRes = getRoleRes();\r\n\r\n  let getUrl;\r\n\r\nif (roleRes === \"USER\") {\r\n  getUrl = `${baseUrl}/api/call-info-mentee/${sid}`;\r\n} else  {\r\n  getUrl = `${baseUrl}/api/call-info-mentor/${sid}`;\r\n} \r\n\r\n\r\n  // console.log(\"id end:\", id);\r\n  useEffect(() => {\r\n    let intervalId;\r\n    let attempts = 0;\r\n    const maxAttempts = 10; \r\n    \r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(getUrl);\r\n        const reviewData = response.data;\r\n        if (reviewData) {\r\n          setName(reviewData.name);\r\n          setFromTime(reviewData.fromTime);\r\n          setToTime(reviewData.toTime);\r\n          setMode(reviewData.mode);\r\n          setDuration(reviewData.duration);\r\n          clearInterval(intervalId);\r\n          setWaitingForData(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        attempts += 1; \r\n        if (attempts >= maxAttempts) {\r\n          clearInterval(intervalId);\r\n          setWaitingForData(false);\r\n          console.error(\"Max attempts reached. Unable to fetch data.\");\r\n        }\r\n      }\r\n    };\r\n  \r\n    intervalId = setInterval(() => {\r\n      fetchData();\r\n    }, 3000);\r\n  \r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const url = `${baseUrl}/api/mentorship/rating`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  // console.log(\"rating\", rating);\r\n  // console.log(\"quill\", feedBack);\r\n\r\n  const handleRate = (ratingVal) => {\r\n    setRating(ratingVal.rating);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // setSubmissionStatus(true);\r\n    setIsLoading(true);\r\n    axios\r\n      .post(\r\n        url,\r\n        {\r\n          rating,\r\n          feedBack,\r\n          revieweeId: id,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(() => {\r\n        // console.log(response.data);\r\n        setTimeout(() => {\r\n          setSubmissionStatus(true);\r\n          setIsLoading(false);\r\n        }, 3000);\r\n      })\r\n      .catch((error) => {\r\n        // console.error(\"Error submitting data:\", error);\r\n        // console.log(error.response.data.error.message);\r\n        // const er = error.response.data.error.message;\r\n          // NotificationManager.warning(\"Error submitting review\", 'Oops!', 3000, null, null, '');\r\n          if(error.response){\r\n            ToasterComponent('error', error.response.data.statuses);\r\n          } else{\r\n          console.error(\"There was an error while submitting \", error);\r\n          }\r\n        setSubmissionStatus(true);\r\n        setPost(false);\r\n        // setSubmissionStatus(\"failure\");\r\n        setIsLoading(false);\r\n\r\n      });\r\n  };\r\n\r\n  // const handleSubmit = () => {\r\n  //   setSubmissionStatus(\"success\");\r\n  //   setIsLoading(true);\r\n  //   axios\r\n  //     .post(url, {\r\n  //       rating,\r\n  //       feedBack,\r\n  //       revieweeId,\r\n  //     })\r\n  //     .then((response) => {\r\n  //       console.log(response.data);\r\n  //       setSubmissionStatus(\"success\");\r\n  //       setTimeout(() => {\r\n  //         setIsLoading(false);\r\n  //       }, 3000);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(\"Error submitting data:\", error);\r\n  //       setSubmissionStatus(\"failure\");\r\n  //       setIsLoading(false);\r\n  //     });\r\n  // };\r\n\r\n  const handleDashboardClick = () => {\r\n    history.push(`${adminRoot}/dashboard`);\r\n  };\r\n\r\n  const handleMentorClick = () => history.push(`${adminRoot}/calendar/mentor/appointment`)\r\n  \r\n\r\n  // const FromDate = new Date(parseInt(fromTime, 10));\r\n  // const ToDate = new Date(parseInt(toTime, 10));\r\n\r\n  // const fromHours = FromDate.getHours() % 12 || 12;\r\n  // const fromMinutes = String(FromDate.getMinutes()).padStart(2, \"0\");\r\n  // const fromPeriod = FromDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n  // const toHours = ToDate.getHours() % 12 || 12;\r\n  // const toMinutes = String(ToDate.getMinutes()).padStart(2, \"0\");\r\n  // const toPeriod = ToDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n  // const fromTime1 = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n  // const toTime1 = `${toHours}:${toMinutes} ${toPeriod}`;\r\n  const msToMin = duration / 60000;\r\n  const dur = msToMin.toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n      {waitingForData ? (\r\n                <div className=\"loading\" />\r\n              ) : (\r\n        <Colxx xxs=\"12\" className=\"mb-2\">\r\n          <Card className=\"mx-auto my-4 \" style={{ maxWidth: \"1000px\" }}>\r\n            <CardBody className=\"text-center\">\r\n              \r\n              <Jumbotron className=\"text-center\">\r\n                <i\r\n                  alt=\"\"\r\n                  className=\"glyph-icon iconsminds-yes text-success \"\r\n                  style={{ fontSize: \"50px\" }}\r\n                />\r\n                <br />\r\n                <h1 className=\"display-5\">\r\n                  You have successfully completed a call with {name}\r\n                </h1>\r\n                <div className=\"d-flex justify-content-around flex-column \">\r\n                  {/* <h4 className=''>Duration: {up.duration}</h4> */}\r\n                  <Row className=\"mt-2\">\r\n                    <Col>\r\n                      {/* <h4 className=\"mr-2\">Start time: {fromTime1}</h4> */}\r\n                      <h4 className=\"mr-2\">Start time: {fromTime ? (<TimestampConverter timeStamp={fromTime} format=\"time\" />) : (null)} </h4>\r\n                    </Col>\r\n                    <Col>\r\n                      <h4>End time: {toTime ? (<TimestampConverter timeStamp={toTime} format=\"time\" />) : (null)}</h4>\r\n                    </Col>\r\n                    <Col>\r\n                      <h4>Duration: {dur} Min</h4>\r\n                    </Col>\r\n                    <Col>\r\n                      <h4>Mode: {mode}</h4>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n                <hr className=\"my-4\" />\r\n\r\n                <div className=\"lead mb-0 \">\r\n                  <Row className=\"mb-4\">\r\n                    {roleRes.includes(\"MENTOR\") ? (\r\n                       <Col className=\"text-center\">\r\n                       <Button\r\n                         color=\"primary\"\r\n                         size=\"lg\"\r\n                         className=\"mt-4\"\r\n                         onClick={handleMentorClick}\r\n                       >\r\n                         My slots\r\n                       </Button>\r\n                     </Col>\r\n                     ) : (\r\n                      <Colxx xxs=\"12\">\r\n                        {!submissionStatus ? (\r\n                          <>\r\n                            <div className=\"p-2 justify-content-center\">\r\n                              <Row>\r\n                                <Col>\r\n                                  <h4 className=\"mt-2 text-left ml-4\">\r\n                                    {\" \"}\r\n                                    Please rate your experience with {name}\r\n                                  </h4>\r\n                                </Col>\r\n                                <Col className=\"mt-2\">\r\n                                  {\" \"}\r\n                                  <Rating\r\n                                    total={5}\r\n                                    rating={rating}\r\n                                    onRate={handleRate}\r\n                                  />\r\n                                </Col>\r\n                              </Row>\r\n\r\n                              <hr className=\"my-4\" />\r\n                            </div>\r\n                            <div className=\"\">\r\n                              <CardBody>\r\n                                <CardTitle className=\"text-left\">\r\n                                  Please write about your experience with {name}\r\n                                </CardTitle>\r\n                                <ReactQuill\r\n                                  theme=\"bubble\"\r\n                                  value={feedBack}\r\n                                  onChange={(val) => setFeedBack(val)}\r\n                                />\r\n                              </CardBody>\r\n                            </div>\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"lg\"\r\n                              disabled={isLoading}\r\n                              onClick={handleSubmit}\r\n                              className={`mt-2 btn-shadow btn-multiple-state ${\r\n                                isLoading ? \"show-spinner\" : \"\"\r\n                              }`}\r\n                            >\r\n                              <span className=\"spinner d-inline-block\">\r\n                                <span className=\"bounce1\" />\r\n                                <span className=\"bounce2\" />\r\n                                <span className=\"bounce3\" />\r\n                              </span>\r\n                              <span className=\"label\">Submit</span>\r\n                            </Button>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                          {post ? (\r\n                            <div className=\"mt-2\">\r\n                              <CardBody>\r\n                                <CardTitle className=\"h4\">\r\n                                  Thank you for your valuable feedback\r\n                                </CardTitle>\r\n                                <p className=\"lead\">\r\n                                  Your review submitted successfully!\r\n                                </p>\r\n                              </CardBody>\r\n                            </div>) : (\r\n                            <div className=\"mt-2\">\r\n                              <CardBody>\r\n                                <CardTitle className=\"h4\">\r\n                                  Something went wrong\r\n                                </CardTitle>\r\n                                <p className=\"lead\">\r\n                                  Unable to submit your review \r\n                                </p>\r\n                              </CardBody>\r\n                            </div>)}\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"lg\"\r\n                              className=\"mt-4\"\r\n                              onClick={handleDashboardClick}\r\n                            >\r\n                              Dashboard\r\n                            </Button>\r\n                          </>\r\n                        )}\r\n                      </Colxx>\r\n                    )}\r\n                    \r\n                  </Row>\r\n                </div>\r\n              </Jumbotron>\r\n              \r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VideoCallCompletedPage;\r\n","// import React from 'react';\r\n// import { Button } from 'reactstrap';\r\n\r\n// const AgoraClass = () => {\r\n//   const handleClick = () => {\r\n//     window.open(`${process.env.PUBLIC_URL}/VideoRoom.html`, '_blank');\r\n// };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Button onClick={handleClick}>Open Class room</Button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AgoraClass;\r\n\r\n\r\nimport React, { useEffect } from 'react';\r\n\r\nconst MyComponent = () => {\r\n  useEffect(() => {\r\n    window.location.href = `${process.env.PUBLIC_URL}/VideoRoom.html`;\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n     {/* <h4> Opening classroom...</h4> */}\r\n     <div className='loading' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyComponent;\r\n\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\n\r\nimport {\r\n  Button,\r\n  ButtonDropdown,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  // NavLink,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport country from \"../my-login/Country\";\r\nimport language from \"../my-login/Languages\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst LawyerMyProfile = () => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isEditingAbout, setIsEditingAbout] = useState(false);\r\n  // const [isEditingButton, setIsEditingButton] = useState(false);\r\n  // const [newInputLanguages, setNewInputLanguages] = useState(\"\");\r\n  const [newInputTopics, setNewInputTopics] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [resumeFileName, setResumeFileName] = useState(\"\");\r\n  const [resumeFileId, setResumeFileId] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [languages, setLanguages] = useState([]);\r\n  const [topic, setTopic] = useState([]);\r\n  const [ratings, setRatings] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [star, setStar] = useState(\"\");\r\n  const [about, setAbout] = useState(\"\");\r\n  const [packages, setPackages] = useState([]);\r\n  // const [profileLoading, setProfileLoading] = useState(true);\r\n  const [setProfileLoading] = useState(true);\r\n  const [topicValidationMessage, setTopicValidationMessage] = useState(\"\");\r\n  const [isPosted, setIsPosted] = useState(false);\r\n  // const [file1] = useState(null);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imageEditModal, setImageEditModal] = useState(false);\r\n  const [selectedFileBase64, setSelectedFileBase64] = useState(null);\r\n  const [isEditingLanguages, setIsEditingLanguages] = useState(false);\r\n  const [isEditingTopics, setIsEditingTopics] = useState(false);\r\n  const [isEditingPackages, setIsEditingPackages] = useState(false);\r\n  const [isAddPackage, setIsAddPackage] = useState(false);\r\n  const [pid, setPid] = useState(null);\r\n  const [editPackage, setEditPackage] = useState({\r\n    serviceName: \"\",\r\n    description: \"\",\r\n    amount: \"\",\r\n  });\r\n\r\n  const [newPackage, setNewPackage] = useState([]);\r\n\r\n  const token = localStorage.getItem(\"tokenRes\");\r\n\r\n  const endUrl = `${baseUrl}/api/lawyer/myprofile`;\r\n  const imageEditUrl = `${baseUrl}/api/lawyer/profile-image`;\r\n  const packageURL = `${baseUrl}/api/lawyer/${pid}/package`;\r\n\r\n  const mentorProfileDetails = async () => {\r\n    try {\r\n      const response = await axios.get(endUrl);\r\n      const userData = response.data;\r\n      if (userData) {\r\n        setImageUrl(userData.imageUrl);\r\n        setFirstName(userData.firstName);\r\n        setLastName(userData.lastName);\r\n        setLocation(userData.location);\r\n        setResumeFileName(userData.documentName);\r\n        setResumeFileId(userData.documentId);\r\n        // setLanguages(userData.languages);\r\n        setLanguages(userData.languages.map((lang) => lang.language));\r\n        setBio(userData.bio);\r\n        setRatings(userData.ratings);\r\n        // setTopic(topicData);\r\n        // Store the id from the response\r\n        setPid(userData.id);\r\n\r\n        setTopic(userData.topic.map((t) => t.topicName));\r\n        setStar(userData.star);\r\n        setAbout(userData.about);\r\n        setProfileLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const LawyerPackage = async () => {\r\n    console.log(pid);\r\n    try {\r\n      const response = await axios.get(packageURL);\r\n      const fetchedPackages = response.data;\r\n      setPackages(fetchedPackages);\r\n\r\n      // if (fetchedPackages.length > 0) {\r\n      //   setActiveFirstTab(fetchedPackages[0].id);\r\n      // }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    mentorProfileDetails();\r\n  }, [isPosted]);\r\n\r\n  useEffect(() => {\r\n    if (pid) {\r\n      LawyerPackage();\r\n    }\r\n  }, [pid]);\r\n\r\n  const postImageData = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", selectedFile);\r\n\r\n      const response = await axios.post(imageEditUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      setTimeout(() => {}, 2000);\r\n      if (response.status === 200) {\r\n        await mentorProfileDetails();\r\n      }\r\n\r\n      // console.log(`resres ${response.status}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleImageClick = () => setImageEditModal(true);\r\n\r\n  const handleImagePost = () => {\r\n    postImageData();\r\n    setSelectedFile(null);\r\n    setImageEditModal(false);\r\n  };\r\n\r\n  const handleImageDelete = () => {\r\n    // setSelectedFile(image);\r\n    setImageEditModal(false);\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        setSelectedFileBase64(base64Image);\r\n\r\n        // setAboutField({ ...aboutField, image: base64Image });\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const updateMEntorProfile = async () => {\r\n    try {\r\n      const updatedData = {\r\n        // imageUrl,\r\n        firstName,\r\n        lastName,\r\n        location,\r\n        bio,\r\n        topic,\r\n        languages,\r\n        about,\r\n      };\r\n\r\n      const response = await axios.put(endUrl, updatedData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      response.data.statuses.forEach((status) => {\r\n        NotificationManager.success(\r\n          status.message,\r\n          \"Great!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      });\r\n      setIsPosted(!isPosted);\r\n      // console.log(\"Profile updated successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error updating profile\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddLanguages = (newLanguages) => {\r\n    setLanguages([...languages, newLanguages]);\r\n  };\r\n\r\n  // const handleEditAboutClick = () => {\r\n  //   setIsEditingAbout(true);\r\n  // };\r\n\r\n  const handleSaveAbout = () => {\r\n    setIsEditingAbout(false);\r\n    updateMEntorProfile();\r\n  };\r\n\r\n  // const handleCancelEditAbout = () => {\r\n  //   setIsEditingAbout(false);\r\n  // };\r\n\r\n  // const handleEditButton = () => {\r\n  //   setIsEditingButton(true);\r\n  const handleLanguagesSave = () => {\r\n    if (languages.length === 0) {\r\n      setTopicValidationMessage(\"At least one language is required.\");\r\n    } else {\r\n      setIsEditingLanguages(false);\r\n      updateMEntorProfile();\r\n    }\r\n  };\r\n  const handleLanguagesCancel = () => {\r\n    setIsEditingLanguages(false);\r\n  };\r\n\r\n  const handleSaveTopics = () => {\r\n    if (topic.length === 0) {\r\n      setTopicValidationMessage(\"At least one topic is required.\");\r\n    } else {\r\n      setIsEditingTopics(false);\r\n      updateMEntorProfile();\r\n    }\r\n  };\r\n  const handleTopicCancel = () => {\r\n    if (topic.length === 0) {\r\n      setTopicValidationMessage(\"At least one topic is required.\");\r\n    } else {\r\n      setIsEditingTopics(false);\r\n    }\r\n  };\r\n  // };\r\n  // const handleSaveButton = () => {\r\n  //   if (topic.length === 0) {\r\n  //     setTopicValidationMessage(\"At least one topic is required.\");\r\n  //   } else {\r\n  //     setIsEditingButton(false);\r\n  //     updateMEntorProfile();\r\n  //   }\r\n  // };\r\n\r\n  // const handleCancelButton = () => {\r\n  //   if (topic.length === 0) {\r\n  //     setTopicValidationMessage(\"At least one topic is required.\");\r\n  //   } else {\r\n  //     setIsEditingButton(false);\r\n  //   }\r\n  // };\r\n\r\n  // const handleEditClick = () => {\r\n  //   setIsEditing(true);\r\n  // };\r\n\r\n  const handleSave = () => {\r\n    setIsEditing(false);\r\n    updateMEntorProfile();\r\n    if (selectedFile) {\r\n      postImageData();\r\n    }\r\n  };\r\n\r\n  // const handleCancel = () => {\r\n  //   setIsEditing(false);\r\n  // };\r\n\r\n  const handleRemoveLanguages = (index) => {\r\n    setLanguages(languages.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleAddTopics = (newTopics) => {\r\n    if (!newTopics.trim()) {\r\n      setTopicValidationMessage(\"Topic cannot be empty\");\r\n    } else {\r\n      setTopicValidationMessage(\"\");\r\n      setTopic([...topic, newTopics]);\r\n    }\r\n  };\r\n  const handleRemoveTopics = (index) => {\r\n    setTopic(topic.filter((_, i) => i !== index));\r\n  };\r\n\r\n  //   const handleLinkedInClick = () => {\r\n  //     if (linkedinUrl) {\r\n  //       window.open(linkedinUrl, \"_blank\");\r\n  //     }\r\n  //   };\r\n\r\n  // const handleFileChange = (event) => {\r\n  //   setFile(event.target.files[0]);\r\n  // };\r\n  const countryName = country.find((c) => c.iso_code === location)?.name;\r\n\r\n  const languageOptions = language.map((option) => ({\r\n    value: option.iso_code,\r\n    label: option.name,\r\n  }));\r\n\r\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\r\n\r\n  const handleChange = (selectedOptions) => {\r\n    const languagesArray = selectedOptions\r\n      ? selectedOptions.map((option) => option.value)\r\n      : [];\r\n    // console.log(\"arraychk\", languagesArray);\r\n    handleAddLanguages(languagesArray[0]);\r\n    setSelectedLanguages([]);\r\n  };\r\n  const handlePackageEditClick = (pack) => {\r\n    setEditPackage(pack); // Set the selected package details for editing\r\n    setIsEditingPackages(true); // Open the modal\r\n  };\r\n  // const handleAddPackageEditClick = () => {\r\n  //   setIsAddPackage(true);\r\n  // };\r\n  const [currentPackage, setCurrentPackage] = useState({\r\n    serviceName: \"\",\r\n    amount: \"\",\r\n    description: \"\",\r\n    headline: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentPackage((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handlePackageSave = async () => {\r\n    try {\r\n      // Add the current package to the newPackage array\r\n      setNewPackage((prevPackages) => [...prevPackages, currentPackage]);\r\n\r\n      const response = await axios.post(\r\n        `${baseUrl}/api/lawyer/package`,\r\n        [...newPackage, currentPackage] // Send the array including the new package\r\n      );\r\n\r\n      response.data.statuses.forEach((status) => {\r\n        NotificationManager.success(\r\n          status.message, // Use the status message from the response\r\n          \"Package Added Successfully\", // Title for the notification\r\n          3000 // Duration of the toaster\r\n        );\r\n      });\r\n      // Optionally, refresh the package list or update the state here\r\n      LawyerPackage();\r\n      setIsAddPackage(false); // Close the modal\r\n\r\n      // Reset the current package fields after saving\r\n      setCurrentPackage({\r\n        serviceName: \"\",\r\n        amount: \"\",\r\n        description: \"\",\r\n        headline: \"\",\r\n      });\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        \"Error adding package\", // Message for the error\r\n        \"Error\", // Title for the error notification\r\n        3000 // Duration of the toaster\r\n      );\r\n      console.error(\"Error saving package:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSavePackage = async () => {\r\n    try {\r\n      const updateURL = `${baseUrl}/api/lawyer/package/mypackage/${editPackage.id}`;\r\n      const response = await axios.put(updateURL, editPackage); // Assuming a PUT request to update the package\r\n      response.data.statuses.forEach((status) => {\r\n        NotificationManager.success(\r\n          status.message, // Use the status message from the response\r\n          \"Package Updated Successfully\", // Title for the notification\r\n          3000 // Duration of the toaster\r\n        );\r\n      });\r\n      LawyerPackage(); // Refresh the packages list\r\n      setIsEditingPackages(false); // Close the modal\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        \"Error updating package\", // Message for the error\r\n        \"Error\", // Title for the error notification\r\n        3000 // Duration of the toaster\r\n      );\r\n      console.error(\"Error updating package:\", error);\r\n    }\r\n  };\r\n\r\n  const handlePackageDeleteClick = async (pack) => {\r\n    try {\r\n      const deleteURL = `${baseUrl}/api/lawyer/package/mypackage/${pack.id}`; // Construct delete URL\r\n      const response = await axios.delete(deleteURL); // Perform the DELETE request\r\n\r\n      response.data.statuses.forEach((status) => {\r\n        NotificationManager.success(\r\n          status.message, // Use the status message from the response\r\n          \"Package Deleted Successfully\", // Title for the notification\r\n          3000 // Duration of the toaster\r\n        );\r\n      });\r\n      setIsEditingPackages(false);\r\n      LawyerPackage(); // Refresh the packages list, similar to how you update after saving\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        \"Error deleting package\", // Message for the error\r\n        \"Error\", // Title for the error notification\r\n        3000 // Duration of the toaster\r\n      );\r\n      console.error(\"Error deleting package:\", error);\r\n    }\r\n  };\r\n\r\n  const handlePackageCancelEdit = () => {\r\n    setIsEditingPackages(false); // Close the modal without saving\r\n  };\r\n  const handleAddPackageCancel = () => {\r\n    setIsAddPackage(false);\r\n  };\r\n\r\n  const [fileError, setFileError] = useState(\"\");\r\n\r\n  const handleFileChange1 = async (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    if (file) {\r\n      const fileType = file.type;\r\n      const fileSize = file.size;\r\n\r\n      // Check if the file is a PDF\r\n      if (fileType !== \"application/pdf\") {\r\n        setFileError(\"Please upload a PDF file.\");\r\n        setResumeFileName(\"\"); // Clear the file name if invalid\r\n        return;\r\n      }\r\n\r\n      // Check if the file size is more than 2MB\r\n      if (fileSize > 2 * 1024 * 1024) {\r\n        setFileError(\"File size should be less than 2MB.\");\r\n        setResumeFileName(\"\"); // Clear the file name if invalid\r\n        return;\r\n      }\r\n\r\n      // If valid, clear the error and set the file name\r\n      setFileError(\"\");\r\n      setResumeFileName(file.name);\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"resume\", file);\r\n\r\n      // Post the file to the given URL\r\n      const uploadUrl = `${baseUrl}/api/resume?role=LAWYER`;\r\n\r\n      try {\r\n        const response = await axios.post(uploadUrl, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        });\r\n\r\n        // Handle successful response\r\n        if (response.status === 200) {\r\n          ToasterComponent(\"success\", response.data.statuses);\r\n          console.log(\"Resume uploaded successfully\", response.data);\r\n          setResumeFileId(response.data.documentId);\r\n        } else {\r\n          ToasterComponent(\"error\", \"Failed to upload resume\");\r\n          console.error(\"Failed to upload resume\", response.data);\r\n        }\r\n      } catch (error) {\r\n        // Handle errors\r\n        if (error.response) {\r\n          ToasterComponent(\r\n            \"error\",\r\n            error.response.data.message || \"Upload failed\"\r\n          );\r\n          console.error(\"Error uploading resume:\", error.response);\r\n        } else {\r\n          ToasterComponent(\"error\", \"An error occurred while uploading\");\r\n          console.error(\"Error uploading resume:\", error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\r\n\r\n  const handleView = async (fileId) => {\r\n    const viewUrl = `${baseUrl}/api/resume/${fileId}`; // Replace with your actual API endpoint\r\n\r\n    try {\r\n      const response = await axios.get(viewUrl, {\r\n        // This is important for downloading binary files\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Include authorization if required\r\n        },\r\n      });\r\n      // const response = await axios.get(viewUrl);\r\n\r\n      if (response.status === 200) {\r\n        // Create a URL for the binary response\r\n        // const fileUrl = window.URL.createObjectURL(new Blob([response.data]));\r\n        // const blobUrl = window.URL.createObjectURL(new Blob([response.data]));\r\n\r\n        // Open the file in a new tab\r\n        window.open(viewUrl, \"_blank\");\r\n      } else {\r\n        ToasterComponent(\"error\", \"Failed to view resume\");\r\n        console.error(\"Failed to view resume\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.message || \"View failed\");\r\n        console.error(\"Error viewing resume:\", error.response);\r\n      } else {\r\n        ToasterComponent(\"error\", \"An error occurred while viewing\");\r\n        console.error(\"Error viewing resume:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (fileId) => {\r\n    const deleteUrl = `${baseUrl}/api/resume/${fileId}?role=LAWYER`; // Replace with your actual delete API endpoint\r\n\r\n    try {\r\n      const response = await axios.delete(deleteUrl);\r\n\r\n      if (response.status === 200) {\r\n        // Assuming the deletion is successful\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n        console.log(\"File deleted successfully\");\r\n        // Add any other logic here like updating the state or UI\r\n        setResumeFileName(\"\");\r\n      } else {\r\n        console.error(\"Failed to delete the file\", \"Error\");\r\n      }\r\n    } catch (error) {\r\n      // Handle the error here\r\n      if (error?.response?.data?.statuses) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error deleting the file:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mentor-profile\">\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"\">\r\n        {/* new design code starts */}\r\n\r\n        {/* profile section starts */}\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <CardBody\r\n                style={{\r\n                  background: \"linear-gradient(to right, #7B42C5, #AA5D93)\",\r\n                  color: \"white\",\r\n                  borderRadius: \"9px 9px 0 0\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"position-relative\"\r\n                  style={{ position: \"relative\", top: \"5px\", textAlign: \"end\" }}\r\n                >\r\n                  <Button\r\n                    color=\"primary\"\r\n                    outline\r\n                    className=\"icon-button  bg-light\"\r\n                    style={{ border: \"none\" }}\r\n                    size=\"sm\"\r\n                    onClick={() => handleImageClick()}\r\n                  >\r\n                    <i className=\"simple-icon-pencil\" />\r\n                  </Button>\r\n                </div>\r\n\r\n                <div\r\n                  className=\"position-relative\"\r\n                  style={{ position: \"relative\", top: \"70px\" }}\r\n                >\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn p-0\"\r\n                    style={{ border: \"none\", background: \"none\" }}\r\n                    // onClick={() => handleImageClick()}\r\n                    aria-label=\"Profile image\"\r\n                  >\r\n                    {imageUrl === null ? (\r\n                      <ThumbnailLetters\r\n                        // small\r\n                        rounded\r\n                        text={firstName}\r\n                        className=\"mx-2\"\r\n                        color=\"secondary\"\r\n                      />\r\n                    ) : (\r\n                      <img\r\n                        src={`${baseUrl}/${imageUrl}`}\r\n                        className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                        style={{\r\n                          width: \"110px\",\r\n                          height: \"110px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                        alt=\"img\"\r\n                      />\r\n                    )}\r\n                  </button>\r\n                  {/* image modal starts */}\r\n                  <Modal\r\n                    isOpen={imageEditModal}\r\n                    toggle={() => setImageEditModal(!imageEditModal)}\r\n                    className=\"\"\r\n                    size=\"lg\"\r\n                    style={{\r\n                      borderRadius: \"10px\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                      <h2 className=\"font-weight-bold\">Profile photo</h2>\r\n                    </ModalHeader>\r\n                    <ModalBody className=\"d-flex justify-content-center align-items-center\">\r\n                      <img\r\n                        src={selectedFileBase64 || `${baseUrl}/${imageUrl}`}\r\n                        className=\"rounded-circle img-thumbnail border border-3\"\r\n                        style={{\r\n                          width: \"130px\",\r\n                          height: \"130px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                        alt=\"img\"\r\n                      />\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter className=\"d-flex align-items-center justify-content-center\">\r\n                      {selectedFile ? (\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          onClick={() => handleImagePost()}\r\n                          className=\"icon-button\"\r\n                          style={{ border: \"none\" }}\r\n                        >\r\n                          <i className=\"iconsminds-upload \" />\r\n                        </Button>\r\n                      ) : (\r\n                        <InputGroup\r\n                          className=\"\"\r\n                          style={{\r\n                            width: \"auto\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <div className=\"\">\r\n                            <Button\r\n                              outline\r\n                              className=\"icon-button\"\r\n                              color=\"primary\"\r\n                              style={{ border: \"none\" }}\r\n                              onClick={() =>\r\n                                document.getElementById(\"file-upload\").click()\r\n                              }\r\n                            >\r\n                              <i className=\"simple-icon-pencil\" />\r\n                            </Button>\r\n\r\n                            <Input\r\n                              id=\"file-upload\"\r\n                              type=\"file\"\r\n                              className=\"d-none\"\r\n                              onChange={handleFileChange}\r\n                            />\r\n                          </div>\r\n                        </InputGroup>\r\n                      )}\r\n\r\n                      <Button\r\n                        color=\"primary\"\r\n                        outline\r\n                        onClick={() => handleImageDelete()}\r\n                        className=\"icon-button\"\r\n                        style={{ border: \"none\" }}\r\n                      >\r\n                        <i className=\"simple-icon-trash\" />\r\n                      </Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n                  {/* image modal ends */}\r\n                </div>\r\n\r\n                {/* Modal for update profile starts */}\r\n                <Modal\r\n                  isOpen={isEditing}\r\n                  toggle={() => setIsEditing(!isEditing)}\r\n                  className=\"\"\r\n                  size=\"lg\"\r\n                  style={{\r\n                    borderRadius: \"10px\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                    <h2 className=\"font-weight-bold\">Edit Profile</h2>\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <div className=\"\">\r\n                      <div>\r\n                        <Row>\r\n                          <Col md=\"6\">\r\n                            <Label for=\"firstName\">\r\n                              <h4>First Name</h4>\r\n                            </Label>\r\n                            <Input\r\n                              type=\"text\"\r\n                              id=\"firstName\"\r\n                              value={firstName}\r\n                              onChange={(e) => setFirstName(e.target.value)}\r\n                            />\r\n                          </Col>\r\n                          <Col md=\"6\">\r\n                            <Label for=\"lastName\">\r\n                              <h4>Last Name</h4>\r\n                            </Label>\r\n                            <Input\r\n                              type=\"text\"\r\n                              id=\"lastName\"\r\n                              value={lastName}\r\n                              onChange={(e) => setLastName(e.target.value)}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Label for=\"location\" className=\"font-weight-medium\">\r\n                          <h4>Location</h4>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"location\"\r\n                          value={location}\r\n                          onChange={(e) => setLocation(e.target.value)}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option disabled value=\"\">\r\n                            Select Location\r\n                          </option>\r\n                          {country.map((option) => (\r\n                            <option\r\n                              // eslint-disable-next-line react/no-array-index-key\r\n                              key={option}\r\n                              value={option.iso_code}\r\n                            >\r\n                              {option.name}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        <br />\r\n\r\n                        <br />\r\n\r\n                        <Row>\r\n                          <Col md={6}>\r\n                            <>\r\n                              <Label\r\n                                for=\"resume\"\r\n                                className=\"font-weight-medium\"\r\n                              >\r\n                                <h4>CV</h4>\r\n                              </Label>\r\n                              <div\r\n                                className=\" p-2 my-2 d-flex text-one align-items-center justify-content-between\"\r\n                                style={{\r\n                                  border: \"1px solid #ccc\",\r\n                                  minWidth: \"200px\",\r\n                                }}\r\n                              >\r\n                                {resumeFileName || \"no file selected\"}\r\n                                <ButtonDropdown\r\n                                  isOpen={dropdownOpen}\r\n                                  toggle={toggleDropdown}\r\n                                >\r\n                                  <DropdownToggle\r\n                                    caret\r\n                                    style={{\r\n                                      backgroundColor: \"transparent\",\r\n                                      border: \"none\",\r\n                                      padding: 0,\r\n                                    }}\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa-solid fa-ellipsis\"\r\n                                      style={{\r\n                                        color: \"#333\",\r\n                                        cursor: \"pointer\",\r\n                                      }}\r\n                                    />\r\n                                  </DropdownToggle>\r\n\r\n                                  <DropdownMenu>\r\n                                    <DropdownItem\r\n                                      onClick={() => handleView(resumeFileId)}\r\n                                    >\r\n                                      view\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      onClick={() => handleDelete(resumeFileId)}\r\n                                    >\r\n                                      delete\r\n                                    </DropdownItem>\r\n                                  </DropdownMenu>\r\n                                </ButtonDropdown>\r\n                              </div>\r\n                              <InputGroup className=\"\">\r\n                                <div className=\"\">\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    style={{\r\n                                      cursor: \"pointer\",\r\n\r\n                                      background: \"none\",\r\n                                      border: \"none\",\r\n                                    }}\r\n                                    onClick={() =>\r\n                                      document\r\n                                        .getElementById(\"file-upload\")\r\n                                        .click()\r\n                                    }\r\n                                  >\r\n                                    <h5>+ Add your Resume</h5>\r\n                                  </button>\r\n                                  {/* <Form> */}\r\n                                  <Input\r\n                                    id=\"file-upload\"\r\n                                    type=\"file\"\r\n                                    className=\"d-none\"\r\n                                    // onChange={handleFileChange1}\r\n                                    // validate={validateFile}\r\n                                    onChange={(e) => handleFileChange1(e)}\r\n                                  />\r\n                                </div>\r\n                              </InputGroup>\r\n                              <br />\r\n                              {fileError && (\r\n                                <p style={{ color: \"red\" }}>{fileError}</p>\r\n                              )}\r\n                            </>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    </div>\r\n                    <br />\r\n                  </ModalBody>\r\n                  <ModalFooter\r\n                    style={{ borderTop: \"none\" }}\r\n                    className=\"d-flex align-items-center justify-content-center\"\r\n                  >\r\n                    <Button color=\"primary\" onClick={() => handleSave()}>\r\n                      Save\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      onClick={() => setIsEditing(false)}\r\n                      className=\"\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n                {/* Modal for update profile ends */}\r\n              </CardBody>\r\n              <CardBody>\r\n                <div>\r\n                  <div className=\"text-end w-100  d-flex justify-content-end\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      style={{ border: \"none\" }}\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditing(true)}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"mt-4\">\r\n                    <h2 className=\"font-weight-bold\">\r\n                      {firstName} {lastName}\r\n                    </h2>\r\n\r\n                    <h5 className=\"font-weight-medium\">\r\n                      <i className=\"simple-icon-location-pin text-primary\" />\r\n\r\n                      <span className=\"ml-2\">{countryName}</span>\r\n                    </h5>\r\n                    <h6 className=\"\">\r\n                      <i className=\"simple-icon-star text-primary \" />\r\n                      <span className=\"ml-2\">{`${star} (${ratings} ratings)`}</span>\r\n                    </h6>\r\n                    <h6 className=\"text-muted\">{resumeFileName}</h6>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {/* profile section ends */}\r\n\r\n        {/* about section starts */}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row className=\"align-items-center\">\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">About</h2>\r\n\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingAbout(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <div>\r\n                  <p className=\"text-muted\">{about}</p>\r\n                </div>\r\n                {/* about modal starts */}\r\n                <Modal\r\n                  isOpen={isEditingAbout}\r\n                  toggle={() => setIsEditingAbout(!isEditingAbout)}\r\n                  className=\"\"\r\n                  size=\"lg\"\r\n                  style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                >\r\n                  <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                    <h2 className=\"font-weight-bold\">About</h2>\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <br />\r\n\r\n                    <>\r\n                      <Label for=\"about\" className=\"text-muted\">\r\n                        <h4>About Me</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        id=\"about\"\r\n                        value={about}\r\n                        onChange={(e) => setAbout(e.target.value)}\r\n                        className=\" text-one\"\r\n                      />\r\n                      <br />\r\n                    </>\r\n                    <>\r\n                      <Label for=\"about\" className=\"text-muted\">\r\n                        <h4>Bio</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        id=\"about\"\r\n                        value={bio}\r\n                        onChange={(e) => setBio(e.target.value)}\r\n                        className=\" text-one\"\r\n                      />\r\n                      <br />\r\n                    </>\r\n                  </ModalBody>\r\n                  <ModalFooter\r\n                    style={{ borderTop: \"none\" }}\r\n                    className=\"d-flex align-items-center justify-content-center\"\r\n                  >\r\n                    <Button color=\"primary\" onClick={() => handleSaveAbout()}>\r\n                      Save\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      onClick={() => setIsEditingAbout(false)}\r\n                      className=\"\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n                {/* about modal ends */}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {/* about section ends */}\r\n\r\n        {/* language section starts */}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Languages known</h2>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingLanguages(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <ul\r\n                      className=\"text-one text-muted font-weight-bold d-flex flex-wrap p-0 mr-3 text-start\"\r\n                      style={{\r\n                        gap: \"30px\",\r\n                        listStyle: \"none\",\r\n                        paddingLeft: 0,\r\n                      }}\r\n                    >\r\n                      {languages.map((lang) => (\r\n                        <li\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          key={lang}\r\n                          style={{\r\n                            position: \"relative\",\r\n                            paddingLeft: \"20px\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            style={{\r\n                              content: '\"\"',\r\n                              position: \"absolute\",\r\n                              left: 0,\r\n                              top: \"50%\",\r\n                              transform: \"translateY(-50%) rotate(45deg)\",\r\n                              width: \"7px\",\r\n                              height: \"7px\",\r\n                              backgroundColor: \"currentColor\",\r\n                            }}\r\n                          />\r\n                          {language.find((l) => l.iso_code === lang)?.name}{\" \"}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </Col>\r\n                </Row>\r\n                <Modal\r\n                  isOpen={isEditingLanguages}\r\n                  toggle={() => setIsEditingLanguages(!isEditingLanguages)}\r\n                  className=\"\"\r\n                  size=\"lg\"\r\n                  style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                >\r\n                  <ModalHeader>\r\n                    <h2 className=\"font-weight-bold\">Languages</h2>\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <h5>Languages</h5>\r\n                    <>\r\n                      <FormGroup className=\"error-l-75\">\r\n                        <Select\r\n                          placeholder=\"Select Languages\"\r\n                          name=\"languages\"\r\n                          isMulti\r\n                          options={languageOptions}\r\n                          className=\"react-select\"\r\n                          classNamePrefix=\"react-select\"\r\n                          value={selectedLanguages}\r\n                          onChange={(selectedOptions) => {\r\n                            setSelectedLanguages(selectedOptions);\r\n                            handleChange(selectedOptions);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      {languages.map((lang, index) => (\r\n                        <Button\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          key={lang}\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"mt-2 font-weight-semibold mr-2\"\r\n                          size=\"sm\"\r\n                          onClick={() => handleRemoveLanguages(index)}\r\n                        >\r\n                          {language.find((l) => l.iso_code === lang)?.name}{\" \"}\r\n                          <i className=\"iconsminds-close\" />\r\n                        </Button>\r\n                      ))}\r\n                    </>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={handleLanguagesSave}\r\n                      className=\"mr-2\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      onClick={handleLanguagesCancel}\r\n                      className=\"ml-2\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {/* langauge section ends */}\r\n        {/* topic section starts */}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Consulting areas</h2>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingTopics(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <div\r\n                  className=\"d-flex flex-wrap\"\r\n                  style={{ gap: \"10px\", marginTop: \"10px\" }}\r\n                >\r\n                  {topic.map((newTopics, index) => (\r\n                    <Button\r\n                      // eslint-disable-next-line react/no-array-index-key\r\n                      key={index}\r\n                      color={index < 3 ? \"primary\" : \"light\"}\r\n                      className=\"mb-2 font-weight-semibold mr-2\"\r\n                      size=\"sm\"\r\n                    >\r\n                      {newTopics}\r\n                    </Button>\r\n                  ))}\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n\r\n            <Modal\r\n              isOpen={isEditingTopics}\r\n              toggle={() => setIsEditingTopics(!isEditingTopics)}\r\n              className=\"\"\r\n              size=\"lg\"\r\n              style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n            >\r\n              <ModalHeader>\r\n                <h2 className=\"font-weight-bold\">Consulting areas</h2>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"mt-3\">\r\n                  <h5>Consulting areas </h5>\r\n                  <ReactSortable\r\n                    list={topic}\r\n                    setList={setTopic}\r\n                    options={{ handle: \".handle\" }}\r\n                    className=\"row ml-1\"\r\n                  >\r\n                    {topic.map((newTopics, index) => (\r\n                      <Button\r\n                        // eslint-disable-next-line react/no-array-index-key\r\n                        key={newTopics}\r\n                        color={index < 3 ? \"primary\" : \"light\"}\r\n                        // className=\" mb-2 font-weight-semibold \"\r\n                        className=\" my-2 font-weight-semibold mr-2 d-flex align-items-center \"\r\n                        size=\"sm\"\r\n                        onClick={() => handleRemoveTopics(index)}\r\n                      >\r\n                        {newTopics} <i className=\"iconsminds-close\" />\r\n                      </Button>\r\n                    ))}\r\n                  </ReactSortable>\r\n                  <p className=\"text-muted ml-2\">\r\n                    Drag consulting areas to set top 3 (the top 3 Consulting\r\n                    areas will be displayed on lawyer cards)\r\n                  </p>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"New Consulting area\"\r\n                      value={newInputTopics}\r\n                      onChange={(e) => setNewInputTopics(e.target.value)}\r\n                      onKeyDown={(event) => {\r\n                        if (event.key === \"Enter\") {\r\n                          handleAddTopics(newInputTopics);\r\n                          setNewInputTopics(\"\");\r\n                        }\r\n                      }}\r\n                    />\r\n                    <InputGroupAddon addonType=\"append\">\r\n                      <Button\r\n                        outline\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          handleAddTopics(newInputTopics);\r\n                          setNewInputTopics(\"\");\r\n                        }}\r\n                      >\r\n                        Add Consulting areas\r\n                      </Button>\r\n                    </InputGroupAddon>\r\n                  </InputGroup>\r\n                  {topicValidationMessage && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {topicValidationMessage}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={handleSaveTopics}\r\n                  className=\"mr-2\"\r\n                >\r\n                  Save\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  outline\r\n                  onClick={handleTopicCancel}\r\n                  className=\"ml-2\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </Col>\r\n        </Row>\r\n        {/* topic section ends */}\r\n\r\n        {/* package section starts  */}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Packages</h2>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  {packages?.map((pack) => (\r\n                    <Col lg={6} key={pack.id} className=\"my-2\">\r\n                      <Card className=\"pt-2 pb-2 d-flex\">\r\n                        <CardBody className=\"pt-2 pb-2\">\r\n                          <div className=\"price-top-part d-flex justify-content-between align-items-center\">\r\n                            <div>\r\n                              <i className=\"\" />\r\n                              <h2 className=\"mb-0 font-weight-semibold text-primary text-large mb-4\">\r\n                                {pack.serviceName}\r\n                              </h2>\r\n                              {/* <p className=''>{pack.headline}</p> */}\r\n                              <p className=\"text-large mb-2 text-default\">\r\n                                ₹{Math.floor(pack.amount).toLocaleString()}\r\n                              </p>\r\n                              <p className=\"text-muted text-small\">\r\n                                {pack.description}\r\n                              </p>\r\n                            </div>\r\n                            <Button\r\n                              color=\"primary\"\r\n                              outline\r\n                              className=\"icon-button text-end ml-5\"\r\n                              size=\"sm\"\r\n                              onClick={() => handlePackageEditClick(pack)}\r\n                              style={{ border: \"none\" }}\r\n                            >\r\n                              <i className=\"simple-icon-pencil\" />\r\n                            </Button>\r\n                          </div>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n                <Row>\r\n                  <Col lg={12}>\r\n                    <Card\r\n                      onClick={() => setIsAddPackage(true)}\r\n                      className=\"p-3 text-center my-5\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                    >\r\n                      <h3 className=\"font-weight-bold text-primary\">\r\n                        + Add more packages\r\n                      </h3>\r\n                    </Card>\r\n                    {/* Modal for adding new package */}\r\n                    <Modal\r\n                      isOpen={isAddPackage}\r\n                      toggle={() => setIsAddPackage(!isAddPackage)}\r\n                      className=\"\"\r\n                      size=\"lg\"\r\n                      style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                    >\r\n                      <ModalHeader>\r\n                        <h2 className=\"font-weight-bold\">Add New Package</h2>\r\n                      </ModalHeader>\r\n                      <ModalBody>\r\n                        <div className=\"mt-3\">\r\n                          <Row className=\"my-4\">\r\n                            <Col md=\"6\">\r\n                              <Label for=\"serviceName\">\r\n                                <h4>Service Name</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"serviceName\"\r\n                                id=\"serviceName\"\r\n                                value={newPackage.serviceName}\r\n                                onChange={handleInputChange}\r\n                              />\r\n                            </Col>\r\n                            {/* <Col md=\"6\">\r\n                              <Label for=\"headline\">\r\n                                <h4>Headline</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"headline\"\r\n                                id=\"headline\"\r\n                                value={newPackage.headline}\r\n                                onChange={handleInputChange}\r\n                              />\r\n                            </Col> */}\r\n                          </Row>\r\n\r\n                          <Row>\r\n                            <Col>\r\n                              <Label for=\"description\">\r\n                                <h4>Description</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"textarea\"\r\n                                name=\"description\"\r\n                                id=\"description\"\r\n                                value={newPackage.description}\r\n                                onChange={handleInputChange}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row className=\"my-2\">\r\n                            <Col md=\"6\">\r\n                              <Label for=\"amount\">\r\n                                <h4>Amount</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"number\"\r\n                                name=\"amount\"\r\n                                id=\"amount\"\r\n                                value={newPackage.amount}\r\n                                onChange={handleInputChange}\r\n                                className=\"text-one\"\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                      </ModalBody>\r\n                      <ModalFooter>\r\n                        <Button\r\n                          color=\"primary\"\r\n                          onClick={handlePackageSave}\r\n                          className=\"mr-2\"\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                        <Button\r\n                          color=\"primary\"\r\n                          outline\r\n                          onClick={handleAddPackageCancel}\r\n                          className=\"ml-2\"\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </ModalFooter>\r\n                    </Modal>\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n\r\n            <Modal\r\n              isOpen={isEditingPackages}\r\n              toggle={() => setIsEditingPackages(!isEditingPackages)}\r\n              className=\"\"\r\n              size=\"lg\"\r\n              style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n            >\r\n              <ModalHeader>\r\n                <h2 className=\"font-weight-bold\">Packages</h2>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"mt-3\">\r\n                  {/* <h5>Packages</h5> */}\r\n                  <Row className=\"\">\r\n                    <Col md={12} className=\"d-flex justify-content-end\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        outline\r\n                        className=\"icon-button \"\r\n                        size=\"sm\"\r\n                        onClick={() => handlePackageDeleteClick(editPackage)}\r\n                        style={{ border: \"none\" }}\r\n                      >\r\n                        <i className=\"simple-icon-trash\" />\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"my-4\">\r\n                    <Col md=\"6\">\r\n                      <Label for=\"serviceName\">\r\n                        <h4>Service Name</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"serviceName\"\r\n                        value={editPackage.serviceName}\r\n                        onChange={(e) =>\r\n                          setEditPackage({\r\n                            ...editPackage,\r\n                            serviceName: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <Label for=\"description\">\r\n                        <h4>Description</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"description\"\r\n                        value={editPackage.description}\r\n                        onChange={(e) =>\r\n                          setEditPackage({\r\n                            ...editPackage,\r\n                            description: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <Label for=\"amount\" className=\"text-muted\">\r\n                        <h4>Amount</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        id=\"amount\"\r\n                        value={editPackage.amount}\r\n                        onChange={(e) =>\r\n                          setEditPackage({\r\n                            ...editPackage,\r\n                            amount: e.target.value,\r\n                          })\r\n                        }\r\n                        className=\" text-one\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={handleSavePackage}\r\n                  className=\"mr-2\"\r\n                >\r\n                  Save\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  outline\r\n                  onClick={handlePackageCancelEdit}\r\n                  className=\"ml-2\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* package section ends */}\r\n        {/* new design cocde ends */}\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LawyerMyProfile;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport {\r\n  Button,\r\n  ButtonDropdown,\r\n  // Form,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { EmploymentTypeData } from \"../Listing/ListingData\";\r\nimport country from \"../my-login/Country\";\r\nimport language from \"../my-login/Languages\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst currentYear = new Date().getFullYear();\r\nconst years = [];\r\n\r\nfor (let year = currentYear; year >= 2005; year -= 1) {\r\n  years.push(year);\r\n}\r\n\r\nconst MyProfile = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [jobTitle, setJobTitle] = useState(\"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [linkedInUrl, setLinkedInUrl] = useState(\"\");\r\n  const [resumeFileName, setResumeFileName] = useState(\"\");\r\n  const [resumeFileId, setResumeFileId] = useState(\"\");\r\n  const [twitterHandle, setTwitterHandle] = useState(\"\");\r\n  const [personalWebsite, setPersonalWebsite] = useState(\"\");\r\n  const [education, setEducation] = useState([]);\r\n  const [work, setWork] = useState([]);\r\n  const [goal, setGoal] = useState(\"\");\r\n  const [certifications, setCertifications] = useState([]);\r\n  const [seekingFor, setSeekingFor] = useState(\"\");\r\n  const [newInputSkill, setNewInputSkill] = useState(\"\");\r\n  const [newInputCertifications, setNewInputCertifications] = useState(\"\");\r\n  const [skillValidationMessage, setSkillValidationMessage] = useState(\"\");\r\n  const [certificationsValidationMessage, setCertificationsValidationMessage] =\r\n    useState(\"\");\r\n\r\n  const { uid } = useParams();\r\n\r\n  // console.log(\"work\",work)\r\n  // console.log(\"uid\",uid)\r\n  // const endUrl = `${baseUrl}/api/userprofile/myprofile`;\r\n  const imageEditUrl = `${baseUrl}/api/userprofile/profile-image`;\r\n\r\n  let endUrl;\r\n\r\n  if (!uid) {\r\n    endUrl = `${baseUrl}/api/userprofile/myprofile`;\r\n  } else {\r\n    endUrl = `${baseUrl}/api/userprofile/profile/${uid}`;\r\n  }\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [profileData, setProfileData] = useState(false);\r\n  const [modalEditProfile, setModalEditProfile] = useState(false);\r\n  const [modalEditExperience, setModalEditExperience] = useState(false);\r\n  const [modalEditSkills, setModalEditSkills] = useState(false);\r\n  const [modalEditLanguage, setModalEditLanguage] = useState(false);\r\n  const [modalEditEducation, setModalEditEducation] = useState(false);\r\n  const [imageEditModal, setImageEditModal] = useState(false);\r\n  const [modalAbout, setModalAbout] = useState(false);\r\n  const [profileUpdate, setProfileUpdate] = useState(false);\r\n  const [modalEditCertifications, setModalEditCertifications] = useState(false);\r\n\r\n  // const [educationEdit, setEducationEdit] = useState(false);\r\n\r\n  const [experienceEditOpen, setExperienceEditOpen] = useState(false);\r\n  const [educationEditOpen, setEducationEditOpen] = useState(false);\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [selectedWorkIndex, setSelectedWorkIndex] = useState(null);\r\n\r\n  const [skills, setSkills] = useState([]);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [bio, setBio] = useState(\"\");\r\n  // console.log(\"index\",selectedIndex);\r\n  // console.log(\"educationEdit\",educationEdit);\r\n  // console.log(\"selectedWorkIndex\",selectedWorkIndex);\r\n  // const [currentEducation, setCurrentEducation] = useState(null);\r\n  // const [currentWork, setCurrentWork] = useState(null);\r\n  const [newWork, setNewWork] = useState({});\r\n\r\n  const [newEducation, setNewEducation] = useState({});\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [selectedFileBase64, setSelectedFileBase64] = useState(null);\r\n  const [fileError, setFileError] = useState(\"\");\r\n\r\n  const token = localStorage.getItem(\"tokenRes\");\r\n  // const newUpdatedWork = [...work, newWork]\r\n  const mentorProfileDetails = async () => {\r\n    try {\r\n      const response = await axios.get(endUrl);\r\n      const userData = response.data;\r\n      if (userData) {\r\n        setImage(userData.userPhotoUrl);\r\n        setFirstName(userData.firstName);\r\n        setLastName(userData.lastName);\r\n        setJobTitle(userData.jobTitle);\r\n        setLocation(userData.location);\r\n        setEducation(userData.education);\r\n        setLinkedInUrl(userData.linkedInUrl);\r\n        setResumeFileName(userData.documentName);\r\n        setResumeFileId(userData.documentId);\r\n        setLanguages(userData.languages);\r\n        setWork(userData.work);\r\n        setTwitterHandle(userData.twitterHandle);\r\n        setPersonalWebsite(userData.personalWebsite);\r\n        setSkills(userData.skills);\r\n        setSeekingFor(userData.seekingFor);\r\n        setGoal(userData.goal);\r\n        setCertifications(userData.certifications);\r\n        setBio(userData.bio);\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 4000);\r\n      setProfileData(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    mentorProfileDetails();\r\n  }, [profileUpdate, uid]);\r\n\r\n  // check ok\r\n\r\n  const postImageData = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", selectedFile);\r\n\r\n      const response = await axios.post(imageEditUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      setTimeout(() => {\r\n        setProfileUpdate(!profileUpdate);\r\n      }, 2000);\r\n      // console.log(`resres ${response.status}`);\r\n      if (response.status === 200) {\r\n        await mentorProfileDetails();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        setSelectedFileBase64(base64Image);\r\n\r\n        // setAboutField({ ...aboutField, image: base64Image });\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  // Handle file change\r\n  const handleFileChange1 = async (e) => {\r\n    // const file = event.target.files[0];\r\n    // setSelectedFile1(file);\r\n    const file = e.target.files[0];\r\n\r\n    if (file) {\r\n      const fileType = file.type;\r\n      const fileSize = file.size;\r\n\r\n      // Check if the file is a PDF\r\n      if (fileType !== \"application/pdf\") {\r\n        setFileError(\"Please upload a PDF file.\");\r\n        setResumeFileName(\"\"); // Clear the file name if invalid\r\n        return;\r\n      }\r\n\r\n      // Check if the file size is more than 2MB\r\n      if (fileSize > 2 * 1024 * 1024) {\r\n        setFileError(\"File size should be less than 2MB.\");\r\n        setResumeFileName(\"\"); // Clear the file name if invalid\r\n        return;\r\n      }\r\n\r\n      // If valid, clear the error and set the file name\r\n      setFileError(\"\");\r\n      setResumeFileName(file.name);\r\n      const formData = new FormData();\r\n      formData.append(\"resume\", file);\r\n\r\n      // Post the file to the given URL\r\n      const uploadUrl = `${baseUrl}/api/resume?role=USER`;\r\n\r\n      try {\r\n        const response = await axios.post(uploadUrl, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        });\r\n\r\n        // Handle successful response\r\n        if (response.status === 200) {\r\n          ToasterComponent(\"success\", response.data.statuses);\r\n          console.log(\"Resume uploaded successfully\", response.data);\r\n          setResumeFileId(response.data.documentId);\r\n        } else {\r\n          ToasterComponent(\"error\", \"Failed to upload resume\");\r\n          console.error(\"Failed to upload resume\", response.data);\r\n        }\r\n      } catch (error) {\r\n        // Handle errors\r\n        if (error.response) {\r\n          ToasterComponent(\r\n            \"error\",\r\n            error.response.data.message || \"Upload failed\"\r\n          );\r\n          console.error(\"Error uploading resume:\", error.response);\r\n        } else {\r\n          ToasterComponent(\"error\", \"An error occurred while uploading\");\r\n          console.error(\"Error uploading resume:\", error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateMentorProfile = async (\r\n    updatedEducation = education,\r\n    updatedWork = work\r\n  ) => {\r\n    try {\r\n      const updatedData = {\r\n        firstName,\r\n        lastName,\r\n        linkedInUrl,\r\n        twitterHandle,\r\n        languages,\r\n        personalWebsite,\r\n        education: updatedEducation,\r\n        work: updatedWork,\r\n        skills,\r\n        bio,\r\n        certifications,\r\n        goal,\r\n        seekingFor,\r\n      };\r\n\r\n      const response = await axios.put(endUrl, updatedData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n\r\n      setProfileUpdate(!profileUpdate);\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error updating profile\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditEducation = (index) => {\r\n    setNewEducation(education[index]);\r\n    setSelectedIndex(index);\r\n    // setCurrentEducation({...educationItem});\r\n    setEducationEditOpen(true);\r\n    // setEducationEdit(true);\r\n  };\r\n\r\n  const handleAddWork = () => {\r\n    setNewWork({\r\n      company: \"\",\r\n      jobTitle: \"\",\r\n      employmentType: \"\",\r\n      jobLocation: \"\",\r\n      startDate: 0,\r\n      endDate: 0,\r\n    });\r\n    setSelectedWorkIndex(null);\r\n    setExperienceEditOpen(true);\r\n  };\r\n\r\n  const handleAddEducation = () => {\r\n    // setCurrentEducation({\r\n    //   college: '',\r\n    //   degree: '',\r\n    //   department: '',\r\n    //   year: 0\r\n    // });\r\n    setEducationEditOpen(true);\r\n  };\r\n\r\n  const handleSaveWork = () => {\r\n    setWork((prevWork) => {\r\n      let updatedWork;\r\n      if (selectedWorkIndex !== null) {\r\n        updatedWork = prevWork.filter(\r\n          (_, index) => index !== selectedWorkIndex\r\n        );\r\n      } else {\r\n        updatedWork = prevWork;\r\n      }\r\n      const newWorkArray = [...updatedWork, newWork];\r\n\r\n      setTimeout(() => updateMentorProfile(education, newWorkArray), 0);\r\n\r\n      return newWorkArray;\r\n    });\r\n\r\n    setExperienceEditOpen(false);\r\n    setNewWork({\r\n      company: \"\",\r\n      jobTitle: \"\",\r\n      employmentType: \"\",\r\n      jobLocation: \"\",\r\n      startDate: 0,\r\n      endDate: 0,\r\n    });\r\n    setSelectedWorkIndex(null);\r\n  };\r\n\r\n  const handleSaveEducation = () => {\r\n    setEducation((prevEducation) => {\r\n      const updatedEducation = prevEducation.filter(\r\n        (_, index) => index !== selectedIndex\r\n      );\r\n      const newEducationArray = [...updatedEducation, newEducation];\r\n\r\n      setTimeout(() => updateMentorProfile(newEducationArray), 0);\r\n\r\n      return newEducationArray;\r\n    });\r\n    setSelectedIndex(null);\r\n    setEducationEditOpen(false);\r\n    setNewEducation({\r\n      college: \"\",\r\n      degree: \"\",\r\n      department: \"\",\r\n      year: 0,\r\n    });\r\n  };\r\n\r\n  const handleEditWork = (index) => {\r\n    setNewWork(work[index]);\r\n    setSelectedWorkIndex(index);\r\n    // setCurrentWork({...workItem});\r\n    setExperienceEditOpen(true);\r\n  };\r\n\r\n  const handleAddLanguages = (newLanguages) => {\r\n    setLanguages([...languages, newLanguages]);\r\n  };\r\n\r\n  const handleRemoveLanguages = (index) => {\r\n    setLanguages(languages.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const languageOptions = language.map((option) => ({\r\n    value: option.iso_code,\r\n    label: option.name,\r\n  }));\r\n\r\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\r\n\r\n  const handleChange = (selectedOptions) => {\r\n    const languagesArray = selectedOptions\r\n      ? selectedOptions.map((option) => option.value)\r\n      : [];\r\n    handleAddLanguages(languagesArray[0]);\r\n    setSelectedLanguages([]);\r\n  };\r\n\r\n  const handleImageClick = () => setImageEditModal(true);\r\n  const handleEditProfileSave = () => {\r\n    setModalEditProfile(false);\r\n    updateMentorProfile();\r\n  };\r\n\r\n  const handleAboutSave = () => {\r\n    setModalAbout(false);\r\n    updateMentorProfile();\r\n  };\r\n\r\n  const handleSkillsSave = () => {\r\n    setModalEditSkills(false);\r\n    updateMentorProfile();\r\n  };\r\n\r\n  const handleCertificationsSave = () => {\r\n    setModalEditCertifications(false);\r\n    updateMentorProfile();\r\n  };\r\n\r\n  const handleLanguageSave = () => {\r\n    setModalEditLanguage(false);\r\n    updateMentorProfile();\r\n  };\r\n\r\n  const handleAddSkill = (newSkill) => {\r\n    if (!newSkill.trim()) {\r\n      setSkillValidationMessage(\"Skill cannot be empty\");\r\n    } else {\r\n      setSkillValidationMessage(\"\");\r\n      setSkills([...skills, newSkill]);\r\n    }\r\n  };\r\n\r\n  const handleAddCertifications = (newCertification) => {\r\n    if (!newCertification.trim()) {\r\n      setCertificationsValidationMessage(\"Certification cannot be empty\");\r\n    } else {\r\n      setCertificationsValidationMessage(\"\");\r\n      setCertifications([...certifications, newCertification]);\r\n    }\r\n  };\r\n\r\n  const handleRemoveSkill = (index) => {\r\n    setSkills(skills.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleRemoveCertifications = (index) => {\r\n    setCertifications(certifications.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleEducationCancel = () => {\r\n    setEducationEditOpen(false);\r\n    setSelectedIndex(null);\r\n  };\r\n\r\n  const handleImagePost = () => {\r\n    postImageData();\r\n    setSelectedFile(null);\r\n    setImageEditModal(false);\r\n  };\r\n\r\n  const handleImageDelete = () => {\r\n    // setSelectedFile(image);\r\n    setImageEditModal(false);\r\n  };\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\r\n\r\n  const handleView = async (fileId) => {\r\n    const viewUrl = `${baseUrl}/api/resume/${fileId}`; // Replace with your actual API endpoint\r\n\r\n    try {\r\n      const response = await axios.get(viewUrl, {\r\n        // This is important for downloading binary files\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Include authorization if required\r\n        },\r\n      });\r\n      // const response = await axios.get(viewUrl);\r\n\r\n      if (response.status === 200) {\r\n        // Create a URL for the binary response\r\n        // const fileUrl = window.URL.createObjectURL(new Blob([response.data]));\r\n        // const blobUrl = window.URL.createObjectURL(new Blob([response.data]));\r\n\r\n        // Open the file in a new tab\r\n        window.open(viewUrl, \"_blank\");\r\n      } else {\r\n        ToasterComponent(\"error\", \"Failed to view resume\");\r\n        console.error(\"Failed to view resume\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.message || \"View failed\");\r\n        console.error(\"Error viewing resume:\", error.response);\r\n      } else {\r\n        ToasterComponent(\"error\", \"An error occurred while viewing\");\r\n        console.error(\"Error viewing resume:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (fileId) => {\r\n    const deleteUrl = `${baseUrl}/api/resume/${fileId}?role=USER`; // Replace with your actual delete API endpoint\r\n\r\n    try {\r\n      const response = await axios.delete(deleteUrl);\r\n\r\n      if (response.status === 200) {\r\n        // Assuming the deletion is successful\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n        console.log(\"File deleted successfully\");\r\n        // Add any other logic here like updating the state or UI\r\n        setResumeFileName(\"\");\r\n      } else {\r\n        console.error(\"Failed to delete the file\", \"Error\");\r\n      }\r\n    } catch (error) {\r\n      // Handle the error here\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error deleting the file:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-center\">\r\n      <Colxx sm=\"12\" md=\"10\" lg=\"10\" xxs=\"12\" className=\"\">\r\n        <div className=\"\">\r\n          {loading ? (\r\n            <div className=\"loading\" />\r\n          ) : (\r\n            <>\r\n              {profileData ? (\r\n                <div className=\"text-center mt-4\">\r\n                  <i className=\"simple-icon-exclamation display-4\" />\r\n                  <h4 className=\"mt-4\">\r\n                    Failed to fetch profile data from server{\" \"}\r\n                  </h4>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <Row>\r\n                    <Col>\r\n                      <Card>\r\n                        <CardBody\r\n                          style={{\r\n                            background:\r\n                              \"linear-gradient(to right, #7B42C5, #AA5D93)\",\r\n                            color: \"white\",\r\n                            borderRadius: \"9px 9px 0 0\",\r\n                          }}\r\n                        >\r\n                          {/* <div\r\n                            className=\"text-end w-100  \r\n                         m-0 d-flex justify-content-end \"\r\n                          >\r\n                            {!uid &&\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"icon-button\"\r\n                              size=\"sm\"\r\n                            >\r\n                              <i className=\"simple-icon-pencil text-primary font-weight-bold\" />\r\n                            </Button>}\r\n                          </div> */}\r\n                          {!uid && (\r\n                            <div\r\n                              className=\"position-relative\"\r\n                              style={{\r\n                                position: \"relative\",\r\n                                top: \"5px\",\r\n                                textAlign: \"end\",\r\n                              }}\r\n                            >\r\n                              <Button\r\n                                color=\"primary\"\r\n                                outline\r\n                                className=\"icon-button  bg-light\"\r\n                                style={{ border: \"none\" }}\r\n                                size=\"sm\"\r\n                                onClick={() => handleImageClick()}\r\n                              >\r\n                                <i className=\"simple-icon-pencil\" />\r\n                              </Button>\r\n                            </div>\r\n                          )}\r\n\r\n                          <div\r\n                            className=\"position-relative\"\r\n                            style={{ position: \"relative\", top: \"70px\" }}\r\n                          >\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn p-0\"\r\n                              style={{ border: \"none\", background: \"none\" }}\r\n                              // onClick={() => handleImageClick()}\r\n                              aria-label=\"Profile image\"\r\n                            >\r\n                              {image === null ? (\r\n                                <ThumbnailLetters\r\n                                  // small\r\n                                  rounded\r\n                                  text={firstName}\r\n                                  className=\"mx-2\"\r\n                                  color=\"secondary\"\r\n                                />\r\n                              ) : (\r\n                                <img\r\n                                  // src=\"/assets/img/profiles/2.jpg\"\r\n                                  src={\r\n                                    selectedFileBase64 || `${baseUrl}/${image}`\r\n                                  }\r\n                                  className=\"rounded-circle img-thumbnail border border-3\"\r\n                                  style={{\r\n                                    width: \"130px\",\r\n                                    height: \"130px\",\r\n                                    objectFit: \"cover\",\r\n                                  }}\r\n                                  alt=\"Profile\"\r\n                                />\r\n                              )}\r\n                            </button>\r\n\r\n                            <Modal\r\n                              isOpen={imageEditModal}\r\n                              toggle={() => setImageEditModal(!imageEditModal)}\r\n                              className=\"\"\r\n                              size=\"lg\"\r\n                              style={{\r\n                                borderRadius: \"10px\",\r\n                                overflow: \"hidden\",\r\n                              }}\r\n                            >\r\n                              <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                                <h2 className=\"font-weight-bold\">\r\n                                  Profile photo\r\n                                </h2>\r\n                              </ModalHeader>\r\n                              <ModalBody className=\"d-flex justify-content-center align-items-center\">\r\n                                {/* <img\r\n                                  // src=\"/assets/img/profiles/2.jpg\"\r\n                                  src={\r\n                                    selectedFileBase64 || `${baseUrl}/${image}`\r\n                                  }\r\n                                  className=\"rounded-circle img-thumbnail border border-3\"\r\n                                  style={{\r\n                                    width: \"130px\",\r\n                                    height: \"130px\",\r\n                                    objectFit: \"cover\",\r\n                                  }}\r\n                                  alt=\"img\"\r\n                                /> */}\r\n                                {image === null ? (\r\n                                  <ThumbnailLetters\r\n                                    rounded\r\n                                    text={firstName}\r\n                                    className=\"mx-2\"\r\n                                    color=\"secondary\"\r\n                                    style={{\r\n                                      width: \"130px\",\r\n                                      height: \"130px\",\r\n                                      objectFit: \"cover\",\r\n                                    }}\r\n                                  />\r\n                                ) : (\r\n                                  <img\r\n                                    src={\r\n                                      selectedFileBase64 ||\r\n                                      `${baseUrl}/${image}`\r\n                                    }\r\n                                    className=\"rounded-circle img-thumbnail border border-3\"\r\n                                    style={{\r\n                                      width: \"130px\",\r\n                                      height: \"130px\",\r\n                                      objectFit: \"cover\",\r\n                                    }}\r\n                                    alt=\"img\"\r\n                                  />\r\n                                )}\r\n                              </ModalBody>\r\n                              {!uid && (\r\n                                <ModalFooter\r\n                                  // style={{ borderTop: 'none' }}\r\n                                  className=\"d-flex align-items-center justify-content-center\"\r\n                                >\r\n                                  {selectedFile ? (\r\n                                    <Button\r\n                                      outline\r\n                                      color=\"primary\"\r\n                                      onClick={() => handleImagePost()}\r\n                                      className=\"icon-button\"\r\n                                      style={{ border: \"none\" }}\r\n                                    >\r\n                                      <i className=\"iconsminds-upload \" />\r\n                                    </Button>\r\n                                  ) : (\r\n                                    <InputGroup\r\n                                      className=\"\"\r\n                                      style={{\r\n                                        width: \"auto\",\r\n                                        display: \"flex\",\r\n                                        justifyContent: \"center\",\r\n                                      }}\r\n                                    >\r\n                                      {/* {errors.image && touched.image && (\r\n                            <div className=\"invalid-feedback d-block\">\r\n                              {errors.image}\r\n                            </div>\r\n                          )} */}\r\n                                      <div className=\"\">\r\n                                        <Button\r\n                                          outline\r\n                                          className=\"icon-button\"\r\n                                          color=\"primary\"\r\n                                          style={{ border: \"none\" }}\r\n                                          onClick={() =>\r\n                                            document\r\n                                              .getElementById(\"file-upload\")\r\n                                              .click()\r\n                                          }\r\n                                        >\r\n                                          <i className=\"simple-icon-pencil\" />\r\n                                        </Button>\r\n                                        {/* <Form> */}\r\n                                        <Input\r\n                                          id=\"file-upload\"\r\n                                          type=\"file\"\r\n                                          className=\"d-none\"\r\n                                          onChange={handleFileChange}\r\n                                          // validate={validateFile}\r\n                                        />\r\n                                        {/* </Form> */}\r\n                                        {/* {file1 && (\r\n                              <p className=\"mt-2\">\r\n                                Selected file: {file1.name}\r\n                              </p>\r\n                            )}\r\n                            {errors.image && touched.image && (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.image}\r\n                              </div>\r\n                            )} */}\r\n                                      </div>\r\n                                    </InputGroup>\r\n                                  )}\r\n\r\n                                  <Button\r\n                                    color=\"primary\"\r\n                                    outline\r\n                                    onClick={() => handleImageDelete()}\r\n                                    className=\"icon-button\"\r\n                                    style={{ border: \"none\" }}\r\n                                  >\r\n                                    <i className=\"simple-icon-trash\" />\r\n                                  </Button>\r\n                                </ModalFooter>\r\n                              )}\r\n                            </Modal>\r\n                          </div>\r\n                        </CardBody>\r\n                        <CardBody>\r\n                          <div className=\"text-end w-100  d-flex justify-content-end\">\r\n                            {!uid && (\r\n                              <Button\r\n                                color=\"primary\"\r\n                                outline\r\n                                className=\"icon-button\"\r\n                                style={{ border: \"none\" }}\r\n                                size=\"sm\"\r\n                                onClick={() => setModalEditProfile(true)}\r\n                              >\r\n                                <i className=\"simple-icon-pencil\" />\r\n                              </Button>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"mt-4\">\r\n                            <h2 className=\"font-weight-bold\">\r\n                              {firstName} {lastName}\r\n                            </h2>\r\n                            <h3 className=\"text-one\">\r\n                              {work.length > 0 && work[0].jobTitle} |{\" \"}\r\n                              {work.length > 0 && work[0].company}\r\n                            </h3>\r\n                            <div>\r\n                              <h6 className=\"text-muted\">{location}</h6>\r\n                              <h6>{work.length > 0 && work[0].jobLocation}</h6>\r\n                              <h6 className=\"text-muted\">{resumeFileName}</h6>\r\n                            </div>\r\n                          </div>\r\n                        </CardBody>\r\n                        <Modal\r\n                          isOpen={modalEditProfile}\r\n                          toggle={() => setModalEditProfile(!modalEditProfile)}\r\n                          className=\"\"\r\n                          size=\"lg\"\r\n                          style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                        >\r\n                          <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                            <h2 className=\"font-weight-bold\">Edit Profile</h2>\r\n                          </ModalHeader>\r\n                          <ModalBody>\r\n                            <Row className=\"\">\r\n                              <Col md=\"6\">\r\n                                <Label for=\"firstName\" className=\"text-muted\">\r\n                                  <h4>First Name</h4>\r\n                                </Label>\r\n                                <Input\r\n                                  type=\"text\"\r\n                                  id=\"firstName\"\r\n                                  value={firstName}\r\n                                  onChange={(e) => setFirstName(e.target.value)}\r\n                                  className=\" text-one\"\r\n                                />\r\n                              </Col>\r\n                              <Col md=\"6\">\r\n                                <Label for=\"lastName\" className=\"text-muted\">\r\n                                  <h4>Last Name</h4>\r\n                                </Label>\r\n                                <Input\r\n                                  type=\"text\"\r\n                                  id=\"lastName\"\r\n                                  value={lastName}\r\n                                  onChange={(e) => setLastName(e.target.value)}\r\n                                  className=\" text-one\"\r\n                                />\r\n                              </Col>\r\n                            </Row>\r\n                            <br />\r\n\r\n                            <>\r\n                              <Label for=\"jobtitle\" className=\"text-muted\">\r\n                                <h4>Job Title</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                id=\"jobtitle\"\r\n                                value={jobTitle}\r\n                                onChange={(e) => setJobTitle(e.target.value)}\r\n                                className=\" text-one\"\r\n                              />\r\n                              <br />\r\n                            </>\r\n                            {/* <>\r\n                              <Label for=\"jobtitle\" className=\"text-muted\">\r\n                                <h4>Job Title</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                id=\"jobtitle\"\r\n                                value={work.length > 0 && work[0].jobTitle}\r\n                                onChange={(e) => {\r\n                                  const newValue = e.target.value;\r\n                                  // Update the state with the new value\r\n                                  setJobTitle(newValue);\r\n                                  // Optionally, update the work array if needed\r\n                                  setWork((prevWork) =>\r\n                                    prevWork.map((item) =>\r\n                                      item.id === work[0].id\r\n                                        ? { ...item, jobTitle: newValue }\r\n                                        : item\r\n                                    )\r\n                                  );\r\n                                }}\r\n                                className=\" text-one\"\r\n                              />\r\n                              <br />\r\n                            </> */}\r\n                            <>\r\n                              <Label for=\"company\" className=\"text-muted\">\r\n                                <h4>Company</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                id=\"company\"\r\n                                value={company}\r\n                                onChange={(e) => setCompany(e.target.value)}\r\n                                className=\" text-one\"\r\n                              />\r\n                              <br />\r\n                            </>\r\n\r\n                            <>\r\n                              <Label for=\"location\" className=\"text-muted\">\r\n                                <h4>Location</h4>\r\n                              </Label>\r\n\r\n                              <Input\r\n                                type=\"select\"\r\n                                name=\"location\"\r\n                                value={location}\r\n                                // validate={validateLocation}\r\n                                onChange={(e) => setLocation(e.target.value)}\r\n                                className=\"form-control text-one\"\r\n                              >\r\n                                <option disabled value=\"\">\r\n                                  Select Location\r\n                                </option>\r\n                                {country.map((option) => (\r\n                                  <option\r\n                                    key={option.iso_code}\r\n                                    value={option.iso_code}\r\n                                  >\r\n                                    {option.name}\r\n                                  </option>\r\n                                ))}\r\n                              </Input>\r\n                              <br />\r\n                            </>\r\n                            <Row>\r\n                              <Col md={6}>\r\n                                <>\r\n                                  <Label for=\"resume\" className=\"text-muted\">\r\n                                    <h4>CV</h4>\r\n                                  </Label>\r\n                                  <div\r\n                                    className=\" p-2 my-2 d-flex justify-content-between text-one align-items-center\"\r\n                                    style={{\r\n                                      border: \"1px solid #ccc\",\r\n                                      minWidth: \"200px\",\r\n                                    }}\r\n                                  >\r\n                                    {resumeFileName || \"no file selected\"}\r\n                                    {/* <i\r\n                                      className=\"fa-solid fa-ellipsis\"\r\n                                      style={{\r\n                                        color: \"#333\",\r\n                                        cursor: \"pointer\",\r\n                                      }}\r\n                                    /> */}\r\n                                    <ButtonDropdown\r\n                                      isOpen={dropdownOpen}\r\n                                      toggle={toggleDropdown}\r\n                                    >\r\n                                      <DropdownToggle\r\n                                        caret\r\n                                        style={{\r\n                                          backgroundColor: \"transparent\",\r\n                                          border: \"none\",\r\n                                          padding: 0,\r\n                                        }}\r\n                                      >\r\n                                        <i\r\n                                          className=\"fa-solid fa-ellipsis\"\r\n                                          style={{\r\n                                            color: \"#333\",\r\n                                            cursor: \"pointer\",\r\n                                          }}\r\n                                        />\r\n                                      </DropdownToggle>\r\n\r\n                                      <DropdownMenu>\r\n                                        <DropdownItem\r\n                                          onClick={() =>\r\n                                            handleView(resumeFileId)\r\n                                          }\r\n                                        >\r\n                                          view\r\n                                        </DropdownItem>\r\n                                        <DropdownItem\r\n                                          onClick={() =>\r\n                                            handleDelete(resumeFileId)\r\n                                          }\r\n                                        >\r\n                                          delete\r\n                                        </DropdownItem>\r\n                                      </DropdownMenu>\r\n                                    </ButtonDropdown>\r\n                                  </div>\r\n                                  <InputGroup className=\"\">\r\n                                    <div className=\"\">\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        style={{\r\n                                          cursor: \"pointer\",\r\n\r\n                                          background: \"none\",\r\n                                          border: \"none\",\r\n                                        }}\r\n                                        onClick={() =>\r\n                                          document\r\n                                            .getElementById(\"file-upload\")\r\n                                            .click()\r\n                                        }\r\n                                      >\r\n                                        <h5>+ Add your Resume</h5>\r\n                                      </button>\r\n                                      {/* <Form> */}\r\n\r\n                                      <Input\r\n                                        id=\"file-upload\"\r\n                                        type=\"file\"\r\n                                        className=\"d-none\"\r\n                                        // onChange={handleFileChange1}\r\n                                        // validate={validateFile}\r\n                                        onChange={(e) => handleFileChange1(e)}\r\n                                      />\r\n                                    </div>\r\n                                  </InputGroup>\r\n                                  <br />\r\n                                  {fileError && (\r\n                                    <p style={{ color: \"red\" }}>{fileError}</p>\r\n                                  )}\r\n                                </>\r\n                              </Col>\r\n                            </Row>\r\n                          </ModalBody>\r\n                          <ModalFooter\r\n                            style={{ borderTop: \"none\" }}\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              onClick={() => handleEditProfileSave()}\r\n                            >\r\n                              Save\r\n                            </Button>{\" \"}\r\n                            <Button\r\n                              color=\"primary\"\r\n                              outline\r\n                              onClick={() => setModalEditProfile(false)}\r\n                              className=\"\"\r\n                            >\r\n                              Cancel\r\n                            </Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"my-4\">\r\n                    <Col>\r\n                      <Card>\r\n                        <CardBody>\r\n                          <Row className=\"align-items-center\">\r\n                            <Col className=\"d-flex justify-content-between\">\r\n                              <h2 className=\"font-weight-bold\">About</h2>\r\n                              {!uid && (\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  outline\r\n                                  className=\"icon-button\"\r\n                                  size=\"sm\"\r\n                                  onClick={() => setModalAbout(true)}\r\n                                  style={{ border: \"none\" }}\r\n                                >\r\n                                  <i className=\"simple-icon-pencil\" />\r\n                                </Button>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                          <div>\r\n                            <p className=\"text-muted\">\r\n                              {bio}\r\n                              {/* Lorem ipsum dolor sit amet consectetur adipisicing */}\r\n                              {/* elit. Sequi, at? */}\r\n                            </p>\r\n                          </div>\r\n                        </CardBody>\r\n                        <Modal\r\n                          isOpen={modalAbout}\r\n                          toggle={() => setModalAbout(!modalAbout)}\r\n                          className=\"\"\r\n                          size=\"lg\"\r\n                          style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                        >\r\n                          <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                            <h2 className=\"font-weight-bold\">About</h2>\r\n                          </ModalHeader>\r\n                          <ModalBody>\r\n                            <br />\r\n\r\n                            <>\r\n                              <Label for=\"about\" className=\"text-muted\">\r\n                                <h4>About Me</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"textarea\"\r\n                                id=\"about\"\r\n                                value={bio}\r\n                                onChange={(e) => setBio(e.target.value)}\r\n                                className=\" text-one\"\r\n                              />\r\n                              <br />\r\n                            </>\r\n\r\n                            <>\r\n                              <Label for=\"linkedInUrl\" className=\"text-muted\">\r\n                                <h4>LinkedIn URL</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                id=\"linkedInUrl\"\r\n                                value={linkedInUrl}\r\n                                onChange={(e) => setLinkedInUrl(e.target.value)}\r\n                                className=\" text-one\"\r\n                              />\r\n                              <br />\r\n                            </>\r\n                            <>\r\n                              <Label for=\"email\" className=\"text-muted\">\r\n                                <h4>Twitter URL</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                id=\"twitterHandle\"\r\n                                value={twitterHandle}\r\n                                onChange={(e) =>\r\n                                  setTwitterHandle(e.target.value)\r\n                                }\r\n                                className=\" text-one\"\r\n                              />\r\n                              <p className=\"text-muted mt-1\">\r\n                                Omit the &ldquo;@&rdquo; -e.g.\r\n                                &ldquo;dqmonn&rdquo;\r\n                              </p>\r\n                              <br />\r\n                            </>\r\n                            <>\r\n                              <Label for=\"website\" className=\"text-muted\">\r\n                                <h4>Personal Website URL</h4>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                id=\"website\"\r\n                                value={personalWebsite}\r\n                                onChange={(e) =>\r\n                                  setPersonalWebsite(e.target.value)\r\n                                }\r\n                                className=\" text-one\"\r\n                              />\r\n                              <br />\r\n                            </>\r\n                          </ModalBody>\r\n                          <ModalFooter\r\n                            style={{ borderTop: \"none\" }}\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              onClick={() => handleAboutSave()}\r\n                            >\r\n                              Save\r\n                            </Button>{\" \"}\r\n                            <Button\r\n                              color=\"primary\"\r\n                              outline\r\n                              onClick={() => setModalAbout(false)}\r\n                              className=\"\"\r\n                            >\r\n                              Cancel\r\n                            </Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"my-4\">\r\n                    <Col>\r\n                      <Card>\r\n                        <CardBody>\r\n                          <Row className=\"align-items-center\">\r\n                            <Col className=\"d-flex justify-content-between\">\r\n                              <h2 className=\"font-weight-bold\">Experience</h2>\r\n                              {!uid && (\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  outline\r\n                                  className=\"icon-button\"\r\n                                  style={{ border: \"none\" }}\r\n                                  size=\"sm\"\r\n                                  onClick={() => setModalEditExperience(true)}\r\n                                >\r\n                                  <i className=\"simple-icon-pencil\" />\r\n                                </Button>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                          {work.map((w, index) => (\r\n                            // eslint-disable-next-line react/no-array-index-key\r\n                            <div key={index}>\r\n                              <h6>{w.jobTitle}</h6>\r\n                              <h6 className=\"text-muted\">\r\n                                {w.company} | {w.startDate} -{\" \"}\r\n                                {w.endDate === currentYear\r\n                                  ? \"Present\"\r\n                                  : w.endDate}\r\n                                {/* - 1 month */}\r\n                              </h6>\r\n                            </div>\r\n                          ))}\r\n                          {/* <div>\r\n                        <h6>Web Developer(internship)</h6>\r\n                        <h6 className=\"text-muted\">Metaverse | 15th Jun - present - 1 month</h6>\r\n                        </div> */}\r\n                        </CardBody>\r\n                        <Modal\r\n                          isOpen={modalEditExperience}\r\n                          toggle={() =>\r\n                            setModalEditExperience(!modalEditExperience)\r\n                          }\r\n                          className=\"\"\r\n                          size=\"lg\"\r\n                          style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                        >\r\n                          {/* <ModalHeader style={{ borderBottom: 'none' }}>\r\n                    <h2 className=\"font-weight-bold\">Experience</h2>\r\n                  </ModalHeader> */}\r\n                          <ModalBody>\r\n                            <Row className=\"align-items-center mb-3 \">\r\n                              <Col>\r\n                                <h2 className=\"font-weight-bold\">\r\n                                  Edit Experience\r\n                                </h2>\r\n                              </Col>\r\n                              <Col xs=\"auto\" className=\"ml-auto\">\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  outline\r\n                                  className=\"icon-button\"\r\n                                  style={{ border: \"none\" }}\r\n                                  size=\"sm\"\r\n                                  onClick={handleAddWork}\r\n                                >\r\n                                  <span\r\n                                    className=\"text-primary\"\r\n                                    style={{ fontSize: \"24px\" }}\r\n                                  >\r\n                                    +\r\n                                  </span>\r\n                                </Button>\r\n                              </Col>\r\n                            </Row>\r\n                            {/* <p>No education added</p> */}\r\n                            {experienceEditOpen ? (\r\n                              <>\r\n                                <FormGroup className=\"error-l-125\">\r\n                                  <Label for=\"twitterHandle\">Job Title</Label>\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name=\"jobTitle\"\r\n                                    id=\"jobTitle\"\r\n                                    value={newWork.jobTitle}\r\n                                    onChange={(e) => {\r\n                                      const { name, value } = e.target;\r\n                                      setNewWork((prevState) => ({\r\n                                        ...prevState,\r\n                                        [name]: value,\r\n                                      }));\r\n                                    }}\r\n                                  />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"error-l-125\">\r\n                                  <Label for=\"twitterHandle\">\r\n                                    Employment type\r\n                                  </Label>\r\n                                  {/* <Input\r\n                                    type=\"text\"\r\n                                    name=\"employmentType\"\r\n                                    id=\"employmentType\"\r\n                                    value={newWork.employmentType}\r\n                                    // className=\"form-control\"\r\n                                      onChange={(e) => {\r\n                                        const { name, value } = e.target;\r\n                                        setNewWork(prevState => ({\r\n                                          ...prevState, \r\n                                          [name]: value \r\n                                        }));\r\n                                      }}\r\n                                  /> */}\r\n                                  <Input\r\n                                    type=\"select\"\r\n                                    name=\"employmentType\"\r\n                                    id=\"employmentType\"\r\n                                    value={newWork.employmentType}\r\n                                    // className=\"form-control\"\r\n                                    onChange={(e) => {\r\n                                      const { name, value } = e.target;\r\n                                      setNewWork((prevState) => ({\r\n                                        ...prevState,\r\n                                        [name]: value,\r\n                                      }));\r\n                                    }}\r\n                                  >\r\n                                    <option key=\"\" value=\"\" disabled>\r\n                                      Select Employment type\r\n                                    </option>\r\n                                    {EmploymentTypeData.map((option, i) => (\r\n                                      // eslint-disable-next-line react/no-array-index-key\r\n                                      <option key={i} value={option.label}>\r\n                                        {option.label}\r\n                                      </option>\r\n                                    ))}\r\n                                  </Input>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"error-l-125\">\r\n                                  <Label for=\"twitterHandle\">\r\n                                    Company name\r\n                                  </Label>\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name=\"company\"\r\n                                    id=\"company\"\r\n                                    value={newWork.company}\r\n                                    // className=\"form-control\"\r\n                                    onChange={(e) => {\r\n                                      const { name, value } = e.target;\r\n                                      setNewWork((prevState) => ({\r\n                                        ...prevState,\r\n                                        [name]: value,\r\n                                      }));\r\n                                    }}\r\n                                  />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for=\"location\"\r\n                                    className=\"font-weight-medium\"\r\n                                  >\r\n                                    Location\r\n                                  </Label>\r\n                                  {/* <Input\r\n                                    type=\"select\"\r\n                                    name=\"location\"\r\n                                    value={location}\r\n                                    // validate={validateLocation}\r\n                                    onChange={(e) =>\r\n                                      setLocation(e.target.value)\r\n                                    }\r\n                                    className=\"form-control\"\r\n                                  >\r\n                                    <option disabled value=\"\">\r\n                                      Select Location\r\n                                    </option>\r\n                                    {country.map((option) => (\r\n                                      <option\r\n                                        key={option.iso_code}\r\n                                        value={option.iso_code}\r\n                                      >\r\n                                        {option.name}\r\n                                      </option>\r\n                                    ))}\r\n                                  </Input> */}\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name=\"jobLocation\"\r\n                                    id=\"jobLocation\"\r\n                                    value={newWork.jobLocation}\r\n                                    // className=\"form-control\"\r\n                                    onChange={(e) => {\r\n                                      const { name, value } = e.target;\r\n                                      setNewWork((prevState) => ({\r\n                                        ...prevState,\r\n                                        [name]: value,\r\n                                      }));\r\n                                    }}\r\n                                  />\r\n                                </FormGroup>\r\n                                <Row>\r\n                                  <Col>\r\n                                    <FormGroup>\r\n                                      <Label for=\"startDate\">Start year</Label>\r\n\r\n                                      <Input\r\n                                        type=\"select\"\r\n                                        name=\"startDate\"\r\n                                        value={newWork.startDate}\r\n                                        onChange={(e) => {\r\n                                          const { name, value } = e.target;\r\n                                          setNewWork((prevState) => ({\r\n                                            ...prevState,\r\n                                            [name]: value,\r\n                                          }));\r\n                                        }}\r\n                                        className=\"form-control text-one\"\r\n                                      >\r\n                                        <option disabled value=\"\">\r\n                                          Select year\r\n                                        </option>\r\n                                        {years.map((yr) => (\r\n                                          <option key={yr} value={yr}>\r\n                                            {yr}\r\n                                          </option>\r\n                                        ))}\r\n                                      </Input>\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <FormGroup>\r\n                                      <Label for=\"endDate\">End year</Label>\r\n\r\n                                      <Input\r\n                                        type=\"select\"\r\n                                        name=\"endDate\"\r\n                                        value={newWork.endDate}\r\n                                        onChange={(e) => {\r\n                                          const { name, value } = e.target;\r\n                                          setNewWork((prevState) => ({\r\n                                            ...prevState,\r\n                                            [name]: value,\r\n                                          }));\r\n                                        }}\r\n                                        className=\"form-control  text-one\"\r\n                                      >\r\n                                        <option disabled value=\"\">\r\n                                          Select year\r\n                                        </option>\r\n                                        {years.map((yr) => (\r\n                                          <option key={yr} value={yr}>\r\n                                            {currentYear === yr\r\n                                              ? \"Present\"\r\n                                              : yr}\r\n                                          </option>\r\n                                        ))}\r\n                                      </Input>\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                </Row>\r\n\r\n                                <ModalFooter\r\n                                  style={{ borderTop: \"none\" }}\r\n                                  className=\"d-flex align-items-center justify-content-center\"\r\n                                >\r\n                                  <Button\r\n                                    color=\"primary\"\r\n                                    onClick={() => handleSaveWork()}\r\n                                  >\r\n                                    Save\r\n                                  </Button>{\" \"}\r\n                                  <Button\r\n                                    color=\"primary\"\r\n                                    outline\r\n                                    onClick={() => setExperienceEditOpen(false)}\r\n                                    className=\"\"\r\n                                  >\r\n                                    Cancel\r\n                                  </Button>\r\n                                </ModalFooter>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                {work.map((w, index) => (\r\n                                  // eslint-disable-next-line react/no-array-index-key\r\n                                  <Row key={index}>\r\n                                    <Col>\r\n                                      {/* <h2>Dev Ops</h2>\r\n                      <h4>Web Development</h4> */}\r\n                                      {/* eslint-disable-next-line react/no-array-index-key */}\r\n                                      <div key={index}>\r\n                                        <h6>{w.jobTitle}</h6>\r\n                                        <h6 className=\"text-muted\">\r\n                                          {w.company} | {w.startDate}-{\" \"}\r\n                                          {w.endDate === currentYear\r\n                                            ? \"Present\"\r\n                                            : w.endDate}\r\n                                          {/* - 1 month */}\r\n                                        </h6>\r\n                                      </div>\r\n                                    </Col>\r\n                                    <Col className=\"d-flex justify-content-end align-items-center\">\r\n                                      <Button\r\n                                        color=\"primary\"\r\n                                        outline\r\n                                        className=\"icon-button\"\r\n                                        style={{ border: \"none\" }}\r\n                                        size=\"sm\"\r\n                                        onClick={() => handleEditWork(index)}\r\n                                      >\r\n                                        <i className=\"simple-icon-pencil\" />\r\n                                      </Button>\r\n                                    </Col>\r\n                                  </Row>\r\n                                ))}\r\n                              </>\r\n                            )}\r\n                          </ModalBody>\r\n                        </Modal>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"my-4\">\r\n                    <Col>\r\n                      <Card>\r\n                        <CardBody>\r\n                          <Row className=\"align-items-center\">\r\n                            <Col className=\"d-flex justify-content-between\">\r\n                              <h2 className=\"font-weight-bold\">Skills</h2>\r\n                              {!uid && (\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  outline\r\n                                  className=\"icon-button\"\r\n                                  style={{ border: \"none\" }}\r\n                                  size=\"sm\"\r\n                                  onClick={() => setModalEditSkills(true)}\r\n                                >\r\n                                  <i className=\"simple-icon-pencil\" />\r\n                                </Button>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <div\r\n                                className=\"d-flex flex-wrap\"\r\n                                style={{ gap: \"10px\", marginTop: \"10px\" }}\r\n                              >\r\n                                {skills.map((skill, index) => (\r\n                                  <Button\r\n                                    // eslint-disable-next-line react/no-array-index-key\r\n                                    key={index}\r\n                                    color=\"primary\"\r\n                                    outline\r\n                                    size=\"sm\"\r\n                                  >\r\n                                    {skill}\r\n                                  </Button>\r\n                                ))}\r\n                                {/* <Button color=\"primary\" outline size=\"sm\">\r\n                                  CSS\r\n                                </Button> */}\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </CardBody>\r\n\r\n                        <Modal\r\n                          isOpen={modalEditSkills}\r\n                          toggle={() => setModalEditSkills(!modalEditSkills)}\r\n                          className=\"\"\r\n                          size=\"lg\"\r\n                          style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                        >\r\n                          <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                            <h2 className=\"font-weight-bold\">Skills</h2>\r\n                          </ModalHeader>\r\n                          <ModalBody>\r\n                            <Row className=\"w-100 mb-3\">\r\n                              <Col>\r\n                                <InputGroup className=\"mb-3\">\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    placeholder=\"New skill\"\r\n                                    value={newInputSkill}\r\n                                    onChange={(e) =>\r\n                                      setNewInputSkill(e.target.value)\r\n                                    }\r\n                                    onKeyDown={(event) => {\r\n                                      if (event.key === \"Enter\") {\r\n                                        handleAddSkill(newInputSkill);\r\n                                        setNewInputSkill(\"\");\r\n                                      }\r\n                                    }}\r\n                                  />\r\n                                  {/* <InputGroupAddon addonType=\"append\">\r\n                                <Button\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    handleAddSkill(newInputSkill);\r\n                                    setNewInputSkill(\"\");\r\n                                  }}\r\n                                >\r\n                                  Add Skill\r\n                                </Button>\r\n                              </InputGroupAddon> */}\r\n                                  <Button\r\n                                    className=\"ml-2\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => {\r\n                                      handleAddSkill(newInputSkill);\r\n                                      setNewInputSkill(\"\");\r\n                                    }}\r\n                                  >\r\n                                    Add skill\r\n                                  </Button>\r\n                                </InputGroup>\r\n                              </Col>\r\n                              {skillValidationMessage && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {skillValidationMessage}\r\n                                </div>\r\n                              )}\r\n                              {/* <Col md={2}>\r\n                                <Button color=\"primary\" className=\"w-100\">\r\n                                  Add skill\r\n                                </Button>\r\n                              </Col> */}\r\n                            </Row>\r\n                            <Row>\r\n                              <ReactSortable\r\n                                list={skills}\r\n                                setList={setSkills}\r\n                                options={{ handle: \".handle\" }}\r\n                                className=\"d-flex flex-wrap ml-2\"\r\n                              >\r\n                                {skills.map((skill, index) => (\r\n                                  <Button\r\n                                    // eslint-disable-next-line react/no-array-index-key\r\n                                    key={index}\r\n                                    outline={index >= 3}\r\n                                    color=\"light\"\r\n                                    // color={index < 3 ? 'primary' : 'light'}\r\n                                    className=\"ml-2 font-weight-semibold mx-2 d-flex align-items-center text-dark\"\r\n                                    size=\"sm\"\r\n                                    onClick={() => handleRemoveSkill(index)}\r\n                                  >\r\n                                    {skill}\r\n                                    <i className=\"iconsminds-close ml-2 text-dark\" />\r\n                                  </Button>\r\n                                ))}\r\n                              </ReactSortable>\r\n                              {/* <p className=\"ml-3 text-muted mt-3\">Drag skills to set top 3 (the top 3 skills will be displayed on mentor cards)</p> */}\r\n                            </Row>\r\n                          </ModalBody>\r\n\r\n                          <ModalFooter\r\n                            style={{ borderTop: \"none\" }}\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              onClick={() => handleSkillsSave()}\r\n                            >\r\n                              Save\r\n                            </Button>{\" \"}\r\n                            <Button\r\n                              color=\"primary\"\r\n                              outline\r\n                              onClick={() => setModalEditSkills(false)}\r\n                              className=\"\"\r\n                            >\r\n                              Cancel\r\n                            </Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"my-4\">\r\n                    <Col>\r\n                      <Card>\r\n                        <CardBody>\r\n                          <Row className=\"align-items-center\">\r\n                            <Col className=\"d-flex justify-content-between\">\r\n                              <h2 className=\"font-weight-bold\">\r\n                                Certifications{\" \"}\r\n                              </h2>\r\n                              {!uid && (\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  outline\r\n                                  className=\"icon-button\"\r\n                                  style={{ border: \"none\" }}\r\n                                  size=\"sm\"\r\n                                  onClick={() =>\r\n                                    setModalEditCertifications(true)\r\n                                  }\r\n                                >\r\n                                  <i className=\"simple-icon-pencil\" />\r\n                                </Button>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <div\r\n                                className=\"d-flex flex-wrap\"\r\n                                style={{ gap: \"10px\", marginTop: \"10px\" }}\r\n                              >\r\n                                {certifications.length > 0 ? (\r\n                                  <>\r\n                                    {certifications.map(\r\n                                      (certification, index) => (\r\n                                        <Button\r\n                                          // eslint-disable-next-line react/no-array-index-key\r\n                                          key={index}\r\n                                          color=\"primary\"\r\n                                          outline\r\n                                          size=\"sm\"\r\n                                        >\r\n                                          {certification}\r\n                                        </Button>\r\n                                      )\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <span>\r\n                                    There are no certifications. Please add new\r\n                                    certifications.\r\n                                  </span>\r\n                                )}\r\n                                {/* <Button color=\"primary\" outline size=\"sm\">\r\n                                  CSS\r\n                                </Button> */}\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </CardBody>\r\n\r\n                        <Modal\r\n                          isOpen={modalEditCertifications}\r\n                          toggle={() =>\r\n                            setModalEditCertifications(!modalEditCertifications)\r\n                          }\r\n                          className=\"\"\r\n                          size=\"lg\"\r\n                          style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                        >\r\n                          <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                            <h2 className=\"font-weight-bold\">Certifications</h2>\r\n                          </ModalHeader>\r\n                          <ModalBody>\r\n                            <Row className=\"w-100 mb-3\">\r\n                              <Col>\r\n                                <InputGroup className=\"mb-3\">\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    placeholder=\"New Certification\"\r\n                                    value={newInputCertifications}\r\n                                    onChange={(e) =>\r\n                                      setNewInputCertifications(e.target.value)\r\n                                    }\r\n                                    onKeyDown={(event) => {\r\n                                      if (event.key === \"Enter\") {\r\n                                        handleAddCertifications(\r\n                                          newInputCertifications\r\n                                        );\r\n                                        setNewInputCertifications(\"\");\r\n                                      }\r\n                                    }}\r\n                                  />\r\n                                  {/* <InputGroupAddon addonType=\"append\">\r\n                                    <Button\r\n                                      outline\r\n                                      color=\"primary\"\r\n                                      onClick={() => {\r\n                                        handleAddCertifications(\r\n                                          newInputCertifications\r\n                                        );\r\n                                        setNewInputCertifications(\"\");\r\n                                      }}\r\n                                    >\r\n                                      Add Certification\r\n                                    </Button>\r\n                                  </InputGroupAddon> */}\r\n                                  <Button\r\n                                    className=\"ml-2\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => {\r\n                                      handleAddCertifications(\r\n                                        newInputCertifications\r\n                                      );\r\n                                      setNewInputCertifications(\"\");\r\n                                    }}\r\n                                  >\r\n                                    Add Certification\r\n                                  </Button>\r\n                                </InputGroup>\r\n                              </Col>\r\n                              {certificationsValidationMessage && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {certificationsValidationMessage}\r\n                                </div>\r\n                              )}\r\n                              {/* <Col md={2}>\r\n                                <Button color=\"primary\" className=\"w-100\">\r\n                                  Add skill\r\n                                </Button>\r\n                              </Col> */}\r\n                            </Row>\r\n                            <Row>\r\n                              <ReactSortable\r\n                                list={certifications}\r\n                                setList={setCertifications}\r\n                                options={{ handle: \".handle\" }}\r\n                                className=\"d-flex flex-wrap ml-2\"\r\n                              >\r\n                                {certifications.map((certification, index) => (\r\n                                  <Button\r\n                                    // eslint-disable-next-line react/no-array-index-key\r\n                                    key={index}\r\n                                    outline={index >= 3}\r\n                                    color=\"light\"\r\n                                    // color={index < 3 ? 'primary' : 'light'}\r\n                                    className=\"ml-2 font-weight-semibold mx-2 d-flex align-items-center text-dark\"\r\n                                    size=\"sm\"\r\n                                    onClick={() =>\r\n                                      handleRemoveCertifications(index)\r\n                                    }\r\n                                  >\r\n                                    {certification}\r\n                                    <i className=\"iconsminds-close ml-2 text-dark\" />\r\n                                  </Button>\r\n                                ))}\r\n                              </ReactSortable>\r\n                              {/* <p className=\"ml-3 text-muted mt-3\">Drag skills to set top 3 (the top 3 skills will be displayed on mentor cards)</p> */}\r\n                            </Row>\r\n                          </ModalBody>\r\n\r\n                          <ModalFooter\r\n                            style={{ borderTop: \"none\" }}\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              onClick={() => handleCertificationsSave()}\r\n                            >\r\n                              Save\r\n                            </Button>{\" \"}\r\n                            <Button\r\n                              color=\"primary\"\r\n                              outline\r\n                              onClick={() => setModalEditCertifications(false)}\r\n                              className=\"\"\r\n                            >\r\n                              Cancel\r\n                            </Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"my-4\">\r\n                    <Col>\r\n                      <Card>\r\n                        <CardBody>\r\n                          <Row className=\"align-items-center\">\r\n                            <Col className=\"d-flex justify-content-between\">\r\n                              <h2 className=\"font-weight-bold\">Education</h2>\r\n                              {!uid && (\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  outline\r\n                                  className=\"icon-button\"\r\n                                  style={{ border: \"none\" }}\r\n                                  size=\"sm\"\r\n                                  onClick={() => setModalEditEducation(true)}\r\n                                >\r\n                                  <i className=\"simple-icon-pencil\" />\r\n                                </Button>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                          {education.map((e, index) => (\r\n                            // eslint-disable-next-line react/no-array-index-key\r\n                            <div key={index}>\r\n                              <div className=\"my-3\">\r\n                                <h6>{e.college}</h6>\r\n                                <h6 className=\"text-muted\">\r\n                                  {e.degree} | {e.department} | {e.year}\r\n                                </h6>\r\n                              </div>\r\n                              {/* <div className=\"my-3\">\r\n                          <h6>MRS College</h6>\r\n                          <h6 className=\"text-muted\">B.sc Computer Application | 2022-2023</h6>\r\n                        </div>\r\n                        <div className=\"my-3\">\r\n                          <h6>HHS School</h6>\r\n                          <h6 className=\"text-muted\">Higher Secondary | 2016-2018</h6>\r\n                        </div> */}\r\n                            </div>\r\n                          ))}\r\n                        </CardBody>\r\n                        <Modal\r\n                          isOpen={modalEditEducation}\r\n                          toggle={() =>\r\n                            setModalEditEducation(!modalEditEducation)\r\n                          }\r\n                          className=\"\"\r\n                          size=\"lg\"\r\n                          style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                        >\r\n                          {/* <ModalHeader className=\"\" style={{ borderBottom: 'none' }}> */}\r\n\r\n                          {/* </ModalHeader> */}\r\n\r\n                          <ModalBody>\r\n                            <Row className=\"align-items-center mb-3 \">\r\n                              <Col>\r\n                                <h2 className=\"font-weight-bold\">Education</h2>\r\n                              </Col>\r\n                              <Col xs=\"auto\" className=\"ml-auto\">\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  outline\r\n                                  className=\"icon-button\"\r\n                                  style={{ border: \"none\" }}\r\n                                  size=\"sm\"\r\n                                  onClick={handleAddEducation}\r\n                                >\r\n                                  <span\r\n                                    className=\"text-primary\"\r\n                                    style={{ fontSize: \"24px\" }}\r\n                                  >\r\n                                    +\r\n                                  </span>\r\n                                </Button>\r\n                              </Col>\r\n                            </Row>\r\n                            {/* <p>No education added</p> */}\r\n                            {educationEditOpen ? (\r\n                              <>\r\n                                <FormGroup className=\"error-l-125\">\r\n                                  <Label for=\"twitterHandle\">School</Label>\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name=\"college\"\r\n                                    id=\"college\"\r\n                                    value={newEducation.college}\r\n                                    onChange={(e) => {\r\n                                      const { name, value } = e.target;\r\n                                      setNewEducation((prevState) => ({\r\n                                        ...prevState,\r\n                                        [name]: value,\r\n                                      }));\r\n                                    }}\r\n                                    // className=\"form-control\"\r\n                                  />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"error-l-125\">\r\n                                  <Label for=\"twitterHandle\">Degree</Label>\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name=\"degree\"\r\n                                    id=\"degree\"\r\n                                    // className=\"form-control\"\r\n                                    value={newEducation.degree}\r\n                                    onChange={(e) => {\r\n                                      const { name, value } = e.target;\r\n                                      setNewEducation((prevState) => ({\r\n                                        ...prevState,\r\n                                        [name]: value,\r\n                                      }));\r\n                                    }}\r\n                                  />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"error-l-125\">\r\n                                  <Label for=\"twitterHandle\">Field study</Label>\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name=\"department\"\r\n                                    id=\"department\"\r\n                                    // className=\"form-control\"\r\n                                    value={newEducation.department}\r\n                                    onChange={(e) => {\r\n                                      const { name, value } = e.target;\r\n                                      setNewEducation((prevState) => ({\r\n                                        ...prevState,\r\n                                        [name]: value,\r\n                                      }));\r\n                                    }}\r\n                                  />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                  <Label for=\"location\" className=\"text-muted\">\r\n                                    <h4>End year</h4>\r\n                                  </Label>\r\n\r\n                                  <Input\r\n                                    type=\"select\"\r\n                                    name=\"year\"\r\n                                    value={newEducation.year}\r\n                                    onChange={(e) => {\r\n                                      const { name, value } = e.target;\r\n                                      setNewEducation((prevState) => ({\r\n                                        ...prevState,\r\n                                        [name]: value,\r\n                                      }));\r\n                                    }}\r\n                                    className=\"form-control  text-one\"\r\n                                  >\r\n                                    {/* <option disabled value=\"\">\r\n                                  Select Location\r\n                                </option> */}\r\n                                    {years.map((yr) => (\r\n                                      <option key={yr} value={yr}>\r\n                                        {yr}\r\n                                      </option>\r\n                                    ))}\r\n                                  </Input>\r\n                                </FormGroup>\r\n\r\n                                <ModalFooter\r\n                                  style={{ borderTop: \"none\" }}\r\n                                  className=\"d-flex align-items-center justify-content-center\"\r\n                                >\r\n                                  <Button\r\n                                    color=\"primary\"\r\n                                    onClick={handleSaveEducation}\r\n                                  >\r\n                                    Save\r\n                                  </Button>{\" \"}\r\n                                  <Button\r\n                                    color=\"primary\"\r\n                                    outline\r\n                                    onClick={() => handleEducationCancel()}\r\n                                    className=\"\"\r\n                                  >\r\n                                    Cancel\r\n                                  </Button>\r\n                                </ModalFooter>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                {education.map((e, index) => (\r\n                                  // eslint-disable-next-line react/no-array-index-key\r\n                                  <Row key={index}>\r\n                                    <Col>\r\n                                      <div className=\"my-3\">\r\n                                        <h6>{e.college}</h6>\r\n                                        <h6 className=\"text-muted\">\r\n                                          {e.degree} | {e.department} | {e.year}\r\n                                        </h6>\r\n                                      </div>\r\n                                    </Col>\r\n                                    <Col className=\"d-flex justify-content-end align-items-center\">\r\n                                      <Button\r\n                                        color=\"primary\"\r\n                                        outline\r\n                                        className=\"icon-button\"\r\n                                        style={{ border: \"none\" }}\r\n                                        size=\"sm\"\r\n                                        onClick={() =>\r\n                                          handleEditEducation(index)\r\n                                        }\r\n                                      >\r\n                                        <i className=\"simple-icon-pencil\" />\r\n                                      </Button>\r\n                                    </Col>\r\n                                  </Row>\r\n                                ))}\r\n                              </>\r\n                            )}\r\n                          </ModalBody>\r\n                        </Modal>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"my-4\">\r\n                    <Col>\r\n                      <Card>\r\n                        <CardBody>\r\n                          <Row className=\"align-items-center\">\r\n                            <Col className=\"d-flex justify-content-between\">\r\n                              <h2 className=\"font-weight-bold\">Languages</h2>\r\n                              {!uid && (\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  outline\r\n                                  className=\"icon-button\"\r\n                                  style={{ border: \"none\" }}\r\n                                  size=\"sm\"\r\n                                  onClick={() => setModalEditLanguage(true)}\r\n                                >\r\n                                  <i className=\"simple-icon-pencil\" />\r\n                                </Button>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                          <div className=\"\">\r\n                            <div className=\"\">\r\n                              {/* <ul className=\"text-one text-muted font-weight-bold d-flex flex-wrap p-0 mx-3 text-start\" \r\n                            style={{gap:\"30px\"}}>\r\n                            {languages.map((lang,index) => (\r\n                                // eslint-disable-next-line react/no-array-index-key\r\n                              <li key={index} className=\"\">\r\n                              {language.find((l) => l.iso_code === lang)?.name}{\" \"}\r\n                              </li>\r\n                          ))}\r\n                            </ul> */}\r\n                              <ul\r\n                                className=\"text-one text-muted font-weight-bold d-flex flex-wrap p-0 mx-3 text-start\"\r\n                                style={{\r\n                                  gap: \"30px\",\r\n                                  listStyle: \"none\",\r\n                                  paddingLeft: 0,\r\n                                }}\r\n                              >\r\n                                {languages.map((lang, index) => (\r\n                                  <li\r\n                                    // eslint-disable-next-line react/no-array-index-key\r\n                                    key={index}\r\n                                    style={{\r\n                                      position: \"relative\",\r\n                                      paddingLeft: \"20px\",\r\n                                    }}\r\n                                  >\r\n                                    <span\r\n                                      style={{\r\n                                        content: '\"\"',\r\n                                        position: \"absolute\",\r\n                                        left: 0,\r\n                                        top: \"50%\",\r\n                                        transform:\r\n                                          \"translateY(-50%) rotate(45deg)\",\r\n                                        width: \"7px\",\r\n                                        height: \"7px\",\r\n                                        backgroundColor: \"currentColor\",\r\n                                      }}\r\n                                    />\r\n                                    {\r\n                                      language.find((l) => l.iso_code === lang)\r\n                                        ?.name\r\n                                    }{\" \"}\r\n                                  </li>\r\n                                ))}\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </CardBody>\r\n                        <Modal\r\n                          isOpen={modalEditLanguage}\r\n                          toggle={() =>\r\n                            setModalEditLanguage(!modalEditLanguage)\r\n                          }\r\n                          className=\"\"\r\n                          size=\"lg\"\r\n                          style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                        >\r\n                          <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                            <h2 className=\"font-weight-bold\">Languages</h2>\r\n                          </ModalHeader>\r\n                          <ModalBody>\r\n                            <>\r\n                              <FormGroup className=\"error-l-75\">\r\n                                <Select\r\n                                  placeholder=\"Select Languages\"\r\n                                  name=\"languages\"\r\n                                  isMulti\r\n                                  options={languageOptions}\r\n                                  className=\"react-select\"\r\n                                  classNamePrefix=\"react-select\"\r\n                                  value={selectedLanguages}\r\n                                  onChange={(selectedOptions) => {\r\n                                    setSelectedLanguages(selectedOptions);\r\n                                    handleChange(selectedOptions);\r\n                                  }}\r\n                                />\r\n                              </FormGroup>\r\n                              {languages.map((lang, index) => (\r\n                                <Button\r\n                                  // eslint-disable-next-line react/no-array-index-key\r\n                                  key={index}\r\n                                  outline\r\n                                  color=\"primary\"\r\n                                  className=\"mt-2 font-weight-semibold mx-2\"\r\n                                  size=\"sm\"\r\n                                  onClick={() => handleRemoveLanguages(index)}\r\n                                >\r\n                                  {\r\n                                    language.find((l) => l.iso_code === lang)\r\n                                      ?.name\r\n                                  }{\" \"}\r\n                                  <i className=\"iconsminds-close\" />\r\n                                </Button>\r\n                              ))}\r\n                            </>\r\n                          </ModalBody>\r\n                          <ModalFooter\r\n                            style={{ borderTop: \"none\" }}\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              onClick={() => handleLanguageSave()}\r\n                            >\r\n                              Save\r\n                            </Button>{\" \"}\r\n                            <Button\r\n                              color=\"primary\"\r\n                              outline\r\n                              onClick={() => setModalEditLanguage(false)}\r\n                              className=\"\"\r\n                            >\r\n                              Cancel\r\n                            </Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </Colxx>\r\n    </div>\r\n\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default MyProfile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, NavLink, Row, Col, Card } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport country from \"../my-login/Country\";\r\n\r\nconst UserProfile = () => {\r\n  const { uid } = useParams();\r\n\r\n  const [image, setImage] = useState(null);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [jobTitle, setJobTitle] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [linkedinUrl, setLinkedinUrl] = useState(\"\");\r\n  const [twitterHandle, setTwitterHandle] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [profileData, setProfileData] = useState(false);\r\n  const url = `${baseUrl}/api/userprofile/profile/${uid}`;\r\n\r\n  useEffect(() => {\r\n    const mentorProfileDetails = async () => {\r\n      try {\r\n        const response = await axios.get(url);\r\n        const userData = response.data;\r\n        if (userData) {\r\n          setImage(userData.imageUrl);\r\n          setFirstName(userData.firstName);\r\n          setLastName(userData.lastName);\r\n          setJobTitle(userData.jobTitle);\r\n          setLocation(userData.location);\r\n          setLinkedinUrl(userData.linkedIn);\r\n          setTwitterHandle(userData.twitterHandle);\r\n          setLoading(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n          setLoading(false);\r\n        }, 4000);\r\n        setProfileData(true);\r\n      }\r\n    };\r\n\r\n    mentorProfileDetails();\r\n  }, []);\r\n\r\n  const handleLinkedInClick = () => {\r\n    if (linkedinUrl) {\r\n      window.open(linkedinUrl, \"_blank\");\r\n    }\r\n  };\r\n\r\n  const handleTwitterClick = () => {\r\n    if (twitterHandle) {\r\n      const twitterUrl = `https://x.com/${twitterHandle}`;\r\n      window.open(twitterUrl, \"_blank\");\r\n    }\r\n  };\r\n\r\n  const countryName = country.find((c) => c.iso_code === location)?.name;\r\n  return (\r\n    <div className=\"mentor-profile\">\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"\">\r\n        <div className=\"\">\r\n          <Card\r\n            style={{ height: \"160px\", width: \"100%\", overflow: \"hidden\" }}\r\n            className=\"bg-primary\"\r\n          >\r\n            <div\r\n              className=\"d-flex align-items-center justify-content-between\"\r\n              style={{ height: \"100%\" }}\r\n            >\r\n              <div className=\"d-flex align-items-center mt-4 ml-4 mb-4\">\r\n                {image === null ? (\r\n                  <ThumbnailLetters\r\n                    // small\r\n                    rounded\r\n                    text={firstName}\r\n                    className=\"mx-2\"\r\n                    color=\"secondary\"\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src={`${baseUrl}/${image}`}\r\n                    // src=\"/assets/img/profiles/2.jpg\"\r\n                    className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                    style={{\r\n                      width: \"110px\",\r\n                      height: \"110px\",\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                    alt=\"img\"\r\n                  />\r\n                )}\r\n                <div className=\"ml-4 mt-2\">\r\n                  <h1 className=\"font-weight-semibold text-large\">\r\n                    {firstName} {lastName}\r\n                  </h1>\r\n                </div>\r\n              </div>\r\n              <div className=\"mr-4\">\r\n                {linkedinUrl && (\r\n                  <NavLink className=\"d-none d-md-inline-block\">\r\n                    <Button\r\n                      color=\"light\"\r\n                      className=\"font-weight-semibold icon-button\"\r\n                      size=\"large\"\r\n                      onClick={handleLinkedInClick}\r\n                    >\r\n                      <i className=\"simple-icon-social-linkedin text-primary font-weight-semibold text-one\" />\r\n                    </Button>\r\n                  </NavLink>\r\n                )}\r\n                {twitterHandle && (\r\n                  <NavLink className=\"d-none d-md-inline-block\">\r\n                    <Button\r\n                      color=\"light\"\r\n                      className=\"font-weight-semibold icon-button\"\r\n                      size=\"large\"\r\n                      onClick={handleTwitterClick}\r\n                    >\r\n                      <i className=\"simple-icon-social-twitter text-primary font-weight-semibold text-one\" />\r\n                    </Button>\r\n                  </NavLink>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Card>\r\n          {loading ? (\r\n            <div className=\"loading\" />\r\n          ) : (\r\n            <>\r\n              {profileData ? (\r\n                <div className=\"text-center mt-4\">\r\n                  <i className=\"simple-icon-exclamation display-4\" />\r\n                  <h4 className=\"mt-4\">\r\n                    Failed to fetch profile data from server{\" \"}\r\n                  </h4>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <Row>\r\n                    <Col lg=\"6\" md=\"12\" className=\"mt-4\">\r\n                      <div>\r\n                        <div className=\"ml-3\">\r\n                          {/* <h1 className=\"font-weight-semibold text-large\">\r\n                                  {firstName} {lastName}\r\n                                </h1> */}\r\n                          <h3 className=\"font-weight-semibold\">\r\n                            <i className=\"simple-icon-briefcase text-primary\" />\r\n                            <span className=\"ml-2\">{jobTitle}</span>\r\n                          </h3>\r\n                          <h5 className=\"font-weight-medium\">\r\n                            <i className=\"simple-icon-location-pin text-primary\" />\r\n                            <span className=\"ml-2 font-weight-medium\">\r\n                              {countryName}\r\n                            </span>\r\n                          </h5>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button, Card, CardBody, Row } from \"reactstrap\";\r\nimport MentorFilter from \"../mentorship/MentorFilter\";\r\n\r\nconst StudentList = () => {\r\n  const [studentListData, setStudentListData] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [paginationMeta, setPaginationMeta] = useState([]);\r\n  const [isStudentCardFetched, setIsStudentCardFetched] = useState(false);\r\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\r\n  const [selectedSkills, setSelectedSkills] = useState([]);\r\n  const handleLocationChange = (location) => setSelectedLocation(location);\r\n  const handleSkillsChange = (skills) => setSelectedSkills(skills);\r\n\r\n  const [inputkey, setInputKey] = useState(\"\");\r\n\r\n  const url = `${baseUrl}/api/userprofile/cards`;\r\n\r\n  useEffect(() => {\r\n    setIsStudentCardFetched(false);\r\n    const getStudentData = async () => {\r\n      const params = {};\r\n      params.size = 10;\r\n      params.page = currentPage - 1;\r\n\r\n      if (selectedLocation) {\r\n        params.location = selectedLocation;\r\n      }\r\n      if (selectedSkills) {\r\n        params.skills = selectedSkills;\r\n      }\r\n      try {\r\n        const response = await axios.get(url, { params });\r\n        setStudentListData(response.data.data);\r\n        setPaginationMeta(response.data.paginationMeta);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setIsStudentCardFetched(true);\r\n      }\r\n    };\r\n    getStudentData();\r\n  }, [selectedLocation, inputkey]);\r\n  return (\r\n    <div>\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n        <div>\r\n          <div className=\"\">\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group\">\r\n                <div\r\n                  style={{ position: \"relative\" }}\r\n                  className=\"col-12 col-lg-8 col-md-8\"\r\n                >\r\n                  <i\r\n                    className=\"simple-icon-magnifier mr-3\"\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: \"50%\",\r\n                      right: \"15px\",\r\n                      transform: \"translateY(-50%)\",\r\n                      zIndex: 2,\r\n                      color: \"#aaa\",\r\n                    }}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control rounded py-2\"\r\n                    placeholder=\"Search by name\"\r\n                    value={inputkey}\r\n                    onChange={(e) => setInputKey(e.target.value)}\r\n                    style={{ paddingRight: \"2.5rem\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <MentorFilter\r\n                onLocationChange={handleLocationChange}\r\n                selectedLocation={selectedLocation}\r\n                selectedSkills={selectedSkills}\r\n                onSkillsChange={handleSkillsChange}\r\n                userRole=\"user\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Colxx>\r\n\r\n      {isStudentCardFetched ? (\r\n        <div className=\"loading\" />\r\n      ) : (\r\n        <>\r\n          <div>\r\n            {studentListData.length === 0 ? (\r\n              <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n                <Card>\r\n                  <CardBody>\r\n                    <h2 className=\"text-center text-large \">No Students</h2>\r\n                  </CardBody>\r\n                </Card>\r\n              </Colxx>\r\n            ) : (\r\n              Array.isArray(studentListData) &&\r\n              studentListData.map((students) => {\r\n                return (\r\n                  <Colxx xxs=\"12\" key={students}>\r\n                    <Row>\r\n                      <Colxx\r\n                        sm=\"12\"\r\n                        md=\"12\"\r\n                        lg=\"9\"\r\n                        xxs=\"12\"\r\n                        className=\"mx-auto\"\r\n                      >\r\n                        <Card\r\n                          className=\"flex-row flex-wrap flex-sm-nowrap listing-card-container my-3 p-3\"\r\n                          style={{ gap: \"16px\" }}\r\n                        >\r\n                          <div className=\"d-block lawyer-card-img-container\">\r\n                            {students.imageUrl === null ? (\r\n                              <div\r\n                                className=\"card-img-left bg-primary \r\n                                 d-flex align-items-center justify-content-center\"\r\n                                style={{\r\n                                  width: \"200px\",\r\n                                  height: \"250px\",\r\n                                  borderRadius: \"0.75rem\",\r\n                                }}\r\n                              >\r\n                                <ThumbnailLetters\r\n                                  rounded\r\n                                  text={students.firstName}\r\n                                  className=\"text-xlarge border border-1\"\r\n                                  style={{\r\n                                    textAlign: \"center\",\r\n                                  }}\r\n                                />\r\n                              </div>\r\n                            ) : (\r\n                              <img\r\n                                className=\"lawyer-card-width\"\r\n                                src={`${baseUrl}/${students.imageUrl}`}\r\n                                alt=\"Card\"\r\n                                style={{\r\n                                  width: \"200px\",\r\n                                  height: \"250px\",\r\n                                  borderRadius: \"0.75rem\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <CardBody className=\"d-flex flex-column flex-fill p-0\">\r\n                            <div\r\n                              className=\"d-flex flex-wrap justify-content-between mb-1\"\r\n                              style={{ columnGap: \"24px\" }}\r\n                            >\r\n                              <div\r\n                                className=\"d-flex flex-wrap\"\r\n                                style={{ gap: \"10px\" }}\r\n                              >\r\n                                <div className=\"font-weight-semibold text-large text-capitalize\">\r\n                                  {students.firstName}\r\n                                </div>\r\n                                <div className=\"font-weight-semibold text-large text-capitalize\">\r\n                                  {students.lastName}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-between align-items\">\r\n                              <div className=\"\">\r\n                                <h6>\r\n                                  {students.department} | {students.year}\r\n                                </h6>\r\n                                <h6>{students.college}</h6>\r\n                              </div>\r\n                              <div\r\n                                className=\"d-flex flex-column \"\r\n                                style={{ gap: \"10px\" }}\r\n                              >\r\n                                <a\r\n                                  href={`/app/studentprofile/${students.id}`}\r\n                                  target=\"_blank\"\r\n                                  rel=\"noopener noreferrer\"\r\n                                >\r\n                                  <Button color=\"primary\">View Profile</Button>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                          </CardBody>\r\n                        </Card>\r\n                      </Colxx>\r\n                    </Row>\r\n                  </Colxx>\r\n                );\r\n              })\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {isStudentCardFetched && (\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPage={paginationMeta.totalPage}\r\n          onChangePage={(i) => setCurrentPage(i)}\r\n          lastIsActive={paginationMeta.last}\r\n          firstIsActive={paginationMeta.first}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentList;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { adminRoot, baseUrl } from \"constants/defaultValues\";\r\nimport { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Row } from \"reactstrap\";\r\n\r\nconst StudentViewProfile = () => {\r\n  const [studentProfileDetails, setStudentProfileDetails] = useState(\"\");\r\n  const [education, setEducation] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const { sid } = useParams();\r\n\r\n  const history = useHistory();\r\n  const url = `${baseUrl}/api/userprofile/profile/${sid}`;\r\n\r\n  useEffect(() => {\r\n    const StudentProfileDetails = async () => {\r\n      try {\r\n        const response = await axios.get(url);\r\n        setStudentProfileDetails(response.data);\r\n        setEducation(response.data.education);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    StudentProfileDetails();\r\n  }, []);\r\n\r\n  const [showAll, setShowAll] = useState(false);\r\n  const skillsSectionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (showAll && skillsSectionRef.current) {\r\n      skillsSectionRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [showAll]);\r\n\r\n  const scrollToSkills = useCallback(() => {\r\n    const yOffset = -60;\r\n\r\n    if (skillsSectionRef.current) {\r\n      const y =\r\n        skillsSectionRef.current.getBoundingClientRect().top +\r\n        window.pageYOffset +\r\n        yOffset;\r\n      window.scrollTo({ top: y, behavior: \"smooth\" });\r\n      return;\r\n    }\r\n\r\n    const element = document.getElementById(\"skillsSection\");\r\n    if (element) {\r\n      const y =\r\n        element.getBoundingClientRect().top + window.pageYOffset + yOffset;\r\n      window.scrollTo({ top: y, behavior: \"smooth\" });\r\n    } else {\r\n      console.error(\"unable to scroll\");\r\n    }\r\n  }, []);\r\n\r\n  const toggleShowAll = useCallback(() => {\r\n    setShowAll((prevShowAll) => !prevShowAll);\r\n\r\n    setTimeout(scrollToSkills, 100);\r\n  }, [scrollToSkills]);\r\n\r\n  const remainingSkillsCount = studentProfileDetails.skills\r\n    ? studentProfileDetails.skills.length - 3\r\n    : 0;\r\n\r\n  const chatUserId = studentProfileDetails.username;\r\n\r\n  const handleChatClick = () => {\r\n    history.push(`${adminRoot}/chat/${chatUserId}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <div className=\"loading\" />\r\n      ) : (\r\n        <div>\r\n          <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"\">\r\n            <div className=\"\">\r\n              <Row className=\"h-100\">\r\n                <div className=\"w-100 py-3 position-relative bg-primary d-flex justify-content-between align-items-center\">\r\n                  <div className=\"d-flex align-items-center \">\r\n                    {studentProfileDetails.userPhotoUrl == null ? (\r\n                      <div\r\n                        style={{\r\n                          width: \"110px\",\r\n                          height: \"110px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                        className=\"mx-2 rounded-circle border img-thumbnail\"\r\n                      >\r\n                        <ThumbnailLetters\r\n                          rounded\r\n                          small\r\n                          text={studentProfileDetails.firstName}\r\n                          className=\"w-100 h-100\"\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <img\r\n                        src={`${baseUrl}/${studentProfileDetails.userPhotoUrl}`}\r\n                        className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                        alt=\"\"\r\n                        style={{\r\n                          width: \"110px\",\r\n                          height: \"110px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-sm-5 mt-4 \">\r\n                  <h1 className=\"font-weight-semibold text-large\">\r\n                    {studentProfileDetails.firstName}{\" \"}\r\n                    {studentProfileDetails.lastName}\r\n                  </h1>\r\n                  {education &&\r\n                    education.map((edc) => {\r\n                      return (\r\n                        <div key={edc}>\r\n                          <h2>\r\n                            {edc.department} | {edc.year}\r\n                          </h2>\r\n                          <h5>{edc.college}</h5>\r\n                        </div>\r\n                      );\r\n                    })}\r\n\r\n                  <h5 className=\"font-weight-medium\">\r\n                    <i className=\"simple-icon-location-pin text-primary\" />\r\n                    <span className=\"ml-2\">\r\n                      {studentProfileDetails.location}\r\n                    </span>\r\n                  </h5>\r\n                  <div className=\" my-2\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      className=\"\"\r\n                      onClick={handleChatClick}\r\n                    >\r\n                      Chat\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-sm-7 mt-4\">\r\n                  <h2 className=\"mx-2 \">Skills</h2>\r\n\r\n                  {/* <div className='d-flex'>\r\n              {mentorprofiledetails.skills&&mentorprofiledetails.skills.map((skill)=>{\r\n               \r\n                \r\n               return (\r\n               \r\n\r\n                <div  key={skill}>\r\n                <Button color=\"light\" className=\"mb-2 font-weight-semibold mx-2\" size='xs'>\r\n                {skill}\r\n              </Button>\r\n                </div>\r\n               )\r\n              })}\r\n            </div> */}\r\n                  <div className=\"d-flex align-items-center\">\r\n                    {/* <h2 className=\"mx-2\">Skills</h2> */}\r\n                    <div className=\"d-flex\">\r\n                      {studentProfileDetails.skills &&\r\n                        studentProfileDetails.skills\r\n                          .slice(0, 3)\r\n                          .map((skill) => (\r\n                            <div key={skill}>\r\n                              <Button\r\n                                color=\"light\"\r\n                                className=\"mb-2 font-weight-semibold mx-2\"\r\n                                size=\"xs\"\r\n                              >\r\n                                {skill}\r\n                              </Button>\r\n                            </div>\r\n                          ))}\r\n                    </div>\r\n                    {studentProfileDetails.skills &&\r\n                      studentProfileDetails.skills.length > 3 && (\r\n                        <div className=\"\">\r\n                          <Button\r\n                            color=\"link\"\r\n                            className=\"text-one font-weight-bold \"\r\n                            style={{ textDecoration: \"underline\" }}\r\n                            onClick={toggleShowAll}\r\n                          >\r\n                            + {remainingSkillsCount}more\r\n                          </Button>\r\n                        </div>\r\n                      )}\r\n                  </div>\r\n                </div>\r\n              </Row>\r\n              <hr />\r\n              <Colxx className='sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" mt-5'>\r\n                <Row>\r\n                  <div className=\"w-100 \">\r\n                    <h1 className=\"font-weight-semibold text-large\">About</h1>\r\n\r\n                    <p className=\"text-one font-weight-medium \">\r\n                      {studentProfileDetails.bio}\r\n                    </p>\r\n                  </div>\r\n                </Row>\r\n                <hr />\r\n              </Colxx>\r\n              <div id=\"skillsSection\">\r\n                <Colxx lg={7} className=\"my-4\" ref={skillsSectionRef}>\r\n                  <Row>\r\n                    <h1 className=\"font-weight-semibold text-large\">Skills </h1>\r\n                  </Row>\r\n                  <Row>\r\n                    <div className=\"d-flex flex-wrap \">\r\n                      {studentProfileDetails.skills &&\r\n                        studentProfileDetails.skills.map((skill) => (\r\n                          <div key={skill}>\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"mb-2 font-weight-semibold mr-2\"\r\n                              size=\"md\"\r\n                            >\r\n                              {skill}\r\n                            </Button>\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                  </Row>\r\n                </Colxx>\r\n              </div>\r\n            </div>\r\n          </Colxx>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentViewProfile;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport {\r\n  Button,\r\n  ButtonDropdown,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  NavLink,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { EmploymentTypeData } from \"../Listing/ListingData\";\r\nimport country from \"../my-login/Country\";\r\nimport language from \"../my-login/Languages\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst AlumniMyProfile = () => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isEditingAbout, setIsEditingAbout] = useState(false);\r\n  // const [isEditingButton, setIsEditingButton] = useState(false);\r\n  const [isEditingExp, setIsEditingExp] = useState(false);\r\n  const [image, setImage] = useState(null);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [jobTitle, setJobTitle] = useState(\"\");\r\n  const [experience, setExperience] = useState([]);\r\n  // const [experience, setExperience] = useState(\"\");\r\n\r\n  const [location, setLocation] = useState(\"\");\r\n  const [newInputSkill, setNewInputSkill] = useState(\"\");\r\n  const [skills, setSkills] = useState([]);\r\n  const [price, setPrice] = useState(\"\");\r\n  const [userId, setUserId] = useState(null);\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [linkedinUrl, setLinkedinUrl] = useState(\"\");\r\n  const [twitterHandle, setTwitterHandle] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n  const [introVideo, setIntroVideo] = useState(\"\");\r\n  const [featuredArticle, setFeaturedArticle] = useState(\"\");\r\n  const [reasonForMentor, setReasonForMentor] = useState(\"\");\r\n  const [achievement, setAchievement] = useState(\"\");\r\n  const [totalRatings, setTotalRatings] = useState(0);\r\n  const [averageStar, setAverageStar] = useState(0);\r\n  // const [profileLoading, setProfileLoading] = useState(true);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [college, setCollege] = useState([]);\r\n  const [skillValidationMessage, setSkillValidationMessage] = useState(\"\");\r\n  const [isProfileUpdated, setIsProfileUpdated] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imageEditModal, setImageEditModal] = useState(false);\r\n  const [selectedFileBase64, setSelectedFileBase64] = useState(null);\r\n  const [isEditingLanguages, setIsEditingLanguages] = useState(false);\r\n  const [isEditingSkills, setIsEditingSkills] = useState(false);\r\n  const [isEditingPrice, setIsEditingPrice] = useState(false);\r\n  const [isEditingEducation, setIsEditingEducation] = useState(false);\r\n  const [isEditingEducationSecond, setIsEditingEducationSecond] =\r\n    useState(false);\r\n  // const [editedCollegeIndex, setEditedCollegeIndex] = useState(-1);\r\n  const [expId, setExpId] = useState(\"\");\r\n  const [collegeId, setCollegeId] = useState(\"\");\r\n  const [isEditingExpSecond, setIsEditingExpSecond] = useState(false);\r\n  // const [isAddingEducation, setIsAddingEducation] = useState(false);\r\n  const [editingIndex, setEditingIndex] = useState(null);\r\n  const [resumeFileName, setResumeFileName] = useState(\"\");\r\n  const [resumeFileId, setResumeFileId] = useState(\"\");\r\n  const [fileError, setFileError] = useState(\"\");\r\n\r\n  const endUrl = `${baseUrl}/api/alumni/myprofile`;\r\n  const inputUrl = `${baseUrl}/inputs`;\r\n  const imageEditUrl = `${baseUrl}/api/alumni/profile-image`;\r\n\r\n  const mentorProfileDetails = async () => {\r\n    try {\r\n      const response = await axios.get(endUrl);\r\n      const userData = response.data;\r\n      console.log(userData);\r\n      if (userData) {\r\n        setImage(userData.imageUrl);\r\n        setFirstName(userData.firstName);\r\n        setJobTitle(userData.jobTitle);\r\n        setCompany(userData.company);\r\n        setLocation(userData.location);\r\n        setResumeFileName(userData.documentName);\r\n        setResumeFileId(userData.documentId);\r\n        setSkills(userData.skills);\r\n        setPrice(userData.price);\r\n        setUserId(userData.id);\r\n        setLastName(userData.lastName);\r\n        setEmail(userData.email);\r\n        setCategory(userData.category);\r\n        setBio(userData.bio);\r\n        setLinkedinUrl(userData.linkedinUrl);\r\n        setTwitterHandle(userData.twitterHandle);\r\n        setWebsite(userData.website);\r\n        setIntroVideo(userData.introVideo);\r\n        setFeaturedArticle(userData.featuredArticle);\r\n        setReasonForMentor(userData.reasonForMentor);\r\n        setAchievement(userData.achievement);\r\n        // setProfileLoading(false);\r\n        setLanguages(userData.languages);\r\n        setExperience(userData.experience);\r\n        setCollege(userData.colleges);\r\n        if (userData.experience && userData.experience.length > 0) {\r\n          setExpId(userData.experience[0].id);\r\n        }\r\n        if (userData.colleges && userData.colleges.length > 0) {\r\n          setCollegeId(userData.colleges[0].id);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    mentorProfileDetails();\r\n  }, [isProfileUpdated]);\r\n  const currentYear = new Date().getFullYear();\r\n  const years = [];\r\n  for (let year = currentYear; year >= 2005; year -= 1) {\r\n    years.push(year);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const mentorReviews = async () => {\r\n      const ratingUrl = `${baseUrl}/api/mentorship/rating/meta/${userId}`;\r\n\r\n      try {\r\n        const response = await axios.get(ratingUrl);\r\n        setTotalRatings(response.data.totalRatings);\r\n        setAverageStar(response.data.averageStar);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    mentorReviews();\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    const mentorProfileDetails1 = async () => {\r\n      try {\r\n        const response = await axios.get(inputUrl);\r\n        const inputData = response.data;\r\n        if (inputData) {\r\n          setExperience(inputData.experience);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    mentorProfileDetails1();\r\n  }, []);\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  const updateMEntorProfile = async () => {\r\n    try {\r\n      const updatedData = {\r\n        image,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        jobTitle,\r\n        company,\r\n        location,\r\n        category,\r\n        languages,\r\n        skills,\r\n        bio,\r\n        linkedinUrl,\r\n        twitterHandle,\r\n        website,\r\n        introVideo,\r\n        featuredArticle,\r\n        reasonForMentor,\r\n        achievement,\r\n        // experience,\r\n        price,\r\n      };\r\n\r\n      const response = await axios.put(endUrl, updatedData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      setIsProfileUpdated(!isProfileUpdated);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n    } catch (error) {\r\n      console.error(\"Error updating profile\", error);\r\n      if (error?.response?.data?.statuses[0]) {\r\n        ToasterComponent(\"warning\", error.response.data.statuses);\r\n      } else {\r\n        ToasterComponent(\"error\", [\r\n          { message: \"An unexpected error occurred\" },\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // update experience\r\n  const handleEditExperience = (index) => {\r\n    setIsEditingExpSecond(true);\r\n    setExpId(experience[index].id);\r\n    setEditingIndex(index);\r\n  };\r\n  console.log(expId);\r\n\r\n  const handleDeleteExperience = async (index) => {\r\n    try {\r\n      const experienceToDelete = experience[index]; // Get the selected experience\r\n\r\n      if (!experienceToDelete.id) {\r\n        ToasterComponent(\"error\", [{ message: \"Experience ID not found.\" }]);\r\n        return;\r\n      }\r\n\r\n      const response = await axios.delete(\r\n        `${baseUrl}/api/alumni/experience/${experienceToDelete.id}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // Ensure you are passing the correct token\r\n          },\r\n        }\r\n      );\r\n\r\n      // Remove the experience from the state after deletion\r\n      setExperience((prevExperience) =>\r\n        prevExperience.filter((_, i) => i !== index)\r\n      );\r\n\r\n      ToasterComponent(\"success\", response.data.statuses); // Show success message\r\n      setIsProfileUpdated(!isProfileUpdated); // Trigger profile update state\r\n    } catch (error) {\r\n      console.error(\"Error deleting experience\", error);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error updating profile\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // const experienceUrl = `${baseUrl}/api/alumni/experience/${expId}`;\r\n  const addExperienceUrl = `${baseUrl}/api/alumni/experience`;\r\n  // const updateExperience = async () => {\r\n  //   try {\r\n  //     if (experience.length > 0) {\r\n  //       const updatedData = {\r\n  //         company: experience[editingIndex].company,\r\n  //         jobTitle: experience[editingIndex].jobTitle,\r\n  //         employmentType: experience[editingIndex].employmentType,\r\n  //         jobLocation: experience[editingIndex].jobLocation,\r\n  //         startYear: experience[editingIndex].startYear,\r\n  //         endYear: experience[editingIndex].endYear,\r\n  //       };\r\n\r\n  //       console.log(\"Updated Data:\", updatedData); // Log updated data to verify\r\n\r\n  //       const response = await axios.put(experienceUrl, updatedData, {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${token}`,\r\n  //         },\r\n  //       });\r\n\r\n  //       setIsProfileUpdated(!isProfileUpdated);\r\n  //       ToasterComponent(\"success\", response.data.statuses);\r\n  //     } else {\r\n  //       ToasterComponent(\"warning\", [\r\n  //         { message: \"No experience data available\" },\r\n  //       ]);\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error(\"Error updating profile\", error);\r\n  //     if (error.response && error.response.data.statuses[0]) {\r\n  //       ToasterComponent(\"warning\", error.response.data.statuses);\r\n  //     } else {\r\n  //       ToasterComponent(\"error\", [\r\n  //         { message: \"An unexpected error occurred\" },\r\n  //       ]);\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  const updateExperience = async () => {\r\n    try {\r\n      const currentExperience = experience[editingIndex]; // Get current experience entry\r\n\r\n      const experienceData = {\r\n        company: currentExperience.company,\r\n        jobTitle: currentExperience.jobTitle,\r\n        employmentType: currentExperience.employmentType,\r\n        jobLocation: currentExperience.jobLocation,\r\n        startYear: currentExperience.startYear,\r\n        endYear: currentExperience.endYear,\r\n      };\r\n\r\n      let response;\r\n\r\n      if (currentExperience.id) {\r\n        // Construct the update URL by appending the experience ID for PUT request\r\n        const updateUrl = `${addExperienceUrl}/${currentExperience.id}`;\r\n        response = await axios.put(updateUrl, experienceData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n      } else {\r\n        // If the experience entry has no id, create a new one using POST\r\n        response = await axios.post(addExperienceUrl, experienceData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        ToasterComponent(\"success\", response.data.statuses); // Use message from response\r\n      }\r\n\r\n      // Refresh the profile after adding/updating experience\r\n      setIsProfileUpdated(!isProfileUpdated);\r\n    } catch (error) {\r\n      console.error(\"Error saving experience\", error);\r\n\r\n      // Improved error handling and logging\r\n      if (error.response && error.response.data.statuses[0]) {\r\n        ToasterComponent(\"warning\", error.response.data.statuses);\r\n      } else {\r\n        ToasterComponent(\"error\", [\r\n          { message: \"An unexpected error occurred\" },\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n  const handleAddWork = () => {\r\n    const newExperience = {\r\n      // id: null, // Generate an ID or set it later from API response if needed\r\n      company: \"\",\r\n      jobTitle: \"\",\r\n      employmentType: \"\",\r\n      jobLocation: \"\",\r\n      startYear: \"\",\r\n      endYear: \"\",\r\n    };\r\n\r\n    // Add new experience to the array\r\n    setExperience([...experience, newExperience]);\r\n\r\n    // Set the new entry as editable\r\n    setEditingIndex(experience.length); // Set the index of the new experience\r\n    setIsEditingExpSecond(true); // Switch to the form to edit the new experience\r\n  };\r\n\r\n  const handleSaveExp = () => {\r\n    setIsEditingExp(false);\r\n    // updateMEntorProfile();\r\n    updateExperience();\r\n  };\r\n\r\n  const handleCancelEditExp = () => {\r\n    setIsEditingExp(false);\r\n    setIsEditingExpSecond(false);\r\n  };\r\n  const handleInputChange = (index, field, value) => {\r\n    const updatedExperience = [...experience];\r\n    updatedExperience[index][field] = value;\r\n    setExperience(updatedExperience);\r\n  };\r\n  // update education\r\n\r\n  // const educationUpdateUrl = `${baseUrl}/api/alumni/college/${collegeId}`;\r\n  console.log(collegeId);\r\n\r\n  const addEducationUrl = `${baseUrl}/api/alumni/college`;\r\n\r\n  const updateEducation = async () => {\r\n    try {\r\n      const currentCollege = college[editingIndex]; // Access the current college being edited\r\n      const updatedData = {\r\n        collegeName: currentCollege.collegeName,\r\n        degree: currentCollege.degree,\r\n        department: currentCollege.department,\r\n        year: Number(currentCollege.year), // Ensure the year is treated as a number\r\n      };\r\n\r\n      if (currentCollege.id) {\r\n        // PUT request to update existing education entry\r\n        const educationUpdateUrl = `${baseUrl}/api/alumni/college/${currentCollege.id}`;\r\n        const response = await axios.put(educationUpdateUrl, updatedData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n      } else {\r\n        // POST request to add new education entry\r\n        const response = await axios.post(addEducationUrl, updatedData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        // Extract the collegeId from the POST response and update the state\r\n        const newCollegeId = collegeId; // Ensure the API returns this field\r\n        setCollege((prevCollege) =>\r\n          prevCollege.map((entry, index) =>\r\n            index === editingIndex ? { ...entry, id: newCollegeId } : entry\r\n          )\r\n        );\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n      }\r\n\r\n      // Toggle the profile update state\r\n      setIsProfileUpdated(!isProfileUpdated);\r\n    } catch (error) {\r\n      console.error(\"Error updating profile\", error);\r\n      if (error.response && error.response.data.statuses[0]) {\r\n        ToasterComponent(\"warning\", error.response.data.statuses);\r\n      } else {\r\n        ToasterComponent(\"error\", [\r\n          { message: \"An unexpected error occurred\" },\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddEducation = () => {\r\n    // Create a new college entry with empty values\r\n    const newCollegeEntry = {\r\n      collegeName: \"\",\r\n      degree: \"\",\r\n      department: \"\",\r\n      year: \"\",\r\n    };\r\n\r\n    // Add the new entry to the college state\r\n    setCollege((prevCollege) => [...prevCollege, newCollegeEntry]);\r\n    // Set editing index to the new college entry to allow for immediate editing\r\n    setEditingIndex(college.length); // Set index to the last entry (new one)\r\n    setIsEditingEducationSecond(true); // Open the editing modal\r\n  };\r\n\r\n  const handleInputEducationChange = (index, field, value) => {\r\n    const updatedCollege = [...college];\r\n    updatedCollege[index][field] = value;\r\n    setCollege(updatedCollege);\r\n  };\r\n\r\n  const postImageData = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", selectedFile);\r\n\r\n      const response = await axios.post(imageEditUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      setTimeout(() => {}, 2000);\r\n      if (response.status === 200) {\r\n        await mentorProfileDetails();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleAddSkill = (newSkill) => {\r\n    if (!newSkill.trim()) {\r\n      setSkillValidationMessage(\"Skill cannot be empty\");\r\n    } else {\r\n      setSkillValidationMessage(\"\");\r\n      setSkills([...skills, newSkill]);\r\n    }\r\n  };\r\n\r\n  const handleRemoveSkill = (index) => {\r\n    setSkills(skills.filter((_, i) => i !== index));\r\n  };\r\n  const handleRemoveLanguages = (index) => {\r\n    setLanguages(languages.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleFileChange1 = async (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    if (file) {\r\n      const fileType = file.type;\r\n      const fileSize = file.size;\r\n\r\n      // Check if the file is a PDF\r\n      if (fileType !== \"application/pdf\") {\r\n        setFileError(\"Please upload a PDF file.\");\r\n        setResumeFileName(\"\"); // Clear the file name if invalid\r\n        return;\r\n      }\r\n\r\n      // Check if the file size is more than 2MB\r\n      if (fileSize > 2 * 1024 * 1024) {\r\n        setFileError(\"File size should be less than 2MB.\");\r\n        setResumeFileName(\"\"); // Clear the file name if invalid\r\n        return;\r\n      }\r\n\r\n      // If valid, clear the error and set the file name\r\n      setFileError(\"\");\r\n      setResumeFileName(file.name);\r\n      const formData = new FormData();\r\n      formData.append(\"resume\", file);\r\n      // Post the file to the given URL\r\n      const uploadUrl = `${baseUrl}/api/resume?role=ALUMNI`;\r\n      try {\r\n        const response = await axios.post(uploadUrl, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        });\r\n\r\n        // Handle successful response\r\n        if (response.status === 200) {\r\n          ToasterComponent(\"success\", response.data.statuses);\r\n          console.log(\"Resume uploaded successfully\", response.data);\r\n          setResumeFileId(response.data.documentId);\r\n        } else {\r\n          ToasterComponent(\"error\", \"Failed to upload resume\");\r\n          console.error(\"Failed to upload resume\", response.data);\r\n        }\r\n      } catch (error) {\r\n        // Handle errors\r\n        if (error.response) {\r\n          ToasterComponent(\r\n            \"error\",\r\n            error.response.data.message || \"Upload failed\"\r\n          );\r\n          console.error(\"Error uploading resume:\", error.response);\r\n        } else {\r\n          ToasterComponent(\"error\", \"An error occurred while uploading\");\r\n          console.error(\"Error uploading resume:\", error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSavePrice = () => {\r\n    setIsEditingPrice(false);\r\n    updateMEntorProfile();\r\n  };\r\n\r\n  const handleSaveEducation = () => {\r\n    setIsEditingEducation(false);\r\n    // updateMEntorProfile();\r\n    updateEducation();\r\n  };\r\n\r\n  const handleCancelEditEducation = () => {\r\n    setIsEditingEducation(false);\r\n    setIsEditingEducationSecond(false);\r\n  };\r\n\r\n  const handleSaveAbout = () => {\r\n    setIsEditingAbout(false);\r\n    updateMEntorProfile();\r\n  };\r\n\r\n  const handleLanguagesSave = () => {\r\n    if (languages.length === 0) {\r\n      setSkillValidationMessage(\"At least one language is required.\");\r\n    } else {\r\n      setIsEditingLanguages(false);\r\n      updateMEntorProfile();\r\n    }\r\n  };\r\n  const handleLanguagesCancel = () => {\r\n    setIsEditingLanguages(false);\r\n  };\r\n\r\n  const handleSaveSkill = () => {\r\n    if (skills.length === 0) {\r\n      setSkillValidationMessage(\"At least one skill is required.\");\r\n    } else {\r\n      setIsEditingSkills(false);\r\n      updateMEntorProfile();\r\n    }\r\n  };\r\n  const handleSkillCancel = () => {\r\n    setIsEditingSkills(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setIsEditing(false);\r\n    updateMEntorProfile();\r\n    postImageData();\r\n  };\r\n\r\n  const handleImageClick = () => setImageEditModal(true);\r\n\r\n  const handleImagePost = () => {\r\n    postImageData();\r\n    setSelectedFile(null);\r\n    setImageEditModal(false);\r\n  };\r\n\r\n  const handleImageDelete = () => {\r\n    // setSelectedFile(image);\r\n    setImageEditModal(false);\r\n  };\r\n\r\n  const handleLinkedInClick = () => {\r\n    if (linkedinUrl) {\r\n      window.open(linkedinUrl, \"_blank\");\r\n    }\r\n  };\r\n\r\n  const handleTwitterClick = () => {\r\n    if (twitterHandle) {\r\n      const twitterUrl = `https://x.com/${twitterHandle}`;\r\n      window.open(twitterUrl, \"_blank\");\r\n    }\r\n  };\r\n  const handlePersonalWebsiteClick = () => {\r\n    if (website) {\r\n      let url = website;\r\n      if (!url.startsWith(\"https://\")) {\r\n        url = `https://${url}`;\r\n      }\r\n      window.open(url, \"_blank\");\r\n    }\r\n  };\r\n\r\n  const handleAddLanguages = (newLanguages) => {\r\n    setLanguages([...languages, newLanguages]);\r\n  };\r\n\r\n  const languageOptions = language.map((option) => ({\r\n    value: option.iso_code,\r\n    label: option.name,\r\n  }));\r\n\r\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\r\n\r\n  const handleChange = (selectedOptions) => {\r\n    const languagesArray = selectedOptions\r\n      ? selectedOptions.map((option) => option.value)\r\n      : [];\r\n    handleAddLanguages(languagesArray[0]);\r\n    setSelectedLanguages([]);\r\n  };\r\n\r\n  // const [file1] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        setSelectedFileBase64(base64Image);\r\n\r\n        // setAboutField({ ...aboutField, image: base64Image });\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const countryName = country.find((c) => c.iso_code === location)?.name;\r\n\r\n  const handleEditEducation = (index) => {\r\n    setIsEditingEducationSecond(true);\r\n    setCollegeId(college[index].id);\r\n    setEditingIndex(index); // Set the index of the college to edit\r\n  };\r\n\r\n  const deleteEducationUrl = (id) => `${baseUrl}/api/alumni/college/${id}`;\r\n\r\n  // Function to handle deleting a college\r\n  const handleDeleteEducation = async (index) => {\r\n    try {\r\n      const collegeToDelete = college[index]; // Get the selected college\r\n\r\n      if (!collegeToDelete.id) {\r\n        ToasterComponent(\"error\", [{ message: \"College ID not found.\" }]);\r\n        return;\r\n      }\r\n\r\n      const response = await axios.delete(\r\n        deleteEducationUrl(collegeToDelete.id),\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // Ensure you are passing the correct token\r\n          },\r\n        }\r\n      );\r\n\r\n      // Remove the college from the state after deletion\r\n      setCollege((prevCollege) => prevCollege.filter((_, i) => i !== index));\r\n\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      setIsProfileUpdated(!isProfileUpdated); // Trigger profile update state\r\n    } catch (error) {\r\n      console.error(\"Error deleting education\", error);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error updating profile\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  console.log(\"Editing experience index:\", editingIndex);\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\r\n\r\n  const handleView = async (fileId) => {\r\n    const viewUrl = `${baseUrl}/api/resume/${fileId}`; // Replace with your actual API endpoint\r\n\r\n    try {\r\n      const response = await axios.get(viewUrl, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        window.open(viewUrl, \"_blank\");\r\n      } else {\r\n        ToasterComponent(\"error\", \"Failed to view resume\");\r\n        console.error(\"Failed to view resume\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.message || \"View failed\");\r\n        console.error(\"Error viewing resume:\", error.response);\r\n      } else {\r\n        ToasterComponent(\"error\", \"An error occurred while viewing\");\r\n        console.error(\"Error viewing resume:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (fileId) => {\r\n    const deleteUrl = `${baseUrl}/api/resume/${fileId}?role=ALUMNI`; // Replace with your actual delete API endpoint\r\n\r\n    try {\r\n      const response = await axios.delete(deleteUrl);\r\n\r\n      if (response.status === 200) {\r\n        // Assuming the deletion is successful\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n        console.log(\"File deleted successfully\");\r\n        // Add any other logic here like updating the state or UI\r\n        setResumeFileName(\"\");\r\n      } else {\r\n        console.error(\"Failed to delete the file\", \"Error\");\r\n      }\r\n    } catch (error) {\r\n      // Handle the error here\r\n      if (error?.response?.data?.statuses) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error deleting the file:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"aluni-profile\">\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" className=\"\">\r\n        {/* new design code starts */}\r\n        {/* profile section starts */}\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <CardBody\r\n                style={{\r\n                  background: \"linear-gradient(to right, #7B42C5, #AA5D93)\",\r\n                  color: \"white\",\r\n                  borderRadius: \"9px 9px 0 0\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"position-relative\"\r\n                  style={{ position: \"relative\", top: \"5px\", textAlign: \"end\" }}\r\n                >\r\n                  <Button\r\n                    color=\"primary\"\r\n                    outline\r\n                    className=\"icon-button  bg-light\"\r\n                    style={{ border: \"none\" }}\r\n                    size=\"sm\"\r\n                    onClick={() => handleImageClick()}\r\n                  >\r\n                    <i className=\"simple-icon-pencil\" />\r\n                  </Button>\r\n                </div>\r\n                <div\r\n                  className=\"position-relative \"\r\n                  style={{ position: \"relative\", top: \"70px\" }}\r\n                >\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn p-0\"\r\n                      style={{ border: \"none\", background: \"none\" }}\r\n                      // onClick={() => handleImageClick()}\r\n                      aria-label=\"Profile image\"\r\n                    >\r\n                      {image === null ? (\r\n                        <ThumbnailLetters\r\n                          // small\r\n                          rounded\r\n                          text={firstName}\r\n                          className=\"mx-2\"\r\n                          color=\"secondary\"\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          src={`${baseUrl}/${image}`}\r\n                          className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                          style={{\r\n                            width: \"110px\",\r\n                            height: \"110px\",\r\n                            objectFit: \"cover\",\r\n                            overflow: \"hidden\",\r\n                          }}\r\n                          alt=\"img\"\r\n                        />\r\n                      )}\r\n                    </button>\r\n                    <div\r\n                      className=\"mr-4 d-flex mb-4\"\r\n                      style={{ display: \"none \", visibility: \"hidden\" }}\r\n                    >\r\n                      {linkedinUrl && (\r\n                        <NavLink className=\"d-none d-md-inline-block\">\r\n                          <Button\r\n                            color=\"light\"\r\n                            className=\"font-weight-semibold icon-button\"\r\n                            size=\"large\"\r\n                            onClick={handleLinkedInClick}\r\n                          >\r\n                            <i className=\"simple-icon-social-linkedin text-primary font-weight-semibold text-one\" />\r\n                          </Button>\r\n                        </NavLink>\r\n                      )}\r\n                      {twitterHandle && (\r\n                        <NavLink className=\"d-none d-md-inline-block\">\r\n                          <Button\r\n                            color=\"light\"\r\n                            className=\"font-weight-semibold icon-button\"\r\n                            size=\"large\"\r\n                            onClick={handleTwitterClick}\r\n                          >\r\n                            <i className=\"simple-icon-social-twitter text-primary font-weight-semibold text-one\" />\r\n                          </Button>\r\n                        </NavLink>\r\n                      )}\r\n                      {website && (\r\n                        <NavLink className=\"d-none d-md-inline-block\">\r\n                          <Button\r\n                            color=\"light\"\r\n                            className=\"font-weight-semibold icon-button\"\r\n                            size=\"large\"\r\n                            onClick={handlePersonalWebsiteClick}\r\n                          >\r\n                            <i className=\"simple-icon-globe text-primary font-weight-semibold text-one\" />\r\n                          </Button>\r\n                        </NavLink>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <Modal\r\n                    isOpen={imageEditModal}\r\n                    toggle={() => setImageEditModal(!imageEditModal)}\r\n                    className=\"\"\r\n                    size=\"lg\"\r\n                    style={{\r\n                      borderRadius: \"10px\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                      <h2 className=\"font-weight-bold\">Profile photo</h2>\r\n                    </ModalHeader>\r\n                    <ModalBody className=\"d-flex justify-content-center align-items-center\">\r\n                      <img\r\n                        src={selectedFileBase64 || `${baseUrl}/${image}`}\r\n                        className=\"rounded-circle img-thumbnail border border-3\"\r\n                        style={{\r\n                          width: \"130px\",\r\n                          height: \"130px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                        alt=\"img\"\r\n                      />\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter className=\"d-flex align-items-center justify-content-center\">\r\n                      {selectedFile ? (\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          onClick={() => handleImagePost()}\r\n                          className=\"icon-button\"\r\n                          style={{ border: \"none\" }}\r\n                        >\r\n                          <i className=\"iconsminds-upload \" />\r\n                        </Button>\r\n                      ) : (\r\n                        <InputGroup\r\n                          className=\"\"\r\n                          style={{\r\n                            width: \"auto\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <div className=\"\">\r\n                            <Button\r\n                              outline\r\n                              className=\"icon-button\"\r\n                              color=\"primary\"\r\n                              style={{ border: \"none\" }}\r\n                              onClick={() =>\r\n                                document.getElementById(\"file-upload\").click()\r\n                              }\r\n                            >\r\n                              <i className=\"simple-icon-pencil\" />\r\n                            </Button>\r\n\r\n                            <Input\r\n                              id=\"file-upload\"\r\n                              type=\"file\"\r\n                              className=\"d-none\"\r\n                              onChange={handleFileChange}\r\n                            />\r\n                          </div>\r\n                        </InputGroup>\r\n                      )}\r\n\r\n                      <Button\r\n                        color=\"primary\"\r\n                        outline\r\n                        onClick={() => handleImageDelete()}\r\n                        className=\"icon-button\"\r\n                        style={{ border: \"none\" }}\r\n                      >\r\n                        <i className=\"simple-icon-trash\" />\r\n                      </Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n                </div>\r\n              </CardBody>\r\n              <CardBody>\r\n                <div>\r\n                  <div className=\"text-end w-100  d-flex justify-content-end\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      style={{ border: \"none\" }}\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditing(true)}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"mt-4\">\r\n                    <h2 className=\"font-weight-bold\">\r\n                      {firstName} {lastName}\r\n                    </h2>\r\n                    <h3 className=\"font-weight-semibold\">\r\n                      {college[0]?.degree} {college[0]?.department} @\r\n                      {college[0]?.college}\r\n                    </h3>\r\n\r\n                    {countryName && (\r\n                      <h5 className=\"font-weight-medium\">\r\n                        <i className=\"simple-icon-location-pin text-primary\" />\r\n\r\n                        <span className=\"ml-2\">{countryName}</span>\r\n                      </h5>\r\n                    )}\r\n                    <h6 className=\"\">\r\n                      <i className=\"simple-icon-star text-primary \" />\r\n                      <span className=\"ml-2\">{`${averageStar} (${totalRatings} reviews)`}</span>\r\n                    </h6>\r\n                    <h6 className=\"text-muted\">{resumeFileName}</h6>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n            {/* profile update modal starts */}\r\n            <Modal\r\n              isOpen={isEditing}\r\n              toggle={() => setIsEditing(!isEditing)}\r\n              className=\"\"\r\n              size=\"lg\"\r\n              style={{\r\n                borderRadius: \"10px\",\r\n                overflow: \"hidden\",\r\n              }}\r\n            >\r\n              <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                <h2 className=\"font-weight-bold\">Edit Profile</h2>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <div>\r\n                  <>\r\n                    <Row>\r\n                      <Col md=\"6\">\r\n                        <Label for=\"firstName\">\r\n                          <h4>First Name</h4>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"firstName\"\r\n                          value={firstName}\r\n                          onChange={(e) => setFirstName(e.target.value)}\r\n                        />\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                        <Label for=\"lastName\">\r\n                          <h4>Last Name</h4>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"lastName\"\r\n                          value={lastName}\r\n                          onChange={(e) => setLastName(e.target.value)}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <br />\r\n                  </>\r\n                  {/* <>\r\n                    <Label for=\"jobtitle\">\r\n                      <h4>Job Title</h4>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"jobtitle\"\r\n                      value={jobTitle}\r\n                      onChange={(e) => setJobTitle(e.target.value)}\r\n                    />\r\n                    <br />\r\n                  </> */}\r\n                  {/* <>\r\n                    <Label for=\"company\">\r\n                      <h4>Company</h4>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"company\"\r\n                      value={company}\r\n                      onChange={(e) => setCompany(e.target.value)}\r\n                    />\r\n                    <br />\r\n                  </> */}\r\n\r\n                  <>\r\n                    <Label for=\"location\" className=\"font-weight-medium\">\r\n                      <h4>Country</h4>\r\n                    </Label>\r\n\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"location\"\r\n                      value={location}\r\n                      // validate={validateLocation}\r\n                      onChange={(e) => setLocation(e.target.value)}\r\n                      className=\"form-control\"\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select Location\r\n                      </option>\r\n                      {country.map((option) => (\r\n                        <option key={option.iso_code} value={option.iso_code}>\r\n                          {option.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                    <br />\r\n                  </>\r\n                  <Row>\r\n                    <Col md={6}>\r\n                      <>\r\n                        <Label for=\"resume\" className=\"text-muted\">\r\n                          <h4>CV</h4>\r\n                        </Label>\r\n                        <div\r\n                          className=\" p-2 mb-2 d-flex justify-content-between text-one align-items-center\"\r\n                          style={{\r\n                            border: \"1px solid #ccc\",\r\n                            minWidth: \"200px\",\r\n                          }}\r\n                        >\r\n                          {resumeFileName || \"no file selected\"}\r\n                          <ButtonDropdown\r\n                            isOpen={dropdownOpen}\r\n                            toggle={toggleDropdown}\r\n                          >\r\n                            <DropdownToggle\r\n                              caret\r\n                              style={{\r\n                                backgroundColor: \"transparent\",\r\n                                border: \"none\",\r\n                                padding: 0,\r\n                              }}\r\n                            >\r\n                              <i\r\n                                className=\"fa-solid fa-ellipsis\"\r\n                                style={{\r\n                                  color: \"#333\",\r\n                                  cursor: \"pointer\",\r\n                                }}\r\n                              />\r\n                            </DropdownToggle>\r\n\r\n                            <DropdownMenu>\r\n                              <DropdownItem\r\n                                onClick={() => handleView(resumeFileId)}\r\n                              >\r\n                                view\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                onClick={() => handleDelete(resumeFileId)}\r\n                              >\r\n                                delete\r\n                              </DropdownItem>\r\n                            </DropdownMenu>\r\n                          </ButtonDropdown>\r\n                        </div>\r\n                        <InputGroup className=\"\">\r\n                          <div className=\"\">\r\n                            <button\r\n                              type=\"button\"\r\n                              style={{\r\n                                cursor: \"pointer\",\r\n\r\n                                background: \"none\",\r\n                                border: \"none\",\r\n                              }}\r\n                              onClick={() =>\r\n                                document.getElementById(\"file-upload\").click()\r\n                              }\r\n                            >\r\n                              <h5>+ Add your Resume</h5>\r\n                            </button>\r\n                            {/* <Form> */}\r\n                            <Input\r\n                              id=\"file-upload\"\r\n                              type=\"file\"\r\n                              className=\"d-none\"\r\n                              // onChange={handleFileChange1}\r\n                              // validate={validateFile}\r\n                              onChange={(e) => handleFileChange1(e)}\r\n                            />\r\n                          </div>\r\n                        </InputGroup>\r\n                        <br />\r\n                        {fileError && (\r\n                          <p style={{ color: \"red\" }}>{fileError}</p>\r\n                        )}\r\n                      </>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  {/* <>\r\n                    <Label for=\"location\" className=\"font-weight-medium\">\r\n                      <h4>category</h4>\r\n                    </Label>\r\n\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"category\"\r\n                      value={category}\r\n                      onChange={(e) => setCategory(e.target.value)}\r\n                      className=\"form-control\"\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select category\r\n                      </option>\r\n                      {CategoryData.map((option) => (\r\n                        <option key={option.short} value={option.short}>\r\n                          {option.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                    <br />\r\n                  </> */}\r\n                </div>\r\n              </ModalBody>\r\n              <ModalFooter\r\n                style={{ borderTop: \"none\" }}\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n              >\r\n                <Button color=\"primary\" onClick={() => handleSave()}>\r\n                  Save\r\n                </Button>{\" \"}\r\n                <Button\r\n                  color=\"primary\"\r\n                  outline\r\n                  onClick={() => setIsEditing(false)}\r\n                  className=\"\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n            {/* profile update modal ends */}\r\n          </Col>\r\n        </Row>\r\n        {/* profile section ends */}\r\n        {/* about section starts */}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row className=\"align-items-center\">\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">About</h2>\r\n\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingAbout(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <div>\r\n                  <p className=\"text-muted\">{bio}</p>\r\n                </div>\r\n                {/* about modal starts */}\r\n                <Modal\r\n                  isOpen={isEditingAbout}\r\n                  toggle={() => setIsEditingAbout(!isEditingAbout)}\r\n                  className=\"\"\r\n                  size=\"lg\"\r\n                  style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                >\r\n                  <ModalHeader style={{ borderBottom: \"none\" }}>\r\n                    <h2 className=\"font-weight-bold\">About</h2>\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <br />\r\n\r\n                    <div className=\"\">\r\n                      <Label for=\"about\" className=\"font-weight-medium\">\r\n                        <h4>About Me</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        id=\"about\"\r\n                        value={bio}\r\n                        onChange={(e) => setBio(e.target.value)}\r\n                        className=\"form-control\"\r\n                        rows=\"5\"\r\n                      />\r\n                      <br />\r\n                      <Label for=\"linkedin\" className=\"font-weight-medium\">\r\n                        <h4>LinkedIn URL</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"url\"\r\n                        id=\"linkedinUrl\"\r\n                        value={linkedinUrl}\r\n                        onChange={(e) => setLinkedinUrl(e.target.value)}\r\n                        className=\"form-control\"\r\n                      />\r\n                      <br />\r\n                      <Label for=\"twitter\" className=\"font-weight-medium\">\r\n                        <h4>Twitter handle</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"url\"\r\n                        id=\"twitter\"\r\n                        value={twitterHandle}\r\n                        onChange={(e) => setTwitterHandle(e.target.value)}\r\n                      />\r\n                      <p className=\"text-muted\">\r\n                        Omit the &ldquo;@&rdquo; -e.g. &ldquo;dqmonn&rdquo;\r\n                      </p>\r\n                      <Label\r\n                        for=\"personalWebsite\"\r\n                        className=\"font-weight-medium\"\r\n                      >\r\n                        <h4>Personal Website URL</h4>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"url\"\r\n                        id=\"personalWebsite\"\r\n                        value={website}\r\n                        onChange={(e) => setWebsite(e.target.value)}\r\n                      />\r\n                      <p className=\"text-muted\">e.g. http://www.google.com</p>\r\n                      <br />\r\n                    </div>\r\n                  </ModalBody>\r\n                  <ModalFooter\r\n                    style={{ borderTop: \"none\" }}\r\n                    className=\"d-flex align-items-center justify-content-center\"\r\n                  >\r\n                    <Button color=\"primary\" onClick={() => handleSaveAbout()}>\r\n                      Save\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      onClick={() => setIsEditingAbout(false)}\r\n                      className=\"\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n                {/* about modal ends */}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {/* about section ends */}\r\n        {/* Experience section starts */}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row className=\"align-items-center\">\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Experience</h2>\r\n\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingExp(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    {experience?.map((value) => (\r\n                      <p\r\n                        className=\"text-one font-weight-medium \"\r\n                        key={value.id}\r\n                      >\r\n                        {value.jobtitle} <br /> {value.company} |{\" \"}\r\n                        {value.startYear} - {value.endYear}\r\n                      </p>\r\n                    ))}\r\n                  </Col>\r\n                </Row>\r\n                {/* Exp modal starts */}\r\n                <Modal\r\n                  isOpen={isEditingExp}\r\n                  toggle={() => setIsEditingExp(!isEditingExp)}\r\n                  className=\"\"\r\n                  size=\"lg\"\r\n                  style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                >\r\n                  {/* <ModalHeader>\r\n                    <Row>\r\n                      <Col md={8}>\r\n                        <h2 className=\"font-weight-bold\">Experience</h2>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <Button\r\n                          color=\"primary\"\r\n                          outline\r\n                          className=\"icon-button\"\r\n                          style={{ border: \"none\" }}\r\n                          size=\"sm\"\r\n                          // onClick={handleAddWork}\r\n                        >\r\n                          <span\r\n                            className=\"text-primary\"\r\n                            style={{ fontSize: \"24px\" }}\r\n                          >\r\n                            +\r\n                          </span>\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </ModalHeader> */}\r\n                  <ModalBody>\r\n                    <Row className=\"align-items-center mb-3 \">\r\n                      <Col>\r\n                        <h2 className=\"font-weight-bold\">Edit Experience</h2>\r\n                      </Col>\r\n                      <Col xs=\"auto\" className=\"ml-auto\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          outline\r\n                          className=\"icon-button\"\r\n                          style={{ border: \"none\" }}\r\n                          size=\"sm\"\r\n                          onClick={handleAddWork}\r\n                        >\r\n                          <span\r\n                            className=\"text-primary\"\r\n                            style={{ fontSize: \"24px\" }}\r\n                          >\r\n                            +\r\n                          </span>\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    {isEditingExpSecond ? (\r\n                      <div className=\"col-lg-12 col-12\">\r\n                        {/* <Label for=\"experience\" className=\"text-dark\">\r\n                          <h4>Experience</h4>\r\n                        </Label> */}\r\n                        {experience[editingIndex] && (\r\n                          <>\r\n                            <Row>\r\n                              <Col md={6}>\r\n                                <FormGroup className=\"error-l-75\">\r\n                                  <Label\r\n                                    for={`experience[${editingIndex}].company`}\r\n                                  >\r\n                                    Company Name*\r\n                                  </Label>\r\n                                  <Input\r\n                                    className=\"form-control\"\r\n                                    name={`experience[${editingIndex}].company`}\r\n                                    value={\r\n                                      experience[editingIndex]?.company || \"\"\r\n                                    }\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        editingIndex,\r\n                                        \"company\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md={6}>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for={`experience[${editingIndex}].jobTitle`}\r\n                                  >\r\n                                    Job title*\r\n                                  </Label>\r\n                                  <Input\r\n                                    name={`experience[${editingIndex}].jobTitle`}\r\n                                    id={`experience[${editingIndex}].jobTitle`}\r\n                                    className=\"form-control\"\r\n                                    value={\r\n                                      experience[editingIndex]?.jobTitle || \"\"\r\n                                    }\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        editingIndex,\r\n                                        \"jobTitle\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                              <Col md={6}>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for={`experience[${editingIndex}].employmentType`}\r\n                                  >\r\n                                    Employment type*\r\n                                  </Label>\r\n                                  <Input\r\n                                    type=\"select\"\r\n                                    name={`experience[${editingIndex}].employmentType`}\r\n                                    id={`experience[${editingIndex}].employmentType`}\r\n                                    className=\"form-control\"\r\n                                    value={\r\n                                      experience[editingIndex]\r\n                                        ?.employmentType || \"\"\r\n                                    }\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        editingIndex,\r\n                                        \"employmentType\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <option key=\"\" value=\"\" disabled>\r\n                                      Select Employment type\r\n                                    </option>\r\n                                    {EmploymentTypeData.map((option) => (\r\n                                      <option key={option} value={option.label}>\r\n                                        {option.label}\r\n                                      </option>\r\n                                    ))}\r\n                                  </Input>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={6}>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for={`experience[${editingIndex}].jobLocation`}\r\n                                  >\r\n                                    Job location*\r\n                                  </Label>\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name={`experience[${editingIndex}].jobLocation`}\r\n                                    id={`experience[${editingIndex}].jobLocation`}\r\n                                    className=\"form-control\"\r\n                                    value={\r\n                                      experience[editingIndex]?.jobLocation ||\r\n                                      \"\"\r\n                                    }\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        editingIndex,\r\n                                        \"jobLocation\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                              <Col>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for={`experience[${editingIndex}].startYear`}\r\n                                  >\r\n                                    Start year\r\n                                  </Label>\r\n                                  <Input\r\n                                    type=\"select\"\r\n                                    name={`experience[${editingIndex}].startYear`}\r\n                                    id={`experience[${editingIndex}].startYear`}\r\n                                    className=\"form-control\"\r\n                                    value={\r\n                                      experience[editingIndex]?.startYear || \"\"\r\n                                    }\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        editingIndex,\r\n                                        \"startYear\",\r\n                                        parseInt(e.target.value, 10)\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <option disabled value=\"\">\r\n                                      Select year\r\n                                    </option>\r\n                                    {years.map((yr) => (\r\n                                      <option key={yr} value={yr}>\r\n                                        {yr}\r\n                                      </option>\r\n                                    ))}\r\n                                  </Input>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for={`experience[${editingIndex}].endYear`}\r\n                                  >\r\n                                    End year\r\n                                  </Label>\r\n                                  <Input\r\n                                    type=\"select\"\r\n                                    name={`experience[${editingIndex}].endYear`}\r\n                                    id={`experience[${editingIndex}].endYear`}\r\n                                    className=\"form-control\"\r\n                                    value={\r\n                                      experience[editingIndex]?.endYear || \"\"\r\n                                    }\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        editingIndex,\r\n                                        \"endYear\",\r\n                                        parseInt(e.target.value, 10)\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <option disabled value=\"\">\r\n                                      Select year\r\n                                    </option>\r\n                                    {years.map((yr) => (\r\n                                      <option key={yr} value={yr}>\r\n                                        {yr === currentYear ? \"Present\" : yr}\r\n                                      </option>\r\n                                    ))}\r\n                                  </Input>\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </Row>\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        {experience?.map((value, index) => (\r\n                          <Row\r\n                            key={value.id}\r\n                            className=\"d-flex align-items-center justify-content-between \"\r\n                          >\r\n                            <Col>\r\n                              <div>\r\n                                <p className=\"text-one font-weight-medium \">\r\n                                  {value.jobTitle} <br /> {value.company} |{\" \"}\r\n                                  {value.startYear} - {value.endYear}\r\n                                </p>\r\n                              </div>\r\n                            </Col>\r\n\r\n                            <Col xs=\"auto\">\r\n                              <Button\r\n                                color=\"primary\"\r\n                                outline\r\n                                className=\"icon-button mr-1\"\r\n                                size=\"sm\"\r\n                                onClick={() => handleEditExperience(index)}\r\n                                style={{ border: \"none\" }}\r\n                              >\r\n                                <i className=\"simple-icon-pencil\" />\r\n                              </Button>\r\n                              <Button\r\n                                color=\"primary\"\r\n                                outline\r\n                                className=\"icon-button\"\r\n                                size=\"sm\"\r\n                                onClick={() => handleDeleteExperience(index)}\r\n                                style={{ border: \"none\" }}\r\n                              >\r\n                                <i className=\"simple-icon-trash\" />\r\n                              </Button>\r\n                            </Col>\r\n                          </Row>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </ModalBody>\r\n\r\n                  <ModalFooter>\r\n                    <>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        onClick={handleSaveExp}\r\n                        className=\"mr-2\"\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        outline\r\n                        onClick={handleCancelEditExp}\r\n                        className=\"ml-2\"\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </>\r\n                  </ModalFooter>\r\n                </Modal>\r\n                {/* Exp modal ends */}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {/* Experience section ends */}\r\n        {/* Eduction section starts */}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row className=\"align-items-center\">\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Education</h2>\r\n\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingEducation(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  {college.map((colleges) => (\r\n                    <Col key={colleges} md={12} className=\"mb-3\">\r\n                      {\" \"}\r\n                      {/* Use index as a key, but consider using a unique identifier if available */}\r\n                      <h3 className=\"font-weight-semibold\">\r\n                        {colleges.degree}\r\n                      </h3>\r\n                      <h3 className=\"text-muted\">\r\n                        {colleges.collegeName} | {colleges.year}\r\n                      </h3>\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n\r\n                {/* Education modal starts */}\r\n                <Modal\r\n                  isOpen={isEditingEducation}\r\n                  toggle={() => setIsEditingEducation(!isEditingEducation)}\r\n                  className=\"\"\r\n                  size=\"lg\"\r\n                  style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                >\r\n                  <ModalBody>\r\n                    <div className=\"col-lg-12 col-12\">\r\n                      <Row className=\"align-items-center mb-3\">\r\n                        <Col>\r\n                          <h2 className=\"font-weight-bold\">Edit Education</h2>\r\n                        </Col>\r\n                        <Col xs=\"auto\" className=\"ml-auto\">\r\n                          <Button\r\n                            color=\"primary\"\r\n                            outline\r\n                            className=\"icon-button\"\r\n                            style={{ border: \"none\" }}\r\n                            size=\"sm\"\r\n                            onClick={handleAddEducation}\r\n                          >\r\n                            <span\r\n                              className=\"text-primary\"\r\n                              style={{ fontSize: \"24px\" }}\r\n                            >\r\n                              +\r\n                            </span>\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      <div className=\"\">\r\n                        {college.map((colleges, index) => (\r\n                          <Row key={colleges} className=\"mt-2\">\r\n                            <Col className=\"\">\r\n                              <h3 className=\"font-weight-semibold\">\r\n                                {colleges.degree}\r\n                              </h3>\r\n                              <h3 className=\"text-muted\">\r\n                                {colleges.collegeName} | {colleges.year}\r\n                              </h3>\r\n                            </Col>\r\n                            <Col xs=\"auto\">\r\n                              <Button\r\n                                color=\"primary\"\r\n                                outline\r\n                                className=\"icon-button mr-1\"\r\n                                size=\"sm\"\r\n                                onClick={() => handleEditEducation(index)} // Call edit handler with index\r\n                                style={{ border: \"none\" }}\r\n                              >\r\n                                <i className=\"simple-icon-pencil\" />\r\n                              </Button>\r\n\r\n                              <Button\r\n                                color=\"primary\"\r\n                                outline\r\n                                className=\"icon-button\"\r\n                                size=\"sm\"\r\n                                onClick={() => handleDeleteEducation(index)} // Call edit handler with index\r\n                                style={{ border: \"none\" }}\r\n                              >\r\n                                <i className=\"simple-icon-trash\" />\r\n                              </Button>\r\n                            </Col>\r\n                          </Row>\r\n                        ))}\r\n                      </div>\r\n                      {isEditingEducationSecond ? (\r\n                        <>\r\n                          {/* {college.map((colleges, index) => (\r\n                            <Row key={colleges}>\r\n                              <Col className=\"bg-primary\">\r\n                                <h3 className=\"font-weight-semibold\">\r\n                                  {colleges.degree}\r\n                                </h3>\r\n                                <h3 className=\"text-muted\">\r\n                                  {colleges.collegeName} | {colleges.year}\r\n                                </h3>\r\n                              </Col>\r\n                              <Col xs=\"auto\">\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  outline\r\n                                  className=\"icon-button\"\r\n                                  size=\"sm\"\r\n                                  onClick={() => handleEditEducation(index)} // Call edit handler with index\r\n                                  style={{ border: \"none\" }}\r\n                                >\r\n                                  <i className=\"simple-icon-pencil\" />\r\n                                </Button>\r\n                              </Col>\r\n                            </Row>\r\n                          ))} */}\r\n\r\n                          <Row>\r\n                            <Col md={6}>\r\n                              {/* Render only for the selected college */}\r\n                              {college[editingIndex] && (\r\n                                <>\r\n                                  <FormGroup className=\"error-l-75\">\r\n                                    <Label>College Name*</Label>\r\n                                    <Input\r\n                                      className=\"form-control\"\r\n                                      name={`education[${editingIndex}].collegeName`}\r\n                                      id={`education[${editingIndex}].collegeName`}\r\n                                      value={college[editingIndex].collegeName}\r\n                                      onChange={(e) =>\r\n                                        handleInputEducationChange(\r\n                                          editingIndex,\r\n                                          \"collegeName\",\r\n                                          e.target.value\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                  </FormGroup>\r\n                                </>\r\n                              )}\r\n                            </Col>\r\n                            <Col md={6}>\r\n                              {college[editingIndex] && (\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for={`education[${editingIndex}].degree`}\r\n                                  >\r\n                                    Degree*\r\n                                  </Label>\r\n                                  <Input\r\n                                    name={`education[${editingIndex}].degree`}\r\n                                    id={`education[${editingIndex}].degree`}\r\n                                    className=\"form-control\"\r\n                                    value={college[editingIndex].degree}\r\n                                    onChange={(e) =>\r\n                                      handleInputEducationChange(\r\n                                        editingIndex,\r\n                                        \"degree\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                </FormGroup>\r\n                              )}\r\n                            </Col>\r\n\r\n                            <Col md={6}>\r\n                              {college[editingIndex] && (\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for={`education[${editingIndex}].department`}\r\n                                  >\r\n                                    Department*\r\n                                  </Label>\r\n                                  <Input\r\n                                    name={`education[${editingIndex}].department`}\r\n                                    id={`education[${editingIndex}].department`}\r\n                                    className=\"form-control\"\r\n                                    value={college[editingIndex].department}\r\n                                    onChange={(e) =>\r\n                                      handleInputEducationChange(\r\n                                        editingIndex,\r\n                                        \"department\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                </FormGroup>\r\n                              )}\r\n                            </Col>\r\n                            <Col md={6}>\r\n                              {college[editingIndex] && (\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for={`education[${editingIndex}].degree`}\r\n                                  >\r\n                                    Year*\r\n                                  </Label>\r\n                                  <Input\r\n                                    name={`education[${editingIndex}].year`}\r\n                                    id={`education[${editingIndex}].year`}\r\n                                    className=\"form-control\"\r\n                                    value={college[editingIndex].year}\r\n                                    onChange={(e) =>\r\n                                      handleInputEducationChange(\r\n                                        editingIndex,\r\n                                        \"year\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                </FormGroup>\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                        </>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={handleSaveEducation}\r\n                      className=\"mr-2\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      onClick={handleCancelEditEducation}\r\n                      className=\"ml-2\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n                {/* Education modal ends */}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {/* Eduction section ends */}\r\n        {/* language section starts */}{\" \"}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Languages known</h2>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingLanguages(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <ul\r\n                      className=\"text-one text-muted font-weight-bold d-flex flex-wrap p-0 mr-3 text-start\"\r\n                      style={{\r\n                        gap: \"30px\",\r\n                        listStyle: \"none\",\r\n                        paddingLeft: 0,\r\n                      }}\r\n                    >\r\n                      {languages.map((lang, index) => (\r\n                        <li\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          key={index}\r\n                          style={{\r\n                            position: \"relative\",\r\n                            paddingLeft: \"20px\",\r\n                          }}\r\n                        >\r\n                          <span\r\n                            style={{\r\n                              content: '\"\"',\r\n                              position: \"absolute\",\r\n                              left: 0,\r\n                              top: \"50%\",\r\n                              transform: \"translateY(-50%) rotate(45deg)\",\r\n                              width: \"7px\",\r\n                              height: \"7px\",\r\n                              backgroundColor: \"currentColor\",\r\n                            }}\r\n                          />\r\n                          {language.find((l) => l.iso_code === lang)?.name}{\" \"}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </Col>\r\n                </Row>\r\n                <Modal\r\n                  isOpen={isEditingLanguages}\r\n                  toggle={() => setIsEditingLanguages(!isEditingLanguages)}\r\n                  className=\"\"\r\n                  size=\"lg\"\r\n                  style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n                >\r\n                  <ModalHeader>\r\n                    <h2 className=\"font-weight-bold\">Languages</h2>\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <h5>Languages</h5>\r\n                    <>\r\n                      <FormGroup className=\"error-l-75\">\r\n                        <Select\r\n                          placeholder=\"Select Languages\"\r\n                          name=\"languages\"\r\n                          isMulti\r\n                          options={languageOptions}\r\n                          className=\"react-select\"\r\n                          classNamePrefix=\"react-select\"\r\n                          value={selectedLanguages}\r\n                          onChange={(selectedOptions) => {\r\n                            setSelectedLanguages(selectedOptions);\r\n                            handleChange(selectedOptions);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      {languages.map((lang, index) => (\r\n                        <Button\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          key={index}\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"mt-2 font-weight-semibold mx-2\"\r\n                          size=\"sm\"\r\n                          onClick={() => handleRemoveLanguages(index)}\r\n                        >\r\n                          {language.find((l) => l.iso_code === lang)?.name}{\" \"}\r\n                          <i className=\"iconsminds-close\" />\r\n                        </Button>\r\n                      ))}\r\n                    </>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={handleLanguagesSave}\r\n                      className=\"mr-2\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      onClick={handleLanguagesCancel}\r\n                      className=\"ml-2\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {/* language section ends */}\r\n        {/* skill section starts */}\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Skills</h2>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingSkills(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <div\r\n                  className=\"d-flex flex-wrap\"\r\n                  style={{ gap: \"10px\", marginTop: \"10px\" }}\r\n                >\r\n                  {skills.map((newTopics, index) => (\r\n                    <Button\r\n                      // eslint-disable-next-line react/no-array-index-key\r\n                      key={index}\r\n                      color={index < 3 ? \"primary\" : \"light\"}\r\n                      className=\"mb-2 font-weight-semibold mr-2\"\r\n                      size=\"sm\"\r\n                    >\r\n                      {newTopics}\r\n                    </Button>\r\n                  ))}\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Modal\r\n            isOpen={isEditingSkills}\r\n            s\r\n            toggle={() => setIsEditingSkills(!isEditingSkills)}\r\n            className=\"\"\r\n            size=\"lg\"\r\n            style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n          >\r\n            <ModalHeader>\r\n              <h2 className=\"font-weight-bold\">Skills</h2>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <div className=\"mt-4\">\r\n                <h5>Skills</h5>\r\n\r\n                <InputGroup className=\"mb-3\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"New skill\"\r\n                    value={newInputSkill}\r\n                    onChange={(e) => setNewInputSkill(e.target.value)}\r\n                    onKeyDown={(event) => {\r\n                      if (event.key === \"Enter\") {\r\n                        handleAddSkill(newInputSkill);\r\n                        setNewInputSkill(\"\");\r\n                      }\r\n                    }}\r\n                  />\r\n                  <InputGroupAddon addonType=\"append\">\r\n                    <Button\r\n                      outline\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        handleAddSkill(newInputSkill);\r\n                        setNewInputSkill(\"\");\r\n                      }}\r\n                    >\r\n                      Add Skill\r\n                    </Button>\r\n                  </InputGroupAddon>\r\n                </InputGroup>\r\n\r\n                {skillValidationMessage && (\r\n                  <div className=\"invalid-feedback d-block\">\r\n                    {skillValidationMessage}\r\n                  </div>\r\n                )}\r\n                <Row className=\"\">\r\n                  <ReactSortable\r\n                    list={skills}\r\n                    setList={setSkills}\r\n                    options={{ handle: \".handle\" }}\r\n                    className=\"d-flex flex-wrap ml-2\"\r\n                  >\r\n                    {skills.map((skill, index) => (\r\n                      <Button\r\n                        // eslint-disable-next-line react/no-array-index-key\r\n                        key={index}\r\n                        color={index < 3 ? \"primary\" : \"light\"}\r\n                        className=\" mb-2 font-weight-semibold ml-2 mx-2 d-flex align-items-center\"\r\n                        size=\"sm\"\r\n                        onClick={() => handleRemoveSkill(index)}\r\n                      >\r\n                        {skill} <i className=\"iconsminds-close ml-1\" />\r\n                      </Button>\r\n                    ))}\r\n                  </ReactSortable>\r\n                </Row>\r\n\r\n                <p className=\"text-muted ml-2\">\r\n                  Drag topic to set top 3 (the top 3 topics will be displayed on\r\n                  alumni cards)\r\n                </p>\r\n              </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={handleSaveSkill}\r\n                className=\"mr-2\"\r\n              >\r\n                Save\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                outline\r\n                onClick={handleSkillCancel}\r\n                className=\"ml-2\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </Row>\r\n        {/* skill section ends */}\r\n        {/* price section starts */}\r\n        <Row className=\"my-4 \">\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row className=\"align-items-center\">\r\n                  <Col className=\"d-flex justify-content-between\">\r\n                    <h2 className=\"font-weight-bold\">Price</h2>\r\n\r\n                    <Button\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"icon-button\"\r\n                      size=\"sm\"\r\n                      onClick={() => setIsEditingPrice(true)}\r\n                      style={{ border: \"none\" }}\r\n                    >\r\n                      <i className=\"simple-icon-pencil\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <div>\r\n                  <h2 className=\"font-weight-semi-bold \">₹ {price}</h2>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          {/* price modal starts */}\r\n          <Modal\r\n            isOpen={isEditingPrice}\r\n            toggle={() => setIsEditingPrice(!isEditingPrice)}\r\n            className=\"\"\r\n            size=\"lg\"\r\n            style={{ borderRadius: \"10px\", overflow: \"hidden\" }}\r\n          >\r\n            <ModalHeader style={{ borderBottom: \"none\" }}>\r\n              <h2 className=\"font-weight-bold\">Price</h2>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <br />\r\n\r\n              <>\r\n                <Label for=\"about\" className=\"text-muted\">\r\n                  <h4>Price</h4>\r\n                </Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"about\"\r\n                  value={price}\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                  className=\" text-one\"\r\n                />\r\n                <br />\r\n              </>\r\n            </ModalBody>\r\n            <ModalFooter\r\n              style={{ borderTop: \"none\" }}\r\n              className=\"d-flex align-items-center justify-content-center\"\r\n            >\r\n              <Button color=\"primary\" onClick={() => handleSavePrice()}>\r\n                Save\r\n              </Button>{\" \"}\r\n              <Button\r\n                color=\"primary\"\r\n                outline\r\n                onClick={() => setIsEditingPrice(false)}\r\n                className=\"\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n          {/* price modal ends */}\r\n        </Row>\r\n        {/* price section ends */}\r\n        {/* new design code ends */}\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlumniMyProfile;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport CustomSelectInput from \"components/common/CustomSelectInput\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  Row,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport DateRangePicker from \"../BigCalendar/DateRangePicker\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst AlumniCalendar = () => {\r\n  // To change the url to backend uncomment the below line\r\n  const url = `${baseUrl}/api/calendar/appointment/mentor`;\r\n\r\n  const [mentoravailable, setMentorAvailable] = useState([]);\r\n  const [currentWeekStart, setCurrentWeekStart] = useState(new Date());\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  // const mentorName = searchParams.get('mentorName');\r\n  const mentorId = searchParams.get(\"mentorId\");\r\n  const history = useHistory();\r\n\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  const [selectedHourDropdown, setSelectedHourDropdown] = useState(null); // Renamed state variable\r\n  const [selectedHourDropdown1, setSelectedHourDropdown1] = useState(null); // Renamed state variable\r\n\r\n  const [minutedrop, setMinutedrop] = useState(null);\r\n  const [minutedrop1, setMinutedrop1] = useState(null);\r\n  const [modalSmall, setModalSmall] = useState(false);\r\n  const [selectedfromampm, setSelectedFromAmPm] = useState(null); // State for AM selection\r\n  const [selectedfromampm1, setSelectedFromAmPm1] = useState(null); // State for AM selection\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const redirectToSessionLists1 = () => {\r\n    // Redirect to the specified URL with the query parameter\r\n    history.push(\"/app/sessionmentor\");\r\n  };\r\n\r\n  // Function to get the start date of the current week\r\n  const getStartOfWeek = () => {\r\n    const currentDate = new Date();\r\n    const day = currentDate.getDay();\r\n    const diff = currentDate.getDate() - day + (day === 0 ? -6 : 1); // Adjust when day is Sunday\r\n    return new Date(currentDate.setDate(diff));\r\n  };\r\n\r\n  const fetchMentorSlotsCreate = async (fromTime, toTime) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${url}?&fromTime=${fromTime}&toTime=${toTime}`\r\n      );\r\n\r\n      const availability = response.data;\r\n      setMentorAvailable(availability);\r\n      // console.log(availability);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleOkButtonClick = async () => {\r\n    setLoading(true);\r\n    // Ensure selectedDate is not null\r\n    if (!selectedDate) {\r\n      console.error(\"Selected date is null\");\r\n      return;\r\n    }\r\n\r\n    // Convert selected date to UTC timestamp\r\n    const selectedDateTime = new Date(selectedDate);\r\n\r\n    // Set the hours and minutes for the selected date\r\n    const selectedHourFrom =\r\n      (selectedHourDropdown % 12) + (selectedfromampm === \"PM\" ? 12 : 0); // Adjust for PM\r\n    selectedDateTime.setHours(selectedHourFrom, minutedrop, 0, 0);\r\n    const fromTimeStamp = selectedDateTime.getTime(); // Get the UTC timestamp for 'from' time\r\n\r\n    // Calculate 'to' time\r\n    const toDateTime = new Date(selectedDateTime); // Create a new Date object based on 'from' time\r\n    const selectedHourTo =\r\n      (selectedHourDropdown1 % 12) + (selectedfromampm1 === \"PM\" ? 12 : 0); // Adjust for PM\r\n    toDateTime.setHours(selectedHourTo, minutedrop1, 0, 0); // Set the 'to' hour\r\n    const toTimeStamp = toDateTime.getTime(); // Get the UTC timestamp for 'to' time\r\n\r\n    // Create an object with the required structure\r\n    const slot = {\r\n      fromTimeStamp,\r\n      toTimeStamp,\r\n    };\r\n\r\n    // Make the POST request\r\n    try {\r\n      const response = await axios.post(url, [slot]);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      // console.log('Data saved successfully:', response.data);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      }\r\n      console.error(\"Error saving data:\", error);\r\n    }\r\n\r\n    setLoading(false);\r\n    setModalSmall(false);\r\n\r\n    // window.location.reload();\r\n    const startOfWeekTimestamp = new Date(currentWeekStart);\r\n    startOfWeekTimestamp.setHours(0, 0, 0, 0);\r\n    const endOfWeekTimestamp = new Date(currentWeekStart);\r\n    endOfWeekTimestamp.setDate(endOfWeekTimestamp.getDate() + 6);\r\n    endOfWeekTimestamp.setHours(23, 59, 59, 999);\r\n    fetchMentorSlotsCreate(\r\n      startOfWeekTimestamp.getTime(),\r\n      endOfWeekTimestamp.getTime()\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Set the time of currentWeekStart to 12:00 PM (noon)\r\n    const startOfWeekTimestamp = new Date(currentWeekStart);\r\n    startOfWeekTimestamp.setHours(0, 0, 0, 0);\r\n\r\n    // Set the time of endOfWeekTimestamp to 11:59 PM\r\n    const endOfWeekTimestamp = new Date(currentWeekStart);\r\n    endOfWeekTimestamp.setDate(endOfWeekTimestamp.getDate() + 6); // Set to end of week\r\n    endOfWeekTimestamp.setHours(23, 59, 59, 999);\r\n\r\n    const newUrl = `${window.location.origin}${\r\n      window.location.pathname\r\n    }?&fromTime=${startOfWeekTimestamp.getTime()}&toTime=${endOfWeekTimestamp.getTime()}`;\r\n    window.history.replaceState(null, \"\", newUrl);\r\n\r\n    fetchMentorSlotsCreate(\r\n      startOfWeekTimestamp.getTime(),\r\n      endOfWeekTimestamp.getTime()\r\n    );\r\n  }, [currentWeekStart, mentorId]);\r\n\r\n  useEffect(() => {\r\n    const startOfWeek = getStartOfWeek();\r\n    setCurrentWeekStart(startOfWeek);\r\n  }, []);\r\n\r\n  // weeklist functions start\r\n  const handleDropdownItemClick = (selectedHour) => {\r\n    setSelectedHourDropdown(selectedHour.value);\r\n\r\n    console.log(`Selected hour: ${selectedHour.value}`);\r\n  };\r\n\r\n  const handleDropdownItemClick1 = (selectedMinute) => {\r\n    setMinutedrop(selectedMinute.value);\r\n  };\r\n\r\n  const handleDropdownItemClick2 = (selectedHour) => {\r\n    setSelectedHourDropdown1(selectedHour.value);\r\n  };\r\n  const handleDropdownItemClick3 = (selectedMinute) => {\r\n    setMinutedrop1(selectedMinute.value);\r\n  };\r\n\r\n  const handleDropdownItemClick4 = (selectedAmPmFrom) => {\r\n    setSelectedFromAmPm(selectedAmPmFrom.value);\r\n    console.log(`Selected from AM/PM: ${selectedAmPmFrom.value}`);\r\n  };\r\n  const handleDropdownItemClick5 = (selectedAmPmTo) => {\r\n    setSelectedFromAmPm1(selectedAmPmTo.value);\r\n    console.log(`Selected from AM/PM: ${selectedAmPmTo.value}`);\r\n  };\r\n  const generateDropdownItemsSelect = () => {\r\n    const items = [];\r\n    for (let i = 1; i <= 12; i += 1) {\r\n      const formattedHour = i < 10 ? `0${i}` : i;\r\n      items.push({ value: formattedHour, label: formattedHour });\r\n    }\r\n    return items;\r\n  };\r\n  const generateMinuteDropdownItems = () => {\r\n    const minutes = [0, 15, 30, 45];\r\n    const items = [];\r\n\r\n    minutes.forEach((minute) => {\r\n      const formattedMinute = minute < 10 ? `0${minute}` : `${minute}`;\r\n      items.push({ value: formattedMinute, label: formattedMinute });\r\n    });\r\n\r\n    return items;\r\n  };\r\n  const generateAmPmDropdownItems1 = () => {\r\n    const amPmOptions = [\"AM\", \"PM\"];\r\n    const items = [];\r\n\r\n    amPmOptions.forEach((amPm) => {\r\n      items.push({ value: amPm, label: amPm });\r\n    });\r\n\r\n    return items;\r\n  };\r\n  const generateDropdownItems1 = () => {\r\n    const items = [];\r\n    for (let i = 1; i <= 12; i += 1) {\r\n      const formattedHour = i < 10 ? `0${i}` : i;\r\n      items.push({ value: formattedHour, label: formattedHour });\r\n    }\r\n    return items;\r\n  };\r\n  const generateMinuteDropdownItems1 = () => {\r\n    const minutes = [0, 15, 30, 45];\r\n    const items = [];\r\n\r\n    minutes.forEach((minute) => {\r\n      const formattedMinute = minute < 10 ? `0${minute}` : `${minute}`;\r\n      items.push({ value: formattedMinute, label: formattedMinute });\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n  const generateAmPmDropdownItems = () => {\r\n    const amPmOptions = [\"AM\", \"PM\"];\r\n    const items = [];\r\n\r\n    amPmOptions.forEach((amPm) => {\r\n      items.push({ value: amPm, label: amPm });\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n  const goToPreviousWeek = () => {\r\n    const newStartDate = new Date(currentWeekStart);\r\n    newStartDate.setDate(newStartDate.getDate() - 7);\r\n    setCurrentWeekStart(newStartDate);\r\n  };\r\n\r\n  const goToNextWeek = () => {\r\n    const newStartDate = new Date(currentWeekStart);\r\n    newStartDate.setDate(newStartDate.getDate() + 7);\r\n    setCurrentWeekStart(newStartDate);\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    const monthNames = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    const month = monthNames[date.getMonth()];\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    return `${day}-${month}-${date.getFullYear()}`;\r\n  };\r\n  const getWeekDates = () => {\r\n    const weekDates = [];\r\n    const startDate = new Date(currentWeekStart);\r\n    for (let i = 0; i < 7; i += 1) {\r\n      const currentDate = new Date(startDate);\r\n      currentDate.setDate(startDate.getDate() + i);\r\n      weekDates.push(currentDate);\r\n    }\r\n    return weekDates;\r\n  };\r\n\r\n  const isPreviousWeekDisabled = () => {\r\n    // Disable the button if you're already in the current week\r\n    const today = new Date();\r\n    const currentWeekStartDate = new Date(today);\r\n    const day = today.getDay(); // Get the day of the week (0 = Sunday, 1 = Monday, ..., 6 = Saturday)\r\n\r\n    if (day === 0) {\r\n      // If today is Sunday, subtract 6 days to get the start of the current week\r\n      currentWeekStartDate.setDate(today.getDate() - 6);\r\n    } else {\r\n      // Otherwise, subtract the number of days from the current day to get the start of the current week\r\n      currentWeekStartDate.setDate(today.getDate() - (day - 1));\r\n    }\r\n\r\n    // Set hours, minutes, seconds, and milliseconds to zero\r\n    currentWeekStartDate.setHours(0, 0, 0, 0);\r\n\r\n    const storedWeekStart = new Date(currentWeekStart);\r\n    storedWeekStart.setHours(0, 0, 0, 0); // Set hours, minutes, seconds, and milliseconds to zero\r\n\r\n    const disabled =\r\n      currentWeekStartDate.getTime() === storedWeekStart.getTime();\r\n\r\n    return disabled;\r\n  };\r\n\r\n  const handleTimeSlotClick = (date) => {\r\n    setSelectedDate(date);\r\n\r\n    setModalSmall(true); // Optionally open the modal when a time slot is clicked\r\n  };\r\n\r\n  const handleAddSlotClick = (date) => {\r\n    setSelectedDate(date); // Set the selected date\r\n    setModalSmall(true); // Show the modal\r\n  };\r\n  const deleteMentorSlot = async (id, fromTime, toTime) => {\r\n    try {\r\n      await axios.delete(`${baseUrl}/api/calendar/delete/${id}`);\r\n      // Fetch the updated slots after deletion\r\n      await fetchMentorSlotsCreate(fromTime, toTime);\r\n    } catch (error) {\r\n      console.error(\"Error deleting slot:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSlotClick = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this slot?\")) {\r\n      // Use selected date and time from state\r\n      const selectedDateTime = new Date(selectedDate);\r\n\r\n      // Set the hours and minutes for the selected date\r\n      const selectedHourFrom =\r\n        (selectedHourDropdown % 12) + (selectedfromampm === \"PM\" ? 12 : 0); // Adjust for PM\r\n      selectedDateTime.setHours(selectedHourFrom, minutedrop, 0, 0);\r\n      const fromTime = selectedDateTime.getTime(); // Get the UTC timestamp for 'from' time\r\n\r\n      // Calculate 'to' time\r\n      const toDateTime = new Date(selectedDateTime); // Create a new Date object based on 'from' time\r\n      const selectedHourTo =\r\n        (selectedHourDropdown1 % 12) + (selectedfromampm1 === \"PM\" ? 12 : 0); // Adjust for PM\r\n      toDateTime.setHours(selectedHourTo, minutedrop1, 0, 0); // Set the 'to' hour\r\n      const toTime = toDateTime.getTime(); // Get the UTC timestamp for 'to' time\r\n\r\n      deleteMentorSlot(id, fromTime, toTime);\r\n    }\r\n  };\r\n\r\n  const handleCloseIconClick = (e, id) => {\r\n    e.stopPropagation();\r\n    handleDeleteSlotClick(id);\r\n  };\r\n\r\n  const selectData = generateDropdownItemsSelect();\r\n  const minutesSelectData = generateMinuteDropdownItems();\r\n  const toHoursSelectData = generateDropdownItems1();\r\n  const toMinutesSelectData = generateMinuteDropdownItems1();\r\n  const fromAmPmSelectData = generateAmPmDropdownItems();\r\n  const toAmPmSelectData = generateAmPmDropdownItems1();\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Colxx xxs=\"8\" className=\"mx-auto\">\r\n          {/* <h1 className='py-4 text-large'> {mentorName} availability</h1> */}\r\n          <h1 className=\"py-4 text-large\">My slots</h1>\r\n\r\n          <div className=\"font-weight-semibold d-flex justify-content-center align-items-center\">\r\n            <span\r\n              className=\"font-weight-semibold text-xlarge mr-2 cursor-pointer\"\r\n              style={{\r\n                cursor: isPreviousWeekDisabled() ? \"not-allowed\" : \"pointer\",\r\n                opacity: isPreviousWeekDisabled() ? 0.5 : 1, // Lower opacity for disabled state\r\n              }}\r\n              onClick={!isPreviousWeekDisabled() ? goToPreviousWeek : undefined}\r\n              onKeyDown={(e) => {\r\n                if (\r\n                  !isPreviousWeekDisabled() &&\r\n                  (e.key === \"Enter\" || e.key === \" \")\r\n                ) {\r\n                  goToPreviousWeek();\r\n                }\r\n              }}\r\n              role=\"button\"\r\n              tabIndex={!isPreviousWeekDisabled() ? 0 : -1}\r\n              aria-disabled={isPreviousWeekDisabled()}\r\n            >\r\n              {/* <i className='simple-icon-arrow-left' /> */}\r\n              <i\r\n                className={`simple-icon-arrow-left ${\r\n                  isPreviousWeekDisabled() ? \"disabled\" : \"\"\r\n                }`}\r\n              />\r\n            </span>\r\n\r\n            <div>\r\n              <h4 className=\" font-weight-semibold\">\r\n                {formatDate(currentWeekStart)} -{\" \"}\r\n                {formatDate(\r\n                  new Date(currentWeekStart.getTime() + 6 * 24 * 60 * 60 * 1000)\r\n                )}\r\n              </h4>\r\n            </div>\r\n            <span\r\n              className=\"ml-2 font-weight-semibold text-xlarge\"\r\n              role=\"button\"\r\n              tabIndex={0}\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={goToNextWeek}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\" || e.key === \" \") {\r\n                  goToNextWeek();\r\n                }\r\n              }}\r\n            >\r\n              <i className=\"simple-icon-arrow-right\" />\r\n            </span>\r\n            {/* <Button className='ml-5 font-weight-semibold text-one' color=\"primary\" onClick={goToNextWeek} ><i className='simple-icon-arrow-right '/></Button> */}\r\n          </div>\r\n          <Card className=\"mb-4 mt-4\">\r\n            <CardBody>\r\n              <Table bordered>\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-one\">Date</th>\r\n                    <th className=\"text-center text-one\">Availablilty time</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {getWeekDates().map((date) => (\r\n                    <tr key={date.getTime()}>\r\n                      {/* <td>{getMonthName(date.getMonth())} {formatDate(date)}</td> */}\r\n                      <td> {formatDate(date)}</td>\r\n\r\n                      <td>\r\n                        {/*  new one */}\r\n\r\n                        {mentoravailable.map((availability) => {\r\n                          let hasSlotsForDay = false; // Flag to track if there are slots for the particular day\r\n\r\n                          const slots = availability.availableSlots.map(\r\n                            (avail) => {\r\n                              const availDate = new Date(avail.fromTimeStamp);\r\n                              if (\r\n                                availDate.toDateString() === date.toDateString()\r\n                              ) {\r\n                                hasSlotsForDay = true; // Set flag true if there's at least one slot for the day\r\n\r\n                                const FromDate = new Date(avail.fromTimeStamp);\r\n                                const ToDate = new Date(avail.toTimeStamp);\r\n\r\n                                const fromHours =\r\n                                  FromDate.getHours() % 12 || 12;\r\n                                const fromMinutes = String(\r\n                                  FromDate.getMinutes()\r\n                                ).padStart(2, \"0\");\r\n                                const fromPeriod =\r\n                                  FromDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                                const toHours = ToDate.getHours() % 12 || 12;\r\n                                const toMinutes = String(\r\n                                  ToDate.getMinutes()\r\n                                ).padStart(2, \"0\");\r\n                                const toPeriod =\r\n                                  ToDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                                const fromTime = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n                                const toTime = `${toHours}:${toMinutes} ${toPeriod}`;\r\n\r\n                                const isPastTime = ToDate < new Date();\r\n\r\n                                return (\r\n                                  <div\r\n                                    key={avail.fromTimeStamp} // Updated key to use timestamp to ensure it is unique\r\n                                    role=\"button\"\r\n                                    tabIndex={0}\r\n                                    className={`text-center ${\r\n                                      isPastTime\r\n                                        ? \"cursor-not-allowed\"\r\n                                        : \"cursor-pointer\"\r\n                                    } py-2 mt-2`}\r\n                                    style={{\r\n                                      outline: `1px solid black`,\r\n                                      cursor: \"pointer\",\r\n                                    }}\r\n                                    onClick={() =>\r\n                                      handleTimeSlotClick(avail.fromTimeStamp)\r\n                                    }\r\n                                    onKeyDown={(e) => {\r\n                                      if (e.key === \"Enter\" || e.key === \" \") {\r\n                                        handleTimeSlotClick(\r\n                                          avail.fromTimeStamp\r\n                                        );\r\n                                      }\r\n                                    }}\r\n                                    onMouseEnter={(e) => {\r\n                                      e.currentTarget.classList.add(\r\n                                        \"bg-primary\"\r\n                                      );\r\n                                    }}\r\n                                    onMouseLeave={(e) => {\r\n                                      e.currentTarget.classList.remove(\r\n                                        \"bg-primary\"\r\n                                      );\r\n                                    }}\r\n                                  >\r\n                                    <span className=\"d-flex gap-5 justify-content-center align-items-center\">\r\n                                      {fromTime} to {toTime}\r\n                                      <i\r\n                                        className=\"simple-icon-close ml-4 text-one\"\r\n                                        role=\"button\"\r\n                                        tabIndex={0}\r\n                                        onClick={(e) =>\r\n                                          handleCloseIconClick(e, avail.id)\r\n                                        }\r\n                                        onKeyDown={(e) => {\r\n                                          if (\r\n                                            e.key === \"Enter\" ||\r\n                                            e.key === \" \"\r\n                                          ) {\r\n                                            handleCloseIconClick(e, avail.id);\r\n                                          }\r\n                                        }}\r\n                                      />\r\n                                    </span>\r\n                                  </div>\r\n                                );\r\n                              }\r\n                              return null;\r\n                            }\r\n                          );\r\n\r\n                          // Add slot button only once per date\r\n                          return (\r\n                            <>\r\n                              {slots}\r\n                              {hasSlotsForDay && (\r\n                                <div\r\n                                  className=\"mt-2 text-center mx-auto\"\r\n                                  key={`add-slot-${date.getTime()}`}\r\n                                >\r\n                                  <Button\r\n                                    size=\"sm\"\r\n                                    className=\"text-center mx-auto my-4\"\r\n                                    onClick={() => handleAddSlotClick(date)}\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    block\r\n                                    style={{ borderRadius: \"0px\" }}\r\n                                  >\r\n                                    +\r\n                                  </Button>\r\n                                </div>\r\n                              )}\r\n                            </>\r\n                          );\r\n                        })}\r\n                        {mentoravailable.every(\r\n                          (availability) =>\r\n                            !availability.availableSlots.some(\r\n                              (avail) =>\r\n                                new Date(avail.fromTimeStamp).toDateString() ===\r\n                                date.toDateString()\r\n                            )\r\n                        ) && (\r\n                          <div\r\n                            className=\"mt-2 text-center mx-auto\"\r\n                            key={`edit-${date.getTime()}`}\r\n                          >\r\n                            <Button\r\n                              size=\"sm\"\r\n                              className=\"text-center mx-auto my-4\"\r\n                              onClick={() => handleAddSlotClick(date)}\r\n                              key={`edit-${date.getTime()}`}\r\n                              outline\r\n                              color=\"primary\"\r\n                              block\r\n                              style={{ borderRadius: \"0px\" }}\r\n                            >\r\n                              +\r\n                            </Button>\r\n                          </div>\r\n                        )}\r\n\r\n                        {mentoravailable.map((availability) =>\r\n                          availability.bookedSlots.map((avail) => {\r\n                            const availDate = new Date(avail.fromTimeStamp);\r\n                            if (\r\n                              availDate.toDateString() === date.toDateString()\r\n                            ) {\r\n                              const FromDate = new Date(avail.fromTimeStamp);\r\n                              const ToDate = new Date(avail.toTimeStamp);\r\n\r\n                              const fromHours = FromDate.getHours() % 12 || 12;\r\n                              const fromMinutes = String(\r\n                                FromDate.getMinutes()\r\n                              ).padStart(2, \"0\");\r\n                              const fromPeriod =\r\n                                FromDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                              const toHours = ToDate.getHours() % 12 || 12;\r\n                              const toMinutes = String(\r\n                                ToDate.getMinutes()\r\n                              ).padStart(2, \"0\");\r\n                              const toPeriod =\r\n                                ToDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                              const fromTime = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n                              const toTime = `${toHours}:${toMinutes} ${toPeriod}`;\r\n\r\n                              const isPastTime = ToDate < new Date();\r\n\r\n                              return (\r\n                                <>\r\n                                  <div\r\n                                    key={date.getTime()}\r\n                                    role=\"button\" // Add role attribute for accessibility\r\n                                    tabIndex={0} // Add tabIndex for keyboard accessibility\r\n                                    className={`text-center ${\r\n                                      isPastTime\r\n                                        ? \"cursor-not-allowed\"\r\n                                        : \"cursor-pointer\"\r\n                                    } bg-primary py-2 mt-2`}\r\n                                    style={{ outline: \"none\" }} // Remove default focus outline if needed\r\n                                    // onClick={() => handleTimeSlotClick(date)}\r\n                                    onKeyDown={(e) => {\r\n                                      if (e.key === \"Enter\" || e.key === \" \") {\r\n                                        handleTimeSlotClick(date);\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    <span className=\"d-flex gap-5 justify-content-center align-items-center\">\r\n                                      {\" \"}\r\n                                      {fromTime} to {toTime}\r\n                                      <i className=\"iconsminds-full-view-2 ml-4\" />\r\n                                    </span>\r\n                                  </div>\r\n                                </>\r\n                              );\r\n                            }\r\n\r\n                            return null;\r\n                          })\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n\r\n              <div className=\"mb-4\">\r\n                <div>\r\n                  <div className=\"\">\r\n                    <Modal\r\n                      isOpen={modalSmall}\r\n                      toggle={() => setModalSmall(!modalSmall)}\r\n                      className=\"mt-5\"\r\n                    >\r\n                      <ModalBody>\r\n                        <div className=\"\">\r\n                          <div>\r\n                            <span\r\n                              style={{ cursor: \"pointer\" }}\r\n                              className=\"mt-2\"\r\n                              role=\"button\"\r\n                              tabIndex={0}\r\n                              onClick={() => setModalSmall(false)}\r\n                              onKeyDown={(e) => {\r\n                                if (e.key === \"Enter\" || e.key === \" \") {\r\n                                  setModalSmall(false);\r\n                                }\r\n                              }}\r\n                            >\r\n                              <i className=\"simple-icon-close text-large\" />\r\n                            </span>\r\n\r\n                            <div>\r\n                              <Form className=\"mt-4\">\r\n                                <FormGroup row className=\"\">\r\n                                  <Label sm={2} className=\"font-weight-bold\">\r\n                                    Date\r\n                                  </Label>\r\n                                  <Colxx sm={10}>\r\n                                    <DateRangePicker\r\n                                      selectedDate={selectedDate}\r\n                                      setSelectedDate={setSelectedDate}\r\n                                    />\r\n                                  </Colxx>\r\n                                </FormGroup>\r\n                              </Form>\r\n                            </div>\r\n\r\n                            <Label className=\"text-one font-weight-bold\">\r\n                              From\r\n                            </Label>\r\n                            <Row>\r\n                              <Col md={4} sm={12} lg={4}>\r\n                                <div className=\"form-group has-float-label\">\r\n                                  <Label>Hours</Label>\r\n\r\n                                  <Select\r\n                                    components={{ Input: CustomSelectInput }}\r\n                                    className=\"react-select\"\r\n                                    classNamePrefix=\"react-select\"\r\n                                    name=\"form-field-name\"\r\n                                    value={generateDropdownItemsSelect().find(\r\n                                      (option) =>\r\n                                        option.value === selectedHourDropdown\r\n                                    )}\r\n                                    onChange={handleDropdownItemClick}\r\n                                    options={[\r\n                                      {\r\n                                        value: \"\",\r\n                                        label: \"Hours\",\r\n                                        isDisabled: true,\r\n                                      },\r\n                                      ...selectData,\r\n                                    ]}\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n                              <Col md={4} sm={12} lg={4}>\r\n                                <div className=\"form-group has-float-label\">\r\n                                  <Label>Minutes</Label>\r\n\r\n                                  <Select\r\n                                    components={{ Input: CustomSelectInput }}\r\n                                    className=\"react-select\"\r\n                                    classNamePrefix=\"react-select\"\r\n                                    name=\"form-field-name\"\r\n                                    value={generateMinuteDropdownItems().find(\r\n                                      (option) => option.value === minutedrop\r\n                                    )}\r\n                                    onChange={handleDropdownItemClick1}\r\n                                    options={[\r\n                                      {\r\n                                        value: \"\",\r\n                                        label: \"Minutes\",\r\n                                        isDisabled: true,\r\n                                      },\r\n                                      ...minutesSelectData,\r\n                                    ]}\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n                              <Col md={4} sm={12} lg={4}>\r\n                                <div className=\"form-group has-float-label\">\r\n                                  <Label>AM/PM</Label>\r\n\r\n                                  <Select\r\n                                    components={{ Input: CustomSelectInput }}\r\n                                    className=\"react-select\"\r\n                                    classNamePrefix=\"react-select\"\r\n                                    name=\"form-field-name\"\r\n                                    // value={selectedfromampm}\r\n                                    value={fromAmPmSelectData.find(\r\n                                      (option) =>\r\n                                        option.value === selectedfromampm\r\n                                    )}\r\n                                    onChange={handleDropdownItemClick4}\r\n                                    options={[\r\n                                      {\r\n                                        value: \"\",\r\n                                        label: \"AM/PM\",\r\n                                        isDisabled: true,\r\n                                      },\r\n                                      ...fromAmPmSelectData,\r\n                                    ]}\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n                            </Row>\r\n                          </div>\r\n\r\n                          <div className=\"\">\r\n                            <Label className=\"text-one font-weight-bold\">\r\n                              To\r\n                            </Label>\r\n                            <div className=\"\">\r\n                              <Row>\r\n                                <Col md={4} lg={4} sm={12}>\r\n                                  <div className=\"form-group has-float-label\">\r\n                                    <Label>Hours</Label>\r\n\r\n                                    <Select\r\n                                      components={{ Input: CustomSelectInput }}\r\n                                      className=\"react-select\"\r\n                                      classNamePrefix=\"react-select\"\r\n                                      name=\"form-field-name\"\r\n                                      value={generateDropdownItems1().find(\r\n                                        (option) =>\r\n                                          option.value === selectedHourDropdown1\r\n                                      )}\r\n                                      onChange={handleDropdownItemClick2}\r\n                                      options={[\r\n                                        {\r\n                                          value: \"\",\r\n                                          label: \"Hours\",\r\n                                          isDisabled: true,\r\n                                        },\r\n                                        ...toHoursSelectData,\r\n                                      ]}\r\n                                    />\r\n                                  </div>\r\n                                </Col>\r\n                                <Col md={4} lg={4} sm={12}>\r\n                                  <div className=\"form-group has-float-label\">\r\n                                    <Label>Minutes</Label>\r\n\r\n                                    <Select\r\n                                      components={{ Input: CustomSelectInput }}\r\n                                      className=\"react-select\"\r\n                                      classNamePrefix=\"react-select\"\r\n                                      name=\"form-field-name\"\r\n                                      value={generateMinuteDropdownItems1().find(\r\n                                        (option) =>\r\n                                          option.value === selectedHourDropdown1\r\n                                      )}\r\n                                      onChange={handleDropdownItemClick3}\r\n                                      options={[\r\n                                        {\r\n                                          value: \"\",\r\n                                          label: \"Minutes\",\r\n                                          isDisabled: true,\r\n                                        },\r\n                                        ...toMinutesSelectData,\r\n                                      ]}\r\n                                    />\r\n                                  </div>\r\n                                </Col>\r\n                                <Col md={4} lg={4} sm={12}>\r\n                                  <div>\r\n                                    <div className=\"form-group has-float-label\">\r\n                                      <Label>AM/PM</Label>\r\n\r\n                                      <Select\r\n                                        components={{\r\n                                          Input: CustomSelectInput,\r\n                                        }}\r\n                                        className=\"react-select\"\r\n                                        classNamePrefix=\"react-select\"\r\n                                        name=\"form-field-name\"\r\n                                        // value={selectedfromampm}\r\n                                        value={toAmPmSelectData.find(\r\n                                          (option) =>\r\n                                            option.value === selectedfromampm1\r\n                                        )}\r\n                                        onChange={handleDropdownItemClick5}\r\n                                        options={[\r\n                                          {\r\n                                            value: \"\",\r\n                                            label: \"AM/PM\",\r\n                                            isDisabled: true,\r\n                                          },\r\n                                          ...toAmPmSelectData,\r\n                                        ]}\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                </Col>\r\n                              </Row>\r\n                              <Row>\r\n                                <Col>\r\n                                  <div className=\"row justify-content-center\">\r\n                                    <Button\r\n                                      onClick={handleOkButtonClick}\r\n                                      className={`btn-shadow btn-multiple-state ${\r\n                                        loading ? \"show-spinner\" : \"\"\r\n                                      }`}\r\n                                      color=\"primary\"\r\n                                    >\r\n                                      <span className=\"spinner d-inline-block\">\r\n                                        <span className=\"bounce1\" />\r\n                                        <span className=\"bounce2\" />\r\n                                        <span className=\"bounce3\" />\r\n                                      </span>\r\n                                      <span className=\"label\">OK</span>\r\n                                    </Button>\r\n                                  </div>\r\n                                </Col>\r\n                              </Row>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* <PopupWizard selectedDate={selectedDate} setSelectedDate={setSelectedDate} \r\n        mentorName={mentorName} mentorId={mentorId} /> */}\r\n                      </ModalBody>\r\n                    </Modal>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n\r\n          <Card style={{ cursor: \"pointer\" }} className=\"my-2 text-center\">\r\n            <CardBody onClick={redirectToSessionLists1}>\r\n              <h5 className=\"font-weight-bold text-primary\">\r\n                My Mentorship Sessions\r\n              </h5>\r\n            </CardBody>\r\n          </Card>\r\n          {/* <Button className='' onClick={redirectToSessionLists1}>My Sessions</Button> */}\r\n\r\n          {/* <PopupWizard/> */}\r\n        </Colxx>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlumniCalendar;\r\n","const AlumniSessionLists = () => {\r\n  return (\r\n    <div>\r\n      <h1>Alumni session lists</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlumniSessionLists;\r\n","/* eslint-disable no-param-reassign */\r\n\r\nimport axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { createRef, useEffect, useState } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  InputGroup,\r\n  Jumbotron,\r\n  Label,\r\n  NavLink,\r\n  Row,\r\n  Spinner,\r\n} from \"reactstrap\";\r\n// import { SliderTooltip } from \"components/common/SliderTooltips\";\r\n// import { FormikTagsInput } from \"containers/form-validations/FormikFields\";\r\n// import TagsInput from \"react-tagsinput\";\r\nimport { adminRoot, baseUrl } from \"constants/defaultValues\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  // validateReasonForMentor,\r\n  validateAchievement,\r\n  validateIdentityStatus,\r\n  // validateCompany,\r\n  // validateJobTitle,\r\n  // validateSkills,\r\n  // validateBio,\r\n  validateLinkedinUrl,\r\n  // validateCategory,\r\n  validateLocation,\r\n  validateStudent,\r\n} from \"../my-login/validation\";\r\n\r\n// import country from \"./Country\";\r\n\r\nimport country from \"../AlumniRegister/Country\";\r\nimport indentityStatusList from \"../CommonCardList/IdentityStatusList\";\r\nimport { EmploymentTypeData } from \"../Listing/ListingData\";\r\nimport language from \"../my-login/Languages\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst ApplyAsMentor = () => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const steps = [\"Profile\", \"Experience\", \"Others\"];\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [file1, setFile1] = useState(null);\r\n  // const [amount, setAmount] = useState(500);\r\n  const [loading, setLoading] = useState(false);\r\n  const [skillsTag, setSkillsTag] = useState([]);\r\n  const [certificationsTag, setCertificationsTag] = useState([]);\r\n  const history = useHistory();\r\n\r\n  // const [skillsTag, setSkillsTag] = useState([]);\r\n  // const [toolsTag, setToolsTag] = useState([]);\r\n  const [imageError, setImageError] = useState(false);\r\n  // const [skillError,setSkillError] = useState(false);\r\n  const [imageErrorMessage, setImageErrorMessage] = useState(null);\r\n  // const [skillErrorMessage,setSkillErrorMessage] = useState(null);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [aboutLoading, setAboutLoading] = useState(false);\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n  const [experienceLoading, setExperienceLoading] = useState(false);\r\n  const [aboutField, setAboutField] = useState({\r\n    image: \"\",\r\n  });\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [certificateInputValue, setCertificateInputValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const status = localStorage.getItem(\"status\");\r\n    // console.log(\"status\", status);\r\n    if (status) {\r\n      if (status === \"0\") {\r\n        setCurrentStep(0);\r\n      } else if (status === \"1\") {\r\n        setCurrentStep(1);\r\n      } else if (status === \"3\") {\r\n        setCurrentStep(2);\r\n      } else if (status === \"7\") {\r\n        setCurrentStep(3);\r\n      } else {\r\n        setCurrentStep(0);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // const [fields] = useState({\r\n  //   image: \"\",\r\n\r\n  //   jobTitle: \"\",\r\n  //   company: \"\",\r\n  //   location: \"\",\r\n  //   category: \"\",\r\n  //   skills: [],\r\n  //   bio: \"\",\r\n  //   linkedinUrl: \"\",\r\n  //   twitterHandle: \"\",\r\n  //   website: \"\",\r\n  //   introVideo: \"\",\r\n  //   featuredArticle: \"\",\r\n  //   reasonForMentor: \"\",\r\n  //   achievement: \"\",\r\n  // });\r\n\r\n  const currentYear = new Date().getFullYear();\r\n  const years = [];\r\n\r\n  for (let year = currentYear; year >= 2005; year -= 1) {\r\n    years.push(year);\r\n  }\r\n\r\n  const languageOptions = language.map((option) => ({\r\n    value: option.iso_code,\r\n    label: option.name,\r\n  }));\r\n\r\n  const studentTypeOptions = [\r\n    { value: \"CURRENT_STUDENT\", label: \"Current Student\" },\r\n    { value: \"ABROAD_EDUCATION\", label: \"Aboard Education\" },\r\n    { value: \"NEW_ENTRANT\", label: \"New Entrant\" },\r\n  ];\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  // file upload validation\r\n\r\n  const validateFile = (file) => {\r\n    // const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\r\n    const maxSize = 2 * 1024 * 1024; // 5MB\r\n    // if (!file) {\r\n    //   setImageError(true);\r\n    //   setImageErrorMessage(\"A profile picture is required\");\r\n    //   return false;\r\n    // }\r\n    // if (!allowedTypes.includes(file.type)) {\r\n    //   setImageError(true);\r\n    //   setImageErrorMessage(\r\n    //     \"Please upload a valid image file (JPEG, PNG, or GIF)\"\r\n    //   );\r\n    //   return false;\r\n    // }\r\n    if (file.size > maxSize) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"File size must be less than 2MB\");\r\n      return false;\r\n    }\r\n\r\n    setImageError(false);\r\n    setImageErrorMessage(\"\");\r\n    return true;\r\n  };\r\n  // file upload validation end\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setFile1(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      setImageError(false);\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        // .split(\",\")[1];\r\n        setSelectedFile(base64Image);\r\n        // setFieldValue(\"image\", base64Image);\r\n        setAboutField({ ...aboutField, image: base64Image });\r\n        // console.log(base64Image)\r\n        validateFile(file);\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  //   const mentorAboutUrl=`${baseUrl}/api/mentor/details/about`;\r\n  //   const mentorAboutUrl=\"http://localhost:3001/acheckabout\";\r\n  const userProfileUrl = `${baseUrl}/api/userprofile/profile`;\r\n  const ImageUrl = `${baseUrl}/api/userprofile/profile-image`;\r\n  const mentorExperienceUrl = `${baseUrl}/api/userprofile/experience`;\r\n  const userAboutUrl = `${baseUrl}/api/userprofile/about`;\r\n  const ResumeUploadUrl = `${baseUrl}/api/resume?role=USER`;\r\n\r\n  const token = localStorage.getItem(\"tokenRes\");\r\n  const [selectedFile2, setSelectedFile2] = useState(null);\r\n  const [imageError1, setImageError1] = useState(false);\r\n  const [imageErrorMessage1, setImageErrorMessage1] = useState(null);\r\n\r\n  // Handle file change\r\n  const handleFileChange2 = (event) => {\r\n    // const file = event.target.files[0];\r\n    // setSelectedFile2(file);\r\n    const file = event.target.files[0];\r\n\r\n    if (!file) return; // No file selected\r\n\r\n    if (!(file.type === \"application/pdf\")) {\r\n      // alert(\"Please select a valid PDF file.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"Please upload a PDF file.\");\r\n      return;\r\n    }\r\n\r\n    const fileSizeMB = file.size / (1024 * 1024); // Convert bytes to MB\r\n\r\n    if (fileSizeMB > 2) {\r\n      // alert(\"File size exceeds 2MB limit.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"File size must be less than  2MB\");\r\n\r\n      return;\r\n    }\r\n\r\n    setSelectedFile2(file);\r\n    setImageError1(false);\r\n    setImageErrorMessage1(\"\");\r\n  };\r\n\r\n  const postDataUserProfile = async (data) => {\r\n    setAboutLoading(true);\r\n\r\n    const userProfile = {\r\n      languages,\r\n      linkedInUrl: data.linkedinUrl,\r\n      twitterHandle: data.twitterHandle,\r\n      personalWebsite: data.personalWebsite,\r\n      location: data.location,\r\n      studentType: data.studentType,\r\n      identityStatus: data.identityStatus,\r\n    };\r\n\r\n    try {\r\n      // Step 1: Post user profile data\r\n      const response = await axios.post(userProfileUrl, userProfile, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      // Step 2: Conditionally upload image if it exists\r\n      if (file1) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", file1);\r\n\r\n        await axios.post(ImageUrl, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n      }\r\n\r\n      setAboutLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"1\");\r\n    } catch (error) {\r\n      setImageError(false);\r\n      setAboutLoading(false);\r\n\r\n      if (error.response) {\r\n        error.response.data.statuses.forEach((status) => {\r\n          NotificationManager.error(\r\n            status.message,\r\n            \"Oops!\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n          if (status.code === 40327) {\r\n            setImageErrorMessage(status.message);\r\n            setImageError(true);\r\n          }\r\n        });\r\n      } else {\r\n        NotificationManager.error(\r\n          \"Something went wrong\",\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const postExperience = async (data) => {\r\n    // handleNextStep();\r\n\r\n    setProfileLoading(true);\r\n    try {\r\n      const response = await axios.post(mentorExperienceUrl, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // setNextStep(true)\r\n      setProfileLoading(false);\r\n      //   console.log(`resres ${response.status}`);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"3\");\r\n    } catch (error) {\r\n      // setSkillError(false);\r\n      setProfileLoading(false);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        error.response.data.statuses.forEach((status) => {\r\n          NotificationManager.error(\r\n            status.message,\r\n            \"Oops!\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n        });\r\n      } else {\r\n        NotificationManager.error(\r\n          \"something went wrong\",\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const postAboutData = async (data) => {\r\n    // handleNextStep();\r\n    setExperienceLoading(true);\r\n    const postDataExp = { ...data };\r\n    try {\r\n      const response = await axios.post(userAboutUrl, postDataExp, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // setNextStep(true)\r\n      // console.log(response);\r\n      if (selectedFile2) {\r\n        const formData = new FormData();\r\n        formData.append(\"resume\", selectedFile2);\r\n\r\n        await axios.post(ResumeUploadUrl, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n      }\r\n      setExperienceLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"7\");\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 3000);\r\n    } catch (error) {\r\n      setExperienceLoading(false);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        error.response.data.statuses.forEach((status) => {\r\n          NotificationManager.error(\r\n            status.message,\r\n            \"Oops!\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n        });\r\n      } else {\r\n        NotificationManager.error(\r\n          \"something went wrong\",\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  // const handleSliderChange = (value) => {\r\n  //   setAmount(value);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   axios.get(mentorAboutUrl).then((response) => {\r\n  //     console.log(\"reslog\", response.data);\r\n  //     // setLoading(false);\r\n  //   });\r\n  // }, [currentStep]);\r\n\r\n  // const handleTagsChange = (newSkills) => {\r\n  //   setSkillError(false);\r\n  //   setSkillsTag(newSkills);\r\n  // };\r\n  // const handleToolsTagsChange = (newTools) => {\r\n  //   setSkillError(false);\r\n  //   setToolsTag(newTools);\r\n  // };\r\n  const [education, setEducation] = useState([\r\n    { college: \"\", degree: \"\", department: \"\", startYear: \"\", endYear: \"\" },\r\n  ]);\r\n\r\n  const [work, setWork] = useState([\r\n    {\r\n      company: \"\",\r\n      jobTitle: \"\",\r\n      employmentType: \"\",\r\n      jobLocation: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n    },\r\n  ]);\r\n\r\n  const removeEducation = (index) => {\r\n    const newEducation = [...education];\r\n    newEducation.splice(index, 1);\r\n    setEducation(newEducation);\r\n  };\r\n  const removeWorkExperience = (index) => {\r\n    const newWorkExperience = [...work];\r\n    newWorkExperience.splice(index, 1);\r\n    setWork(newWorkExperience);\r\n  };\r\n\r\n  const addEducation = () => {\r\n    setEducation([\r\n      ...education,\r\n      { college: \"\", degree: \"\", department: \"\", startYear: 0, endYear: 0 },\r\n    ]);\r\n  };\r\n  const addWorkExperience = () => {\r\n    setWork([\r\n      ...work,\r\n      {\r\n        company: \"\",\r\n        jobTitle: \"\",\r\n        employmentType: \"\",\r\n        jobLocation: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleInputChange = (index, field, value) => {\r\n    setEducation((previousEducation) =>\r\n      previousEducation.map((edu, i) =>\r\n        i === index ? { ...edu, [field]: value } : edu\r\n      )\r\n    );\r\n  };\r\n  const handleWorkInputChange = (index, field, value) => {\r\n    setWork((previousWorkExperience) =>\r\n      previousWorkExperience.map((works, i) =>\r\n        i === index ? { ...works, [field]: value } : works\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleTagsChange = (newSkills) => {\r\n    // setSkillError(false);\r\n    setSkillsTag(newSkills);\r\n  };\r\n\r\n  const handleCertificationsChange = (newCertifications) => {\r\n    // setSkillError(false);\r\n    setCertificationsTag(newCertifications);\r\n  };\r\n\r\n  const handleCertificateChangeInput = (value) => {\r\n    if (value.endsWith(\",\")) {\r\n      const newTag = value.slice(0, -1).trim();\r\n      if (newTag && !certificationsTag.includes(newTag)) {\r\n        setCertificationsTag([...certificationsTag, newTag]);\r\n      }\r\n      setCertificateInputValue(\"\");\r\n    } else {\r\n      setCertificateInputValue(value);\r\n    }\r\n  };\r\n\r\n  const handleAddCertificateTag = () => {\r\n    if (\r\n      certificateInputValue.trim() &&\r\n      !certificationsTag.includes(certificateInputValue.trim())\r\n    ) {\r\n      setCertificationsTag([\r\n        ...certificationsTag,\r\n        certificateInputValue.trim(),\r\n      ]);\r\n      setCertificateInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDashboardClick = () => {\r\n    history.push(`${adminRoot}/dashboard`);\r\n  };\r\n\r\n  // const [selectedFile1, setSelectedFile1] = useState(null);\r\n\r\n  // // Handle file change\r\n  // const handleFileChange1 = (event) => {\r\n  //   const file = event.target.files[0];\r\n  //   setSelectedFile1(file);\r\n  // };\r\n\r\n  return (\r\n    <Card className=\"mx-auto my-4 \" style={{ maxWidth: \"900px\" }}>\r\n      <CardBody className=\"wizard wizard-default\">\r\n        <h1 className=\"mt-4 font-weight-bold\">Apply as a Student</h1>\r\n        <ul className=\"nav nav-tabs justify-content-center\">\r\n          {steps.map((stepItem, index) => (\r\n            // <li key={`topNavStep_${index}`} className={`nav-item ${index === currentStep ? 'step-doing' : ''}`}>\r\n            <li\r\n              // eslint-disable-next-line\r\n              key={`topNavStep_${index}`}\r\n              className={`nav-item ${\r\n                // eslint-disable-next-line\r\n                index === currentStep\r\n                  ? \"step-doing\"\r\n                  : index < currentStep\r\n                  ? \"step-done\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <NavLink to=\"#\" location={{}} className=\"nav-link\">\r\n                <span>{stepItem}</span>\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"wizard-basic-step\">\r\n          {currentStep === 0 && (\r\n            <Formik\r\n              initialValues={{\r\n                personalWebsite: \"\",\r\n                languages: \"\",\r\n                linkedinUrl: \"\",\r\n                twitterHandle: \"\",\r\n                studentType: \"\",\r\n                location: \"\",\r\n                identityStatus: \"\",\r\n              }}\r\n              // onSubmit={postDataUserProfile}\r\n              onSubmit={(values) => {\r\n                console.log(\"test\");\r\n                postDataUserProfile({ ...values });\r\n                // if (validateFile(file1)) {\r\n\r\n                // }\r\n              }}\r\n            >\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-right\">\r\n                  <Alert color=\"primary\">\r\n                    <strong>Tips</strong>\r\n                    <br />\r\n                    <ul>\r\n                      <li>\r\n                        Adding your photo and social media profiles helps\r\n                        mentors feel confident that you’re a real person (e.g.\r\n                        not a bot).\r\n                      </li>\r\n                      <li>\r\n                        Your profile is only visible to mentors that you send\r\n                        applications to. It is not indexed on search engines\r\n                        like Google.\r\n                      </li>\r\n                    </ul>\r\n                  </Alert>\r\n                  <FormGroup>\r\n                    <Label for=\"image\">Image</Label>\r\n                    {imageError && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {imageErrorMessage}\r\n                      </div>\r\n                    )}\r\n                    <Row>\r\n                      <Col md={2} className=\"\">\r\n                        <img\r\n                          src={selectedFile || \"/assets/img/profiles/l-1.jpg\"}\r\n                          className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                          style={{\r\n                            width: \"70px\",\r\n                            height: \"70px\",\r\n                            objectFit: \"cover\",\r\n                          }}\r\n                          alt=\"\"\r\n                        />\r\n                      </Col>\r\n                      <Col md={5} className=\"mt-3 \">\r\n                        <InputGroup className=\"mb-3\">\r\n                          <div className=\"mt-1.5\">\r\n                            <Button\r\n                              className=\"default\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                document.getElementById(\"file-upload\").click()\r\n                              }\r\n                            >\r\n                              Upload profile pic{\" \"}\r\n                              <i className=\"iconsminds-upload \" />\r\n                            </Button>\r\n                            <Input\r\n                              id=\"file-upload\"\r\n                              type=\"file\"\r\n                              className=\"form-control d-none\"\r\n                              onChange={handleFileChange}\r\n                              // validate={validateFile}\r\n                            />\r\n                            {file1 && (\r\n                              <p className=\"mt-2\">\r\n                                Selected file: {file1.name}\r\n                              </p>\r\n                            )}\r\n                          </div>\r\n                        </InputGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup className=\"error-l-75\">\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Label for=\"languages\">Languages known*</Label>\r\n                        <Select\r\n                          placeholder=\"Select Languages\"\r\n                          name=\"languages\"\r\n                          isMulti\r\n                          options={languageOptions}\r\n                          // validate={validateLanguages}\r\n                          className=\"react-select\"\r\n                          classNamePrefix=\"react-select\"\r\n                          onChange={(selectedOptions) => {\r\n                            const languagesArray = selectedOptions\r\n                              ? selectedOptions.map((option) => option.value)\r\n                              : [];\r\n                            setLanguages(languagesArray);\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Label for=\"linkedinUrl\">\r\n                          Portfolio/personal website (optional)\r\n                        </Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          name=\"personalWebsite\"\r\n                          type=\"url\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        {/* {errors.personalWebsite && touched.personalWebsite && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.personalWebsite}\r\n                          </div>\r\n                        )} */}\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup className=\"error-l-125\">\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Label for=\"linkedinUrl\">LinkedIn URL*</Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          name=\"linkedinUrl\"\r\n                          type=\"url\"\r\n                          validate={validateLinkedinUrl}\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        <FormText color=\"muted\" className=\"\">\r\n                          e.g. https://www.linkedin.com/in/username/\r\n                        </FormText>\r\n                        {errors.linkedinUrl && touched.linkedinUrl && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.linkedinUrl}\r\n                          </div>\r\n                        )}\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Label for=\"twitterHandle\">\r\n                          Twitter Handle (optional)\r\n                        </Label>\r\n                        <Field\r\n                          type=\"text\"\r\n                          name=\"twitterHandle\"\r\n                          id=\"twitterHandle\"\r\n                          className=\"form-control\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        <FormText color=\"muted\">\r\n                          Omit the &ldquo;@&rdquo; -e.g. &ldquo;dqmonn&rdquo;\r\n                        </FormText>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup className=\"error-l-125\">\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Label for=\"studentType\">Student Type*</Label>\r\n                        <Field\r\n                          as=\"select\"\r\n                          name=\"studentType\"\r\n                          validate={validateStudent}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option disabled value=\"\">\r\n                            Select Student Type\r\n                          </option>\r\n                          {studentTypeOptions.map((option) => (\r\n                            <option key={option.value} value={option.value}>\r\n                              {option.label}\r\n                            </option>\r\n                          ))}\r\n                        </Field>\r\n                        {errors.studentType && touched.studentType && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.studentType}\r\n                          </div>\r\n                        )}\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Label>Location*</Label>\r\n                        <Field\r\n                          as=\"select\"\r\n                          name=\"location\"\r\n                          validate={validateLocation}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option disabled value=\"\">\r\n                            Select Country\r\n                          </option>\r\n                          {country.map((option) => (\r\n                            <option\r\n                              key={option.iso_code}\r\n                              value={option.iso_code}\r\n                            >\r\n                              {option.name}\r\n                            </option>\r\n                          ))}\r\n                        </Field>\r\n                        {errors.location && touched.location && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.location}\r\n                          </div>\r\n                        )}\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Label>Identity Status*</Label>\r\n                        <Field\r\n                          as=\"select\"\r\n                          name=\"identityStatus\"\r\n                          validate={validateIdentityStatus}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option disabled value=\"\">\r\n                            Select Identity Satus\r\n                          </option>\r\n                          {indentityStatusList.map((option) => (\r\n                            <option key={option.name} value={option.name}>\r\n                              {option.label}\r\n                            </option>\r\n                          ))}\r\n                        </Field>\r\n                        {errors.identityStatus && touched.identityStatus && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.identityStatus}\r\n                          </div>\r\n                        )}\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n\r\n                  <div className=\"d-flex justify-content-end\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className={`col-12 col-md-2 btn-shadow btn-multiple-state ${\r\n                        aboutLoading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <span className=\"spinner d-inline-block\">\r\n                        <span className=\"bounce1\" />\r\n                        <span className=\"bounce2\" />\r\n                        <span className=\"bounce3\" />\r\n                      </span>\r\n                      <span className=\"label\">Next</span>\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          )}\r\n          {currentStep === 1 && (\r\n            <Formik\r\n              innerRef={forms[2]}\r\n              initialValues={{\r\n                education: [\r\n                  {\r\n                    college: \"\",\r\n                    department: \"\",\r\n                    degree: \"\",\r\n                    startYear: \"\",\r\n                    endYear: \"\",\r\n                  },\r\n                ],\r\n                work: [\r\n                  {\r\n                    company: \"\",\r\n                    jobTitle: \"\",\r\n                    employmentType: \"\",\r\n                    jobLocation: \"\",\r\n                    startDate: \"\",\r\n                    endDate: \"\",\r\n                  },\r\n                ],\r\n              }}\r\n              onSubmit={() => {\r\n                const experience = { education, work };\r\n                // const datas = {experience}\r\n                postExperience(experience);\r\n                // console.log(\"my education\", education);\r\n                // console.log(\"values\", values);\r\n              }}\r\n              validateOnMount\r\n            >\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-right my-4\">\r\n                  {/* <Alert color=\"primary\">\r\n                  <strong>Almost there!</strong> <br /> You&apos;re just one\r\n                  last step away from being a user and connecting with\r\n                  mentors,lawyers,alumni all over the world! In this step, show off your\r\n                  accomplishments and how you can help others.\r\n                  <br />\r\n                  <br /> Many of these fields are optional, but will help us\r\n                  get better insights into your work - and therefore\r\n                  exponentially increase your chances. They also give you a\r\n                  jumpstart once you&apos;re a user.\r\n                </Alert> */}\r\n\r\n                  {education.map((service, index) => (\r\n                    // eslint-disable-next-line react/no-array-index-key\r\n                    <div key={index}>\r\n                      <div className=\"text-right\">\r\n                        {/* <Button outline className=\"icon-button\" onClick={() => removeService(index)}>\r\n                      <i className=\"simple-icon-close\" />\r\n                    </Button> */}\r\n                        {education.length > 1 && (\r\n                          <span>\r\n                            <Button\r\n                              id=\"closeButton\"\r\n                              color=\"primary\"\r\n                              outline\r\n                              className=\"icon-button\"\r\n                              onClick={() => removeEducation(index)}\r\n                            >\r\n                              {/* <i className=\"iconsminds-close\" /> */}\r\n                              <span className=\"text-primary\">\r\n                                <strong>x</strong>\r\n                              </span>\r\n                            </Button>\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Row>\r\n                        <Col md={6}>\r\n                          <FormGroup className=\"error-l-75\">\r\n                            <Label>College Name*</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              required\r\n                              name={`education[${index}].college`}\r\n                              value={service.college}\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"college\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              // validate={validateServiceName}\r\n                            />\r\n                            {errors.education?.[index]?.college &&\r\n                              touched.education?.[index]?.college && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].college}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].degree`}>\r\n                              Degree*\r\n                            </Label>\r\n                            <Input\r\n                              name={`education[${index}].degree`}\r\n                              id={`education[${index}].degree`}\r\n                              className=\"form-control\"\r\n                              value={service.degree}\r\n                              required\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"degree\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              // validate={validatePackageTopic}\r\n                            />\r\n                            {errors.education?.[index]?.degree &&\r\n                              touched.education?.[index]?.degree && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].degree}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].startDate`}>\r\n                              Start year\r\n                            </Label>\r\n\r\n                            <Input\r\n                              type=\"select\"\r\n                              name={`education[${index}].startYear`}\r\n                              id={`education[${index}].startYear`}\r\n                              className=\"form-control\"\r\n                              value={service.startYear}\r\n                              required\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"startYear\",\r\n                                  parseInt(e.target.value, 10)\r\n                                )\r\n                              }\r\n                            >\r\n                              <option disabled value=\"\">\r\n                                Select year\r\n                              </option>\r\n                              {years.map((yr) => (\r\n                                <option key={yr} value={yr}>\r\n                                  {yr}\r\n                                </option>\r\n                              ))}\r\n                            </Input>\r\n\r\n                            {errors.education?.[index]?.startDate &&\r\n                              touched.education?.[index]?.startDate && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].startYear}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].department`}>\r\n                              Department*\r\n                            </Label>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name={`education[${index}].department`}\r\n                              id={`education[${index}].department`}\r\n                              className=\"form-control\"\r\n                              value={service.department}\r\n                              required\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"department\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              // validate={validatePackageDescription}\r\n                            />\r\n                            {errors.education?.[index]?.department &&\r\n                              touched.education?.[index]?.department && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].department}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].endDate`}>\r\n                              End year\r\n                            </Label>\r\n                            <Input\r\n                              type=\"select\"\r\n                              name={`education[${index}].endDate`}\r\n                              id={`education[${index}].endDate`}\r\n                              className=\"form-control\"\r\n                              value={service.endYear}\r\n                              required\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"endYear\",\r\n                                  parseInt(e.target.value, 10)\r\n                                )\r\n                              }\r\n                              // validate={validatePackageDescription}\r\n                            >\r\n                              <option disabled value=\"\">\r\n                                Select year\r\n                              </option>\r\n                              {years.map((yr) => (\r\n                                <option key={yr} value={yr}>\r\n                                  {currentYear === yr ? \"Present\" : yr}\r\n                                </option>\r\n                              ))}\r\n                            </Input>\r\n                            {errors.education?.[index]?.endDate &&\r\n                              touched.education?.[index]?.endDate && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].endDate}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        {/* <Col md={6}>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].department`}>\r\n                              Year of passing*\r\n                            </Label>\r\n                            <Input\r\n                              type=\"select\"\r\n                              name={`education[${index}].year`}\r\n                              id={`education[${index}].year`}\r\n                              className=\"form-control\"\r\n                              value={service.year}\r\n                              required\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"year\",\r\n                                  parseInt(e.target.value, 10)\r\n                                )\r\n                              }\r\n                            >\r\n                              <option disabled value=\"\">\r\n                                Select year\r\n                              </option>\r\n                              {years.map((yr) => (\r\n                                <option key={yr} value={yr}>\r\n                                  {yr}\r\n                                </option>\r\n                              ))}\r\n                            </Input>\r\n                            {errors.education?.[index]?.department &&\r\n                              touched.education?.[index]?.department && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].department}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col> */}\r\n                      </Row>\r\n\r\n                      <hr />\r\n                    </div>\r\n                  ))}\r\n\r\n                  <Card\r\n                    onClick={addEducation}\r\n                    className=\"p-3 text-center my-5\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <h3 className=\"font-weight-bold text-primary\">\r\n                      + Add more education\r\n                    </h3>\r\n                  </Card>\r\n                  {work.map((works, index) => (\r\n                    // eslint-disable-next-line react/no-array-index-key\r\n                    <div key={index}>\r\n                      <div className=\"text-right\">\r\n                        {/* <Button outline className=\"icon-button\" onClick={() => removework(index)}>\r\n                      <i className=\"simple-icon-close\" />\r\n                    </Button> */}\r\n                        {work.length > 1 && (\r\n                          <span>\r\n                            <Button\r\n                              id=\"closeButton\"\r\n                              color=\"primary\"\r\n                              outline\r\n                              className=\"icon-button\"\r\n                              onClick={() => removeWorkExperience(index)}\r\n                            >\r\n                              {/* <i className=\"iconsminds-close\" /> */}\r\n                              <span className=\"text-primary\">\r\n                                <strong>x</strong>\r\n                              </span>\r\n                            </Button>\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Row>\r\n                        <Col md={6}>\r\n                          <FormGroup className=\"error-l-75\">\r\n                            <Label>Company Name*</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              required\r\n                              name={`education[${index}].company`}\r\n                              value={works.company}\r\n                              onChange={(e) =>\r\n                                handleWorkInputChange(\r\n                                  index,\r\n                                  \"company\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              // validate={validateworkName}\r\n                            />\r\n                            {errors.education?.[index]?.company &&\r\n                              touched.education?.[index]?.company && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].company}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].jobTitle`}>\r\n                              Job title*\r\n                            </Label>\r\n                            <Input\r\n                              name={`education[${index}].jobTitle`}\r\n                              id={`education[${index}].jobTitle`}\r\n                              required\r\n                              className=\"form-control\"\r\n                              value={works.jobTitle}\r\n                              onChange={(e) =>\r\n                                handleWorkInputChange(\r\n                                  index,\r\n                                  \"jobTitle\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              // validate={validatePackageTopic}\r\n                            />\r\n                            {errors.education?.[index]?.jobTitle &&\r\n                              touched.education?.[index]?.jobTitle && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].jobTitle}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col md={6}>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].employmentType`}>\r\n                              Employment type*\r\n                            </Label>\r\n                            <Input\r\n                              type=\"select\"\r\n                              name={`education[${index}].employmentType`}\r\n                              id={`education[${index}].employmentType`}\r\n                              className=\"form-control\"\r\n                              value={works.employmentType}\r\n                              required\r\n                              onChange={(e) =>\r\n                                handleWorkInputChange(\r\n                                  index,\r\n                                  \"employmentType\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                            >\r\n                              <option key=\"\" value=\"\" disabled>\r\n                                Select Employment type\r\n                              </option>\r\n                              {EmploymentTypeData.map((option, i) => (\r\n                                // eslint-disable-next-line react/no-array-index-key\r\n                                <option key={i} value={option.label}>\r\n                                  {option.label}\r\n                                </option>\r\n                              ))}\r\n                            </Input>\r\n\r\n                            {errors.education?.[index]?.employmentType &&\r\n                              touched.education?.[index]?.employmentType && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].employmentType}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md={6}>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].jobLocation`}>\r\n                              Job location*\r\n                            </Label>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name={`education[${index}].jobLocation`}\r\n                              id={`education[${index}].jobLocation`}\r\n                              className=\"form-control\"\r\n                              required\r\n                              value={works.jobLocation}\r\n                              onChange={(e) =>\r\n                                handleWorkInputChange(\r\n                                  index,\r\n                                  \"jobLocation\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              // validate={validatePackageDescription}\r\n                            />\r\n                            {errors.education?.[index]?.jobLocation &&\r\n                              touched.education?.[index]?.jobLocation && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].jobLocation}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].startDate`}>\r\n                              Start year\r\n                            </Label>\r\n                            {/* <Input\r\n                            type=\"number\"\r\n                            name={`education[${index}].startDate`}\r\n                            id={`education[${index}].startDate`}\r\n                            className=\"form-control\"\r\n                            value={works.startDate}\r\n                            onChange={(e) =>\r\n                              handleWorkInputChange(\r\n                                index,\r\n                                \"startDate\",\r\n                                e.target.value\r\n                              )\r\n                            }\r\n                              // validate={validatePackageDescription}\r\n                          /> */}\r\n                            <Input\r\n                              type=\"select\"\r\n                              name={`education[${index}].startDate`}\r\n                              id={`education[${index}].startDate`}\r\n                              className=\"form-control\"\r\n                              value={works.startDate}\r\n                              required\r\n                              onChange={(e) =>\r\n                                handleWorkInputChange(\r\n                                  index,\r\n                                  \"startDate\",\r\n                                  parseInt(e.target.value, 10)\r\n                                )\r\n                              }\r\n                            >\r\n                              <option disabled value=\"\">\r\n                                Select year\r\n                              </option>\r\n                              {years.map((yr) => (\r\n                                <option key={yr} value={yr}>\r\n                                  {yr}\r\n                                </option>\r\n                              ))}\r\n                            </Input>\r\n\r\n                            {errors.education?.[index]?.startDate &&\r\n                              touched.education?.[index]?.startDate && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].startDate}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                          <FormGroup>\r\n                            <Label for={`education[${index}].endDate`}>\r\n                              End year\r\n                            </Label>\r\n                            <Input\r\n                              type=\"select\"\r\n                              name={`education[${index}].endDate`}\r\n                              id={`education[${index}].endDate`}\r\n                              className=\"form-control\"\r\n                              value={works.endDate}\r\n                              required\r\n                              onChange={(e) =>\r\n                                handleWorkInputChange(\r\n                                  index,\r\n                                  \"endDate\",\r\n                                  parseInt(e.target.value, 10)\r\n                                )\r\n                              }\r\n                              // validate={validatePackageDescription}\r\n                            >\r\n                              <option disabled value=\"\">\r\n                                Select year\r\n                              </option>\r\n                              {years.map((yr) => (\r\n                                <option key={yr} value={yr}>\r\n                                  {currentYear === yr ? \"Present\" : yr}\r\n                                </option>\r\n                              ))}\r\n                            </Input>\r\n                            {errors.education?.[index]?.endDate &&\r\n                              touched.education?.[index]?.endDate && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.education[index].endDate}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      <hr />\r\n                    </div>\r\n                  ))}\r\n\r\n                  <Card\r\n                    onClick={addWorkExperience}\r\n                    className=\"p-3 text-center my-5\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <h3 className=\"font-weight-bold text-primary\">\r\n                      + Add more work experience\r\n                    </h3>\r\n                  </Card>\r\n                  <Row>\r\n                    {\" \"}\r\n                    <Col>\r\n                      {\" \"}\r\n                      <Button color=\"primary\" onClick={handlePrevStep}>\r\n                        Previous\r\n                      </Button>\r\n                    </Col>\r\n                    <Col className=\"text-right\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          profileLoading ? \"show-spinner\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">Next</span>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          )}\r\n          {currentStep === 2 && (\r\n            <Formik\r\n              innerRef={forms[2]}\r\n              initialValues={{\r\n                // skills: [],\r\n                bio: \"\",\r\n                seekingFor: \"\",\r\n                // certifications: [],\r\n                goal: \"\",\r\n              }}\r\n              onSubmit={(values) => {\r\n                const data = {\r\n                  ...values,\r\n                  skills: skillsTag,\r\n                  certifications: certificationsTag,\r\n                };\r\n                postAboutData(data);\r\n              }}\r\n              validateOnMount\r\n            >\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-right\">\r\n                  <Alert color=\"primary\">\r\n                    <strong>Almost there!</strong> <br /> You&apos;re just one\r\n                    last step away from being a user and connecting with\r\n                    mentors,lawyers,alumni all over the world! in this step,\r\n                    shows off your accomplishments and how you can help others.\r\n                    <br />\r\n                    <br /> Many of these fields are optional, but will help us\r\n                    get better insights into your work - and therefore\r\n                    exponentially increase your chances. They also give you a\r\n                    jumpstart once you&apos;re a user.\r\n                  </Alert>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md={12}>\r\n                        <FormGroup>\r\n                          <Label for=\"skills\">Skills*</Label>\r\n\r\n                          <TagsInput\r\n                            required\r\n                            value={skillsTag}\r\n                            onChange={handleTagsChange}\r\n                            inputProps={{ placeholder: \"Add skills \" }}\r\n                            addOnBlur\r\n                            addKeys={[13, 188]}\r\n                          />\r\n\r\n                          <FormText>\r\n                            Add skill and press Enter or Comma{\" \"}\r\n                          </FormText>\r\n                          <FormText color=\"muted\">\r\n                            Describe your expertise to connect with mentors who\r\n                            have similar interests.\r\n                            <br />\r\n                            {/* Comma-separated list of your skills  */}\r\n                            (keep it below 10). Mentors will use this to find\r\n                            you.\r\n                          </FormText>\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Label for=\"introVideo\">Bio*</Label>\r\n                        <Field\r\n                          required\r\n                          type=\"textarea\"\r\n                          name=\"bio\"\r\n                          id=\"bio\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Label for=\"featuredArticle\">Seeking for*</Label>\r\n                        <Field\r\n                          required\r\n                          type=\"text\"\r\n                          name=\"seekingFor\"\r\n                          id=\"seekingFor\"\r\n                          className=\"form-control\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"skills\">Certifications*</Label>\r\n\r\n                    {/* <TagsInput\r\n                      value={certificationsTag}\r\n                      onChange={handleCertificationsChange}\r\n                      inputProps={{ placeholder: \"Add Certification \" }}\r\n                      // validate={validateSkills}\r\n                    /> */}\r\n                    <TagsInput\r\n                      value={certificationsTag}\r\n                      onChange={handleCertificationsChange}\r\n                      renderInput={({ addTag, ...inputProps }) => {\r\n                        const { onChange, value, ...other } = inputProps;\r\n                        return (\r\n                          <input\r\n                            {...other}\r\n                            value={certificateInputValue}\r\n                            onChange={(e) =>\r\n                              handleCertificateChangeInput(e.target.value)\r\n                            }\r\n                            onKeyDown={(e) => {\r\n                              if (e.key === \"Enter\") {\r\n                                handleAddCertificateTag();\r\n                                e.preventDefault();\r\n                              }\r\n                            }}\r\n                            placeholder=\"Add Certification\"\r\n                          />\r\n                        );\r\n                      }}\r\n                    />\r\n                    <FormText>\r\n                      Add Certification and press Enter or Comma{\" \"}\r\n                    </FormText>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      {/* <Col md={6}>\r\n                        <Label>Certifications*</Label>\r\n\r\n                        <InputGroup className=\"\">\r\n                          <div className=\"\">\r\n                            <Button\r\n                              className=\"default\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                document.getElementById(\"file-upload\").click()\r\n                              }\r\n                            >\r\n                              Upload certifications{\" \"}\r\n                              <i className=\"iconsminds-upload ml-2\" />\r\n                            </Button>\r\n                            \r\n                            <Input\r\n                              id=\"file-upload\"\r\n                              type=\"file\"\r\n                              className=\"d-none\"\r\n                              onChange={handleFileChange1}\r\n                              \r\n                            />\r\n                          </div>\r\n                        </InputGroup>\r\n                        <div\r\n                          className=\"  my-2\"\r\n                       \r\n                        >\r\n                          {selectedFile1 ? selectedFile1.name : \"\"}\r\n                        </div>\r\n                      </Col> */}\r\n                      <Col md={6}>\r\n                        <Label>CV</Label>\r\n                        {imageError1 && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {imageErrorMessage1}\r\n                          </div>\r\n                        )}\r\n\r\n                        <InputGroup className=\"\">\r\n                          <div className=\"\">\r\n                            <Button\r\n                              className=\"default\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                document\r\n                                  .getElementById(\"file-upload-resume\")\r\n                                  .click()\r\n                              }\r\n                            >\r\n                              Upload Resume{\" \"}\r\n                              <i className=\"iconsminds-upload ml-2\" />\r\n                            </Button>\r\n                            {/* <Form> */}\r\n                            <Input\r\n                              id=\"file-upload-resume\"\r\n                              type=\"file\"\r\n                              className=\"d-none\"\r\n                              onChange={handleFileChange2}\r\n                              // validate={validateFile}\r\n                            />\r\n                          </div>\r\n                        </InputGroup>\r\n                        <div\r\n                          className=\"  my-2 \"\r\n                          // style={{\r\n                          //   border: \"1px solid #ccc\",\r\n                          //   minWidth: \"200px\",\r\n                          // }}\r\n                        >\r\n                          {/* {selectedFile2 ? selectedFile2.name : \"\"} */}\r\n                          {selectedFile2\r\n                            ? `selected file is ${selectedFile2.name}`\r\n                            : \"\"}\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label>Goal*</Label>\r\n                    <Field\r\n                      as=\"textarea\"\r\n                      name=\"goal\"\r\n                      id=\"goal\"\r\n                      className=\"form-control\"\r\n                      validate={validateAchievement}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {errors.goal && touched.goal && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.goal}\r\n                      </div>\r\n                    )}\r\n                  </FormGroup>\r\n                  <Row>\r\n                    {\" \"}\r\n                    <Col>\r\n                      {\" \"}\r\n                      <Button color=\"primary\" onClick={handlePrevStep}>\r\n                        Previous\r\n                      </Button>\r\n                    </Col>\r\n                    <Col className=\"text-right\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          experienceLoading ? \"show-spinner\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">Submit</span>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          )}\r\n          {loading ? (\r\n            <div className=\"wizard-basic-step text-center pt-3\">\r\n              <Spinner color=\"primary\" className=\"mb-1\" />\r\n              <p>Submitting</p>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {currentStep === 3 && (\r\n                <Row>\r\n                  <Colxx xxs=\"12\" className=\"mb-4\">\r\n                    <Card>\r\n                      <CardBody className=\"text-center\">\r\n                        <i\r\n                          alt=\"\"\r\n                          className=\"glyph-icon iconsminds-yes text-success\"\r\n                          style={{ fontSize: \"75px\" }}\r\n                        />\r\n                        <Jumbotron className=\"text-center\">\r\n                          <h1 className=\"display-4\">Submitted Successfully!</h1>\r\n                          <p className=\"lead\">We will reach you shortly</p>\r\n                          <hr className=\"my-4\" />\r\n                          <p className=\"lead mb-0\">\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"lg\"\r\n                              onClick={handleDashboardClick}\r\n                            >\r\n                              Dashboard\r\n                            </Button>\r\n                          </p>\r\n                        </Jumbotron>\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Colxx>\r\n                </Row>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default injectIntl(ApplyAsMentor);\r\n","import React from \"react\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Form,\r\n  FormGroup,\r\n  // FormText,\r\n  Input,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nconst Settings = () => {\r\n  return (\r\n    <Row className=\"mb-4 justify-content-center\">\r\n      <Colxx xxs=\"12\" md=\"8\" lg=\"8\">\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle>Reset email</CardTitle>\r\n            <Form>\r\n              <FormGroup>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your email\"\r\n                />\r\n                {/* <FormText color=\"muted\">email</FormText> */}\r\n              </FormGroup>\r\n\r\n              <Button color=\"primary\" className=\"mt-4\">\r\n                Reset email\r\n              </Button>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n      <Colxx xxs=\"12\" md=\"8\" lg=\"8\" className=\"mt-3\">\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle>Reset password</CardTitle>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"oldPassword\">Enter old password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"oldPassword\"\r\n                  id=\"oldPassword\"\r\n                  placeholder=\"Enter old password\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"newPassword\">Enter new password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"newPassword\"\r\n                  id=\"newPassword\"\r\n                  placeholder=\"Enter new password\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"confirmPassword\">Confirm new password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"confirmPassword\"\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Confirm new password\"\r\n                />\r\n              </FormGroup>\r\n\r\n              <Button color=\"primary\" className=\"mt-4\">\r\n                Reset Password\r\n              </Button>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport Rating from \"components/common/Rating\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\nimport { Badge, Button, Card, CardBody, CardText, Row } from \"reactstrap\";\r\nimport MentorFilter from \"../mentorship/MentorFilter\";\r\nimport \"../mentorship/mentorcard.css\";\r\n\r\nconst AlumniLists = () => {\r\n  const [selectedSkills, setSelectedSkills] = useState([]);\r\n  const [selectedIndustry, setSelectedIndustry] = useState(\"\");\r\n  const [selectedUniversity, setSelectedUniversity] = useState(\"\");\r\n  const [selectedPrice, setSelectedPrice] = useState([]);\r\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\r\n  const [selectedDomain, setSelectedDomain] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [paginationMeta, setPaginationMeta] = useState([]);\r\n  const handleSkillsChange = (skills) => setSelectedSkills(skills);\r\n  const handleIndustryChange = (industry) => setSelectedIndustry(industry);\r\n  const handleUniversityChange = (university) =>\r\n    setSelectedUniversity(university);\r\n  const handlePriceChange = (price) => setSelectedPrice(price);\r\n  const handleLocationChange = (location) => setSelectedLocation(location);\r\n  const handleDomainChange = (domain) => setSelectedDomain(domain);\r\n\r\n  const [isMentorCardFetched, setIsMentorCardFetched] = useState(false);\r\n  const [mentordetails, setMentorDetails] = useState([]);\r\n  const [inputkey, setInputKey] = useState(\"\");\r\n\r\n  const url2 = `${baseUrl}/api/alumni/cards`;\r\n  // const history = useHistory();\r\n\r\n  const truncateBio = (bio, lineCount) => {\r\n    if (!bio) return \"\";\r\n    const words = bio.split(\" \");\r\n\r\n    const truncatedBio = words.slice(0, lineCount).join(\" \");\r\n\r\n    if (words.length > lineCount) {\r\n      return `${truncatedBio}...`;\r\n    }\r\n    return truncatedBio;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsMentorCardFetched(false);\r\n    const mentorCardDetails = async () => {\r\n      const params = {};\r\n\r\n      if (selectedIndustry) {\r\n        params.company = selectedIndustry;\r\n      }\r\n      if (selectedUniversity) {\r\n        params.college = selectedUniversity;\r\n      }\r\n      if (selectedSkills) {\r\n        params.skills = selectedSkills;\r\n      }\r\n      if (selectedPrice) {\r\n        params.minPrice = selectedPrice.at(0);\r\n        params.maxPrice = selectedPrice.at(1);\r\n      }\r\n      if (selectedLocation) {\r\n        params.location = selectedLocation;\r\n      }\r\n      if (selectedDomain) {\r\n        params.domain = selectedDomain;\r\n      }\r\n      if (inputkey) {\r\n        params.firstName = inputkey;\r\n      }\r\n      params.size = 10;\r\n      params.page = currentPage - 1;\r\n      try {\r\n        const response = await axios.get(url2, { params });\r\n        setMentorDetails(response.data.data);\r\n        setPaginationMeta(response.data.paginationMeta);\r\n        setIsMentorCardFetched(true);\r\n        console.log(response.data.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setIsMentorCardFetched(true);\r\n      }\r\n    };\r\n    mentorCardDetails();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    selectedIndustry,\r\n    selectedUniversity,\r\n    selectedSkills,\r\n    selectedPrice,\r\n    selectedLocation,\r\n    selectedDomain,\r\n    currentPage,\r\n    inputkey,\r\n  ]);\r\n\r\n  return (\r\n    <div>\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n        <div>\r\n          <div className=\"\">\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group\">\r\n                <div\r\n                  style={{ position: \"relative\" }}\r\n                  className=\"col-12 col-lg-8 col-md-8\"\r\n                >\r\n                  <i\r\n                    className=\"simple-icon-magnifier mr-3\"\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: \"50%\",\r\n                      right: \"15px\",\r\n                      transform: \"translateY(-50%)\",\r\n                      zIndex: 2,\r\n                      color: \"#aaa\",\r\n                    }}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control rounded py-2\"\r\n                    placeholder=\"Search by name\"\r\n                    value={inputkey}\r\n                    onChange={(e) => setInputKey(e.target.value)}\r\n                    style={{ paddingRight: \"2.5rem\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <MentorFilter\r\n                onSkillsChange={handleSkillsChange}\r\n                onIndustryChange={handleIndustryChange}\r\n                onUniversityChange={handleUniversityChange}\r\n                onPriceChange={handlePriceChange}\r\n                selectedSkills={selectedSkills}\r\n                selectedIndustry={selectedIndustry}\r\n                selectedUniversity={selectedUniversity}\r\n                selectedLocation={selectedLocation}\r\n                onLocationChange={handleLocationChange}\r\n                onDomainChange={handleDomainChange}\r\n                userRole=\"alumni\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Colxx>\r\n\r\n      {/* searchbar ends */}\r\n      {!isMentorCardFetched ? (\r\n        <div className=\"loading\" />\r\n      ) : (\r\n        <div>\r\n          {mentordetails.length === 0 ? (\r\n            <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n              <Card>\r\n                <CardBody>\r\n                  <h2 className=\"text-center text-large \">No Alumni</h2>\r\n                </CardBody>\r\n              </Card>\r\n            </Colxx>\r\n          ) : (\r\n            Array.isArray(mentordetails) &&\r\n            mentordetails.map((mentors) => {\r\n              return (\r\n                <Colxx xxs=\"12\" key={mentors.id}>\r\n                  <Row>\r\n                    <Colxx sm=\"12\" md=\"12\" lg=\"9\" xxs=\"12\" className=\"mx-auto\">\r\n                      <Card\r\n                        className=\"flex-row flex-wrap flex-sm-nowrap listing-card-container my-3 p-3\"\r\n                        style={{ gap: \"16px\" }}\r\n                      >\r\n                        <div className=\"d-block mentor-card-img-container\">\r\n                          {mentors.imageUrl == null ? (\r\n                            <div\r\n                              className=\"card-img-left bg-primary \r\n                 d-flex align-items-center justify-content-center\"\r\n                              style={{\r\n                                width: \"150px\",\r\n                                height: \"250px\",\r\n                                borderRadius: \"0.75rem\",\r\n                              }}\r\n                            >\r\n                              <ThumbnailLetters\r\n                                rounded\r\n                                text={mentors.firstName}\r\n                                className=\"text-xlarge border border-1\"\r\n                                style={{ textAlign: \"center\" }}\r\n                              />\r\n                            </div>\r\n                          ) : (\r\n                            <img\r\n                              className=\"mentor-card-width\"\r\n                              src={`${baseUrl}/${mentors.imageUrl}`}\r\n                              alt=\"Card\"\r\n                            />\r\n                          )}\r\n                        </div>\r\n                        <CardBody className=\"d-flex flex-column flex-fill p-0\">\r\n                          <div\r\n                            className=\"d-flex flex-wrap justify-content-between mb-1\"\r\n                            style={{ columnGap: \"24px\" }}\r\n                          >\r\n                            <div\r\n                              className=\"d-flex flex-wrap align-items-center\"\r\n                              style={{ gap: \"10px\" }}\r\n                            >\r\n                              <div className=\"font-weight-semibold text-large text-capitalize\">\r\n                                {mentors.firstName}\r\n                              </div>\r\n                              <div className=\"font-weight-semibold text-large text-capitalize\">\r\n                                {mentors.lastName}\r\n                              </div>\r\n                              <div className=\"mx-2 \">\r\n                                <Badge\r\n                                  pill\r\n                                  style={{\r\n                                    background: \"#fcba0a\",\r\n                                  }}\r\n                                  color=\"#fcba0a\"\r\n                                  className=\"py-1 px-2 text-one text-dark\"\r\n                                >\r\n                                  {mentors.consultations} consultants\r\n                                </Badge>\r\n                              </div>\r\n                            </div>\r\n                            <CardText\r\n                              className=\"text-one d-flex align-items-center flex-wrap\"\r\n                              style={{ gap: \"4px\" }}\r\n                            >\r\n                              <span className=\"font-weight-semibold\">\r\n                                <Rating\r\n                                  total={5}\r\n                                  rating={mentors.star}\r\n                                  interactive={false}\r\n                                />\r\n                              </span>\r\n                              <span className=\"font-weight-semibold\">\r\n                                {mentors.star}\r\n                              </span>\r\n                              <span> ({mentors.ratings} reviews)</span>\r\n                            </CardText>\r\n                          </div>\r\n                          <div className=\"d-flex\" style={{ gap: \"8px\" }}>\r\n                            <CardText className=\"text-one text-muted mb-2\">\r\n                              {mentors.jobTitle}\r\n                            </CardText>\r\n                            <div>|</div>\r\n                            <CardText className=\"text-one text-primary mb-2\">\r\n                              {mentors.company}\r\n                            </CardText>\r\n                          </div>\r\n                          <CardText\r\n                            className=\"text-one mb-2\"\r\n                            style={{ maxHeight: \"62px\", overflow: \"hidden\" }}\r\n                          >\r\n                            {/* {mentors.bio} */}\r\n                            {truncateBio(mentors.bio, 20)}\r\n                          </CardText>\r\n                          <CardText className=\"d-flex flex-wrap\">\r\n                            {mentors.skills &&\r\n                              mentors.skills.slice(0, 3).map((skill) => (\r\n                                <div\r\n                                  key={skill}\r\n                                  className=\"pr-2\"\r\n                                  id=\"btn.rounded\"\r\n                                >\r\n                                  <Badge color=\"light\">{skill}</Badge>\r\n                                </div>\r\n                              ))}\r\n                          </CardText>\r\n\r\n                          <div\r\n                            className=\"d-flex justify-content-between align-items-center mt-auto flex-wrap\"\r\n                            style={{ columnGap: \"24px\" }}\r\n                          >\r\n                            <div className=\"text-primary\">\r\n                              <span className=\"text-xlarge font-weight-semibold\">\r\n                                ₹{Math.floor(mentors.price).toLocaleString()}\r\n                              </span>\r\n                              /Hour\r\n                            </div>\r\n                            {/* <Button\r\n                                color=\"primary\"\r\n                                onClick={() =>\r\n                                  history.push(\r\n                                    `/app/alumni/profile/${mentors.id}`\r\n                                  )\r\n                                }\r\n                                className=\"rounded\"\r\n                              >\r\n                                View Profile\r\n                              </Button> */}\r\n                            <a\r\n                              href={`/app/alumni/profile/${mentors.id}`}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                            >\r\n                              <Button color=\"primary\" className=\"rounded\">\r\n                                View Profile\r\n                              </Button>\r\n                            </a>\r\n                          </div>\r\n                        </CardBody>\r\n                        {/* </div> */}\r\n                      </Card>\r\n                    </Colxx>\r\n                  </Row>\r\n                </Colxx>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      )}\r\n      {isMentorCardFetched && (\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPage={paginationMeta.totalPage}\r\n          onChangePage={(i) => setCurrentPage(i)}\r\n          lastIsActive={paginationMeta.last}\r\n          firstIsActive={paginationMeta.first}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlumniLists;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Row } from \"reactstrap\";\r\nimport ReviewsComponent from \"../Reviews/ReviewsComponent\";\r\nimport MentorTabCard from \"../mentorship/MentorTabCard\";\r\n\r\nconst AlumniProfile = () => {\r\n  const { mid } = useParams();\r\n  const history = useHistory();\r\n\r\n  //  To change url to backend please uncomment the below line\r\n  const url1 = `${baseUrl}/api/alumni/${mid}`;\r\n  // const url1 = `${baseUrl}/alumniProfile/${mid}`;\r\n  const ratingUrl = `${baseUrl}/api/alumni/rating/meta/${mid}`;\r\n\r\n  const [alumniprofiledetails, setAlumniProfileDetails] = useState([]);\r\n  const [reviews, setReviews] = useState(\"\");\r\n\r\n  // const history = useHistory();\r\n\r\n  // const [showAll, setShowAll] = useState(false);\r\n  // const toggleShowAll = () => {\r\n  //   setShowAll(!showAll);\r\n  // };\r\n\r\n  //   const handleConnectClick = () => {\r\n\r\n  //     const mentorId = alumniprofiledetails.id;\r\n  //     const mentorName = `${alumniprofiledetails.firstName} ${alumniprofiledetails.lastName}`;\r\n  //     const url2 = `/app/calendar?mentorId=${mentorId}&mentorName=${mentorName}`;\r\n\r\n  //     history.push(url2);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const mentorReviews = async () => {\r\n      try {\r\n        const response = await axios.get(ratingUrl);\r\n        setReviews(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    mentorReviews();\r\n\r\n    const mentorProfile = async () => {\r\n      try {\r\n        const response = await axios.get(url1);\r\n        setAlumniProfileDetails(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    mentorProfile();\r\n  }, []);\r\n\r\n  const chatUserId = alumniprofiledetails.username;\r\n\r\n  // const handleConnectClick = () => {\r\n  //   // Construct the URL with mentor's ID and name as query parameters\r\n  //   const mentorId = alumniprofiledetails.id;\r\n  //   const mentorName = `${alumniprofiledetails.firstName} ${alumniprofiledetails.lastName}`;\r\n  //   const url2 = `/app/calendar?mentorId=${mentorId}&mentorName=${mentorName}`;\r\n\r\n  //   // Navigate to the Month component with the mentor's ID and name as query parameters\r\n  //   history.push(url2);\r\n  // };\r\n  const handleConnectClick = () => {\r\n    // Destructure the properties from mentorprofiledetails1\r\n    const { id: mentorId, firstName, lastName, role } = alumniprofiledetails;\r\n    console.log(\"Role:\", role);\r\n\r\n    // Construct the mentorName using destructured values\r\n    const mentorName = `${firstName} ${lastName}`;\r\n\r\n    // Construct the URL with mentor's ID and name as query parameters\r\n    const url2 = `/app/calendar?mentorId=${mentorId}&mentorName=${mentorName}&role=${role}`;\r\n\r\n    // Navigate to the Month component with the mentor's ID and name as query parameters\r\n    history.push(url2);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (showAll) {\r\n  //     document.getElementById(\"skillsSection\").scrollIntoView();\r\n  //   }\r\n  // }, [showAll]);\r\n\r\n  // const remainingSkillsCount = alumniprofiledetails.skills\r\n  //   ? alumniprofiledetails.skills.length - 3\r\n  //   : 0;\r\n  // const handleLinkedInClick = () => {\r\n  //   const linkedInUrl = alumniprofiledetails.linkedinUrl;\r\n\r\n  //   window.open(linkedInUrl, \"_blank\");\r\n  // };\r\n\r\n  return (\r\n    <div className=\"mentor-profile\">\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\">\r\n        <Row\r\n          style={{\r\n            border: \"1px soild rgba(0, 0, 0, 0.15)\",\r\n          }}\r\n        >\r\n          <div\r\n            className=\"w-100 py-3 d-flex justify-content-between align-items-center position-relative\"\r\n            style={{\r\n              backgroundImage: \"linear-gradient(to right, #145388 , #922c88)\",\r\n              borderTopLeftRadius: \"0.75rem\",\r\n              borderTopRightRadius: \"0.75rem\",\r\n              height: \"142px\",\r\n            }}\r\n          >\r\n            <div>\r\n              {alumniprofiledetails.imageUrl === null ? (\r\n                <div>\r\n                  <ThumbnailLetters\r\n                    rounded\r\n                    small\r\n                    text={alumniprofiledetails.firstName}\r\n                    className=\"border border-1 mx-2\"\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <img\r\n                  src={`${baseUrl}/${alumniprofiledetails.imageUrl}`}\r\n                  className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                  style={{ width: \"110px\", height: \"110px\" }}\r\n                  alt=\"\"\r\n                />\r\n              )}\r\n              {/* <Button\r\n                color=\"light\"\r\n                className=\" font-weight-semibold mx-2\"\r\n                size=\"large\"\r\n              >\r\n                <span className=\"font-weight-semibold text-one\">\r\n                  <i className=\"iconsminds-thunder text-primary\" />\r\n                  {alumniprofiledetails.achievement}\r\n                </span>\r\n              </Button> */}\r\n            </div>\r\n            {/* \r\n            <div>\r\n              <Button\r\n                color=\"light\"\r\n                className=\" font-weight-semibold mx-2 \"\r\n                size=\"large\"\r\n                onClick={handleLinkedInClick}\r\n              >\r\n                <i className=\"simple-icon-social-linkedin text-primary font-weight-semibold text-one  \" />\r\n              </Button>\r\n            </div> */}\r\n          </div>\r\n          <div\r\n            className=\"col bg-white py-2\"\r\n            style={{\r\n              borderBottomLeftRadius: \"0.75rem\",\r\n              borderBottomRightRadius: \"0.75rem\",\r\n            }}\r\n          >\r\n            <h1 className=\"font-weight-semibold text-xlarge\">\r\n              {alumniprofiledetails.firstName} {alumniprofiledetails.lastName}\r\n            </h1>\r\n\r\n            <h3 className=\"text-large  text-muted  \">\r\n              {alumniprofiledetails.jobTitle}\r\n            </h3>\r\n            <h2 className=\"text-one  text-primary\">\r\n              {alumniprofiledetails.company}\r\n            </h2>\r\n            <p className=\"text-one font-weight-medium text-primary\">\r\n              {alumniprofiledetails.bio}\r\n            </p>\r\n\r\n            <h5 className=\"font-weight-medium\">\r\n              <i className=\"simple-icon-location-pin text-primary\" />\r\n              <span className=\"ml-2\">{alumniprofiledetails.location}</span>\r\n            </h5>\r\n\r\n            <h6 className=\"\">\r\n              <i className=\"simple-icon-star text-primary \" />\r\n              <span className=\"ml-2\">\r\n                {reviews.averageStar} ({reviews.totalRatings} reviews)\r\n              </span>\r\n            </h6>\r\n          </div>\r\n\r\n          {/* <div className=\"col-7 mt-4\">\r\n            <h2 className=\"mx-2\">Skills</h2>\r\n\r\n            <div className=\"d-flex align-items-center\">\r\n              <div className=\"d-flex\">\r\n                {alumniprofiledetails.skills &&\r\n                  alumniprofiledetails.skills.slice(0, 3).map((skill) => (\r\n                    <div key={skill}>\r\n                      <Button\r\n                        color=\"light\"\r\n                        className=\"mb-2 font-weight-semibold mx-2\"\r\n                        size=\"xs\"\r\n                      >\r\n                        {skill}\r\n                      </Button>\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n              {alumniprofiledetails.skills &&\r\n                alumniprofiledetails.skills.length > 3 && (\r\n                  <div className=\"\">\r\n                    <Button\r\n                      color=\"link\"\r\n                      className=\"text-one font-weight-bold \"\r\n                      style={{ textDecoration: \"underline\" }}\r\n                      onClick={toggleShowAll}\r\n                    >\r\n                      + {remainingSkillsCount}more\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n            </div> */}\r\n\r\n          {/* <MentorTabCard  handleConnectClick={handleConnectClick}/> */}\r\n          {/* </div> */}\r\n        </Row>\r\n        {/* <Row>\r\n          <Colxx lg={12}>\r\n            <Row>\r\n              <Col sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\">\r\n                <div>\r\n                  {alumniprofiledetails.price && (\r\n                    <MentorTabCard\r\n                      handleConnectClick={handleConnectClick}\r\n                      chatUserId={chatUserId}\r\n                      price={alumniprofiledetails.price}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Colxx>\r\n        </Row> */}\r\n        <Row>\r\n          <Colxx lg={12}>\r\n            {alumniprofiledetails.price && (\r\n              <MentorTabCard\r\n                handleConnectClick={handleConnectClick}\r\n                chatUserId={chatUserId}\r\n                price={alumniprofiledetails.price}\r\n              />\r\n            )}\r\n          </Colxx>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Colxx className='sm=\"12\" md=\"12\" lg=\"12\" xxs=\"12\" mt-3'>\r\n            <Row className=\"bg-white mb-3\" style={{ borderRadius: \"0.75rem\" }}>\r\n              <div className=\"p-3\">\r\n                <h1 className=\"font-weight-semibold text-large\">About</h1>\r\n\r\n                <p className=\"text-one font-weight-medium \">\r\n                  {alumniprofiledetails.bio}\r\n                </p>\r\n              </div>\r\n            </Row>\r\n\r\n            <Row className=\"bg-white mb-3\" style={{ borderRadius: \"0.75rem\" }}>\r\n              <Colxx lg={12} id=\"skillsSection\" className=\"p-3\">\r\n                <h1 className=\"font-weight-semibold text-large\">Skills </h1>\r\n                <div className=\"d-flex flex-wrap \">\r\n                  {alumniprofiledetails.skills &&\r\n                    alumniprofiledetails.skills.map((skill) => (\r\n                      <div key={skill}>\r\n                        <Button\r\n                          color=\"light\"\r\n                          className=\"mb-2 font-weight-semibold mr-2\"\r\n                          size=\"md\"\r\n                        >\r\n                          {skill}\r\n                        </Button>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              </Colxx>\r\n            </Row>\r\n            <Row className=\"bg-white mb-3\" style={{ borderRadius: \"0.75rem\" }}>\r\n              <ReviewsComponent category=\"alumni\" revieweeId={mid} />\r\n            </Row>\r\n          </Colxx>\r\n        </Row>\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlumniProfile;\r\n","import React from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"page-footer\">\r\n      <div className=\"footer-content\">\r\n        <div className=\"container-fluid\">\r\n          <Row>\r\n            <Colxx xxs=\"12\" sm=\"6\">\r\n              <p className=\"mb-0 text-muted\">Metiegrow LLC</p>\r\n            </Colxx>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { adminRoot } from \"./defaultValues\";\r\n\r\nconst data = [\r\n  {\r\n    id: \"Dashboard\",\r\n    icon: \"iconsminds-shop-4\",\r\n    label: \"Dashboard\",\r\n    to: `${adminRoot}/dashboard`,\r\n    roles: [\"USER\"],\r\n  },\r\n  {\r\n    id: \"Mentor\",\r\n    icon: \"simple-icon-people\",\r\n    label: \"MentorShip\",\r\n    to: `${adminRoot}/mentor/list`,\r\n    roles: [\"ADMIN\", \"USER\", \"MENTOR\", \"ALUMNI\"],\r\n  },\r\n  {\r\n    id: \"Student\",\r\n    icon: \"iconsminds-students\",\r\n    label: \"Student\",\r\n    to: `${adminRoot}/student/list`,\r\n    roles: [\"ADMIN\", \"USER\", \"MENTOR\", \"ALUMNI\"],\r\n    subs: [],\r\n  },\r\n  {\r\n    id: \"Q & A\",\r\n    icon: \"simple-icon-question\",\r\n    label: \"Q & A\",\r\n    to: `${adminRoot}/questions`,\r\n    roles: [\"ADMIN\", \"USER\", \"MENTOR\", \"ALUMNI\"],\r\n    subs: [],\r\n  },\r\n  {\r\n    id: \"Lawyer\",\r\n    icon: \"iconsminds-scale\",\r\n    label: \"Lawyer\",\r\n    to: `${adminRoot}/lawyer/list`,\r\n    roles: [\"ADMIN\", \"USER\", \"MENTOR\", \"ALUMNI\"],\r\n  },\r\n  {\r\n    id: \"Alumni\",\r\n    icon: \"iconsminds-student-hat\",\r\n    label: \"Alumni\",\r\n    to: `${adminRoot}/alumni/alumnilists`,\r\n    roles: [\"ADMIN\", \"USER\", \"MENTOR\", \"ALUMNI\"],\r\n  },\r\n  {\r\n    id: \"Listing\",\r\n    icon: \"simple-icon-list\",\r\n    label: \"Listing\",\r\n    to: `${adminRoot}/listing/job`,\r\n    roles: [\"ADMIN\", \"USER\", \"MENTOR\", \"ALUMNI\", \"HR\", \"REALESTATE\"],\r\n  },\r\n  {\r\n    id: \"Chat\",\r\n    icon: \"simple-icon-bubbles\",\r\n    label: \"Chat\",\r\n    to: `${adminRoot}/chat`,\r\n    roles: [\"ADMIN\", \"USER\", \"MENTOR\", \"ALUMNI\"],\r\n  },\r\n];\r\n\r\nexport default data;\r\n","/* eslint-disable react/no-array-index-key */\r\nimport classnames from \"classnames\";\r\nimport { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { Collapse, Nav, NavItem } from \"reactstrap\";\r\n\r\nimport IntlMessages from \"helpers/IntlMessages\";\r\n\r\nimport {\r\n  addContainerClassname,\r\n  changeDefaultClassnames,\r\n  changeSelectedMenuHasSubItems,\r\n  setContainerClassnames,\r\n} from \"redux/actions\";\r\n\r\nimport menuItems from \"constants/menu\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedParentMenu: \"\",\r\n      viewingParentMenu: \"\",\r\n      collapsedMenus: [],\r\n    };\r\n  }\r\n\r\n  // eslint-disable-next-line react/sort-comp\r\n  handleWindowResize = (event) => {\r\n    if (event && !event.isTrusted) {\r\n      return;\r\n    }\r\n    const { containerClassnames } = this.props;\r\n    const nextClasses = this.getMenuClassesForResize(containerClassnames);\r\n    // eslint-disable-next-line react/destructuring-assignment\r\n    this.props.setContainerClassnames(\r\n      0,\r\n      nextClasses.join(\" \"),\r\n      // eslint-disable-next-line react/destructuring-assignment\r\n      this.props.selectedMenuHasSubItems\r\n    );\r\n  };\r\n\r\n  handleDocumentClick = (e) => {\r\n    const container = this.getContainer();\r\n    let isMenuClick = false;\r\n    if (\r\n      e.target &&\r\n      e.target.classList &&\r\n      (e.target.classList.contains(\"menu-button\") ||\r\n        e.target.classList.contains(\"menu-button-mobile\"))\r\n    ) {\r\n      isMenuClick = true;\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.classList &&\r\n      (e.target.parentElement.classList.contains(\"menu-button\") ||\r\n        e.target.parentElement.classList.contains(\"menu-button-mobile\"))\r\n    ) {\r\n      isMenuClick = true;\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.parentElement &&\r\n      e.target.parentElement.parentElement.classList &&\r\n      (e.target.parentElement.parentElement.classList.contains(\"menu-button\") ||\r\n        e.target.parentElement.parentElement.classList.contains(\r\n          \"menu-button-mobile\"\r\n        ))\r\n    ) {\r\n      isMenuClick = true;\r\n    }\r\n    if (container.contains(e.target) || container === e.target || isMenuClick) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      viewingParentMenu: \"\",\r\n    });\r\n    this.toggle();\r\n  };\r\n\r\n  getMenuClassesForResize = (classes) => {\r\n    const { menuHiddenBreakpoint, subHiddenBreakpoint } = this.props;\r\n    let nextClasses = classes.split(\" \").filter((x) => x !== \"\");\r\n    const windowWidth = window.innerWidth;\r\n    if (windowWidth < menuHiddenBreakpoint) {\r\n      nextClasses.push(\"menu-mobile\");\r\n    } else if (windowWidth < subHiddenBreakpoint) {\r\n      nextClasses = nextClasses.filter((x) => x !== \"menu-mobile\");\r\n      if (\r\n        nextClasses.includes(\"menu-default\") &&\r\n        !nextClasses.includes(\"menu-sub-hidden\")\r\n      ) {\r\n        nextClasses.push(\"menu-sub-hidden\");\r\n      }\r\n    } else {\r\n      nextClasses = nextClasses.filter((x) => x !== \"menu-mobile\");\r\n      if (\r\n        nextClasses.includes(\"menu-default\") &&\r\n        nextClasses.includes(\"menu-sub-hidden\")\r\n      ) {\r\n        nextClasses = nextClasses.filter((x) => x !== \"menu-sub-hidden\");\r\n      }\r\n    }\r\n    return nextClasses;\r\n  };\r\n\r\n  getContainer = () => {\r\n    // eslint-disable-next-line react/no-find-dom-node\r\n    return ReactDOM.findDOMNode(this);\r\n  };\r\n\r\n  toggle = () => {\r\n    const hasSubItems = this.getIsHasSubItem();\r\n    // eslint-disable-next-line react/destructuring-assignment\r\n    this.props.changeSelectedMenuHasSubItems(hasSubItems);\r\n    const { containerClassnames, menuClickCount } = this.props;\r\n    const currentClasses = containerClassnames\r\n      ? containerClassnames.split(\" \").filter((x) => x !== \"\")\r\n      : \"\";\r\n    let clickIndex = -1;\r\n\r\n    if (!hasSubItems) {\r\n      if (\r\n        currentClasses.includes(\"menu-default\") &&\r\n        (menuClickCount % 4 === 0 || menuClickCount % 4 === 3)\r\n      ) {\r\n        clickIndex = 1;\r\n      } else if (\r\n        currentClasses.includes(\"menu-sub-hidden\") &&\r\n        (menuClickCount === 2 || menuClickCount === 3)\r\n      ) {\r\n        clickIndex = 0;\r\n      } else if (\r\n        currentClasses.includes(\"menu-hidden\") ||\r\n        currentClasses.includes(\"menu-mobile\")\r\n      ) {\r\n        clickIndex = 0;\r\n      }\r\n    } else if (\r\n      currentClasses.includes(\"menu-sub-hidden\") &&\r\n      menuClickCount === 3\r\n    ) {\r\n      clickIndex = 2;\r\n    } else if (\r\n      currentClasses.includes(\"menu-hidden\") ||\r\n      currentClasses.includes(\"menu-mobile\")\r\n    ) {\r\n      clickIndex = 0;\r\n    }\r\n    if (clickIndex >= 0) {\r\n      // eslint-disable-next-line react/destructuring-assignment\r\n      this.props.setContainerClassnames(\r\n        clickIndex,\r\n        containerClassnames,\r\n        hasSubItems\r\n      );\r\n    }\r\n  };\r\n\r\n  handleProps = () => {\r\n    this.addEvents();\r\n  };\r\n\r\n  addEvents = () => {\r\n    [\"click\", \"touchstart\", \"touchend\"].forEach((event) =>\r\n      document.addEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  removeEvents = () => {\r\n    [\"click\", \"touchstart\", \"touchend\"].forEach((event) =>\r\n      document.removeEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  setSelectedLiActive = (callback) => {\r\n    const oldli = document.querySelector(\".sub-menu  li.active\");\r\n    if (oldli != null) {\r\n      oldli.classList.remove(\"active\");\r\n    }\r\n\r\n    const oldliSub = document.querySelector(\".third-level-menu  li.active\");\r\n    if (oldliSub != null) {\r\n      oldliSub.classList.remove(\"active\");\r\n    }\r\n\r\n    /* set selected parent menu */\r\n    const selectedSublink = document.querySelector(\r\n      \".third-level-menu  a.active\"\r\n    );\r\n    if (selectedSublink != null) {\r\n      selectedSublink.parentElement.classList.add(\"active\");\r\n    }\r\n\r\n    const selectedlink = document.querySelector(\".sub-menu  a.active\");\r\n    if (selectedlink != null) {\r\n      selectedlink.parentElement.classList.add(\"active\");\r\n      this.setState(\r\n        {\r\n          selectedParentMenu:\r\n            selectedlink.parentElement.parentElement.getAttribute(\r\n              \"data-parent\"\r\n            ),\r\n        },\r\n        callback\r\n      );\r\n    } else {\r\n      const selectedParentNoSubItem = document.querySelector(\r\n        \".main-menu  li a.active\"\r\n      );\r\n      if (selectedParentNoSubItem != null) {\r\n        this.setState(\r\n          {\r\n            selectedParentMenu:\r\n              selectedParentNoSubItem.getAttribute(\"data-flag\"),\r\n          },\r\n          callback\r\n        );\r\n        // eslint-disable-next-line react/destructuring-assignment\r\n      } else if (this.state.selectedParentMenu === \"\") {\r\n        this.setState(\r\n          {\r\n            selectedParentMenu: menuItems[0].id,\r\n          },\r\n          callback\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  setHasSubItemStatus = () => {\r\n    const hasSubmenu = this.getIsHasSubItem();\r\n    // eslint-disable-next-line react/destructuring-assignment\r\n    this.props.changeSelectedMenuHasSubItems(hasSubmenu);\r\n    this.toggle();\r\n  };\r\n\r\n  getIsHasSubItem = () => {\r\n    const { selectedParentMenu } = this.state;\r\n    const menuItem = menuItems.find((x) => x.id === selectedParentMenu);\r\n    if (menuItem)\r\n      return !!(menuItem && menuItem.subs && menuItem.subs.length > 0);\r\n    return false;\r\n  };\r\n\r\n  // eslint-disable-next-line react/sort-comp\r\n  componentDidUpdate(prevProps) {\r\n    // eslint-disable-next-line react/destructuring-assignment\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      this.setSelectedLiActive(this.setHasSubItemStatus);\r\n\r\n      window.scrollTo(0, 0);\r\n    }\r\n    this.handleProps();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleWindowResize);\r\n    this.handleWindowResize();\r\n    this.handleProps();\r\n    this.setSelectedLiActive(this.setHasSubItemStatus);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeEvents();\r\n    window.removeEventListener(\"resize\", this.handleWindowResize);\r\n  }\r\n\r\n  openSubMenu = (e, menuItem) => {\r\n    const selectedParent = menuItem.id;\r\n    const hasSubMenu = menuItem.subs && menuItem.subs.length > 0;\r\n    // eslint-disable-next-line react/destructuring-assignment\r\n    this.props.changeSelectedMenuHasSubItems(hasSubMenu);\r\n    if (!hasSubMenu) {\r\n      this.setState({\r\n        viewingParentMenu: selectedParent,\r\n        selectedParentMenu: selectedParent,\r\n      });\r\n      this.toggle();\r\n    } else {\r\n      e.preventDefault();\r\n\r\n      const { containerClassnames, menuClickCount } = this.props;\r\n      const currentClasses = containerClassnames\r\n        ? containerClassnames.split(\" \").filter((x) => x !== \"\")\r\n        : \"\";\r\n\r\n      if (!currentClasses.includes(\"menu-mobile\")) {\r\n        if (\r\n          currentClasses.includes(\"menu-sub-hidden\") &&\r\n          (menuClickCount === 2 || menuClickCount === 0)\r\n        ) {\r\n          // eslint-disable-next-line react/destructuring-assignment\r\n          this.props.setContainerClassnames(3, containerClassnames, hasSubMenu);\r\n        } else if (\r\n          currentClasses.includes(\"menu-hidden\") &&\r\n          (menuClickCount === 1 || menuClickCount === 3)\r\n        ) {\r\n          // eslint-disable-next-line react/destructuring-assignment\r\n          this.props.setContainerClassnames(2, containerClassnames, hasSubMenu);\r\n        } else if (\r\n          currentClasses.includes(\"menu-default\") &&\r\n          !currentClasses.includes(\"menu-sub-hidden\") &&\r\n          (menuClickCount === 1 || menuClickCount === 3)\r\n        ) {\r\n          // eslint-disable-next-line react/destructuring-assignment\r\n          this.props.setContainerClassnames(0, containerClassnames, hasSubMenu);\r\n        }\r\n      } else {\r\n        // eslint-disable-next-line react/destructuring-assignment\r\n        this.props.addContainerClassname(\r\n          \"sub-show-temporary\",\r\n          containerClassnames\r\n        );\r\n      }\r\n      this.setState({\r\n        viewingParentMenu: selectedParent,\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleMenuCollapse = (e, menuKey) => {\r\n    e.preventDefault();\r\n\r\n    const { collapsedMenus } = this.state;\r\n    if (collapsedMenus.indexOf(menuKey) > -1) {\r\n      this.setState({\r\n        collapsedMenus: collapsedMenus.filter((x) => x !== menuKey),\r\n      });\r\n    } else {\r\n      collapsedMenus.push(menuKey);\r\n      this.setState({\r\n        collapsedMenus,\r\n      });\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // eslint-disable-next-line no-shadow\r\n  filteredList = (menuItems) => {\r\n    // const { currentUser } = this.props;\r\n    const currentUser = localStorage.getItem(\"roleRes\");\r\n    if (currentUser) {\r\n      return menuItems.filter(\r\n        (x) => (x.roles && x.roles.includes(currentUser)) || !x.roles\r\n      );\r\n    }\r\n    return menuItems;\r\n  };\r\n\r\n  // filteredList = (items) => {\r\n  //   // Renamed 'menuItems' to 'items'\r\n  //   const { currentUser } = this.props;\r\n  //   if (currentUser) {\r\n  //     // If the role is \"HR\" or \"REALESTATE\", only show \"Listing\" item\r\n  //     if (currentUser.role === \"HR\" || currentUser.role === \"REALESTATE\") {\r\n  //       return items.filter((x) => x.label === \"Listing\");\r\n  //     }\r\n\r\n  //     // Otherwise, filter based on user roles\r\n  //     return items.filter(\r\n  //       (x) => (x.roles && x.roles.includes(currentUser.role)) || !x.roles\r\n  //     );\r\n  //   }\r\n\r\n  //   return items; // Return all items if no currentUser\r\n  // };\r\n\r\n  render() {\r\n    const { selectedParentMenu, viewingParentMenu, collapsedMenus } =\r\n      this.state;\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <div className=\"main-menu\">\r\n          <div className=\"scroll\">\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              <Nav vertical className=\"list-unstyled\">\r\n                {menuItems &&\r\n                  this.filteredList(menuItems).map((item) => {\r\n                    return (\r\n                      <NavItem\r\n                        key={item.id}\r\n                        className={classnames({\r\n                          active:\r\n                            (selectedParentMenu === item.id &&\r\n                              viewingParentMenu === \"\") ||\r\n                            viewingParentMenu === item.id,\r\n                        })}\r\n                      >\r\n                        {item.newWindow ? (\r\n                          <a\r\n                            href={item.to}\r\n                            rel=\"noopener noreferrer\"\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i className={item.icon} />{\" \"}\r\n                            <IntlMessages id={item.label} />\r\n                          </a>\r\n                        ) : (\r\n                          <NavLink\r\n                            to={item.to}\r\n                            onClick={(e) => this.openSubMenu(e, item)}\r\n                            data-flag={item.id}\r\n                          >\r\n                            <i className={item.icon} />{\" \"}\r\n                            <IntlMessages id={item.label} />\r\n                          </NavLink>\r\n                        )}\r\n                      </NavItem>\r\n                    );\r\n                  })}\r\n              </Nav>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"sub-menu\">\r\n          <div className=\"scroll\">\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              {menuItems &&\r\n                this.filteredList(menuItems).map((item) => {\r\n                  return (\r\n                    <Nav\r\n                      key={item.id}\r\n                      className={classnames({\r\n                        \"d-block\":\r\n                          // eslint-disable-next-line react/destructuring-assignment\r\n                          (this.state.selectedParentMenu === item.id &&\r\n                            // eslint-disable-next-line react/destructuring-assignment\r\n                            this.state.viewingParentMenu === \"\") ||\r\n                          // eslint-disable-next-line react/destructuring-assignment\r\n                          this.state.viewingParentMenu === item.id,\r\n                      })}\r\n                      data-parent={item.id}\r\n                    >\r\n                      {item.subs &&\r\n                        this.filteredList(item.subs).map((sub, index) => {\r\n                          return (\r\n                            <NavItem\r\n                              key={`${item.id}_${index}`}\r\n                              className={`${\r\n                                sub.subs && sub.subs.length > 0\r\n                                  ? \"has-sub-item\"\r\n                                  : \"\"\r\n                              }`}\r\n                            >\r\n                              {/* eslint-disable-next-line no-nested-ternary */}\r\n                              {sub.newWindow ? (\r\n                                <a\r\n                                  href={sub.to}\r\n                                  rel=\"noopener noreferrer\"\r\n                                  target=\"_blank\"\r\n                                >\r\n                                  <i className={sub.icon} />{\" \"}\r\n                                  <IntlMessages id={sub.label} />\r\n                                </a>\r\n                              ) : sub.subs && sub.subs.length > 0 ? (\r\n                                <>\r\n                                  <NavLink\r\n                                    className={`rotate-arrow-icon opacity-50 ${\r\n                                      collapsedMenus.indexOf(\r\n                                        `${item.id}_${index}`\r\n                                      ) === -1\r\n                                        ? \"\"\r\n                                        : \"collapsed\"\r\n                                    }`}\r\n                                    to={sub.to}\r\n                                    id={`${item.id}_${index}`}\r\n                                    onClick={(e) =>\r\n                                      this.toggleMenuCollapse(\r\n                                        e,\r\n                                        `${item.id}_${index}`\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <i className=\"simple-icon-arrow-down\" />{\" \"}\r\n                                    <IntlMessages id={sub.label} />\r\n                                  </NavLink>\r\n\r\n                                  <Collapse\r\n                                    isOpen={\r\n                                      collapsedMenus.indexOf(\r\n                                        `${item.id}_${index}`\r\n                                      ) === -1\r\n                                    }\r\n                                  >\r\n                                    <Nav className=\"third-level-menu\">\r\n                                      {this.filteredList(sub.subs).map(\r\n                                        (thirdSub, thirdIndex) => {\r\n                                          return (\r\n                                            <NavItem\r\n                                              key={`${item.id}_${index}_${thirdIndex}`}\r\n                                            >\r\n                                              {thirdSub.newWindow ? (\r\n                                                <a\r\n                                                  href={thirdSub.to}\r\n                                                  rel=\"noopener noreferrer\"\r\n                                                  target=\"_blank\"\r\n                                                >\r\n                                                  <i\r\n                                                    className={thirdSub.icon}\r\n                                                  />{\" \"}\r\n                                                  <IntlMessages\r\n                                                    id={thirdSub.label}\r\n                                                  />\r\n                                                </a>\r\n                                              ) : (\r\n                                                <NavLink to={thirdSub.to}>\r\n                                                  <i\r\n                                                    className={thirdSub.icon}\r\n                                                  />{\" \"}\r\n                                                  <IntlMessages\r\n                                                    id={thirdSub.label}\r\n                                                  />\r\n                                                </NavLink>\r\n                                              )}\r\n                                            </NavItem>\r\n                                          );\r\n                                        }\r\n                                      )}\r\n                                    </Nav>\r\n                                  </Collapse>\r\n                                </>\r\n                              ) : (\r\n                                <NavLink to={sub.to}>\r\n                                  <i className={sub.icon} />{\" \"}\r\n                                  <IntlMessages id={sub.label} />\r\n                                </NavLink>\r\n                              )}\r\n                            </NavItem>\r\n                          );\r\n                        })}\r\n                    </Nav>\r\n                  );\r\n                })}\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ menu, authUser }) => {\r\n  const {\r\n    containerClassnames,\r\n    subHiddenBreakpoint,\r\n    menuHiddenBreakpoint,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n  } = menu;\r\n\r\n  const { currentUser } = authUser;\r\n  return {\r\n    containerClassnames,\r\n    subHiddenBreakpoint,\r\n    menuHiddenBreakpoint,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    currentUser,\r\n  };\r\n};\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    setContainerClassnames,\r\n    addContainerClassname,\r\n    changeDefaultClassnames,\r\n    changeSelectedMenuHasSubItems,\r\n  })(Sidebar)\r\n);\r\n","import React from 'react';\r\n\r\nconst MenuIcon = () => {\r\n  return (\r\n    <>\r\n      <svg\r\n        className=\"main\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 9 17\"\r\n      >\r\n        <rect x=\"0.48\" y=\"0.5\" width=\"7\" height=\"1\" />\r\n        <rect x=\"0.48\" y=\"7.5\" width=\"7\" height=\"1\" />\r\n        <rect x=\"0.48\" y=\"15.5\" width=\"7\" height=\"1\" />\r\n      </svg>\r\n      <svg\r\n        className=\"sub\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 18 17\"\r\n      >\r\n        <rect x=\"1.56\" y=\"0.5\" width=\"16\" height=\"1\" />\r\n        <rect x=\"1.56\" y=\"7.5\" width=\"16\" height=\"1\" />\r\n        <rect x=\"1.56\" y=\"15.5\" width=\"16\" height=\"1\" />\r\n      </svg>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuIcon;\r\n","import React from 'react';\r\n\r\nconst MobileMenuIcon = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 26 17\">\r\n      <rect x=\"0.5\" y=\"0.5\" width=\"25\" height=\"1\" />\r\n      <rect x=\"0.5\" y=\"7.5\" width=\"25\" height=\"1\" />\r\n      <rect x=\"0.5\" y=\"15.5\" width=\"25\" height=\"1\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default MobileMenuIcon;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Switch from 'rc-switch';\r\nimport 'rc-switch/assets/index.css';\r\nimport { Tooltip } from 'reactstrap';\r\nimport { getCurrentColor, setCurrentColor } from 'helpers/Utils';\r\n\r\nconst TopnavDarkSwitch = () => {\r\n  const [switchChecked, setSwitchChecked] = useState(false);\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const color = getCurrentColor();\r\n    setSwitchChecked(color.indexOf('dark') > -1);\r\n  }, []);\r\n\r\n  const changeMode = () => {\r\n    let color = getCurrentColor();\r\n\r\n    if (color.indexOf('dark') > -1) {\r\n      color = color.replace('dark', 'light');\r\n    } else if (color.indexOf('light') > -1) {\r\n      color = color.replace('light', 'dark');\r\n    }\r\n    setCurrentColor(color);\r\n    setSwitchChecked(color.indexOf('dark') > -1);\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-none d-md-inline-block align-middle mr-3\">\r\n      <Switch\r\n        id=\"tooltip_switch\"\r\n        className=\"custom-switch custom-switch-primary custom-switch-small\"\r\n        checked={switchChecked}\r\n        onChange={changeMode}\r\n      />\r\n      <Tooltip\r\n        placement=\"left\"\r\n        isOpen={tooltipOpen}\r\n        target=\"tooltip_switch\"\r\n        toggle={() => setTooltipOpen(!tooltipOpen)}\r\n      >\r\n        Dark Mode\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\nexport default TopnavDarkSwitch;\r\n","/* eslint-disable react/no-array-index-key */\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\n// import notifications from 'data/notifications';\r\nimport { adminRoot, baseUrl } from \"constants/defaultValues\";\r\nimport TimestampConverter from \"views/app/myapp/Calculation/TimestampConverter\";\r\n\r\n// const NotificationItem = ({ img, title, date }) => {\r\n//   return (\r\n//     <div className=\"d-flex flex-row mb-3 pb-3 border-bottom\">\r\n//       <NavLink to={`${adminRoot}/pages/product/details`}>\r\n//         <img\r\n//           src={img}\r\n//           alt={title}\r\n//           className=\"img-thumbnail list-thumbnail xsmall border-0 rounded-circle\"\r\n//         />\r\n//       </NavLink>\r\n//       <div className=\"pl-3 pr-2\">\r\n//         <NavLink to={`${adminRoot}/pages/product/details`}>\r\n//           <p className=\"font-weight-medium mb-1\">{title}</p>\r\n//           <p className=\"text-muted mb-0 text-small\">{date}</p>\r\n//         </NavLink>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst TopnavNotifications = () => {\r\n  const url = `${baseUrl}/api/notifications/last30days`;\r\n\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const response = await axios.get(url);\r\n        setNotifications(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching notifications:\", error);\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n\r\n    const intervalId = setInterval(fetchNotifications, 30000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [url, clicked]);\r\n  const handleClick = () => {\r\n    setClicked(!clicked);\r\n  };\r\n  return (\r\n    <div className=\"position-relative d-inline-block\">\r\n      <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n        <DropdownToggle\r\n          className=\"header-icon notificationButton mr-3\"\r\n          color=\"empty\"\r\n          onClick={handleClick}\r\n        >\r\n          <i className=\"simple-icon-bell\" />\r\n          <span className=\"count\">{notifications.length}</span>\r\n        </DropdownToggle>\r\n        <DropdownMenu\r\n          className=\"position-absolute mt-3 scroll\"\r\n          right\r\n          id=\"notificationDropdown\"\r\n        >\r\n          {notifications.length === 0 ? (\r\n            <div className=\"p-3 text-center\">\r\n              You don&apos;t have any notifications\r\n            </div>\r\n          ) : (\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              {notifications.map((notification) => {\r\n                // return <NotificationItem key={index} {...notification} />;\r\n                return (\r\n                  <div\r\n                    className=\"d-flex flex-row mb-3 pb-3 border-bottom\"\r\n                    key={notification.id}\r\n                  >\r\n                    <NavLink to={`${adminRoot}/pages/product/details`}>\r\n                      <img\r\n                        src=\"\"\r\n                        alt=\"\"\r\n                        className=\"img-thumbnail list-thumbnail xsmall border-0 rounded-circle\"\r\n                      />\r\n                    </NavLink>\r\n                    <div className=\"pl-3 pr-2\">\r\n                      <NavLink to={notification.url}>\r\n                        <p className=\"font-weight-medium mb-1\">\r\n                          {notification.message}\r\n                        </p>\r\n                        <p className=\"text-muted mb-0 text-small\">\r\n                          <TimestampConverter\r\n                            timeStamp={notification.createdAt}\r\n                            format=\"datetime\"\r\n                          />\r\n                        </p>\r\n                      </NavLink>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </PerfectScrollbar>\r\n          )}\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopnavNotifications;\r\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable no-use-before-define */\r\nimport { useState } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\n\r\nimport {\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Row,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport {\r\n  changeLocale,\r\n  clickOnMobileMenu,\r\n  logoutUser,\r\n  setContainerClassnames,\r\n} from \"redux/actions\";\r\n\r\nimport { MenuIcon, MobileMenuIcon } from \"components/svg\";\r\nimport {\r\n  adminRoot,\r\n  baseUrl,\r\n  isDarkSwitchActive,\r\n  searchPath,\r\n} from \"constants/defaultValues\";\r\nimport ThumbnailLetters from \"views/app/myapp/Chat/ThumbnailLetters\";\r\n// import MyProfile from 'views/app/myapp/my-profile/MyProfile';\r\nimport TopnavDarkSwitch from \"./Topnav.DarkSwitch\";\r\nimport TopnavNotifications from \"./Topnav.Notifications\";\r\n\r\n// const NotificationData = {\r\n//   payload: [\r\n//     {\r\n//       id: 1,\r\n//       msg: \"This is a sample notification\",\r\n//       created_at: \"2020-09-08\",\r\n//     },\r\n//     {\r\n//       id: 2,\r\n//       msg: \"This is a sample notification 2\",\r\n//       created_at: \"2020-09-08\",\r\n//     },\r\n//   ],\r\n// };\r\n\r\nconst TopNav = ({\r\n  history,\r\n  containerClassnames,\r\n  menuClickCount,\r\n  selectedMenuHasSubItems,\r\n  setContainerClassnamesAction,\r\n  clickOnMobileMenuAction,\r\n  logoutUserAction,\r\n}) => {\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n\r\n  const search = () => {\r\n    history.push(`${searchPath}?key=${searchKeyword}`);\r\n    setSearchKeyword(\"\");\r\n  };\r\n\r\n  const handleDocumentClickSearch = (e) => {\r\n    let isSearchClick = false;\r\n    if (\r\n      e.target &&\r\n      e.target.classList &&\r\n      (e.target.classList.contains(\"navbar\") ||\r\n        e.target.classList.contains(\"simple-icon-magnifier\"))\r\n    ) {\r\n      isSearchClick = true;\r\n      if (e.target.classList.contains(\"simple-icon-magnifier\")) {\r\n        search();\r\n      }\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.classList &&\r\n      e.target.parentElement.classList.contains(\"search\")\r\n    ) {\r\n      isSearchClick = true;\r\n    }\r\n\r\n    if (!isSearchClick) {\r\n      const input = document.querySelector(\".mobile-view\");\r\n      if (input && input.classList) input.classList.remove(\"mobile-view\");\r\n      removeEventsSearch();\r\n      setSearchKeyword(\"\");\r\n    }\r\n  };\r\n\r\n  const removeEventsSearch = () => {\r\n    document.removeEventListener(\"click\", handleDocumentClickSearch, true);\r\n  };\r\n\r\n  function getRoleRes() {\r\n    return localStorage.getItem(\"roleRes\");\r\n  }\r\n  function getExpTime() {\r\n    return localStorage.getItem(\"expirationTime\");\r\n  }\r\n\r\n  const roleRes = getRoleRes();\r\n  const expTime = getExpTime();\r\n\r\n  const timeUntilExpiration = expTime - Date.now();\r\n  setTimeout(() => {\r\n    localStorage.clear();\r\n    logoutUserAction(history);\r\n  }, timeUntilExpiration);\r\n\r\n  let session;\r\n\r\n  if (roleRes.includes(\"MENTOR\") || roleRes.includes(\"ALUMNI\")) {\r\n    session = `${adminRoot}/sessionmentor`;\r\n  } else if (roleRes.includes(\"USER\")) {\r\n    session = `${adminRoot}/sessionlists`;\r\n  }\r\n\r\n  let myProfile;\r\n  if (roleRes.includes(\"MENTOR\")) {\r\n    myProfile = `${adminRoot}/mentor/myprofile`;\r\n  } else if (roleRes.includes(\"LAWYER\")) {\r\n    myProfile = `${adminRoot}/lawyer/myprofile`;\r\n  } else if (roleRes.includes(\"USER\")) {\r\n    myProfile = `${adminRoot}/student/myprofile`;\r\n  } else if (roleRes.includes(\"ALUMNI\")) {\r\n    myProfile = `${adminRoot}/alumni/myprofile`;\r\n  } else if (roleRes.includes(\"HR\")) {\r\n    myProfile = `${adminRoot}/alumni/myprofile`;\r\n  } else if (roleRes.includes(\"REALESTATE\")) {\r\n    myProfile = `${adminRoot}/alumni/myprofile`;\r\n  }\r\n\r\n  const handleMyProfileClick = () => {\r\n    history.push(myProfile);\r\n  };\r\n  const handleMyWalletClick = () => {\r\n    history.push(`${adminRoot}/mywallet`);\r\n  };\r\n  const handleMyListingClick = () => {\r\n    history.push(`${adminRoot}/mylisting`);\r\n  };\r\n  const handleMyActivitiesClick = () => {\r\n    history.push(`${adminRoot}/myactivities`);\r\n  };\r\n  const handleMySessionsClick = () => {\r\n    history.push(session);\r\n  };\r\n  const handleMyAlumniSession = () => {\r\n    history.push(`${adminRoot}/alumni/sessionlists`);\r\n  };\r\n  const handleMyLawyerJobsClick = () => {\r\n    history.push(`${adminRoot}/jobslist`);\r\n  };\r\n  const handleMyClientJobsClick = () => {\r\n    history.push(`${adminRoot}/lawyerjobslist`);\r\n  };\r\n  const handleMySlots = () => {\r\n    history.push(`${adminRoot}/calendar/mentor/appointment`);\r\n  };\r\n  const handleSettingsClick = () => {\r\n    history.push(`${adminRoot}/settings`);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logoutUserAction(history);\r\n    localStorage.removeItem(\"roleRes\");\r\n    localStorage.removeItem(\"tokenRes\");\r\n    localStorage.removeItem(\"status\");\r\n    localStorage.removeItem(\"userId\");\r\n    localStorage.removeItem(\"userName\");\r\n    localStorage.removeItem(\"imageUrl\");\r\n    localStorage.removeItem(\"__theme_selected_color\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    localStorage.removeItem(\"__theme_radius\");\r\n  };\r\n\r\n  const renderMySlots = () => {\r\n    if (roleRes.includes(\"MENTOR\")) {\r\n      return (\r\n        <NavLink to={`${adminRoot}/calendar/mentor/appointment`}>\r\n          <DropdownItem onClick={() => handleMySlots()}>\r\n            <i className=\"simple-icon-wallet\" /> My Slots\r\n          </DropdownItem>\r\n        </NavLink>\r\n      );\r\n    }\r\n\r\n    if (roleRes.includes(\"ALUMNI\")) {\r\n      return (\r\n        <NavLink to={`${adminRoot}/calendar/mentor/appointment`}>\r\n          <DropdownItem onClick={() => handleMySlots()}>\r\n            <i className=\"simple-icon-wallet\" /> My Slots\r\n          </DropdownItem>\r\n        </NavLink>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const renderMyWallet = () => {\r\n    if (roleRes.includes(\"USER\")) {\r\n      return (\r\n        <>\r\n          <NavLink to={`${adminRoot}/mywallet`}>\r\n            <DropdownItem onClick={() => handleMyWalletClick()}>\r\n              <i className=\"simple-icon-wallet\" /> My Wallet\r\n            </DropdownItem>\r\n          </NavLink>\r\n          <NavLink to={`${adminRoot}/lawyerjobslist`}>\r\n            <DropdownItem onClick={() => handleMyClientJobsClick()}>\r\n              <i className=\"iconsminds-scale\" /> My Lawyer Jobs\r\n            </DropdownItem>\r\n          </NavLink>\r\n        </>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  const renderClientJob = () => {\r\n    if (roleRes.includes(\"LAWYER\")) {\r\n      return (\r\n        <NavLink to={`${adminRoot}/jobslist`}>\r\n          <DropdownItem onClick={() => handleMyLawyerJobsClick()}>\r\n            <i className=\"iconsminds-scale\" /> My Client Jobs\r\n          </DropdownItem>\r\n        </NavLink>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  // const renderMentorSession = () => {\r\n  //   if (\r\n  //     roleRes.includes(\"USER\") ||\r\n  //     roleRes.includes(\"MENTOR\") ||\r\n  //     roleRes.includes(\"ALUMNI\")\r\n  //   ) {\r\n  //     return (\r\n  //       <NavLink to={session}>\r\n  //         <DropdownItem onClick={() => handleMySessionsClick()}>\r\n  //           <i className=\"simple-icon-list\" /> My Mentor Sessions\r\n  //         </DropdownItem>\r\n  //       </NavLink>\r\n  //     );\r\n  //   }\r\n  //   return null;\r\n  // };\r\n  const renderMyAlumniSessions = () => {\r\n    if (roleRes.includes(\"USER\")) {\r\n      return (\r\n        <NavLink to={`${adminRoot}/alumni/sessionlists`}>\r\n          <DropdownItem onClick={() => handleMyAlumniSession()}>\r\n            <i className=\"simple-icon-list\" /> My Alumni Sessions\r\n          </DropdownItem>\r\n        </NavLink>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderMentorSession = () => {\r\n    if (roleRes.includes(\"USER\")) {\r\n      return (\r\n        <NavLink to={session}>\r\n          <DropdownItem onClick={() => handleMySessionsClick()}>\r\n            <i className=\"simple-icon-list\" /> My Mentor Sessions\r\n          </DropdownItem>\r\n        </NavLink>\r\n      );\r\n    }\r\n\r\n    if (roleRes.includes(\"MENTOR\") || roleRes.includes(\"ALUMNI\")) {\r\n      return (\r\n        <NavLink to={session}>\r\n          <DropdownItem onClick={() => handleMySessionsClick()}>\r\n            <i className=\"simple-icon-list\" /> My Sessions\r\n          </DropdownItem>\r\n        </NavLink>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const menuButtonClick = (e, _clickCount, _conClassnames) => {\r\n    e.preventDefault();\r\n\r\n    setTimeout(() => {\r\n      const event = document.createEvent(\"HTMLEvents\");\r\n      event.initEvent(\"resize\", false, false);\r\n      window.dispatchEvent(event);\r\n    }, 350);\r\n    setContainerClassnamesAction(\r\n      _clickCount + 1,\r\n      _conClassnames,\r\n      selectedMenuHasSubItems\r\n    );\r\n  };\r\n\r\n  const mobileMenuButtonClick = (e, _containerClassnames) => {\r\n    e.preventDefault();\r\n    clickOnMobileMenuAction(_containerClassnames);\r\n  };\r\n\r\n  const userName = localStorage.getItem(\"userName\");\r\n\r\n  const imageUrl = localStorage.getItem(\"imageUrl\");\r\n  // console.log(\"img\",imageUrl)\r\n\r\n  return (\r\n    <nav className=\"navbar fixed-top\">\r\n      <div className=\"d-flex align-items-center navbar-left\">\r\n        <NavLink\r\n          to=\"#\"\r\n          location={{}}\r\n          className=\"menu-button d-none d-md-block\"\r\n          onClick={(e) =>\r\n            menuButtonClick(e, menuClickCount, containerClassnames)\r\n          }\r\n        >\r\n          <MenuIcon />\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"#\"\r\n          location={{}}\r\n          className=\"menu-button-mobile d-xs-block d-sm-block d-md-none\"\r\n          onClick={(e) => mobileMenuButtonClick(e, containerClassnames)}\r\n        >\r\n          <MobileMenuIcon />\r\n        </NavLink>\r\n\r\n        {/* <div className=\"d-flex align-items-center justify-content-between w-100\">\r\n          <NavLink to=\"\" className=\"\">\r\n            <span className=\"\">Home</span>\r\n          </NavLink>\r\n          <NavLink to=\"\" id=\"courses\">\r\n            <span className=\"\">Courses</span>\r\n          </NavLink>\r\n          <NavLink to=\"\">\r\n            <span className=\"\">Services</span>\r\n          </NavLink>\r\n          \r\n          <NavLink to=\"\">\r\n            <span className=\"\">Sign up / Login</span>\r\n          </NavLink>\r\n          <NavLink to=\"\">\r\n            <span className=\"\">My Profile</span>\r\n          </NavLink>\r\n          <NavLink to=\"\">\r\n            <span className=\"\">My File</span>\r\n          </NavLink>\r\n        </div> */}\r\n      </div>\r\n\r\n      <NavLink className=\"navbar-logo\" to={adminRoot}>\r\n        <span className=\"logo d-none d-xs-block\" />\r\n\r\n        <span className=\"logo-mobile d-block d-xs-none\" />\r\n      </NavLink>\r\n\r\n      <div className=\"navbar-right\">\r\n        <TopnavNotifications />\r\n\r\n        {isDarkSwitchActive && <TopnavDarkSwitch />}\r\n\r\n        <div className=\"user d-inline-block\">\r\n          <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n            <DropdownToggle className=\"p-0\" color=\"empty\">\r\n              <span>\r\n                {imageUrl === \"null\" ? (\r\n                  // <img alt=\"Profile\" src='/assets/img/profiles/l-2.jpg' />\r\n                  <Row className=\"ml-2 mr-2 ml-md-0 mr-md-0\">\r\n                    <span className=\"name mt-2 ml-2 mr-2\">{userName}</span>\r\n                    <ThumbnailLetters\r\n                      extraSmall\r\n                      rounded\r\n                      text={userName}\r\n                      className=\"\"\r\n                    />\r\n                  </Row>\r\n                ) : (\r\n                  <>\r\n                    <span className=\"name mr-1\">{userName}</span>\r\n                    <img\r\n                      alt=\"Profile\"\r\n                      src={`${baseUrl}/${imageUrl}`}\r\n                      style={{\r\n                        width: \"40px\",\r\n                        height: \"40px\",\r\n                        objectFit: \"cover\",\r\n                      }}\r\n                    />\r\n                  </>\r\n                )}\r\n              </span>\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"mt-3\" right>\r\n              <NavLink to={myProfile}>\r\n                <DropdownItem onClick={() => handleMyProfileClick()}>\r\n                  <i className=\"simple-icon-user\" /> My Profile\r\n                </DropdownItem>\r\n              </NavLink>\r\n              {renderMyWallet()}\r\n              {/* <NavLink to={`${adminRoot}/mywallet`}>\r\n                <DropdownItem onClick={() => handleMyWalletClick()}>\r\n                <i className=\"simple-icon-wallet\" />  My Wallet\r\n                </DropdownItem>\r\n              </NavLink> */}\r\n\r\n              {/* <NavLink to={`${adminRoot}/calendar/mentor/appointment`}>\r\n                <DropdownItem onClick={() => handleMySlots()}>\r\n                <i className=\"simple-icon-wallet\" />  My Slots\r\n                </DropdownItem>\r\n              </NavLink> */}\r\n              {renderMySlots()}\r\n              {/* <NavLink to={`${adminRoot}/mylisting`}> */}\r\n              <NavLink to={`${adminRoot}/myactivities`}>\r\n                <DropdownItem onClick={() => handleMyActivitiesClick()}>\r\n                  <i className=\"simple-icon-question\" /> My Activities\r\n                </DropdownItem>\r\n              </NavLink>\r\n              {renderMentorSession()}\r\n              {renderMyAlumniSessions()}\r\n              {/* <NavLink to={session}>\r\n                <DropdownItem onClick={() => handleMySessionsClick()}>\r\n                <i className=\"simple-icon-list\" /> Mentor Sessions\r\n                </DropdownItem>\r\n              </NavLink> */}\r\n              {/* <NavLink to={`${adminRoot}/jobslist`}>\r\n                <DropdownItem onClick={() => handleMyLawyerJobsClick()}>\r\n                <i className=\"iconsminds-scale\" />  My Client Jobs\r\n                </DropdownItem>\r\n              </NavLink> */}\r\n              {/* <NavLink to={`${adminRoot}/lawyerjobslist`}>\r\n                <DropdownItem onClick={() => handleMyClientJobsClick()}>\r\n                <i className=\"iconsminds-scale\" />  My Lawyer Jobs\r\n                </DropdownItem>\r\n              </NavLink> */}\r\n              {renderClientJob()}\r\n              <DropdownItem onClick={() => handleMyListingClick()}>\r\n                <i className=\"simple-icon-list\" /> My Listing\r\n              </DropdownItem>\r\n              {/* </NavLink> */}\r\n              <DropdownItem onClick={handleSettingsClick}>\r\n                <i className=\"simple-icon-settings\" /> Settings\r\n              </DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem onClick={() => handleLogout()}>\r\n                <i className=\"simple-icon-logout\" /> Sign out\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ menu, settings }) => {\r\n  const { containerClassnames, menuClickCount, selectedMenuHasSubItems } = menu;\r\n  const { locale } = settings;\r\n  return {\r\n    containerClassnames,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    locale,\r\n  };\r\n};\r\nexport default injectIntl(\r\n  connect(mapStateToProps, {\r\n    setContainerClassnamesAction: setContainerClassnames,\r\n    clickOnMobileMenuAction: clickOnMobileMenu,\r\n    logoutUserAction: logoutUser,\r\n    changeLocaleAction: changeLocale,\r\n  })(TopNav)\r\n);\r\n","import { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport Footer from \"containers/navs/Footer\";\r\nimport Sidebar from \"containers/navs/Sidebar\";\r\nimport TopNav from \"containers/navs/Topnav\";\r\n\r\nconst AppLayout = ({ containerClassnames, children, history }) => {\r\n  return (\r\n    <div id=\"app-container\" className={containerClassnames}>\r\n      <TopNav history={history} />\r\n      <Sidebar />\r\n      <main>\r\n        <div className=\"container-fluid\">{children}</div>\r\n      </main>\r\n      <Footer />\r\n      {/* <div className=\"d-md-none\">\r\n        <BottomMenu />\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = ({ menu }) => {\r\n  const { containerClassnames } = menu;\r\n  return { containerClassnames };\r\n};\r\nconst mapActionToProps = {};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapActionToProps)(AppLayout)\r\n);\r\n","import AppLayout from \"layout/AppLayout\";\r\nimport React, { Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch, withRouter } from \"react-router-dom\";\r\n\r\n// import MyApplications from './myapp/my-applications/my-applications';\r\n// import MyDetails from './myapp/my-details/my-details';\r\n// import MyDocuments from './myapp/my-documents/my-documents';\r\n// import { MyProfile } from './myapp/my-profile/MyProfile';\r\n\r\nconst ViewMyApp = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp\")\r\n);\r\nconst ViewMyApplications = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/my-applications/my-applications\"\r\n  )\r\n);\r\nconst ViewDashBoard = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/DashBoard/DashBoard\")\r\n);\r\nconst ViewMyDetails = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/my-details/my-details\")\r\n);\r\nconst ViewMyDocuments = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/my-documents/my-documents\"\r\n  )\r\n);\r\n\r\n// const JobPage = React.lazy(() =>\r\n//   import(/* webpackChunkName: \"viwes-blank-page\" */ './jobs')\r\n// );\r\nconst ProfilePage = React.lazy(() =>\r\n  import(/* webpackChunkName: \"viwes-blank-page\" */ \"./profiles\")\r\n);\r\n// const Mentorship = React.lazy(() =>\r\n//   import(/* webpackChunkName: \"viwes-blank-page\" */ './myapp/mentorship')\r\n// );\r\n// Mentorship Cards\r\nconst MentorCard = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/mentorship/mentorcard\")\r\n);\r\n// Mentors profile page\r\nconst MentorProfile = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/mentorship/MentorProfile\")\r\n);\r\nconst MentorAnswers = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/mentorship/MentorAnswers\")\r\n);\r\nconst MentorConsult = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/mentorship/MentorConsult\")\r\n);\r\nconst MentorCreatedSlots = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/mentorship/MentorCreatedSlot\"\r\n  )\r\n);\r\nconst FilterQuestions = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/mentorship/FilterQuestions\"\r\n  )\r\n);\r\nconst ViewMyChat = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Chat/Chat\")\r\n);\r\n\r\nconst AskQuestion = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/mentorship/AskQuestion\")\r\n);\r\nconst ViewActivities = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/mentorship/myQandA\")\r\n);\r\n\r\nconst Month = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/BigCalendar/Month\")\r\n);\r\nconst MentorSessionList = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/BigCalendar/MentorSessionList\"\r\n  )\r\n);\r\nconst MentorListSessions = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/mentorship/MentorSessionUpcoming\"\r\n  )\r\n);\r\n// const CalendarGoogle = React.lazy(() =>\r\n//   import(\r\n//     /* webpackChunkName: \"views-app\" */ './myapp/mentorship/CalendarGoogle'\r\n//   )\r\n// );\r\n// const CreateJobPage = React.lazy(() =>\r\n//   import(/* webpackChunkName: \"viwes-blank-page\" */ './create-jobs')\r\n// );\r\n// const EditJobPage = React.lazy(() =>\r\n//   import(/* webpackChunkName: \"viwes-blank-page\" */ './edit-jobs')\r\n// );\r\nconst ViewMylogin = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/my-login/ApplyMentor\")\r\n);\r\nconst ViewLawyerlogin = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/lawyer-login/ApplyAsLawyer\"\r\n  )\r\n);\r\nconst ViewAlumnilogin = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/AlumniRegister/ApplyAlumni\"\r\n  )\r\n);\r\n\r\nconst ViewHrlogin = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/HumanResource/HRRegistration/ApplyHR\"\r\n  )\r\n);\r\n\r\nconst ViewMyProfile = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/my-profile/MyProfile\")\r\n);\r\n\r\nconst ViewMyWallet = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/my-wallet/MyWallet\")\r\n);\r\nconst ViewMyListing = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Listing/MyListing\")\r\n);\r\nconst ViewVideoCall = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/VideoCall/RTCVideoCall/VideoCall\"\r\n  )\r\n);\r\n// const ViewJobPosting = React.lazy(() =>\r\n//   import(\r\n//     /* webpackChunkName: \"views-app\" */ './myapp/Listing/JobPosting'\r\n//   )\r\n// );\r\n// const ViewStayPosting = React.lazy(() =>\r\n//   import(\r\n//     /* webpackChunkName: \"views-app\" */ './myapp/Listing/StayPosting'\r\n//   )\r\n// );\r\n// const ViewOtherPosting = React.lazy(() =>\r\n//   import(\r\n//     /* webpackChunkName: \"views-app\" */ './myapp/Listing/OtherPosting'\r\n//   )\r\n// );\r\n// const ViewJobListing = React.lazy(() =>\r\n//   import(\r\n//     /* webpackChunkName: \"views-app\" */ './myapp/Listing/JobListing'\r\n//   )\r\n// );\r\n// const ViewStayListing = React.lazy(() =>\r\n//   import(\r\n//     /* webpackChunkName: \"views-app\" */ './myapp/Listing/StayListing'\r\n//   )\r\n// );\r\n// const ViewOtherListing = React.lazy(() =>\r\n//   import(\r\n//     /* webpackChunkName: \"views-app\" */ './myapp/Listing/OtherListing'\r\n//   )\r\n// );\r\n// const ViewListing = React.lazy(() =>\r\n//   import(\r\n//     /* webpackChunkName: \"views-app\" */ './myapp/Listing/Listing'\r\n//   )\r\n// );\r\nconst ViewListingTab = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Listing/Listing\")\r\n);\r\nconst ViewStayListingTab = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Listing/Listing\")\r\n);\r\nconst ViewJobListingTab = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Listing/Listing\")\r\n);\r\nconst ViewOtherListingTab = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Listing/Listing\")\r\n);\r\nconst ViewOtherListing = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Listing/ViewOtherListing\")\r\n);\r\nconst ViewJobListing = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Listing/ViewJobListing\")\r\n);\r\nconst ViewStayListing = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Listing/ViewStayListing\")\r\n);\r\n// const ViewNotification = React.lazy(() =>\r\n//   import(\r\n//     /* webpackChunkName: \"views-app\" */ './myapp/notifications/DesktopNotifications'\r\n//   )\r\n// );\r\nconst ViewLawyer = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Lawyer/LawQuestionAnswer\")\r\n);\r\nconst ViewUserCard = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Lawyer/UserCard\")\r\n);\r\nconst ViewLawyerProfile = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Lawyer/LawyerProfile\")\r\n);\r\nconst ViewLawyerPayment = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Lawyer/PaymentWizard\")\r\n);\r\nfunction getStatusRes() {\r\n  return localStorage.getItem(\"status\");\r\n}\r\nfunction getRoleRes() {\r\n  return localStorage.getItem(\"roleRes\");\r\n}\r\n\r\nconst ViewJobDetail = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Lawyer/JobDetails\")\r\n);\r\nconst ViewJobList = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Lawyer/JobList\")\r\n);\r\nconst ViewLawyerJobList = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Lawyer/LawyerJobList\")\r\n);\r\nconst ViewLawyerReviews = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Lawyer/AddReview\")\r\n);\r\nconst ViewCallCompleted = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/VideoCall/VideoCallCompletedPage\"\r\n  )\r\n);\r\nconst ViewClassRoom = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Classroom/AgoraClass\")\r\n);\r\nconst ViewLawyerMyProfile = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Lawyer/LawyerMyProfile\")\r\n);\r\nconst ViewUserMyProfile = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Mentee/MenteeMyProfile\")\r\n);\r\n\r\nconst ViewUserProfile = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Mentee/MenteeProfile\")\r\n);\r\n\r\nconst ViewStudentList = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Mentee/StudentList\")\r\n);\r\nconst ViewStudentProfile = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/Mentee/StudentViewProfile\"\r\n  )\r\n);\r\n\r\nconst ViewAlumniMyProfile = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Alumni/AlumniMyProfile\")\r\n);\r\nconst ViewAlumniCalendar = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Alumni/AlumniCalendar\")\r\n);\r\nconst ViewMyAlumniSessions = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/Alumni/AlumniSessionLists\"\r\n  )\r\n);\r\nconst ViewUserApply = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Mentee/ApplyAsUser\")\r\n);\r\nconst ViewSettings = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Settings/Settings\")\r\n);\r\n\r\nconst ViewAlumniLists = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Alumni/AlumniLists\")\r\n);\r\n\r\nconst ViewAlumniProfile = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ \"./myapp/Alumni/AlumniProfile\")\r\n);\r\n\r\nconst ViewRealEstateAgentApply = React.lazy(() =>\r\n  import(\r\n    /* webpackChunkName: \"views-app\" */ \"./myapp/RealEstateAgent/RealEstateAgentRegistration/RealEstateAgentApply\"\r\n  )\r\n);\r\n\r\nconst App = ({ match }) => {\r\n  const statusRes = getStatusRes();\r\n  const roleRes = getRoleRes();\r\n  // console.log(\"role res from index\", roleRes)\r\n  // const redirectTo =\r\n  // roleRes === \"USER\" && `${match.url}/mentor` ||\r\n  // roleRes === \"LAWYER\" && `${match.url}/profile` ||\r\n  // roleRes.some(role => role === \"MENTOR\" || role === \"LAWYER\") && `${match.url}/mentor` ||\r\n  //   statusRes === '0' && `${match.url}/mentor/apply` ||\r\n  //   statusRes === '1' && `${match.url}/mentor/apply` ||\r\n  //   statusRes === '3' && `${match.url}/mentor/apply` ||\r\n  //   statusRes === '7' && `${match.url}/calendar/mentor/appointment` ||\r\n  //   `${match.url}/profile`;\r\n\r\n  let redirectTo;\r\n\r\n  if (roleRes.includes(\"MENTOR\")) {\r\n    if (statusRes === \"0\") {\r\n      redirectTo = `${match.url}/mentor/apply`;\r\n    } else if (statusRes === \"1\") {\r\n      redirectTo = `${match.url}/mentor/apply`;\r\n    } else if (statusRes === \"3\") {\r\n      redirectTo = `${match.url}/mentor/apply`;\r\n    } else if (statusRes === \"7\") {\r\n      redirectTo = `${match.url}/calendar/mentor/appointment`;\r\n    } else {\r\n      redirectTo = `${match.url}/calendar/mentor/appointment`;\r\n    }\r\n  } else if (roleRes.includes(\"USER\")) {\r\n    // redirectTo = `${match.url}/mentor/list`;\r\n    if (statusRes === \"0\") {\r\n      redirectTo = `${match.url}/student/apply`;\r\n    } else if (statusRes === \"1\") {\r\n      redirectTo = `${match.url}/student/apply`;\r\n    } else if (statusRes === \"3\") {\r\n      redirectTo = `${match.url}/student/apply`;\r\n    } else if (statusRes === \"7\") {\r\n      redirectTo = `${match.url}/dashboard`;\r\n    } else {\r\n      redirectTo = `${match.url}/dashboard`;\r\n    }\r\n  } else if (roleRes.includes(\"ALUMNI\")) {\r\n    if (statusRes === \"0\") {\r\n      redirectTo = `${match.url}/alumni/apply`;\r\n    } else if (statusRes === \"1\") {\r\n      redirectTo = `${match.url}/alumni/apply`;\r\n    } else if (statusRes === \"3\") {\r\n      redirectTo = `${match.url}/alumni/apply`;\r\n    } else if (statusRes === \"7\") {\r\n      redirectTo = `${match.url}/jobslist`;\r\n    } else {\r\n      redirectTo = `${match.url}/jobslist`;\r\n    }\r\n  } else if (roleRes.includes(\"HR\")) {\r\n    if (statusRes === \"0\") {\r\n      console.log(\"zero status\");\r\n      redirectTo = `${match.url}/hr/apply`;\r\n    } else if (statusRes === \"1\") {\r\n      redirectTo = `${match.url}/hr/apply`;\r\n    } else if (statusRes === \"3\") {\r\n      redirectTo = `${match.url}/hr/apply`;\r\n    } else if (statusRes === \"7\") {\r\n      redirectTo = `${match.url}/listing/job`;\r\n    } else {\r\n      redirectTo = `${match.url}/listing/job`;\r\n    }\r\n  } else if (roleRes.includes(\"REALESTATE\")) {\r\n    if (statusRes === \"0\") {\r\n      console.log(\"zero status\");\r\n      redirectTo = `${match.url}/agent/apply`;\r\n    } else if (statusRes === \"1\") {\r\n      redirectTo = `${match.url}/agent/apply`;\r\n    } else if (statusRes === \"3\") {\r\n      redirectTo = `${match.url}/agent/apply`;\r\n    } else if (statusRes === \"7\") {\r\n      redirectTo = `${match.url}/listing/stay`;\r\n    } else {\r\n      redirectTo = `${match.url}/listing/stay`;\r\n    }\r\n  } else if (roleRes.includes(\"LAWYER\")) {\r\n    if (statusRes === \"0\") {\r\n      redirectTo = `${match.url}/lawyer/apply`;\r\n    } else if (statusRes === \"1\") {\r\n      redirectTo = `${match.url}/lawyer/apply`;\r\n    } else if (statusRes === \"3\") {\r\n      redirectTo = `${match.url}/lawyer/apply`;\r\n    } else if (statusRes === \"7\") {\r\n      redirectTo = `${match.url}/jobslist`;\r\n    } else {\r\n      redirectTo = `${match.url}/jobslist`;\r\n    }\r\n  } else {\r\n    redirectTo = `${match.url}/lawyer/list`;\r\n  }\r\n\r\n  return (\r\n    <AppLayout>\r\n      <div className=\"dashboard-wrapper\">\r\n        <Suspense fallback={<div className=\"loading\" />}>\r\n          <Switch>\r\n            {/* <Redirect\r\n              exact\r\n              from={`${match.url}/`}\r\n              to={`${match.url}/profile`}\r\n            /> */}\r\n\r\n            <Redirect exact from={`${match.url}/`} to={redirectTo} />\r\n\r\n            <Route\r\n              path={`${match.url}/myapp`}\r\n              exact\r\n              render={(props) => <ViewMyApp {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/myapplications`}\r\n              exact\r\n              render={(props) => <ViewMyApplications {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/dashboard`}\r\n              exact\r\n              render={(props) => <ViewDashBoard {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/mydetails`}\r\n              exact\r\n              render={(props) => <ViewMyDetails {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/mydocuments`}\r\n              exact\r\n              render={(props) => <ViewMyDocuments {...props} />}\r\n            />\r\n\r\n            <Route\r\n              path={`${match.url}/profile`}\r\n              render={(props) => <ProfilePage {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/mentor/apply`}\r\n              render={(props) => <ViewMylogin {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/lawyer/apply`}\r\n              render={(props) => <ViewLawyerlogin {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/alumni/apply`}\r\n              render={(props) => <ViewAlumnilogin {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/mentor/list`}\r\n              render={(props) => <MentorCard {...props} />}\r\n            />\r\n\r\n            {/* <Route\r\n              path={`${match.url}/mentorship`}\r\n              render={(props) => <Mentorship {...props} />}\r\n            /> */}\r\n            <Route\r\n              path={`${match.url}/mentorprofile/:mid`}\r\n              render={(props) => <MentorProfile {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/questions/:questionId`}\r\n              render={(props) => <MentorAnswers {...props} />}\r\n            />\r\n            {/* <Route\r\n              path={`${match.url}/questions/:questionId/answer/:ansid`}\r\n              render={(props) => <MentorAnswers {...props} />}\r\n            /> */}\r\n            <Route\r\n              path={`${match.url}/mentorconsult`}\r\n              render={(props) => <MentorConsult {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/calendar/mentor/appointment`}\r\n              render={(props) => <MentorCreatedSlots {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/sessionmentor`}\r\n              render={(props) => <MentorListSessions {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/questions`}\r\n              render={(props) => <FilterQuestions {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/askquestions`}\r\n              render={(props) => <AskQuestion {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/myactivities`}\r\n              render={(props) => <ViewActivities {...props} />}\r\n            />\r\n            {/* Chat application */}\r\n            <Route\r\n              path={`${match.url}/chat/:pid`}\r\n              render={(props) => <ViewMyChat {...props} />}\r\n            />\r\n\r\n            {/* Calendar */}\r\n\r\n            <Route\r\n              path={`${match.url}/calendar`}\r\n              render={(props) => <Month {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/sessionlists`}\r\n              render={(props) => <MentorSessionList {...props} />}\r\n            />\r\n\r\n            {/* <Route\r\n              path={`${match.url}/gcalendar`}\r\n              render={(props) => <CalendarGoogle {...props} />}\r\n            /> */}\r\n            <Route\r\n              path={`${match.url}/mentor/myprofile`}\r\n              render={(props) => <ViewMyProfile {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/chat/:pid`}\r\n              render={(props) => <ViewMyChat {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/chat`}\r\n              render={(props) => <ViewMyChat {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/mywallet`}\r\n              render={(props) => <ViewMyWallet {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/mylisting`}\r\n              render={(props) => <ViewMyListing {...props} />}\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${match.url}/listing`}\r\n              render={(props) => <ViewListingTab {...props} />}\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${match.url}/listing/others`}\r\n              render={(props) => <ViewStayListingTab {...props} />}\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${match.url}/listing/job`}\r\n              render={(props) => <ViewJobListingTab {...props} />}\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${match.url}/listing/stay`}\r\n              render={(props) => <ViewOtherListingTab {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/listing/others/view/:id`}\r\n              render={(props) => <ViewOtherListing {...props} />}\r\n            />\r\n\r\n            <Route\r\n              path={`${match.url}/listing/job/view/:id`}\r\n              render={(props) => <ViewJobListing {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/listing/stay/view/:id`}\r\n              render={(props) => <ViewStayListing {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/videocall/:userId/:id`}\r\n              render={(props) => <ViewVideoCall {...props} />}\r\n            />\r\n            {/* <Route\r\n              path={`${match.url}/jobposting`}\r\n              render={(props) => <ViewJobPosting {...props} />}\r\n            />\r\n               <Route\r\n              path={`${match.url}/stayposting`}\r\n              render={(props) => <ViewStayPosting {...props} />}\r\n            />\r\n               <Route\r\n              path={`${match.url}/otherposting`}\r\n              render={(props) => <ViewOtherPosting {...props} />}\r\n            />\r\n               <Route\r\n              path={`${match.url}/job/listing`}\r\n              render={(props) => <ViewJobListing {...props} />}\r\n            />\r\n               <Route\r\n              path={`${match.url}/stay/listing`}\r\n              render={(props) => <ViewStayListing {...props} />}\r\n            />\r\n               <Route\r\n              path={`${match.url}/other/listing`}\r\n              render={(props) => <ViewOtherListing {...props} />}\r\n            /> */}\r\n            {/* <Route\r\n              path={`${match.url}/listing`}\r\n              render={(props) => <ViewListing {...props} />}\r\n            /> */}\r\n\r\n            <Route\r\n              path={`${match.url}/lawyerquestions`}\r\n              render={(props) => <ViewLawyer {...props} />}\r\n            />\r\n            {/* <Route\r\n              path={`${match.url}/usercard`}\r\n              render={(props) => <ViewUserCard {...props} />}\r\n            /> */}\r\n            <Route\r\n              path={`${match.url}/lawyer/list`}\r\n              render={(props) => <ViewUserCard {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/jobsdetails/:jid`}\r\n              render={(props) => <ViewJobDetail {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/jobslist`}\r\n              render={(props) => <ViewLawyerJobList {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/lawyerjobslist`}\r\n              render={(props) => <ViewJobList {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/lawyerprofile/:pid`}\r\n              render={(props) => <ViewLawyerProfile {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/lawyer/payment`}\r\n              render={(props) => <ViewLawyerPayment {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/callcompleted/:id/:sid`}\r\n              render={(props) => <ViewCallCompleted {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/classroom`}\r\n              render={(props) => <ViewClassRoom {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/lawyer/myprofile`}\r\n              render={(props) => <ViewLawyerMyProfile {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/lawyer/reviews`}\r\n              render={(props) => <ViewLawyerReviews {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/student/myprofile`}\r\n              render={(props) => <ViewUserMyProfile {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/student/profile/:uid`}\r\n              render={(props) => <ViewUserMyProfile {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/student/apply`}\r\n              render={(props) => <ViewUserApply {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/student/list`}\r\n              render={(props) => <ViewStudentList {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/studentprofile/:sid`}\r\n              render={(props) => <ViewStudentProfile {...props} />}\r\n            />\r\n\r\n            <Route\r\n              path={`${match.url}/settings`}\r\n              render={(props) => <ViewSettings {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/student/:uid`}\r\n              render={(props) => <ViewUserProfile {...props} />}\r\n            />\r\n\r\n            {/* alumnini networking routes start */}\r\n\r\n            <Route\r\n              path={`${match.url}/alumni/alumnilists`}\r\n              render={(props) => <ViewAlumniLists {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/alumni/profile/:mid`}\r\n              render={(props) => <ViewAlumniProfile {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/alumni/myprofile`}\r\n              render={(props) => <ViewAlumniMyProfile {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/calendar/alumni/appointment`}\r\n              render={(props) => <ViewAlumniCalendar {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/alumni/sessionlists`}\r\n              render={(props) => <ViewMyAlumniSessions {...props} />}\r\n            />\r\n\r\n            {/* alumin networking routes ends */}\r\n\r\n            {/* HR routes starts */}\r\n            <Route\r\n              path={`${match.url}/hr/apply`}\r\n              render={(props) => <ViewHrlogin {...props} />}\r\n            />\r\n\r\n            {/* HR routes sends */}\r\n\r\n            {/* real estate agent routes starts */}\r\n            <Route\r\n              path={`${match.url}/agent/apply`}\r\n              render={(props) => <ViewRealEstateAgentApply {...props} />}\r\n            />\r\n            {/* real estate agent routes ends */}\r\n\r\n            {/* <Route\r\n              path={`${match.url}/jobs`}\r\n              render={(props) => <JobPage {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/create-jobs`}\r\n              render={(props) => <CreateJobPage {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/edit-jobs/:id`}\r\n              render={(props) => <EditJobPage {...props} />}\r\n            /> */}\r\n            <Redirect to=\"/error\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ menu }) => {\r\n  const { containerClassnames } = menu;\r\n  return { containerClassnames };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, {})(App));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardSubtitle,\r\n  CardTitle,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\n\r\nconst url = `${baseUrl}/alllistingcard`;\r\n\r\nconst JobListing = () => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPage] = useState(2);\r\n  const [items, setItems] = useState([]);\r\n  const [expandedIndex, setExpandedIndex] = useState(-1);\r\n\r\n  const toggleExpand = (index) => {\r\n    setExpandedIndex((prevIndex) => (prevIndex === index ? -1 : index));\r\n  };\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const res = await axios.get(`${url}?_page=${currentPage}&_limit=8`);\r\n//         console.log(res);\r\n//         const { data } = res;\r\n//         //   setTotalPage(data.totalPage);\r\n//         setItems(data.map((x) => ({ ...x })));\r\n//         setIsLoaded(true);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//         setIsLoaded(true);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, [currentPage]);\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await axios.get(`${url}?_page=${currentPage}&_limit=8`);\r\n        console.log(res);\r\n        const { data } = res;\r\n        const sortedData = data.map(x => ({ ...x })).sort((a, b) => new Date(b.postedOn) - new Date(a.postedOn));\r\n        setItems(sortedData);\r\n        setIsLoaded(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setIsLoaded(true);\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, [currentPage]);\r\n  \r\n\r\n  \r\n  return !isLoaded ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <div className=\"disable-text-selection\">\r\n      {items.map((data, index) => (\r\n        <Row key={data.title} className=\"mb-2\">\r\n          <Colxx xxs=\"12\">\r\n            <Card className=\"mx-auto\" style={{ maxWidth: \"900px\" }}>\r\n              <CardBody className=\"p-4\">\r\n                <Row>\r\n                  <Col>\r\n                    <CardTitle className=\"font-weight-bold\">\r\n                      {data.title}\r\n                    </CardTitle>\r\n                  </Col>\r\n                  <Col className=\"text-right\">\r\n                    <p className=\"text-muted\">\r\n                    Posted on {new Date(data.postedOn).toLocaleString()} \r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n                {expandedIndex === index ? (\r\n                  <CardSubtitle>{data.description}</CardSubtitle>\r\n                ) : (\r\n                  <CardSubtitle>\r\n                    {`${data.description.slice(0, 100)}...`}\r\n                    {data.description.length > 100 && (\r\n                      <Button\r\n                        color=\"link\"\r\n                        onClick={() => toggleExpand(index)}\r\n                        className=\" p-0\"\r\n                      >\r\n                        {expandedIndex === index ? \"Read less\" : \"Read more\"}\r\n                      </Button>\r\n                    )}\r\n                  </CardSubtitle>\r\n                )}\r\n                {data.company ? (\r\n                <Row>\r\n                  <Col>\r\n                    <i className=\"iconsminds-office text-primary\" />{\" \"}\r\n                    {data.company}\r\n                  </Col>\r\n                  <Col>\r\n                    <i className=\"iconsminds-engineering text-primary\" />{\" \"}\r\n                    {data.jobTitle}\r\n                  </Col>\r\n                  <Col>\r\n                    {\" \"}\r\n                    <i className=\"simple-icon-location-pin text-primary\" />{\" \"}\r\n                    {data.jobLocation}\r\n                  </Col>\r\n                  <Col>\r\n                    {\" \"}\r\n                    <i className=\"iconsminds-building text-primary\" />{\" \"}\r\n                    {data.workPlaceType}\r\n                  </Col>\r\n                  <Col>\r\n                    {\" \"}\r\n                    <i className=\"simple-icon-briefcase text-primary\" />{\" \"}\r\n                    {data.employmentType}\r\n                  </Col>\r\n                </Row>\r\n                ) : null}\r\n                {data.skills ? (\r\n                <Row className=\"mt-3\">\r\n                  <Col>\r\n                    {data.skills.map((skill) => (\r\n                      <Button\r\n                        key={skill}\r\n                        color=\"light\"\r\n                        className=\"mb-2 font-weight-semibold mx-2\"\r\n                        size=\"xs\"\r\n                      >\r\n                        {skill}\r\n                      </Button>\r\n                    ))}\r\n                  </Col>\r\n                </Row>\r\n                ) : null}\r\n                {data.apartmentType ? (\r\n                <Row className=\"mb-2\">\r\n                  <Col md={5}>\r\n                    <i className=\"iconsminds-office text-primary\" />{\" \"}\r\n                    <span data-toggle=\"tooltip\" title=\"Apartment Type\">{data.apartmentType}</span> | <span data-toggle=\"tooltip\" title=\"Floor\">{data.floor}</span> |  <span data-toggle=\"tooltip\" title=\"BHK Type\">{data.BHKType}</span>\r\n                  </Col>\r\n                  {/* <Col>\r\n                    <i className=\"iconsminds-engineering text-primary\" />{\" \"}\r\n                    {data.BHKType}\r\n                  </Col> */}\r\n                  <Col>\r\n                    {\" \"}\r\n                    <i className=\"simple-icon-people text-primary\" />{\" \"}\r\n                    <span data-toggle=\"tooltip\" title=\"Room mate\">{data.roomMate}</span>\r\n                    \r\n                  </Col>\r\n                  <Col>\r\n                    {\" \"}\r\n                    {/* <i className=\"iconsminds-building text-primary\" /> */}\r\n                    <span className=\"text-primary\">₹</span>  <span data-toggle=\"tooltip\" title=\"Expected Rent\">{data.expectedRent}</span>\r\n                  </Col>\r\n                  <Col>\r\n                  {/* <a href=\"#\" class=\"btn btn-primary\" title=\"This is a hover tooltip\">Hover me!</a> */}\r\n\r\n                    {\" \"}\r\n                    <i className=\"iconsminds-car text-primary\" />\r\n                    {/* <i className=\"iconsminds-motorcycle text-primary\"/> */}\r\n                    {\"  \"}\r\n                    \r\n                    <span data-toggle=\"tooltip\" title=\"Parking\">{data.parking}</span>\r\n                  </Col>\r\n                </Row>\r\n                ) : null}\r\n                <Row className=\"\">\r\n                  <Col className=\"\">\r\n                    <div className=\"text-muted mt-2\">\r\n                      {data.interestedCount} people have shown interest\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"text-right\">\r\n                  <Button\r\n                      outline\r\n                      color=\"primary\"\r\n                      className=\"mr-2\"\r\n                      size=\"xs\"\r\n                      // onClick={}\r\n                    >\r\n                      <i className=\"iconsminds-sharethis text-primary\" />\r\n                    </Button>\r\n                    <Button outline color=\"primary\" size=\"xs\">\r\n                      I&apos;m interested\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n      ))}\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        totalPage={totalPage}\r\n        onChangePage={(i) => setCurrentPage(i)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobListing;\r\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardSubtitle,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\n// import ToasterComponent from \"../notifications/ToasterComponent\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst JobListing = ({ isPosted }) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPage, setTotalPage] = useState(1);\r\n  const [items, setItems] = useState([]);\r\n  const [expandedIndex, setExpandedIndex] = useState(-1);\r\n  const [isFirst, setIsFirst] = useState(true);\r\n  const [isLast, setIsLast] = useState(true);\r\n  // const [modal, setModal] = useState(false);\r\n  // const [interestPerson, setInterestPerson] = useState([]);\r\n  // const [copiedId, setCopiedId] = useState(null);\r\n\r\n  // const toggle = () => setModal(!modal);\r\n  const url = `${baseUrl}/api/posts/job-post/`;\r\n  const interestedClickUrl = `${baseUrl}/api/posts/job-post/interested`;\r\n  // const history = useHistory();\r\n  const currentUserId = localStorage.getItem(\"userId\");\r\n  const currentUserRole = localStorage.getItem(\"roleRes\");\r\n  const currentUserName = localStorage.getItem(\"userName\");\r\n  const toggleExpand = (index) => {\r\n    setExpandedIndex((prevIndex) => (prevIndex === index ? -1 : index));\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    const params = {\r\n      page: currentPage - 1,\r\n      size: 20,\r\n      // sort: [\"\"]\r\n    };\r\n    try {\r\n      // const res = await axios.get(`${url}?_page=${currentPage}&_limit=8`);\r\n      const res = await axios.get(url, { params });\r\n      const { data } = res;\r\n      const sortedData = data.jobLists\r\n        .map((x) => ({ ...x }))\r\n        .sort((a, b) => new Date(b.postedOn) - new Date(a.postedOn));\r\n      setItems(sortedData);\r\n      setTotalPage(data.pagination.totalPage);\r\n      setIsFirst(data.pagination.first);\r\n      setIsLast(data.pagination.last);\r\n      // setItems(data.map((x) => ({ ...x })));\r\n      setIsLoaded(true);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      setIsLoaded(true);\r\n    }\r\n  };\r\n\r\n  // const fetchInterestedUsers = async (jobId) => {\r\n  //   try {\r\n  //     const res = await axios.get(\r\n  //       `${baseUrl}/api/posts/job-post/interested-users/${jobId}`,\r\n  //       {\r\n  //         params: { page: 0, size: 10 },\r\n  //       }\r\n  //     );\r\n  //     const { data } = res;\r\n  //     return data.interestedUsers; // Return the list of interested users\r\n  //   } catch (error) {\r\n  //     console.error(\"Error fetching interested users:\", error);\r\n  //     return []; // Return an empty array if there's an error\r\n  //   }\r\n  // };\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      fetchData();\r\n      // fetchInterestedUsers();\r\n    }, 1000);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentPage, isPosted, interestedClickUrl]);\r\n\r\n  // const handleClick = (id) => {\r\n  //   history.push(`/app/listing/job/view/${id}`);\r\n  // };\r\n\r\n  function removeTags(str) {\r\n    if (typeof str === \"string\") {\r\n      return str.replace(/<[^>]*>/g, \"\");\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  // const handleInterestedButtonClick = async (isCurrentlyInterested, itemId) => {\r\n  //   setItems((prev) =>\r\n  //     prev.map((job) => {\r\n  //       if (job.id === itemId) {\r\n  //         // const isAlreadyInterested = job.interestedUsers.some(\r\n  //         //   (user) => user.id === currentUserId\r\n  //         // );\r\n  //         if (isCurrentlyInterested) {\r\n  //           // If already interested, decrement the count and remove the user\r\n  //           return {\r\n  //             ...job,\r\n  //             loggedInUserInterested: false,\r\n  //             interestedCount: job.interestedCount - 1,\r\n  //             interestedUsers: job.interestedUsers.filter(\r\n  //               (user) => user.userId !== +currentUserId\r\n  //             ),\r\n  //           };\r\n  //         }\r\n  //         // If not already interested, increment the count and add the user\r\n  //         return {\r\n  //           ...job,\r\n  //           loggedInUserInterested: true,\r\n  //           interestedCount: job.interestedCount + 1,\r\n  //           interestedUsers: [\r\n  //             ...job.interestedUsers,\r\n  //             {\r\n  //               userId: +currentUserId,\r\n  //               role: currentUserRole,\r\n  //               userName: currentUserName,\r\n  //             },\r\n  //           ],\r\n  //         };\r\n  //       }\r\n  //       return job;\r\n  //     })\r\n  //   );\r\n  //   const data = {\r\n  //     jobListingId: itemId,\r\n  //     interested: !isCurrentlyInterested,\r\n  //   };\r\n  //   try {\r\n  //     await axios.post(interestedClickUrl, data);\r\n  //     // ToasterComponent(\"success\", res.data.statuses);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error sending interest:\", error);\r\n  //   }\r\n  // };\r\n\r\n  // const handleInterestPersonPage = (item) => {\r\n  //   setInterestPerson(item);\r\n  //   setModal(!modal);\r\n  // };\r\n\r\n  const handleInterestedButtonClick = async (isCurrentlyInterested, itemId) => {\r\n    setItems((prev) =>\r\n      prev.map((job) => {\r\n        if (job.id === itemId) {\r\n          // Initialize interestedUsers array if it doesn't exist\r\n          const interestedUsers = job.interestedUsers || [];\r\n\r\n          if (isCurrentlyInterested) {\r\n            // If already interested, decrement the count and remove the user\r\n            return {\r\n              ...job,\r\n              loggedInUserInterested: false,\r\n              interestedCount: job.interestedCount - 1,\r\n              interestedUsers: interestedUsers.filter(\r\n                (user) => user.userId !== +currentUserId\r\n              ),\r\n            };\r\n          }\r\n          // If not already interested, increment the count and add the user\r\n          return {\r\n            ...job,\r\n            loggedInUserInterested: true,\r\n            interestedCount: job.interestedCount + 1,\r\n            interestedUsers: [\r\n              ...interestedUsers,\r\n              {\r\n                userId: +currentUserId,\r\n                role: currentUserRole,\r\n                userName: currentUserName,\r\n              },\r\n            ],\r\n          };\r\n        }\r\n        return job;\r\n      })\r\n    );\r\n\r\n    const data = {\r\n      jobListingId: itemId,\r\n      interested: !isCurrentlyInterested,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(interestedClickUrl, data);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      fetchData();\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error sending interest:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // const handleInterestPersonPage = (item) => {\r\n  //   // Set the state with the interested users\r\n  //   setInterestPerson(item);\r\n  //   setModal(!modal);\r\n  // };\r\n  // const handleKeyDown = (event) => {\r\n  //   if (event.key === \"Enter\" || event.key === \" \") {\r\n  //     handleInterestPersonPage();\r\n  //   }\r\n  // };\r\n\r\n  // const handleUserClick = (user) => {\r\n  //   const lowerCaseRole = user.role.toLowerCase();\r\n  //   // history.push(`/app/${lowerCaseRole}profile/${user.userId}`);\r\n  //   if (lowerCaseRole === \"alumni\") {\r\n  //     history.push(`/app/alumni/profile/${user.userId}`);\r\n  //   } else if (lowerCaseRole === \"user\") {\r\n  //     history.push(`/app/user/profile/${user.userId}`);\r\n  //   } else {\r\n  //     history.push(`/app/${lowerCaseRole}profile/${user.userId}`);\r\n  //   }\r\n  // };\r\n\r\n  // const handleShareButtonClick = async (id) => {\r\n  //   try {\r\n  //     await navigator.clipboard.writeText(\r\n  //       `${window.location.href}/joblisting/view/${id}`\r\n  //     );\r\n  //     setCopiedId(id);\r\n  //     setTimeout(() => {\r\n  //       setCopiedId(null);\r\n  //     }, 3000);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error copying link:\", error);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      {/* <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader className=\"p-3\" toggle={toggle}>\r\n          Interested\r\n        </ModalHeader>\r\n        <ModalBody className=\"p-3\">\r\n          <ListGroup flush>\r\n            {interestPerson?.length > 0 ? (\r\n              interestPerson.map((data) => (\r\n                <ListGroupItem\r\n                  key={data.userId}\r\n                  tag=\"a\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  // href={`/app/mentorprofile/${data.id}`}\r\n                  onClick={() => handleUserClick(data)}\r\n                >\r\n                  {data.userName}\r\n                </ListGroupItem>\r\n              ))\r\n            ) : (\r\n              <p>No interested persons yet.</p>\r\n            )}\r\n          </ListGroup>\r\n        </ModalBody>\r\n      </Modal> */}\r\n      {/* {!isLoaded ? (\r\n        <div className=\"loading\" />\r\n      ) : (\r\n        <>\r\n          {!items?.length > 0 ? (\r\n            <Card className=\"d-flex justify-content-center align-items-center \">\r\n              <h2 className=\"mt-4 mb-4\">There are no posts available</h2>\r\n            </Card>\r\n          ) : (\r\n            <div className=\"disable-text-selection\">\r\n              {items.map((data, index) => (\r\n                <Row key={data.title + data.id} className=\"mb-2\">\r\n                  <Colxx xxs=\"12\">\r\n                    <Card className=\"mx-auto\" style={{ maxWidth: \"900px\" }}>\r\n                      <CardBody className=\"p-4\">\r\n                        <Row>\r\n                          <Col>\r\n                            <CardTitle className=\"font-weight-bold\">\r\n                              {data.title}\r\n                            </CardTitle>\r\n                          </Col>\r\n                          <Col className=\"text-right\">\r\n                            <p className=\"text-muted\">\r\n                              Posted on\r\n                              <TimestampConverter\r\n                                timeStamp={data.postedOn}\r\n                                format=\"datetime\"\r\n                              />\r\n                            </p>\r\n                          </Col>\r\n                        </Row>\r\n                        {expandedIndex === index ? (\r\n                          <CardSubtitle>\r\n                            {removeTags(data.description)}\r\n                          </CardSubtitle>\r\n                        ) : (\r\n                          <CardSubtitle>\r\n                            {`${(\r\n                              (data.description &&\r\n                                removeTags(data.description)) ||\r\n                              \"\"\r\n                            ).slice(0, 100)}`}{\" \"}\r\n                            {data.description?.length > 100 && (\r\n                              <Button\r\n                                color=\"link\"\r\n                                onClick={() => toggleExpand(index)}\r\n                                className=\" p-0\"\r\n                              >\r\n                                {expandedIndex === index\r\n                                  ? \"Read less\"\r\n                                  : \"Read more\"}\r\n                              </Button>\r\n                            )}\r\n                          </CardSubtitle>\r\n                        )}\r\n                       \r\n                        <Row>\r\n                          <Col xs={12} sm={6} md={4} lg={2}>\r\n                            <i className=\"iconsminds-office text-primary\" />{\" \"}\r\n                            {data.company}\r\n                          </Col>\r\n                          <Col xs={12} sm={6} md={4} lg={3}>\r\n                            <i className=\"iconsminds-engineering text-primary\" />{\" \"}\r\n                            {data.jobTitle}\r\n                          </Col>\r\n                          <Col xs={12} sm={6} md={4} lg={2}>\r\n                            <i className=\"simple-icon-location-pin text-primary\" />{\" \"}\r\n                            {data.jobLocation}\r\n                          </Col>\r\n                          <Col xs={12} sm={6} md={4} lg={2}>\r\n                            <i className=\"iconsminds-building text-primary\" />{\" \"}\r\n                            {data.workPlaceType}\r\n                          </Col>\r\n                          <Col xs={12} sm={6} md={4} lg={2}>\r\n                            <i className=\"simple-icon-briefcase text-primary\" />{\" \"}\r\n                            {data.employmentType}\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"mt-3\">\r\n                          <Col>\r\n                            {data.skills?.map((skill) => (\r\n                              <Button\r\n                                key={skill}\r\n                                color=\"light\"\r\n                                className=\"mb-2 font-weight-semibold mx-2\"\r\n                                size=\"xs\"\r\n                              >\r\n                                {skill}\r\n                              </Button>\r\n                            ))}\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className=\"\">\r\n                          <Col\r\n                            className=\"text-start text-sm-left\"\r\n                            xs={12}\r\n                            sm={6}\r\n                          >\r\n                            <div\r\n                              \r\n                              className=\"text-muted mt-2\"\r\n                             \r\n                            >\r\n                              {data.interestedCount} people have shown interest\r\n                            </div>\r\n                          </Col>\r\n                          <Col\r\n                            className=\"text-sm-right text-start mt-sm-0 mt-2\"\r\n                            xs={12}\r\n                            sm={6}\r\n                          >\r\n                            <Button\r\n                              outline\r\n                              color=\"primary\"\r\n                              className=\"mr-2\"\r\n                              size=\"xs\"\r\n                              onClick={() => handleClick(data.id)}\r\n                              data-toggle=\"tooltip\"\r\n                              title=\"Full screen\"\r\n                            >\r\n                              <i className=\"simple-icon-size-fullscreen text-primary\" />\r\n                            </Button>\r\n                            {copiedId === data.id && (\r\n                              <span className=\"text-success mr-2\">\r\n                                Link copied to clipboard!\r\n                              </span>\r\n                            )}\r\n                            <Button\r\n                              outline\r\n                              color=\"primary\"\r\n                              className=\"mr-2\"\r\n                              size=\"xs\"\r\n                              onClick={() => handleShareButtonClick(data.id)}\r\n                              data-toggle=\"tooltip\"\r\n                              title=\"copy\"\r\n                            >\r\n                              <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                width=\"16\"\r\n                                height=\"16\"\r\n                                fill=\"currentColor\"\r\n                                className=\"bi bi-copy\"\r\n                                viewBox=\"0 0 16 16\"\r\n                              >\r\n                                <path\r\n                                  fillRule=\"evenodd\"\r\n                                  d=\"M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z\"\r\n                                />\r\n                              </svg>\r\n                            </Button>\r\n                            \r\n                            <Button\r\n                              onClick={() =>\r\n                                handleInterestedButtonClick(\r\n                                  data.loggedInUserInterested,\r\n                                  data.id\r\n                                )\r\n                              }\r\n                              outline\r\n                              // className=\"d-none d-lg-block\"\r\n                              color=\"primary\"\r\n                              size=\"xs\"\r\n                              active={data.loggedInUserInterested}\r\n                            >\r\n                              I&apos;m interested\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Colxx>\r\n                </Row>\r\n              ))}\r\n              <Pagination\r\n                currentPage={currentPage}\r\n                totalPage={totalPage}\r\n                onChangePage={(i) => setCurrentPage(i)}\r\n                lastIsActive={isFirst}\r\n                firstIsActive={isLast}\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      )} */}\r\n\r\n      {/* new design starts */}\r\n\r\n      {!isLoaded ? (\r\n        <div className=\"loading\" />\r\n      ) : (\r\n        <>\r\n          {!items?.length > 0 ? (\r\n            <Card className=\"d-flex justify-content-center align-items-center \">\r\n              <h2 className=\"mt-4 mb-4\">There are no posts available</h2>\r\n            </Card>\r\n          ) : (\r\n            <div className=\"disable-text-selection\">\r\n              <Row>\r\n                {items.map((data, index) => (\r\n                  <Col\r\n                    xxs=\"12\"\r\n                    md=\"6\"\r\n                    lg=\"6\"\r\n                    sm=\"12\"\r\n                    key={data.title + data.id}\r\n                    className=\"mb-2\"\r\n                  >\r\n                    <Card className=\" my-2\">\r\n                      <CardBody className=\"p-3\">\r\n                        <CardImg\r\n                          top\r\n                          src={\r\n                            data.image && data.image.imageUrl\r\n                              ? `${baseUrl}/${data.image.imageUrl}`\r\n                              : \"https://via.placeholder.com/300x200?text=No%20Image\"\r\n                          }\r\n                          alt=\"Card image cap\"\r\n                          className=\"thumbnail\"\r\n                          style={{\r\n                            height: \"300px\",\r\n                            width: \"100%\",\r\n                            objectFit: \"fill\",\r\n                          }}\r\n                        />\r\n\r\n                        <Row>\r\n                          <Col>\r\n                            <h3 className=\"font-weight-bold mt-2 text-large\">\r\n                              {data.jobTitle}\r\n                            </h3>\r\n                            <h6>{data.company}</h6>\r\n                          </Col>\r\n                        </Row>\r\n                        {expandedIndex === index ? (\r\n                          <CardSubtitle>\r\n                            {removeTags(data.description)}\r\n                          </CardSubtitle>\r\n                        ) : (\r\n                          <CardSubtitle>\r\n                            {`${(\r\n                              (data.description &&\r\n                                removeTags(data.description)) ||\r\n                              \"\"\r\n                            ).slice(0, 100)}`}{\" \"}\r\n                            {data.description?.length > 100 && (\r\n                              <Button\r\n                                color=\"link\"\r\n                                onClick={() => toggleExpand(index)}\r\n                                className=\" p-0\"\r\n                              >\r\n                                {expandedIndex === index\r\n                                  ? \"Read less\"\r\n                                  : \"Read more\"}\r\n                              </Button>\r\n                            )}\r\n                          </CardSubtitle>\r\n                        )}\r\n\r\n                        <Row>\r\n                          <Col>\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"mb-2 font-weight-semibold\"\r\n                              size=\"xs\"\r\n                            >\r\n                              job\r\n                            </Button>\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"mb-2 font-weight-semibold mx-1\"\r\n                              size=\"xs\"\r\n                            >\r\n                              fresher\r\n                            </Button>\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"mb-2 font-weight-semibold mx-1\"\r\n                              size=\"xs\"\r\n                            >\r\n                              {data.workPlaceType}\r\n                            </Button>\r\n                            <Button\r\n                              color=\"light\"\r\n                              className=\"mb-2 font-weight-semibold mx-1\"\r\n                              size=\"xs\"\r\n                            >\r\n                              {data.jobLocation}\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"mt-2 text-one\">\r\n                          <Col className=\"\" xs={12} sm={8}>\r\n                            <span className=\"text-muted \">\r\n                              Posted on\r\n                              <TimestampConverter\r\n                                timeStamp={data.postedOn}\r\n                                format=\"datetime\"\r\n                              />\r\n                            </span>\r\n                          </Col>\r\n                          <Col\r\n                            // className=\"text-sm-right text-start mt-sm-0 mt-2\"\r\n                            className=\"d-flex justify-content-sm-end justify-content-start align-items-center mt-sm-0 mt-2\"\r\n                            xs={12}\r\n                            sm={4}\r\n                          >\r\n                            <Button\r\n                              onClick={() =>\r\n                                handleInterestedButtonClick(\r\n                                  data.loggedInUserInterested,\r\n                                  data.id\r\n                                )\r\n                              }\r\n                              outline\r\n                              // className=\"d-none d-lg-block\"\r\n                              color=\"primary\"\r\n                              size=\"xs\"\r\n                              active={data.loggedInUserInterested}\r\n                            >\r\n                              I&apos;m interested\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        {/* <Row className=\"mt-2 \">\r\n                          <Col className=\"d-flex justify-content-between align-items-center\">\r\n                            <span className=\"text-muted \">\r\n                              Posted on\r\n                              <TimestampConverter\r\n                                timeStamp={data.postedOn}\r\n                                format=\"datetime\"\r\n                              />\r\n                            </span>\r\n                            <Button\r\n                              onClick={() =>\r\n                                handleInterestedButtonClick(\r\n                                  data.loggedInUserInterested,\r\n                                  data.id\r\n                                )\r\n                              }\r\n                              outline\r\n                              // className=\"d-none d-lg-block\"\r\n                              color=\"primary\"\r\n                              size=\"xs\"\r\n                              active={data.loggedInUserInterested}\r\n                            >\r\n                              I&apos;m interested\r\n                            </Button>\r\n                          </Col>\r\n                        </Row> */}\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n              <Pagination\r\n                currentPage={currentPage}\r\n                totalPage={totalPage}\r\n                onChangePage={(i) => setCurrentPage(i)}\r\n                lastIsActive={isFirst}\r\n                firstIsActive={isLast}\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n      {/* new design ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobListing;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst DesktopNotifications = ({ title }) => {\r\n  const [permission, setPermission] = useState(Notification.permission);\r\n\r\n  useEffect(() => {\r\n    const showNotification = () => {\r\n      // eslint-disable-next-line\r\n      new Notification(`Someone is interested in your post: ${title}`, {\r\n        body: 'Check Notification.',\r\n        icon: 'https://gogo-react.coloredstrategies.com/assets/img/profiles/l-1.jpg', \r\n      });\r\n    };\r\n\r\n    const requestNotificationPermission = () => {\r\n      Notification.requestPermission().then((result) => {\r\n        setPermission(result);\r\n        if (result === 'granted') {\r\n          showNotification();\r\n        }\r\n      });\r\n    };\r\n\r\n    if (permission === 'granted') {\r\n      showNotification();\r\n    } else if (permission === 'default') {\r\n      requestNotificationPermission();\r\n    }\r\n  }, [permission, title]);\r\n\r\n  return null; \r\n};\r\n\r\nexport default DesktopNotifications;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardSubtitle,\r\n  CardTitle,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\nimport DesktopNotifications from \"../notifications/DesktopNotifications\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst JobListing = ({ isPosted }) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [totalPage] = useState(2);\r\n  const [items, setItems] = useState([]);\r\n  const [pagination, setPagination] = useState([]);\r\n  const [expandedIndex, setExpandedIndex] = useState(-1);\r\n  const [clickedCardTitle, setClickedCardTitle] = useState(\"\");\r\n  // const [copied, setCopied] = useState(false);\r\n  const [copiedId, setCopiedId] = useState(null);\r\n  const [noData, setNoData] = useState(false);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  console.log(\"data\", noData);\r\n  const url = `${baseUrl}/api/posts/other-post/`;\r\n\r\n  const interestedClickUrl = `${baseUrl}/api/posts/other-post/interest`;\r\n\r\n  const history = useHistory();\r\n\r\n  const toggleExpand = (index) => {\r\n    setExpandedIndex((prevIndex) => (prevIndex === index ? -1 : index));\r\n  };\r\n  // const handleInterest = (title) => {\r\n  //   setClickedCardTitle(title);\r\n  // };\r\n  // const handleInterest = (title) => {\r\n  //   // setClickedCardTitle(title);\r\n  //   // DesktopNotifications({ title });\r\n  //   <DesktopNotifications title={title} />\r\n  // };\r\n  const fetchData = async () => {\r\n    const params = {\r\n      page: currentPage - 1,\r\n      size: 20,\r\n      // sort: [\"\"]\r\n    };\r\n    try {\r\n      // const res = await axios.get(`${url}?_page=${currentPage}&_limit=8`);\r\n      const res = await axios.get(url, { params });\r\n      // console.log(\"other data\",res);\r\n      const { data } = res;\r\n      // const sortedData = data\r\n      //   .map((x) => ({ ...x }))\r\n      //   .sort((a, b) => new Date(b.postedOn) - new Date(a.postedOn));\r\n      setItems(data.otherposts);\r\n      setPagination(data.paginationMeta);\r\n      setIsLoaded(true);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      // console.log(\"ck\",error.response.data.statuses[0].code)\r\n      setIsLoaded(true);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses &&\r\n        error.response.data.statuses[0].code === 40348\r\n      ) {\r\n        setNoData(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      fetchData();\r\n    }, 3000);\r\n  }, [currentPage, isPosted]);\r\n\r\n  const handleClick = (id) => {\r\n    history.push(`/app/listing/others/view/${id}`);\r\n  };\r\n\r\n  // const removeTags = (str) => {\r\n  //   if (str === null || str === '') {\r\n  //       return false;\r\n  //   }\r\n  //   const newStr = str.toString();\r\n  //   return newStr.replace(/<\\/?[^>]+(>|$)/g, ' ').trim().replace(/\\s+/g, ' ');\r\n  // };\r\n  function removeTags(str) {\r\n    if (typeof str !== \"string\") {\r\n      return \"\";\r\n    }\r\n    return str.replace(/(<([^>]+)>)/gi, \"\");\r\n  }\r\n\r\n  const handleInterestedButtonClick = async (id, title) => {\r\n    const data = {\r\n      otherPostId: id,\r\n      interested: true,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(interestedClickUrl, data);\r\n      setClickedCardTitle(title);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      fetchData();\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error sending interest:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleShareButtonClick = async (id) => {\r\n    try {\r\n      await navigator.clipboard.writeText(\r\n        `${window.location.href}/otherlisting/view/${id}`\r\n      );\r\n      setCopiedId(id);\r\n      setTimeout(() => {\r\n        setCopiedId(null);\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error(\"Error copying link:\", error);\r\n    }\r\n  };\r\n\r\n  return !isLoaded ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <>\r\n      {!items.length > 0 ? (\r\n        <Card className=\"d-flex justify-content-center align-items-center \">\r\n          <h2 className=\"mt-4 mb-4\">There are no posts available</h2>\r\n        </Card>\r\n      ) : (\r\n        <div className=\"disable-text-selection\">\r\n          {items.map((data, index) => (\r\n            <Row key={data.id} className=\"mb-2\">\r\n              <Colxx xxs=\"12\">\r\n                <Card className=\"mx-auto\" style={{ maxWidth: \"900px\" }}>\r\n                  <CardBody className=\"p-4\">\r\n                    <Row>\r\n                      <Col>\r\n                        <CardTitle className=\"font-weight-bold\">\r\n                          {data.title}\r\n                        </CardTitle>\r\n                      </Col>\r\n                      <Col className=\"text-right\">\r\n                        <p className=\"text-muted\">\r\n                          {/* Posted on {new Date(data.postedOn).toLocaleDateString()}{\" \"} */}\r\n                          {/* Posted on {new Date(data.postedOn).toLocaleString()} */}\r\n                          Posted on{\" \"}\r\n                          <TimestampConverter\r\n                            timeStamp={data.postedOn}\r\n                            format=\"datetime\"\r\n                          />\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                    {expandedIndex === index ? (\r\n                      <CardSubtitle>\r\n                        {removeTags(data.description)}\r\n                      </CardSubtitle>\r\n                    ) : (\r\n                      <CardSubtitle>\r\n                        {`${removeTags(data.description).slice(0, 100)}...`}\r\n                        {data.description.length > 100 && (\r\n                          <Button\r\n                            color=\"link\"\r\n                            onClick={() => toggleExpand(index)}\r\n                            className=\" p-0\"\r\n                          >\r\n                            {expandedIndex === index\r\n                              ? \"Read less\"\r\n                              : \"Read more\"}\r\n                          </Button>\r\n                        )}\r\n                      </CardSubtitle>\r\n                    )}\r\n\r\n                    <Row className=\"align-items-center\">\r\n                      <Col className=\"\">\r\n                        {/* {data.interestedCount && (\r\n                          <div className=\"text-muted mt-2\">\r\n                            {data.interestedCount} people have shown interest\r\n                          </div>\r\n                        )} */}\r\n                        {data.interestedCount} people have shown interest\r\n                      </Col>\r\n                      <Col className=\"text-md-right mt-2 mt-md-0 d-flex justify-content-end\">\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"mr-2\"\r\n                          size=\"xs\"\r\n                          onClick={() => handleClick(data.id)}\r\n                          data-toggle=\"tooltip\"\r\n                          title=\"Full screen\"\r\n                        >\r\n                          <i className=\"simple-icon-size-fullscreen text-primary\" />\r\n                        </Button>\r\n                        {copiedId === data.id && (\r\n                          <span className=\"text-success mr-2\">\r\n                            Link copied to clipboard!\r\n                          </span>\r\n                        )}\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"mr-2\"\r\n                          size=\"xs\"\r\n                          onClick={() => handleShareButtonClick(data.id)}\r\n                          data-toggle=\"tooltip\"\r\n                          title=\"copy\"\r\n                        >\r\n                          <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"16\"\r\n                            height=\"16\"\r\n                            fill=\"currentColor\"\r\n                            className=\"bi bi-copy\"\r\n                            viewBox=\"0 0 16 16\"\r\n                          >\r\n                            <path\r\n                              fillRule=\"evenodd\"\r\n                              d=\"M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z\"\r\n                            />\r\n                          </svg>\r\n                        </Button>\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"d-block d-lg-none\"\r\n                          size=\"xs\"\r\n                          active={data.loggedInUserInterested}\r\n                          // onClick={() =>\r\n                          //   handleInterestedButtonClick(data.id, data.title)\r\n                          // }\r\n                          onClick={() =>\r\n                            handleInterestedButtonClick(data.id, data.title)\r\n                          }\r\n                          // onClick={() =>\r\n                          //   handleInterestedButtonClick(\r\n                          //     data.loggedInUserInterested,\r\n                          //     data.id\r\n                          //   )\r\n                          // }\r\n                          onMouseEnter={() => setIsHovered(true)}\r\n                          onMouseLeave={() => setIsHovered(false)}\r\n                        >\r\n                          <i\r\n                            // className={`iconsminds-like ${\r\n                            //   data.loggedInUserInterested\r\n                            //     ? \"text-white\"\r\n                            //     : \"text-primary\"\r\n                            // }`}\r\n                            className={`iconsminds-like ${\r\n                              data.loggedInUserInterested || isHovered\r\n                                ? \"text-white\"\r\n                                : \"text-primary\"\r\n                            }`}\r\n                          />\r\n                        </Button>\r\n                        {/* <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          size=\"xs\"\r\n                          className=\"d-none d-lg-block\"\r\n                          onClick={() =>\r\n                            handleInterestedButtonClick(data.id, data.title)\r\n                          }\r\n                        >\r\n                          I&apos;m interested\r\n                        </Button> */}\r\n                        <Button\r\n                          // onClick={() =>\r\n                          //   handleInterestedButtonClick(\r\n                          //     data.loggedInUserInterested,\r\n                          //     data.id\r\n                          //   )\r\n                          // }\r\n                          onClick={() =>\r\n                            handleInterestedButtonClick(data.id, data.title)\r\n                          }\r\n                          outline\r\n                          color=\"primary\"\r\n                          size=\"xs\"\r\n                          active={data.loggedInUserInterested}\r\n                          className=\"d-none d-lg-block \"\r\n                        >\r\n                          I&apos;m interested\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </Colxx>\r\n            </Row>\r\n          ))}\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            totalPage={pagination.totalPage}\r\n            onChangePage={(i) => setCurrentPage(i)}\r\n            lastIsActive={pagination.first}\r\n            firstIsActive={pagination.last}\r\n          />\r\n          {clickedCardTitle && (\r\n            <DesktopNotifications title={clickedCardTitle} />\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobListing;\r\n","import axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\nimport {\r\n  // Collapse,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardSubtitle,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst StayListing = ({ isPosted }) => {\r\n  const [expandedIndex, setExpandedIndex] = useState(-1);\r\n  const [items, setItems] = useState([]);\r\n  const [pagination, setPagination] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  // const [copiedId, setCopiedId] = useState(null);\r\n  const [isOwnerInfoVisible, setIsOwnerInfoVisible] = useState(false);\r\n\r\n  // const toggleOwnerInfo = () => {\r\n  //   setIsOwnerInfoVisible((prev) => !prev);\r\n  // };\r\n  const toggleOwnerInfo = (id) => {\r\n    setIsOwnerInfoVisible((prevId) => (prevId === id ? null : id)); // Toggle owner info\r\n  };\r\n\r\n  // const [totalPage] = useState(2);\r\n  // const history = useHistory();\r\n\r\n  const url = `${baseUrl}/api/posts/stay-post/`;\r\n  // const interestedClickUrl = `${baseUrl}/api/posts/stay-post/intereststayroomId=${id}&interested=true`;\r\n  const interestedClickUrl = `${baseUrl}/api/posts/stay-post/interest`;\r\n\r\n  const fetchDataFromServer = async () => {\r\n    try {\r\n      const params = {\r\n        page: currentPage - 1,\r\n        size: 20,\r\n        // sort: [\"\"]\r\n      };\r\n      // const res = await axios.get(`${url}?_page=${currentPage}&_limit=4`);\r\n      const res = await axios.get(url, { params });\r\n      const { data } = res;\r\n      // const sortedData = data.map(x => ({ ...x })).sort((a, b) => new Date(b.postedOn) - new Date(a.postedOn));\r\n      setPagination(data.paginationMeta);\r\n      setItems(data.stayrooms);\r\n      setIsLoaded(true);\r\n\r\n      console.log(data.stayrooms);\r\n    } catch (error) {\r\n      setIsLoaded(true);\r\n\r\n      console.error(\"Error while fetching data from the server\", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchDataFromServer();\r\n  }, [currentPage, isPosted]);\r\n\r\n  const toggleExpand = (index) => {\r\n    if (expandedIndex === index) {\r\n      setExpandedIndex(-1);\r\n    } else {\r\n      setExpandedIndex(index);\r\n    }\r\n  };\r\n  // const handleClick = (id) => {\r\n  //   history.push(`/app/listing/stay/view/${id}`);\r\n  // };\r\n\r\n  const handleInterestedButtonClick = async (id) => {\r\n    const data = {\r\n      // jobListingId: id,\r\n      stayroomId: id,\r\n      interested: true,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(interestedClickUrl, data);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      fetchDataFromServer();\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error sending interest:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  function removeTags(str) {\r\n    if (typeof str !== \"string\") {\r\n      return \"\";\r\n    }\r\n    return str.replace(/(<([^>]+)>)/gi, \"\");\r\n  }\r\n\r\n  // const handleShareButtonClick = async (id) => {\r\n  //   try {\r\n  //     await navigator.clipboard.writeText(\r\n  //       `${window.location.href}/staylisting/view/${id}`\r\n  //     );\r\n  //     setCopiedId(id);\r\n  //     setTimeout(() => {\r\n  //       setCopiedId(null);\r\n  //     }, 3000);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error copying link:\", error);\r\n  //   }\r\n  // };\r\n\r\n  return !isLoaded ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <>\r\n      {/* {!items.length > 0 ? (\r\n        <Card className=\"d-flex justify-content-center align-items-center \">\r\n          <h2 className=\"mt-4 mb-4\">There are no posts available</h2>\r\n        </Card>\r\n      ) : (\r\n        <div className=\"disable-text-selection\">\r\n          {items.map((data, index) => (\r\n            <Row key={data.title} className=\"mb-2\">\r\n              <Colxx xxs=\"12\">\r\n                <Card className=\"mx-auto\" style={{ maxWidth: \"900px\" }}>\r\n                  <CardBody className=\"p-4\">\r\n                    <Row>\r\n                      <Col>\r\n                        <CardTitle className=\"font-weight-bold\">\r\n                          {data.title}\r\n                        </CardTitle>\r\n                      </Col>\r\n\r\n                      <Col className=\"text-right\">\r\n                        <p className=\"text-muted\">\r\n                          Posted on{\" \"}\r\n                          <TimestampConverter\r\n                            timeStamp={data.postedOn}\r\n                            format=\"datetime\"\r\n                          />\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                   \r\n                    {expandedIndex === index ? (\r\n                      <CardSubtitle>\r\n                        {removeTags(data.description)}\r\n                      </CardSubtitle>\r\n                    ) : (\r\n                      <CardSubtitle>\r\n                        {`${removeTags(data.description).slice(0, 100)}...`}\r\n                        {data.description.length > 100 && (\r\n                          <Button\r\n                            color=\"link\"\r\n                            onClick={() => toggleExpand(index)}\r\n                            className=\" p-0\"\r\n                          >\r\n                            {expandedIndex === index\r\n                              ? \"Read less\"\r\n                              : \"Read more\"}\r\n                          </Button>\r\n                        )}\r\n                      </CardSubtitle>\r\n                    )}\r\n\r\n                    <Row>\r\n                      <Col md={5}>\r\n                        <i className=\"iconsminds-office text-primary\" />{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"Apartment Type\">\r\n                          {data.apartmentType}\r\n                        </span>{\" \"}\r\n                        |{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"Floor\">\r\n                          {data.floor}\r\n                        </span>{\" \"}\r\n                        |{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"BHK Type\">\r\n                          {data.bhkType}\r\n                        </span>\r\n                      </Col>\r\n\r\n                      <Col>\r\n                        <i className=\"simple-icon-people text-primary\" />{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"Room mate\">\r\n                          {data.roomMate}\r\n                        </span>\r\n                      </Col>\r\n                      <Col>\r\n                        <span className=\"text-primary\">₹</span>{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"Expected Rent\">\r\n                          {data.expectedRent}\r\n                        </span>\r\n                      </Col>\r\n                      <Col>\r\n                        <i className=\"iconsminds-car text-primary\" />\r\n\r\n                        <span data-toggle=\"tooltip\" title=\"Parking\">\r\n                          {data.parking}\r\n                        </span>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row className=\"mt-2\">\r\n                      <Col className=\"text-start text-sm-left\" xs={12} sm={6}>\r\n                        <div className=\"text-muted mt-2\">\r\n                          {data.interestedCount} people have shown interest\r\n                        </div>\r\n                      </Col>\r\n                      <Col\r\n                        className=\"text-sm-right texr-start mt-sm-0 mt-2\"\r\n                        xs={12}\r\n                        sm={6}\r\n                      >\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"mr-2\"\r\n                          size=\"xs\"\r\n                          onClick={() => handleClick(data.id)}\r\n                          data-toggle=\"tooltip\"\r\n                          title=\"Full screen\"\r\n                        >\r\n                          <i className=\"simple-icon-size-fullscreen text-primary\" />\r\n                        </Button>\r\n                        {copiedId === data.id && (\r\n                          <span className=\"text-success mr-2\">\r\n                            Link copied to clipboard!\r\n                          </span>\r\n                        )}\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"mr-2\"\r\n                          size=\"xs\"\r\n                          onClick={() => handleShareButtonClick(data.id)}\r\n                          data-toggle=\"tooltip\"\r\n                          title=\"copy\"\r\n                        >\r\n                          <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"16\"\r\n                            height=\"16\"\r\n                            fill=\"currentColor\"\r\n                            className=\"bi bi-copy\"\r\n                            viewBox=\"0 0 16 16\"\r\n                          >\r\n                            <path\r\n                              fillRule=\"evenodd\"\r\n                              d=\"M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z\"\r\n                            />\r\n                          </svg>\r\n                        </Button>\r\n                        <Button\r\n                          onClick={() => handleInterestedButtonClick(data.id)}\r\n                          outline\r\n                          color=\"primary\"\r\n                          size=\"xs\"\r\n                          active={data.loggedInUserInterested}\r\n                        >\r\n                          I&apos;m interested\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </Colxx>\r\n            </Row>\r\n          ))}\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            totalPage={pagination.totalPage}\r\n            onChangePage={(i) => setCurrentPage(i)}\r\n            lastIsActive={pagination.first}\r\n            firstIsActive={pagination.last}\r\n          />\r\n        </div>\r\n      )} */}\r\n\r\n      {/* new design starts  */}\r\n      {!items.length > 0 ? (\r\n        <Card className=\"d-flex justify-content-center align-items-center \">\r\n          <h2 className=\"mt-4 mb-4\">There are no posts available</h2>\r\n        </Card>\r\n      ) : (\r\n        <div className=\"disable-text-selection\">\r\n          <Row>\r\n            {items.map((data, index) => (\r\n              <Col xxs=\"12\" md={6} key={data.title} className=\"mb-2\">\r\n                <Card className=\"mx-auto mt-2\">\r\n                  <CardBody className=\"p-4 position-relative\">\r\n                    <Button\r\n                      className=\"rounded-circle px-2 py-0   text-one bg-white position-absolute \"\r\n                      style={{\r\n                        border: \"3px solid #a16390\",\r\n                        top: \"30px\",\r\n                        right: \"30px\",\r\n                        cursor: \"pointer\",\r\n                        zIndex: 10,\r\n                      }}\r\n                      // onClick={toggleOwnerInfo}\r\n                      onClick={() => toggleOwnerInfo(data.id)}\r\n                    >\r\n                      <i\r\n                        className=\"fa-solid fa-user\"\r\n                        color=\"secondary\"\r\n                        style={{ color: \"#a16390\" }}\r\n                      />\r\n                    </Button>\r\n                    <CardImg\r\n                      top\r\n                      // src=\"/assets/img/cards/thumb-1.jpg\"\r\n                      // src=\"https://images.pexels.com/photos/106399/pexels-photo-106399.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\"\r\n                      src={\r\n                        data.images.length > 0\r\n                          ? `${baseUrl}/${data.images[0].imageUrl}` // Use the first image URL\r\n                          : \"https://via.placeholder.com/300x200?text=No+Image\" // Fallback image\r\n                      }\r\n                      alt=\"Card image cap\"\r\n                      className=\"mb-2\"\r\n                      style={{\r\n                        opacity: isOwnerInfoVisible === data.id ? 0.1 : 1, // Reduce opacity when info is visible\r\n                        transition: \"opacity 0.3s ease-in-out\",\r\n                        height: \"300px\",\r\n                        objectFit: \"fill\", // Add a transition effect\r\n                      }}\r\n                    />\r\n                    {/* <span>\r\n                      <h2>Owner: Prakash Raj</h2>\r\n                      <h5>\r\n                        <i className=\"simple-icon-phone\" /> 9876543210\r\n                      </h5>\r\n                      <h5>\r\n                        <i className=\"iconsminds-mail-link\" />\r\n                        prakash@gmail.com\r\n                      </h5>\r\n                    </span> */}\r\n\r\n                    {isOwnerInfoVisible === data.id && (\r\n                      <span\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          top: \"100px\",\r\n                          right: \"80px\",\r\n\r\n                          padding: \"10px\",\r\n                          borderRadius: \"5px\",\r\n                          // boxShadow: \"0 0 5px rgba(0,0,0,0.5)\",\r\n                        }}\r\n                        className=\"font-weight-bold\"\r\n                      >\r\n                        <h2 className=\"text-large\">Owner: {data.ownerName}</h2>\r\n                        <h4 className=\"\">\r\n                          {/* <i className=\"simple-icon-phone\" /> */}\r\n                          <i className=\"fa-solid fa-phone mr-2\" />\r\n                          {data.mobileNumber}\r\n                        </h4>\r\n                        <h4\r\n                          className=\"d-inline-flex align-items-center\"\r\n                          style={{ display: \"inline-flex\" }}\r\n                        >\r\n                          {/* <i className=\"iconsminds-envelope\" color=\"primary\" />{\" \"} */}\r\n                          <i className=\"fa-solid fa-envelope mr-2\" />{\" \"}\r\n                          {data.email}\r\n                        </h4>\r\n                      </span>\r\n                    )}\r\n\r\n                    <Row>\r\n                      <Col\r\n                        xs=\"12\"\r\n                        sm=\"12\"\r\n                        className=\"d-flex align-items-center\"\r\n                      >\r\n                        <h3 className=\"font-weight-bold mt-2 text-one \">\r\n                          Rent: <span className=\"text-primary\">₹</span>\r\n                          <span data-toggle=\"tooltip\" title=\"Expected Rent\">\r\n                            {data.expectedRent}\r\n                          </span>\r\n                        </h3>\r\n                        <Button\r\n                          color=\"light\"\r\n                          className=\" font-weight-semibold mx-2\"\r\n                          size=\"xs\"\r\n                          style={{ pointerEvents: \"none\" }} \r\n                        >\r\n                          {data.apartmentType}\r\n                        </Button>\r\n                      </Col>\r\n\r\n                      {/* <Col className=\"text-right\">\r\n                        <p className=\"text-muted\">\r\n                          Posted on{\" \"}\r\n                          <TimestampConverter\r\n                            timeStamp={data.postedOn}\r\n                            format=\"datetime\"\r\n                          />\r\n                        </p>\r\n                      </Col> */}\r\n                    </Row>\r\n                    {/* <CardSubtitle>{data.description}</CardSubtitle> */}\r\n                    {expandedIndex === index ? (\r\n                      <CardSubtitle>\r\n                        {removeTags(data.description)}\r\n                      </CardSubtitle>\r\n                    ) : (\r\n                      <CardSubtitle>\r\n                        {`${removeTags(data.description).slice(0, 100)}...`}\r\n\r\n                        {data.description.length > 100 && (\r\n                          <Button\r\n                            color=\"link\"\r\n                            onClick={() => toggleExpand(index)}\r\n                            className=\" p-0\"\r\n                          >\r\n                            {expandedIndex === index\r\n                              ? \"Read less\"\r\n                              : \"Read more\"}\r\n                          </Button>\r\n                        )}\r\n                      </CardSubtitle>\r\n                    )}\r\n\r\n                    {/* <Row>\r\n                      <Col md={5}>\r\n                        <i className=\"iconsminds-office text-primary\" />{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"Apartment Type\">\r\n                          {data.apartmentType}\r\n                        </span>{\" \"}\r\n                        |{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"Floor\">\r\n                          {data.floor}\r\n                        </span>{\" \"}\r\n                        |{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"BHK Type\">\r\n                          {data.bhkType}\r\n                        </span>\r\n                      </Col>\r\n\r\n                      <Col>\r\n                        <i className=\"simple-icon-people text-primary\" />{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"Room mate\">\r\n                          {data.roomMate}\r\n                        </span>\r\n                      </Col>\r\n                      <Col>\r\n                        <span className=\"text-primary\">₹</span>{\" \"}\r\n                        <span data-toggle=\"tooltip\" title=\"Expected Rent\">\r\n                          {data.expectedRent}\r\n                        </span>\r\n                      </Col>\r\n                      <Col>\r\n                        <i className=\"iconsminds-car text-primary\" />\r\n\r\n                        <span data-toggle=\"tooltip\" title=\"Parking\">\r\n                          {data.parking}\r\n                        </span>\r\n                      </Col>\r\n                    </Row> */}\r\n                    {/* icons tstart */}\r\n                    <Row>\r\n                      <Col className=\"d-flex flex-wrap\">\r\n                        <Button\r\n                          color=\"light\"\r\n                          className=\"font-weight-bold mr-1 my-1\"\r\n                          size=\"sm\"\r\n                            style={{ pointerEvents: \"none\" }} \r\n                        >\r\n                          <i className=\"fas fa-bed \" /> {data.bhkTypeValue}\r\n                        </Button>\r\n                        <Button\r\n                          color=\"light\"\r\n                          className=\"font-weight-bold m-1\"\r\n                          size=\"sm\"\r\n                          style={{ pointerEvents: \"none\" }} \r\n                        >\r\n                          <i className=\"fa-solid fa-shower\" />{\" \"}\r\n                          {data.bhkTypeValue}\r\n                        </Button>\r\n                        <Button\r\n                          color=\"light\"\r\n                          className=\"font-weight-bold m-1\"\r\n                          size=\"sm\"\r\n                          style={{ pointerEvents: \"none\" }} \r\n                        >\r\n                          <i className=\"fa-solid fa-car\" /> {data.parkingCount}\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                    {/* icons end */}\r\n\r\n                    <Row className=\"mt-2\">\r\n                      <Col className=\"text-start text-sm-left\" xs={12} sm={6}>\r\n                        <div className=\"text-muted mt-2\">\r\n                          {data.interestedCount} liked this property\r\n                        </div>\r\n                      </Col>\r\n                      <Col\r\n                        className=\"text-sm-right texr-start mt-sm-0 mt-2\"\r\n                        xs={12}\r\n                        sm={6}\r\n                      >\r\n                        {/* <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"mr-2\"\r\n                          size=\"xs\"\r\n                          onClick={() => handleClick(data.id)}\r\n                          data-toggle=\"tooltip\"\r\n                          title=\"Full screen\"\r\n                        >\r\n                          <i className=\"simple-icon-size-fullscreen text-primary\" />\r\n                        </Button>\r\n                        {copiedId === data.id && (\r\n                          <span className=\"text-success mr-2\">\r\n                            Link copied to clipboard!\r\n                          </span>\r\n                        )}\r\n                        <Button\r\n                          outline\r\n                          color=\"primary\"\r\n                          className=\"mr-2\"\r\n                          size=\"xs\"\r\n                          onClick={() => handleShareButtonClick(data.id)}\r\n                          data-toggle=\"tooltip\"\r\n                          title=\"copy\"\r\n                        >\r\n                          <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"16\"\r\n                            height=\"16\"\r\n                            fill=\"currentColor\"\r\n                            className=\"bi bi-copy\"\r\n                            viewBox=\"0 0 16 16\"\r\n                          >\r\n                            <path\r\n                              fillRule=\"evenodd\"\r\n                              d=\"M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z\"\r\n                            />\r\n                          </svg>\r\n                        </Button> */}\r\n                        <Button\r\n                          onClick={() => handleInterestedButtonClick(data.id)}\r\n                          outline\r\n                          color=\"primary\"\r\n                          size=\"xs\"\r\n                          active={data.loggedInUserInterested}\r\n                        >\r\n                          I&apos;m interested\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            totalPage={pagination.totalPage}\r\n            onChangePage={(i) => setCurrentPage(i)}\r\n            lastIsActive={pagination.first}\r\n            firstIsActive={pagination.last}\r\n          />\r\n        </div>\r\n      )}\r\n      {/* new design ends  */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StayListing;\r\n","import classnames from \"classnames\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { NavLink, useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  //   Badge,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  //   Card,\r\n  //   CardBody,\r\n  Nav,\r\n  NavItem,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\n// import Rating from 'components/common/Rating';\r\n\r\n// import Breadcrumb from 'containers/navs/Breadcrumb';\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\n\r\nimport All from \"./All\";\r\nimport JobListing from \"./JobListing\";\r\nimport JobPosting from \"./JobPosting\";\r\nimport OtherListing from \"./OtherListing\";\r\nimport OtherPosting from \"./OtherPosting\";\r\nimport StayListing from \"./StayListing\";\r\nimport StayPosting from \"./StayPosting\";\r\n\r\nconst DetailsAltPages = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [activeTab, setActiveTab] = useState(\"job\");\r\n  const [modal, setModal] = useState(false);\r\n  const [modalTitle, setModalTitle] = useState(\"\");\r\n  const [listingType, setListingType] = useState(\"\");\r\n  const [isPosted, setIsPosted] = useState(false);\r\n\r\n  const toggleModal = (title, type) => {\r\n    setModalTitle(title);\r\n    setListingType(type);\r\n    setModal(!modal);\r\n  };\r\n  //   const { messages } = intl;\r\n\r\n  const toggleModalState = () => {\r\n    setModal(false);\r\n    setIsPosted(!isPosted);\r\n  };\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"roleRes\");\r\n  }\r\n  const role = getTokenRes();\r\n\r\n  useEffect(() => {\r\n    const path = location.pathname.split(\"/\").pop();\r\n    setActiveTab(path === \"listing\" ? \"all\" : path);\r\n  }, [location]);\r\n\r\n  const changeTab = (tab) => {\r\n    setActiveTab(tab);\r\n    history.push(`/app/listing${tab === \"all\" ? \"\" : `/${tab}`}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\" className=\"mx-auto\" style={{ maxWidth: \"900px\" }}>\r\n          <h1>Listing</h1>\r\n          <div className=\"text-zero top-right-button-container\">\r\n            {activeTab === \"all\" && (\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"primary\"\r\n                  size=\"sm\"\r\n                  outline\r\n                  className=\"top-right-button top-right-button-single\"\r\n                >\r\n                  Create Listing\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  <DropdownItem\r\n                    onClick={() => toggleModal(\"Create a job List\", \"job\")}\r\n                  >\r\n                    Create a Job list\r\n                  </DropdownItem>\r\n                  <DropdownItem\r\n                    onClick={() => toggleModal(\"Create a Stay list\", \"stay\")}\r\n                  >\r\n                    Create a Stay list\r\n                  </DropdownItem>\r\n                  <DropdownItem\r\n                    onClick={() => toggleModal(\"Create a other list\", \"others\")}\r\n                  >\r\n                    Create a other list\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            )}\r\n            {activeTab === \"job\" && (\r\n              <Button\r\n                outline\r\n                color=\"primary\"\r\n                onClick={() => toggleModal(\"Create a job List\", \"job\")}\r\n              >\r\n                Create a job list\r\n              </Button>\r\n            )}\r\n            {activeTab === \"stay\" && (\r\n              <Button\r\n                outline\r\n                color=\"primary\"\r\n                onClick={() => toggleModal(\"Create a Stay list\", \"stay\")}\r\n              >\r\n                Create a stay list\r\n              </Button>\r\n            )}\r\n            {activeTab === \"others\" && (\r\n              <Button\r\n                outline\r\n                color=\"primary\"\r\n                onClick={() => toggleModal(\"Create a other list\", \"others\")}\r\n              >\r\n                Create a other list\r\n              </Button>\r\n            )}\r\n          </div>\r\n\r\n          {/* <Breadcrumb match={match} /> */}\r\n\r\n          <Nav tabs className=\"separator-tabs ml-0 mb-5\">\r\n            {/* <NavItem>\r\n              <NavLink\r\n                location={{}}\r\n                to=\"#\"\r\n                className={classnames({\r\n                  active: activeTab === \"all\",\r\n                  \"nav-link\": true,\r\n                })}\r\n                onClick={() => changeTab(\"all\")}\r\n              >\r\n                <i className=\"iconsminds-align-justify-all text-primary\" />\r\n                All\r\n              </NavLink>\r\n            </NavItem> */}\r\n            {role !== \"REALESTATE\" && (\r\n              <NavItem>\r\n                <NavLink\r\n                  location={{}}\r\n                  to=\"#\"\r\n                  className={classnames({\r\n                    active: activeTab === \"job\",\r\n                    \"nav-link\": true,\r\n                  })}\r\n                  onClick={() => changeTab(\"job\")}\r\n                >\r\n                  <i className=\"iconsminds-management text-primary\" />\r\n                  Job\r\n                </NavLink>\r\n              </NavItem>\r\n            )}\r\n\r\n            {role !== \"HR\" && (\r\n              <NavItem>\r\n                <NavLink\r\n                  location={{}}\r\n                  to=\"#\"\r\n                  className={classnames({\r\n                    active: activeTab === \"stay\",\r\n                    \"nav-link\": true,\r\n                  })}\r\n                  onClick={() => changeTab(\"stay\")}\r\n                >\r\n                  <i className=\"iconsminds-building text-primary\" />\r\n                  Stay\r\n                </NavLink>\r\n              </NavItem>\r\n            )}\r\n\r\n            {role !== \"HR\" && role !== \"REALESTATE\" && (\r\n              <NavItem>\r\n                <NavLink\r\n                  location={{}}\r\n                  to=\"#\"\r\n                  className={classnames({\r\n                    active: activeTab === \"others\",\r\n                    \"nav-link\": true,\r\n                  })}\r\n                  onClick={() => changeTab(\"others\")}\r\n                >\r\n                  <i className=\"iconsminds-testimonal text-primary\" />\r\n                  Others\r\n                </NavLink>\r\n              </NavItem>\r\n            )}\r\n          </Nav>\r\n\r\n          <TabContent activeTab={activeTab}>\r\n            {activeTab === \"all\" && (\r\n              <TabPane tabId=\"all\">\r\n                <All />\r\n              </TabPane>\r\n            )}\r\n            {activeTab === \"job\" && (\r\n              <TabPane tabId=\"job\">\r\n                <JobListing isPosted={isPosted} />\r\n              </TabPane>\r\n            )}\r\n            {activeTab === \"stay\" && (\r\n              <TabPane tabId=\"stay\">\r\n                <StayListing isPosted={isPosted} />\r\n              </TabPane>\r\n            )}\r\n            {activeTab === \"others\" && (\r\n              <TabPane tabId=\"others\">\r\n                <OtherListing isPosted={isPosted} />\r\n              </TabPane>\r\n            )}\r\n          </TabContent>\r\n        </Colxx>\r\n      </Row>\r\n      <Modal size=\"lg\" isOpen={modal} toggle={() => setModal(!modal)}>\r\n        <ModalHeader className=\"pb-1\" toggle={() => setModal(!modal)}>\r\n          <h1 className=\"font-weight-semibold\">{modalTitle}</h1>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          {listingType === \"job\" && (\r\n            <JobPosting closeModal={toggleModalState} />\r\n          )}\r\n          {listingType === \"stay\" && (\r\n            <StayPosting closeModal={toggleModalState} />\r\n          )}\r\n          {/* {listingType === \"others\" && <OtherPosting />} */}\r\n          {listingType === \"others\" && (\r\n            <OtherPosting closeModal={toggleModalState} />\r\n          )}\r\n        </ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default injectIntl(DetailsAltPages);\r\n","import { createClient, createMicrophoneAndCameraTracks } from \"agora-rtc-react\";\r\n\r\nconst appId = \"4e6374a1eddd4d20a604fb0513fae8fb\";\r\n// const token =\r\n//   \"0064e6374a1eddd4d20a604fb0513fae8fbIAAZykswKKEI2Y1qDUtXXnniTrssT5UJoTcO5snziqLZ6U8CiV63SH0QIgB86VDgxGM6ZgQAAQDEYzpmAgDEYzpmAwDEYzpmBADEYzpm\"\r\n  \r\n\r\nexport const config = { mode: \"rtc\", codec: \"vp8\", appId };\r\nexport const useClient = createClient(config);\r\nexport const useMicrophoneAndCameraTracks = createMicrophoneAndCameraTracks();\r\n// export const channelName = \"7d72365eb983485397e3e3f9d460bdda\";","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Button } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useClient } from \"./settings\";\r\n\r\nconst Controls = (props) => {\r\n  const client = useClient();\r\n  const { tracks, setStart, setInCall, id, setStatus, sid } = props;\r\n  const [trackState, setTrackState] = useState({ video: true, audio: true });\r\n\r\n  const mute = async (type) => {\r\n    if (type === \"audio\") {\r\n      await tracks[0].setEnabled(!trackState.audio);\r\n      setTrackState((ps) => {\r\n        return { ...ps, audio: !ps.audio };\r\n      });\r\n    } else if (type === \"video\") {\r\n      await tracks[1].setEnabled(!trackState.video);\r\n      setTrackState((ps) => {\r\n        return { ...ps, video: !ps.video };\r\n      });\r\n    }\r\n  };\r\n  const history = useHistory();\r\n  const leaveChannel = async () => {\r\n    await client.leave();\r\n    setStatus(\"DISCONNECTED\")\r\n    client.removeAllListeners();\r\n    tracks[0].close();\r\n    tracks[1].close();\r\n    setStart(false);\r\n    setInCall(false);\r\n    history.push(`/app/callcompleted/${id}/${sid}`);\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row md={6} className=\"align-items-center mt-2\">\r\n        <Col md={3} />\r\n        <Col md={2} xs={4}>\r\n          <Button\r\n            outline\r\n            color=\"primary\"\r\n            onClick={() => mute(\"audio\")}\r\n            className=\"icon-button\"\r\n          >\r\n            {trackState.audio ? (\r\n              // <i className=\"simple-icon-microphone \" />\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-mic\" viewBox=\"0 0 16 20\">\r\n  <path d=\"M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5\"/>\r\n  <path d=\"M10 8a2 2 0 1 1-4 0V3a2 2 0 1 1 4 0zM8 0a3 3 0 0 0-3 3v5a3 3 0 0 0 6 0V3a3 3 0 0 0-3-3\"/>\r\n</svg>\r\n            ) : (\r\n              // <i className=\"simple-icon-microphone\" />\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-mic-mute\" viewBox=\"0 0 16 20\">\r\n  <path d=\"M13 8c0 .564-.094 1.107-.266 1.613l-.814-.814A4 4 0 0 0 12 8V7a.5.5 0 0 1 1 0zm-5 4c.818 0 1.578-.245 2.212-.667l.718.719a5 5 0 0 1-2.43.923V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 1 0v1a4 4 0 0 0 4 4m3-9v4.879l-1-1V3a2 2 0 0 0-3.997-.118l-.845-.845A3.001 3.001 0 0 1 11 3\"/>\r\n  <path d=\"m9.486 10.607-.748-.748A2 2 0 0 1 6 8v-.878l-1-1V8a3 3 0 0 0 4.486 2.607m-7.84-9.253 12 12 .708-.708-12-12z\"/>\r\n</svg>\r\n            )}\r\n          </Button>\r\n        </Col>\r\n        <Col md={2} xs={4}>\r\n          <Button\r\n            outline\r\n            color=\"primary\"\r\n            onClick={() => mute(\"video\")}\r\n            className=\"icon-button\"\r\n          >\r\n            {trackState.video ? (\r\n              // <i className=\"simple-icon-camrecorder \" />\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-camera-video\" viewBox=\"0 0 16 20\">\r\n  <path fillRule=\"evenodd\" d=\"M0 5a2 2 0 0 1 2-2h7.5a2 2 0 0 1 1.983 1.738l3.11-1.382A1 1 0 0 1 16 4.269v7.462a1 1 0 0 1-1.406.913l-3.111-1.382A2 2 0 0 1 9.5 13H2a2 2 0 0 1-2-2zm11.5 5.175 3.5 1.556V4.269l-3.5 1.556zM2 4a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h7.5a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1z\"/>\r\n</svg>\r\n            ) : (\r\n              // <i className=\"simple-icon-camrecorder\" />\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-camera-video-off\" viewBox=\"0 0 16 20\">\r\n  <path fillRule=\"evenodd\" d=\"M10.961 12.365a2 2 0 0 0 .522-1.103l3.11 1.382A1 1 0 0 0 16 11.731V4.269a1 1 0 0 0-1.406-.913l-3.111 1.382A2 2 0 0 0 9.5 3H4.272l.714 1H9.5a1 1 0 0 1 1 1v6a1 1 0 0 1-.144.518zM1.428 4.18A1 1 0 0 0 1 5v6a1 1 0 0 0 1 1h5.014l.714 1H2a2 2 0 0 1-2-2V5c0-.675.334-1.272.847-1.634zM15 11.73l-3.5-1.555v-4.35L15 4.269zm-4.407 3.56-10-14 .814-.58 10 14z\"/>\r\n</svg>\r\n            )}\r\n          </Button>\r\n          {/* <span onClick={() => mute(\"video\")}><i className=\"simple-icon-camrecorder \" /></span> */}\r\n          {/* <span\r\n            role=\"button\"\r\n            tabIndex={0}\r\n            onClick={() => mute(\"video\")}\r\n            onKeyPress={(event) => {\r\n              if (event.key === \"Enter\" || event.key === \" \") {\r\n                mute(\"video\");\r\n              }\r\n            }}\r\n          >\r\n            <i className=\"simple-icon-camrecorder\" />\r\n          </span> */}\r\n        </Col>\r\n        <Col md={2} xs={4}>\r\n          <Button color=\"danger\" onClick={() => leaveChannel()}  className=\"icon-button\" >\r\n            <i className=\"simple-icon-call-end\" />{\" \"}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","import React from \"react\";\r\nimport { AgoraVideoPlayer } from \"agora-rtc-react\";\r\n// import { Container, Row, Col } from \"reactstrap\";\r\n\r\nexport default function Video(props) {\r\n  const { users, tracks, bookedByName, createdByName } = props;\r\n  const currentUser = localStorage.getItem(\"userName\")\r\n  const otherUser = currentUser === createdByName ? bookedByName : createdByName;\r\n// console.log(\"otherUsernamebook\", bookedByName)\r\n// console.log(\"otherUsernamecreate\", createdByName)\r\nconsole.log(\"lenth\", users)\r\n  return (\r\n   \r\n    <div className=\"container-fluid\" style={{ height: \"100%\" }}>\r\n      <div className=\"row\" style={{ height: \"100%\" }}>\r\n        <div className='col-xs-6' style={{ position: \"relative\" }}>\r\n          <AgoraVideoPlayer\r\n            videoTrack={tracks[1]}\r\n            style={{ height: \"100%\", width: \"100%\", border: \"5px solid white\" }}\r\n          />\r\n          <div style={{ position: \"absolute\", bottom: 10, left: 10, color: \"white\", backgroundColor: \"rgba(0,0,0,0.5)\", padding: \"5px\" }}>\r\n            {currentUser}\r\n          </div>\r\n        </div>\r\n        {/* {users.length > 0 &&\r\n          users.map((user) => {\r\n            console.log(\"uuser\", users)\r\n            if (user.videoTrack) {\r\n              return (\r\n                <div className='col-xs-6' key={user.uid}>\r\n                  <AgoraVideoPlayer\r\n                    videoTrack={user.videoTrack}\r\n                    style={{ height: \"100%\", width: \"100%\" }}\r\n                  />\r\n                </div>\r\n              );\r\n                      // eslint-disable-next-line\r\n            } else return null;\r\n          }\r\n          )} */}\r\n           <div className='col-xs-6' style={{ position: \"relative\" }}>\r\n          {users.length > 0 && users[0].videoTrack ? (\r\n            <AgoraVideoPlayer\r\n              videoTrack={users[0].videoTrack}\r\n              style={{ height: \"100%\", width: \"100%\", border: \"5px solid white\" }}\r\n            />\r\n          ) : (\r\n            <div style={{ height: \"100%\", width: \"100%\", border: \"5px solid white\", backgroundColor: \"#f0f0f0\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-camera-video-off\" viewBox=\"0 0 16 20\">\r\n                <path fillRule=\"evenodd\" d=\"M10.961 12.365a2 2 0 0 0 .522-1.103l3.11 1.382A1 1 0 0 0 16 11.731V4.269a1 1 0 0 0-1.406-.913l-3.111 1.382A2 2 0 0 0 9.5 3H4.272l.714 1H9.5a1 1 0 0 1 1 1v6a1 1 0 0 1-.144.518zM1.428 4.18A1 1 0 0 0 1 5v6a1 1 0 0 0 1 1h5.014l.714 1H2a2 2 0 0 1-2-2V5c0-.675.334-1.272.847-1.634zM15 11.73l-3.5-1.555v-4.35L15 4.269zm-4.407 3.56-10-14 .814-.58 10 14z\"/>\r\n              </svg>\r\n            </div>\r\n          )}\r\n          <div style={{ position: \"absolute\", bottom: 10, left: 10, color: \"white\", backgroundColor: \"rgba(0,0,0,0.5)\", padding: \"5px\" }}>\r\n            {otherUser}\r\n          </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n// import { Container, Row, Col } from \"reactstrap\";\r\n// import AgoraRTC from \"agora-rtc-react\"\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Button } from \"reactstrap\";\r\nimport { useClient, useMicrophoneAndCameraTracks } from \"./settings\";\r\n\r\nimport Controls from \"./Controls\";\r\nimport Video from \"./Video\";\r\n\r\nconst VideoCallCtrl = (props) => {\r\n  const { setInCall } = props;\r\n  const [users, setUsers] = useState([]);\r\n  const [start, setStart] = useState(false);\r\n  // const [connectionState, setConnectionState] = useState(\"\");\r\n  const [callStartTime, setCallStartTime] = useState(null);\r\n  // const [startTime, setStartTime] = useState(0)\r\n  const [endTime, setEndTime] = useState(0);\r\n  // const [callEndTime, setCallEndTime] = useState(null);\r\n  const [timeRemaining, setTimeRemaining] = useState(0);\r\n  const [channelName, setChannelName] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [rtcToken, setRtcToken] = useState(null);\r\n  const [appId, setAppId] = useState(null);\r\n  const [bookedByName, setBookedByName] = useState(\"\");\r\n  const [createdByName, setCreatedByName] = useState(\"\");\r\n  const client = useClient();\r\n  const { ready, tracks } = useMicrophoneAndCameraTracks();\r\n  const { userId, id } = useParams();\r\n  const history = useHistory();\r\n  const [readyForCall, setReadyForCall] = useState(false);\r\n  // const currentTime = Date.now();\r\n\r\n  //     const durationMs = currentTime - endTime;\r\n\r\n  //     const durationSec = durationMs / 1000;\r\n\r\n  //     setTimeRemaining(durationSec);\r\n\r\n  // console.log(callEndTime)\r\n  // console.log(\"userid:\", userId)\r\n  // console.log(\"iid\",id)\r\n  // console.log(\"user chk\", users);\r\n  // console.log(\"check status\", status);\r\n  const url = `${baseUrl}/api/userprofile/connect-to-videocall`;\r\n\r\n  //  const [rtcToken, setRtcToken] = useState()\r\n  //  console.log(\"rrtc\",rtcToken)\r\n  //  const getToken = async () => {\r\n  //    const url2 = `${baseUrl}/api/generate-rtc-token/${id}`;\r\n  //    const response = await axios.get(url2);\r\n  //    console.log(\"chkchk\",response)\r\n  //    setRtcToken(response.data.rtcToken);\r\n\r\n  //  };\r\n  // //  useEffect(() => {\r\n  //  getToken()\r\n  // //  }, []);\r\n\r\n  useEffect(() => {\r\n    const getToken = async () => {\r\n      try {\r\n        const url2 = `${baseUrl}/api/generate-rtc-token/${id}`;\r\n        const response = await axios.get(url2);\r\n        // console.log(\"resp\",response)\r\n        setRtcToken(response.data.rtcToken);\r\n        setChannelName(response.data.channelName);\r\n        setAppId(response.data.appId);\r\n        // setStartTime(response.data.startTime)\r\n        setEndTime(response.data.endTime);\r\n        setCreatedByName(response.data.createdByName);\r\n        setBookedByName(response.data.bookedByName);\r\n        setReadyForCall(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching RTC token:\", error);\r\n      }\r\n    };\r\n\r\n    getToken();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     console.log(\"fetchedData chk\");\r\n  //     try {\r\n  //       if (callStartTime && callEndTime && callEndTime > callStartTime) {\r\n  //         const duration = callEndTime - callStartTime;\r\n  //         console.log(\"Call duration:\", duration);\r\n  //         const response = await axios.post(\r\n  //           url,\r\n  //           {\r\n  //             id: 22,\r\n  //             status,\r\n  //             startTime: callStartTime,\r\n  //             endTime: callEndTime,\r\n  //             duration,\r\n  //           }\r\n  //         );\r\n  //         console.log(\"status post vid :\", response.data);\r\n  //         setTimeRemaining(response.data.remainingDuration);\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.error(\"Error:\", error);\r\n  //     }\r\n  //   };\r\n\r\n  //   if (callStartTime && callEndTime) {\r\n  //     fetchData();\r\n  //   }\r\n\r\n  //   const intervalId = setInterval(() => {\r\n  //     fetchData();\r\n  //   }, 300000);\r\n\r\n  //   return () => {\r\n  //     console.log(\"Clearing interval chk\");\r\n  //     clearInterval(intervalId);\r\n  //   };\r\n  // }, [callStartTime]);\r\n\r\n  function getRoleRes() {\r\n    return localStorage.getItem(\"roleRes\");\r\n  }\r\n\r\n  const roleRes = getRoleRes();\r\n\r\n  useEffect(() => {\r\n    if (roleRes.includes(\"USER\")) {\r\n      const postData = async () => {\r\n        console.log(\"fetchedData chk\");\r\n        try {\r\n          if (callStartTime) {\r\n            const endTime1 = Date.now();\r\n            const duration = endTime1 - callStartTime;\r\n            console.log(\"Call duration:\", duration);\r\n            const response = await axios.post(url, {\r\n              id,\r\n              status,\r\n            });\r\n            console.log(\"status post vid :\", response.data.remainingDuration);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error:\", error);\r\n        }\r\n      };\r\n      postData();\r\n    }\r\n    // const intervalId = setInterval(() => {\r\n    //   postData();\r\n    // }, 300000);\r\n    // return () => {\r\n    //   console.log(\"Clearing interval chk\");\r\n    //   clearInterval(intervalId);\r\n    // };\r\n  }, [status]);\r\n\r\n  useEffect(() => {\r\n    const init = async (name) => {\r\n      client.on(\"user-joined\", () => {\r\n        if (!callStartTime) {\r\n          setCallStartTime(Date.now());\r\n          setStatus(\"CONNECTED\");\r\n          // console.log(\"user joined cc\");\r\n        }\r\n      });\r\n\r\n      client.on(\"user-left\", () => {\r\n        if (users.length === 1) {\r\n          client.leave();\r\n          // setCallStartTime(null);\r\n          // setCallEndTime(Date.now());\r\n          setStatus(\"DISCONNECTED\");\r\n          // console.log(\"user left cc\");\r\n        }\r\n      });\r\n\r\n      client.on(\"connection-state-change\", (state) => {\r\n        console.log(\"Connection state changed:\", state);\r\n        // setConnectionState(state);\r\n      });\r\n\r\n      client.on(\"user-published\", async (user, mediaType) => {\r\n        await client.subscribe(user, mediaType);\r\n        if (mediaType === \"video\") {\r\n          setUsers((prevUsers) => {\r\n            return [...prevUsers, user];\r\n          });\r\n        }\r\n        if (mediaType === \"audio\") {\r\n          user.audioTrack.play();\r\n        }\r\n      });\r\n\r\n      client.on(\"user-unpublished\", (user, mediaType) => {\r\n        if (mediaType === \"audio\") {\r\n          if (user.audioTrack) user.audioTrack.stop();\r\n        }\r\n        if (mediaType === \"video\") {\r\n          setUsers((prevUsers) => {\r\n            return prevUsers.filter((User) => User.uid !== user.uid);\r\n          });\r\n        }\r\n      });\r\n\r\n      const disconnectRemainingUser = () => {\r\n        setStatus(\"DISCONNECTED\");\r\n        client.leave();\r\n        client.removeAllListeners();\r\n        tracks[0].close();\r\n        tracks[1].close();\r\n        setStart(false);\r\n        setInCall(false);\r\n        history.push(`/app/callcompleted/${userId}/${id}`);\r\n      };\r\n\r\n      // client.on(\"user-left\", (user) => {\r\n      //   setUsers((prevUsers) => {\r\n      //     return prevUsers.filter((User) => User.uid !== user.uid);\r\n      //   });\r\n      // });\r\n      client.on(\"user-left\", (user) => {\r\n        setUsers((prevUsers) =>\r\n          prevUsers.filter((User) => User.uid !== user.uid)\r\n        );\r\n\r\n        if (users.length === 1) {\r\n          disconnectRemainingUser();\r\n        }\r\n      });\r\n\r\n      try {\r\n        await client.join(appId, name, rtcToken, null);\r\n      } catch (error) {\r\n        console.log(\"error\");\r\n      }\r\n\r\n      if (tracks) await client.publish([tracks[0], tracks[1]]);\r\n      setStart(true);\r\n    };\r\n\r\n    if (ready && tracks) {\r\n      try {\r\n        init(channelName);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }, [\r\n    readyForCall,\r\n    channelName,\r\n    client,\r\n    ready,\r\n    tracks,\r\n    users.length,\r\n    rtcToken,\r\n  ]);\r\n\r\n  const iTime = new Date(parseInt(callStartTime, 10));\r\n\r\n  const hours = iTime.getHours() % 12 || 12;\r\n  const minutes = String(iTime.getMinutes()).padStart(2, \"0\");\r\n  const period = iTime.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n  const initiatedTime = `${hours}:${minutes} ${period}`;\r\n\r\n  // console.log(initiatedTime);\r\n\r\n  useEffect(() => {\r\n    let timerId;\r\n    if (timeRemaining > 0) {\r\n      timerId = setInterval(() => {\r\n        setTimeRemaining((prevTime) => prevTime - 1);\r\n      }, 1000);\r\n    }\r\n\r\n    return () => {\r\n      if (timerId) {\r\n        clearInterval(timerId);\r\n      }\r\n    };\r\n  }, [timeRemaining]);\r\n\r\n  // useEffect(() => {\r\n  //   if (connectionState === \"CONNECTED\") {\r\n  //     setStatus(\"CALL_IN_PROGRESS\");\r\n  //   }\r\n  //   if (callStartTime) {\r\n  //     setStatus(\"BOTH_JOINED\");\r\n  //   } else if (connectionState === \"DISCONNECTED\") {\r\n  //     setStatus(\"CALL_ENDED\");\r\n  //   }\r\n  // }, [connectionState]);\r\n\r\n  // const minutes1 = Math.floor(timeRemaining / 60);\r\n  // const seconds = timeRemaining % 60;\r\n  // const formattedTimeRemaining = `${minutes1}:${\r\n  //   seconds < 10 ? \"0\" : \"\"\r\n  // }${seconds}`;\r\n  // const callCurrentTime = Date.now()\r\n\r\n  // const callTimeRemaining = endTime - callCurrentTime\r\n  // const minutesRemaining = Math.floor(callTimeRemaining / 1000 / 60);\r\n\r\n  const [minutesRemaining1, setMinutesRemaining1] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // const endTime = 1716544815000;\r\n    const updateRemainingTime = () => {\r\n      const callCurrentTime = Date.now();\r\n      const callTimeRemaining = endTime - callCurrentTime;\r\n      const minutesRemaining = Math.max(\r\n        0,\r\n        Math.floor(callTimeRemaining / 1000 / 60)\r\n      );\r\n      setMinutesRemaining1(minutesRemaining);\r\n    };\r\n\r\n    updateRemainingTime();\r\n    const intervalId = setInterval(updateRemainingTime, 60000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [endTime]);\r\n\r\n  return (\r\n    // <Container fluid style={{ height: \"100%\" }}>\r\n    //   <Row style={{ height: \"5%\" }}>\r\n    //     {ready && tracks && (\r\n    //       <Col>\r\n    //         <Controls tracks={tracks} setStart={setStart} setInCall={setInCall} />\r\n    //       </Col>\r\n    //     )}\r\n    //   </Row>\r\n    //   <Row style={{ height: \"95%\" }}>\r\n    //     {start && tracks && <Video tracks={tracks} users={users} />}\r\n    //   </Row>\r\n    // </Container>\r\n    <div className=\"container-fluid\" style={{ height: \"75vh\" }}>\r\n      <div className=\"row p-0 d-flex justify-content-between\">\r\n        {/* <h4 className=\"mr-auto\">Initiated Time: {initiatedTime}</h4> */}\r\n        {callStartTime && (\r\n          <h4 className=\"mr-auto text-muted\">\r\n            Initiated Time: {initiatedTime}\r\n          </h4>\r\n        )}\r\n        {/* <h4>\r\n          Time Remaining :{\" \"}\r\n          <span className=\"text-danger\">{minutesRemaining1}</span>\r\n        </h4> */}\r\n        {minutesRemaining1 &&\r\n        minutesRemaining1 > 0 &&\r\n        minutesRemaining1 <= 10 ? (\r\n          // <div>Time Remaining : {minutesRemaining1} minutes</div>\r\n          <h4>\r\n            Time Remaining :{\" \"}\r\n            <span className=\"text-danger\">{minutesRemaining1} minutes</span>{\" \"}\r\n            {roleRes.includes(\"USER\") ? (\r\n              <span>\r\n                Extend by 15 minutes?{\" \"}\r\n                <Button color=\"primary\">Pay from wallet</Button>\r\n              </span>\r\n            ) : null}\r\n          </h4>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {minutesRemaining1 &&\r\n        roleRes.includes(\"USER\") &&\r\n        minutesRemaining1 === 0 ? (\r\n          <div>\r\n            <h4>\r\n              Extend by 15 minutes?{\" \"}\r\n              <Button color=\"primary\">Pay from wallet</Button>\r\n            </h4>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <div className=\"row\" style={{ height: \"90%\" }}>\r\n        {start && tracks ? (\r\n          <Video\r\n            tracks={tracks}\r\n            users={users}\r\n            createdByName={createdByName}\r\n            bookedByName={bookedByName}\r\n          />\r\n        ) : (\r\n          <div className=\"loading\" />\r\n        )}\r\n      </div>\r\n      <div className=\"row ml-2\" style={{ height: \"10%\" }}>\r\n        {ready && tracks && (\r\n          <>\r\n            <Controls\r\n              id={userId}\r\n              sid={id}\r\n              tracks={tracks}\r\n              setStart={setStart}\r\n              setInCall={setInCall}\r\n              setStatus={setStatus}\r\n            />\r\n            {/* <p>Connection State: {connectionState}</p> */}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCallCtrl;\r\n\r\n// import React from 'react'\r\n\r\n// const [minutesRemaining, setMinutesRemaining] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     const endTime = 1716544815000; // Example end time\r\n//     const updateRemainingTime = () => {\r\n//       const callCurrentTime = Date.now();\r\n//       const callTimeRemaining = endTime - callCurrentTime;\r\n//       const minutesRemaining = Math.max(0, Math.floor(callTimeRemaining / 1000 / 60));\r\n//       setMinutesRemaining(minutesRemaining);\r\n//     };\r\n\r\n//     // Update the time remaining initially and then every minute\r\n//     updateRemainingTime();\r\n//     const intervalId = setInterval(updateRemainingTime, 60000); // 60000 milliseconds = 1 minute\r\n\r\n//     // Cleanup function to clear the interval when component unmounts\r\n//     return () => clearInterval(intervalId);\r\n//   }, []);\r\n","// import React,{ useState } from \"react\";\r\n// import { Button } from \"reactstrap\";\r\n// import VideoCall from \"./VideoCall\";\r\n\r\n// function App() {\r\n//   const [inCall, setInCall] = useState(false);\r\n\r\n//   return (\r\n//     <div className=\"App\" style={{ height: \"100%\" }}>\r\n//       {inCall ? (\r\n//         <VideoCall setInCall={setInCall} />\r\n//       ) : (\r\n//         <Button\r\n//           variant=\"contained\"\r\n//           color=\"primary\"\r\n//           onClick={() => setInCall(true)}\r\n//         >\r\n//           Join Call\r\n//         </Button>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n// import React, { useState } from \"react\";\r\n// // import { Button } from \"reactstrap\";\r\n// import {useParams} from \"react-router-dom\";\r\n\r\n// import VideoCallCtrl from \"./VideoCallCtrl\";\r\n\r\n// const VideoCall = () => {\r\n//   const [inCall, setInCall] = useState(false);\r\n//   const {id}=useParams();\r\n\r\n// console.log(\"idd:\", id)\r\n\r\n//   // useEffect(() => {\r\n    \r\n//   //   const getIDFromURL = () => {\r\n//   //     const searchParams = new URLSearchParams(location.search);\r\n//   //     const id = searchParams.get(\"id\");\r\n      \r\n//   //     console.log(\"id from url\", id);\r\n//   //   };\r\n\r\n//   //   getIDFromURL(); \r\n//   // }, [location]);\r\n\r\n//   const handleJoinCall = () => {\r\n//     setInCall(false);\r\n//     setTimeout(() => {\r\n//       setInCall(true);\r\n//     }, 2000);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\" style={{ height: \"100%\" }}>\r\n//       {!inCall && (\r\n//         <>\r\n//           {/* <h1>Connecting...</h1> */}\r\n//           <div className=\"loading\" />\r\n//           {setTimeout(handleJoinCall)}\r\n//         </>\r\n//       )}\r\n//       {inCall && <VideoCallCtrl id={id} setInCall={setInCall} />}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default VideoCall;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport VideoCallCtrl from \"./VideoCallCtrl\";\r\n\r\nconst VideoCall = () => {\r\n  const [inCall, setInCall] = useState(false);\r\n  const { id, sid } = useParams();\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (!inCall) {\r\n      timer = setTimeout(() => {\r\n        setInCall(true);\r\n      }, 2000);\r\n    }\r\n\r\n    return () => {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n      }\r\n    };\r\n  }, [inCall]);\r\n\r\n  return (\r\n    <div className=\"App\" style={{ height: \"100%\" }}>\r\n      {!inCall && (\r\n        <>\r\n          {/* <h1>Connecting...</h1> */}\r\n          <div className=\"loading\" />\r\n        </>\r\n      )}\r\n      {inCall && <VideoCallCtrl id={id} sid={sid} setInCall={setInCall} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCall;\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import VideoCall from \"./VideoCall\";\r\n\r\n// function App() {\r\n//   const [inCall, setInCall] = useState(false);\r\n//   const [showConnectingText, setShowConnectingText] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     let timer;\r\n//     if (inCall) {\r\n//       timer = setTimeout(() => {\r\n//         setShowConnectingText(true);\r\n//       }, 3000);\r\n//     }\r\n//     return () => clearTimeout(timer);\r\n//   }, [inCall]);\r\n\r\n//   return (\r\n//     <div className=\"App\" style={{ height: \"100%\" }}>\r\n//       {/* eslint-disable-next-line */}\r\n//       {showConnectingText ? (\r\n//         <p>Connecting...</p>\r\n//       ) : inCall ? (\r\n//         <VideoCall setInCall={setInCall} />\r\n//       ) : null}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n","import React from \"react\";\r\nimport { Button, Input } from \"reactstrap\";\r\n\r\nconst SaySomething = ({\r\n  placeholder,\r\n  messageInput,\r\n  handleChatInputPress,\r\n  handleChatInputChange,\r\n  handleSendButtonClick,\r\n}) => {\r\n  return (\r\n    <div className=\"chat-input-container d-flex justify-content-between align-items-center\">\r\n      <Input\r\n        className=\"form-control flex-grow-1\"\r\n        type=\"text\"\r\n        placeholder={placeholder}\r\n        value={messageInput}\r\n        onKeyPress={(e) => handleChatInputPress(e)}\r\n        onChange={(e) => handleChatInputChange(e)}\r\n      />\r\n      <div>\r\n        {/* <Button outline color=\"primary\" className=\"icon-button large ml-1\">\r\n          <i className=\"simple-icon-paper-clip\" />\r\n        </Button> */}\r\n\r\n        <Button\r\n          color=\"primary\"\r\n          className=\"icon-button large ml-1\"\r\n          onClick={() => handleSendButtonClick()}\r\n          disabled={messageInput.trim() === \"\"}\r\n        >\r\n          <i className=\"simple-icon-arrow-right\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default React.memo(SaySomething);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { NavLink } from 'reactstrap';\r\n\r\nconst ApplicationMenu = ({ children }) => {\r\n  const containerRef = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleDocumentClick = (e) => {\r\n    if (isOpen) {\r\n      const container = containerRef.current;\r\n      if (container.contains(e.target) || container === e.target) {\r\n        return;\r\n      }\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    ['click', 'touchstart'].forEach((event) =>\r\n      document.addEventListener(event, handleDocumentClick, false)\r\n    );\r\n\r\n    return () => {\r\n      ['click', 'touchstart'].forEach((event) =>\r\n        document.removeEventListener(event, handleDocumentClick, false)\r\n      );\r\n    };\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <div ref={containerRef} className={`app-menu ${isOpen ? 'shown' : ''}`}>\r\n      {children}\r\n      <NavLink\r\n        className=\"app-menu-button d-inline-block d-xl-none\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        <i className=\"simple-icon-options\" />\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApplicationMenu;\r\n","// import ThumbnailLetters from 'components/cards/ThumbnailLetters';\r\nimport React from 'react';\r\n\r\nconst ChatHeading = ({ name, thumb, lastSeenDate }) => {\r\n  return (\r\n    <>\r\n      <div className=\"d-flex flex-row chat-heading\">\r\n        <div className=\"d-flex\">\r\n          <img\r\n            alt={name}\r\n            src={thumb}\r\n            // className=\"img-thumbnail border-0 rounded-circle ml-0 mr-4 list-thumbnail align-self-center small\"\r\n            className=\" rounded-circle img-thumbnail border mr-4 mb-1\"\r\n            style={{ width: \"70px\", height: \"70px\", objectFit: \"cover\", overflow: \"hidden\"  }}\r\n          />\r\n          {/* <ThumbnailLetters\r\n          small\r\n                  rounded\r\n                  text={thumb}\r\n                  className=\"m-2\"\r\n                /> */}\r\n        </div>\r\n        <div className=\" d-flex min-width-zero\">\r\n          <div className=\"card-body pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\r\n            <div className=\"min-width-zero\">\r\n              <div>\r\n                <p className=\"list-item-heading mb-1 truncate \">{name}</p>\r\n              </div>\r\n              <p className=\"mb-0 text-muted text-small\">\r\n                {lastSeenDate === '0' ? '-' : lastSeenDate}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"separator mb-5\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ChatHeading);\r\n","/* eslint-disable*/\r\n/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Card, NavLink, Row, Spinner, TabContent, TabPane } from 'reactstrap';\r\nimport AC from 'agora-chat';\r\n\r\n\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nimport {\r\n  getContacts,\r\n  getConversations,\r\n  changeConversation,\r\n  addMessageToConversation,\r\n} from 'redux/actions';\r\n// import ChatApplicationMenu from 'containers/applications/ChatApplicationMenu';\r\n// import ChatHeading from 'components/applications/ChatHeading';\r\n// import MessageCard from 'components/applications/MessageCard';\r\nimport SaySomething from 'components/applications/SaySomething';\r\nimport TimestampConverter from '../Calculation/TimestampConverter';\r\nimport axios from 'axios';\r\nimport { appKey, baseUrl } from 'constants/defaultValues';\r\nimport ApplicationMenu from 'components/common/ApplicationMenu';\r\nimport ChatHeading from './ChatHeading';\r\nimport ThumbnailLetters from './ThumbnailLetters';\r\n// import ThumbnailLetters from 'components/cards/ThumbnailLetters';\r\n// import MessageCard from './MessageCard';\r\n\r\nconst ChatApp = ({\r\n  // intl,\r\n  // allContacts,\r\n  conversations,\r\n  loadingConversations,\r\n  loadingContacts,\r\n  currentUser,\r\n  selectedUser,\r\n  selectedUserId,\r\n\r\n  getContactsAction,\r\n  getConversationsAction,\r\n  changeConversationAction,\r\n  addMessageToConversationAction,\r\n}) => {\r\n  const [activeTab, setActiveTab] = useState('messages');\r\n  const [messageInput, setMessageInput] = useState('');\r\n  const scrollBarRef = useRef(null);\r\n  useEffect(() => {\r\n    document.body.classList.add('no-footer');\r\n    const currentUserId = 0;\r\n    getContactsAction();\r\n    getConversationsAction(currentUserId);\r\n\r\n    return () => {\r\n      document.body.classList.remove('no-footer');\r\n    };\r\n  }, [getContactsAction, getConversationsAction]);\r\n\r\n  const focusScrollBottom = () => {\r\n    setTimeout(() => {\r\n      if (scrollBarRef.current) {\r\n        scrollBarRef.current._ps.element.scrollTop =\r\n          scrollBarRef.current._ps.contentHeight;\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loadingConversations && loadingContacts && selectedUser == null) {\r\n      changeConversationAction(selectedUserId);\r\n      focusScrollBottom();\r\n    }\r\n  }, [\r\n    changeConversationAction,\r\n    loadingContacts,\r\n    loadingConversations,\r\n    selectedUser,\r\n    selectedUserId,\r\n  ]);\r\n\r\n\r\n  // const handleChatInputPress = (e) => {\r\n  //   if (e.key === 'Enter') {\r\n  //     if (messageInput.length > 0) {\r\n  //       addMessageToConversationAction(\r\n  //         currentUser.id,\r\n  //         selectedUser.id,\r\n  //         messageInput,\r\n  //         conversations\r\n  //       );\r\n  //       setMessageInput('');\r\n  //       setActiveTab('messages');\r\n  //       focusScrollBottom();\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  // const handleSendButtonClick = () => {\r\n  //   if (messageInput.length > 0) {\r\n  //     addMessageToConversationAction(\r\n  //       currentUser.id,\r\n  //       selectedUser.id,\r\n  //       messageInput,\r\n  //       conversations\r\n  //     );\r\n  //     setMessageInput('');\r\n  //     setActiveTab('messages');\r\n  //     focusScrollBottom();\r\n  //   }\r\n  // };\r\n\r\n  // const { messages } = intl;\r\n\r\n  const selectedConversation =\r\n    loadingConversations && loadingContacts && selectedUser\r\n      ? conversations.find(\r\n          (x) =>\r\n            x.users.includes(currentUser.id) &&\r\n            x.users.includes(selectedUser.id)\r\n        )\r\n      : null;\r\n\r\n      // const role = localStorage.getItem(\"roleRes\");\r\n  const {pid}=useParams();\r\n\r\n      const [connection, setConnection] = useState(null);\r\n      const [userId, setUserId] = useState(\"\");\r\n      const [token, setToken] = useState(\"\");\r\n      const [peerId, setPeerId] = useState(pid);\r\n      const tokenRes = localStorage.getItem(\"tokenRes\")\r\n      // const [appKey, setAppKey] = useState(\"\")\r\n      const [fullName, setFullName] = useState([])\r\n\r\n//       console.log(\"fullName\", fullName)\r\n//       console.log(\"peer\", peerId)\r\n// if(fullName.length > 0){\r\n//       console.log(\"name\",fullName.find(user => user.username === peerId).name)\r\n// }\r\n      useEffect(() => {\r\n        // const params = {username: peerId};\r\n        // console.log(\"start\")\r\n\r\n        const UserNameUrl = `${baseUrl}/api/chat/user/details?username=${peerId}`\r\n        const fetchData = async () => {\r\n          try {\r\n            const response = await axios.get(UserNameUrl);\r\n            // console.log(\"namechk\",response.data);\r\n            setFullName(response.data);\r\n          } catch (error) {\r\n            console.error(\"An error occurred:\", error);\r\n          }\r\n        };\r\n    \r\n        fetchData(); \r\n      }, [peerId]); \r\n\r\n\r\n      useEffect(() => {\r\n        const fetchData = async () => {\r\n          try {\r\n            \r\n            const response = await axios.get(`${baseUrl}/api/chat/usertoken`, {\r\n            // const response = await axios.get(`${baseUrl}/api/chat/lawyer/${pid}/usertoken`, {\r\n              headers: {\r\n                'Authorization': `Bearer ${tokenRes}`, \r\n              }\r\n            });\r\n            setToken(response.data.token);\r\n            setUserId(response.data.chatUserName)\r\n            // setAppKey(response.data.appKey)\r\n            // setPeerId(response.data.targetChatUserName)\r\n            // console.log(\"run\",response)\r\n          } catch (err) {\r\n            console.error(err);\r\n          }\r\n        };\r\n    \r\n        fetchData();\r\n      }, []); \r\n\r\n      \r\n \r\n      \r\n      \r\n  const [peerMessage, setPeerMessage] = useState('');\r\n  const [logs, setLogs] = useState([]);\r\n  const [serverConversations, setServerConversations] = useState([]);\r\n  const [loading, setLoading] = useState(true)\r\n  const [loadingConversation, setLoadingConversation] = useState(true)\r\n  const [chatLoading, setChatLoading] =useState(true)\r\n  const [conversationIds, setConversationIds] = useState([]);\r\n  const [conversationFullName,setConversationFullName] = useState([]);\r\n  // const [historyMessages, setHistoryMessages] = useState([]); \r\n\r\n  // console.log(\"conversation\", serverConversations)\r\n  // console.log(\"conversationIds\", conversationIds)\r\n  // console.log(\"conversationFullName\", conversationFullName);\r\n\r\n\r\n  useEffect(() => {\r\n    const ids = serverConversations.map(conversation => conversation.conversationId);\r\n    setConversationIds(ids);\r\n  }, [serverConversations]);\r\n\r\n  useEffect(() => {\r\n    \r\n    const fetchData = async () => {\r\n      try {\r\n        const params = new URLSearchParams();\r\n        conversationIds.forEach(id => params.append('username', id));\r\n        const UserNameUrl = `${baseUrl}/api/chat/user/details?${params.toString()}`;\r\n  \r\n        const response = await axios.get(UserNameUrl);\r\n        // console.log(\"conversationFullName\", response.data);\r\n        setConversationFullName(response.data);\r\n      } catch (error) {\r\n        console.error(\"An error occurred:\", error);\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, [conversationIds]);\r\n\r\n  // useEffect(() => {\r\n  //   // const params = {username: peerId};\r\n\r\n  //   const UserNameUrl = `${baseUrl}/api/chat/user/details?username=${conversationIds}`\r\n  //   const fetchData = async () => {\r\n  //     try {\r\n  //       const response = await axios.get(UserNameUrl);\r\n  //       console.log(\"conversationFullName\",response.data);\r\n  //       setConversationFullName(response.data);\r\n  //     } catch (error) {\r\n  //       console.error(\"An error occurred:\", error);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchData(); \r\n  // }, [conversationIds]); \r\n\r\n  // console.log(\"log\",logs)\r\n\r\n  // const appKey = '611104323#1329874';\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      const conn = new AC.connection({\r\n        appKey: appKey,\r\n      });\r\n  \r\n      conn.addEventHandler('connection&message', {\r\n        onConnected: () => {\r\n          // addLog('Connect success!');\r\n          // fetchHistoryMessages(); \r\n          conn.getServerConversations({ pageSize: 50, cursor: '' })\r\n            .then((res) => {\r\n              // console.log(\"conversation\", res.data.conversations);\r\n              setServerConversations(res.data.conversations);\r\n              setLoadingConversation(false);\r\n              // addLog(\"\");\r\n            })\r\n            .catch((error) => {\r\n              console.log('Error fetching server conversations:', error);\r\n            });\r\n          //   if (peerId !== undefined) {\r\n  \r\n          // conn.addContact(peerId, \"hi\")\r\n          //   .then((res) => {\r\n          //     console.log(\"addcontact\", res);\r\n          //     console.log(\"addcontactName\", peerId);\r\n          //   });\r\n          // }\r\n  \r\n          if (peerId !== undefined) {\r\n            conn.getHistoryMessages({\r\n              targetId: peerId, // The user ID of the peer user for one-to-one chat or group ID for group chat.\r\n              chatType: 'singleChat', // The chat type: `singleChat` for one-to-one chat or `groupChat` for group chat.\r\n              pageSize: 20, // The number of messages to retrieve per page. The value range is [1,50] and the default value is 20.\r\n              cursor: '',\r\n              searchDirection: 'down', // The message search direction: `up` means to retrieve messages in the descending order of the message timestamp and `down` means to retrieve messages in the ascending order of the message timestamp.\r\n              searchOptions: {\r\n                msgTypes: ['txt'], // An array of message types for query. If no value is passed in, all types of message will be queried.\r\n                startTime: new Date('2024, 07, 17').getTime(), // The start timestamp for query. The unit is millisecond.\r\n                endTime: Date.now(), // The end timestamp for query. The unit is millisecond.\r\n              },\r\n            }).then((res) => {\r\n              // console.log(\"hist\",res)\r\n\r\n              const newLogs = res.messages.map((message) => (\r\n                <>\r\n                  {/* <strong><h4>{message.from === userId ? \"You\" : message.from}</h4></strong> <span className='text-muted'>{message.msg}</span> {\" \"} */}\r\n                  <strong><h4>{message.from === userId ? \"You\" : fullName.length > 0 ? fullName.find(user => user.username === message.from).name : message.from}</h4></strong> <span className='text-muted'>{message.msg}</span> {\" \"}\r\n                  <span className='text-muted text-right'><TimestampConverter timeStamp={message.time} format=\"datetime\" /></span>\r\n                </>\r\n              ));\r\n  \r\n              setLogs((prevLogs) => [...prevLogs, ...newLogs]);\r\n              setChatLoading(false);\r\n            })\r\n            .catch((error) => {\r\n              console.log('Error fetching historical messages:', error);\r\n            });\r\n          }\r\n        },\r\n      \r\n        // onDisconnected: () => {\r\n        //   // addLog('Logout!');\r\n        //   // addLog('Logout success!');\r\n        //   console.error(\"chat logout\")\r\n        // },\r\n        onTextMessage: (message) => {\r\n          // console.log(\"msg\", message);\r\n          const time = message.time;\r\n          \r\n          if (message.from === peerId) {\r\n            addLog(\r\n              <>\r\n                {/* <strong><h4>{message.from}</h4></strong>  <span className='text-muted'>{message.msg}</span>   */}\r\n                <strong><h4>{fullName.length > 0 ? fullName.find(user => user.username === message.from).name : message.from}</h4></strong>  <span className='text-muted'>{message.msg}</span>  \r\n                <span className='text-muted text-right'><TimestampConverter timeStamp={time} format=\"datetime\" /></span>\r\n              </>\r\n            );\r\n          }\r\n        },\r\n        onTokenWillExpire: () => {\r\n          // addLog('Token is about to expire');\r\n          console.error('Token is about to expire')\r\n        },\r\n        onTokenExpired: () => {\r\n          console.error('The token has expired')\r\n          // addLog('The token has expired');\r\n        },\r\n        onError: (error) => {\r\n          console.log('on error', error);\r\n        },\r\n      });\r\n  \r\n      setConnection(conn);\r\n      conn.open({\r\n        user: userId,\r\n        agoraToken: token,\r\n      });\r\n      setLoading(false);\r\n    }, 3000);\r\n  \r\n    return () => clearTimeout(timeoutId);\r\n  }, [peerId, userId, token, appKey,fullName]);\r\n\r\n\r\n  \r\n\r\n//   connection.getServerConversations({pageSize:50, cursor: ''}).then((res)=>{\r\n//     console.log(\"res\",res)\r\n// })\r\n\r\n  // const fetchHistoryMessages = () => {\r\n  //   if (!connection) return;\r\n\r\n  //   const options = {\r\n  //     targetId: peerId,\r\n  //     chatType: \"singleChat\",\r\n  //     pageSize: 20,\r\n  //     searchDirection: 'down',\r\n  //     searchOptions: {\r\n  //       from: userId,\r\n  //       msgTypes: ['txt'],\r\n  //       startTime: new Date('2024-05-17').getTime(),\r\n  //       endTime: new Date('2024-05-18').getTime(),\r\n  //     },                                                                // check the name and add log\r\n  //   };\r\n\r\n  //   connection.getHistoryMessages(options).then((messages) => {\r\n  //     console.log(\"Fetched historical messages\", messages);\r\n  //     setHistoryMessages(messages);\r\n  //     messages.forEach(message => {\r\n  //       addLog(`Historical message from: ${message.from} Message: ${message.msg}`);\r\n  //     });\r\n  //   }).catch((error) => {\r\n  //     console.log('Error fetching historical messages', error);\r\n  //   });\r\n  // };\r\n\r\n  const addLog = (message) => {\r\n    setLogs((prevLogs) => [...prevLogs, message]);\r\n  };\r\n\r\n  // const handleLogout = () => {\r\n  //   connection.close();\r\n  //   addLog('Logout');\r\n  // };\r\n\r\n  const handleSendMessage = () => {\r\n    const option = {\r\n      chatType: 'singleChat',\r\n      type: 'txt',\r\n      to: peerId,\r\n      msg: peerMessage,\r\n    };\r\n    const msg = AC.message.create(option);\r\n    connection\r\n      .send(msg)\r\n      .then(() => {\r\n        // console.log(\"sms\", msg);\r\n      \r\n        const time = msg.time;\r\n      \r\n        addLog(\r\n          <>\r\n            <strong><h4>{\"You\"}</h4></strong> <br /> <span className='text-muted'>{peerMessage}</span>  \r\n           <span className='text-muted text-right'> <TimestampConverter timeStamp={time} format=\"datetime\" /></span>\r\n          </>\r\n        );\r\n      \r\n        setPeerMessage('');\r\n      focusScrollBottom();\r\n\r\n      })\r\n      \r\n      .catch(() => {\r\n        console.log('send private text fail');\r\n      });\r\n  };\r\n\r\n  const handleConversationClick = (selectedUserId) => {\r\n    setChatLoading(true)\r\n    setPeerId(selectedUserId);\r\n    setLogs([]);\r\n    setFullName([]);\r\n    \r\n  };\r\n\r\n  const handleChatInputPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      if (peerMessage.length > 0) {\r\n        handleSendMessage();\r\n        setPeerMessage('');\r\n        setActiveTab('messages');\r\n        focusScrollBottom();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    focusScrollBottom();\r\n  }, [peerId, addLog]);\r\n \r\n\r\n  // return loadingConversations && loadingContacts ? (\r\n  return  (\r\n  <>\r\n  {loading ? (\r\n    <div className='loading' />\r\n    // <div className=\"d-flex justify-content-center align-items-center vh-70\">\r\n    //   <Spinner color=\"primary\" className=\"\" />\r\n    // </div>\r\n  ) : (\r\n      <Row className=\"app-row\">\r\n        <Colxx xxs=\"12\" className=\"chat-app\">\r\n          {peerId && loadingConversations && selectedUser && (\r\n                        <NavLink href=\"#\">\r\n            <ChatHeading\r\n              name={fullName.length > 0 ? fullName.find(user => user.username === peerId).name : peerId}\r\n              thumb={`${baseUrl}/${fullName.length > 0 ? fullName.find(user => user.username === peerId).imageUrl : peerId}`}\r\n              // lastSeenDate={selectedUser.lastSeenDate}\r\n            />\r\n            </NavLink>\r\n          )}\r\n\r\n        {!peerId && (\r\n          <>\r\n          <div className=\"d-flex justify-content-center align-items-center vh-70\">\r\n          <i className=\"simple-icon-bubbles display-1\" />\r\n        </div>\r\n          <h2 className='d-flex justify-content-center align-items-center'>Chat</h2>\r\n          </>\r\n        )}\r\n\r\n          {peerId && selectedConversation && (\r\n            <PerfectScrollbar\r\n              ref={scrollBarRef}\r\n              // containerRef={(ref) => {}}\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              {/* {selectedConversation.messages.map((item, index) => { */}\r\n              {/* {logs.map((log, index) => {\r\n                const sender = allContacts.find((x) => x.id === item.sender);\r\n                return (\r\n                  <MessageCard\r\n                    key={index}\r\n                    sender={sender}\r\n                    item={log}\r\n                    currentUserid={currentUser.id}\r\n                  />\r\n                );\r\n              })} */}\r\n              {chatLoading ? ( \r\n                // <div className='loading' />\r\n                <div className=\"d-flex justify-content-center mt-4\">\r\n              <Spinner color=\"primary\" className=\"mb-1\" />\r\n            </div>\r\n              ) : (\r\n              <div>\r\n        {logs.map((log, index) => (\r\n          <Card className=' mb-3  p-3' key={index}>{log}</Card>\r\n      //     <Card\r\n      //     index={index}\r\n      //   // className=\"d-inline-block mb-3 float-right\"\r\n      //   // className={`d-inline-block mb-3 float-${\r\n      //   //   item.sender !== currentUserid ? 'left' : 'right'\r\n      //   // }`}\r\n      // >\r\n      //   <CardBody>\r\n      //     {/* <div className=\"d-flex flex-row pb-1\"> */}\r\n      //       {/* <img\r\n      //         alt={sender.name}\r\n      //         src={sender.thumb}\r\n      //         className=\"img-thumbnail border-0 rounded-circle mr-3 list-thumbnail align-self-center xsmall\"\r\n      //       /> */}\r\n      //       {/* <div className=\" d-flex flex-grow-1 min-width-zero\">\r\n      //         <div className=\"m-2 pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\r\n      //           <div className=\"min-width-zero\">\r\n      //             <p className=\"mb-0 truncate list-item-heading\">\r\n      //               {log}\r\n      //             </p>\r\n      //           </div>\r\n      //         </div>\r\n      //       </div>\r\n      //     </div> */}\r\n\r\n      //     <div className=\"chat-text-left\">\r\n      //       <p className=\"mb-0 text-semi-muted\">{log}</p>\r\n      //     </div>\r\n      //   </CardBody>\r\n      // </Card>\r\n        ))}\r\n      </div>\r\n      )}\r\n            </PerfectScrollbar>\r\n          )}\r\n        </Colxx>\r\n      </Row>\r\n      )}\r\n      {/* <Button className='mb-3' onClick={handleLogin}>Connect</Button> */}\r\n      <div className=\"d-flex justify-content-center\">\r\n  {/* <Button className='mb-3' onClick={handleLogin}>Connect</Button> */}\r\n</div>\r\n      { peerId && (<SaySomething\r\n        // placeholder={messages['chat.saysomething']}\r\n        placeholder=\"Say something...\"\r\n        messageInput={peerMessage}\r\n        handleChatInputPress={handleChatInputPress}\r\n        handleChatInputChange={(e) => {\r\n          setPeerMessage(e.target.value);\r\n        }}\r\n        handleSendButtonClick={handleSendMessage}\r\n      />)}\r\n      {/* <ChatApplicationMenu activeTab={activeTab} toggleAppMenu={setActiveTab} /> */}\r\n      <ApplicationMenu>\r\n      <TabContent activeTab={activeTab} className=\"chat-app-tab-content\">\r\n\r\n      <TabPane tabId=\"messages\" className=\"chat-app-tab-pane\">\r\n          <PerfectScrollbar\r\n            options={{ suppressScrollX: true, wheelPropagation: false }}\r\n          >\r\n            <div className=\"pt-2 pr-4 pl-4 pb-2\">\r\n            <h3 className=\"font-weight-bold mt-2\">Contacts</h3>\r\n            {loadingConversation ? (\r\n              <div className=\"d-flex justify-content-center mt-4\">\r\n              <Spinner color=\"primary\" className=\"mb-1\" />\r\n            </div>\r\n                  ) :(\r\n            <>\r\n            {serverConversations.length === 0 && (\r\n              <p>There is no contacts</p>\r\n            )}\r\n\r\n            {serverConversations.map((conversation) => (\r\n          //     <>\r\n          // <li key={conversation.conversationId}>\r\n          //   {conversation.conversationId}\r\n          // </li>\r\n        \r\n                      // <NavLink\r\n                      // key={conversation.conversationId}\r\n                      //   className=\"d-flex\"\r\n                      //   to=\"#\"\r\n                      //   location={{}}\r\n                      //   onClick={(e) =>\r\n                      //     handleConversationClick(conversation.conversationId)\r\n                      //   }\r\n                      // >\r\n                      <NavLink\r\n                          className=\"d-flex\"\r\n                          key={conversation.conversationId}\r\n                          to=\"#\"\r\n                          location={{}}\r\n                          onClick={() => handleConversationClick(conversation.conversationId)}\r\n                          style={{ cursor: 'pointer' }}\r\n                        >\r\n                          {(conversationFullName.length > 0 && conversationFullName.find(user => user.username)) ? (\r\n                          <img\r\n                            alt={conversation.conversationId}\r\n                            src={`${baseUrl}/${conversationFullName.length > 0 ? conversationFullName.find(user => user.username === conversation.conversationId).imageUrl : conversation.conversationId}`}\r\n                            // className=\"img-thumbnail border-0 rounded-circle mr-3 list-thumbnail align-self-center xsmall\"\r\n                            className=\" rounded-circle img-thumbnail border mr-2\"\r\n                            style={{ width: \"40px\", height: \"40px\", objectFit: \"cover\", overflow: \"hidden\"  }}\r\n                          /> ) : (\r\n                          <ThumbnailLetters\r\n                          extraSmall \r\n                  rounded\r\n                  text={conversation.conversationId}\r\n                  className=\"m-1\"\r\n                />\r\n              )}\r\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\r\n                            <div className=\"m-2 pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\r\n                              <div className=\"min-width-zero\">\r\n                                {/* <p className=\"mb-0 truncate\">{conversation.conversationId}</p> */}\r\n                                <p className=\"mb-0 truncate\">{conversationFullName.length > 0 ? conversationFullName.find(user => user.username === conversation.conversationId).name : conversation.conversationId}</p>\r\n                              </div>\r\n                               <div className=\"separator mb-2\" />\r\n                            </div>\r\n                          </div>\r\n\r\n                        </NavLink>\r\n                      \r\n                        // <div className=\"d-flex flex-grow-1 min-width-zero\"  key={conversation.conversationId}>\r\n                        //   <Col lg={12} className=\"pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\r\n                        //     <Card className=\"min-width-zero p-2 mb-2\">\r\n                        //       <p className=\" mb-0 truncate\" onClick={() =>\r\n                        //   handleConversationClick(conversation.conversationId)\r\n                        // }>{conversation.conversationId}</p>\r\n                        //       {/* <p className=\"mb-1 text-muted text-small\">\r\n                        //         {item.lastMessageTime}\r\n                        //       </p> */}\r\n                        //     </Card>\r\n                        //   </Col>\r\n                        // </div>\r\n                      // </NavLink>\r\n                      // </>\r\n                ))}\r\n                </>\r\n              )}\r\n            </div>\r\n          </PerfectScrollbar>\r\n        </TabPane>\r\n        </TabContent>\r\n    </ApplicationMenu>\r\n\r\n\r\n    </>\r\n  ) \r\n};\r\n\r\nconst mapStateToProps = ({ chatApp }) => {\r\n  const {\r\n    allContacts,\r\n    conversations,\r\n    loadingConversations,\r\n    loadingContacts,\r\n    currentUser,\r\n    selectedUser,\r\n    selectedUserId,\r\n  } = chatApp;\r\n\r\n  return {\r\n    allContacts,\r\n    conversations,\r\n    loadingConversations,\r\n    loadingContacts,\r\n    currentUser,\r\n    selectedUser,\r\n    selectedUserId,\r\n  };\r\n};\r\nexport default injectIntl(\r\n  connect(mapStateToProps, {\r\n    getContactsAction: getContacts,\r\n    getConversationsAction: getConversations,\r\n    changeConversationAction: changeConversation,\r\n    addMessageToConversationAction: addMessageToConversation,\r\n  })(ChatApp)\r\n);","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { createRef, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Col,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  InputGroup,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport indentityStatusList from \"../CommonCardList/IdentityStatusList\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\nimport country from \"./Country\";\r\nimport DomainList from \"./DomainList\";\r\nimport language from \"./Languages\";\r\nimport {\r\n  validateBio,\r\n  validateDomain,\r\n  validateIdentityStatus,\r\n  validateLocation,\r\n} from \"./validation\";\r\n\r\nconst ApplyAsAlumniAbout = ({ currentStep, setCurrentStep }) => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const [file1, setFile1] = useState(null);\r\n  const [imageError, setImageError] = useState(false);\r\n  const [imageErrorMessage, setImageErrorMessage] = useState(null);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [aboutLoading, setAboutLoading] = useState(false);\r\n  const [aboutField, setAboutField] = useState({\r\n    image: \"\",\r\n  });\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [skillsTag, setSkillsTag] = useState([]);\r\n  const [imageError1, setImageError1] = useState(false);\r\n  const [imageErrorMessage1, setImageErrorMessage1] = useState(null);\r\n\r\n  const [fields] = useState({\r\n    image: \"\",\r\n    linkedinUrl: \"\",\r\n    twitterHandle: \"\",\r\n    bio: \"\",\r\n    location: \"\",\r\n    domain: \"\",\r\n    identityStatus: \"\",\r\n  });\r\n\r\n  const languageOptions = language.map((option) => ({\r\n    value: option.iso_code,\r\n    label: option.name,\r\n  }));\r\n\r\n  // const indentityStatusList = [\r\n  //   { value: \"IMMIGRANT\", label: \"IMMIGRANT\" },\r\n  //   { value: \"PR_CITIZEN\", label: \"PR_CITIZEN\" },\r\n  // ];\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setFile1(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      setImageError(false);\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        setSelectedFile(base64Image);\r\n        setAboutField({ ...aboutField, image: base64Image });\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const [selectedFile2, setSelectedFile2] = useState(null);\r\n\r\n  const handleFileChange2 = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    if (!file) return; // No file selected\r\n\r\n    if (!(file.type === \"application/pdf\")) {\r\n      // alert(\"Please select a valid PDF file.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"Please upload a PDF file.\");\r\n      return;\r\n    }\r\n\r\n    const fileSizeMB = file.size / (1024 * 1024); // Convert bytes to MB\r\n\r\n    if (fileSizeMB > 2) {\r\n      // alert(\"File size exceeds 2MB limit.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"File size must be less than  2MB\");\r\n\r\n      return;\r\n    }\r\n\r\n    setSelectedFile2(file);\r\n    setImageError1(false);\r\n    setImageErrorMessage1(\"\");\r\n  };\r\n\r\n  const mentorAboutUrl = `${baseUrl}/api/alumni/alumnidetails/about`;\r\n  const imageUploadUrl = `${baseUrl}/api/alumni/profile-image`;\r\n  const alumniResumePostUrl = ` ${baseUrl}/api/resume?role=ALUMNI`;\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  // const postDataAbout = async (data) => {\r\n  //   setAboutLoading(true);\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"image\", file1);\r\n\r\n  //   const alumniProfile = {\r\n  //     linkedinUrl: data.linkedinUrl,\r\n  //     twitterHandle: data.twitterHandle,\r\n  //     languages: data.language,\r\n  //     skills: data.skills,\r\n  //     bio: data.bio,\r\n  //     location: data.location,\r\n  //   };\r\n\r\n  //   formData.append(\r\n  //     \"alumniProfile\",\r\n  //     new Blob([JSON.stringify(alumniProfile)], { type: \"application/json\" })\r\n  //   );\r\n\r\n  //   try {\r\n  //     const response = await axios.post(mentorAboutUrl, formData, {\r\n  //       headers: {\r\n  //         Authorization: `Bearer ${token}`,\r\n  //       },\r\n  //     });\r\n  //     setAboutLoading(false);\r\n  //     ToasterComponent(\"success\", response.data.statuses);\r\n  //     handleNextStep();\r\n  //     localStorage.setItem(\"status\", \"1\");\r\n  //   } catch (error) {\r\n  //     setImageError(false);\r\n  //     setAboutLoading(false);\r\n  //     if (error.response) {\r\n  //       error.response.data.statuses.forEach((status) => {\r\n  //         NotificationManager.error(\r\n  //           status.message,\r\n  //           \"Oops!\",\r\n  //           3000,\r\n  //           null,\r\n  //           null,\r\n  //           \"\"\r\n  //         );\r\n  //         if (status.code === 40327) {\r\n  //           setImageErrorMessage(status.message);\r\n  //           setImageError(true);\r\n  //         }\r\n  //       });\r\n  //     } else {\r\n  //       NotificationManager.error(\r\n  //         \"something went wrong\",\r\n  //         \"Oops!\",\r\n  //         3000,\r\n  //         null,\r\n  //         null,\r\n  //         \"\"\r\n  //       );\r\n  //     }\r\n  //   }\r\n  // };\r\n  const postImage = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    try {\r\n      const response = await axios.post(imageUploadUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n      return response.data; // Handle success response from backend\r\n    } catch (error) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"Failed to upload image. Please try again.\");\r\n      throw error;\r\n    }\r\n  };\r\n  const postProfileData = async (data) => {\r\n    const alumniProfile = {\r\n      linkedinUrl: data.linkedinUrl,\r\n      twitterHandle: data.twitterHandle,\r\n      languages: data.language,\r\n      skills: data.skills,\r\n      bio: data.bio,\r\n      location: data.location,\r\n      domain: data.domain,\r\n      identityStatus: data.identityStatus,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(mentorAboutUrl, alumniProfile, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\", // Set Content-Type to application/json\r\n        },\r\n      });\r\n      setAboutLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"1\");\r\n    } catch (error) {\r\n      setAboutLoading(false);\r\n      NotificationManager.error(\r\n        \"Failed to submit profile data\",\r\n        \"Oops!\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    setAboutLoading(true);\r\n\r\n    try {\r\n      // First, check if an image exists and upload it\r\n      if (file1) {\r\n        await postImage(file1); // Upload the image separately\r\n      }\r\n\r\n      // After the image upload, submit the rest of the form data (without the image)\r\n      await postProfileData({\r\n        linkedinUrl: values.linkedinUrl,\r\n        twitterHandle: values.twitterHandle,\r\n        language: languages,\r\n        skills: skillsTag,\r\n        bio: values.bio,\r\n        location: values.location,\r\n        domain: values.domain,\r\n        identityStatus: values.identityStatus,\r\n      });\r\n    } catch (error) {\r\n      setAboutLoading(false); // Stop loading in case of error\r\n    }\r\n  };\r\n\r\n  // file upload validation\r\n\r\n  const validateFile = (file) => {\r\n    // const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\r\n    const maxSize = 2 * 1024 * 1024; // 5MB\r\n    // if (!file) {\r\n    //   setImageError(true);\r\n    //   setImageErrorMessage(\"A profile picture is required\");\r\n    //   return false;\r\n    // }\r\n    // if (!allowedTypes.includes(file.type)) {\r\n    //   setImageError(true);\r\n    //   setImageErrorMessage(\r\n    //     \"Please upload a valid image file (JPEG, PNG, or GIF)\"\r\n    //   );\r\n    //   return false;\r\n    // }\r\n    if (file && file.size > maxSize) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"File size must be less than 2MB\");\r\n      return false;\r\n    }\r\n\r\n    setImageError(false);\r\n    setImageErrorMessage(\"\");\r\n    return true;\r\n  };\r\n  // file upload validation end\r\n\r\n  const handleTagsChange = (newSkills) => {\r\n    setSkillsTag(newSkills);\r\n  };\r\n\r\n  const postResumeData = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"resume\", selectedFile2);\r\n\r\n      await axios.post(alumniResumePostUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // console.log(`resres ${response.status}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        innerRef={forms[0]}\r\n        initialValues={{\r\n          linkedinUrl: fields.linkedinUrl,\r\n          twitterHandle: fields.twitterHandle,\r\n          bio: fields.bio,\r\n          location: fields.location,\r\n          domain: fields.domain,\r\n          identityStatus: fields.identityStatus,\r\n        }}\r\n        validateOnMount\r\n        // onSubmit={(values) => {\r\n        //   if (!file1 || validateFile(file1)) {\r\n        //     postDataAbout({\r\n        //       ...values,\r\n        //       language: languages,\r\n        //       skills: skillsTag,\r\n        //     });\r\n        //   }\r\n        // }}\r\n        onSubmit={(values) => {\r\n          if (!file1 || validateFile(file1)) {\r\n            handleSubmit(values);\r\n            postResumeData(); // Call the combined submit function\r\n          }\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className=\"av-tooltip tooltip-label-right \">\r\n            <Alert color=\"primary\">\r\n              <strong>Lovely to see you!</strong>\r\n              <br /> Filling out the form only takes a couple of minutes.\r\n              We&apos;d love to learn more about your background and the\r\n              ins-and-outs of why you&apos;d like to become a mentor. Keep\r\n              things personal and talk directly to us and your mentees. We\r\n              don&apos;t need jargon and polished cover letters here! <br />\r\n              <br />\r\n              You agree to our code of conduct and the mentor agreement by\r\n              sending the form, so be sure to have a look at those.\r\n            </Alert>\r\n            <FormGroup>\r\n              <Label for=\"image\">Image</Label>\r\n              {imageError && (\r\n                <div className=\"invalid-feedback d-block\">\r\n                  {imageErrorMessage}\r\n                </div>\r\n              )}\r\n              <Row>\r\n                <Col md={2} className=\"\">\r\n                  <img\r\n                    src={selectedFile || \"/assets/img/profiles/l-1.jpg\"}\r\n                    className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                    style={{\r\n                      width: \"70px\",\r\n                      height: \"70px\",\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                    alt=\"img\"\r\n                  />\r\n                </Col>\r\n                <Col md={5} className=\"mt-3 \">\r\n                  <InputGroup className=\"mb-3\">\r\n                    <div className=\"mt-1.5\">\r\n                      <Button\r\n                        className=\"default\"\r\n                        color=\"primary\"\r\n                        onClick={() =>\r\n                          document.getElementById(\"file-upload\").click()\r\n                        }\r\n                      >\r\n                        Upload profile pic <i className=\"iconsminds-upload \" />\r\n                      </Button>\r\n                      <Input\r\n                        id=\"file-upload\"\r\n                        type=\"file\"\r\n                        className=\"form-control d-none\"\r\n                        onChange={handleFileChange}\r\n                      />\r\n                      {file1 && (\r\n                        <p className=\"mt-2\">Selected file: {file1.name}</p>\r\n                      )}\r\n                    </div>\r\n                  </InputGroup>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n\r\n            {/* <FormGroup className=\"error-l-75\">\r\n              <Label>Location*</Label>\r\n              <Field\r\n                as=\"select\"\r\n                name=\"location\"\r\n                validate={validateLocation}\r\n                className=\"form-control\"\r\n              >\r\n                <option disabled value=\"\">\r\n                  Select Location\r\n                </option>\r\n                {country.map((option) => (\r\n                  <option key={option.iso_code} value={option.iso_code}>\r\n                    {option.name}\r\n                  </option>\r\n                ))}\r\n              </Field>\r\n              {errors.location && touched.location && (\r\n                <div className=\"invalid-feedback d-block\">\r\n                  {errors.location}\r\n                </div>\r\n              )}\r\n            </FormGroup> */}\r\n            <FormGroup className=\"error-l-75\">\r\n              <Label for=\"languages\">Languages known*</Label>\r\n              <Select\r\n                placeholder=\"Select Languages\"\r\n                name=\"languages\"\r\n                isMulti\r\n                options={languageOptions}\r\n                // validate={validateLanguages}\r\n                className=\"react-select\"\r\n                classNamePrefix=\"react-select\"\r\n                onChange={(selectedOptions) => {\r\n                  const languagesArray = selectedOptions\r\n                    ? selectedOptions.map((option) => option.value)\r\n                    : [];\r\n                  setLanguages(languagesArray);\r\n                }}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup className=\"error-l-125\">\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Label for=\"linkedinUrl\">LinkedIn URL*</Label>\r\n                  <Field\r\n                    className=\"form-control\"\r\n                    name=\"linkedinUrl\"\r\n                    type=\"url\"\r\n                    // validate={validateLinkedinUrl}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  <FormText color=\"muted\" className=\"\">\r\n                    e.g. https://www.linkedin.com/in/username/\r\n                  </FormText>\r\n                  {errors.linkedinUrl && touched.linkedinUrl && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.linkedinUrl}\r\n                    </div>\r\n                  )}\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Label for=\"twitterHandle\">Twitter Handle (optional)</Label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"twitterHandle\"\r\n                    id=\"twitterHandle\"\r\n                    className=\"form-control\"\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  <FormText color=\"muted\" className=\"\">\r\n                    Omit the &ldquo;@&rdquo; -e.g. &ldquo;dqmonn&rdquo;\r\n                  </FormText>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup className=\"error-l-75\">\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Label>Location*</Label>\r\n                  <Field\r\n                    as=\"select\"\r\n                    name=\"location\"\r\n                    validate={validateLocation}\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option disabled value=\"\">\r\n                      Select Country\r\n                    </option>\r\n                    {country.map((option) => (\r\n                      <option key={option.iso_code} value={option.iso_code}>\r\n                        {option.name}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                  {errors.location && touched.location && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.location}\r\n                    </div>\r\n                  )}\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Label>Domain*</Label>\r\n                  <Field\r\n                    as=\"select\"\r\n                    name=\"domain\"\r\n                    validate={validateDomain}\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option disabled value=\"\">\r\n                      Select Domain\r\n                    </option>\r\n                    {DomainList.map((option) => (\r\n                      <option key={option.name} value={option.name}>\r\n                        {option.name}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                  {errors.domain && touched.domain && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.domain}\r\n                    </div>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"my-3\">\r\n                <Col md={6}>\r\n                  <Label>Identity Status*</Label>\r\n                  <Field\r\n                    as=\"select\"\r\n                    name=\"identityStatus\"\r\n                    validate={validateIdentityStatus}\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option disabled value=\"\">\r\n                      Select Identity Satus\r\n                    </option>\r\n                    {indentityStatusList.map((option) => (\r\n                      <option key={option.name} value={option.name}>\r\n                        {option.label}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                  {errors.identityStatus && touched.identityStatus && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.identityStatus}\r\n                    </div>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"mt-3\">\r\n                <Col md={6}>\r\n                  <Label>CV</Label>\r\n                  {imageError1 && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {imageErrorMessage1}\r\n                    </div>\r\n                  )}\r\n\r\n                  <InputGroup className=\"\">\r\n                    <div className=\"\">\r\n                      <Button\r\n                        className=\"default\"\r\n                        color=\"primary\"\r\n                        onClick={() =>\r\n                          document.getElementById(\"file-upload-resume\").click()\r\n                        }\r\n                      >\r\n                        Upload Resume <i className=\"iconsminds-upload ml-2\" />\r\n                      </Button>\r\n                      {/* <Form> */}\r\n                      <Input\r\n                        id=\"file-upload-resume\"\r\n                        type=\"file\"\r\n                        className=\"d-none\"\r\n                        onChange={handleFileChange2}\r\n                        // validate={validateFile}\r\n                      />\r\n                    </div>\r\n                  </InputGroup>\r\n                  <div className=\"  my-2 \">\r\n                    {/* {selectedFile2 ? selectedFile2.name : \"\"} */}\r\n                    {selectedFile2\r\n                      ? `selected file is ${selectedFile2.name}`\r\n                      : \"\"}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Row>\r\n                <Col md={12}>\r\n                  <FormGroup>\r\n                    <Label for=\"skills\">Skills*</Label>\r\n\r\n                    <TagsInput\r\n                      required\r\n                      value={skillsTag}\r\n                      onChange={handleTagsChange}\r\n                      inputProps={{ placeholder: \"Add skills \" }}\r\n                      addOnBlur\r\n                      addKeys={[13, 188]}\r\n                    />\r\n\r\n                    <FormText>Add skill and press Enter or Comma </FormText>\r\n                    <FormText color=\"muted\">\r\n                      Describe your expertise to connect with mentors who have\r\n                      similar interests.\r\n                      <br />\r\n                      {/* Comma-separated list of your skills  */}\r\n                      (keep it below 10). Mentors will use this to find you.\r\n                    </FormText>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"bio\">Bio*</Label>\r\n              <Field\r\n                as=\"textarea\"\r\n                name=\"bio\"\r\n                id=\"bio\"\r\n                className=\"form-control\"\r\n                validate={validateBio}\r\n                autoComplete=\"off\"\r\n              />\r\n              {errors.bio && touched.bio && (\r\n                <div className=\"invalid-feedback d-block\">{errors.bio}</div>\r\n              )}\r\n              <FormText color=\"muted\">\r\n                Tell us (and your mentees) a little bit about yourself. Talk\r\n                about yourself in the first person, as if you&apos;d directly\r\n                talk to a mentee. This will be public.\r\n              </FormText>\r\n            </FormGroup>\r\n            <Row>\r\n              <Col className=\"text-center\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={`btn-shadow btn-multiple-state ${\r\n                    aboutLoading ? \"show-spinner\" : \"\"\r\n                  }`}\r\n                >\r\n                  <span className=\"spinner d-inline-block\">\r\n                    <span className=\"bounce1\" />\r\n                    <span className=\"bounce2\" />\r\n                    <span className=\"bounce3\" />\r\n                  </span>\r\n                  <span className=\"label\">Next</span>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApplyAsAlumniAbout;\r\n","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { createRef, useState } from \"react\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport { Button, Card, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport { EmploymentTypeData } from \"../Listing/ListingData\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst ApplyAsAlumniexperience = ({\r\n  currentStep,\r\n  setCurrentStep,\r\n  setLoading,\r\n}) => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n  const currentYear = new Date().getFullYear();\r\n  const [work, setWork] = useState({\r\n    experiences: [\r\n      {\r\n        company: \"\",\r\n        jobTitle: \"\",\r\n        employmentType: \"\",\r\n        jobLocation: \"\",\r\n        startYear: \"\",\r\n        endYear: \"\",\r\n        // price: \"\",\r\n      },\r\n    ],\r\n    price: \"\",\r\n  });\r\n  const years = [];\r\n  for (let year = currentYear; year >= 2005; year -= 1) {\r\n    years.push(year);\r\n  }\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  const alumniExperienceUrl = `${baseUrl}/api/alumni/alumnidetails/experience`;\r\n\r\n  const token = localStorage.getItem(\"tokenRes\");\r\n\r\n  const postExperience = async (data) => {\r\n    setProfileLoading(true);\r\n    try {\r\n      const response = await axios.post(alumniExperienceUrl, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setProfileLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"3\");\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 3000);\r\n    } catch (error) {\r\n      setProfileLoading(false);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        error.response.data.statuses.forEach((status) => {\r\n          NotificationManager.error(\r\n            status.message,\r\n            \"Oops!\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n        });\r\n      } else {\r\n        NotificationManager.error(\r\n          \"something went wrong\",\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeWorkExperience = (index) => {\r\n    setWork((prevState) => ({\r\n      ...prevState,\r\n      experiences: prevState.experiences.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const addWorkExperience = () => {\r\n    setWork((prevState) => ({\r\n      ...prevState,\r\n      experiences: [\r\n        ...prevState.experiences,\r\n        {\r\n          company: \"\",\r\n          jobTitle: \"\",\r\n          employmentType: \"\",\r\n          jobLocation: \"\",\r\n          startYear: \"\",\r\n          endYear: \"\",\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  // const handleWorkInputChange = (index, field, value) => {\r\n  //   setWork((prevState) => ({\r\n  //     ...prevState,\r\n  //     experience: prevState.experience.map((exp, i) =>\r\n  //       i === index ? { ...exp, [field]: value } : exp\r\n  //     ),\r\n  //   }));\r\n  // };\r\n  const handleWorkInputChange = (index, field, value) => {\r\n    setWork((prevState) => ({\r\n      ...prevState,\r\n      experiences: prevState.experiences.map((exp, i) =>\r\n        i === index ? { ...exp, [field]: value } : exp\r\n      ),\r\n      // If the field being updated is 'price', update the outer price as well\r\n      price: field === \"price\" ? value : prevState.price,\r\n    }));\r\n  };\r\n  // const handlePriceChange = (e) => {\r\n  //   setWork((prevState) => ({\r\n  //     ...prevState,\r\n  //     price: e.target.value,\r\n  //   }));\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        innerRef={forms[2]}\r\n        initialValues={work}\r\n        onSubmit={() => {\r\n          postExperience(work);\r\n        }}\r\n        validateOnMount\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className=\"av-tooltip tooltip-label-right my-4\">\r\n            {work.experiences.map((works, index) => (\r\n              // eslint-disable-next-line react/no-array-index-key\r\n              <div key={index}>\r\n                <div className=\"text-right\">\r\n                  {work.experiences.length > 1 && (\r\n                    <span>\r\n                      <Button\r\n                        id=\"closeButton\"\r\n                        color=\"primary\"\r\n                        outline\r\n                        className=\"icon-button\"\r\n                        onClick={() => removeWorkExperience(index)}\r\n                      >\r\n                        <span className=\"text-primary\">\r\n                          <strong>x</strong>\r\n                        </span>\r\n                      </Button>\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Company Name*</Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        required\r\n                        name={`education[${index}].company`}\r\n                        value={works.company}\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"company\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      />\r\n                      {errors.education?.[index]?.company &&\r\n                        touched.education?.[index]?.company && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].company}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].jobTitle`}>\r\n                        Job title*\r\n                      </Label>\r\n                      <Input\r\n                        name={`education[${index}].jobTitle`}\r\n                        id={`education[${index}].jobTitle`}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={works.jobTitle}\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"jobTitle\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      />\r\n                      {errors.education?.[index]?.jobTitle &&\r\n                        touched.education?.[index]?.jobTitle && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].jobTitle}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].employmentType`}>\r\n                        Employment type*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].employmentType`}\r\n                        id={`education[${index}].employmentType`}\r\n                        className=\"form-control\"\r\n                        value={works.employmentType}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"employmentType\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select Employment type\r\n                        </option>\r\n                        {EmploymentTypeData.map((option, i) => (\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          <option key={i} value={option.label}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n\r\n                      {errors.education?.[index]?.employmentType &&\r\n                        touched.education?.[index]?.employmentType && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].employmentType}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].jobLocation`}>\r\n                        Job location*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name={`education[${index}].jobLocation`}\r\n                        id={`education[${index}].jobLocation`}\r\n                        className=\"form-control\"\r\n                        required\r\n                        value={works.jobLocation}\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"jobLocation\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                        // validate={validatePackageDescription}\r\n                      />\r\n                      {errors.education?.[index]?.jobLocation &&\r\n                        touched.education?.[index]?.jobLocation && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].jobLocation}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].startDate`}>\r\n                        Start year*\r\n                      </Label>\r\n\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].startYear`}\r\n                        id={`education[${index}].startYear`}\r\n                        className=\"form-control\"\r\n                        value={works.startYear}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"startYear\",\r\n                            parseInt(e.target.value, 10)\r\n                          )\r\n                        }\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          Select year\r\n                        </option>\r\n                        {years.map((yr) => (\r\n                          <option key={yr} value={yr}>\r\n                            {yr}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n\r\n                      {errors.education?.[index]?.startYear &&\r\n                        touched.education?.[index]?.startYear && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].startYear}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].endYear`}>\r\n                        End year*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].endYear`}\r\n                        id={`education[${index}].endYear`}\r\n                        className=\"form-control\"\r\n                        value={works.endYear}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"endYear\",\r\n                            parseInt(e.target.value, 10)\r\n                          )\r\n                        }\r\n                        // validate={validatePackageDescription}\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          Select year\r\n                        </option>\r\n                        {years.map((yr) => (\r\n                          <option key={yr} value={yr}>\r\n                            {currentYear === yr ? \"Present\" : yr}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.education?.[index]?.endYear &&\r\n                        touched.education?.[index]?.endYear && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].endYear}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  {/* <Row>\r\n                    <Col>\r\n                      <FormGroup className=\"error-l-75\">\r\n                        <Label>Price*</Label>\r\n                        <Input\r\n                          className=\"form-control\"\r\n                          name={`education[${index}].company`}\r\n                          value={works.price}\r\n                          type=\"number\"\r\n                          required\r\n                          onChange={(e) =>\r\n                            handleWorkInputChange(\r\n                              index,\r\n                              \"price\",\r\n                              e.target.value\r\n                            )\r\n                          }\r\n                        />\r\n                        {errors.education?.[index]?.company &&\r\n                          touched.education?.[index]?.company && (\r\n                            <div className=\"invalid-feedback d-block\">\r\n                              {errors.education[index].price}\r\n                            </div>\r\n                          )}\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row> */}\r\n                </Row>\r\n                <hr />\r\n              </div>\r\n            ))}\r\n\r\n            <Card\r\n              onClick={addWorkExperience}\r\n              className=\"p-3 text-center my-5\"\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <h3 className=\"font-weight-bold text-primary\">\r\n                + Add more work experience\r\n              </h3>\r\n            </Card>\r\n            <Row className=\"my-2\">\r\n              <Col md={12}>\r\n                <FormGroup>\r\n                  <Label for=\"price\">Price*</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    id=\"price\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={work.price || \"\"}\r\n                    onChange={(e) => {\r\n                      const value = e.target?.value;\r\n                      if (value !== null && value !== undefined) {\r\n                        setWork((prevState) => ({\r\n                          ...prevState,\r\n                          price: value, // Update price directly here\r\n                        }));\r\n                      }\r\n                    }}\r\n                  />\r\n                  {errors.price && touched.price && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.price}\r\n                    </div>\r\n                  )}\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {\" \"}\r\n              <Col>\r\n                {\" \"}\r\n                <Button color=\"primary\" onClick={handlePrevStep}>\r\n                  Previous\r\n                </Button>\r\n              </Col>\r\n              <Col className=\"text-right\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={`btn-shadow btn-multiple-state ${\r\n                    profileLoading ? \"show-spinner\" : \"\"\r\n                  }`}\r\n                >\r\n                  <span className=\"spinner d-inline-block\">\r\n                    <span className=\"bounce1\" />\r\n                    <span className=\"bounce2\" />\r\n                    <span className=\"bounce3\" />\r\n                  </span>\r\n                  <span className=\"label\">Submit</span>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApplyAsAlumniexperience;\r\n","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { createRef, useState } from \"react\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport { Button, Card, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst ApplyAsAlumniProfile = ({ currentStep, setCurrentStep }) => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n\r\n  const [education, setEducation] = useState({\r\n    colleges: [\r\n      {\r\n        collegeName: \"\",\r\n        degree: \"\",\r\n        department: \"\",\r\n        year: \"\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  const currentYear = new Date().getFullYear();\r\n  const years = [];\r\n\r\n  for (let year = currentYear; year >= 2005; year -= 1) {\r\n    years.push(year);\r\n  }\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  const alumniProfileUrl = `${baseUrl}/api/alumni/alumnidetails/profile`;\r\n\r\n  const token = localStorage.getItem(\"tokenRes\");\r\n\r\n  const postExperience = async (data) => {\r\n    setProfileLoading(true);\r\n    try {\r\n      const response = await axios.post(alumniProfileUrl, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setProfileLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"3\");\r\n    } catch (error) {\r\n      setProfileLoading(false);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        error.response.data.statuses.forEach((status) => {\r\n          NotificationManager.error(\r\n            status.message,\r\n            \"Oops!\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n        });\r\n      } else {\r\n        NotificationManager.error(\r\n          \"something went wrong\",\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeEducation = (index) => {\r\n    setEducation((prevState) => ({\r\n      ...prevState,\r\n      colleges: prevState.colleges.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const addEducation = () => {\r\n    setEducation((prevState) => ({\r\n      ...prevState,\r\n      colleges: [\r\n        ...prevState.colleges,\r\n        {\r\n          collegeName: \"\",\r\n          degree: \"\",\r\n          department: \"\",\r\n          year: \"\",\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  const handleInputChange = (index, field, value) => {\r\n    setEducation((prevState) => ({\r\n      ...prevState,\r\n      colleges: prevState.colleges.map((edu, i) =>\r\n        i === index ? { ...edu, [field]: value } : edu\r\n      ),\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        innerRef={forms[2]}\r\n        initialValues={education}\r\n        onSubmit={() => {\r\n          postExperience(education);\r\n        }}\r\n        validateOnMount\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className=\"av-tooltip tooltip-label-right my-4\">\r\n            {education.colleges.map((service, index) => (\r\n              // eslint-disable-next-line react/no-array-index-key\r\n              <div key={index}>\r\n                <div className=\"text-right\">\r\n                  {education.colleges.length > 1 && (\r\n                    <span>\r\n                      <Button\r\n                        id=\"closeButton\"\r\n                        color=\"primary\"\r\n                        outline\r\n                        className=\"icon-button\"\r\n                        onClick={() => removeEducation(index)}\r\n                      >\r\n                        <span className=\"text-primary\">\r\n                          <strong>x</strong>\r\n                        </span>\r\n                      </Button>\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>College Name*</Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        required\r\n                        name={`education[${index}].collegeName`}\r\n                        value={service.college}\r\n                        onChange={(e) =>\r\n                          handleInputChange(\r\n                            index,\r\n                            \"collegeName\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      />\r\n                      {errors.education?.[index]?.collegeName &&\r\n                        touched.education?.[index]?.collegeName && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].collegeName}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].degree`}>Degree*</Label>\r\n                      <Input\r\n                        name={`education[${index}].degree`}\r\n                        id={`education[${index}].degree`}\r\n                        className=\"form-control\"\r\n                        value={service.degree}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleInputChange(index, \"degree\", e.target.value)\r\n                        }\r\n                        // validate={validatePackageTopic}\r\n                      />\r\n                      {errors.education?.[index]?.degree &&\r\n                        touched.education?.[index]?.degree && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].degree}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].fieldStudy`}>\r\n                        Department*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name={`fieldStudy[${index}].fieldStudy`}\r\n                        id={`fieldStudy[${index}].fieldStudy`}\r\n                        className=\"form-control\"\r\n                        value={service.fieldStudy}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleInputChange(index, \"department\", e.target.value)\r\n                        }\r\n                        // validate={validatePackageDescription}\r\n                      />\r\n                      {errors.education?.[index]?.fieldStudy &&\r\n                        touched.education?.[index]?.fieldStudy && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].fieldStudy}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].department`}>\r\n                        Year of passing*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].year`}\r\n                        id={`education[${index}].year`}\r\n                        className=\"form-control\"\r\n                        value={service.year}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleInputChange(\r\n                            index,\r\n                            \"year\",\r\n                            parseInt(e.target.value, 10)\r\n                          )\r\n                        }\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          Select year\r\n                        </option>\r\n                        {years.map((yr) => (\r\n                          <option key={yr} value={yr}>\r\n                            {yr}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.education?.[index]?.department &&\r\n                        touched.education?.[index]?.department && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].department}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <hr />\r\n              </div>\r\n            ))}\r\n\r\n            <Card\r\n              onClick={addEducation}\r\n              className=\"p-3 text-center my-5\"\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <h3 className=\"font-weight-bold text-primary\">\r\n                + Add more education\r\n              </h3>\r\n            </Card>\r\n\r\n            <Row>\r\n              <Col>\r\n                <Button color=\"primary\" onClick={handlePrevStep}>\r\n                  Previous\r\n                </Button>\r\n              </Col>\r\n              <Col className=\"text-right\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={`btn-shadow btn-multiple-state ${\r\n                    profileLoading ? \"show-spinner\" : \"\"\r\n                  }`}\r\n                >\r\n                  <span className=\"spinner d-inline-block\">\r\n                    <span className=\"bounce1\" />\r\n                    <span className=\"bounce2\" />\r\n                    <span className=\"bounce3\" />\r\n                  </span>\r\n                  <span className=\"label\">Submit</span>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApplyAsAlumniProfile;\r\n","/* eslint-disable no-param-reassign */\r\n\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { adminRoot } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Jumbotron,\r\n  NavLink,\r\n  Row,\r\n  Spinner,\r\n} from \"reactstrap\";\r\n\r\nimport ApplyAsAlumniAbout from \"./ApplyAsAlumniAbout\";\r\nimport ApplyAsAlumniexperience from \"./ApplyAsAlumniExperience\";\r\nimport ApplyAsAlumniProfile from \"./ApplyAsAlumniProfile\";\r\n\r\nconst ApplyAlumni = () => {\r\n  const steps = [\"About you\", \"profile\", \"Experience\"];\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const status = localStorage.getItem(\"status\");\r\n    console.log(\"status\", status);\r\n    if (status) {\r\n      if (status === \"0\") {\r\n        setCurrentStep(0);\r\n      } else if (status === \"1\") {\r\n        setCurrentStep(1);\r\n      } else if (status === \"3\") {\r\n        setCurrentStep(2);\r\n      } else if (status === \"7\") {\r\n        setCurrentStep(3);\r\n      } else {\r\n        setCurrentStep(0);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n  const handleMySlotsClick = () =>\r\n    history.push(`${adminRoot}/calendar/mentor/appointment`);\r\n\r\n  return (\r\n    <Card className=\"mx-auto my-4 \" style={{ maxWidth: \"900px\" }}>\r\n      <CardBody className=\"wizard wizard-default\">\r\n        <h1 className=\"mt-4 font-weight-bold\">Apply as a Alumni</h1>\r\n        <ul className=\"nav nav-tabs justify-content-center\">\r\n          {steps.map((stepItem, index) => (\r\n            <li\r\n              // eslint-disable-next-line\r\n              key={`topNavStep_${index}`}\r\n              className={`nav-item ${\r\n                // eslint-disable-next-line\r\n                index === currentStep\r\n                  ? \"step-doing\"\r\n                  : index < currentStep\r\n                  ? \"step-done\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <NavLink to=\"#\" location={{}} className=\"nav-link\">\r\n                <span>{stepItem}</span>\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"wizard-basic-step\">\r\n          {currentStep === 0 && (\r\n            <ApplyAsAlumniAbout\r\n              currentStep={currentStep}\r\n              setCurrentStep={setCurrentStep}\r\n            />\r\n          )}\r\n          {currentStep === 1 && (\r\n            <ApplyAsAlumniProfile\r\n              currentStep={currentStep}\r\n              setCurrentStep={setCurrentStep}\r\n            />\r\n          )}\r\n          {currentStep === 2 && (\r\n            <ApplyAsAlumniexperience\r\n              currentStep={currentStep}\r\n              setCurrentStep={setCurrentStep}\r\n              setLoading={setLoading}\r\n            />\r\n          )}\r\n          {loading ? (\r\n            <div className=\"wizard-basic-step text-center pt-3\">\r\n              <Spinner color=\"primary\" className=\"mb-1\" />\r\n              <p>Submitting</p>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {currentStep === 3 && (\r\n                <Row>\r\n                  <Colxx xxs=\"12\" className=\"mb-4\">\r\n                    <Card>\r\n                      <CardBody className=\"text-center\">\r\n                        <i\r\n                          alt=\"\"\r\n                          className=\"glyph-icon iconsminds-yes text-success\"\r\n                          style={{ fontSize: \"75px\" }}\r\n                        />\r\n                        <Jumbotron className=\"text-center\">\r\n                          <h1 className=\"display-4\">Submitted Successfully!</h1>\r\n                          <p className=\"lead\">We will reach you shortly</p>\r\n                          <hr className=\"my-4\" />\r\n                          <p className=\"lead mb-0\">\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"lg\"\r\n                              onClick={() => handleMySlotsClick()}\r\n                            >\r\n                              My slots\r\n                            </Button>\r\n                          </p>\r\n                        </Jumbotron>\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Colxx>\r\n                </Row>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default injectIntl(ApplyAlumni);\r\n","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { createRef, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Col,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  InputGroup,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport language from \"../../AlumniRegister/Languages\";\r\nimport {\r\n  validateIdentityStatus,\r\n  validateLocation,\r\n} from \"../../AlumniRegister/validation\";\r\nimport indentityStatusList from \"../../CommonCardList/IdentityStatusList\";\r\nimport country from \"../../my-login/Country\";\r\nimport ToasterComponent from \"../../notifications/ToasterComponent\";\r\n\r\nconst ApplyAsHrAbout = ({ currentStep, setCurrentStep }) => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const [file1, setFile1] = useState(null);\r\n  const [imageError, setImageError] = useState(false);\r\n  const [imageErrorMessage, setImageErrorMessage] = useState(null);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [aboutLoading, setAboutLoading] = useState(false);\r\n  const [aboutField, setAboutField] = useState({\r\n    image: \"\",\r\n  });\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imageError1, setImageError1] = useState(false);\r\n  const [imageErrorMessage1, setImageErrorMessage1] = useState(null);\r\n\r\n  const hrAboutUrl = `${baseUrl}/api/humanresource/profile`;\r\n  const imageUploadUrl = `${baseUrl}/api/humanresource/profile-image`;\r\n  const hrResumePostUrl = ` ${baseUrl}/api/resume?role=HR`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  const [fields] = useState({\r\n    image: \"\",\r\n    twitterHandle: \"\",\r\n    residentType: \"\",\r\n    country: \"\",\r\n    jobType: \"\",\r\n    jobTitle: \"\",\r\n    company: \"\",\r\n  });\r\n\r\n  const languageOptions = language.map((option) => ({\r\n    value: option.iso_code,\r\n    label: option.name,\r\n  }));\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const postImage = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    try {\r\n      const response = await axios.post(imageUploadUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n      return response.data; // Handle success response from backend\r\n    } catch (error) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"Failed to upload image. Please try again.\");\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const postProfileData = async (data) => {\r\n    const HRAbout = {\r\n      twitterHandle: data.twitterHandle,\r\n      languages: data.language,\r\n      country: data.country,\r\n      jobType: data.jobType,\r\n      jobTitle: data.jobTitle,\r\n      company: data.company,\r\n      residentType: data.residentType,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(hrAboutUrl, HRAbout, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\", // Set Content-Type to application/json\r\n        },\r\n      });\r\n      setAboutLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"1\");\r\n    } catch (error) {\r\n      setAboutLoading(false);\r\n      NotificationManager.error(\r\n        \"Failed to submit profile data\",\r\n        \"Oops!\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    setAboutLoading(true);\r\n\r\n    try {\r\n      // First, check if an image exists and upload it\r\n      if (file1) {\r\n        await postImage(file1); // Upload the image separately\r\n      }\r\n\r\n      // After the image upload, submit the rest of the form data (without the image)\r\n      await postProfileData({\r\n        twitterHandle: values.twitterHandle,\r\n        language: languages,\r\n        residentType: values.residentType,\r\n        country: values.country,\r\n        jobType: values.jobType,\r\n        jobTitle: values.jobTitle,\r\n        company: values.company,\r\n      });\r\n    } catch (error) {\r\n      setAboutLoading(false); // Stop loading in case of error\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setFile1(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      setImageError(false);\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        setSelectedFile(base64Image);\r\n        setAboutField({ ...aboutField, image: base64Image });\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const [selectedFile2, setSelectedFile2] = useState(null);\r\n\r\n  const handleFileChange2 = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    if (!file) return; // No file selected\r\n\r\n    if (!(file.type === \"application/pdf\")) {\r\n      // alert(\"Please select a valid PDF file.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"Please upload a PDF file.\");\r\n      return;\r\n    }\r\n\r\n    const fileSizeMB = file.size / (1024 * 1024); // Convert bytes to MB\r\n\r\n    if (fileSizeMB > 2) {\r\n      // alert(\"File size exceeds 2MB limit.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"File size must be less than  2MB\");\r\n\r\n      return;\r\n    }\r\n\r\n    setSelectedFile2(file);\r\n    setImageError1(false);\r\n    setImageErrorMessage1(\"\");\r\n  };\r\n\r\n  const validateFile = (file) => {\r\n    const maxSize = 2 * 1024 * 1024; // 5MB\r\n\r\n    if (file && file.size > maxSize) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"File size must be less than 2MB\");\r\n      return false;\r\n    }\r\n\r\n    setImageError(false);\r\n    setImageErrorMessage(\"\");\r\n    return true;\r\n  };\r\n\r\n  const postResumeData = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"resume\", selectedFile2);\r\n\r\n      await axios.post(hrResumePostUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // console.log(`resres ${response.status}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      innerRef={forms[0]}\r\n      initialValues={{\r\n        twitterHandle: fields.twitterHandle,\r\n        residentType: fields.residentType,\r\n        country: fields.country,\r\n        jobTitle: fields.jobTitle,\r\n        jobType: fields.jobType,\r\n        company: fields.company,\r\n      }}\r\n      validateOnMount\r\n      onSubmit={(values) => {\r\n        if (!file1 || validateFile(file1)) {\r\n          handleSubmit(values);\r\n          postResumeData(); // Call the combined submit function\r\n        }\r\n      }}\r\n    >\r\n      {({ errors, touched }) => (\r\n        <Form className=\"av-tooltip tooltip-label-right \">\r\n          <Alert color=\"primary\">\r\n            <strong>Lovely to see you!</strong>\r\n            <br /> Filling out the form only takes a couple of minutes.\r\n            We&apos;d love to learn more about your background and the\r\n            ins-and-outs of why you&apos;d like to become a hr. Keep things\r\n            personal and talk directly to us and your mentees. We don&apos;t\r\n            need jargon and polished cover letters here! <br />\r\n            <br />\r\n            You agree to our code of conduct and the mentor agreement by sending\r\n            the form, so be sure to have a look at those.\r\n          </Alert>\r\n          <FormGroup>\r\n            <Label for=\"image\">Image</Label>\r\n            {imageError && (\r\n              <div className=\"invalid-feedback d-block\">\r\n                {imageErrorMessage}\r\n              </div>\r\n            )}\r\n            <Row>\r\n              <Col md={2} className=\"\">\r\n                <img\r\n                  src={selectedFile || \"/assets/img/profiles/l-1.jpg\"}\r\n                  className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                  style={{\r\n                    width: \"70px\",\r\n                    height: \"70px\",\r\n                    objectFit: \"cover\",\r\n                  }}\r\n                  alt=\"img\"\r\n                />\r\n              </Col>\r\n              <Col md={5} className=\"mt-3 \">\r\n                <InputGroup className=\"mb-3\">\r\n                  <div className=\"mt-1.5\">\r\n                    <Button\r\n                      className=\"default\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        document.getElementById(\"file-upload\").click()\r\n                      }\r\n                    >\r\n                      Upload profile pic <i className=\"iconsminds-upload \" />\r\n                    </Button>\r\n                    <Input\r\n                      id=\"file-upload\"\r\n                      type=\"file\"\r\n                      className=\"form-control d-none\"\r\n                      onChange={handleFileChange}\r\n                    />\r\n                    {file1 && (\r\n                      <p className=\"mt-2\">Selected file: {file1.name}</p>\r\n                    )}\r\n                  </div>\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Row>\r\n              <Col md={6}>\r\n                <Label for=\"jobType\">Job Type</Label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"jobType\"\r\n                  id=\"jobType\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"off\"\r\n                />\r\n              </Col>\r\n              <Col md={6}>\r\n                <Label for=\"jobTitle\">Job Title</Label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"jobTitle\"\r\n                  id=\"jobTitle\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"off\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col md={6}>\r\n                <Label for=\"company\">Company</Label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"company\"\r\n                  id=\"company\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"off\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <FormGroup className=\"error-l-125\">\r\n            <Row>\r\n              <Col md={6}>\r\n                <Label for=\"languages\">Languages known*</Label>\r\n                <Select\r\n                  placeholder=\"Select Languages\"\r\n                  name=\"languages\"\r\n                  isMulti\r\n                  options={languageOptions}\r\n                  // validate={validateLanguages}\r\n                  className=\"react-select\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(selectedOptions) => {\r\n                    const languagesArray = selectedOptions\r\n                      ? selectedOptions.map((option) => option.value)\r\n                      : [];\r\n                    setLanguages(languagesArray);\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col md={6}>\r\n                <Label for=\"twitterHandle\">Twitter Handle (optional)</Label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"twitterHandle\"\r\n                  id=\"twitterHandle\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"off\"\r\n                />\r\n                <FormText color=\"muted\" className=\"\">\r\n                  Omit the &ldquo;@&rdquo; -e.g. &ldquo;dqmonn&rdquo;\r\n                </FormText>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Row className=\"mt-3\">\r\n              <Col md={6}>\r\n                <Label for=\"residentType\">Resident Type*</Label>\r\n                <Field\r\n                  as=\"select\"\r\n                  name=\"residentType\"\r\n                  validate={validateIdentityStatus}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option disabled value=\"\">\r\n                    Select Resident type\r\n                  </option>\r\n                  {indentityStatusList.map((option) => (\r\n                    <option key={option.name} value={option.name}>\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n                {errors.identityStatus && touched.identityStatus && (\r\n                  <div className=\"invalid-feedback d-block\">\r\n                    {errors.identityStatus}\r\n                  </div>\r\n                )}\r\n              </Col>\r\n              <Col md={6}>\r\n                <Label>Country*</Label>\r\n                <Field\r\n                  as=\"select\"\r\n                  name=\"country\"\r\n                  validate={validateLocation}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option disabled value=\"\">\r\n                    Select Country\r\n                  </option>\r\n                  {country.map((option) => (\r\n                    <option key={option.iso_code} value={option.iso_code}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n                {errors.location && touched.location && (\r\n                  <div className=\"invalid-feedback d-block\">\r\n                    {errors.location}\r\n                  </div>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Row>\r\n              <Col md={6}>\r\n                <Label>CV</Label>\r\n                {imageError1 && (\r\n                  <div className=\"invalid-feedback d-block\">\r\n                    {imageErrorMessage1}\r\n                  </div>\r\n                )}\r\n\r\n                <InputGroup className=\"\">\r\n                  <div className=\"\">\r\n                    <Button\r\n                      className=\"default\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        document.getElementById(\"file-upload-resume\").click()\r\n                      }\r\n                    >\r\n                      Upload Resume <i className=\"iconsminds-upload ml-2\" />\r\n                    </Button>\r\n                    {/* <Form> */}\r\n                    <Input\r\n                      id=\"file-upload-resume\"\r\n                      type=\"file\"\r\n                      className=\"d-none\"\r\n                      onChange={handleFileChange2}\r\n                      // validate={validateFile}\r\n                    />\r\n                  </div>\r\n                </InputGroup>\r\n                <div className=\"  my-2 \">\r\n                  {/* {selectedFile2 ? selectedFile2.name : \"\"} */}\r\n                  {selectedFile2\r\n                    ? `selected file is ${selectedFile2.name}`\r\n                    : \"\"}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n\r\n          <Row>\r\n            <Col className=\"text-center\">\r\n              <Button\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className={`btn-shadow btn-multiple-state ${\r\n                  aboutLoading ? \"show-spinner\" : \"\"\r\n                }`}\r\n              >\r\n                <span className=\"spinner d-inline-block\">\r\n                  <span className=\"bounce1\" />\r\n                  <span className=\"bounce2\" />\r\n                  <span className=\"bounce3\" />\r\n                </span>\r\n                <span className=\"label\">Next</span>\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ApplyAsHrAbout;\r\n","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { createRef, useState } from \"react\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport { Button, Card, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport { EmploymentTypeData } from \"../../Listing/ListingData\";\r\nimport ToasterComponent from \"../../notifications/ToasterComponent\";\r\n\r\nconst ApplyAsHrExperience = ({ currentStep, setCurrentStep, setLoading }) => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n  const currentYear = new Date().getFullYear();\r\n  const [work, setWork] = useState({\r\n    experiences: [\r\n      {\r\n        company: \"\",\r\n        jobTitle: \"\",\r\n        employmentType: \"\",\r\n        jobLocation: \"\",\r\n        startYear: \"\",\r\n        endYear: \"\",\r\n        // price: \"\",\r\n      },\r\n    ],\r\n  });\r\n  const years = [];\r\n  for (let year = currentYear; year >= 2005; year -= 1) {\r\n    years.push(year);\r\n  }\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  const hrExperienceUrl = `${baseUrl}/api/humanresource/experience`;\r\n\r\n  const token = localStorage.getItem(\"tokenRes\");\r\n\r\n  const postExperience = async (data) => {\r\n    setProfileLoading(true);\r\n    try {\r\n      const response = await axios.post(hrExperienceUrl, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setProfileLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"3\");\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 3000);\r\n    } catch (error) {\r\n      setProfileLoading(false);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        error.response.data.statuses.forEach((status) => {\r\n          NotificationManager.error(\r\n            status.message,\r\n            \"Oops!\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n        });\r\n      } else {\r\n        NotificationManager.error(\r\n          \"something went wrong\",\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeWorkExperience = (index) => {\r\n    setWork((prevState) => ({\r\n      ...prevState,\r\n      experiences: prevState.experiences.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const addWorkExperience = () => {\r\n    setWork((prevState) => ({\r\n      ...prevState,\r\n      experiences: [\r\n        ...prevState.experiences,\r\n        {\r\n          company: \"\",\r\n          jobTitle: \"\",\r\n          employmentType: \"\",\r\n          jobLocation: \"\",\r\n          startYear: \"\",\r\n          endYear: \"\",\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  const handleWorkInputChange = (index, field, value) => {\r\n    setWork((prevState) => ({\r\n      ...prevState,\r\n      experiences: prevState.experiences.map((exp, i) =>\r\n        i === index ? { ...exp, [field]: value } : exp\r\n      ),\r\n      // If the field being updated is 'price', update the outer price as well\r\n      //   price: field === \"price\" ? value : prevState.price,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        innerRef={forms[2]}\r\n        initialValues={work}\r\n        onSubmit={() => {\r\n          postExperience(work);\r\n        }}\r\n        validateOnMount\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className=\"av-tooltip tooltip-label-right my-4\">\r\n            {work.experiences.map((works, index) => (\r\n              // eslint-disable-next-line react/no-array-index-key\r\n              <div key={index}>\r\n                <div className=\"text-right\">\r\n                  {work.experiences.length > 1 && (\r\n                    <span>\r\n                      <Button\r\n                        id=\"closeButton\"\r\n                        color=\"primary\"\r\n                        outline\r\n                        className=\"icon-button\"\r\n                        onClick={() => removeWorkExperience(index)}\r\n                      >\r\n                        <span className=\"text-primary\">\r\n                          <strong>x</strong>\r\n                        </span>\r\n                      </Button>\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Company Name*</Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        required\r\n                        name={`education[${index}].company`}\r\n                        value={works.company}\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"company\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      />\r\n                      {errors.education?.[index]?.company &&\r\n                        touched.education?.[index]?.company && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].company}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].jobTitle`}>\r\n                        Job title*\r\n                      </Label>\r\n                      <Input\r\n                        name={`education[${index}].jobTitle`}\r\n                        id={`education[${index}].jobTitle`}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={works.jobTitle}\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"jobTitle\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      />\r\n                      {errors.education?.[index]?.jobTitle &&\r\n                        touched.education?.[index]?.jobTitle && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].jobTitle}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].employmentType`}>\r\n                        Employment type*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].employmentType`}\r\n                        id={`education[${index}].employmentType`}\r\n                        className=\"form-control\"\r\n                        value={works.employmentType}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"employmentType\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select Employment type\r\n                        </option>\r\n                        {EmploymentTypeData.map((option, i) => (\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          <option key={i} value={option.label}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n\r\n                      {errors.education?.[index]?.employmentType &&\r\n                        touched.education?.[index]?.employmentType && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].employmentType}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].jobLocation`}>\r\n                        Job location*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name={`education[${index}].jobLocation`}\r\n                        id={`education[${index}].jobLocation`}\r\n                        className=\"form-control\"\r\n                        required\r\n                        value={works.jobLocation}\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"jobLocation\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                        // validate={validatePackageDescription}\r\n                      />\r\n                      {errors.education?.[index]?.jobLocation &&\r\n                        touched.education?.[index]?.jobLocation && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].jobLocation}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].startDate`}>\r\n                        Start year*\r\n                      </Label>\r\n\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].startYear`}\r\n                        id={`education[${index}].startYear`}\r\n                        className=\"form-control\"\r\n                        value={works.startYear}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"startYear\",\r\n                            parseInt(e.target.value, 10)\r\n                          )\r\n                        }\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          Select year\r\n                        </option>\r\n                        {years.map((yr) => (\r\n                          <option key={yr} value={yr}>\r\n                            {yr}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n\r\n                      {errors.education?.[index]?.startYear &&\r\n                        touched.education?.[index]?.startYear && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].startYear}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].endYear`}>\r\n                        End year*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].endYear`}\r\n                        id={`education[${index}].endYear`}\r\n                        className=\"form-control\"\r\n                        value={works.endYear}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"endYear\",\r\n                            parseInt(e.target.value, 10)\r\n                          )\r\n                        }\r\n                        // validate={validatePackageDescription}\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          Select year\r\n                        </option>\r\n                        {years.map((yr) => (\r\n                          <option key={yr} value={yr}>\r\n                            {currentYear === yr ? \"Present\" : yr}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.education?.[index]?.endYear &&\r\n                        touched.education?.[index]?.endYear && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].endYear}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <hr />\r\n              </div>\r\n            ))}\r\n\r\n            <Card\r\n              onClick={addWorkExperience}\r\n              className=\"p-3 text-center my-5\"\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <h3 className=\"font-weight-bold text-primary\">\r\n                + Add more work experience\r\n              </h3>\r\n            </Card>\r\n            {/* <Row className=\"my-2\">\r\n              <Col md={12}>\r\n                <FormGroup>\r\n                  <Label for=\"price\">Price*</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    id=\"price\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={work.price || \"\"}\r\n                    onChange={(e) => {\r\n                      const value = e.target?.value;\r\n                      if (value !== null && value !== undefined) {\r\n                        setWork((prevState) => ({\r\n                          ...prevState,\r\n                          price: value, // Update price directly here\r\n                        }));\r\n                      }\r\n                    }}\r\n                  />\r\n                  {errors.price && touched.price && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.price}\r\n                    </div>\r\n                  )}\r\n                </FormGroup>\r\n              </Col>\r\n            </Row> */}\r\n            <Row>\r\n              {\" \"}\r\n              <Col>\r\n                {\" \"}\r\n                <Button color=\"primary\" onClick={handlePrevStep}>\r\n                  Previous\r\n                </Button>\r\n              </Col>\r\n              <Col className=\"text-right\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={`btn-shadow btn-multiple-state ${\r\n                    profileLoading ? \"show-spinner\" : \"\"\r\n                  }`}\r\n                >\r\n                  <span className=\"spinner d-inline-block\">\r\n                    <span className=\"bounce1\" />\r\n                    <span className=\"bounce2\" />\r\n                    <span className=\"bounce3\" />\r\n                  </span>\r\n                  <span className=\"label\">Submit</span>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApplyAsHrExperience;\r\n","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { createRef, useState } from \"react\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Col,\r\n  FormGroup,\r\n  FormText,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { validateBio } from \"../../AlumniRegister/validation\";\r\nimport ToasterComponent from \"../../notifications/ToasterComponent\";\r\n\r\nconst ApplyAsHrProfile = ({ currentStep, setCurrentStep }) => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n\r\n  const [aboutLoading, setAboutLoading] = useState(false);\r\n\r\n  const [skillsTag, setSkillsTag] = useState([]);\r\n\r\n  const [fields] = useState({\r\n    personalWebsite: \"\",\r\n    bio: \"\",\r\n  });\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  const hrProfileUrl = `${baseUrl}/api/humanresource/about`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  const postProfileData = async (data) => {\r\n    const hrProfile = {\r\n      personalWebsite: data.personalWebsite,\r\n      skills: data.skills,\r\n      bio: data.bio,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(hrProfileUrl, hrProfile, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\", // Set Content-Type to application/json\r\n        },\r\n      });\r\n      setAboutLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"1\");\r\n    } catch (error) {\r\n      setAboutLoading(false);\r\n      NotificationManager.error(\r\n        \"Failed to submit profile data\",\r\n        \"Oops!\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    setAboutLoading(true);\r\n\r\n    try {\r\n      await postProfileData({\r\n        personalWebsite: values.personalWebsite,\r\n        skills: skillsTag,\r\n        bio: values.bio,\r\n      });\r\n    } catch (error) {\r\n      setAboutLoading(false); // Stop loading in case of error\r\n    }\r\n  };\r\n\r\n  const handleTagsChange = (newSkills) => {\r\n    setSkillsTag(newSkills);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        innerRef={forms[0]}\r\n        initialValues={{\r\n          personalWebsite: fields.personalWebsite,\r\n          bio: fields.bio,\r\n        }}\r\n        validateOnMount\r\n        // onSubmit={(values) => {\r\n        //   if (!file1 || validateFile(file1)) {\r\n        //     postDataAbout({\r\n        //       ...values,\r\n        //       language: languages,\r\n        //       skills: skillsTag,\r\n        //     });\r\n        //   }\r\n        // }}\r\n        onSubmit={(values) => {\r\n          handleSubmit(values);\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className=\"av-tooltip tooltip-label-right \">\r\n            <Alert color=\"primary\">\r\n              <strong>Lovely to see you!</strong>\r\n              <br /> Filling out the form only takes a couple of minutes.\r\n              We&apos;d love to learn more about your background and the\r\n              ins-and-outs of why you&apos;d like to become a mentor. Keep\r\n              things personal and talk directly to us and your mentees. We\r\n              don&apos;t need jargon and polished cover letters here! <br />\r\n              <br />\r\n              You agree to our code of conduct and the mentor agreement by\r\n              sending the form, so be sure to have a look at those.\r\n            </Alert>\r\n\r\n            <FormGroup>\r\n              <Row>\r\n                <Col md={12}>\r\n                  <FormGroup>\r\n                    <Label for=\"skills\">Skills*</Label>\r\n\r\n                    <TagsInput\r\n                      required\r\n                      value={skillsTag}\r\n                      onChange={handleTagsChange}\r\n                      inputProps={{ placeholder: \"Add skills \" }}\r\n                      addOnBlur\r\n                      addKeys={[13, 188]}\r\n                    />\r\n\r\n                    <FormText>Add skill and press Enter or Comma </FormText>\r\n                    <FormText color=\"muted\">\r\n                      Describe your expertise to connect with mentors who have\r\n                      similar interests.\r\n                      <br />\r\n                      {/* Comma-separated list of your skills  */}\r\n                      (keep it below 10). Mentors will use this to find you.\r\n                    </FormText>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"bio\">Bio*</Label>\r\n              <Field\r\n                as=\"textarea\"\r\n                name=\"bio\"\r\n                id=\"bio\"\r\n                className=\"form-control\"\r\n                validate={validateBio}\r\n                autoComplete=\"off\"\r\n              />\r\n              {errors.bio && touched.bio && (\r\n                <div className=\"invalid-feedback d-block\">{errors.bio}</div>\r\n              )}\r\n              <FormText color=\"muted\">\r\n                Tell us (and your mentees) a little bit about yourself. Talk\r\n                about yourself in the first person, as if you&apos;d directly\r\n                talk to a mentee. This will be public.\r\n              </FormText>\r\n            </FormGroup>\r\n            <FormGroup className=\"error-l-125\">\r\n              <Row>\r\n                <Col md={12}>\r\n                  <Label for=\"website\">Personal Website (optional)</Label>\r\n                  <Field\r\n                    type=\"url\"\r\n                    name=\"website\"\r\n                    id=\"website\"\r\n                    className=\"form-control\"\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  <FormText color=\"muted\">\r\n                    You can add your blog, GitHub profile or similar here\r\n                  </FormText>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n                  <Row>\r\n                    {\" \"}\r\n                    <Col>\r\n                      {\" \"}\r\n                      <Button color=\"primary\" onClick={handlePrevStep}>\r\n                        Previous\r\n                      </Button>\r\n                    </Col>\r\n                    <Col className=\"text-right\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={`btn-shadow btn-multiple-state ${\r\n                    aboutLoading ? \"show-spinner\" : \"\"\r\n                  }`}\r\n                >\r\n                  <span className=\"spinner d-inline-block\">\r\n                    <span className=\"bounce1\" />\r\n                    <span className=\"bounce2\" />\r\n                    <span className=\"bounce3\" />\r\n                  </span>\r\n                  <span className=\"label\">Next</span>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApplyAsHrProfile;\r\n","/* eslint-disable no-param-reassign */\r\n\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { adminRoot } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Jumbotron,\r\n  NavLink,\r\n  Row,\r\n  Spinner,\r\n} from \"reactstrap\";\r\n\r\nimport ApplyAsHrAbout from \"./ApplyAsHrAbout\";\r\nimport ApplyAsHrExperience from \"./ApplyAsHrExperience\";\r\nimport ApplyAsHrProfile from \"./ApplyAsHrProfile\";\r\n\r\nconst ApplyHR = () => {\r\n  const steps = [\"About you\", \"profile\", \"Experience\"];\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const status = localStorage.getItem(\"status\");\r\n    console.log(\"status\", status);\r\n    if (status) {\r\n      if (status === \"0\") {\r\n        setCurrentStep(0);\r\n      } else if (status === \"1\") {\r\n        setCurrentStep(1);\r\n      } else if (status === \"3\") {\r\n        setCurrentStep(2);\r\n      } else if (status === \"7\") {\r\n        setCurrentStep(3);\r\n      } else {\r\n        setCurrentStep(0);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n  const handleMySlotsClick = () => history.push(`${adminRoot}/listing/job`);\r\n\r\n  return (\r\n    <Card className=\"mx-auto my-4 \" style={{ maxWidth: \"900px\" }}>\r\n      <CardBody className=\"wizard wizard-default\">\r\n        <h1 className=\"mt-4 font-weight-bold\">Apply as a HR</h1>\r\n        <ul className=\"nav nav-tabs justify-content-center\">\r\n          {steps.map((stepItem, index) => (\r\n            <li\r\n              // eslint-disable-next-line\r\n              key={`topNavStep_${index}`}\r\n              className={`nav-item ${\r\n                // eslint-disable-next-line\r\n                index === currentStep\r\n                  ? \"step-doing\"\r\n                  : index < currentStep\r\n                  ? \"step-done\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <NavLink to=\"#\" location={{}} className=\"nav-link\">\r\n                <span>{stepItem}</span>\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"wizard-basic-step\">\r\n          {currentStep === 0 && (\r\n            <ApplyAsHrAbout\r\n              currentStep={currentStep}\r\n              setCurrentStep={setCurrentStep}\r\n            />\r\n          )}\r\n          {currentStep === 1 && (\r\n            <ApplyAsHrProfile\r\n              currentStep={currentStep}\r\n              setCurrentStep={setCurrentStep}\r\n            />\r\n          )}\r\n          {currentStep === 2 && (\r\n            <ApplyAsHrExperience\r\n              currentStep={currentStep}\r\n              setCurrentStep={setCurrentStep}\r\n              setLoading={setLoading}\r\n            />\r\n          )}\r\n          {loading ? (\r\n            <div className=\"wizard-basic-step text-center pt-3\">\r\n              <Spinner color=\"primary\" className=\"mb-1\" />\r\n              <p>Submitting</p>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {currentStep === 3 && (\r\n                <Row>\r\n                  <Colxx xxs=\"12\" className=\"mb-4\">\r\n                    <Card>\r\n                      <CardBody className=\"text-center\">\r\n                        <i\r\n                          alt=\"\"\r\n                          className=\"glyph-icon iconsminds-yes text-success\"\r\n                          style={{ fontSize: \"75px\" }}\r\n                        />\r\n                        <Jumbotron className=\"text-center\">\r\n                          <h1 className=\"display-4\">Submitted Successfully!</h1>\r\n                          <p className=\"lead\">We will reach you shortly</p>\r\n                          <hr className=\"my-4\" />\r\n                          <p className=\"lead mb-0\">\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"lg\"\r\n                              onClick={() => handleMySlotsClick()}\r\n                            >\r\n                              job list\r\n                            </Button>\r\n                          </p>\r\n                        </Jumbotron>\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Colxx>\r\n                </Row>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default injectIntl(ApplyHR);\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\nimport JobPosting from \"./JobPosting\";\r\n\r\nconst MyJobListing = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const [pagination, setPagination] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [deleteJobPost, setDeleteJobPost] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [interestUsersModal, setInterestedUsersModal] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedJob, setSelectedJob] = useState(null);\r\n  const [jobId, setJobId] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const toggleModalState = () => {\r\n    setModal(false);\r\n    setSelectedJob(null);\r\n  };\r\n\r\n  // console.log(data);\r\n\r\n  const url = `${baseUrl}/api/posts/job-post/myjobs`;\r\n\r\n  useEffect(() => {\r\n    const fetchMyJobListingData = async () => {\r\n      try {\r\n        const response = await axios.get(url);\r\n        setPagination(response.data.pagination);\r\n        setData(response.data.jobLists);\r\n        // Assuming there's at least one job listing\r\n        if (response.data.jobLists.length > 0) {\r\n          setJobId(response.data.jobLists[0].id); // Set the job ID from the first job listing\r\n        }\r\n        setIsLoaded(true);\r\n      } catch (error) {\r\n        setIsLoaded(true);\r\n        if (error.response) {\r\n          console.error(\"Response error:\", error.response.data);\r\n          console.error(\"Response status:\", error.response.status);\r\n          console.error(\"Response headers:\", error.response.headers);\r\n        } else if (error.request) {\r\n          console.error(\"Request error:\", error.request);\r\n        } else {\r\n          console.error(\"Error message:\", error.message);\r\n        }\r\n        console.error(\"Error config:\", error.config);\r\n      }\r\n    };\r\n\r\n    fetchMyJobListingData();\r\n  }, [deleteJobPost, modal]);\r\n\r\n  const deletePost = async (id) => {\r\n    const stayDeleteUrl = `${baseUrl}/api/posts/job-post/${id}`;\r\n    try {\r\n      const response = await axios.delete(stayDeleteUrl);\r\n      setDeleteJobPost(!deleteJobPost);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"There was an error!\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditJob = async (jobData) => {\r\n    try {\r\n      const token = localStorage.getItem(\"tokenRes\");\r\n      const editUrl = `${baseUrl}/api/posts/job-post/`;\r\n      const response = await axios.put(editUrl, jobData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      setModal(false);\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error submitting\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMyJobListDelete = (id) => deletePost(id);\r\n  const handleEditButtonClick = (job) => {\r\n    setSelectedJob(job);\r\n    setModal(true);\r\n  };\r\n  const interestedPeopleUrl = `${baseUrl}/api/posts/job-post/interested-users/${jobId}`;\r\n\r\n  const handleModalToggle = async () => {\r\n    if (!interestUsersModal) {\r\n      // Fetch users only if modal is being opened\r\n      try {\r\n        const response = await axios.get(interestedPeopleUrl);\r\n        setUsers(response.data.interestedUsers);\r\n      } catch (error) {\r\n        console.error(\"Error fetching interested users:\", error);\r\n      }\r\n    }\r\n    setInterestedUsersModal(!interestUsersModal); // Toggle modal visibility\r\n  };\r\n\r\n  const handleUserClick = (user) => {\r\n    const lowerCaseRole = user.role.toLowerCase();\r\n    // history.push(`/app/${lowerCaseRole}profile/${user.userId}`);\r\n    if (lowerCaseRole === \"alumni\") {\r\n      history.push(`/app/alumni/profile/${user.userId}`);\r\n    } else if (lowerCaseRole === \"user\") {\r\n      history.push(`/app/user/profile/${user.userId}`);\r\n    } else {\r\n      history.push(`/app/${lowerCaseRole}profile/${user.userId}`);\r\n    }\r\n  };\r\n\r\n  return !isLoaded ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <>\r\n      {!data.length > 0 ? (\r\n        <Card className=\"d-flex justify-content-center align-items-center \">\r\n          <h2 className=\"mt-4 mb-4\">There are no posts available</h2>\r\n        </Card>\r\n      ) : (\r\n        <Colxx xxs=\"12\" className=\"mb-3\">\r\n          {data.map((item) => (\r\n            <Card key={item} className=\"mb-4\">\r\n              <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n                <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n                  <NavLink\r\n                    to={`/app/listing/job/view/${item.id}`}\r\n                    className=\"w-30 w-sm-100\"\r\n                  >\r\n                    <p className=\"list-item-heading mb-1 truncate\">\r\n                      {item.title}\r\n                    </p>\r\n                  </NavLink>\r\n                  <p className=\"mb-1 text-muted text-small w-30 w-sm-100\">\r\n                    <i className=\"simple-icon-layers\" /> {item.jobTitle}\r\n                  </p>\r\n                  <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                    <i className=\"simple-icon-clock\" />{\" \"}\r\n                    <TimestampConverter\r\n                      timeStamp={item.postedOn}\r\n                      format=\"datetime\"\r\n                    />\r\n                  </p>\r\n                  {/* <p\r\n                    className=\"mb-1 text-muted text-small w-15 w-sm-100\"\r\n                    type=\"button\"\r\n                    onClick={() => setInterestedUsersModal(!interestUsersModal)}\r\n                  >\r\n                    <i className=\"iconsminds-like\" /> {item.interestedCount}\r\n                  </p> */}\r\n                  <div\r\n                    role=\"button\"\r\n                    tabIndex={0}\r\n                    className=\"mb-1 text-muted text-small w-15 w-sm-100\"\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === \"Enter\" || e.key === \" \") {\r\n                        handleModalToggle();\r\n                      }\r\n                    }}\r\n                    onClick={handleModalToggle}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <i className=\"iconsminds-like\" /> {item.interestedCount}\r\n                  </div>\r\n                </div>\r\n                <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\r\n                  <Button\r\n                    outline\r\n                    color=\"primary\"\r\n                    className=\"icon-button\"\r\n                    onClick={() => handleEditButtonClick(item)}\r\n                  >\r\n                    <i className=\"simple-icon-pencil\" />\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => handleMyJobListDelete(item.id)}\r\n                    outline\r\n                    color=\"primary\"\r\n                    className=\"icon-button ml-2\"\r\n                  >\r\n                    <i className=\"simple-icon-trash\" />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              <Modal size=\"lg\" isOpen={modal} toggle={() => setModal(!modal)}>\r\n                <ModalHeader className=\"pb-1\" toggle={() => setModal(!modal)}>\r\n                  <h1 className=\"font-weight-semibold\">Edit</h1>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                  {/* <JobPosting closeModal={toggleModalState}  /> */}\r\n                  <JobPosting\r\n                    closeModal={toggleModalState}\r\n                    initialData={selectedJob}\r\n                    onEdit={handleEditJob}\r\n                  />\r\n                </ModalBody>\r\n              </Modal>\r\n            </Card>\r\n          ))}\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            totalPage={pagination.totalPage}\r\n            onChangePage={(i) => setCurrentPage(i)}\r\n            lastIsActive={pagination.first}\r\n            firstIsActive={pagination.last}\r\n          />\r\n        </Colxx>\r\n      )}\r\n      {/* modal to display interested people start */}\r\n      <Modal isOpen={interestUsersModal} toggle={handleModalToggle}>\r\n        <ModalHeader className=\"p-3\" toggle={handleModalToggle}>\r\n          Interested\r\n        </ModalHeader>\r\n        <ModalBody className=\"p-3\">\r\n          <ListGroup flush>\r\n            {users?.length > 0 ? (\r\n              users.map((datas) => (\r\n                <ListGroupItem\r\n                  key={datas.userId}\r\n                  tag=\"a\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  // href={`/app/mentorprofile/${data.id}`}\r\n                  onClick={() => handleUserClick(datas)}\r\n                >\r\n                  {datas.userName}\r\n                </ListGroupItem>\r\n              ))\r\n            ) : (\r\n              <p>No interested persons yet.</p>\r\n            )}\r\n          </ListGroup>\r\n        </ModalBody>\r\n      </Modal>\r\n      {/* modal to display interested people end */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyJobListing;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\nimport OtherPosting from \"./OtherPosting\";\r\n\r\nconst MyOtherListing = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const [pagination, setPagination] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [deleteStayPost, setDeleteStayPost] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [selectedOther, setSelectedOther] = useState(null);\r\n  const [interestUsersModal, setInterestedUsersModal] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [jobId, setJobId] = useState(null);\r\n  const history = useHistory();\r\n\r\n  // console.log(data)\r\n  const url = `${baseUrl}/api/posts/other-post/myotherposts`;\r\n\r\n  useEffect(() => {\r\n    const fetchMyOtherListingData = async () => {\r\n      try {\r\n        const response = await axios.get(url);\r\n        setPagination(response.data.paginationMeta);\r\n        setData(response.data.otherposts);\r\n        // Assuming there's at least one job listing\r\n        if (response.data.otherposts.length > 0) {\r\n          setJobId(response.data.otherposts[0].id); // Set the job ID from the first job listing\r\n        }\r\n        setIsLoaded(true);\r\n      } catch (error) {\r\n        setIsLoaded(true);\r\n        if (error.response) {\r\n          console.error(\"Response error:\", error.response);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchMyOtherListingData();\r\n  }, [deleteStayPost, modal]);\r\n\r\n  const handleEditOthers = async (othersData) => {\r\n    try {\r\n      const token = localStorage.getItem(\"tokenRes\");\r\n      const editUrl = `${baseUrl}/api/posts/other-post/`;\r\n      const response = await axios.put(editUrl, othersData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      setModal(false);\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error editing job:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const deletePost = async (id) => {\r\n    const otherDeleteUrl = `${baseUrl}/api/posts/other-post/${id}`;\r\n    try {\r\n      const response = await axios.delete(otherDeleteUrl);\r\n      setDeleteStayPost(!deleteStayPost);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"There was an error!\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMyOtherListDelete = (id) => deletePost(id);\r\n  const handleEditButtonClick = (other) => {\r\n    setSelectedOther(other);\r\n    setModal(true);\r\n  };\r\n\r\n  const toggleModalState = () => {\r\n    setModal(false);\r\n    setSelectedOther(null);\r\n  };\r\n\r\n  const interestedPeopleUrl = `${baseUrl}/api/posts/other-post/interested-users/${jobId}`;\r\n\r\n  const handleModalToggle = async () => {\r\n    if (!interestUsersModal) {\r\n      // Fetch users only if modal is being opened\r\n      try {\r\n        const response = await axios.get(interestedPeopleUrl);\r\n        setUsers(response.data.interestedUsers);\r\n      } catch (error) {\r\n        console.error(\"Error fetching interested users:\", error);\r\n      }\r\n    }\r\n    setInterestedUsersModal(!interestUsersModal); // Toggle modal visibility\r\n  };\r\n\r\n  const handleUserClick = (user) => {\r\n    const lowerCaseRole = user.role.toLowerCase();\r\n    // history.push(`/app/${lowerCaseRole}profile/${user.userId}`);\r\n    if (lowerCaseRole === \"alumni\") {\r\n      history.push(`/app/alumni/profile/${user.userId}`);\r\n    } else if (lowerCaseRole === \"user\") {\r\n      history.push(`/app/user/profile/${user.userId}`);\r\n    } else {\r\n      history.push(`/app/${lowerCaseRole}profile/${user.userId}`);\r\n    }\r\n  };\r\n\r\n  return !isLoaded ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <>\r\n      {!data.length > 0 ? (\r\n        <Card className=\"d-flex justify-content-center align-items-center \">\r\n          <h2 className=\"mt-4 mb-4\">There are no posts available</h2>\r\n        </Card>\r\n      ) : (\r\n        <Colxx xxs=\"12\" className=\"mb-3\">\r\n          {data.map((item) => (\r\n            <Card key={item} className=\"mb-4\">\r\n              <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n                <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n                  <NavLink\r\n                    to={`/app/listing/other/view/${item.id}`}\r\n                    className=\"w-30 w-sm-100\"\r\n                  >\r\n                    <p className=\"list-item-heading mb-1 truncate\">\r\n                      {item.title}\r\n                    </p>\r\n                  </NavLink>\r\n                  <p className=\"mb-1 text-muted text-small w-30 w-sm-100\">\r\n                    <i className=\"simple-icon-layers\" /> {item.job}\r\n                  </p>\r\n                  <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                    <i className=\"simple-icon-clock\" />{\" \"}\r\n                    <TimestampConverter\r\n                      timeStamp={item.postedOn}\r\n                      format=\"datetime\"\r\n                    />\r\n                  </p>\r\n                  <div\r\n                    role=\"button\"\r\n                    tabIndex={0}\r\n                    className=\"mb-1 text-muted text-small w-15 w-sm-100\"\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === \"Enter\" || e.key === \" \") {\r\n                        handleModalToggle();\r\n                      }\r\n                    }}\r\n                    onClick={handleModalToggle}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <i className=\"iconsminds-like\" /> {item.interestedCount}\r\n                  </div>\r\n                </div>\r\n                <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\r\n                  <Button\r\n                    onClick={() => handleEditButtonClick(item)}\r\n                    outline\r\n                    color=\"primary\"\r\n                    className=\"icon-button\"\r\n                  >\r\n                    <i className=\"simple-icon-pencil\" />\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => handleMyOtherListDelete(item.id)}\r\n                    outline\r\n                    color=\"primary\"\r\n                    className=\"icon-button ml-2\"\r\n                  >\r\n                    <i className=\"simple-icon-trash\" />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              <Modal size=\"lg\" isOpen={modal} toggle={() => setModal(!modal)}>\r\n                <ModalHeader className=\"pb-1\" toggle={() => setModal(!modal)}>\r\n                  <h1 className=\"font-weight-semibold\">Edit</h1>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                  {/* <JobPosting closeModal={toggleModalState}  /> */}\r\n                  <OtherPosting\r\n                    closeModal={toggleModalState}\r\n                    initialData={selectedOther}\r\n                    onEdit={handleEditOthers}\r\n                  />\r\n                </ModalBody>\r\n              </Modal>\r\n            </Card>\r\n          ))}\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            totalPage={pagination.totalPage}\r\n            onChangePage={(i) => setCurrentPage(i)}\r\n            lastIsActive={pagination.first}\r\n            firstIsActive={pagination.last}\r\n          />\r\n        </Colxx>\r\n      )}\r\n      {/* modal to display interested people start */}\r\n      <Modal isOpen={interestUsersModal} toggle={handleModalToggle}>\r\n        <ModalHeader className=\"p-3\" toggle={handleModalToggle}>\r\n          Interested\r\n        </ModalHeader>\r\n        <ModalBody className=\"p-3\">\r\n          <ListGroup flush>\r\n            {users?.length > 0 ? (\r\n              users.map((datas) => (\r\n                <ListGroupItem\r\n                  key={datas.userId}\r\n                  tag=\"a\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  // href={`/app/mentorprofile/${data.id}`}\r\n                  onClick={() => handleUserClick(datas)}\r\n                >\r\n                  {datas.userName}\r\n                </ListGroupItem>\r\n              ))\r\n            ) : (\r\n              <p>No interested persons yet.</p>\r\n            )}\r\n          </ListGroup>\r\n        </ModalBody>\r\n      </Modal>\r\n      {/* modal to display interested people end */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyOtherListing;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\nimport StayPosting from \"./StayPosting\";\r\n\r\nconst MyStayListing = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const [pagination, setPagination] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [deleteStayPost, setDeleteStayPost] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [selectedStay, setSelectedStay] = useState(null);\r\n  const [interestUsersModal, setInterestedUsersModal] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [jobId, setJobId] = useState(null);\r\n  const history = useHistory();\r\n\r\n  // console.log(data)\r\n  const toggleModalState = () => {\r\n    setModal(false);\r\n    setSelectedStay(null);\r\n  };\r\n  //   const data1 = [\r\n  //     {\r\n  //       title: \"Title 1\",\r\n  //       category: \"Job Listing\",\r\n  //       postedOn: 1720189649645,\r\n  //       badgeColor: \"success\",\r\n  //       badgeText: \"Published\",\r\n  //       link: \"#\",\r\n  //       interestedCount: \"6\",\r\n  //     },\r\n  //     {\r\n  //       title: \"Title 2\",\r\n  //       category: \"Stay Listing\",\r\n  //       postedOn: 1720276049645,\r\n  //       badgeColor: \"success\",\r\n  //       badgeText: \"Published\",\r\n  //       link: \"#\",\r\n  //       interestedCount: \"1\",\r\n  //     },\r\n  //     {\r\n  //       title: \"Title 3\",\r\n  //       category: \"Other Listing\",\r\n  //       postedOn: 1720362449645,\r\n  //       badgeColor: \"primary\",\r\n  //       badgeText: \"Processed\",\r\n  //       link: \"#\",\r\n  //       interestedCount: \"2\",\r\n  //     },\r\n  //     {\r\n  //       title: \"Title 4\",\r\n  //       category: \"Stay Listing\",\r\n  //       postedOn: 1720448849645,\r\n  //       badgeColor: \"success\",\r\n  //       badgeText: \"Published\",\r\n  //       link: \"#\",\r\n  //       interestedCount: \"4\",\r\n  //     },\r\n  //   ];\r\n  const url = `${baseUrl}/api/posts/stay-post/mystayrooms`;\r\n\r\n  useEffect(() => {\r\n    const fetchMyStayListingData = async () => {\r\n      try {\r\n        const response = await axios.get(url);\r\n        setPagination(response.data.paginationMeta);\r\n        setData(response.data.stayrooms);\r\n        // Assuming there's at least one job listing\r\n        if (response.data.stayrooms.length > 0) {\r\n          setJobId(response.data.stayrooms[0].id); // Set the job ID from the first job listing\r\n        }\r\n        setIsLoaded(true);\r\n      } catch (error) {\r\n        setIsLoaded(true);\r\n        if (error.response) {\r\n          console.error(\"Response error:\", error.response.data);\r\n          console.error(\"Response status:\", error.response.status);\r\n          console.error(\"Response headers:\", error.response.headers);\r\n        } else if (error.request) {\r\n          console.error(\"Request error:\", error.request);\r\n        } else {\r\n          console.error(\"Error message:\", error.message);\r\n        }\r\n        console.error(\"Error config:\", error.config);\r\n      }\r\n    };\r\n\r\n    fetchMyStayListingData();\r\n  }, [deleteStayPost, modal]);\r\n\r\n  const deletePost = async (id) => {\r\n    const stayDeleteUrl = `${baseUrl}/api/posts/stay-post/${id}`;\r\n    try {\r\n      const response = await axios.delete(stayDeleteUrl);\r\n      setDeleteStayPost(!deleteStayPost);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"There was an error!\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditStay = async (stayData) => {\r\n    try {\r\n      const token = localStorage.getItem(\"tokenRes\");\r\n      const editUrl = `${baseUrl}/api/posts/stay-post/`;\r\n      const response = await axios.put(editUrl, stayData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n\r\n      setModal(false);\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error editing job:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMyStayListDelete = (id) => deletePost(id);\r\n  const handleEditButtonClick = (stay) => {\r\n    setSelectedStay(stay);\r\n    setModal(true);\r\n  };\r\n\r\n  const interestedPeopleUrl = `${baseUrl}/api/posts/stay-post/interested-users/${jobId}`;\r\n\r\n  const handleModalToggle = async () => {\r\n    if (!interestUsersModal) {\r\n      // Fetch users only if modal is being opened\r\n      try {\r\n        const response = await axios.get(interestedPeopleUrl);\r\n        setUsers(response.data.interestedUsers);\r\n      } catch (error) {\r\n        console.error(\"Error fetching interested users:\", error);\r\n      }\r\n    }\r\n    setInterestedUsersModal(!interestUsersModal); // Toggle modal visibility\r\n  };\r\n\r\n  const handleUserClick = (user) => {\r\n    const lowerCaseRole = user.role.toLowerCase();\r\n    // history.push(`/app/${lowerCaseRole}profile/${user.userId}`);\r\n    if (lowerCaseRole === \"alumni\") {\r\n      history.push(`/app/alumni/profile/${user.userId}`);\r\n    } else if (lowerCaseRole === \"user\") {\r\n      history.push(`/app/user/profile/${user.userId}`);\r\n    } else {\r\n      history.push(`/app/${lowerCaseRole}profile/${user.userId}`);\r\n    }\r\n  };\r\n\r\n  return !isLoaded ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <>\r\n      {!data.length > 0 ? (\r\n        <Card className=\"d-flex justify-content-center align-items-center \">\r\n          <h2 className=\"mt-4 mb-4\">There are no posts available</h2>\r\n        </Card>\r\n      ) : (\r\n        <Colxx xxs=\"12\" className=\"mb-3\">\r\n          {/* <h1>My Listing</h1> */}\r\n          {data.map((item) => (\r\n            <Card key={item} className=\"mb-4\">\r\n              <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n                <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n                  <NavLink\r\n                    to={`/app/listing/stay/view/${item.id}`}\r\n                    className=\"w-30 w-sm-100\"\r\n                  >\r\n                    <p className=\"list-item-heading mb-1 truncate\">\r\n                      {item.title}\r\n                    </p>\r\n                  </NavLink>\r\n                  <p className=\"mb-1 text-muted text-small w-30 w-sm-100\">\r\n                    <i className=\"simple-icon-layers\" /> {item.apartmentType}\r\n                  </p>\r\n                  <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                    <i className=\"simple-icon-clock\" />{\" \"}\r\n                    <TimestampConverter\r\n                      timeStamp={item.postedOn}\r\n                      format=\"datetime\"\r\n                    />\r\n                  </p>\r\n                  {/* <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                <i className=\"iconsminds-like\" />{\" \"}{item.interestedCount}\r\n              </p> */}\r\n                  {/* <div className=\"w-15 w-sm-100\">\r\n                <Badge color={item.badgeColor} pill>\r\n                  {item.badgeText}\r\n                </Badge>\r\n              </div> */}\r\n                  <div\r\n                    role=\"button\"\r\n                    tabIndex={0}\r\n                    className=\"mb-1 text-muted text-small w-15 w-sm-100\"\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === \"Enter\" || e.key === \" \") {\r\n                        handleModalToggle();\r\n                      }\r\n                    }}\r\n                    onClick={handleModalToggle}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <i className=\"iconsminds-like\" /> {item.interestedCount}\r\n                  </div>\r\n                </div>\r\n                <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\r\n                  {/* <CustomInput\r\n                className=\"item-check mb-0\"\r\n                type=\"checkbox\"\r\n                id={`check_${product.id}`}\r\n                checked={isSelect}\r\n                onChange={() => {}}\r\n                label=\"\"\r\n              /> */}\r\n                  <Button\r\n                    outline\r\n                    color=\"primary\"\r\n                    className=\"icon-button\"\r\n                    onClick={() => handleEditButtonClick(item)}\r\n                  >\r\n                    <i className=\"simple-icon-pencil\" />\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => handleMyStayListDelete(item.id)}\r\n                    outline\r\n                    color=\"primary\"\r\n                    className=\"icon-button ml-2\"\r\n                  >\r\n                    <i className=\"simple-icon-trash\" />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              <Modal size=\"lg\" isOpen={modal} toggle={() => setModal(!modal)}>\r\n                <ModalHeader className=\"pb-1\" toggle={() => setModal(!modal)}>\r\n                  <h1 className=\"font-weight-semibold\">Edit</h1>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                  <StayPosting\r\n                    closeModal={toggleModalState}\r\n                    initialData={selectedStay}\r\n                    onEdit={handleEditStay}\r\n                  />\r\n                </ModalBody>\r\n              </Modal>\r\n            </Card>\r\n          ))}\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            totalPage={pagination.totalPage}\r\n            onChangePage={(i) => setCurrentPage(i)}\r\n            lastIsActive={pagination.first}\r\n            firstIsActive={pagination.last}\r\n          />\r\n        </Colxx>\r\n      )}\r\n\r\n      {/* modal to display interested people start */}\r\n      <Modal isOpen={interestUsersModal} toggle={handleModalToggle}>\r\n        <ModalHeader className=\"p-3\" toggle={handleModalToggle}>\r\n          Interested\r\n        </ModalHeader>\r\n        <ModalBody className=\"p-3\">\r\n          <ListGroup flush>\r\n            {users?.length > 0 ? (\r\n              users.map((datas) => (\r\n                <ListGroupItem\r\n                  key={datas.userId}\r\n                  tag=\"a\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  // href={`/app/mentorprofile/${data.id}`}\r\n                  onClick={() => handleUserClick(datas)}\r\n                >\r\n                  {datas.userName}\r\n                </ListGroupItem>\r\n              ))\r\n            ) : (\r\n              <p>No interested persons yet.</p>\r\n            )}\r\n          </ListGroup>\r\n        </ModalBody>\r\n      </Modal>\r\n      {/* modal to display interested people end */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyStayListing;\r\n","import classnames from \"classnames\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { NavLink, useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  //   Card,\r\n  //   CardBody,\r\n  Nav,\r\n  NavItem,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\n// import Rating from 'components/common/Rating';\r\n\r\n// import Breadcrumb from 'containers/navs/Breadcrumb';\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\n\r\n// import JobPosting from \"./JobPosting\";\r\n// import StayPosting from \"./StayPosting\";\r\n// import OtherPosting from \"./OtherPosting\";\r\nimport MyJobListing from \"./MyJobListing\";\r\nimport MyOtherListing from \"./MyOtherListing\";\r\nimport MyStayListing from \"./MyStayListing\";\r\n\r\nconst MyListing = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [activeTab, setActiveTab] = useState(\"job\");\r\n  // const [modal, setModal] = useState(false);\r\n  // const [modalTitle, setModalTitle] = useState(\"\");\r\n  // const [listingType, setListingType] = useState(\"\");\r\n  // const [isPosted,setIsPosted] = useState(false)\r\n\r\n  // const toggleModal = (title, type) => {\r\n  //   setModalTitle(title);\r\n  //   setListingType(type);\r\n  //   setModal(!modal);\r\n  // };\r\n  //   const { messages } = intl;\r\n\r\n  // const toggleModalState = () => {\r\n  //   setModal(false);\r\n  //   setIsPosted(!isPosted);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const path = location.pathname.split(\"/\").pop();\r\n    setActiveTab(path === \"mylisting\" ? \"job\" : path);\r\n  }, [location]);\r\n\r\n  const changeTab = (tab) => {\r\n    setActiveTab(tab);\r\n    history.push(`/app/mylisting${tab === \"job\" ? \"\" : `/${tab}`}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\" className=\"mx-auto\" style={{ maxWidth: \"900px\" }}>\r\n          <h1>My listing</h1>\r\n\r\n          {/* <Breadcrumb match={match} /> */}\r\n\r\n          <Nav tabs className=\"separator-tabs ml-0 mb-5\">\r\n            {/* <Button\r\n                outline\r\n                color=\"primary\"\r\n                onClick={() => toggleModal(\"Create a job List\", \"job\")}\r\n              >\r\n                Edit\r\n              </Button> */}\r\n            <NavItem>\r\n              <NavLink\r\n                location={{}}\r\n                to=\"#\"\r\n                className={classnames({\r\n                  active: activeTab === \"job\",\r\n                  \"nav-link\": true,\r\n                })}\r\n                onClick={() => changeTab(\"job\")}\r\n              >\r\n                <i className=\"iconsminds-management text-primary\" />\r\n                Job\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                location={{}}\r\n                to=\"#\"\r\n                className={classnames({\r\n                  active: activeTab === \"stay\",\r\n                  \"nav-link\": true,\r\n                })}\r\n                onClick={() => changeTab(\"stay\")}\r\n              >\r\n                <i className=\"iconsminds-building text-primary\" />\r\n                Stay\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                location={{}}\r\n                to=\"#\"\r\n                className={classnames({\r\n                  active: activeTab === \"others\",\r\n                  \"nav-link\": true,\r\n                })}\r\n                onClick={() => changeTab(\"others\")}\r\n              >\r\n                <i className=\"iconsminds-testimonal text-primary\" />\r\n                Others\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent activeTab={activeTab}>\r\n            <TabPane tabId=\"job\">\r\n              <MyJobListing />\r\n            </TabPane>\r\n            <TabPane tabId=\"stay\">\r\n              <MyStayListing />\r\n            </TabPane>\r\n            <TabPane tabId=\"others\">\r\n              <MyOtherListing />\r\n            </TabPane>\r\n          </TabContent>\r\n        </Colxx>\r\n      </Row>\r\n      {/* <Modal size=\"lg\" isOpen={modal} toggle={() => setModal(!modal)}>\r\n        <ModalHeader className=\"pb-1\" toggle={() => setModal(!modal)}>\r\n          <h1 className=\"font-weight-semibold\">{modalTitle}</h1>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          {listingType === \"job\" && <JobPosting closeModal={toggleModalState}/>}\r\n          {listingType === \"stay\" && <StayPosting closeModal={toggleModalState}/>}\r\n          {listingType === \"others\" && <OtherPosting />}\r\n          {listingType === \"others\" && <OtherPosting closeModal={toggleModalState} />}\r\n\r\n        </ModalBody>\r\n      </Modal> */}\r\n    </>\r\n  );\r\n};\r\nexport default injectIntl(MyListing);\r\n","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { createRef, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Col,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  InputGroup,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport language from \"../../AlumniRegister/Languages\";\r\nimport {\r\n  validateIdentityStatus,\r\n  validateLocation,\r\n} from \"../../AlumniRegister/validation\";\r\nimport indentityStatusList from \"../../CommonCardList/IdentityStatusList\";\r\nimport country from \"../../my-login/Country\";\r\nimport ToasterComponent from \"../../notifications/ToasterComponent\";\r\n\r\nconst RealEstateAgentAbout = ({ currentStep, setCurrentStep }) => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const [file1, setFile1] = useState(null);\r\n  const [imageError, setImageError] = useState(false);\r\n  const [imageErrorMessage, setImageErrorMessage] = useState(null);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [aboutLoading, setAboutLoading] = useState(false);\r\n  const [aboutField, setAboutField] = useState({\r\n    image: \"\",\r\n  });\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imageError1, setImageError1] = useState(false);\r\n  const [imageErrorMessage1, setImageErrorMessage1] = useState(null);\r\n\r\n  const hrAboutUrl = `${baseUrl}/api/realestate/about`;\r\n  const imageUploadUrl = `${baseUrl}/api/realestate/profile-image`;\r\n  const hrResumePostUrl = ` ${baseUrl}/api/resume?role=REALESTATE`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  const [fields] = useState({\r\n    image: \"\",\r\n    twitterHandle: \"\",\r\n    residentType: \"\",\r\n    country: \"\",\r\n    jobType: \"\",\r\n    jobTitle: \"\",\r\n    company: \"\",\r\n  });\r\n\r\n  const languageOptions = language.map((option) => ({\r\n    value: option.iso_code,\r\n    label: option.name,\r\n  }));\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const postImage = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    try {\r\n      const response = await axios.post(imageUploadUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n      return response.data; // Handle success response from backend\r\n    } catch (error) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"Failed to upload image. Please try again.\");\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const postProfileData = async (data) => {\r\n    const HRAbout = {\r\n      twitterHandle: data.twitterHandle,\r\n      languages: data.language,\r\n      country: data.country,\r\n      jobType: data.jobType,\r\n      jobTitle: data.jobTitle,\r\n      company: data.company,\r\n      residentType: data.residentType,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(hrAboutUrl, HRAbout, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\", // Set Content-Type to application/json\r\n        },\r\n      });\r\n      setAboutLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"1\");\r\n    } catch (error) {\r\n      setAboutLoading(false);\r\n      NotificationManager.error(\r\n        \"Failed to submit profile data\",\r\n        \"Oops!\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    setAboutLoading(true);\r\n\r\n    try {\r\n      // First, check if an image exists and upload it\r\n      if (file1) {\r\n        await postImage(file1); // Upload the image separately\r\n      }\r\n\r\n      // After the image upload, submit the rest of the form data (without the image)\r\n      await postProfileData({\r\n        twitterHandle: values.twitterHandle,\r\n        language: languages,\r\n        residentType: values.residentType,\r\n        country: values.country,\r\n        jobType: values.jobType,\r\n        jobTitle: values.jobTitle,\r\n        company: values.company,\r\n      });\r\n    } catch (error) {\r\n      setAboutLoading(false); // Stop loading in case of error\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setFile1(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      setImageError(false);\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        setSelectedFile(base64Image);\r\n        setAboutField({ ...aboutField, image: base64Image });\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const [selectedFile2, setSelectedFile2] = useState(null);\r\n\r\n  const handleFileChange2 = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    if (!file) return; // No file selected\r\n\r\n    if (!(file.type === \"application/pdf\")) {\r\n      // alert(\"Please select a valid PDF file.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"Please upload a PDF file.\");\r\n      return;\r\n    }\r\n\r\n    const fileSizeMB = file.size / (1024 * 1024); // Convert bytes to MB\r\n\r\n    if (fileSizeMB > 2) {\r\n      // alert(\"File size exceeds 2MB limit.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"File size must be less than  2MB\");\r\n\r\n      return;\r\n    }\r\n\r\n    setSelectedFile2(file);\r\n    setImageError1(false);\r\n    setImageErrorMessage1(\"\");\r\n  };\r\n\r\n  const validateFile = (file) => {\r\n    const maxSize = 2 * 1024 * 1024; // 5MB\r\n\r\n    if (file && file.size > maxSize) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"File size must be less than 2MB\");\r\n      return false;\r\n    }\r\n\r\n    setImageError(false);\r\n    setImageErrorMessage(\"\");\r\n    return true;\r\n  };\r\n\r\n  const postResumeData = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"resume\", selectedFile2);\r\n\r\n      await axios.post(hrResumePostUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // console.log(`resres ${response.status}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      innerRef={forms[0]}\r\n      initialValues={{\r\n        twitterHandle: fields.twitterHandle,\r\n        residentType: fields.residentType,\r\n        country: fields.country,\r\n        jobTitle: fields.jobTitle,\r\n        jobType: fields.jobType,\r\n        company: fields.company,\r\n      }}\r\n      validateOnMount\r\n      onSubmit={(values) => {\r\n        if (!file1 || validateFile(file1)) {\r\n          handleSubmit(values);\r\n          postResumeData(); // Call the combined submit function\r\n        }\r\n      }}\r\n    >\r\n      {({ errors, touched }) => (\r\n        <Form className=\"av-tooltip tooltip-label-right \">\r\n          <Alert color=\"primary\">\r\n            <strong>Lovely to see you!</strong>\r\n            <br /> Filling out the form only takes a couple of minutes.\r\n            We&apos;d love to learn more about your background and the\r\n            ins-and-outs of why you&apos;d like to become a real estate agent.\r\n            Keep things personal and talk directly to us and your mentees. We\r\n            don&apos;t need jargon and polished cover letters here! <br />\r\n            <br />\r\n            You agree to our code of conduct and the mentor agreement by sending\r\n            the form, so be sure to have a look at those.\r\n          </Alert>\r\n          <FormGroup>\r\n            <Label for=\"image\">Image</Label>\r\n            {imageError && (\r\n              <div className=\"invalid-feedback d-block\">\r\n                {imageErrorMessage}\r\n              </div>\r\n            )}\r\n            <Row>\r\n              <Col md={2} className=\"\">\r\n                <img\r\n                  src={selectedFile || \"/assets/img/profiles/l-1.jpg\"}\r\n                  className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                  style={{\r\n                    width: \"70px\",\r\n                    height: \"70px\",\r\n                    objectFit: \"cover\",\r\n                  }}\r\n                  alt=\"img\"\r\n                />\r\n              </Col>\r\n              <Col md={5} className=\"mt-3 \">\r\n                <InputGroup className=\"mb-3\">\r\n                  <div className=\"mt-1.5\">\r\n                    <Button\r\n                      className=\"default\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        document.getElementById(\"file-upload\").click()\r\n                      }\r\n                    >\r\n                      Upload profile pic <i className=\"iconsminds-upload \" />\r\n                    </Button>\r\n                    <Input\r\n                      id=\"file-upload\"\r\n                      type=\"file\"\r\n                      className=\"form-control d-none\"\r\n                      onChange={handleFileChange}\r\n                    />\r\n                    {file1 && (\r\n                      <p className=\"mt-2\">Selected file: {file1.name}</p>\r\n                    )}\r\n                  </div>\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Row>\r\n              <Col md={6}>\r\n                <Label for=\"jobType\">Job Type</Label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"jobType\"\r\n                  id=\"jobType\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"off\"\r\n                />\r\n              </Col>\r\n              <Col md={6}>\r\n                <Label for=\"jobTitle\">Job Title</Label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"jobTitle\"\r\n                  id=\"jobTitle\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"off\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col md={6}>\r\n                <Label for=\"company\">Company</Label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"company\"\r\n                  id=\"company\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"off\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <FormGroup className=\"error-l-125\">\r\n            <Row>\r\n              <Col md={6}>\r\n                <Label for=\"languages\">Languages known*</Label>\r\n                <Select\r\n                  placeholder=\"Select Languages\"\r\n                  name=\"languages\"\r\n                  isMulti\r\n                  options={languageOptions}\r\n                  // validate={validateLanguages}\r\n                  className=\"react-select\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(selectedOptions) => {\r\n                    const languagesArray = selectedOptions\r\n                      ? selectedOptions.map((option) => option.value)\r\n                      : [];\r\n                    setLanguages(languagesArray);\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col md={6}>\r\n                <Label for=\"twitterHandle\">Twitter Handle (optional)</Label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"twitterHandle\"\r\n                  id=\"twitterHandle\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"off\"\r\n                />\r\n                <FormText color=\"muted\" className=\"\">\r\n                  Omit the &ldquo;@&rdquo; -e.g. &ldquo;dqmonn&rdquo;\r\n                </FormText>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Row className=\"mt-3\">\r\n              <Col md={6}>\r\n                <Label for=\"residentType\">Resident Type*</Label>\r\n                <Field\r\n                  as=\"select\"\r\n                  name=\"residentType\"\r\n                  validate={validateIdentityStatus}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option disabled value=\"\">\r\n                    Select Resident type\r\n                  </option>\r\n                  {indentityStatusList.map((option) => (\r\n                    <option key={option.name} value={option.name}>\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n                {errors.identityStatus && touched.identityStatus && (\r\n                  <div className=\"invalid-feedback d-block\">\r\n                    {errors.identityStatus}\r\n                  </div>\r\n                )}\r\n              </Col>\r\n              <Col md={6}>\r\n                <Label>Country*</Label>\r\n                <Field\r\n                  as=\"select\"\r\n                  name=\"country\"\r\n                  validate={validateLocation}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option disabled value=\"\">\r\n                    Select Country\r\n                  </option>\r\n                  {country.map((option) => (\r\n                    <option key={option.iso_code} value={option.iso_code}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n                {errors.location && touched.location && (\r\n                  <div className=\"invalid-feedback d-block\">\r\n                    {errors.location}\r\n                  </div>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Row>\r\n              <Col md={6}>\r\n                <Label>CV</Label>\r\n                {imageError1 && (\r\n                  <div className=\"invalid-feedback d-block\">\r\n                    {imageErrorMessage1}\r\n                  </div>\r\n                )}\r\n\r\n                <InputGroup className=\"\">\r\n                  <div className=\"\">\r\n                    <Button\r\n                      className=\"default\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        document.getElementById(\"file-upload-resume\").click()\r\n                      }\r\n                    >\r\n                      Upload Resume <i className=\"iconsminds-upload ml-2\" />\r\n                    </Button>\r\n                    {/* <Form> */}\r\n                    <Input\r\n                      id=\"file-upload-resume\"\r\n                      type=\"file\"\r\n                      className=\"d-none\"\r\n                      onChange={handleFileChange2}\r\n                      // validate={validateFile}\r\n                    />\r\n                  </div>\r\n                </InputGroup>\r\n                <div className=\"  my-2 \">\r\n                  {/* {selectedFile2 ? selectedFile2.name : \"\"} */}\r\n                  {selectedFile2\r\n                    ? `selected file is ${selectedFile2.name}`\r\n                    : \"\"}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n\r\n          <Row>\r\n            <Col className=\"text-center\">\r\n              <Button\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className={`btn-shadow btn-multiple-state ${\r\n                  aboutLoading ? \"show-spinner\" : \"\"\r\n                }`}\r\n              >\r\n                <span className=\"spinner d-inline-block\">\r\n                  <span className=\"bounce1\" />\r\n                  <span className=\"bounce2\" />\r\n                  <span className=\"bounce3\" />\r\n                </span>\r\n                <span className=\"label\">Next</span>\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default RealEstateAgentAbout;\r\n","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { createRef, useState } from \"react\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport { Button, Card, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport { EmploymentTypeData } from \"../../Listing/ListingData\";\r\nimport ToasterComponent from \"../../notifications/ToasterComponent\";\r\n\r\nconst RealEstateAgentExperience = ({\r\n  currentStep,\r\n  setCurrentStep,\r\n  setLoading,\r\n}) => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n  const currentYear = new Date().getFullYear();\r\n  const [work, setWork] = useState({\r\n    experiences: [\r\n      {\r\n        company: \"\",\r\n        jobTitle: \"\",\r\n        employmentType: \"\",\r\n        jobLocation: \"\",\r\n        startYear: \"\",\r\n        endYear: \"\",\r\n        // price: \"\",\r\n      },\r\n    ],\r\n  });\r\n  const years = [];\r\n  for (let year = currentYear; year >= 2005; year -= 1) {\r\n    years.push(year);\r\n  }\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  const hrExperienceUrl = `${baseUrl}/api/realestate/experience`;\r\n\r\n  const token = localStorage.getItem(\"tokenRes\");\r\n\r\n  const postExperience = async (data) => {\r\n    setProfileLoading(true);\r\n    try {\r\n      const response = await axios.post(hrExperienceUrl, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setProfileLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"3\");\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 3000);\r\n    } catch (error) {\r\n      setProfileLoading(false);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.statuses\r\n      ) {\r\n        error.response.data.statuses.forEach((status) => {\r\n          NotificationManager.error(\r\n            status.message,\r\n            \"Oops!\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n        });\r\n      } else {\r\n        NotificationManager.error(\r\n          \"something went wrong\",\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeWorkExperience = (index) => {\r\n    setWork((prevState) => ({\r\n      ...prevState,\r\n      experiences: prevState.experiences.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const addWorkExperience = () => {\r\n    setWork((prevState) => ({\r\n      ...prevState,\r\n      experiences: [\r\n        ...prevState.experiences,\r\n        {\r\n          company: \"\",\r\n          jobTitle: \"\",\r\n          employmentType: \"\",\r\n          jobLocation: \"\",\r\n          startYear: \"\",\r\n          endYear: \"\",\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  const handleWorkInputChange = (index, field, value) => {\r\n    setWork((prevState) => ({\r\n      ...prevState,\r\n      experiences: prevState.experiences.map((exp, i) =>\r\n        i === index ? { ...exp, [field]: value } : exp\r\n      ),\r\n      // If the field being updated is 'price', update the outer price as well\r\n      //   price: field === \"price\" ? value : prevState.price,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        innerRef={forms[2]}\r\n        initialValues={work}\r\n        onSubmit={() => {\r\n          postExperience(work);\r\n        }}\r\n        validateOnMount\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className=\"av-tooltip tooltip-label-right my-4\">\r\n            {work.experiences.map((works, index) => (\r\n              // eslint-disable-next-line react/no-array-index-key\r\n              <div key={index}>\r\n                <div className=\"text-right\">\r\n                  {work.experiences.length > 1 && (\r\n                    <span>\r\n                      <Button\r\n                        id=\"closeButton\"\r\n                        color=\"primary\"\r\n                        outline\r\n                        className=\"icon-button\"\r\n                        onClick={() => removeWorkExperience(index)}\r\n                      >\r\n                        <span className=\"text-primary\">\r\n                          <strong>x</strong>\r\n                        </span>\r\n                      </Button>\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup className=\"error-l-75\">\r\n                      <Label>Company Name*</Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        required\r\n                        name={`education[${index}].company`}\r\n                        value={works.company}\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"company\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      />\r\n                      {errors.education?.[index]?.company &&\r\n                        touched.education?.[index]?.company && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].company}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].jobTitle`}>\r\n                        Job title*\r\n                      </Label>\r\n                      <Input\r\n                        name={`education[${index}].jobTitle`}\r\n                        id={`education[${index}].jobTitle`}\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={works.jobTitle}\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"jobTitle\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      />\r\n                      {errors.education?.[index]?.jobTitle &&\r\n                        touched.education?.[index]?.jobTitle && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].jobTitle}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].employmentType`}>\r\n                        Employment type*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].employmentType`}\r\n                        id={`education[${index}].employmentType`}\r\n                        className=\"form-control\"\r\n                        value={works.employmentType}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"employmentType\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      >\r\n                        <option key=\"\" value=\"\" disabled>\r\n                          Select Employment type\r\n                        </option>\r\n                        {EmploymentTypeData.map((option, i) => (\r\n                          // eslint-disable-next-line react/no-array-index-key\r\n                          <option key={i} value={option.label}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n\r\n                      {errors.education?.[index]?.employmentType &&\r\n                        touched.education?.[index]?.employmentType && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].employmentType}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].jobLocation`}>\r\n                        Job location*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name={`education[${index}].jobLocation`}\r\n                        id={`education[${index}].jobLocation`}\r\n                        className=\"form-control\"\r\n                        required\r\n                        value={works.jobLocation}\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"jobLocation\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                        // validate={validatePackageDescription}\r\n                      />\r\n                      {errors.education?.[index]?.jobLocation &&\r\n                        touched.education?.[index]?.jobLocation && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].jobLocation}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].startDate`}>\r\n                        Start year*\r\n                      </Label>\r\n\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].startYear`}\r\n                        id={`education[${index}].startYear`}\r\n                        className=\"form-control\"\r\n                        value={works.startYear}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"startYear\",\r\n                            parseInt(e.target.value, 10)\r\n                          )\r\n                        }\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          Select year\r\n                        </option>\r\n                        {years.map((yr) => (\r\n                          <option key={yr} value={yr}>\r\n                            {yr}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n\r\n                      {errors.education?.[index]?.startYear &&\r\n                        touched.education?.[index]?.startYear && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].startYear}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for={`education[${index}].endYear`}>\r\n                        End year*\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name={`education[${index}].endYear`}\r\n                        id={`education[${index}].endYear`}\r\n                        className=\"form-control\"\r\n                        value={works.endYear}\r\n                        required\r\n                        onChange={(e) =>\r\n                          handleWorkInputChange(\r\n                            index,\r\n                            \"endYear\",\r\n                            parseInt(e.target.value, 10)\r\n                          )\r\n                        }\r\n                        // validate={validatePackageDescription}\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          Select year\r\n                        </option>\r\n                        {years.map((yr) => (\r\n                          <option key={yr} value={yr}>\r\n                            {currentYear === yr ? \"Present\" : yr}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.education?.[index]?.endYear &&\r\n                        touched.education?.[index]?.endYear && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.education[index].endYear}\r\n                          </div>\r\n                        )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <hr />\r\n              </div>\r\n            ))}\r\n\r\n            <Card\r\n              onClick={addWorkExperience}\r\n              className=\"p-3 text-center my-5\"\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <h3 className=\"font-weight-bold text-primary\">\r\n                + Add more work experience\r\n              </h3>\r\n            </Card>\r\n            {/* <Row className=\"my-2\">\r\n              <Col md={12}>\r\n                <FormGroup>\r\n                  <Label for=\"price\">Price*</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    id=\"price\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={work.price || \"\"}\r\n                    onChange={(e) => {\r\n                      const value = e.target?.value;\r\n                      if (value !== null && value !== undefined) {\r\n                        setWork((prevState) => ({\r\n                          ...prevState,\r\n                          price: value, // Update price directly here\r\n                        }));\r\n                      }\r\n                    }}\r\n                  />\r\n                  {errors.price && touched.price && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.price}\r\n                    </div>\r\n                  )}\r\n                </FormGroup>\r\n              </Col>\r\n            </Row> */}\r\n            <Row>\r\n              {\" \"}\r\n              <Col>\r\n                {\" \"}\r\n                <Button color=\"primary\" onClick={handlePrevStep}>\r\n                  Previous\r\n                </Button>\r\n              </Col>\r\n              <Col className=\"text-right\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={`btn-shadow btn-multiple-state ${\r\n                    profileLoading ? \"show-spinner\" : \"\"\r\n                  }`}\r\n                >\r\n                  <span className=\"spinner d-inline-block\">\r\n                    <span className=\"bounce1\" />\r\n                    <span className=\"bounce2\" />\r\n                    <span className=\"bounce3\" />\r\n                  </span>\r\n                  <span className=\"label\">Submit</span>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RealEstateAgentExperience;\r\n","import axios from \"axios\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { createRef, useState } from \"react\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Col,\r\n  FormGroup,\r\n  FormText,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { validateBio } from \"../../AlumniRegister/validation\";\r\nimport ToasterComponent from \"../../notifications/ToasterComponent\";\r\n\r\nconst RealEstateAgentProfile = ({ currentStep, setCurrentStep }) => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n\r\n  const [aboutLoading, setAboutLoading] = useState(false);\r\n\r\n  const [skillsTag, setSkillsTag] = useState([]);\r\n\r\n  const [fields] = useState({\r\n    personalWebsite: \"\",\r\n    bio: \"\",\r\n  });\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n\r\n  const hrProfileUrl = `${baseUrl}/api/realestate/profile`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  const postProfileData = async (data) => {\r\n    const hrProfile = {\r\n      personalWebsite: data.personalWebsite,\r\n      skills: data.skills,\r\n      bio: data.bio,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(hrProfileUrl, hrProfile, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\", // Set Content-Type to application/json\r\n        },\r\n      });\r\n      setAboutLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"1\");\r\n    } catch (error) {\r\n      setAboutLoading(false);\r\n      NotificationManager.error(\r\n        \"Failed to submit profile data\",\r\n        \"Oops!\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    setAboutLoading(true);\r\n\r\n    try {\r\n      await postProfileData({\r\n        personalWebsite: values.personalWebsite,\r\n        skills: skillsTag,\r\n        bio: values.bio,\r\n      });\r\n    } catch (error) {\r\n      setAboutLoading(false); // Stop loading in case of error\r\n    }\r\n  };\r\n\r\n  const handleTagsChange = (newSkills) => {\r\n    setSkillsTag(newSkills);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        innerRef={forms[0]}\r\n        initialValues={{\r\n          personalWebsite: fields.personalWebsite,\r\n          bio: fields.bio,\r\n        }}\r\n        validateOnMount\r\n        // onSubmit={(values) => {\r\n        //   if (!file1 || validateFile(file1)) {\r\n        //     postDataAbout({\r\n        //       ...values,\r\n        //       language: languages,\r\n        //       skills: skillsTag,\r\n        //     });\r\n        //   }\r\n        // }}\r\n        onSubmit={(values) => {\r\n          handleSubmit(values);\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className=\"av-tooltip tooltip-label-right \">\r\n            <Alert color=\"primary\">\r\n              <strong>Lovely to see you!</strong>\r\n              <br /> Filling out the form only takes a couple of minutes.\r\n              We&apos;d love to learn more about your background and the\r\n              ins-and-outs of why you&apos;d like to become a mentor. Keep\r\n              things personal and talk directly to us and your mentees. We\r\n              don&apos;t need jargon and polished cover letters here! <br />\r\n              <br />\r\n              You agree to our code of conduct and the mentor agreement by\r\n              sending the form, so be sure to have a look at those.\r\n            </Alert>\r\n\r\n            <FormGroup>\r\n              <Row>\r\n                <Col md={12}>\r\n                  <FormGroup>\r\n                    <Label for=\"skills\">Skills*</Label>\r\n\r\n                    <TagsInput\r\n                      required\r\n                      value={skillsTag}\r\n                      onChange={handleTagsChange}\r\n                      inputProps={{ placeholder: \"Add skills \" }}\r\n                      addOnBlur\r\n                      addKeys={[13, 188]}\r\n                    />\r\n\r\n                    <FormText>Add skill and press Enter or Comma </FormText>\r\n                    <FormText color=\"muted\">\r\n                      Describe your expertise to connect with mentors who have\r\n                      similar interests.\r\n                      <br />\r\n                      {/* Comma-separated list of your skills  */}\r\n                      (keep it below 10). Mentors will use this to find you.\r\n                    </FormText>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"bio\">Bio*</Label>\r\n              <Field\r\n                as=\"textarea\"\r\n                name=\"bio\"\r\n                id=\"bio\"\r\n                className=\"form-control\"\r\n                validate={validateBio}\r\n                autoComplete=\"off\"\r\n              />\r\n              {errors.bio && touched.bio && (\r\n                <div className=\"invalid-feedback d-block\">{errors.bio}</div>\r\n              )}\r\n              <FormText color=\"muted\">\r\n                Tell us (and your mentees) a little bit about yourself. Talk\r\n                about yourself in the first person, as if you&apos;d directly\r\n                talk to a mentee. This will be public.\r\n              </FormText>\r\n            </FormGroup>\r\n            <FormGroup className=\"error-l-125\">\r\n              <Row>\r\n                <Col md={12}>\r\n                  <Label for=\"website\">Personal Website (optional)</Label>\r\n                  <Field\r\n                    type=\"url\"\r\n                    name=\"website\"\r\n                    id=\"website\"\r\n                    className=\"form-control\"\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  <FormText color=\"muted\">\r\n                    You can add your blog, GitHub profile or similar here\r\n                  </FormText>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n            \r\n              \r\n            <Row>    \r\n                {\" \"}\r\n              <Col>\r\n                {\" \"}\r\n                <Button color=\"primary\" onClick={handlePrevStep}>\r\n                  Previous\r\n                </Button>\r\n              </Col>\r\n              <Col className=\"text-right\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className={`btn-shadow btn-multiple-state ${\r\n                    aboutLoading ? \"show-spinner\" : \"\"\r\n                  }`}\r\n                >\r\n                  <span className=\"spinner d-inline-block\">\r\n                    <span className=\"bounce1\" />\r\n                    <span className=\"bounce2\" />\r\n                    <span className=\"bounce3\" />\r\n                  </span>\r\n                  <span className=\"label\">Next</span>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RealEstateAgentProfile;\r\n","/* eslint-disable no-param-reassign */\r\n\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { adminRoot } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Jumbotron,\r\n  NavLink,\r\n  Row,\r\n  Spinner,\r\n} from \"reactstrap\";\r\n\r\nimport RealEstateAgentAbout from \"./RealEstateAgentAbout\";\r\nimport RealEstateAgentExperience from \"./RealEstateAgentExperience\";\r\nimport RealEstateAgentProfile from \"./RealEstateAgentProfile\";\r\n\r\nconst RealEstateAgentApply = () => {\r\n  const steps = [\"About you\", \"profile\", \"Experience\"];\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const status = localStorage.getItem(\"status\");\r\n    console.log(\"status\", status);\r\n    if (status) {\r\n      if (status === \"0\") {\r\n        setCurrentStep(0);\r\n      } else if (status === \"1\") {\r\n        setCurrentStep(1);\r\n      } else if (status === \"3\") {\r\n        setCurrentStep(2);\r\n      } else if (status === \"7\") {\r\n        setCurrentStep(3);\r\n      } else {\r\n        setCurrentStep(0);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n  const handleMySlotsClick = () => history.push(`${adminRoot}/listing/stay`);\r\n\r\n  return (\r\n    <Card className=\"mx-auto my-4 \" style={{ maxWidth: \"900px\" }}>\r\n      <CardBody className=\"wizard wizard-default\">\r\n        <h1 className=\"mt-4 font-weight-bold\">Apply as a Real Estate Agent</h1>\r\n        <ul className=\"nav nav-tabs justify-content-center\">\r\n          {steps.map((stepItem, index) => (\r\n            <li\r\n              // eslint-disable-next-line\r\n              key={`topNavStep_${index}`}\r\n              className={`nav-item ${\r\n                // eslint-disable-next-line\r\n                index === currentStep\r\n                  ? \"step-doing\"\r\n                  : index < currentStep\r\n                  ? \"step-done\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <NavLink to=\"#\" location={{}} className=\"nav-link\">\r\n                <span>{stepItem}</span>\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"wizard-basic-step\">\r\n          {currentStep === 0 && (\r\n            <RealEstateAgentAbout\r\n              currentStep={currentStep}\r\n              setCurrentStep={setCurrentStep}\r\n            />\r\n          )}\r\n          {currentStep === 1 && (\r\n            <RealEstateAgentProfile\r\n              currentStep={currentStep}\r\n              setCurrentStep={setCurrentStep}\r\n            />\r\n          )}\r\n          {currentStep === 2 && (\r\n            <RealEstateAgentExperience\r\n              currentStep={currentStep}\r\n              setCurrentStep={setCurrentStep}\r\n              setLoading={setLoading}\r\n            />\r\n          )}\r\n          {loading ? (\r\n            <div className=\"wizard-basic-step text-center pt-3\">\r\n              <Spinner color=\"primary\" className=\"mb-1\" />\r\n              <p>Submitting</p>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {currentStep === 3 && (\r\n                <Row>\r\n                  <Colxx xxs=\"12\" className=\"mb-4\">\r\n                    <Card>\r\n                      <CardBody className=\"text-center\">\r\n                        <i\r\n                          alt=\"\"\r\n                          className=\"glyph-icon iconsminds-yes text-success\"\r\n                          style={{ fontSize: \"75px\" }}\r\n                        />\r\n                        <Jumbotron className=\"text-center\">\r\n                          <h1 className=\"display-4\">Submitted Successfully!</h1>\r\n                          <p className=\"lead\">We will reach you shortly</p>\r\n                          <hr className=\"my-4\" />\r\n                          <p className=\"lead mb-0\">\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"lg\"\r\n                              onClick={() => handleMySlotsClick()}\r\n                            >\r\n                              stay list\r\n                            </Button>\r\n                          </p>\r\n                        </Jumbotron>\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Colxx>\r\n                </Row>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default injectIntl(RealEstateAgentApply);\r\n","// /* eslint-disable no-param-reassign */\r\n// import React from \"react\";\r\n// import {\r\n//   Button,\r\n// } from \"reactstrap\";\r\n// import {WithWizard } from \"react-albus\";\r\n\r\n// const BottomNavigation = ({\r\n//     className,\r\n//     onClickPrev,\r\n//     prevLabel,\r\n//     onClickNext,\r\n//     // nextLabel,\r\n//   }) => {\r\n//     return (\r\n//       <WithWizard\r\n//         render={({ next, previous, step, steps }) => {\r\n//           if (steps.indexOf(step) === 3) {\r\n//             return null;\r\n//           }\r\n\r\n//           return (\r\n//             <div className={`wizard-buttons ${className}`}>\r\n//               {steps.indexOf(step) > 0 && (\r\n//                 <div className=\"position-relative w-100 h-100\">\r\n//                   <Button\r\n//                     color=\"primary\"\r\n//                     outline\r\n//                     className={`mr-1 ${\r\n//                       steps.indexOf(step) <= 0 ? \"disabled\" : \"\"\r\n//                     }`}\r\n//                     onClick={() => {\r\n//                       onClickPrev(previous, steps, step);\r\n//                     }}\r\n//                   >\r\n//                     {prevLabel}\r\n//                   </Button>\r\n//                 </div>\r\n//               )}\r\n//               <div>\r\n//                 <Button\r\n//                   color=\"primary\"\r\n//                   className={`${\r\n//                     steps.indexOf(step) >= steps.length - 1 ? \"disabled\" : \"\"\r\n//                   } text-nowrap  ml-2`}\r\n//                   onClick={() => {\r\n//                     onClickNext(next, steps, step);\r\n//                   }}\r\n//                 >\r\n//                   {/* {nextLabel} */}\r\n//                   {steps.indexOf(step) === 2 ? \"Submit\" : \"Next Step\"}\r\n//                 </Button>\r\n//               </div>\r\n//             </div>\r\n//           );\r\n//         }}\r\n//       />\r\n//     );\r\n//   };\r\n\r\n//   export default BottomNavigation;\r\n\r\n/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-param-reassign */\r\nimport React from \"react\";\r\nimport { WithWizard } from \"react-albus\";\r\nimport { Button } from \"reactstrap\";\r\n\r\n\r\n\r\nconst BottomNavigation = ({\r\n  className,\r\n  onClickPrev,\r\n  prevLabel,\r\n  onClickNext,\r\n  nextLabel,\r\n  licenseBalance\r\n}) => {\r\n  return (\r\n    <WithWizard\r\n      render={({ next, previous, step, steps }) => (\r\n        <div className={`wizard-buttons ${className}`}>\r\n          {/* {steps.indexOf(step) < steps.length - 1 && (\r\n            <Button\r\n              color=\"primary\"\r\n              className='mr-1'\r\n              onClick={() => {\r\n                onClickPrev(previous, steps, step);\r\n              }}\r\n            >\r\n              {prevLabel}\r\n            </Button>\r\n          )} */}\r\n          {step !== steps[0] && step !== steps[steps.length - 1] && (\r\n            <Button\r\n              color=\"primary\"\r\n              className=\"mr-1\"\r\n              onClick={() => {\r\n                onClickPrev(previous, steps, step);\r\n              }}\r\n            >\r\n              {prevLabel}\r\n            </Button>\r\n          )}\r\n\r\n          {steps.indexOf(step) < steps.length - 1 && (\r\n            <Button\r\n              color=\"primary\"\r\n              className=\"ml-1\"\r\n              onClick={() => {\r\n                onClickNext(next, steps, step);\r\n              }}\r\n              disabled={step.id === 'step2' && !licenseBalance}\r\n            >\r\n              {nextLabel}\r\n            </Button>\r\n          )}\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BottomNavigation;\r\n\r\n\r\n","/* eslint-disable no-param-reassign */\r\nimport axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  CustomInput,\r\n  Form,\r\n  FormGroup,\r\n  InputGroup,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\n//  import { useLocation } from 'react-router-dom/cjs/react-router-dom.min';\r\n//  Dropdown, DropdownItem, DropdownMenu,\r\n//  DropdownToggle\r\nimport CustomSelectInput from \"components/common/CustomSelectInput\";\r\nimport { Step, Steps, Wizard } from \"react-albus\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\r\nimport Select from \"react-select\";\r\n\r\nimport TopNavigation from \"components/wizard/TopNavigation\";\r\nimport BottomNavigation from \"../my-login/BottomNavigation\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\nimport DateRangePicker from \"./DateRangePicker\";\r\n\r\n// const PopupWizard = ({ selectedDate,setSelectedDate,upcomingsession,mentorId,mentorName})\r\nconst PopupWizard = ({ selectedDate, setSelectedDate, mentorId, role }) => {\r\n  const history = useHistory();\r\n\r\n  //  const url=`${baseUrl}/sessionUpcomingHistroy`;\r\n\r\n  //  if you want to change backend url uncomment the below line\r\n  // const url=`${baseUrl}/api/calendar/mentee/upcoming-bookedslots-session-history`\r\n\r\n  // const url1=`${baseUrl}/ mentorAppointmentTime`\r\n  // const url1 = `${baseUrl}/api/calendar/appointment/UserProfile`;\r\n  const url1 = `${baseUrl}/api/calendar/appointment/book?role=${role}`;\r\n\r\n  //  if you want to change backend url uncomment the below line\r\n\r\n  const redirectToSessionLists = () => {\r\n    // Redirect to the specified URL with the query parameter\r\n    history.push(\"/app/sessionlists?appointment=true\");\r\n  };\r\n  // const [selectedDate, setSelectedDate] = useState(null);\r\n  // const [storedData, setStoredData] = useState(null);\r\n  // const [dropdownBasicOpen, setDropdownBasicOpen] = useState(false);\r\n  // const [dropdownBasicOpen1, setDropdownBasicOpen1] = useState(false);\r\n  // const [dropdownBasicOpen2, setDropdownBasicOpen2] = useState(false);\r\n  // const [dropdownBasicOpen3, setDropdownBasicOpen3] = useState(false);\r\n  // const [dropdownBasicOpen4, setDropdownBasicOpen4] = useState(false);\r\n  // const [dropdownBasicOpen5, setDropdownBasicOpen5] = useState(false);\r\n  const [selectedradiobutton, setSelectedRadioButton] = useState(null);\r\n  const [selectedHourDropdown, setSelectedHourDropdown] = useState(null); // Renamed state variable\r\n  const [selectedHourDropdown1, setSelectedHourDropdown1] = useState(null); // Renamed state variable\r\n  //  const [upcomingSessions] = useState([]);\r\n  const [minutedrop, setMinutedrop] = useState(null);\r\n  const [minutedrop1, setMinutedrop1] = useState(null);\r\n  const [selectedfromampm, setSelectedFromAmPm] = useState(null); // State for AM selection\r\n  const [selectedfromampm1, setSelectedFromAmPm1] = useState(null); // State for AM selection\r\n  const [license, setLicense] = useState([]);\r\n\r\n  // const url=`${baseUrl}/licenseDetails`;\r\n\r\n  // Backend Url\r\n  // const url = `${baseUrl}/api/calendar/mentee/license-details`;\r\n  const url = `${baseUrl}/api/calendar/license-details`;\r\n\r\n  const LicenseDetails = async () => {\r\n    console.log(\"Mentor ID:\", mentorId);\r\n    console.log(\"Role from async function:\", role);\r\n    try {\r\n      // Generate newData object\r\n      const selectedDateTime = new Date(selectedDate);\r\n      const selectedHour =\r\n        (selectedHourDropdown % 12) + (selectedfromampm === \"PM\" ? 12 : 0);\r\n      selectedDateTime.setHours(selectedHour, minutedrop, 0, 0);\r\n      const fromTimeStamp = selectedDateTime.getTime();\r\n\r\n      const toDateTime = new Date(selectedDateTime);\r\n      const selectedHourTo =\r\n        (selectedHourDropdown1 % 12) + (selectedfromampm1 === \"PM\" ? 12 : 0);\r\n      toDateTime.setHours(selectedHourTo, minutedrop1, 0, 0);\r\n      const toTimeStamp = toDateTime.getTime();\r\n\r\n      const newData = {\r\n        userId: mentorId,\r\n        role,\r\n        fromTimeStamp,\r\n        toTimeStamp,\r\n      };\r\n\r\n      // Convert newData object to query parameters string\r\n      const queryString = Object.keys(newData)\r\n        .map(\r\n          (key) =>\r\n            `${encodeURIComponent(key)}=${encodeURIComponent(newData[key])}`\r\n        )\r\n        .join(\"&\");\r\n\r\n      // Perform axios request with query parameters\r\n      const response = await axios.get(`${url}?${queryString}`);\r\n      console.log(\"Response from server:\", response.data);\r\n\r\n      // Set the license state with the response data\r\n      setLicense(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLicenseNextButtonClick = () => {\r\n    LicenseDetails();\r\n  };\r\n\r\n  const handleNextButtonClick = () => {\r\n    // Convert selected date to UTC timestamp\r\n    const selectedDateTime = new Date(selectedDate);\r\n\r\n    // Set the hours and minutes for the selected date\r\n    const selectedHour =\r\n      (selectedHourDropdown % 12) + (selectedfromampm === \"PM\" ? 12 : 0); // Adjust for PM\r\n    selectedDateTime.setHours(selectedHour, minutedrop, 0, 0);\r\n    const fromTimeStamp = selectedDateTime.getTime(); // Get the UTC timestamp for 'from' time\r\n\r\n    // Calculate 'to' time\r\n    const toDateTime = new Date(selectedDateTime); // Create a new Date object based on 'from' time\r\n    const selectedHourTo =\r\n      (selectedHourDropdown1 % 12) + (selectedfromampm1 === \"PM\" ? 12 : 0); // Adjust for PM\r\n    toDateTime.setHours(selectedHourTo, minutedrop1, 0, 0); // Set the 'to' hour\r\n    const toTimeStamp = toDateTime.getTime(); // Get the UTC timestamp for 'to' time\r\n\r\n    console.log(\"From Timestamp (milliseconds):\", fromTimeStamp);\r\n    console.log(\"To Timestamp (milliseconds):\", toTimeStamp);\r\n\r\n    const newData = {\r\n      mentorId,\r\n      mode: selectedradiobutton,\r\n      fromTimeStamp,\r\n      toTimeStamp,\r\n    };\r\n\r\n    axios\r\n      .post(url1, [newData])\r\n      .then((response) => {\r\n        // Handle successful response, such as redirecting the user\r\n        console.log(\"Post request successful:\", response.data);\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n        // redirectToSessionLists(); // Redirect to the specified URL\r\n      })\r\n      .catch((error) => {\r\n        // Handle error\r\n        console.error(\"Error posting data:\", error);\r\n        if (error.response) {\r\n          ToasterComponent(\"error\", error.response.data.statuses);\r\n        }\r\n      });\r\n  };\r\n\r\n  // This function is used to check the available slot is same as the input given by the user\r\n  const handleCheckAvailability = () => {\r\n    // Convert selected date to UTC timestamp\r\n    const selectedDateTime = new Date(selectedDate);\r\n\r\n    // Set the hours and minutes for the selected date\r\n    const selectedHour =\r\n      (selectedHourDropdown % 12) + (selectedfromampm === \"PM\" ? 12 : 0); // Adjust for PM\r\n    selectedDateTime.setHours(selectedHour, minutedrop, 0, 0);\r\n    const fromTimeStamp = selectedDateTime.getTime(); // Get the UTC timestamp for 'from' time\r\n\r\n    // Calculate 'to' time\r\n    const toDateTime = new Date(selectedDateTime); // Create a new Date object based on 'from' time\r\n    const selectedHourTo =\r\n      (selectedHourDropdown1 % 12) + (selectedfromampm1 === \"PM\" ? 12 : 0); // Adjust for PM\r\n    toDateTime.setHours(selectedHourTo, minutedrop1, 0, 0); // Set the 'to' hour\r\n    const toTimeStamp = toDateTime.getTime(); // Get the UTC timestamp for 'to' time\r\n\r\n    console.log(\"From Timestamp (milliseconds):\", fromTimeStamp);\r\n    console.log(\"To Timestamp (milliseconds):\", toTimeStamp);\r\n\r\n    const availabilityUrl = `${baseUrl}/api/calendar/appointment/booking/availability?userId=${mentorId}&fromTimeStamp=${fromTimeStamp}&toTimeStamp=${toTimeStamp}`;\r\n\r\n    return axios\r\n      .get(availabilityUrl)\r\n      .then((response) => {\r\n        // Handle successful response\r\n        console.log(\"Availability check successful:\", response.data);\r\n        // alert(\"Availability data fetched successfully\"); // Use alert instead of Toaster\r\n        return response; // Return the response for further processing if needed\r\n      })\r\n      .catch((error) => {\r\n        // Handle error\r\n        console.error(\"Error checking availability:\", error);\r\n        if (error.response) {\r\n          alert(error.response.data.statuses || \"Error fetching availability\"); // Use alert for error messages\r\n        } else {\r\n          alert(\"An unexpected error occurred. Please try again.\"); // Handle unexpected errors\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleDropdownItemClick = (selectedHour) => {\r\n    // Handle the selected hour as needed\r\n    setSelectedHourDropdown(selectedHour.value);\r\n\r\n    console.log(`Selected hour: ${selectedHour.value}`);\r\n    // setSelectedHourDropdown(selectedHour);\r\n  };\r\n\r\n  const handleDropdownItemClick1 = (selectedMinute) => {\r\n    // Handle the selected minutes as needed\r\n    setMinutedrop(selectedMinute.value);\r\n    //  setMinutedrop1(selectedMinute);\r\n    // console.log(`Selected minute: ${selectedMinute}`);\r\n    // setMinuteDrop(selectedMinute);\r\n  };\r\n\r\n  // const handleDropdownItemClick2 = (selectedHour) => {\r\n  //   // Handle the selected hour as needed\r\n  //   setSelectedHourDropdown1(selectedHour)\r\n  //   console.log(`Selected hour: ${selectedHour}`);\r\n  //   // setSelectedHourDropdown(selectedHour);\r\n  // };\r\n\r\n  const handleDropdownItemClick2 = (selectedHour) => {\r\n    // Handle the selected minutes as needed\r\n    setSelectedHourDropdown1(selectedHour.value);\r\n  };\r\n  const handleDropdownItemClick3 = (selectedMinute) => {\r\n    // Handle the selected minutes as needed\r\n    setMinutedrop1(selectedMinute.value);\r\n    // console.log(`Selected minute: ${selectedMinute.value}`);\r\n    // setMinuteDrop(selectedMinute);\r\n  };\r\n\r\n  // const handleDropdownItemClick4 = (selectedAmPmFrom) => {\r\n  //   // Handle the selected minutes as needed\r\n  //   setSelectedFromAmPm(selectedAmPmFrom);\r\n  //   console.log(`Selected from AM/PM: ${selectedAmPmFrom}`);\r\n  //   // setMinuteDrop(selectedMinute);\r\n  // };\r\n\r\n  const handleDropdownItemClick4 = (selectedAmPmFrom) => {\r\n    // Handle the selected minutes as needed\r\n    setSelectedFromAmPm(selectedAmPmFrom.value);\r\n    console.log(`Selected from AM/PM: ${selectedAmPmFrom.value}`);\r\n    // setMinuteDrop(selectedMinute);\r\n  };\r\n  const handleDropdownItemClick5 = (selectedAmPmTo) => {\r\n    // Handle the selected minutes as needed\r\n    setSelectedFromAmPm1(selectedAmPmTo.value);\r\n    console.log(`Selected from AM/PM: ${selectedAmPmTo.value}`);\r\n    // setMinuteDrop(selectedMinute);\r\n  };\r\n  // const generateDropdownItems = () => {\r\n  //   const items = [];\r\n  //   for (let i = 1; i <= 12; i+=1) {\r\n  //     const formattedHour = i < 10 ? `0${i}` : i;\r\n  //     items.push(\r\n  //       <DropdownItem key={i} onClick={() => handleDropdownItemClick(i)} >\r\n  //         {formattedHour}\r\n  //       </DropdownItem>\r\n  //     );\r\n  //   }\r\n  //   return items;\r\n  // };\r\n\r\n  // const generateDropdownItemsSelect = () => {\r\n  //   const items = [];\r\n  //   for (let i = 1; i <= 12; i += 1) {\r\n  //     const formattedHour = i < 10 ? `0${i}` : i;\r\n  //     items.push(\r\n  //       <option key={i} value={i}>\r\n  //         {formattedHour}\r\n  //       </option>\r\n  //     );\r\n  //   }\r\n  //   return items;\r\n  // };\r\n\r\n  const generateDropdownItemsSelect = () => {\r\n    const items = [];\r\n    for (let i = 1; i <= 12; i += 1) {\r\n      const formattedHour = i < 10 ? `0${i}` : i;\r\n      items.push({ value: formattedHour, label: formattedHour });\r\n    }\r\n    return items;\r\n  };\r\n  const generateMinuteDropdownItems = () => {\r\n    const minutes = [0, 15, 30, 45];\r\n    const items = [];\r\n\r\n    minutes.forEach((minute) => {\r\n      const formattedMinute = minute < 10 ? `0${minute}` : `${minute}`;\r\n      items.push({ value: formattedMinute, label: formattedMinute });\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n  // const generateMinuteDropdownItems = () => {\r\n  //   const minutes = [0, 15, 30, 45];\r\n  //   const items = minutes.map((minute) => {\r\n  //     const formattedMinute = minute < 10 ? `0${minute}` : minute;\r\n  //     return (\r\n  //       <DropdownItem key={minute} onClick={() => handleDropdownItemClick1(minute)}>\r\n  //         {formattedMinute}\r\n  //       </DropdownItem>\r\n  //     );\r\n  //   });\r\n  //   return items;\r\n  // };\r\n  // const generateDropdownItems1 = () => {\r\n  //   const items = [];\r\n  //   for (let i = 1; i <= 12; i+=1) {\r\n  //     const formattedHour = i < 10 ? `0${i}` : i;\r\n  //     items.push(\r\n  //       <DropdownItem key={i} onClick={() => handleDropdownItemClick2(i)} >\r\n  //         {formattedHour}\r\n  //       </DropdownItem>\r\n  //     );\r\n  //   }\r\n  //   return items;\r\n  // };\r\n  const generateDropdownItems1 = () => {\r\n    const items = [];\r\n    for (let i = 1; i <= 12; i += 1) {\r\n      const formattedHour = i < 10 ? `0${i}` : i;\r\n      items.push({ value: formattedHour, label: formattedHour });\r\n    }\r\n    return items;\r\n  };\r\n  const generateMinuteDropdownItems1 = () => {\r\n    const minutes = [0, 15, 30, 45];\r\n    const items = [];\r\n\r\n    minutes.forEach((minute) => {\r\n      const formattedMinute = minute < 10 ? `0${minute}` : `${minute}`;\r\n      items.push({ value: formattedMinute, label: formattedMinute });\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n  // const generateMinuteDropdownItems1 = () => {\r\n  //   const minutes = [0, 15, 30, 45];\r\n  //   const items = minutes.map((minute) => {\r\n  //     const formattedMinute = minute < 10 ? `0${minute}` : minute;\r\n  //     return (\r\n  //       <DropdownItem key={minute} onClick={() => handleDropdownItemClick3(minute)}>\r\n  //         {formattedMinute}\r\n  //       </DropdownItem>\r\n  //     );\r\n  //   });\r\n  //   return items;\r\n  // };\r\n  const generateAmPmDropdownItems = () => {\r\n    const amPmOptions = [\"AM\", \"PM\"];\r\n    const items = [];\r\n\r\n    amPmOptions.forEach((amPm) => {\r\n      items.push({ value: amPm, label: amPm });\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n  // const generateAmPmDropdownItems = () => {\r\n  //   const amPmOptions = ['AM', 'PM'];\r\n  //   return amPmOptions.map((amPm) => (\r\n  //     <DropdownItem key={amPm} onClick={() => handleDropdownItemClick4(amPm)}>\r\n  //       {amPm}\r\n  //     </DropdownItem>\r\n  //   ));\r\n  // };\r\n\r\n  const generateAmPmDropdownItems1 = () => {\r\n    const amPmOptions = [\"AM\", \"PM\"];\r\n    const items = [];\r\n\r\n    amPmOptions.forEach((amPm) => {\r\n      items.push({ value: amPm, label: amPm });\r\n    });\r\n\r\n    return items;\r\n  };\r\n  // const generateAmPmDropdownItems1 = () => {\r\n  //   const amPmOptions = ['AM', 'PM'];\r\n  //   return amPmOptions.map((amPm) => (\r\n  //     <DropdownItem key={amPm} onClick={() => handleDropdownItemClick5(amPm)}>\r\n  //       {amPm}\r\n  //     </DropdownItem>\r\n  //   ));\r\n  // };\r\n\r\n  const topNavClick = (stepItem, push) => {\r\n    push(stepItem.id);\r\n  };\r\n\r\n  // const onClickNext = (goToNext, steps, step) => {\r\n  //   step.isDone = true;\r\n  //   if (steps.length - 1 <= steps.indexOf(step)) {\r\n  //     return;\r\n  //   }\r\n  //   goToNext();\r\n  // };\r\n  // const onClickNext = (goToNext, steps, step) => {\r\n  //   step.isDone = true;\r\n  //   if (steps.length - 1 <= steps.indexOf(step)) {\r\n  //     redirectToSessionLists();\r\n  //   } else {\r\n  //     goToNext();\r\n  //   }\r\n  // };\r\n  const onClickNext = (goToNext, steps, step) => {\r\n    step.isDone = true;\r\n\r\n    // new code start\r\n\r\n    // If the current step is Step 1, handle availability check\r\n    if (step.id === \"step1\") {\r\n      handleCheckAvailability().then((response) => {\r\n        // Log the response to ensure it's correct\r\n        console.log(\"Response from availability check:\", response);\r\n\r\n        if (response && response.data && response.data.status) {\r\n          // If the status is true, allow to go to the next step\r\n          handleLicenseNextButtonClick();\r\n          goToNext();\r\n        } else {\r\n          // If the status is false, show an error and do not proceed\r\n          // alert(\"There is no such slot\");\r\n          ToasterComponent(\"error\", [{ message: \"Slot is unavailable\" }]);\r\n        }\r\n      });\r\n      return; // Prevent further execution until the availability check is done\r\n    }\r\n\r\n    // new code ends\r\n    if (steps.length - 1 <= steps.indexOf(step)) {\r\n      if (step.id === \"step3\") {\r\n        redirectToSessionLists(); // Redirect to the session list\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (step.id === \"step2\") {\r\n      handleNextButtonClick();\r\n      // Call the function to post data when moving to Step 2\r\n    }\r\n\r\n    // handleNextButtonClick(); // Call the function to post data when moving to the next step\r\n    handleLicenseNextButtonClick();\r\n    goToNext();\r\n  };\r\n\r\n  const onClickPrev = (goToPrev, steps, step) => {\r\n    if (steps.indexOf(step) <= 0) {\r\n      return;\r\n    }\r\n    goToPrev();\r\n  };\r\n\r\n  const selectData = generateDropdownItemsSelect();\r\n  const minutesSelectData = generateMinuteDropdownItems();\r\n  const toHoursSelectData = generateDropdownItems1();\r\n  const toMinutesSelectData = generateMinuteDropdownItems1();\r\n  const fromAmPmSelectData = generateAmPmDropdownItems();\r\n  const toAmPmSelectData = generateAmPmDropdownItems1();\r\n\r\n  return (\r\n    <Row>\r\n      <Colxx>\r\n        <Card className=\"mt-2    \">\r\n          <CardBody className=\"wizard wizard-default  \">\r\n            <Wizard>\r\n              <TopNavigation\r\n                className=\"justify-content-center\"\r\n                disableNav\r\n                topNavClick={topNavClick}\r\n              />\r\n              <Steps>\r\n                <Step\r\n                  id=\"step1\"\r\n                  // name={messages['wizard.step-name-1']}\r\n                  name=\"step 1\"\r\n                  desc=\"Schedule appointement\"\r\n                >\r\n                  <Form className=\" \">\r\n                    <FormGroup className=\"\">\r\n                      <div className=\"\">\r\n                        <Label className=\"text-one font-weight-bold\">\r\n                          Appointment date\r\n                        </Label>\r\n                        <InputGroup className=\"mb-3 \">\r\n                          <DateRangePicker\r\n                            selectedDate={selectedDate}\r\n                            setSelectedDate={setSelectedDate}\r\n                          />\r\n                        </InputGroup>\r\n                      </div>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                      <div className=\"\">\r\n                        <div>\r\n                          <Label className=\"text-one font-weight-bold\">\r\n                            From\r\n                          </Label>\r\n                          <Row>\r\n                            <Col md={4} sm={12} lg={4}>\r\n                              <div className=\"form-group has-float-label\">\r\n                                <Label>Hours</Label>\r\n\r\n                                <Select\r\n                                  components={{ Input: CustomSelectInput }}\r\n                                  className=\"react-select\"\r\n                                  classNamePrefix=\"react-select\"\r\n                                  name=\"form-field-name\"\r\n                                  value={generateDropdownItemsSelect().find(\r\n                                    (option) =>\r\n                                      option.value === selectedHourDropdown\r\n                                  )}\r\n                                  onChange={handleDropdownItemClick}\r\n                                  options={[\r\n                                    {\r\n                                      value: \"\",\r\n                                      label: \"Hours\",\r\n                                      isDisabled: true,\r\n                                    },\r\n                                    ...selectData,\r\n                                  ]}\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            <Col md={4} sm={12} lg={4}>\r\n                              <div className=\"form-group has-float-label\">\r\n                                <Label>Minutes</Label>\r\n\r\n                                <Select\r\n                                  components={{ Input: CustomSelectInput }}\r\n                                  className=\"react-select\"\r\n                                  classNamePrefix=\"react-select\"\r\n                                  name=\"form-field-name\"\r\n                                  value={generateMinuteDropdownItems().find(\r\n                                    (option) => option.value === minutedrop\r\n                                  )}\r\n                                  onChange={handleDropdownItemClick1}\r\n                                  options={[\r\n                                    {\r\n                                      value: \"\",\r\n                                      label: \"Minutes\",\r\n                                      isDisabled: true,\r\n                                    },\r\n                                    ...minutesSelectData,\r\n                                  ]}\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            <Col md={4} sm={12} lg={4}>\r\n                              <div className=\"form-group has-float-label\">\r\n                                <Label>AM/PM</Label>\r\n\r\n                                <Select\r\n                                  components={{ Input: CustomSelectInput }}\r\n                                  className=\"react-select\"\r\n                                  classNamePrefix=\"react-select\"\r\n                                  name=\"form-field-name\"\r\n                                  // value={selectedfromampm}\r\n                                  value={fromAmPmSelectData.find(\r\n                                    (option) =>\r\n                                      option.value === selectedfromampm\r\n                                  )}\r\n                                  onChange={handleDropdownItemClick4}\r\n                                  options={[\r\n                                    {\r\n                                      value: \"\",\r\n                                      label: \"AM/PM\",\r\n                                      isDisabled: true,\r\n                                    },\r\n                                    ...fromAmPmSelectData,\r\n                                  ]}\r\n                                />\r\n                              </div>\r\n                              {/* <Dropdown direction=\"down\"\r\n          isOpen={dropdownBasicOpen4}\r\n          toggle={() => setDropdownBasicOpen4(!dropdownBasicOpen4)}\r\n          className=\"mb-5 \"\r\n          \r\n        \r\n        >\r\n        <DropdownToggle caret color=\"primary\" outline className='ml-3'>\r\n        {selectedfromampm !==null ? selectedfromampm : 'AM /PM' }\r\n        <DropdownMenu className=''>\r\n          { generateAmPmDropdownItems ()}\r\n          </DropdownMenu>\r\n        </DropdownToggle>\r\n              \r\n          </Dropdown> */}\r\n                            </Col>\r\n                          </Row>\r\n                          <div className=\"\">\r\n                            {/* <Dropdown direction=\"down\"\r\n        isOpen={dropdownBasicOpen}\r\n        toggle={() => setDropdownBasicOpen(!dropdownBasicOpen)}\r\n        className=\"mb-5 \"\r\n        \r\n      \r\n      >\r\n \r\n\r\n\r\n\r\n  <DropdownToggle caret color=\"primary\" outline className=''>\r\n    \r\n    \r\n    {selectedHourDropdown !== null ? selectedHourDropdown : 'Hours'} \r\n   \r\n  </DropdownToggle>\r\n  <DropdownMenu className=''>\r\n  {generateDropdownItems()}\r\n  </DropdownMenu>\r\n</Dropdown> */}\r\n\r\n                            {/* <Input\r\n        type=\"select\"\r\n        value={selectedHourDropdown}\r\n        onChange={handleSelectChange}\r\n        style={{width:\"80px\",height:\"40px\"}}\r\n        \r\n      >\r\n        <option disabled value=\"\">\r\n          Hours\r\n        </option>\r\n        {generateDropdownItemsSelect()}\r\n      </Input> */}\r\n\r\n                            {/* <Dropdown direction='down'\r\n            isOpen={dropdownBasicOpen1}\r\n            toggle={() => setDropdownBasicOpen1(!dropdownBasicOpen1)}\r\n            className=\"mb-5 ml-3\"\r\n           \r\n          >\r\n            <DropdownToggle caret color=\"primary\" outline>\r\n           \r\n              {minutedrop !== null ? minutedrop : 'Minutes'} \r\n   \r\n            </DropdownToggle>\r\n            <DropdownMenu >\r\n             {generateMinuteDropdownItems()}\r\n            </DropdownMenu>\r\n          </Dropdown> */}\r\n\r\n                            {/* form minutes select start */}\r\n\r\n                            {/* form minutes select end */}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"\">\r\n                          <Label className=\"text-one font-weight-bold\">\r\n                            To\r\n                          </Label>\r\n                          <div className=\"\">\r\n                            <Row>\r\n                              <Col md={4} lg={4} sm={12}>\r\n                                {/* <Dropdown direction=\"down\"\r\n        isOpen={dropdownBasicOpen2}\r\n        toggle={() => setDropdownBasicOpen2(!dropdownBasicOpen2)}\r\n        className=\"mb-5\"\r\n        \r\n      \r\n      >\r\n\r\n        <DropdownToggle caret color=\"primary\" outline className='' >\r\n          \r\n          \r\n          {selectedHourDropdown1 !== null ? selectedHourDropdown1 : 'Hours'} \r\n        </DropdownToggle>\r\n        <DropdownMenu className=''>\r\n        {generateDropdownItems1()}\r\n        </DropdownMenu>\r\n      </Dropdown> */}\r\n                                <div className=\"form-group has-float-label\">\r\n                                  <Label>Hours</Label>\r\n\r\n                                  <Select\r\n                                    components={{ Input: CustomSelectInput }}\r\n                                    className=\"react-select\"\r\n                                    classNamePrefix=\"react-select\"\r\n                                    name=\"form-field-name\"\r\n                                    value={generateDropdownItems1().find(\r\n                                      (option) =>\r\n                                        option.value === selectedHourDropdown1\r\n                                    )}\r\n                                    onChange={handleDropdownItemClick2}\r\n                                    options={[\r\n                                      {\r\n                                        value: \"\",\r\n                                        label: \"Hours\",\r\n                                        isDisabled: true,\r\n                                      },\r\n                                      ...toHoursSelectData,\r\n                                    ]}\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n                              <Col md={4} lg={4} sm={12}>\r\n                                <div className=\"form-group has-float-label\">\r\n                                  <Label>Minutes</Label>\r\n\r\n                                  <Select\r\n                                    components={{ Input: CustomSelectInput }}\r\n                                    className=\"react-select\"\r\n                                    classNamePrefix=\"react-select\"\r\n                                    name=\"form-field-name\"\r\n                                    value={generateMinuteDropdownItems1().find(\r\n                                      (option) =>\r\n                                        option.value === selectedHourDropdown1\r\n                                    )}\r\n                                    onChange={handleDropdownItemClick3}\r\n                                    options={[\r\n                                      {\r\n                                        value: \"\",\r\n                                        label: \"Minutes\",\r\n                                        isDisabled: true,\r\n                                      },\r\n                                      ...toMinutesSelectData,\r\n                                    ]}\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n                              <Col md={4} lg={4} sm={12}>\r\n                                <div>\r\n                                  {/* <Dropdown direction=\"down\"\r\n        isOpen={dropdownBasicOpen5}\r\n        toggle={() => setDropdownBasicOpen5(!dropdownBasicOpen5)}\r\n        className=\"mb-5 \"\r\n        \r\n      \r\n      >\r\n      <DropdownToggle caret color=\"primary\" outline className='ml-3'>\r\n      {selectedfromampm1 !==null ? selectedfromampm1 : 'AM /PM' }\r\n      <DropdownMenu className=''>\r\n        { generateAmPmDropdownItems1 ()}\r\n        </DropdownMenu>\r\n      </DropdownToggle>\r\n            \r\n        </Dropdown> */}\r\n                                  <div className=\"form-group has-float-label\">\r\n                                    <Label>AM/PM</Label>\r\n\r\n                                    <Select\r\n                                      components={{ Input: CustomSelectInput }}\r\n                                      className=\"react-select\"\r\n                                      classNamePrefix=\"react-select\"\r\n                                      name=\"form-field-name\"\r\n                                      // value={selectedfromampm}\r\n                                      value={toAmPmSelectData.find(\r\n                                        (option) =>\r\n                                          option.value === selectedfromampm1\r\n                                      )}\r\n                                      onChange={handleDropdownItemClick5}\r\n                                      options={[\r\n                                        {\r\n                                          value: \"\",\r\n                                          label: \"AM/PM\",\r\n                                          isDisabled: true,\r\n                                        },\r\n                                        ...toAmPmSelectData,\r\n                                      ]}\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                            </Row>\r\n\r\n                            {/* <Dropdown direction='down'\r\n            isOpen={dropdownBasicOpen3}\r\n            toggle={() => setDropdownBasicOpen3(!dropdownBasicOpen3)}\r\n            className=\"mb-5 ml-3\"\r\n           \r\n          >\r\n            <DropdownToggle caret color=\"primary\" outline>\r\n           \r\n              {minutedrop1 !== null ? minutedrop1 : 'Minutes'} \r\n   \r\n            </DropdownToggle>\r\n            <DropdownMenu >\r\n             {generateMinuteDropdownItems1()}\r\n            </DropdownMenu>\r\n          </Dropdown> */}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </FormGroup>\r\n\r\n                    <Form>\r\n                      <FormGroup>\r\n                        <Label className=\"text-one font-weight-bold\">\r\n                          Call type\r\n                        </Label>\r\n                        <div className=\"d-flex \">\r\n                          <CustomInput\r\n                            type=\"radio\"\r\n                            id=\"exCustomRadio\"\r\n                            name=\"customRadio\"\r\n                            label=\"Audio\"\r\n                            value={selectedradiobutton}\r\n                            onChange={() => setSelectedRadioButton(\"Audio\")}\r\n                          />\r\n                          <CustomInput\r\n                            type=\"radio\"\r\n                            id=\"exCustomRadio2\"\r\n                            name=\"customRadio\"\r\n                            label=\"Video\"\r\n                            className=\"ml-3\"\r\n                            value={selectedradiobutton}\r\n                            onChange={() => setSelectedRadioButton(\"Video\")}\r\n                          />\r\n                        </div>\r\n                      </FormGroup>\r\n                    </Form>\r\n                  </Form>\r\n                </Step>\r\n                <Step\r\n                  id=\"step2\"\r\n                  // name={messages['wizard.step-name-2']}\r\n                  name=\"step 2\"\r\n                  desc=\"Payment\"\r\n                >\r\n                  <Form className=\"\">\r\n                    {license && (\r\n                      <>\r\n                        {license.balance ? (\r\n                          <>\r\n                            <FormGroup className=\"w-100\">\r\n                              <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <Label className=\"text-one\">\r\n                                  Session Price\r\n                                </Label>\r\n                                <Colxx lg={5} className=\"\">\r\n                                  <h3 className=\"\">\r\n                                    <span className=\"font-weight-bold color-theme-1\">\r\n                                      ₹{license.sessionPrice}\r\n                                    </span>\r\n                                  </h3>\r\n                                </Colxx>\r\n                              </div>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"w-100\">\r\n                              <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <Label className=\"text-one\">\r\n                                  Your Available Balance\r\n                                </Label>\r\n                                <Colxx lg={5}>\r\n                                  <h3 className=\"\">\r\n                                    <span className=\"font-weight-bold color-theme-1\">\r\n                                      ₹{license.availableBalance}\r\n                                    </span>\r\n                                  </h3>\r\n                                </Colxx>\r\n                              </div>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"w-100\">\r\n                              <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <Label className=\"text-one\">\r\n                                  Balance after deduction\r\n                                </Label>\r\n                                <Colxx lg={5}>\r\n                                  <h3 className=\"\">\r\n                                    <span className=\"font-weight-bold color-theme-1\">\r\n                                      ₹{license.balanceAfterDeducation}\r\n                                    </span>\r\n                                  </h3>\r\n                                </Colxx>\r\n                              </div>\r\n                            </FormGroup>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <FormGroup className=\"w-100\">\r\n                              <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <Label className=\"text-one\">\r\n                                  Session Price\r\n                                </Label>\r\n                                <Colxx lg={5}>\r\n                                  <h3>\r\n                                    <span className=\"font-weight-bold color-theme-1\">\r\n                                      ₹{license.sessionPrice}\r\n                                    </span>\r\n                                  </h3>\r\n                                </Colxx>\r\n                              </div>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"w-100\">\r\n                              <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <Label className=\"text-one\">\r\n                                  Your Available Balance\r\n                                </Label>\r\n                                <Colxx lg={5}>\r\n                                  <h3>\r\n                                    <span className=\"font-weight-bold color-theme-1\">\r\n                                      ₹{license.availableBalance}\r\n                                    </span>\r\n                                  </h3>\r\n                                </Colxx>\r\n                              </div>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"w-100\">\r\n                              <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <Label className=\"text-one\">\r\n                                  Do you want to recharge ?\r\n                                </Label>\r\n                              </div>\r\n                              <Colxx lg={12}>\r\n                                <div className=\"d-flex\">\r\n                                  <Button\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    onClick={() =>\r\n                                      history.push(\"/app/mywallet\")\r\n                                    }\r\n                                  >\r\n                                    Yes\r\n                                  </Button>\r\n                                  <Button\r\n                                    outline\r\n                                    color=\"primary\"\r\n                                    className=\"ml-3\"\r\n                                    onClick={() =>\r\n                                      history.push(\"/app/mentor/list\")\r\n                                    }\r\n                                  >\r\n                                    No\r\n                                  </Button>\r\n                                </div>\r\n                              </Colxx>\r\n                            </FormGroup>\r\n                          </>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </Form>\r\n                </Step>\r\n                <Step\r\n                  id=\"step3\"\r\n                  // name={messages['wizard.step-name-3']}\r\n                  name=\"step 3\"\r\n                  desc=\"Finish\"\r\n                >\r\n                  <div className=\"text-center \">\r\n                    <span className=\"text-xlarge text-primary\">\r\n                      <i className=\"simple-icon-check\" />\r\n                    </span>\r\n                    <h3 className=\" my-3 py-3 \">\r\n                      Your appointment is successfull\r\n                    </h3>\r\n                    <h2 className=\" my-3\">Thank you</h2>\r\n\r\n                    <div className=\"text-center my-2\">\r\n                      {/* <Button color='primary' className=\"btn btn-primary \" onClick={handleCloseButtonClick}> */}\r\n                      <Button\r\n                        color=\"primary\"\r\n                        className=\"btn btn-primary \"\r\n                        onClick={redirectToSessionLists}\r\n                      >\r\n                        Close\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Step>\r\n              </Steps>\r\n\r\n              <Form className=\"mt-4\">\r\n                <FormGroup>\r\n                  <BottomNavigation\r\n                    onClickNext={onClickNext}\r\n                    onClickPrev={onClickPrev}\r\n                    className=\"justify-content-center\"\r\n                    prevLabel=\"Back\"\r\n                    nextLabel=\"Next\"\r\n                    // licenseBalance={license.length > 0 ? license[0].balance : null}\r\n                    licenseBalance={license && license.balance}\r\n                  />\r\n                </FormGroup>\r\n              </Form>\r\n            </Wizard>\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\nexport default injectIntl(PopupWizard);\r\n","import { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Modal,\r\n  ModalBody,\r\n  Row,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport PopupWizard from \"./PopupWizard\";\r\n\r\nconst Month = () => {\r\n  // const url=`${baseUrl}/mentorAvailablity`\r\n\r\n  // if you change the url to backend uncomment the below line\r\n  const url = `${baseUrl}/api/calendar/appointment/user`;\r\n\r\n  const [mentoravailable, setMentorAvailable] = useState([]);\r\n  const [currentWeekStart, setCurrentWeekStart] = useState(new Date());\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const mentorName = searchParams.get(\"mentorName\");\r\n  const mentorId = searchParams.get(\"mentorId\");\r\n  const role = searchParams.get(\"role\");\r\n\r\n  console.log(\"role from search params:\", role);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  // const [hasAvailableSlots,setHasAvailableSlots] = useState(true);\r\n\r\n  // const [selectedStartTime, setSelectedStartTime] = useState(null);\r\n  // const [selectedEndTime, setSelectedEndTime] = useState(null);\r\n\r\n  // Function to get the start date of the current week\r\n  // const getStartOfWeek = () => {\r\n  //   const currentDate = new Date();\r\n  //   const day = currentDate.getDay();\r\n  //   const diff = currentDate.getDate() - day + (day === 0 ? -6 : 1); // Adjust when day is Sunday\r\n  //   return new Date(currentDate.setDate(diff));\r\n  // };\r\n  const getStartOfWeek = () => {\r\n    const currentDate = new Date();\r\n    const day = currentDate.getDay();\r\n    const diff = currentDate.getDate() - day + (day === 0 ? -6 : 1); // Adjust when day is Sunday\r\n    const startOfWeek = new Date(currentDate.setDate(diff));\r\n\r\n    return startOfWeek;\r\n  };\r\n\r\n  // Function to get the end date of the current week\r\n  // const getEndOfWeek = (startOfWeek) => {\r\n  //   const endOfWeek = new Date(startOfWeek);\r\n  //   endOfWeek.setDate(endOfWeek.getDate() + 6);\r\n  //   return endOfWeek;\r\n  // };\r\n\r\n  const fetchMentorAvailability = async (fromTime, toTime) => {\r\n    try {\r\n      // const response = await axios.get(`${baseUrl}/mentorAvailablity?mentorId=${mentorId}&fromTime=${fromTime}&toTime=${toTime}`);\r\n      const response = await axios.get(\r\n        `${url}?mentorId=${mentorId}&fromTime=${fromTime}&toTime=${toTime}`\r\n      );\r\n      const availability = response.data;\r\n      setMentorAvailable(availability);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const startOfWeek = getStartOfWeek();\r\n  //   const endOfWeek = getEndOfWeek(startOfWeek);\r\n  //   const newUrl = `${window.location.origin}${window.location.pathname}?mentorId=${mentorId}&mentorName=${mentorName}&fromTime=${startOfWeek.getTime()}&toTime=${endOfWeek.getTime()}`;\r\n  //   window.history.replaceState(null, '', newUrl);\r\n  //   if (mentorId) {\r\n  //     fetchMentorAvailability(startOfWeek.getTime(), endOfWeek.getTime());\r\n  //   }\r\n  // }, []);\r\n  // useEffect(() => {\r\n  //   const startOfWeekTimestamp = currentWeekStart.getTime(); // Start of the current week\r\n  //   const endOfWeekTimestamp = new Date(currentWeekStart); // End of the current week\r\n  //   endOfWeekTimestamp.setDate(endOfWeekTimestamp.getDate() + 6);\r\n\r\n  //   const newUrl = `${window.location.origin}${window.location.pathname}?mentorId=${mentorId}&mentorName=${mentorName}&fromTime=${startOfWeekTimestamp}&toTime=${endOfWeekTimestamp.getTime()}`;\r\n  //   window.history.replaceState(null, '', newUrl);\r\n\r\n  //   if (mentorId) {\r\n  //     fetchMentorAvailability(startOfWeekTimestamp, endOfWeekTimestamp.getTime());\r\n  //   }\r\n  // }, []);\r\n  // useEffect(() => {\r\n  //   // Set the time of currentWeekStart to 12:00 PM (noon)\r\n  //   const startOfWeekTimestamp = new Date(currentWeekStart);\r\n  //   startOfWeekTimestamp.setHours(12, 0, 0, 0);\r\n\r\n  //   // Set the time of endOfWeekTimestamp to 11:59 PM\r\n  //   const endOfWeekTimestamp = new Date(currentWeekStart);\r\n  //   endOfWeekTimestamp.setDate(endOfWeekTimestamp.getDate() + 6); // Set to end of week\r\n  //   endOfWeekTimestamp.setHours(11, 59, 59, 999);\r\n\r\n  //   const newUrl = `${window.location.origin}${window.location.pathname}?mentorId=${mentorId}&mentorName=${mentorName}&fromTime=${startOfWeekTimestamp.getTime()}&toTime=${endOfWeekTimestamp.getTime()}`;\r\n  //   window.history.replaceState(null, '', newUrl);\r\n\r\n  //   if (mentorId) {\r\n  //     fetchMentorAvailability(startOfWeekTimestamp.getTime(), endOfWeekTimestamp.getTime());\r\n  //   }\r\n  // }, [currentWeekStart, mentorId]);\r\n  // new code\r\n  useEffect(() => {\r\n    // Set the time of currentWeekStart to 12:00 AM (midnight)\r\n    const startOfWeekTimestamp = new Date(currentWeekStart);\r\n    startOfWeekTimestamp.setHours(0, 0, 0, 0); // Set hours, minutes, seconds, and milliseconds to zero\r\n\r\n    // Set the time of endOfWeekTimestamp to 11:59 PM\r\n    const endOfWeekTimestamp = new Date(currentWeekStart);\r\n    endOfWeekTimestamp.setDate(endOfWeekTimestamp.getDate() + 6); // Set to end of week\r\n    endOfWeekTimestamp.setHours(23, 59, 59, 999); // Set hours to 11, minutes to 59, seconds to 59, and milliseconds to 999\r\n\r\n    const newUrl = `${window.location.origin}${\r\n      window.location.pathname\r\n    }?mentorId=${mentorId}&mentorName=${mentorName}&fromTime=${startOfWeekTimestamp.getTime()}&toTime=${endOfWeekTimestamp.getTime()}&role=${role}`;\r\n    window.history.replaceState(null, \"\", newUrl);\r\n\r\n    if (mentorId) {\r\n      fetchMentorAvailability(\r\n        startOfWeekTimestamp.getTime(),\r\n        endOfWeekTimestamp.getTime()\r\n      );\r\n    }\r\n  }, [currentWeekStart, mentorId]);\r\n\r\n  // useEffect(() => {\r\n  //   const startOfWeek = getStartOfWeek();\r\n  //   console.log('Start of the Current Week checking:', startOfWeek);\r\n  //   setCurrentWeekStart(startOfWeek);\r\n  // }, []);\r\n  useEffect(() => {\r\n    const startOfWeek = getStartOfWeek();\r\n\r\n    setCurrentWeekStart(startOfWeek);\r\n  }, []);\r\n\r\n  const [modalSmall, setModalSmall] = useState(false);\r\n\r\n  // weeklist functions start\r\n  const goToPreviousWeek = () => {\r\n    const newStartDate = new Date(currentWeekStart);\r\n    newStartDate.setDate(newStartDate.getDate() - 7);\r\n    setCurrentWeekStart(newStartDate);\r\n  };\r\n\r\n  // const goToNextWeek = () => {\r\n  //   const newStartDate = new Date(currentWeekStart);\r\n  //   newStartDate.setDate(newStartDate.getDate() + 7);\r\n  //   setCurrentWeekStart(newStartDate);\r\n\r\n  // };\r\n\r\n  // const goToNextWeek = () => {\r\n  //   const newStartDate = new Date(currentWeekStart);\r\n  //   newStartDate.setDate(newStartDate.getDate() + 7);\r\n  //   setCurrentWeekStart(newStartDate);\r\n\r\n  //   // Calculate the start of the next week\r\n  //   const nextWeekStart = new Date(newStartDate);\r\n  //   nextWeekStart.setDate(nextWeekStart.getDate() - nextWeekStart.getDay() + 1);\r\n\r\n  //   // Calculate the end of the next week\r\n  //   const nextWeekEnd = new Date(nextWeekStart);\r\n  //   nextWeekEnd.setDate(nextWeekEnd.getDate() + 6);\r\n\r\n  //   const fromTime = nextWeekStart.getTime(); // Timestamp of the start of the next week\r\n  //   const toTime = nextWeekEnd.getTime(); // Timestamp of the end of the next week\r\n\r\n  //   fetchMentorAvailability(fromTime, toTime);\r\n  // };\r\n  // Modify the goToNextWeek function to update the URL and fetch availability for the next week\r\n  const goToNextWeek = () => {\r\n    const newStartDate = new Date(currentWeekStart);\r\n    newStartDate.setDate(newStartDate.getDate() + 7);\r\n    setCurrentWeekStart(newStartDate);\r\n\r\n    // Calculate the start of the next week\r\n    const nextWeekStart = new Date(newStartDate);\r\n    nextWeekStart.setDate(nextWeekStart.getDate() - nextWeekStart.getDay() + 1);\r\n\r\n    // Calculate the end of the next week\r\n    const nextWeekEnd = new Date(nextWeekStart);\r\n    nextWeekEnd.setDate(nextWeekEnd.getDate() + 6);\r\n\r\n    const fromTime = nextWeekStart.getTime(); // Timestamp of the start of the next week\r\n    const toTime = nextWeekEnd.getTime(); // Timestamp of the end of the next week\r\n\r\n    fetchMentorAvailability(fromTime, toTime);\r\n  };\r\n\r\n  // const formatDate = (date) => {\r\n  //   return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n  // };\r\n  const formatDate = (date) => {\r\n    const monthNames = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    const month = monthNames[date.getMonth()];\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    return `${day}-${month}-${date.getFullYear()}`;\r\n  };\r\n  const getWeekDates = () => {\r\n    const weekDates = [];\r\n    const startDate = new Date(currentWeekStart);\r\n    for (let i = 0; i < 7; i += 1) {\r\n      const currentDate = new Date(startDate);\r\n      currentDate.setDate(startDate.getDate() + i);\r\n      weekDates.push(currentDate);\r\n    }\r\n    return weekDates;\r\n  };\r\n  // const isPreviousWeekDisabled = () => {\r\n  //   // Disable the button if you're already in the current week\r\n  //   const today = new Date();\r\n  //   const currentWeekStartDate = new Date(today);\r\n  //  currentWeekStartDate.setDate(today.getDate() - today.getDay() + 1); // Adjust to the start of the week\r\n\r\n  //   console.log('Current Week Start Date:', currentWeekStartDate);\r\n  //   console.log('Stored Current Week Start Date:', currentWeekStart);\r\n\r\n  //   // const disabled = (\r\n  //   //   currentWeekStartDate.getFullYear() === currentWeekStart.getFullYear() &&\r\n  //   //   currentWeekStartDate.getMonth() === currentWeekStart.getMonth() &&\r\n  //   //   currentWeekStartDate.getDate() === currentWeekStart.getDate()\r\n  //   // );\r\n\r\n  //   const disabled = currentWeekStartDate.getTime() === currentWeekStart.getTime();\r\n  //   console.log('Is Previous Week Disabled:', disabled);\r\n\r\n  //   return disabled;\r\n  // };\r\n  const isPreviousWeekDisabled = () => {\r\n    // Disable the button if you're already in the current week\r\n    const today = new Date();\r\n    const currentWeekStartDate = new Date(today);\r\n    const day = today.getDay(); // Get the day of the week (0 = Sunday, 1 = Monday, ..., 6 = Saturday)\r\n\r\n    if (day === 0) {\r\n      // If today is Sunday, subtract 6 days to get the start of the current week\r\n      currentWeekStartDate.setDate(today.getDate() - 6);\r\n    } else {\r\n      // Otherwise, subtract the number of days from the current day to get the start of the current week\r\n      currentWeekStartDate.setDate(today.getDate() - (day - 1));\r\n    }\r\n\r\n    // Set hours, minutes, seconds, and milliseconds to zero\r\n    currentWeekStartDate.setHours(0, 0, 0, 0);\r\n\r\n    const storedWeekStart = new Date(currentWeekStart);\r\n    storedWeekStart.setHours(0, 0, 0, 0); // Set hours, minutes, seconds, and milliseconds to zero\r\n\r\n    const disabled =\r\n      currentWeekStartDate.getTime() === storedWeekStart.getTime();\r\n\r\n    return disabled;\r\n  };\r\n\r\n  const handleTimeSlotClick = (date) => {\r\n    setSelectedDate(date);\r\n\r\n    setModalSmall(true); // Optionally open the modal when a time slot is clicked\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Colxx xxs=\"12\" md=\"9\" lg=\"7\" className=\"mx-auto\">\r\n          <h1 className=\"py-4 text-large\"> {mentorName} availability</h1>\r\n          <div className=\"font-weight-semibold d-flex justify-content-center align-items-center\">\r\n            {/* <Button className='font-weight-semibold text-one ' color=\"primary\" onClick={goToPreviousWeek}   disabled={isPreviousWeekDisabled()}><i className='simple-icon-arrow-left'/></Button> */}\r\n            <span\r\n              className=\"font-weight-semibold text-xlarge mr-2 cursor-pointer\"\r\n              style={{\r\n                cursor: isPreviousWeekDisabled() ? \"not-allowed\" : \"pointer\",\r\n                opacity: isPreviousWeekDisabled() ? 0.5 : 1, // Lower opacity for disabled state\r\n              }}\r\n              onClick={!isPreviousWeekDisabled() ? goToPreviousWeek : undefined}\r\n              onKeyDown={(e) => {\r\n                if (\r\n                  !isPreviousWeekDisabled() &&\r\n                  (e.key === \"Enter\" || e.key === \" \")\r\n                ) {\r\n                  goToPreviousWeek();\r\n                }\r\n              }}\r\n              role=\"button\"\r\n              tabIndex={!isPreviousWeekDisabled() ? 0 : -1}\r\n              aria-disabled={isPreviousWeekDisabled()}\r\n            >\r\n              {/* <i className='simple-icon-arrow-left' /> */}\r\n              <i\r\n                className={`simple-icon-arrow-left ${\r\n                  isPreviousWeekDisabled() ? \"disabled\" : \"\"\r\n                }`}\r\n              />\r\n            </span>\r\n\r\n            <div>\r\n              <h4 className=\" font-weight-semibold\">\r\n                {formatDate(currentWeekStart)} -{\" \"}\r\n                {formatDate(\r\n                  new Date(currentWeekStart.getTime() + 6 * 24 * 60 * 60 * 1000)\r\n                )}\r\n              </h4>\r\n            </div>\r\n            <span\r\n              className=\"ml-2 font-weight-semibold text-xlarge\"\r\n              role=\"button\"\r\n              tabIndex={0}\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={goToNextWeek}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\" || e.key === \" \") {\r\n                  goToNextWeek();\r\n                }\r\n              }}\r\n            >\r\n              <i className=\"simple-icon-arrow-right\" />\r\n            </span>\r\n            {/* {hasAvailableSlots && (\r\n  <span\r\n    className='ml-2 font-weight-semibold text-xlarge'\r\n    role=\"button\"\r\n    tabIndex={0}\r\n    style={{ cursor: \"pointer\" }}\r\n    onClick={goToNextWeek}\r\n    onKeyDown={(e) => {\r\n      if (e.key === 'Enter' || e.key === ' ') {\r\n        goToNextWeek();\r\n      }\r\n    }}\r\n  >\r\n    <i className='simple-icon-arrow-right' />\r\n  </span>\r\n)}\r\n\r\n{!hasAvailableSlots && (\r\n  <span\r\n    className='ml-2 font-weight-semibold text-xlarge disabled'\r\n    style={{ cursor: \"not-allowed\", color: \"gray\" }}\r\n  >\r\n    <i className='simple-icon-arrow-right' />\r\n  </span>\r\n)} */}\r\n            {/* <Button className='ml-5 font-weight-semibold text-one' color=\"primary\" onClick={goToNextWeek} ><i className='simple-icon-arrow-right '/></Button> */}\r\n          </div>\r\n          <Card className=\"mb-4 mt-4\">\r\n            <CardBody>\r\n              <Table bordered>\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-one\">Date</th>\r\n                    <th className=\"text-center text-one\">Availablilty time</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {getWeekDates().map((date) => (\r\n                    <tr key={date.getTime()}>\r\n                      {/* <td>{getMonthName(date.getMonth())} {formatDate(date)}</td> */}\r\n                      <td> {formatDate(date)}</td>\r\n                      <td>\r\n                        {/* {mentoravailable.map((avail) => {\r\n    const availDate = new Date(avail.fromTimeStamp);\r\n    if (availDate.toDateString() === date.toDateString()) {\r\n        // Mentor is available on this date, display the available time\r\n        const FromDate = new Date(avail.fromTimeStamp);\r\n        const ToDate = new Date(avail.toTimeStamp);\r\n        \r\n        // Get hours, minutes, and AM/PM indicator\r\n        const fromHours = FromDate.getHours() % 12 || 12; // Convert 0 to 12 for 12-hour format\r\n        const fromMinutes = String(FromDate.getMinutes()).padStart(2, '0');\r\n        const fromPeriod = FromDate.getHours() < 12 ? 'AM' : 'PM';\r\n        \r\n        const toHours = ToDate.getHours() % 12 || 12; // Convert 0 to 12 for 12-hour format\r\n        const toMinutes = String(ToDate.getMinutes()).padStart(2, '0');\r\n        const toPeriod = ToDate.getHours() < 12 ? 'AM' : 'PM';\r\n        \r\n        // Construct the time string with AM/PM indicator\r\n        const fromTime = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n        const toTime = `${toHours}:${toMinutes} ${toPeriod}`;\r\n\r\n         // Check if the availability time is in the past\r\n         const isPastTime = ToDate < new Date();\r\n\r\n        return (\r\n        <Button  key={date.getTime()}  color='primary' block\r\n          className={` text-center ${isPastTime ? 'cursor-not-allowed' : 'cursor-pointer'} my-2`}\r\n          disabled={isPastTime}\r\n          onClick={() => handleTimeSlotClick(date)}\r\n        >\r\n         {fromTime} to {toTime}\r\n        </Button>\r\n        );\r\n    } \r\n    \r\n       return null;\r\n})}  */}\r\n\r\n                        {mentoravailable\r\n                          .filter(\r\n                            (avail) =>\r\n                              new Date(avail.fromTimeStamp).toDateString() ===\r\n                              date.toDateString()\r\n                          )\r\n                          .map((avail) => {\r\n                            const FromDate = new Date(avail.fromTimeStamp);\r\n                            const ToDate = new Date(avail.toTimeStamp);\r\n\r\n                            const fromHours = FromDate.getHours() % 12 || 12;\r\n                            const fromMinutes = String(\r\n                              FromDate.getMinutes()\r\n                            ).padStart(2, \"0\");\r\n                            const fromPeriod =\r\n                              FromDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                            const toHours = ToDate.getHours() % 12 || 12;\r\n                            const toMinutes = String(\r\n                              ToDate.getMinutes()\r\n                            ).padStart(2, \"0\");\r\n                            const toPeriod =\r\n                              ToDate.getHours() < 12 ? \"AM\" : \"PM\";\r\n\r\n                            const fromTime = `${fromHours}:${fromMinutes} ${fromPeriod}`;\r\n                            const toTime = `${toHours}:${toMinutes} ${toPeriod}`;\r\n\r\n                            const isPastTime = ToDate < new Date();\r\n\r\n                            return (\r\n                              <Button\r\n                                key={avail.fromTimeStamp} // Ensure a unique key for each button\r\n                                color=\"primary\"\r\n                                block\r\n                                className={`text-center ${\r\n                                  isPastTime\r\n                                    ? \"cursor-not-allowed\"\r\n                                    : \"cursor-pointer\"\r\n                                } my-2`}\r\n                                disabled={isPastTime}\r\n                                onClick={() => handleTimeSlotClick(date)}\r\n                                // onClick={() => handleTimeSlotClick(date, avail.fromTimeStamp, avail.toTimeStamp)}\r\n                              >\r\n                                {fromTime} to {toTime}\r\n                              </Button>\r\n                            );\r\n                          })}\r\n\r\n                        {mentoravailable.every(\r\n                          (avail) =>\r\n                            new Date(avail.fromTimeStamp).toDateString() !==\r\n                            date.toDateString()\r\n                        ) && <div className=\"text-center text-one\">-</div>}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n\r\n                  {/* another */}\r\n\r\n                  {/* return `${FromDate.toLocaleTimeString()} to ${ToDate.toLocaleTimeString()} `; */}\r\n                </tbody>\r\n              </Table>\r\n              {/* <Button onClick={() => setModalSmall(true)} outline color=\"primary\">Book Now</Button> */}\r\n              <div className=\"mb-4\">\r\n                <div>\r\n                  <div className=\"\">\r\n                    <Modal\r\n                      isOpen={modalSmall}\r\n                      toggle={() => setModalSmall(!modalSmall)}\r\n                      className=\"mt-5\"\r\n                    >\r\n                      <ModalBody>\r\n                        <div className=\"text-right my-2\">\r\n                          {/* <Button className='ml-2 my-4 '  outline   color=\"primary\"  onClick={() => setModalSmall(false)}\r\n        ><i className='simple-icon-close text-one'  />\r\n                   </Button> */}\r\n                          <span\r\n                            style={{ cursor: \"pointer\" }}\r\n                            className=\"mt-2\"\r\n                            role=\"button\"\r\n                            tabIndex={0}\r\n                            onClick={() => setModalSmall(false)}\r\n                            onKeyDown={(e) => {\r\n                              if (e.key === \"Enter\" || e.key === \" \") {\r\n                                setModalSmall(false);\r\n                              }\r\n                            }}\r\n                          >\r\n                            <i className=\"simple-icon-close text-large\" />\r\n                          </span>\r\n                        </div>\r\n\r\n                        <PopupWizard\r\n                          selectedDate={selectedDate}\r\n                          setSelectedDate={setSelectedDate}\r\n                          mentorName={mentorName}\r\n                          mentorId={mentorId}\r\n                          role={role}\r\n                        />\r\n                        {/* <Button className='ml-2 mt-2 '  outline  color=\"secondary\"  onClick={() => setModalSmall(false)}\r\n                   >\r\n                     Close\r\n                   </Button> */}\r\n                      </ModalBody>\r\n                    </Modal>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n          {/* <PopupWizard/> */}\r\n        </Colxx>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Month;\r\n","import axios from \"axios\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Row,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport TimestampConverter from \"../Calculation/TimestampConverter\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst LawyerJobNotes = ({ jobId }) => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState(\"\");\r\n  const [newTitle, setNewTitle] = useState(\"\");\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [editNoteId, setEditNoteId] = useState(null);\r\n  const [editedTitle, setEditedTitle] = useState(\"\");\r\n  const [editedText, setEditedText] = useState(\"\");\r\n  const [update, setUpdate] = useState(false);\r\n  const [notsFetched, setNotesFetched] = useState(false);\r\n  const [addNoteLoading, setAddNoteLoading] = useState(false);\r\n  const [saveLoading, setSaveLoading] = useState(false);\r\n  // const [deleteLoading, setDeleteLoading] = useState(false);\r\n  const [deleteLoading, setDeleteLoading] = useState({});\r\n\r\n  const [addModal, setAddModal] = useState(false);\r\n\r\n  const notesUrl = `${baseUrl}/api/lawyer/job/${jobId}/notes`;\r\n  useEffect(() => {\r\n    const fetchNotes = async () => {\r\n      try {\r\n        const response = await axios.get(notesUrl);\r\n        setNotes(response.data);\r\n        setNotesFetched(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching notes:\", error);\r\n        setNotesFetched(false);\r\n      }\r\n    };\r\n\r\n    fetchNotes();\r\n  }, [update]);\r\n\r\n  const toggleAddModal = () => {\r\n    setAddModal(!addModal);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const toggleEditModal = () => {\r\n    setEditModal(!editModal);\r\n  };\r\n\r\n  const handleAddNote = async () => {\r\n    setAddNoteLoading(true);\r\n    if (newTitle.trim() !== \"\" && newNote.trim() !== \"\") {\r\n      const newNoteData = {\r\n        title: newTitle,\r\n        details: newNote,\r\n      };\r\n\r\n      try {\r\n        const response = await axios.post(notesUrl, newNoteData);\r\n        // const updatedNotes = [...notes, response.data];\r\n        // setNotes(updatedNotes);\r\n        setUpdate(!update);\r\n        toggleAddModal();\r\n        setAddNoteLoading(false);\r\n        ToasterComponent(\"success\", response.data.statuses);\r\n      } catch (error) {\r\n        if (error.response) {\r\n          ToasterComponent(\"error\", error.response.data.statuses);\r\n        } else {\r\n          console.error(\"Error adding note:\", error);\r\n        }\r\n        setAddNoteLoading(false);\r\n      }\r\n\r\n      setNewTitle(\"\");\r\n      setNewNote(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteNote = async (id) => {\r\n    setDeleteLoading((prev) => ({ ...prev, [id]: true }));\r\n    try {\r\n      const response = await axios.delete(\r\n        `${baseUrl}/api/lawyer/job/notes/${id}`\r\n      );\r\n      const updatedNotes = notes.filter((note) => note.id !== id);\r\n      setNotes(updatedNotes);\r\n      console.log(response);\r\n      setUpdate(!update);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error deleting note:\", error);\r\n      }\r\n    } finally {\r\n      setDeleteLoading((prev) => ({ ...prev, [id]: false }));\r\n    }\r\n  };\r\n\r\n  const handleEditNote = (id) => {\r\n    const noteToEdit = notes.find((note) => note.id === id);\r\n    setEditNoteId(id);\r\n    setEditedTitle(noteToEdit.title);\r\n    setEditedText(noteToEdit.details);\r\n    toggleEditModal();\r\n  };\r\n\r\n  const saveEditedNote = async () => {\r\n    setSaveLoading(true);\r\n    const updatedNote = {\r\n      title: editedTitle,\r\n      details: editedText,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.put(\r\n        `${baseUrl}/api/lawyer/job/notes/${editNoteId}`,\r\n        updatedNote\r\n      );\r\n      // console.log(response);\r\n\r\n      const updatedNotes = notes.map((note) => {\r\n        if (note.id === editNoteId) {\r\n          return { ...note, title: editedTitle, text: editedText };\r\n        }\r\n        return note;\r\n      });\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      setSaveLoading(false);\r\n      setNotes(updatedNotes);\r\n      setUpdate(!update);\r\n      toggleEditModal();\r\n    } catch (error) {\r\n      setSaveLoading(false);\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      } else {\r\n        console.error(\"Error updating note:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // const sortedNotes = [...notes].sort((a, b) => b.createdOn - a.createdOn);\r\n\r\n  const userName = localStorage.getItem(\"userName\");\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center \">\r\n        <Col xs={12} sm={12} md={12} lg={12}>\r\n          <Row className=\"justify-content-between  mb-4\">\r\n            <Col xs=\"auto\">\r\n              {/* <h1 className=\"mb-4\">Lawyer job notes</h1> */}\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={toggleModal}\r\n                size=\"sm\"\r\n                className=\"mt-4 header-icon notificationButton position-relative\"\r\n              >\r\n                Notes {/* <span className=\"count\">{notes.length}</span> */}\r\n                <Badge color=\"light\" className=\" \">\r\n                  {notes.length}\r\n                </Badge>\r\n              </Button>\r\n              {/* <Button color=\"primary\" onClick={toggleModal} size=\"sm\" className=\"header-icon notificationButton position-relative\">\r\n                Notes\r\n                <span className=\"position-absolute top-10 start-100 translate-middle badge rounded-pill bg-secondary\">\r\n                  {notes.length}\r\n                </span>\r\n              </Button> */}\r\n            </Col>\r\n          </Row>\r\n          <Modal\r\n            isOpen={modal}\r\n            toggle={toggleModal}\r\n            // isOpen={modalOpen}\r\n            // toggle={toggleModal}\r\n            wrapClassName=\"modal-right\"\r\n            backdrop=\"static\"\r\n          >\r\n            <ModalHeader toggle={toggleModal}>Notes</ModalHeader>\r\n\r\n            <ModalBody>\r\n              <Button color=\"primary\" block onClick={toggleAddModal}>\r\n                Add Note\r\n              </Button>\r\n              <Modal\r\n                isOpen={addModal}\r\n                toggle={toggleAddModal}\r\n                // isOpen={modalOpen}\r\n                // toggle={toggleModal}\r\n                wrapClassName=\"modal-right\"\r\n                backdrop=\"static\"\r\n              >\r\n                <ModalHeader toggle={toggleAddModal}>\r\n                  Add a new note\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                  <Form\r\n                    onSubmit={(e) => {\r\n                      e.preventDefault();\r\n                      handleAddNote();\r\n                    }}\r\n                  >\r\n                    <FormGroup>\r\n                      <Label for=\"newTitle\">Enter note title:</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"newTitle\"\r\n                        placeholder=\"Enter note title\"\r\n                        value={newTitle}\r\n                        onChange={(e) => setNewTitle(e.target.value)}\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label for=\"newNote\">Enter your note:</Label>\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        id=\"newNote\"\r\n                        placeholder=\"Enter your note\"\r\n                        value={newNote}\r\n                        onChange={(e) => setNewNote(e.target.value)}\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </FormGroup>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      color=\"primary\"\r\n                      block\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        addNoteLoading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <span className=\"spinner d-inline-block\">\r\n                        <span className=\"bounce1\" />\r\n                        <span className=\"bounce2\" />\r\n                        <span className=\"bounce3\" />\r\n                      </span>\r\n                      <span className=\"label\">Add Note</span>\r\n                    </Button>\r\n                  </Form>\r\n                </ModalBody>\r\n              </Modal>\r\n              {!notsFetched ? (\r\n                <div className=\"d-flex justify-content-center mt-4\">\r\n                  <Spinner color=\"primary\" className=\"mb-1\" />\r\n                </div>\r\n              ) : (\r\n                <Row>\r\n                  {notes.length === 0 ? (\r\n                    <Col className=\"mt-4 d-flex justify-content-center align-items-center\">\r\n                      <h4 className=\"text-center\">There are no notes.</h4>\r\n                    </Col>\r\n                  ) : (\r\n                    notes.map((note) => (\r\n                      <>\r\n                        <Col key={note.id} xs={12} sm={12} lg={12}>\r\n                          <Card className=\"mt-3\">\r\n                            <div className=\"p-3 d-flex flex-column\">\r\n                              <Row className=\"\">\r\n                                <Col xs=\"auto\">\r\n                                  <h5>{note.title}</h5>\r\n                                </Col>\r\n                                {userName === note.name && (\r\n                                  <Col xs=\"auto\" className=\"ml-auto\" lg={2}>\r\n                                    <Button\r\n                                      outline\r\n                                      onClick={() => handleEditNote(note.id)}\r\n                                      color=\"primary\"\r\n                                      className=\"icon-button\"\r\n                                    >\r\n                                      <i className=\"simple-icon-pencil\" />\r\n                                    </Button>\r\n                                  </Col>\r\n                                )}\r\n                              </Row>\r\n\r\n                              <p>{note.details}</p>\r\n                              <Row className=\"\">\r\n                                <Col\r\n                                  className=\"d-flex flex-column justify-content-end\"\r\n                                  lg={6}\r\n                                >\r\n                                  <p className=\"text-muted mb-0\">\r\n                                    Created at -{\" \"}\r\n                                    <TimestampConverter\r\n                                      timeStamp={note.createdAt}\r\n                                      format=\"datetime\"\r\n                                    />\r\n                                  </p>\r\n                                  {/* <p className=\"text-muted\">\r\n                              Modified at -{\" \"}\r\n                              <TimestampConverter\r\n                                timeStamp={note.modifiedAt}\r\n                                format=\"datetime\"\r\n                              />\r\n                            </p> */}\r\n                                </Col>\r\n                                <Col className=\"d-flex flex-column justify-content-end\">\r\n                                  <p className=\"text-muted mb-0\">\r\n                                    Created by - {note.name}\r\n                                  </p>\r\n                                </Col>\r\n                                {userName === note.name && (\r\n                                  <Col className=\"\" lg={2}>\r\n                                    <Button\r\n                                      outline\r\n                                      onClick={() => handleDeleteNote(note.id)}\r\n                                      color=\"danger\"\r\n                                      className=\"icon-button\"\r\n                                    >\r\n                                      {!deleteLoading[note.id] ? (\r\n                                        <i className=\"simple-icon-trash\" />\r\n                                      ) : (\r\n                                        <Spinner size=\"sm\" />\r\n                                      )}\r\n                                    </Button>\r\n                                    {/* <Button color=\"primary\" size=\"sm\" onClick={() => handleEditNote(note.id)}>Edit</Button>{' '} */}\r\n                                    {/* <Button color=\"danger\" size=\"sm\" onClick={() => handleDeleteNote(note.id)}>Delete</Button> */}\r\n                                  </Col>\r\n                                )}\r\n                              </Row>\r\n                            </div>\r\n                          </Card>\r\n                        </Col>\r\n                      </>\r\n                    ))\r\n                  )}\r\n                </Row>\r\n              )}\r\n            </ModalBody>\r\n          </Modal>\r\n          <Modal\r\n            isOpen={editModal}\r\n            toggle={toggleEditModal}\r\n            // isOpen={modalOpen}\r\n            // toggle={toggleModal}\r\n            wrapClassName=\"modal-right\"\r\n            backdrop=\"static\"\r\n          >\r\n            <ModalHeader toggle={toggleEditModal}>Edit Note</ModalHeader>\r\n            <ModalBody>\r\n              <Form\r\n                onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  saveEditedNote();\r\n                }}\r\n              >\r\n                <FormGroup>\r\n                  <Label for=\"editedTitle\">Edit note title:</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    id=\"editedTitle\"\r\n                    placeholder=\"Enter note title\"\r\n                    value={editedTitle}\r\n                    onChange={(e) => setEditedTitle(e.target.value)}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"editedText\">Edit your note:</Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    id=\"editedText\"\r\n                    placeholder=\"Enter your note\"\r\n                    value={editedText}\r\n                    onChange={(e) => setEditedText(e.target.value)}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </FormGroup>\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  block\r\n                  className={`btn-shadow btn-multiple-state ${\r\n                    saveLoading ? \"show-spinner\" : \"\"\r\n                  }`}\r\n                >\r\n                  <span className=\"spinner d-inline-block\">\r\n                    <span className=\"bounce1\" />\r\n                    <span className=\"bounce2\" />\r\n                    <span className=\"bounce3\" />\r\n                  </span>\r\n                  <span className=\"label\">Save Changes</span>\r\n                </Button>\r\n              </Form>\r\n            </ModalBody>\r\n          </Modal>\r\n          {/* <h2 className=\"mt-4\">My Notes</h2> */}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LawyerJobNotes;\r\n","/* eslint-disable import/no-extraneous-dependencies */\r\nimport React, { Component } from 'react';\r\nimport DropzoneComponent from 'react-dropzone-component';\r\nimport 'dropzone/dist/min/dropzone.min.css';\r\nimport { baseUrl } from 'constants/defaultValues';\r\n\r\nconst ReactDOMServer = require('react-dom/server');\r\n\r\n// const dropzoneComponentConfig = {\r\n//   // postUrl: 'https://httpbin.org/post',\r\n//   postUrl: `${baseUrl}/api/lawyer/job/19/document/1`,\r\n \r\n// };\r\nfunction getTokenRes() {\r\n  return localStorage.getItem('tokenRes');\r\n}\r\nconst token = getTokenRes();\r\n\r\nconst dropzoneConfig = {\r\n  thumbnailHeight: 160,\r\n  maxFilesize: 2,\r\n  previewTemplate: ReactDOMServer.renderToStaticMarkup(\r\n    <div className=\"dz-preview dz-file-preview mb-3\">\r\n      <div className=\"d-flex flex-row \">\r\n        <div className=\"p-0 w-30 position-relative\">\r\n          <div className=\"dz-error-mark\">\r\n            <span>\r\n              <i />{' '}\r\n            </span>\r\n          </div>\r\n          <div className=\"dz-success-mark\">\r\n            <span>\r\n              <i />\r\n            </span>\r\n          </div>\r\n          <div className=\"preview-container\">\r\n            {/*  eslint-disable-next-line jsx-a11y/alt-text */}\r\n            <img data-dz-thumbnail className=\"img-thumbnail border-0\" />\r\n            <i className=\"simple-icon-doc preview-icon\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"pl-3 pt-2 pr-2 pb-1 w-70 dz-details position-relative\">\r\n          <div>\r\n            {' '}\r\n            <span data-dz-name />{' '}\r\n          </div>\r\n          <div className=\"text-primary text-extra-small\" data-dz-size />\r\n          <div className=\"dz-progress\">\r\n            <span className=\"dz-upload\" data-dz-uploadprogress />\r\n          </div>\r\n          <div className=\"dz-error-message\">\r\n            <span data-dz-errormessage />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <a href=\"#/\" className=\"remove\" data-dz-remove>\r\n        {' '}\r\n        <i className=\"glyph-icon simple-icon-trash\" />{' '}\r\n      </a>\r\n    </div>\r\n  ),\r\n  headers: {'Authorization': `Bearer ${token}`},\r\n};\r\n\r\nexport default class DropzoneExample extends Component {\r\n \r\n\r\n  \r\n\r\n  clear() {\r\n    this.myDropzone.removeAllFiles(true);\r\n  }\r\n\r\n  \r\n  render() {\r\n    const { jobId,stepNo } = this.props;\r\n    const dropzoneComponentConfig = {\r\n      // postUrl: 'https://httpbin.org/post',\r\n      postUrl: `${baseUrl}/api/lawyer/job/${jobId}/document/${stepNo}`,\r\n      \r\n     \r\n    };\r\n    return (\r\n      <DropzoneComponent\r\n        config={dropzoneComponentConfig}\r\n        djsConfig={dropzoneConfig}\r\n        eventHandlers={{\r\n          init: (dropzone) => {\r\n            this.myDropzone = dropzone;\r\n          },\r\n          success: (response) => {\r\n            console.log(\"document upload sucesss\",response);\r\n            if (response.status === \"success\") {\r\n              window.location.reload();\r\n            }\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\n// import DropzoneExample from 'containers/forms/DropzoneExample';\r\n\r\nimport { baseUrl } from 'constants/defaultValues';\r\nimport { Button, Card,CardBody, Col,  Form, FormGroup, Input, Label, Row } from 'reactstrap';\r\nimport Select from 'react-select';\r\nimport CustomSelectInput from 'components/common/CustomSelectInput';\r\nimport axios from 'axios';\r\nimport {useParams,useHistory,useLocation } from \"react-router-dom\";\r\n\r\nimport LawyerJobNotes from \"../Notes/LawyerJobNotes\"\r\nimport DropzoneExample from './UploadDropZone';\r\nimport ToasterComponent from '../notifications/ToasterComponent';\r\n\r\n\r\n\r\nconst selectData = [\r\n  { label: 'Yet to start', value: 'yet to start', key: 1 },\r\n  { label: 'In progress', value: 'Inprogress', key: 2 },\r\n  { label: 'Completed', value: 'completed', key: 4 },\r\n];\r\nconst doneByData=[\r\n  { label: 'Client', value: true, key: 0 },\r\n  { label: 'Lawyer', value: false, key: 1 },\r\n]\r\nconst jobStatusData=[\r\n  {label:'Yet to start',value:'YET_TO_START',key:1},\r\n  {label:'InProgress',value:'IN_PROGRESS',key:2},\r\n  {label:'Completed',value:'LAWYER_COMPLETED',key:4}\r\n]\r\n\r\nconst JobDetails = () => {\r\n  // const [selectedOption, setSelectedOption] = useState('');\r\n  const [selectedStep, setSelectedStep] = useState(null);\r\n  const [jobdetails,setJobDetails]=useState('');\r\n  const {jid}=useParams();\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [isHovered1, setIsHovered1] = useState(false);\r\n  const [jobeditmode,setJobEditMode]=useState(false);\r\n  const [isNewStep, setIsNewStep] = useState(false);\r\n  const [jobstatuseditmode,setJobStatusEditMode]=useState(false)\r\n\r\n   const [userstep,setUserStep]=useState(true);\r\n   const [jobstatuschange,setJobStatusChange]=useState(true);\r\n \r\n\r\n   \r\n \r\n  const [editData, setEditData] = useState({ stepName: '', description: '', doneBy:'', upload:true\r\n});\r\n\r\n\r\n\r\n  // const url=`${baseUrl}/lawyerJobsDetails/${jid}`;\r\n\r\n  const handleUserStepChange = (val) => {\r\n    console.log('Selected Option:', val);\r\n    setUserStep(val.value); \r\n  \r\n  };\r\n\r\n\r\n  // Backedn url \r\n  const url=`${baseUrl}/api/lawyer/job/${jid}`\r\n  const LawyerJobsDetails=async()=>{\r\n    try {\r\n        const response = await axios.get(url);\r\n        setJobDetails(response.data);\r\n        console.log(\"checking response\",response.data);\r\n\r\n  \r\nif (response.data.steps && response.data.steps.length > 0) {\r\n  // jobdetails.steps = jobdetails.steps.sort((a, b) => a.stepNumber - b.stepNumber);\r\n  setSelectedStep(response.data.steps[0]);\r\n  setEditData({\r\n    stepName: response.data.steps[0].stepName,\r\n    description: response.data.steps[0].description,\r\n    // userStep: response.data.steps[0].doneBy,\r\n    doneBy:userstep,\r\n    upload:true,\r\n    \r\n   \r\n  });\r\n \r\n \r\n}\r\n        \r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        \r\n      }\r\n}\r\n\r\n    useEffect(()=>{\r\n       \r\n        LawyerJobsDetails();\r\n       \r\n    \r\n    },[url])\r\n\r\n\r\n    const isFormFilled = () => {\r\n      return (\r\n        editData.stepName.trim() !== '' &&\r\n        editData.description.trim() !== '' &&\r\n        userstep !== ''\r\n      );\r\n    };\r\n  \r\n\r\n    const handleAddStepCard = () => {\r\n       \r\n      if (jobdetails && jobdetails.steps) {\r\n        const newStepNumber = jobdetails.steps.length + 1;\r\n        const newCard = {\r\n          id: newStepNumber,\r\n          stepNumber: newStepNumber,\r\n          stepName: 'New Step',\r\n          description: 'Description',\r\n          doneBy: 'CLIENT',\r\n          \r\n        };\r\n\r\n        const updatedJobDetails = {\r\n          ...jobdetails,\r\n          steps: [...jobdetails.steps, newCard]\r\n          // steps: updatedSteps,\r\n        };\r\n        setJobDetails(updatedJobDetails);\r\n        setIsNewStep(true);\r\n        setEditMode(true);\r\n        setSelectedStep(newCard);\r\n        setEditData({\r\n          stepName: '',\r\n          description: '',\r\n          doneBy: '',\r\n          upload: true,\r\n        });\r\n    \r\n      \r\n      }\r\n    };\r\n\r\n    \r\n  //   function getTokenRes() {\r\n  //     return localStorage.getItem('tokenRes');\r\n  // }\r\n \r\n  function getRoleRes() {\r\n    return localStorage.getItem('roleRes');\r\n  }\r\n  const roleRes = getRoleRes();\r\n  const showEdit = () => {\r\n\r\n    \r\n\r\n    if (!isNewStep && roleRes.includes(\"LAWYER\")) {\r\n      return (\r\n         <div>\r\n                <Button className='mr-2' outline color=\"primary\" onClick={() => setEditMode(!editMode)}>\r\n                \r\n                \r\n                 {editMode ? <i className='simple-icon-close' /> : <i className='simple-icon-pencil ' />\r\n                  \r\n                  } \r\n                \r\n\r\n                  </Button>\r\n                  <Button outline color=\"primary\" >\r\n                  <i className='simple-icon-trash ' />\r\n                  </Button>\r\n                </div>\r\n        \r\n      );\r\n    }\r\n    return null; \r\n  };\r\n\r\n  // const token = getTokenRes();\r\n  const history = useHistory();\r\n\r\n  \r\n    const handleStepClick = (step) => {\r\n      setSelectedStep(step);\r\n      setEditMode(false);\r\n      setEditData({\r\n        stepName: step.stepName,\r\n        description: step.description,\r\n        doneBy: step.doneBy,\r\n        upload: true,\r\n      });   \r\n    };\r\n  \r\n    \r\n    const handleEditChange = (e) => {\r\n      const { name, value } = e.target;\r\n      setEditData(prev => ({ ...prev, [name]: value }));\r\n    };\r\n    \r\n   \r\n    const handleJobNameClick = () => {\r\n      setJobEditMode(true);\r\n     \r\n    };\r\n    const handleJobStatusClick=()=>{\r\n      setJobStatusEditMode(true);\r\n    }\r\n  \r\n   \r\n  const showClientNoJob=()=>{\r\n    \r\n    if(roleRes.includes(\"USER\")){\r\n      return(\r\n        <div>\r\n           <Card className='text-center'>\r\n        <CardBody>\r\n          <h3>Your lawyer is working on your job<span className='mx-2'>\r\n          <i className='iconsminds-information'/></span></h3>\r\n        </CardBody>\r\n      </Card>\r\n        </div>\r\n       \r\n      );\r\n     \r\n    }\r\n  \r\n     return  <div>\r\n     <Card className='text-center'>\r\n  <CardBody>\r\n    <h3>You didnt created step yet <span className='mx-2'>\r\n    <i className='iconsminds-information'/></span></h3>\r\n    <Button color='primary' onClick={handleAddStepCard}>Create your first step </Button>\r\n  </CardBody>\r\n</Card>\r\n  </div>;\r\n  };\r\n\r\n  const ApproveJobStatusByClient=async()=>{\r\n    const approveUrl=`${baseUrl}/api/lawyer/job/${jid}/status/client`\r\n    try{\r\n      const response= await axios.put(approveUrl,{status:\"COMPLETED\"});\r\n      if(response.status===200){\r\n        LawyerJobsDetails();\r\n      }\r\n    }\r\n    catch(error){\r\n      console.error('Failed to update job status:', error);\r\n    }\r\n  }\r\n  const RejectJobStatusByClient=async()=>{\r\n    const approveUrl=`${baseUrl}/api/lawyer/job/${jid}/status/client`\r\n    try{\r\n      const response= await axios.put(approveUrl,{status:\"IN_DISPUTE\"});\r\n      if(response.status===200){\r\n        LawyerJobsDetails();\r\n      }\r\n    }\r\n    catch(error){\r\n      console.error('Failed to update job status:', error);\r\n    }\r\n  }\r\n  \r\n  const clientJobApproveInfo=()=>{\r\n    if(roleRes.includes(\"USER\")&&jobdetails.jobStatus===\"LAWYER_COMPLETED\"){\r\n      return(\r\n          <Row>\r\n          <Col  className='text-center my-2'  style={{ position: 'relative', top: '50%', bottom:'-50%'  }}>\r\n          <Card className='mx-auto '>\r\n          <CardBody>\r\n            <h3>Your lawyer has marked the job as completed</h3>\r\n            <p>Do you agree ?</p>\r\n            <Button className='mr-2' color='primary' onClick={ApproveJobStatusByClient}>Accept</Button>\r\n            <Button className='' outline onClick={RejectJobStatusByClient}>Raise a dispute</Button>\r\n          </CardBody>\r\n         \r\n          </Card>\r\n        </Col>\r\n        </Row> \r\n      )\r\n    }\r\n    return null;\r\n  }\r\n  \r\n\r\n \r\n    const handleCancelClick = () => {\r\n      setJobEditMode(false);\r\n    };\r\n    const handleCancelStatusClick = () => {\r\n      setJobStatusEditMode(false);\r\n    };\r\n   \r\n   \r\n    \r\n  \r\n    const saveEdits = async () => {\r\n      // const updateUrl = `${url}/steps/${selectedStep.id}`;\r\n      const updateUrl = `${url}/jobDetail/${selectedStep.stepNumber} `;\r\n      const dataToSend = {\r\n        ...editData,\r\n         doneBy:userstep, \r\n       \r\n      };\r\n      console.log('Payload to send:', dataToSend); \r\n     \r\n      try {\r\n       \r\n        const response = await axios.put(updateUrl,dataToSend);\r\n       \r\n     \r\n         \r\n        if (response.status === 200) {\r\n          \r\n            LawyerJobsDetails();\r\n          setEditMode(false);\r\n\r\n\r\n            // Reassign step numbers to be sequential\r\n      // const updatedSteps = reassignStepNumbers(jobdetails.steps);\r\n\r\n      // const updatedJobDetails = {\r\n      //   ...jobdetails,\r\n      //   steps: updatedSteps,\r\n      // };\r\n\r\n      // setJobDetails(updatedJobDetails);\r\n      // Reassign step numbers to be sequential\r\n    \r\n      \r\n      \r\n          \r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to update step:', error);\r\n      }\r\n    };\r\n    // const saveEdits1 = async () => {\r\n    //   // const newStepNumber = jobdetails && jobdetails.steps ? jobdetails.steps.length + 1 : 1;\r\n    //   const updateUrl = `${baseUrl}/api/lawyer/job/${jid}/jobDetail/step/${selectedStep.stepNumber} `;\r\n    //   const dataToSend = {\r\n    //     ...editData,\r\n    //      doneBy:userstep, \r\n        \r\n    //   };\r\n    //   console.log('Payload to send:', dataToSend); \r\n     \r\n    //   try {\r\n    //     const response = await axios.post(updateUrl,dataToSend);\r\n         \r\n    //     if (response.status === 200) {\r\n    //       LawyerJobsDetails();\r\n    //       setEditMode(false);\r\n\r\n\r\n    //       // Reassign step numbers to be sequential\r\n    //   // const updatedSteps = reassignStepNumbers(jobdetails.steps);\r\n\r\n    //   // const updatedJobDetails = {\r\n    //   //   ...jobdetails,\r\n    //   //   steps: updatedSteps,\r\n    //   // };\r\n\r\n    //   // setJobDetails(updatedJobDetails);\r\n      \r\n    //   // setIsNewStep(false); // Reset the new step flag after creation\r\n\r\n\r\n      \r\n          \r\n    //     }\r\n    //   } catch (error) {\r\n    //     console.error('Failed to update step:', error);\r\n    //   }\r\n    // };\r\n    const saveEdits1 = async () => {\r\n      const updateUrl = `${baseUrl}/api/lawyer/job/${jid}/jobDetail/step/${selectedStep.stepNumber} `;\r\n      const dataToSend = {\r\n        ...editData,\r\n        doneBy: userstep,\r\n      };\r\n    \r\n      console.log('Payload to send:', dataToSend); \r\n    \r\n      try {\r\n         \r\n        const response = await axios.get(`${baseUrl}/api/lawyer/job/${jid}`);\r\n        const existingSteps = response.data.steps;\r\n        const existingStepNumbers = existingSteps.map(step => step.stepNumber);\r\n    \r\n        const selectedStepNumber = selectedStep.stepNumber;\r\n    \r\n        // Check if all steps up to selectedStepNumber - 1 are in existingStepNumbers\r\n        const allPreviousStepsOccupied = [...Array(selectedStepNumber - 1).keys()].every(stepNumber => existingStepNumbers.includes(stepNumber + 1));\r\n    \r\n        if (allPreviousStepsOccupied) {\r\n          // Post the current step\r\n          const postResponse = await axios.post(updateUrl, dataToSend);\r\n    \r\n          ToasterComponent('success', postResponse.data.statuses);\r\n          if (postResponse.status === 200) {\r\n            LawyerJobsDetails();\r\n            setEditMode(false);\r\n          }\r\n        } else {\r\n          alert('Please fill out all previous steps before creating or updating this step.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to update step:', error);\r\n      }\r\n    };\r\n    \r\n    \r\n    \r\n    \r\n   \r\n    const saveJobs = async () => {\r\n      // const updateUrl1 = `${url}/jobDetail/${jid}/step/${selectedStep.id}`;\r\n      const updateUrl1 = `${baseUrl}/api/lawyer/lawyerJob`;\r\n      try {\r\n        const response = await axios.put(updateUrl1, { jobId:`${jid}` , jobName: jobdetails.jobName }); \r\n        if (response.status === 200) {\r\n          LawyerJobsDetails();\r\n          setEditMode(false);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to update job name:', error);\r\n      }\r\n    };\r\n    \r\n    const handleSaveJobName = () => {\r\n      saveJobs();\r\n      setJobEditMode(false);\r\n    };\r\n    \r\n    // const handleSaveJobStatus=()=>{\r\n    //   setJobStatusEditMode(false);\r\n    // }\r\n   \r\n    \r\n    const saveStatus=async( selectedKey)=>{\r\n     \r\n      const updateStatusUrl=`${baseUrl}/api/lawyer/job/${jid}/jobdetail-status/${selectedStep.stepNumber}`\r\n      try{\r\n        const response = await axios.put(updateStatusUrl, {status:selectedKey}); \r\n        if (response.status === 200) {\r\n          LawyerJobsDetails();\r\n          \r\n          setEditMode(false);\r\n          \r\n         \r\n        }\r\n      }\r\n      catch (error) {\r\n        console.error('Failed to update job status:', error);\r\n      }\r\n    }\r\n\r\n    const saveJobStatus=async(selectedKey)=>{\r\n      const updateJobStatusUrl=`${baseUrl}/api/lawyer/job/${jid}/status/lawyer`\r\n      try{\r\n        const response= await axios.put(updateJobStatusUrl,{status:selectedKey});\r\n        if (response.status === 200) {\r\n          LawyerJobsDetails();\r\n          setJobStatusEditMode(false);\r\n          \r\n         \r\n        }\r\n      }\r\n      catch(error){\r\n        console.error('Failed to update job status:', error);\r\n      }\r\n    }\r\n\r\n\r\n   \r\n\r\n    // const handleSave = () => {\r\n    //   if (isNewStep) {\r\n        \r\n    //     saveEdits1();\r\n    //   } else {\r\n        \r\n    //     saveEdits();\r\n    //   }\r\n    // };\r\n    const handleSave = () => {\r\n      if (isNewStep) {\r\n        if (isFormFilled()) {\r\n          saveEdits1();\r\n        } else {\r\n          console.warn('Please fill all required fields.');\r\n        }\r\n      } else {\r\n        saveEdits();\r\n      }\r\n    };\r\n    \r\n\r\n    const showPlusCard = () => {\r\n      if (roleRes.includes(\"LAWYER\")) {\r\n        return (\r\n          null\r\n        );\r\n      }\r\n    \r\n      if (roleRes.includes(\"USER\")) {\r\n        return (\r\n          <Card className='d-none'>\r\n            {/* <CardBody className='my-2' style={{cursor: \"pointer\"}} onClick={handleAddCard}> */}\r\n            <CardBody className='my-2' style={{cursor: \"pointer\"}} onClick={handleAddStepCard}>\r\n              <h1 className='text-center mx-auto w-100' style={{fontSize: \"60px\", cursor: \"pointer\"}}>\r\n                +\r\n              </h1>\r\n            </CardBody>\r\n          </Card>\r\n        );\r\n      }\r\n    \r\n      return null; \r\n    };\r\n    const showJobEditIcon = () => {\r\n\r\n      // if (!jobdetails || !jobdetails.jobName) {\r\n      //   return <h1 className='ml-1'>Loading job name...</h1>;  // Provide a loading or default placeholder\r\n      // }\r\n      if (roleRes.includes(\"LAWYER\")) {\r\n        return (\r\n          <div\r\n            className='font-weight-semibold text-large '\r\n            style={{ cursor: 'pointer' }}\r\n            onMouseEnter={() => setIsHovered(true)}\r\n            onMouseLeave={() => setIsHovered(false)}\r\n            onClick={() => setJobEditMode(true)}\r\n            onKeyDown={(event) => {\r\n              if (event.key === 'Enter' || event.key === 'Space') {\r\n                handleJobNameClick();\r\n                event.preventDefault();\r\n              }\r\n            }}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n          >\r\n            <h1 className=''>{jobdetails.jobName}</h1>\r\n            \r\n            {isHovered && (\r\n              <span className='ml-2 text-primary text-one'>\r\n                <i \r\n                  className='simple-icon-pencil' \r\n                  style={{ cursor: 'pointer' }} \r\n                  size='sm'\r\n                />\r\n              </span>\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n      \r\n      return <h1 className=''>{jobdetails.jobName} </h1>;\r\n    };\r\n    \r\n   const showJobStatusEditIcon=()=>{\r\n    if (roleRes.includes(\"LAWYER\")) {\r\n      return (\r\n        <div\r\n          className='font-weight-semibold text-large d-flex'\r\n          style={{ cursor: 'pointer' }}\r\n          onMouseEnter={() => setIsHovered1(true)}\r\n          onMouseLeave={() => setIsHovered1(false)}\r\n          onClick={() => setJobStatusEditMode(true)}\r\n          onKeyDown={(event) => {\r\n            if (event.key === 'Enter' || event.key === 'Space') {\r\n              handleJobStatusClick();\r\n              event.preventDefault();\r\n            }\r\n          }}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n        >\r\n          <h6 className='text-muted'>job status : {jobdetails.jobStatus}</h6>\r\n          \r\n          {isHovered1 && (\r\n            <span className='ml-2 text-primary text-one'>\r\n              <i \r\n                className='simple-icon-pencil' \r\n                style={{ cursor: 'pointer' }} \r\n                size='sm'\r\n              />\r\n            </span>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    return <h6 className='text-muted'>job status : {jobdetails.jobStatus}</h6>;\r\n   }\r\n    \r\n    const showAddStepCard = () => {\r\n      if (roleRes.includes(\"LAWYER\")) {\r\n        return (\r\n          <>\r\n          \r\n            <Card>\r\n              <CardBody className='my-2' style={{cursor: \"pointer\"}} onClick={handleAddStepCard}>\r\n                <h1 className='text-center mx-auto w-100' style={{fontSize: \"60px\", cursor: \"pointer\"}}>\r\n                  +\r\n                </h1>\r\n              </CardBody>\r\n            </Card>\r\n          </>\r\n        );\r\n      }\r\n    \r\n      if (roleRes.includes(\"USER\")) {\r\n        return (\r\n          <>\r\n          \r\n            <Card className='d-none'>\r\n              <CardBody className='my-2' style={{cursor: \"pointer\"}} onClick={handleAddStepCard}>\r\n                <h1 className='text-center mx-auto w-100' style={{fontSize: \"60px\", cursor: \"pointer\"}}>\r\n                  +\r\n                </h1>\r\n              </CardBody>\r\n            </Card>\r\n          </>\r\n        );\r\n      }\r\n    \r\n      return null; \r\n    };\r\n    \r\n    const downloadDocument = async (documentId) => {\r\n      \r\n      const updateUrl1 = `${baseUrl}/api/lawyer/job/document/${documentId}`;\r\n      try {\r\n        const response = await axios.get(updateUrl1); \r\n        console.log(\"document response\",response);\r\n        \r\n        if (response.status === 200) {\r\n          // const documentUrl = updateUrl1;\r\n          window.open(updateUrl1, '_blank');\r\n    \r\n\r\n     \r\n          // if (documentUrl) {\r\n          //   window.open(documentUrl, '_blank');\r\n          // } else {\r\n          //   console.error('Document URL is missing in the response');\r\n          // }\r\n        } else {\r\n          console.error('Failed to fetch the document');\r\n        }\r\n      }\r\n      \r\n      catch (error) {\r\n        console.error('Failed to update job name:', error);\r\n      }\r\n    };\r\n\r\n    const deleteDocument = async (documentId) => {\r\n      const deleteUrl = `${baseUrl}/api/lawyer/job/document/${documentId}`;\r\n      try {\r\n        const response = await axios.delete(deleteUrl);\r\n        if (response.status === 200) {\r\n          window.location.reload();\r\n          \r\n          \r\n        } else {\r\n          console.error('Failed to delete the document');\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to delete the document:', error);\r\n      }\r\n    };\r\n    const handleKeyDown = (event, action, documentId) => {\r\n      if (event.key === 'Enter' || event.key === ' ') {\r\n        event.preventDefault();\r\n        action(documentId);\r\n      }\r\n    };\r\n\r\n    const location = useLocation();\r\n  const { lawyerName,clientName,lawyerId ,clientId} = location.state || {};\r\n  const isLawyer = roleRes.includes(\"LAWYER\");\r\n\r\n  const navigateToProfile = () => {\r\n    history.push(`/app/lawyerprofile/${lawyerId}`);\r\n  };\r\n  \r\n    \r\n\r\n  return (\r\n    <div>\r\n \r\n        <Row>\r\n\r\n        {/* <Col md={12} lg={12} sm={12} className='my-2'>\r\n        {jobdetails.steps&&jobdetails.steps.length>0?(\r\n         null\r\n        ):(\r\n          showClientNoJob()\r\n        )}\r\n        </Col> */}\r\n        <Col md={12} lg={4}>\r\n        \r\n        \r\n      \r\n        {jobeditmode ? (\r\n          <Row className='d-flex align-items-center'>\r\n           \r\n            <Col md={6}>\r\n            <div className=''>\r\n          <Input\r\n              type=\"text\"\r\n              value={jobdetails.jobName}\r\n              // onChange={(e) => setJobName(e.target.value)}\r\n              onChange={(e) => setJobDetails({ ...jobdetails, jobName: e.target.value })}\r\n            />\r\n           \r\n          </div>\r\n            </Col>\r\n            <Col md={6}> \r\n            <div className='my-3'>\r\n              <Button color=\"primary\" onClick={handleSaveJobName}>Save</Button>\r\n              <Button color=\"secondary\" className=\"ml-2\" onClick={handleCancelClick}>Cancel</Button>\r\n            </div></Col>\r\n            \r\n          </Row>\r\n          \r\n            \r\n          ) : (\r\n           \r\n\r\n          showJobEditIcon()\r\n          \r\n          \r\n       \r\n          )\r\n        }\r\n        <Row>\r\n        <Col>\r\n        <div>\r\n         \r\n         {/* <NavLink href={`/app/lawyerprofile/${lawyerId}`}>\r\n          <h6 className='text-muted'>Lawyer: {lawyerName}</h6>\r\n          </NavLink> */}\r\n     \r\n        {lawyerName ? (\r\n         \r\n          \r\n      <div role='button' tabIndex={0}  onClick={navigateToProfile} \r\n       onKeyPress={(e) => {\r\n        if (e.key === 'Enter' || e.key === ' ') {\r\n          navigateToProfile();\r\n        }\r\n      }}\r\n      style={{ cursor: 'pointer' }}>\r\n      <h6 className='text-muted'>Lawyer: {lawyerName}</h6>\r\n    </div>\r\n          \r\n       \r\n      ) : (\r\n         <h6 className='text-muted'>Client: {clientName}</h6>\r\n      )}\r\n        </div>\r\n        </Col>\r\n         \r\n        </Row>\r\n        <Row>\r\n        <Col>\r\n            \r\n            {jobstatuseditmode ? (\r\n          <Row className='d-flex align-items-center'>\r\n           \r\n            <Col md={6}>\r\n            <div className=''>\r\n           <Select\r\n          components={{ Input: CustomSelectInput }}\r\n          className=\"react-select\"\r\n          classNamePrefix=\"react-select\"\r\n          name=\"form-field-name\"\r\n          \r\n          // value={selectedOption}\r\n          value={jobstatuschange}\r\n          \r\n          onChange={(val) => {\r\n         console.log(val);  \r\n          // setSelectedOption(val);\r\n          setJobStatusChange(val);\r\n          // handleJobStatusChange\r\n          // setSelectedStep(val);\r\n          // saveJobStatus(val.key);\r\n          saveJobStatus(val.value);\r\n      }}\r\n          \r\n            options={jobStatusData}\r\n          \r\n        />\r\n           \r\n          </div>\r\n            </Col>\r\n            <Col md={6}> \r\n            <div className='my-3'>\r\n              {/* <Button color=\"primary\" onClick={handleSaveJobStatus}>Save</Button> */}\r\n              <Button color=\"secondary\" className=\"ml-2\" onClick={handleCancelStatusClick}>Cancel</Button>\r\n            </div></Col>\r\n            \r\n          </Row>\r\n          \r\n            \r\n          ) : (\r\n           \r\n\r\n          showJobStatusEditIcon()\r\n          \r\n          \r\n       \r\n          )\r\n        }\r\n          </Col>\r\n        </Row>\r\n       \r\n\r\n\r\n          {clientJobApproveInfo()}\r\n      \r\n        </Col>\r\n        {/* <Col className=''>\r\n        <LawyerJobNotes jobId={jid}/></Col> */}\r\n       \r\n\r\n        <Col className=''>\r\n        <div className='d-flex justify-content-end align-items-center '>\r\n        <div className=''>\r\n        {roleRes.includes(\"USER\") ? (\r\n          <Button \r\n            className='mr-2'  \r\n            outline \r\n            color='primary' \r\n            onClick={() => history.push({\r\n              pathname: '/app/lawyer/reviews',\r\n              state: { lawyerName, clientId, clientName, lawyerId } \r\n            })}\r\n          >\r\n            Add Reviews\r\n          </Button>\r\n        ) : null}\r\n        \r\n        \r\n  \r\n        </div>\r\n        <div className=''>\r\n        <LawyerJobNotes jobId={jid} />\r\n        </div>\r\n        </div>\r\n        \r\n       \r\n       </Col>\r\n\r\n       \r\n\r\n\r\n        </Row>\r\n        \r\n        <Row>\r\n        <Col md={12} lg={12} sm={12} className='my-2'>\r\n\r\n        \r\n        \r\n        {jobdetails.steps&&jobdetails.steps.length>0?(\r\n         null\r\n        ):(\r\n          showClientNoJob()\r\n        )}\r\n        </Col>\r\n        </Row>\r\n      <Row>\r\n      \r\n      <Colxx lg={4}>\r\n     \r\n      {jobdetails.steps&&jobdetails.steps.map((s)=>{\r\n            return(\r\n              <div key={s.id}>\r\n           \r\n           \r\n      <Card className='mb-2'\r\n      onClick={() => handleStepClick(s)}\r\n        style={{ border: selectedStep === s ? `3px solid var(--theme-color-1)` : 'none' ,cursor:'pointer'}}\r\n      >\r\n        <CardBody className=''>\r\n        <div className='d-flex align-items-center'>\r\n          <div> \r\n\r\n   \r\n          <h1>{s.stepNumber}</h1>\r\n          \r\n         \r\n          </div>\r\n          <div className='d-flex justify-content-between flex-grow-1 align-items-center  '>\r\n          <div className='ml-3'>\r\n          <h3>{s.stepName}</h3>\r\n            <h6 className='text-muted'>{s.description}</h6>\r\n            <h6>By <span className='text-muted'>{s.doneBy}</span></h6>\r\n          </div>\r\n          <div className='text-end'>\r\n    <span \r\n        className='text-xlarge text-muted' \r\n        style={{cursor: 'pointer'}}\r\n        onClick={() => handleStepClick(s)}\r\n        onKeyDown={(event) => {\r\n            if (event.key === 'Enter' || event.key === 'Space') {\r\n                handleStepClick(s);\r\n                event.preventDefault();  \r\n            }\r\n        }}\r\n        role=\"button\"\r\n        tabIndex=\"0\"\r\n        onMouseEnter={(event) => { \r\n            const { target } = event;\r\n            target.style.fontWeight = 'bold';\r\n        }}\r\n        onMouseLeave={(event) => { \r\n            const { target } = event;\r\n            target.style.fontWeight = 'normal';\r\n        }}\r\n    >\r\n        <i className='simple-icon-arrow-right' />\r\n    </span>\r\n</div>\r\n          </div>\r\n         \r\n        </div>\r\n     \r\n        \r\n    \r\n        </CardBody>\r\n      </Card>\r\n      \r\n              </div>\r\n             \r\n            )\r\n           \r\n          })}\r\n             \r\n\r\n          \r\n          {jobdetails.steps&&jobdetails.steps.length>0?(\r\n           \r\n         \r\n          showAddStepCard()\r\n          ):( \r\n          showPlusCard() \r\n          )}\r\n      </Colxx>\r\n \r\n      <Colxx>\r\n     \r\n      \r\n          <Col>\r\n          {/* right side step details */}\r\n         \r\n          {selectedStep && (\r\n            \r\n            <Card className='mb-2  '>\r\n              <CardBody>\r\n                <Form>\r\n                <FormGroup>\r\n                  <Col>\r\n                  <div className='d-flex justify-content-between'>\r\n                <h2 className='text-primary '>Step {selectedStep.stepNumber} \r\n                {editMode ? ` : ${editData.stepName}` : \"\"}\r\n                </h2>\r\n              \r\n                  {showEdit()}\r\n\r\n                  \r\n                </div>\r\n                  </Col>\r\n                </FormGroup>\r\n                \r\n                 \r\n                  {editMode ? (\r\n                    <>\r\n                      <FormGroup className='py-2'>\r\n                      <Col sm={2}>\r\n                      <Label>Name</Label>\r\n                      </Col>\r\n                        <Col>\r\n                        <Input type=\"text\" value={editData.stepName} onChange={handleEditChange} name=\"stepName\" />\r\n                        </Col>\r\n                      </FormGroup>\r\n                      <FormGroup className='py-2'>\r\n                      <Col sm={2}>\r\n                      <Label>Description</Label>\r\n                      </Col>\r\n                        <Col>\r\n                        <Input type=\"text\" value={editData.description} onChange={handleEditChange} name=\"description\" />\r\n\r\n                        </Col>\r\n                      </FormGroup>\r\n                      {/* <FormGroup className='py-2'>\r\n                      <Col sm={2}>\r\n                      <Label>Done by</Label>\r\n                      </Col>\r\n                        <Col>\r\n                        <Input type=\"text\" value={editData.doneBy} onChange={handleEditChange} name=\"doneBy\" />\r\n\r\n                        </Col>\r\n                      </FormGroup> */}\r\n                      <FormGroup className='py-2'>\r\n                      <Col sm={2}>\r\n                      <Label>Done by</Label>\r\n                      </Col>\r\n                        <Col>\r\n                        <Select\r\n                 components={{ Input: CustomSelectInput }}\r\n                   className=\"react-select\"\r\n                classNamePrefix=\"react-select\"\r\n                  name=\"userstep\"\r\n                  // value={doneByData.find(option => option.value === userstep)}\r\n            \r\n                 onChange={handleUserStepChange}\r\n                //  onChange={(val) => {\r\n                // console.log(val);  \r\n                // setUserStep(val);\r\n             \r\n                //   }}\r\n          // onChange={saveStatus} \r\n            options={doneByData}\r\n          // options={selectData}\r\n        />\r\n                    \r\n                     \r\n                        </Col>\r\n                      </FormGroup>\r\n                     \r\n\r\n       {isNewStep ? null : (\r\n            <>\r\n              <FormGroup className='py-2'>\r\n                <Col sm={2}>\r\n                  <Label>Documents</Label>\r\n                </Col>\r\n                <Col>\r\n                <DropzoneExample   jobId={`${jid}`} stepNo={`${selectedStep.stepNumber}`}/>\r\n                  <div className='mt-4'>\r\n                  {selectedStep.documentList && selectedStep.documentList.map((document) => (\r\n                                  <h5 key={document.id}>{document.name}\r\n                                  <span className='ml-2 text-primary' role=\"button\"\r\n                                 tabIndex=\"0\" \r\n                               onKeyDown={(e) => handleKeyDown(e, downloadDocument, document.id)}\r\n                               onClick={() => downloadDocument(document.id)}>\r\n\r\n                                <i className='iconsminds-download-1 mx-1 '  \r\n                                  style={{cursor:\"pointer\"}}/>\r\n                               </span>\r\n                                  <span  tabIndex=\"0\" role='button'\r\n                               onKeyDown={(e) => handleKeyDown(e, deleteDocument, document.id)}\r\n                               onClick={() => deleteDocument(document.id)}>\r\n                                  \r\n                                  \r\n                                  \r\n                                  <i className='simple-icon-trash mx-1 ' style={{cursor:\"pointer\"}}/>\r\n                                  </span></h5>\r\n                                ))}\r\n                  </div>\r\n                </Col>\r\n              </FormGroup>\r\n            </>\r\n          )}\r\n\r\n        \r\n      <FormGroup>\r\n      <Col>   \r\n      {/* {isNewStep ? (\r\n        \r\n        <Button color=\"primary\" onClick={handleSave}>Create</Button>\r\n      ) : (\r\n        // Save button for editing an existing step\r\n        <Button color=\"primary\" onClick={handleSave}>Save</Button>\r\n      )} */}\r\n      {isNewStep ? (\r\n        <Button \r\n          color=\"primary\" \r\n          onClick={handleSave}\r\n          disabled={!isFormFilled()} \r\n        >\r\n          Create\r\n        </Button>\r\n      ) : (\r\n        <Button color=\"primary\" onClick={handleSave}>Save</Button>\r\n      )}\r\n     </Col>\r\n     </FormGroup>\r\n    \r\n   \r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                            <FormGroup className='py-2'>\r\n\r\n                      <Col sm={2}>\r\n                      <Label className='text-one'>Name</Label>\r\n                      </Col>\r\n                      <Col>\r\n                      <h3>{selectedStep.stepName}</h3>\r\n\r\n                      </Col>\r\n\r\n                          \r\n                          </FormGroup>\r\n                  <FormGroup  className='py-2'>\r\n                  <Col sm={2}>\r\n                  <Label className='text-one'>Description</Label>\r\n                  </Col>\r\n                  <Col>\r\n                  <h3 className=''>{selectedStep.description}</h3>\r\n                  </Col>\r\n                  \r\n                  </FormGroup>\r\n                  <FormGroup className='py-2' >\r\n                  <Col sm={2}>\r\n                  <Label className='text-one'>Done by</Label>\r\n                  </Col>\r\n                  <Col>\r\n                  <h3>{selectedStep.doneBy}</h3>\r\n                  </Col>\r\n                  \r\n                  </FormGroup>\r\n                  <FormGroup  className='py-2'>\r\n                  {(selectedStep.doneBy === 'CLIENT' || (selectedStep.doneBy === 'LAWYER' && isLawyer)) && (\r\n                    <Col sm={2}>\r\n                  <Label className='text-one'>Documents</Label>\r\n                  </Col>\r\n                  )}\r\n                 \r\n                  <Col>\r\n                  {(selectedStep.doneBy === 'CLIENT' || (selectedStep.doneBy === 'LAWYER' && isLawyer)) && (\r\n                    <DropzoneExample jobId={`${jid}`} stepNo={`${selectedStep.stepNumber}`} />\r\n                  )}\r\n                  {/* <DropzoneExample   jobId={`${jid}`} stepNo={`${selectedStep.stepNumber}`}/> */}\r\n                 \r\n\r\n                  <div className='mt-4'>\r\n                      {selectedStep.documentList && selectedStep.documentList.map((document) => (\r\n                        <h5 key={document.id}>{document.name}\r\n                        <span className='ml-2 text-primary' role=\"button\"\r\n                        tabIndex=\"0\" \r\n                      onKeyDown={(e) => handleKeyDown(e, downloadDocument, document.id)}\r\n                      onClick={() => downloadDocument(document.id)}>\r\n                      <i className='iconsminds-download-1 mx-1 '  \r\n                        style={{cursor:\"pointer\"}}/>\r\n                        </span>\r\n                        <span  tabIndex=\"0\" role='button'\r\n                      onKeyDown={(e) => handleKeyDown(e, deleteDocument, document.id)}\r\n                      onClick={() => deleteDocument(document.id)}>\r\n                        \r\n                        \r\n                        <i className='simple-icon-trash mx-1 ' style={{cursor:\"pointer\"}}/>\r\n                        </span></h5>\r\n                      ))}\r\n      \r\n                    </div>\r\n                  </Col>\r\n                    \r\n                    </FormGroup>\r\n                    {/* <FormGroup>\r\n                    <Col sm={2}>\r\n                    <Label className='text-one'>Comment</Label>\r\n                    </Col>\r\n                    <Col>\r\n                    <Input type=\"textarea\" name=\"comment\" />\r\n                    </Col>\r\n                      \r\n                      </FormGroup> */}\r\n                  <FormGroup>\r\n                    <Col sm={2}>\r\n                      <Label className='text-one'>\r\n                        Status \r\n                      </Label>\r\n                    </Col>\r\n                    <Col>\r\n                    \r\n                    {/* <h3>{selectedStep.status}</h3> */}\r\n                    {/* <Select\r\n                    components={{ Input: CustomSelectInput }}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"react-select\"\r\n                    name=\"form-field-name\"\r\n                    \r\n                    value={selectedStep.status}\r\n                    \r\n                    onChange={(val) => {\r\n                  console.log(val);  \r\n                    setSelectedOption(val);\r\n                    setSelectedStep(val);\r\n                    saveStatus(val.key);\r\n                }}\r\n                    \r\n                      options={selectData}\r\n                    \r\n                  /> */}\r\n\r\n                  {(selectedStep.doneBy === 'LAWYER' && isLawyer) || selectedStep.doneBy === 'CLIENT' ? (\r\n                  <Select\r\n                    components={{ Input: CustomSelectInput }}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"react-select\"\r\n                    name=\"form-field-name\"\r\n                    value={selectData.find(option => option.value === selectedStep.status)}\r\n                    placeholder={selectedStep.status ? selectedStep.status : 'Select status'}\r\n                    onChange={(val) => {\r\n                      console.log(val);\r\n                      setSelectedStep({ ...selectedStep, status: val.value });\r\n                      saveStatus(val.key);\r\n                    }}\r\n                    options={selectData}\r\n                  />\r\n                ) : (\r\n                  <h3>{selectedStep.status}</h3>\r\n                )}\r\n\r\n\r\n                  {/* <Select\r\n                    components={{ Input: CustomSelectInput }}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"react-select\"\r\n                    name=\"form-field-name\"\r\n                    value={selectData.find(option => option.value === selectedStep.status)}\r\n                    placeholder={selectedStep.status ? selectedStep.status : 'Select status'}\r\n                    onChange={(val) => {\r\n                      console.log(val);\r\n                      setSelectedStep({ ...selectedStep, status: val.value });\r\n                      saveStatus(val.key);\r\n                    }}\r\n                    options={selectData}\r\n                  /> */}\r\n                    \r\n\r\n                    \r\n                    \r\n                    </Col>\r\n\r\n                    </FormGroup>  \r\n\r\n\r\n\r\n                    {/* <FormGroup className='py-2'>\r\n                    <Col sm={2}>\r\n                      <Label>Status</Label>\r\n                    </Col>\r\n                    <Col>\r\n                    <Select\r\n                  components={{ Input: CustomSelectInput }}\r\n                  className=\"react-select\"\r\n                  classNamePrefix=\"react-select\"\r\n                  name=\"form-field-name\"\r\n                  \r\n                  value={selectedStep.status}\r\n                  \r\n                  onChange={(val) => {\r\n                console.log(val);  \r\n                setSelectedOption(val);\r\n                setSelectedStep(val);\r\n                saveStatus(val.key);\r\n            }}\r\n                \r\n                  options={selectData}\r\n                \r\n              />\r\n              \r\n              </Col>\r\n            </FormGroup> */}\r\n                    {/* <FormGroup>\r\n                      <Label>\r\n                        Status\r\n                      </Label>\r\n                      <Input type=\"select\">\r\n                        \r\n                        <option>{selectedStep.status}</option>\r\n                        <option>In Progress</option>\r\n                        <option>completed</option>\r\n                        \r\n                         \r\n                      </Input>\r\n                    </FormGroup> */}\r\n                    </>\r\n\r\n                    \r\n\r\n\r\n                       \r\n                  )}\r\n\r\n\r\n        \r\n                 \r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          )}\r\n        </Col>\r\n       \r\n        </Colxx>\r\n      </Row>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobDetails;\r\n","import React from 'react';\r\n\r\nconst ShowNotifications = () => {\r\n  return <h1>ShowNotifications</h1>;\r\n};\r\n\r\nexport default ShowNotifications;\r\n","import React from 'react';\r\n\r\nimport ShowNotifications from './notifications/show-notifications';\r\nimport MyApplications from './my-applications/my-applications';\r\nimport MyDocuments from './my-documents/my-documents';\r\nimport MyDetails from './my-details/my-details';\r\n\r\nconst MyApp = () => {\r\n  return (\r\n    <div>\r\n      <ShowNotifications />\r\n      <hr />\r\n      <hr />\r\n      <MyApplications />\r\n      <hr />\r\n      <hr />\r\n      <MyDetails />\r\n      <hr />\r\n      <hr />\r\n      <MyDocuments />\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyApp;\r\n","const CategoryData = [\r\n  {\r\n    name: \"IT\",\r\n    short: \"IT\",\r\n  },\r\n  {\r\n    name: \"MANUFACTURING_MECHANICAL\",\r\n    short: \"MANUFACTURING_MECHANICAL\",\r\n  },\r\n  {\r\n    name: \"CIVIL\",\r\n    short: \"CIVIL\",\r\n  },\r\n  {\r\n    name: \"INTERVIEW_PREPARATION\",\r\n    short: \"INTERVIEW_PREPARATION\",\r\n  },\r\n  {\r\n    name: \" UNIV_ADMISSIONS\",\r\n    short: \" UNIV_ADMISSIONS\",\r\n  },\r\n  {\r\n    name: \"RESUMES_WRITTING\",\r\n    short: \"RESUMES_WRITTING,\",\r\n  },\r\n];\r\n\r\nexport default CategoryData;\r\n","/* eslint-disable no-param-reassign */\r\n\r\nimport axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { NotificationManager } from \"components/common/react-notifications\";\r\nimport { SliderTooltip } from \"components/common/SliderTooltips\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { createRef, useEffect, useState } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  InputGroup,\r\n  Jumbotron,\r\n  Label,\r\n  NavLink,\r\n  Row,\r\n  Spinner,\r\n} from \"reactstrap\";\r\n// import { FormikTagsInput } from \"containers/form-validations/FormikFields\";\r\nimport { adminRoot, baseUrl } from \"constants/defaultValues\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  validateAchievement,\r\n  validateBio,\r\n  validateCategory,\r\n  validateCompany,\r\n  validateIdentityStatus,\r\n  validateJobTitle,\r\n  validateLocation,\r\n  validateReasonForMentor,\r\n} from \"./validation\";\r\n\r\nimport indentityStatusList from \"../CommonCardList/IdentityStatusList\";\r\nimport { EmploymentTypeData } from \"../Listing/ListingData\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\nimport CategoryData from \"./CategoryData\";\r\nimport country from \"./Country\";\r\nimport language from \"./Languages\";\r\n\r\nconst currentYear = new Date().getFullYear();\r\nconst years = [];\r\nfor (let year = currentYear; year >= 2005; year -= 1) {\r\n  years.push(year);\r\n}\r\n\r\nconst ApplyMentor = () => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const steps = [\"About you\", \"profile\", \"Experience\"];\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [file1, setFile1] = useState(null);\r\n  const [amount, setAmount] = useState(500);\r\n  const [loading, setLoading] = useState(false);\r\n  const [skillsTag, setSkillsTag] = useState([]);\r\n  const [toolsTag, setToolsTag] = useState([]);\r\n  const [imageError, setImageError] = useState(false);\r\n  const [imageError1, setImageError1] = useState(false);\r\n  const [skillError, setSkillError] = useState(false);\r\n  const [imageErrorMessage, setImageErrorMessage] = useState(null);\r\n  const [imageErrorMessage1, setImageErrorMessage1] = useState(null);\r\n  const [skillErrorMessage, setSkillErrorMessage] = useState(null);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [aboutLoading, setAboutLoading] = useState(false);\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n  const [experienceLoading, setExperienceLoading] = useState(false);\r\n  const [aboutField, setAboutField] = useState({});\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [works, setWorks] = useState([\r\n    {\r\n      company: \"\",\r\n      jobTitle: \"\",\r\n      employmentType: \"\",\r\n      jobLocation: \"\",\r\n      startYear: \"\",\r\n      endYear: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleWorkInputChange = (index, field, value) => {\r\n    const updatedWorks = works.map((work, i) =>\r\n      i === index ? { ...work, [field]: value } : work\r\n    );\r\n    setWorks(updatedWorks);\r\n  };\r\n\r\n  const addWorkExperience = () => {\r\n    setWorks([\r\n      ...works,\r\n      {\r\n        company: \"\",\r\n        jobTitle: \"\",\r\n        employmentType: \"\",\r\n        jobLocation: \"\",\r\n        startYear: \"\",\r\n        endYear: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const status = localStorage.getItem(\"status\");\r\n    console.log(\"status\", status);\r\n    if (status) {\r\n      if (status === \"0\") {\r\n        setCurrentStep(0);\r\n      } else if (status === \"1\") {\r\n        setCurrentStep(1);\r\n      } else if (status === \"3\") {\r\n        setCurrentStep(2);\r\n      } else if (status === \"7\") {\r\n        setCurrentStep(3);\r\n      } else {\r\n        setCurrentStep(0);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // file upload validation\r\n  const validateFile = (file) => {\r\n    // const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\r\n    const maxSize = 2 * 1024 * 1024; // 5MB\r\n    // if (!file) {\r\n    //   setImageError(true);\r\n    //   setImageErrorMessage(\"A profile picture is required\");\r\n    //   return false;\r\n    // }\r\n    // if (!allowedTypes.includes(file.type)) {\r\n    //   setImageError(true);\r\n    //   setImageErrorMessage(\r\n    //     \"Please upload a valid image file (JPEG, PNG, or GIF)\"\r\n    //   );\r\n    //   return false;\r\n    // }\r\n    if (file && file.size > maxSize) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"File size must be less than 2MB\");\r\n      return false;\r\n    }\r\n\r\n    setImageError(false);\r\n    setImageErrorMessage(\"\");\r\n    return true;\r\n  };\r\n  // file upload validation end\r\n\r\n  const [fields] = useState({\r\n    // image: \"\",\r\n\r\n    jobTitle: \"\",\r\n    company: \"\",\r\n    location: \"\",\r\n    category: \"\",\r\n    skills: [],\r\n    bio: \"\",\r\n    // linkedinUrl: \"\",\r\n    identityStatus: \"\",\r\n    twitterHandle: \"\",\r\n    website: \"\",\r\n    introVideo: \"\",\r\n    featuredArticle: \"\",\r\n    reasonForMentor: \"\",\r\n    achievement: \"\",\r\n    experience: [\r\n      {\r\n        company: \"\",\r\n        jobTitle: \"\",\r\n        employmentType: \"\",\r\n        jobLocation: \"\",\r\n        startYear: \"\",\r\n        endYear: \"\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  // const CategoryData = [\r\n  //   \"Select Category\",\r\n  //   \"Engineering & Data\",\r\n  //   \"UX & Design\",\r\n  //   \"Business & Management\",\r\n  //   \"Product & Marketing\",\r\n  // ];\r\n  //   console.log(\"step\", currentStep);\r\n  const languageOptions = language.map((option) => ({\r\n    value: option.iso_code,\r\n    label: option.name,\r\n  }));\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setFile1(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      setImageError(false);\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        // .split(\",\")[1];\r\n        setSelectedFile(base64Image);\r\n        // setFieldValue(\"image\", base64Image);\r\n        setAboutField({ ...aboutField, image: base64Image });\r\n        // console.log(base64Image)\r\n        validateFile(file);\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const [selectedFile2, setSelectedFile2] = useState(null);\r\n\r\n  // Handle file change\r\n  const handleFileChangeResume = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const fileType = file.type;\r\n      const fileSize = file.size / 1024 / 1024; // Convert size to MB\r\n\r\n      if (fileType !== \"application/pdf\") {\r\n        // alert(\"Please upload a PDF file.\");\r\n        setImageError1(true);\r\n        setImageErrorMessage1(\"Please upload a PDF file.\");\r\n        return;\r\n      }\r\n\r\n      if (fileSize > 2) {\r\n        // alert(\"File size exceeds 2MB. Please upload a smaller file.\");\r\n        setImageError1(true);\r\n        setImageErrorMessage1(\"File size must be less than  2MB\");\r\n        return;\r\n      }\r\n\r\n      setSelectedFile2(file);\r\n      setImageError1(false);\r\n      setImageErrorMessage1(\"\");\r\n    }\r\n  };\r\n  //   const mentorAboutUrl=`${baseUrl}/api/mentor/details/about`;\r\n  //   const mentorAboutUrl=\"http://localhost:3001/acheckabout\";\r\n  const mentorAboutUrl = `${baseUrl}/api/mentor/details/about`;\r\n  const imageUploadUrl = `${baseUrl}/api/mentor/profile-image`;\r\n  const mentorProfileUrl = `${baseUrl}/api/mentor/details/profile`;\r\n  const experienceUrl = `${baseUrl}/api/mentor/details/experience`;\r\n  const mentorResumeUrl = `${baseUrl}/api/resume?role=MENTOR`;\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n  // const indentityStatusList = [\r\n  //   { value: \"IMMIGRANT\", label: \"IMMIGRANT\" },\r\n  //   { value: \"PR_CITIZEN\", label: \"PR_CITIZEN\" },\r\n  // ];\r\n\r\n  // const postDataAbout = async (data) => {\r\n  //   console.log(data);\r\n  //   setAboutLoading(true);\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"image\", file1);\r\n\r\n  //   const mentorProfile = {\r\n  //     jobTitle: data.jobTitle,\r\n  //     company: data.company,\r\n  //     location: data.location,\r\n  //     // linkedinUrl: data.linkedinUrl,\r\n  //     twitterHandle: data.twitterHandle,\r\n  //     language: data.language,\r\n  //   };\r\n  //   formData.append(\r\n  //     \"mentorProfile\",\r\n  //     new Blob([JSON.stringify(mentorProfile)], { type: \"application/json\" })\r\n  //   );\r\n  //   console.log(formData);\r\n\r\n  //   try {\r\n  //     const response = await axios.post(mentorAboutUrl, formData, {\r\n  //       headers: {\r\n  //         Authorization: `Bearer ${token}`,\r\n  //       },\r\n  //     });\r\n  //     // setNextStep(true)\r\n  //     setAboutLoading(false);\r\n  //     //   console.log(`resres ${response.status}`);\r\n  //     ToasterComponent(\"success\", response.data.statuses);\r\n  //     handleNextStep();\r\n  //     localStorage.setItem(\"status\", \"1\");\r\n  //   } catch (error) {\r\n  //     setImageError(false);\r\n  //     // console.error(error);\r\n  //     setAboutLoading(false);\r\n  //     if (error.response) {\r\n  //       error.response.data.statuses.forEach((status) => {\r\n  //         NotificationManager.error(\r\n  //           status.message,\r\n  //           \"Oops!\",\r\n  //           3000,\r\n  //           null,\r\n  //           null,\r\n  //           \"\"\r\n  //         );\r\n  //         if (status.code === 40327) {\r\n  //           setImageErrorMessage(status.message);\r\n  //           setImageError(true);\r\n  //         }\r\n  //       });\r\n  //     } else {\r\n  //       NotificationManager.error(\r\n  //         \"something went wrong\",\r\n  //         \"Oops!\",\r\n  //         3000,\r\n  //         null,\r\n  //         null,\r\n  //         \"\"\r\n  //       );\r\n  //     }\r\n  //     // console.log(\"er\",error.response.data.statuses)\r\n  //     // NotificationManager.warning(\r\n  //     //   \"Something went wrong\",\r\n  //     //   \"Oops!\",\r\n  //     //   3000,\r\n  //     //   null,\r\n  //     //   null,\r\n  //     //   \"\"\r\n  //     // );\r\n  //   }\r\n  // };\r\n  // Helper function for error handling\r\n  const handleError = (error) => {\r\n    if (error.response) {\r\n      error.response.data.statuses.forEach((status) => {\r\n        NotificationManager.error(\r\n          status.message,\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      });\r\n    } else {\r\n      NotificationManager.error(\r\n        \"Something went wrong\",\r\n        \"Oops!\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n    }\r\n  };\r\n\r\n  // const postDataAbout = async (data) => {\r\n  //   console.log(data);\r\n  //   setAboutLoading(true);\r\n\r\n  //   // Check if an image is available\r\n  //   const hasImage = file1 !== null && file1.size > 0;\r\n\r\n  //   // Create the mentor profile object\r\n  //   const mentorProfile = {\r\n  //     jobTitle: data.jobTitle,\r\n  //     company: data.company,\r\n  //     location: data.location,\r\n  //     twitterHandle: data.twitterHandle,\r\n  //     languages: data.language, // Assuming `language` is a string that should be in an array\r\n  //   };\r\n\r\n  //   try {\r\n  //     if (hasImage) {\r\n  //       // If there's an image, append it to the form data\r\n  //       const imageData = new FormData();\r\n  //       imageData.append(\"image\", file1);\r\n  //       await axios.post(imageUploadUrl, imageData, {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${token}`,\r\n  //         },\r\n  //       });\r\n\r\n  //       // After uploading the image, prepare the JSON payload\r\n  //       const response = await axios.post(mentorAboutUrl, mentorProfile, {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${token}`,\r\n  //           \"Content-Type\": \"application/json\", // Set content type to JSON\r\n  //         },\r\n  //       });\r\n\r\n  //       setAboutLoading(false);\r\n  //       ToasterComponent(\"success\", response.data.statuses);\r\n  //       handleNextStep();\r\n  //       localStorage.setItem(\"status\", \"1\");\r\n  //     }\r\n\r\n  //     else {\r\n  //       // No image, directly submit the mentor profile\r\n  //       const response = await axios.post(mentorAboutUrl, mentorProfile, {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${token}`,\r\n  //           \"Content-Type\": \"application/json\", // Set content type to JSON\r\n  //         },\r\n  //       });\r\n\r\n  //       setAboutLoading(false);\r\n  //       ToasterComponent(\"success\", response.data.statuses);\r\n  //       handleNextStep();\r\n  //       localStorage.setItem(\"status\", \"1\");\r\n  //     }\r\n  //   } catch (error) {\r\n  //     // Error handling\r\n  //     setAboutLoading(false);\r\n  //     handleError(error);\r\n  //   }\r\n  // };\r\n  const postDataAbout = async (data) => {\r\n    console.log(data);\r\n    setAboutLoading(true);\r\n\r\n    // Create the mentor profile object\r\n    const mentorProfile = {\r\n      jobTitle: data.jobTitle,\r\n      company: data.company,\r\n      location: data.location,\r\n      twitterHandle: data.twitterHandle,\r\n      identityStatus: data.identityStatus,\r\n      languages: Array.isArray(data.language) ? data.language : [data.language], // Ensure languages is always an array\r\n    };\r\n\r\n    try {\r\n      // Submit the mentor profile first\r\n      const response = await axios.post(mentorAboutUrl, mentorProfile, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      setAboutLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n\r\n      // Check if an image is available\r\n      const hasImage = file1 !== null && file1.size > 0;\r\n\r\n      if (hasImage) {\r\n        // If there's an image, append it to the form data\r\n        const imageData = new FormData();\r\n        imageData.append(\"image\", file1);\r\n        await axios.post(imageUploadUrl, imageData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n      }\r\n\r\n      // Check if a resume is available\r\n      const hasResume = selectedFile2 !== null && selectedFile2.size > 0;\r\n\r\n      if (hasResume) {\r\n        // If there's a resume, append it to the form data\r\n        const formData = new FormData();\r\n        formData.append(\"resume\", selectedFile2);\r\n        await axios.post(mentorResumeUrl, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n      }\r\n\r\n      localStorage.setItem(\"status\", \"1\");\r\n    } catch (error) {\r\n      // Error handling\r\n      setAboutLoading(false);\r\n      handleError(error);\r\n    }\r\n  };\r\n\r\n  const postDataProfile = async (data) => {\r\n    setProfileLoading(true);\r\n    try {\r\n      const response = await axios.post(mentorProfileUrl, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // setNextStep(true)\r\n      setProfileLoading(false);\r\n      //   console.log(`resres ${response.status}`);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"3\");\r\n    } catch (error) {\r\n      setSkillError(false);\r\n      setProfileLoading(false);\r\n      if (error.response) {\r\n        error.response.data.statuses.forEach((status) => {\r\n          NotificationManager.error(\r\n            status.message,\r\n            \"Oops!\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n          if (status.code === 40110) {\r\n            setSkillErrorMessage(status.message);\r\n            setSkillError(true);\r\n          }\r\n        });\r\n      } else {\r\n        NotificationManager.error(\r\n          \"something went wrong\",\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const postDataExperience = async (data) => {\r\n    setExperienceLoading(true);\r\n    const postDataExp = { ...data, price: amount, experiences: works };\r\n    try {\r\n      const response = await axios.post(experienceUrl, postDataExp, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // setNextStep(true)\r\n      // console.log(response);\r\n      setExperienceLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"7\");\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 3000);\r\n    } catch (error) {\r\n      setExperienceLoading(false);\r\n      if (error.response) {\r\n        error.response.data.statuses.forEach((status) => {\r\n          NotificationManager.error(\r\n            status.message,\r\n            \"Oops!\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n        });\r\n      } else {\r\n        NotificationManager.error(\r\n          \"something went wrong\",\r\n          \"Oops!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSliderChange = (value) => {\r\n    setAmount(value);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   axios.get(mentorAboutUrl).then((response) => {\r\n  //     console.log(\"reslog\", response.data);\r\n  //     // setLoading(false);\r\n  //   });\r\n  // }, [currentStep]);\r\n\r\n  const handleTagsChange = (newSkills) => {\r\n    // setSkillError(false);\r\n    setSkillsTag(newSkills);\r\n  };\r\n  const handleToolsTagsChange = (newTools) => {\r\n    setSkillError(false);\r\n    setToolsTag(newTools);\r\n  };\r\n\r\n  const history = useHistory();\r\n  const handleMySlotsClick = () =>\r\n    history.push(`${adminRoot}/calendar/mentor/appointment`);\r\n\r\n  return (\r\n    <Card className=\"mx-auto my-4 \" style={{ maxWidth: \"900px\" }}>\r\n      <CardBody className=\"wizard wizard-default\">\r\n        <h1 className=\"mt-4 font-weight-bold\">Apply as a Ment</h1>\r\n        <ul className=\"nav nav-tabs justify-content-center\">\r\n          {steps.map((stepItem, index) => (\r\n            // <li key={`topNavStep_${index}`} className={`nav-item ${index === currentStep ? 'step-doing' : ''}`}>\r\n            <li\r\n              // eslint-disable-next-line\r\n              key={`topNavStep_${index}`}\r\n              className={`nav-item ${\r\n                // eslint-disable-next-line\r\n                index === currentStep\r\n                  ? \"step-doing\"\r\n                  : index < currentStep\r\n                  ? \"step-done\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <NavLink to=\"#\" location={{}} className=\"nav-link\">\r\n                <span>{stepItem}</span>\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"wizard-basic-step\">\r\n          {currentStep === 0 && (\r\n            <Formik\r\n              innerRef={forms[0]}\r\n              initialValues={{\r\n                jobTitle: fields.jobTitle,\r\n                company: fields.company,\r\n                location: fields.location,\r\n                // linkedinUrl: fields.linkedinUrl,\r\n                twitterHandle: fields.twitterHandle,\r\n                identityStatus: fields.identityStatus,\r\n              }}\r\n              validateOnMount\r\n              // onSubmit={(values) => {\r\n              //   postDataAbout({ ...values, language: languages })\r\n              // }}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                // if (validateFile(file1)) {\r\n                //   postDataAbout({ ...values, language: languages });\r\n                // } else {\r\n                //   setSubmitting(false);\r\n                // }\r\n                postDataAbout({ ...values, language: languages });\r\n                setSubmitting(false);\r\n              }}\r\n              // onSubmit={async (values, { setSubmitting }) => {\r\n              //   try {\r\n              //     if (validateFile(file1)) {\r\n              //       const response = await postDataAbout({\r\n              //         ...values,\r\n              //         language: languages,\r\n              //       });\r\n              //       if (response.status === 200) {\r\n              //         // Move to the next step\r\n              //         setCurrentStep(1);\r\n              //       }\r\n              //     }\r\n              //   } catch (error) {\r\n              //     // Handle error case if the request fails\r\n              //     console.error(\"Error submitting form:\", error);\r\n              //   } finally {\r\n              //     setSubmitting(false);\r\n              //   }\r\n              // }}\r\n            >\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-right \">\r\n                  <Alert color=\"primary\">\r\n                    <strong>Lovely to see you!</strong>\r\n                    <br /> Filling out the form only takes a couple of minutes.\r\n                    We&apos;d love to learn more about your background and the\r\n                    ins-and-outs of why you&apos;d like to become a mentor. Keep\r\n                    things personal and talk directly to us and your mentees. We\r\n                    don&apos;t need jargon and polished cover letters here!{\" \"}\r\n                    <br />\r\n                    <br />\r\n                    You agree to our code of conduct and the mentor agreement by\r\n                    sending the form, so be sure to have a look at those.\r\n                  </Alert>\r\n                  <FormGroup>\r\n                    <Label for=\"image\">Image</Label>\r\n                    {imageError && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {imageErrorMessage}\r\n                      </div>\r\n                    )}\r\n                    <Row>\r\n                      <Col md={2} className=\"\">\r\n                        <img\r\n                          src={\r\n                            selectedFile || \"/assets/img/profiles/l-1.jpg\"\r\n                            // \"https://gogo-react.coloredstrategies.com/assets/img/profiles/l-1.jpg\"\r\n                          }\r\n                          className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                          style={{\r\n                            width: \"70px\",\r\n                            height: \"70px\",\r\n                            objectFit: \"cover\",\r\n                          }}\r\n                          alt=\"img\"\r\n                        />\r\n                      </Col>\r\n                      <Col md={5} className=\"mt-3 \">\r\n                        <InputGroup className=\"mb-3\">\r\n                          <div className=\"mt-1.5\">\r\n                            <Button\r\n                              className=\"default\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                document.getElementById(\"file-upload\").click()\r\n                              }\r\n                            >\r\n                              Upload profile pic\r\n                              <i className=\"iconsminds-upload \" />\r\n                            </Button>\r\n                            {/* <Form> */}\r\n                            <Input\r\n                              id=\"file-upload\"\r\n                              type=\"file\"\r\n                              className=\"form-control d-none\"\r\n                              onChange={handleFileChange}\r\n                            />\r\n                            {/* {errors.fileUpload && touched.fileUpload && (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.fileUpload}\r\n                              </div>\r\n                            )} */}\r\n                            {/* </Form> */}\r\n                            {file1 && (\r\n                              <p className=\"mt-2\">\r\n                                Selected file: {file1.name}\r\n                              </p>\r\n                            )}\r\n                          </div>\r\n                        </InputGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n\r\n                  <Row>\r\n                    <Col md={6}>\r\n                      <FormGroup className=\"error-l-75\">\r\n                        <Label>Job Title*</Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"jobTitle\"\r\n                          validate={validateJobTitle}\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        {errors.jobTitle && touched.jobTitle && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.jobTitle}\r\n                          </div>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <FormGroup className=\"error-l-75\">\r\n                        <Label>Company*</Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"company\"\r\n                          validate={validateCompany}\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        {errors.company && touched.company && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.company}\r\n                          </div>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md={6}>\r\n                      <FormGroup className=\"error-l-75\">\r\n                        <Label>Country*</Label>\r\n                        <Field\r\n                          as=\"select\"\r\n                          name=\"location\"\r\n                          validate={validateLocation}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option disabled value=\"\">\r\n                            Select Country\r\n                          </option>\r\n                          {country.map((option) => (\r\n                            <option\r\n                              key={option.iso_code}\r\n                              value={option.iso_code}\r\n                            >\r\n                              {option.name}\r\n                            </option>\r\n                          ))}\r\n                        </Field>\r\n                        {errors.location && touched.location && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.location}\r\n                          </div>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <Label>Identity Status*</Label>\r\n                      <Field\r\n                        as=\"select\"\r\n                        name=\"identityStatus\"\r\n                        validate={validateIdentityStatus}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option disabled value=\"\">\r\n                          Select Identity Satus\r\n                        </option>\r\n                        {indentityStatusList.map((option) => (\r\n                          <option key={option.name} value={option.name}>\r\n                            {option.label}\r\n                          </option>\r\n                        ))}\r\n                      </Field>\r\n                      {errors.identityStatus && touched.identityStatus && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.identityStatus}\r\n                        </div>\r\n                      )}\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <FormGroup className=\"error-l-125\">\r\n                    <Row>\r\n                      {/* <Col md={6}>\r\n                        <Label for=\"linkedinUrl\">LinkedIn URL*</Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          name=\"linkedinUrl\"\r\n                          type=\"url\"\r\n                          validate={validateLinkedinUrl}\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        <FormText color=\"muted\" className=\"\">\r\n                          e.g. https://www.linkedin.com/in/username/\r\n                        </FormText>\r\n                        {errors.linkedinUrl && touched.linkedinUrl && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.linkedinUrl}\r\n                          </div>\r\n                        )}\r\n                      </Col> */}\r\n                      <Col md={6}>\r\n                        <Label for=\"twitterHandle\">\r\n                          Twitter Handle (optional)\r\n                        </Label>\r\n                        <Field\r\n                          type=\"text\"\r\n                          name=\"twitterHandle\"\r\n                          id=\"twitterHandle\"\r\n                          className=\"form-control\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        <FormText color=\"muted\" className=\"\">\r\n                          Omit the &ldquo;@&rdquo; -e.g. &ldquo;dqmonn&rdquo;\r\n                        </FormText>\r\n                        {/* {errors.twitterHandle && touched.twitterHandle && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.twitterHandle}\r\n                        </div>\r\n                      )} */}\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Label>CV</Label>\r\n                        {imageError1 && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {imageErrorMessage1}\r\n                          </div>\r\n                        )}\r\n\r\n                        <InputGroup className=\"\">\r\n                          <div className=\"\">\r\n                            <Button\r\n                              className=\"default\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                document\r\n                                  .getElementById(\"file-upload-resume\")\r\n                                  .click()\r\n                              }\r\n                            >\r\n                              Upload Resume{\" \"}\r\n                              <i className=\"iconsminds-upload ml-2\" />\r\n                            </Button>\r\n                            {/* <Form> */}\r\n                            <Input\r\n                              id=\"file-upload-resume\"\r\n                              type=\"file\"\r\n                              className=\"d-none\"\r\n                              onChange={handleFileChangeResume}\r\n                              // validate={validateFile}\r\n                            />\r\n                          </div>\r\n                        </InputGroup>\r\n                        <div className=\"  my-2 \">\r\n                          {/* {selectedFile2 ? selectedFile2.name : \"\"} */}\r\n                          {selectedFile2\r\n                            ? `selected file is ${selectedFile2.name}`\r\n                            : \"\"}\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup className=\"error-l-75\">\r\n                    <Label for=\"languages\">Languages known*</Label>\r\n                    <Select\r\n                      placeholder=\"Select Languages\"\r\n                      name=\"languages\"\r\n                      isMulti\r\n                      options={languageOptions}\r\n                      // validate={validateLanguages}\r\n                      className=\"react-select\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(selectedOptions) => {\r\n                        const languagesArray = selectedOptions\r\n                          ? selectedOptions.map((option) => option.value)\r\n                          : [];\r\n                        setLanguages(languagesArray);\r\n                      }}\r\n                    >\r\n                      {/* <option disabled value=\"\">\r\n                              Select Languages\r\n                            </option>\r\n                          {language.map((option) => (\r\n                            <option key={option.iso_code} value={option.iso_code}>\r\n                              {option.name}\r\n                            </option>\r\n                          ))} */}\r\n                    </Select>\r\n                    {/* {errors.languages && touched.languages && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.languages}\r\n                          </div>\r\n                        )} */}\r\n                  </FormGroup>\r\n                  <Row>\r\n                    <Col className=\"text-center\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          aboutLoading ? \"show-spinner\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">Next</span>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          )}\r\n          {currentStep === 1 && (\r\n            <Formik\r\n              innerRef={forms[1]}\r\n              initialValues={{\r\n                category: fields.category,\r\n                skills: fields.skills,\r\n                bio: fields.bio,\r\n                // linkedinUrl: fields.linkedinUrl,\r\n                // twitterHandle: fields.twitterHandle,\r\n                website: fields.website,\r\n              }}\r\n              onSubmit={(values) => {\r\n                const profileData = {\r\n                  ...values,\r\n                  skills: skillsTag,\r\n                  tools: toolsTag,\r\n                };\r\n                postDataProfile(profileData);\r\n              }}\r\n              validateOnMount\r\n            >\r\n              {({\r\n                errors,\r\n                touched,\r\n                // values,\r\n                // setFieldValue,\r\n                // setFieldTouched,\r\n              }) => (\r\n                <Form className=\"av-tooltip tooltip-label-right\">\r\n                  <FormGroup className=\"error-l-75\">\r\n                    <Label>Category*</Label>\r\n                    <Field\r\n                      as=\"select\"\r\n                      name=\"category\"\r\n                      validate={validateCategory}\r\n                      className=\"form-control\"\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select Category\r\n                      </option>\r\n                      {CategoryData.map((option) => (\r\n                        <option key={option.short} value={option.short}>\r\n                          {option.name}\r\n                        </option>\r\n                      ))}\r\n                    </Field>\r\n                    {errors.category && touched.category && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.category}\r\n                      </div>\r\n                    )}\r\n                  </FormGroup>\r\n\r\n                  <FormGroup>\r\n                    <Label for=\"skills\">Skills*</Label>\r\n                    <TagsInput\r\n                      value={skillsTag}\r\n                      onChange={handleTagsChange}\r\n                      inputProps={{ placeholder: \"Add skills \" }}\r\n                      addOnBlur\r\n                      addKeys={[13, 188]}\r\n                    />\r\n                    {skillError && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {skillErrorMessage}\r\n                      </div>\r\n                    )}\r\n                    <FormText>Add skill and press Enter or comma </FormText>\r\n                    <FormText color=\"muted\">\r\n                      Describe your expertise to connect with mentees who have\r\n                      similar interests.\r\n                      <br />\r\n                      Comma-separated list of your skills (keep it below 10).\r\n                      Mentees will use this to find you.\r\n                    </FormText>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"tools\">Tools*</Label>\r\n                    <TagsInput\r\n                      value={toolsTag}\r\n                      onChange={handleToolsTagsChange}\r\n                      inputProps={{ placeholder: \"Add Tools \" }}\r\n                      addOnBlur\r\n                      addKeys={[13, 188]}\r\n                    />\r\n                    {skillError && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {/* {skillErrorMessage} */}\r\n                        Required\r\n                      </div>\r\n                    )}\r\n                    <FormText>Add Tools and press Enter or Comma </FormText>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup>\r\n                    <Label for=\"bio\">Bio*</Label>\r\n                    <Field\r\n                      as=\"textarea\"\r\n                      name=\"bio\"\r\n                      id=\"bio\"\r\n                      className=\"form-control\"\r\n                      validate={validateBio}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {errors.bio && touched.bio && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.bio}\r\n                      </div>\r\n                    )}\r\n                    <FormText color=\"muted\">\r\n                      Tell us (and your mentees) a little bit about yourself.\r\n                      Talk about yourself in the first person, as if you&apos;d\r\n                      directly talk to a mentee. This will be public.\r\n                    </FormText>\r\n                  </FormGroup>\r\n                  {/* <FormGroup className=\"error-l-125\">\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Label for=\"linkedinUrl\">LinkedIn URL*</Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          name=\"linkedinUrl\"\r\n                          type=\"url\"\r\n                          // validate={validateLinkedinUrl}\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        {errors.linkedinUrl && touched.linkedinUrl && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.linkedinUrl}\r\n                          </div>\r\n                        )}\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Label for=\"twitterHandle\">\r\n                          Twitter Handle (optional)\r\n                        </Label>\r\n                        <Field\r\n                          type=\"text\"\r\n                          name=\"twitterHandle\"\r\n                          id=\"twitterHandle\"\r\n                          className=\"form-control\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        <FormText color=\"muted\">\r\n                          Omit the &ldquo;@&rdquo; -e.g. &ldquo;dqmonn&rdquo;\r\n                        </FormText>\r\n                        {errors.twitterHandle && touched.twitterHandle && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.twitterHandle}\r\n                        </div>\r\n                      )}\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup> */}\r\n                  <FormGroup>\r\n                    <Label for=\"website\">Personal Website (optional)</Label>\r\n                    <Field\r\n                      type=\"url\"\r\n                      name=\"website\"\r\n                      id=\"website\"\r\n                      className=\"form-control\"\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    <FormText color=\"muted\">\r\n                      You can add your blog, GitHub profile or similar here\r\n                    </FormText>\r\n                    {/* {errors.website && touched.website && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.website}\r\n                    </div>\r\n                  )} */}\r\n                  </FormGroup>\r\n                  <Row>\r\n                    {\" \"}\r\n                    <Col>\r\n                      {\" \"}\r\n                      <Button color=\"primary\" onClick={handlePrevStep}>\r\n                        Previous\r\n                      </Button>\r\n                    </Col>\r\n                    <Col className=\"text-right\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          profileLoading ? \"show-spinner\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">Next</span>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          )}\r\n          {currentStep === 2 && (\r\n            <Formik\r\n              innerRef={forms[2]}\r\n              initialValues={{\r\n                introVideo: fields.introVideo,\r\n                featuredArticle: fields.featuredArticle,\r\n                reasonForMentor: fields.reasonForMentor,\r\n                achievement: fields.achievement,\r\n                experiences: works,\r\n              }}\r\n              onSubmit={(values) => {\r\n                postDataExperience(values);\r\n              }}\r\n              validateOnMount\r\n            >\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-right\">\r\n                  <Alert color=\"primary\">\r\n                    <strong>Almost there!</strong> <br /> You&apos;re just one\r\n                    last step away from being a mentor and connecting with\r\n                    mentees all over the world! in this step, shows off your\r\n                    accomplishments and how you can help others.\r\n                    <br />\r\n                    <br /> Many of these fields are optional, but will help us\r\n                    get better insights into your work - and therefore\r\n                    exponentially increase your chances. They also give you a\r\n                    jumpstart once you&apos;re a mentor.\r\n                  </Alert>\r\n                  {/* <FormGroup>\r\n                    <Row>\r\n                      <Col md={12}>\r\n                        <FormGroup className=\"error-l-75\">\r\n                          <Label>6 month price*</Label>\r\n\r\n                          <SliderTooltip\r\n                            min={2000}\r\n                            max={100000}\r\n                            defaultValue={500}\r\n                            className=\"mb-5\"\r\n                            step={500}\r\n                            value={amount}\r\n                            onChange={handleSliderChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md={12}>\r\n                        <FormGroup className=\"error-l-75\">\r\n                          <Label>3 month price*</Label>\r\n\r\n                          <SliderTooltip\r\n                            min={1000}\r\n                            max={100000}\r\n                            defaultValue={500}\r\n                            className=\"mb-5\"\r\n                            step={500}\r\n                            value={amount}\r\n                            onChange={handleSliderChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup> */}\r\n                  {works.map((work, index) => {\r\n                    return (\r\n                      <div key={work}>\r\n                        <Row>\r\n                          <Col md={6}>\r\n                            <FormGroup className=\"error-l-75\">\r\n                              <Label>Company Name*</Label>\r\n                              <Input\r\n                                className=\"form-control\"\r\n                                required\r\n                                name={`experiences[${index}].company`}\r\n                                value={work.company}\r\n                                onChange={(e) =>\r\n                                  handleWorkInputChange(\r\n                                    index,\r\n                                    \"company\",\r\n                                    e.target.value\r\n                                  )\r\n                                }\r\n                              />\r\n                              {errors.experiences?.[index]?.jobTitle &&\r\n                                touched.experiences?.[index]?.jobTitle && (\r\n                                  <div className=\"invalid-feedback d-block\">\r\n                                    {errors.experiences[index].company}\r\n                                  </div>\r\n                                )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={6}>\r\n                            <FormGroup>\r\n                              <Label for={`experiences[${index}].jobTitle`}>\r\n                                Job title*\r\n                              </Label>\r\n                              <Input\r\n                                name={`experiences[${index}].jobTitle`}\r\n                                id={`experiences[${index}].jobTitle`}\r\n                                required\r\n                                className=\"form-control\"\r\n                                value={work.jobTitle}\r\n                                onChange={(e) =>\r\n                                  handleWorkInputChange(\r\n                                    index,\r\n                                    \"jobTitle\",\r\n                                    e.target.value\r\n                                  )\r\n                                }\r\n                              />\r\n                              {errors.experiences?.[index]?.jobTitle &&\r\n                                touched.experiences?.[index]?.jobTitle && (\r\n                                  <div className=\"invalid-feedback d-block\">\r\n                                    {errors.experiences[index].jobTitle}\r\n                                  </div>\r\n                                )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col md={6}>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for={`experiences[${index}].employmentType`}\r\n                              >\r\n                                Employment type*\r\n                              </Label>\r\n                              <Input\r\n                                type=\"select\"\r\n                                name={`experiences[${index}].employmentType`}\r\n                                id={`experiences[${index}].employmentType`}\r\n                                className=\"form-control\"\r\n                                value={work.employmentType}\r\n                                required\r\n                                onChange={(e) =>\r\n                                  handleWorkInputChange(\r\n                                    index,\r\n                                    \"employmentType\",\r\n                                    e.target.value\r\n                                  )\r\n                                }\r\n                              >\r\n                                <option key=\"\" value=\"\" disabled>\r\n                                  Select Employment type\r\n                                </option>\r\n                                {EmploymentTypeData.map((option, i) => (\r\n                                  // eslint-disable-next-line react/no-array-index-key\r\n                                  <option key={i} value={option.label}>\r\n                                    {option.label}\r\n                                  </option>\r\n                                ))}\r\n                              </Input>\r\n\r\n                              {errors.experiences?.[index]?.employmentType &&\r\n                                touched.experiences?.[index]\r\n                                  ?.employmentType && (\r\n                                  <div className=\"invalid-feedback d-block\">\r\n                                    {errors.experiences[index].employmentType}\r\n                                  </div>\r\n                                )}\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={6}>\r\n                            <FormGroup>\r\n                              <Label for={`experiences[${index}].jobLocation`}>\r\n                                Job location*\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name={`experiences[${index}].jobLocation`}\r\n                                id={`experiences[${index}].jobLocation`}\r\n                                className=\"form-control\"\r\n                                required\r\n                                value={work.jobLocation}\r\n                                onChange={(e) =>\r\n                                  handleWorkInputChange(\r\n                                    index,\r\n                                    \"jobLocation\",\r\n                                    e.target.value\r\n                                  )\r\n                                }\r\n                                // validate={validatePackageDescription}\r\n                              />\r\n                              {errors.experiences?.[index]?.jobLocation &&\r\n                                touched.experiences?.[index]?.jobLocation && (\r\n                                  <div className=\"invalid-feedback d-block\">\r\n                                    {errors.experiences[index].jobLocation}\r\n                                  </div>\r\n                                )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <FormGroup>\r\n                              <Label for={`experiences[${index}].startDate`}>\r\n                                Start year*\r\n                              </Label>\r\n\r\n                              <Input\r\n                                type=\"select\"\r\n                                name={`experiences[${index}].startYear`}\r\n                                id={`experiences[${index}].startYear`}\r\n                                className=\"form-control\"\r\n                                value={work.startYear}\r\n                                required\r\n                                onChange={(e) =>\r\n                                  handleWorkInputChange(\r\n                                    index,\r\n                                    \"startYear\",\r\n                                    parseInt(e.target.value, 10)\r\n                                  )\r\n                                }\r\n                              >\r\n                                <option disabled value=\"\">\r\n                                  Select year\r\n                                </option>\r\n                                {years.map((yr) => (\r\n                                  <option key={yr} value={yr}>\r\n                                    {yr}\r\n                                  </option>\r\n                                ))}\r\n                              </Input>\r\n\r\n                              {errors.experiences?.[index]?.startYear &&\r\n                                touched.experiences?.[index]?.startYear && (\r\n                                  <div className=\"invalid-feedback d-block\">\r\n                                    {errors.experiences[index].startYear}\r\n                                  </div>\r\n                                )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col>\r\n                            <FormGroup>\r\n                              <Label for={`experiences[${index}].endYear`}>\r\n                                End year*\r\n                              </Label>\r\n                              <Input\r\n                                type=\"select\"\r\n                                name={`experiences[${index}].endYear`}\r\n                                id={`experiences[${index}].endYear`}\r\n                                className=\"form-control\"\r\n                                value={work.endYear}\r\n                                required\r\n                                onChange={(e) =>\r\n                                  handleWorkInputChange(\r\n                                    index,\r\n                                    \"endYear\",\r\n                                    parseInt(e.target.value, 10)\r\n                                  )\r\n                                }\r\n                                // validate={validatePackageDescription}\r\n                              >\r\n                                <option disabled value=\"\">\r\n                                  Select year\r\n                                </option>\r\n                                {years.map((yr) => (\r\n                                  <option key={yr} value={yr}>\r\n                                    {currentYear === yr ? \"Present\" : yr}\r\n                                  </option>\r\n                                ))}\r\n                              </Input>\r\n                              {errors.experiences?.[index]?.endYear &&\r\n                                touched.experiences?.[index]?.endYear && (\r\n                                  <div className=\"invalid-feedback d-block\">\r\n                                    {errors.experiences[index].endYear}\r\n                                  </div>\r\n                                )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col md={12}>\r\n                            <Card\r\n                              onClick={addWorkExperience}\r\n                              className=\"p-3 text-center my-5\"\r\n                              style={{ cursor: \"pointer\" }}\r\n                            >\r\n                              <h3 className=\"font-weight-bold text-primary\">\r\n                                + Add more work experience\r\n                              </h3>\r\n                            </Card>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    );\r\n                  })}\r\n\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md={12}>\r\n                        <FormGroup className=\"error-l-75\">\r\n                          <Label>Amount*</Label>\r\n\r\n                          <SliderTooltip\r\n                            min={500}\r\n                            max={100000}\r\n                            defaultValue={500}\r\n                            className=\"mb-5\"\r\n                            step={500}\r\n                            value={amount}\r\n                            onChange={handleSliderChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Label for=\"introVideo\">Intro Video (Optional)</Label>\r\n                        <Field\r\n                          type=\"url\"\r\n                          name=\"introVideo\"\r\n                          id=\"introVideo\"\r\n                          className=\"form-control\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        <FormText color=\"muted\">\r\n                          Add a youTube video or record a Loom for your future\r\n                          mentees\r\n                        </FormText>\r\n                        {/* {errors.introvideo && touched.introvideo && (\r\n                    <div className=\"invalid-feedback d-block\">\r\n                      {errors.introvideo}\r\n                    </div>\r\n                    )} */}\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Label for=\"featuredArticle\">\r\n                          Featured Article (Optional)\r\n                        </Label>\r\n                        <Field\r\n                          type=\"url\"\r\n                          name=\"featuredArticle\"\r\n                          id=\"featuredArticle\"\r\n                          className=\"form-control\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        <FormText color=\"muted\">\r\n                          Link an interview / podcast / piece of writing you are\r\n                          proud of or were featured in.\r\n                        </FormText>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Why do you want to become a mentor?(Not publicly visible)*\r\n                    </Label>\r\n                    <Field\r\n                      as=\"textarea\"\r\n                      name=\"reasonForMentor\"\r\n                      id=\"reasonForMentor\"\r\n                      className=\"form-control\"\r\n                      validate={validateReasonForMentor}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {errors.reasonForMentor && touched.reasonForMentor && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.reasonForMentor}\r\n                      </div>\r\n                    )}\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label>\r\n                      What, in your opinion, has been your greatest achievement\r\n                      so far?(Not publicly visible)*\r\n                    </Label>\r\n                    <Field\r\n                      as=\"textarea\"\r\n                      name=\"achievement\"\r\n                      id=\"achievement\"\r\n                      className=\"form-control\"\r\n                      validate={validateAchievement}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {errors.achievement && touched.achievement && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.achievement}\r\n                      </div>\r\n                    )}\r\n                  </FormGroup>\r\n                  <Row>\r\n                    {\" \"}\r\n                    <Col>\r\n                      {\" \"}\r\n                      <Button color=\"primary\" onClick={handlePrevStep}>\r\n                        Previous\r\n                      </Button>\r\n                    </Col>\r\n                    <Col className=\"text-right\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          experienceLoading ? \"show-spinner\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">Submit</span>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          )}\r\n          {loading ? (\r\n            <div className=\"wizard-basic-step text-center pt-3\">\r\n              <Spinner color=\"primary\" className=\"mb-1\" />\r\n              <p>Submitting</p>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {currentStep === 3 && (\r\n                <Row>\r\n                  <Colxx xxs=\"12\" className=\"mb-4\">\r\n                    <Card>\r\n                      <CardBody className=\"text-center\">\r\n                        <i\r\n                          alt=\"\"\r\n                          className=\"glyph-icon iconsminds-yes text-success\"\r\n                          style={{ fontSize: \"75px\" }}\r\n                        />\r\n                        <Jumbotron className=\"text-center\">\r\n                          <h1 className=\"display-4\">Submitted Successfully!</h1>\r\n                          <p className=\"lead\">We will reach you shortly</p>\r\n                          <hr className=\"my-4\" />\r\n                          <p className=\"lead mb-0\">\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"lg\"\r\n                              onClick={() => handleMySlotsClick()}\r\n                            >\r\n                              My slots\r\n                            </Button>\r\n                          </p>\r\n                        </Jumbotron>\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Colxx>\r\n                </Row>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default injectIntl(ApplyMentor);\r\n","const validateFirstName = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter your first name\";\r\n  } else if (!/^[a-zA-Z]+$/.test(value)) {\r\n    error = \"Only alphabets are allowed\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n\r\n  return error;\r\n};\r\nfunction validateIdentityStatus(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a identity status\";\r\n  }\r\n  return error;\r\n}\r\n\r\nconst validateLastName = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter your first name\";\r\n  } else if (!/^[a-zA-Z]+$/.test(value)) {\r\n    error = \"Only alphabets are allowed\";\r\n  } else if (value.length < 1) {\r\n    error = \"Must be longer than 1 characters\";\r\n  }\r\n\r\n  return error;\r\n};\r\n\r\nconst validateEmail = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter your email address\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n    error = \"Invalid email address\";\r\n  }\r\n  return error;\r\n};\r\n\r\nconst validatePassword = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please choose a password\";\r\n  } else if (value.length < 6) {\r\n    error = \"Password must be longer than 6 characters\";\r\n  }\r\n  return error;\r\n};\r\nfunction validateCategory(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a category\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateLanguages(value) {\r\n  // let error;\r\n  // if (!value || value.length === 0) {\r\n  //    error = \"Please specify a languages\";\r\n  // } else if (value.some(tag => tag.length < 2)) {\r\n  //    error = \"Each language must be longer than 2 characters\";\r\n  // }\r\n  // return error;\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a languages\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateLocation(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please select a location\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateCompany(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please provide the company name\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateJobTitle(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please enter a job title\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\n// function validateSkills(value) {\r\n//   let error;\r\n//   if (!value) {\r\n//     error = \"Please specify a skill\";\r\n//   } else if (value.length < 2) {\r\n//       error = \"Must be longer than 2 characters\";\r\n//     }\r\n//   return error;\r\n// }\r\nfunction validateSkills(value) {\r\n  let error;\r\n  if (!value || value.length === 0) {\r\n    error = \"Please specify a skill\";\r\n  } else if (value.some((tag) => tag.length < 2)) {\r\n    error = \"Each skill must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateTopics(value) {\r\n  let error;\r\n  if (!value || value.length === 0) {\r\n    error = \"Please specify a topic\";\r\n  } else if (value.some((tag) => tag.length < 2)) {\r\n    error = \"Each topic must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateBio(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please provide a bio\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validatePackageTopic(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please provide a topic\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateAbout(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please provide a about\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\nfunction validatePackageDescription(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Please provide a service descripiton\";\r\n  } else if (value.length < 2) {\r\n    error = \"Must be longer than 2 characters\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateLinkedinUrl(value) {\r\n  let error;\r\n\r\n  if (!value) {\r\n    error = \"Please provide your LinkedIn URL\";\r\n  } else if (\r\n    !/^https?:\\/\\/(?:www\\.)?linkedin\\.com\\/(?:[a-z]{2,3}\\.)?in\\/[a-zA-Z0-9_-]+\\/?$/i.test(\r\n      value\r\n    )\r\n  ) {\r\n    error = \"Invalid LinkedIn URL format\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateReasonForMentor(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateAchievement(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\n\r\n// function validateFile(value) {\r\n//   let error;\r\n//   if (!value) {\r\n//     error = \"This field is required.\";\r\n//   }\r\n//   //  else if (![\"image/jpeg\", \"image/png\"].includes(file.type)) {\r\n//   //   error = \"Unsupported file type. Only JPEG and PNG images are allowed\";\r\n//   // }\r\n//   return error;\r\n// }\r\nfunction validateFile(value) {\r\n  let error;\r\n\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  } else {\r\n    const fileType = value.type;\r\n    if (![\"image/jpeg\", \"image/png\"].includes(fileType)) {\r\n      error = \"Unsupported file type. Only JPEG and PNG images are allowed\";\r\n    }\r\n  }\r\n\r\n  return error;\r\n}\r\nfunction validatePackageTitle(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\nfunction validatePackageAmount(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateServiceName(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\nfunction validateServiceDescription(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = \"This field is required.\";\r\n  }\r\n  return error;\r\n}\r\nexport {\r\n  validateAbout,\r\n  validateAchievement,\r\n  validateBio,\r\n  validateCategory,\r\n  validateCompany,\r\n  validateEmail,\r\n  validateFile,\r\n  validateFirstName,\r\n  validateIdentityStatus,\r\n  validateJobTitle,\r\n  validateLanguages,\r\n  validateLastName,\r\n  validateLinkedinUrl,\r\n  validateLocation,\r\n  validatePackageAmount,\r\n  validatePackageDescription,\r\n  validatePackageTitle,\r\n  validatePackageTopic,\r\n  validatePassword,\r\n  validateReasonForMentor,\r\n  validateServiceDescription,\r\n  validateServiceName,\r\n  validateSkills,\r\n  validateTopics,\r\n};\r\n","/* eslint-disable no-param-reassign */\r\n\r\nimport axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { SliderTooltip } from \"components/common/SliderTooltips\";\r\nimport { adminRoot, baseUrl } from \"constants/defaultValues\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { createRef, useEffect, useState } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  InputGroup,\r\n  Jumbotron,\r\n  Label,\r\n  NavLink,\r\n  Row,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport {\r\n  validateAbout,\r\n  validateBio,\r\n  validateIdentityStatus,\r\n  validateLocation,\r\n  validatePackageDescription,\r\n  validatePackageTopic,\r\n  validateServiceName,\r\n} from \"./ValidationsPart\";\r\n\r\nimport indentityStatusList from \"../CommonCardList/IdentityStatusList\";\r\nimport country from \"../my-login/Country\";\r\nimport language from \"../my-login/Languages\";\r\nimport ToasterComponent from \"../notifications/ToasterComponent\";\r\n\r\nconst ApplyAsLawyer = () => {\r\n  const forms = [createRef(null), createRef(null), createRef(null)];\r\n  const steps = [\"About you\", \"profile\", \"Services\"];\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [file1, setFile1] = useState(null);\r\n  const [topicsTag, setTopicsTag] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [AboutLoading, setAboutLoading] = useState(false);\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n  const [servicesLoading, setServicesLoading] = useState(false);\r\n  const [topicsInputValue, setTopicsInputValue] = useState(\"\");\r\n\r\n  const [aboutField, setAboutField] = useState({\r\n    image: \"\",\r\n  });\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  useEffect(() => {\r\n    const status = localStorage.getItem(\"status\");\r\n    console.log(\"status\", status);\r\n    if (status) {\r\n      if (status === \"0\") {\r\n        setCurrentStep(0);\r\n      } else if (status === \"1\") {\r\n        setCurrentStep(1);\r\n      } else if (status === \"3\") {\r\n        setCurrentStep(2);\r\n      } else if (status === \"7\") {\r\n        setCurrentStep(3);\r\n      } else {\r\n        setCurrentStep(0);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const [fields] = useState({\r\n    image: \"\",\r\n    headline: \"\",\r\n    topics: [],\r\n    serviceName: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    location: \"\",\r\n    bio: \"\",\r\n    languages: [],\r\n    about: \"\",\r\n    identityStatus: \"\",\r\n  });\r\n\r\n  // file upload validation\r\n\r\n  const [imageError, setImageError] = useState(false);\r\n  const [imageErrorMessage, setImageErrorMessage] = useState(null);\r\n  const [imageError1, setImageError1] = useState(false);\r\n  const [imageErrorMessage1, setImageErrorMessage1] = useState(null);\r\n\r\n  const validateFile = (file) => {\r\n    // const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\r\n    const maxSize = 2 * 1024 * 1024; // 5MB\r\n    if (!file) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"A profile picture is required\");\r\n      return false;\r\n    }\r\n    // if (!allowedTypes.includes(file.type)) {\r\n    //   setImageError(true);\r\n    //   setImageErrorMessage(\r\n    //     \"Please upload a valid image file (JPEG, PNG, or GIF)\"\r\n    //   );\r\n    //   return false;\r\n    // }\r\n    if (file.size > maxSize) {\r\n      setImageError(true);\r\n      setImageErrorMessage(\"File size must be less than 2MB\");\r\n      return false;\r\n    }\r\n\r\n    setImageError(false);\r\n    setImageErrorMessage(\"\");\r\n    return true;\r\n  };\r\n  // file upload validation end\r\n\r\n  const languageOptions = language.map((option) => ({\r\n    value: option.iso_code,\r\n    label: option.name,\r\n  }));\r\n\r\n  const handleNextStep = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setFile1(file);\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        const base64Image = reader.result;\r\n        setSelectedFile(base64Image);\r\n        setAboutField({ ...aboutField, image: base64Image });\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  const [services, setServices] = useState([\r\n    { serviceName: \"\", headline: \"\", description: \"\", amount: 1000 },\r\n  ]);\r\n\r\n  const addService = () => {\r\n    setServices([\r\n      ...services,\r\n      { serviceName: \"\", headline: \"\", description: \"\", amount: 1000 },\r\n    ]);\r\n  };\r\n\r\n  const [selectedFile2, setSelectedFile2] = useState(null);\r\n\r\n  // Handle file change\r\n  // const handleFileChange2 = (event) => {\r\n  //   const file = event.target.files[0];\r\n  //   setSelectedFile2(file);\r\n  // };\r\n  const handleFileChange2 = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    if (!file) return; // No file selected\r\n\r\n    if (!(file.type === \"application/pdf\")) {\r\n      // alert(\"Please select a valid PDF file.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"Please upload a PDF file.\");\r\n      return;\r\n    }\r\n\r\n    const fileSizeMB = file.size / (1024 * 1024); // Convert bytes to MB\r\n\r\n    if (fileSizeMB > 2) {\r\n      // alert(\"File size exceeds 2MB limit.\");\r\n      setImageError1(true);\r\n      setImageErrorMessage1(\"File size must be less than  2MB\");\r\n\r\n      return;\r\n    }\r\n\r\n    setSelectedFile2(file);\r\n    setImageError1(false);\r\n    setImageErrorMessage1(\"\");\r\n  };\r\n\r\n  const lawyerAboutUrl = `${baseUrl}/api/lawyer/about`;\r\n  const lawyerProfileUrl = `${baseUrl}/api/lawyer/profile`;\r\n  const packageUrl = `${baseUrl}/api/lawyer/services`;\r\n  const lawyerImagePostUrl = `${baseUrl}/api/lawyer/lawyer-profile-images`;\r\n  const lawyerResumePostUrl = ` ${baseUrl}/api/resume?role=LAWYER`;\r\n\r\n  function getTokenRes() {\r\n    return localStorage.getItem(\"tokenRes\");\r\n  }\r\n  const token = getTokenRes();\r\n\r\n  const postImageData = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", file1);\r\n\r\n      await axios.post(lawyerImagePostUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // console.log(`resres ${response.status}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const postResumeData = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"resume\", selectedFile2);\r\n\r\n      await axios.post(lawyerResumePostUrl, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // console.log(`resres ${response.status}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const postDataAbout = async (data) => {\r\n    setAboutLoading(true);\r\n    try {\r\n      const response = await axios.post(lawyerAboutUrl, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setAboutLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"1\");\r\n      // console.log(`resres ${response.status}`);\r\n    } catch (error) {\r\n      setAboutLoading(false);\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      }\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const postDataProfile = async (data) => {\r\n    setProfileLoading(true);\r\n    try {\r\n      const response = await axios.post(lawyerProfileUrl, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setProfileLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"3\");\r\n      // console.log(`resres ${response.status}`);\r\n    } catch (error) {\r\n      setProfileLoading(false);\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      }\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleTopicsTagsChange = (newTopics) => {\r\n    setTopicsTag(newTopics);\r\n  };\r\n\r\n  const handleTopicsChangeInput = (value) => {\r\n    if (value.endsWith(\",\")) {\r\n      const newTag = value.slice(0, -1).trim();\r\n      if (newTag && !topicsTag.includes(newTag)) {\r\n        setTopicsTag([...topicsTag, newTag]);\r\n      }\r\n      setTopicsInputValue(\"\");\r\n    } else {\r\n      setTopicsInputValue(value);\r\n    }\r\n  };\r\n\r\n  const handleAddTopicsTag = () => {\r\n    if (\r\n      topicsInputValue.trim() &&\r\n      !topicsTag.includes(topicsInputValue.trim())\r\n    ) {\r\n      setTopicsTag([...topicsTag, topicsInputValue.trim()]);\r\n      setTopicsInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  const removeService = (index) => {\r\n    const newServices = [...services];\r\n    newServices.splice(index, 1);\r\n    setServices(newServices);\r\n  };\r\n\r\n  const handleInputChange = (index, field, value) => {\r\n    setServices((prevServices) =>\r\n      prevServices.map((service, i) =>\r\n        i === index ? { ...service, [field]: value } : service\r\n      )\r\n    );\r\n  };\r\n  const postServices = async (services1) => {\r\n    setServicesLoading(true);\r\n    try {\r\n      const response = await axios.post(packageUrl, services1, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setServicesLoading(false);\r\n      ToasterComponent(\"success\", response.data.statuses);\r\n      handleNextStep();\r\n      localStorage.setItem(\"status\", \"7\");\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 3000);\r\n      // console.log(response.data);\r\n    } catch (error) {\r\n      setServicesLoading(false);\r\n      if (error.response) {\r\n        ToasterComponent(\"error\", error.response.data.statuses);\r\n      }\r\n      console.error(error);\r\n    }\r\n  };\r\n  const history = useHistory();\r\n\r\n  const handleJobsListClick = () => history.push(`${adminRoot}/jobslist`);\r\n  //   const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n  return (\r\n    <Card className=\"mx-auto my-4 \" style={{ maxWidth: \"900px\" }}>\r\n      <CardBody className=\"wizard wizard-default\">\r\n        <h1 className=\"mt-4 font-weight-bold\">Apply as a Lawyer</h1>\r\n        <ul className=\"nav nav-tabs justify-content-center\">\r\n          {steps.map((stepItem, index) => (\r\n            // <li key={`topNavStep_${index}`} className={`nav-item ${index === currentStep ? 'step-doing' : ''}`}>\r\n            <li\r\n              // eslint-disable-next-line\r\n              key={`topNavStep_${index}`}\r\n              className={`nav-item ${\r\n                // eslint-disable-next-line\r\n                index === currentStep\r\n                  ? \"step-doing\"\r\n                  : index < currentStep\r\n                  ? \"step-done\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <NavLink to=\"#\" location={{}} className=\"nav-link\">\r\n                <span>{stepItem}</span>\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"wizard-basic-step\">\r\n          {currentStep === 0 && (\r\n            <Formik\r\n              innerRef={forms[0]}\r\n              initialValues={{\r\n                // firstName: fields.firstName,\r\n                // lastName: fields.lastName,\r\n                location: fields.location,\r\n                languages: fields.languages,\r\n                identityStatus: fields.identityStatus,\r\n              }}\r\n              validateOnMount\r\n              onSubmit={(values) => {\r\n                if (validateFile(file1)) {\r\n                  postDataAbout(values);\r\n                  postImageData();\r\n                  postResumeData();\r\n                }\r\n\r\n                // console.log(aboutField.image);\r\n              }}\r\n            >\r\n              {({ setFieldValue, errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-right \">\r\n                  <Alert color=\"primary\">\r\n                    <strong>Lovely to see you!</strong>\r\n                    <br /> Filling out the form only takes a couple of minutes.\r\n                    We&apos;d love to learn more about your background and the\r\n                    ins-and-outs of why you&apos;d like to become a mentor. Keep\r\n                    things personal and talk directly to us and your mentees. We\r\n                    don&apos;t need jargon and polished cover letters here!{\" \"}\r\n                    <br />\r\n                    <br />\r\n                    You agree to our code of conduct and the mentor agreement by\r\n                    sending the form, so be sure to have a look at those.\r\n                  </Alert>\r\n\r\n                  <FormGroup>\r\n                    <Label for=\"image\">Image</Label>\r\n                    {imageError && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {imageErrorMessage}\r\n                      </div>\r\n                    )}\r\n                    <Row>\r\n                      <Col md={2} className=\"\">\r\n                        <img\r\n                          src={\r\n                            selectedFile || \"/assets/img/profiles/l-1.jpg\"\r\n                            // \"https://gogo-react.coloredstrategies.com/assets/img/profiles/l-1.jpg\"\r\n                          }\r\n                          className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                          style={{\r\n                            width: \"70px\",\r\n                            height: \"70px\",\r\n                            objectFit: \"cover\",\r\n                          }}\r\n                          alt=\"img\"\r\n                        />\r\n                      </Col>\r\n                      <Col md={5} className=\"mt-3 \">\r\n                        <InputGroup className=\"mb-3\">\r\n                          {errors.image && touched.image && (\r\n                            <div className=\"invalid-feedback d-block\">\r\n                              {errors.image}\r\n                            </div>\r\n                          )}\r\n                          <div className=\"mt-1.5\">\r\n                            <Button\r\n                              className=\"default\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                document.getElementById(\"file-upload\").click()\r\n                              }\r\n                            >\r\n                              Upload profile pic{\" \"}\r\n                              <i className=\"iconsminds-upload \" />\r\n                            </Button>\r\n                            {/* <Form> */}\r\n                            <Input\r\n                              id=\"file-upload\"\r\n                              type=\"file\"\r\n                              className=\"form-control d-none\"\r\n                              onChange={handleFileChange}\r\n                              validate={validateFile}\r\n                            />\r\n                            {/* </Form> */}\r\n                            {file1 && (\r\n                              <p className=\"mt-2\">\r\n                                Selected file: {file1.name}\r\n                              </p>\r\n                            )}\r\n                            {errors.image && touched.image && (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.image}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </InputGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup className=\"error-l-75\">\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Label>Location*</Label>\r\n                        <Field\r\n                          as=\"select\"\r\n                          name=\"location\"\r\n                          validate={validateLocation}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option disabled value=\"\">\r\n                            Select Location\r\n                          </option>\r\n                          {country.map((option) => (\r\n                            <option\r\n                              key={option.iso_code}\r\n                              value={option.iso_code}\r\n                            >\r\n                              {option.name}\r\n                            </option>\r\n                          ))}\r\n                        </Field>\r\n                        {errors.location && touched.location && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.location}\r\n                          </div>\r\n                        )}\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Label>Identity Status*</Label>\r\n                        <Field\r\n                          as=\"select\"\r\n                          name=\"identityStatus\"\r\n                          validate={validateIdentityStatus}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option disabled value=\"\">\r\n                            Select Identity Satus\r\n                          </option>\r\n                          {indentityStatusList.map((option) => (\r\n                            <option key={option.name} value={option.name}>\r\n                              {option.label}\r\n                            </option>\r\n                          ))}\r\n                        </Field>\r\n                        {errors.identityStatus && touched.identityStatus && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.identityStatus}\r\n                          </div>\r\n                        )}\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row className=\"my-2\">\r\n                      <Col md={6}>\r\n                        <Label>CV</Label>\r\n                        {imageError1 && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {imageErrorMessage1}\r\n                          </div>\r\n                        )}\r\n\r\n                        <InputGroup className=\"\">\r\n                          <div className=\"\">\r\n                            <Button\r\n                              className=\"default\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                document\r\n                                  .getElementById(\"file-upload-resume\")\r\n                                  .click()\r\n                              }\r\n                            >\r\n                              Upload Resume{\" \"}\r\n                              <i className=\"iconsminds-upload ml-2\" />\r\n                            </Button>\r\n                            {/* <Form> */}\r\n                            <Input\r\n                              id=\"file-upload-resume\"\r\n                              type=\"file\"\r\n                              className=\"d-none\"\r\n                              onChange={handleFileChange2}\r\n                              // validate={validateFile}\r\n                            />\r\n                          </div>\r\n                        </InputGroup>\r\n                        <div className=\"  my-2 \">\r\n                          {/* {selectedFile2 ? selectedFile2.name : \"\"} */}\r\n                          {selectedFile2\r\n                            ? `selected file is ${selectedFile2.name}`\r\n                            : \"\"}\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup className=\"error-l-75\">\r\n                    <Label>Languages known*</Label>\r\n                    <Select\r\n                      placeholder=\"Select Languages\"\r\n                      name=\"languages\"\r\n                      isMulti\r\n                      options={languageOptions}\r\n                      // validate={validateLanguages}\r\n                      className=\"react-select\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(selectedOptions) => {\r\n                        const languagesArray = selectedOptions\r\n                          ? selectedOptions.map((option) => option.value)\r\n                          : [];\r\n                        setFieldValue(\"languages\", languagesArray);\r\n                      }}\r\n                    />\r\n                    {errors.languages && touched.languages && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.languages}\r\n                      </div>\r\n                    )}\r\n                  </FormGroup>\r\n                  <Row>\r\n                    <Col className=\"text-center\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          AboutLoading ? \"show-spinner\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">Next</span>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          )}\r\n          {currentStep === 1 && (\r\n            <Formik\r\n              innerRef={forms[1]}\r\n              initialValues={{\r\n                bio: fields.bio,\r\n                about: fields.about,\r\n              }}\r\n              onSubmit={(values) => {\r\n                const profileData = { ...values, topics: topicsTag };\r\n                postDataProfile(profileData);\r\n              }}\r\n              validateOnMount\r\n            >\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-right\">\r\n                  <FormGroup>\r\n                    <Label for=\"topics\">Consulting areas*</Label>\r\n\r\n                    {/* <TagsInput\r\n                      value={topicsTag}\r\n                      onChange={handleTopicsTagsChange}\r\n                      inputProps={{ placeholder: \"Add topics \" }}\r\n                      addOnBlur\r\n                      addKeys={[188]}\r\n                    /> */}\r\n                    <TagsInput\r\n                      value={topicsTag}\r\n                      onChange={handleTopicsTagsChange}\r\n                      renderInput={({ addTag, ...inputProps }) => {\r\n                        const { onChange, value, ...other } = inputProps;\r\n                        return (\r\n                          <input\r\n                            {...other}\r\n                            value={topicsInputValue}\r\n                            onChange={(e) =>\r\n                              handleTopicsChangeInput(e.target.value)\r\n                            }\r\n                            onKeyDown={(e) => {\r\n                              if (e.key === \"Enter\") {\r\n                                handleAddTopicsTag();\r\n                                e.preventDefault();\r\n                              }\r\n                            }}\r\n                            placeholder=\"Add Consulting areas\"\r\n                          />\r\n                        );\r\n                      }}\r\n                    />\r\n                    {errors.topics && touched.topics && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.topics}\r\n                      </div>\r\n                    )}\r\n                    <FormText color=\"muted\">\r\n                      Describe your expertise to connect with Students who have\r\n                      similar interests.\r\n                      <br />\r\n                      Comma-separated list of your skills (keep it below 10).\r\n                      Students will use this to find you.\r\n                    </FormText>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"bio\">Bio*</Label>\r\n                    <Field\r\n                      name=\"bio\"\r\n                      id=\"bio\"\r\n                      className=\"form-control\"\r\n                      validate={validateBio}\r\n                    />\r\n                    {errors.bio && touched.bio && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.bio}\r\n                      </div>\r\n                    )}\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"about\">About*</Label>\r\n                    <Field\r\n                      as=\"textarea\"\r\n                      name=\"about\"\r\n                      id=\"about\"\r\n                      className=\"form-control\"\r\n                      validate={validateAbout}\r\n                    />\r\n                    {errors.about && touched.about && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.about}\r\n                      </div>\r\n                    )}\r\n                    <FormText color=\"muted\">\r\n                      Tell us (and your mentees) a little bit about yourself.\r\n                      Talk about yourself in the first person, as if you&apos;d\r\n                      directly talk to a mentee. This will be public.\r\n                    </FormText>\r\n                  </FormGroup>\r\n                  <Row>\r\n                    {\" \"}\r\n                    <Col>\r\n                      {\" \"}\r\n                      <Button color=\"primary\" onClick={handlePrevStep}>\r\n                        Previous\r\n                      </Button>\r\n                    </Col>\r\n                    <Col className=\"text-right\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          profileLoading ? \"show-spinner\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">Next</span>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          )}\r\n          {currentStep === 2 && (\r\n            <Formik\r\n              innerRef={forms[2]}\r\n              initialValues={{\r\n                services: [\r\n                  {\r\n                    serviceName: \"\",\r\n                    headline: \"\",\r\n                    description: \"\",\r\n                    amount: 1000,\r\n                  },\r\n                ],\r\n              }}\r\n              onSubmit={() => {\r\n                postServices(services);\r\n                // console.log(\"my services\", services);\r\n                // console.log(\"values\", values);\r\n              }}\r\n              validateOnMount\r\n            >\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-right my-4\">\r\n                  <Alert color=\"primary\">\r\n                    <strong>Almost there!</strong> <br /> You&apos;re just one\r\n                    last step away from being a lawyer and connecting with\r\n                    mentees all over the world! In this step, show off your\r\n                    accomplishments and how you can help others.\r\n                    <br />\r\n                    <br /> Many of these fields are optional, but will help us\r\n                    get better insights into your work - and therefore\r\n                    exponentially increase your chances. They also give you a\r\n                    jumpstart once you&apos;re a lawyer.\r\n                  </Alert>\r\n\r\n                  {services.map((service, index) => (\r\n                    // eslint-disable-next-line react/no-array-index-key\r\n                    <div key={index}>\r\n                      <div className=\"text-right\">\r\n                        {/* <Button outline className=\"icon-button\" onClick={() => removeService(index)}>\r\n                        <i className=\"simple-icon-close\" />\r\n                      </Button> */}\r\n                        {services.length > 1 && (\r\n                          <span>\r\n                            <Button\r\n                              id=\"closeButton\"\r\n                              color=\"primary\"\r\n                              outline\r\n                              className=\"icon-button\"\r\n                              onClick={() => removeService(index)}\r\n                            >\r\n                              <i className=\"iconsminds-close\" />\r\n                            </Button>\r\n                            {/* <Tooltip\r\n                            placement=\"left\"\r\n                            isOpen={tooltipOpen}\r\n                            target=\"closeButton\"\r\n                            toggle={() => setTooltipOpen(!tooltipOpen)}\r\n                          >\r\n                            <PopoverBody> Remove service</PopoverBody>\r\n                          </Tooltip> */}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Row>\r\n                        <Col md={12}>\r\n                          <FormGroup className=\"error-l-75\">\r\n                            <Label>Service Name*</Label>\r\n                            <Input\r\n                              className=\"form-control\"\r\n                              name={`services[${index}].serviceName`}\r\n                              value={service.serviceName}\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"serviceName\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              validate={validateServiceName}\r\n                            />\r\n                            {errors.services?.[index]?.serviceName &&\r\n                              touched.services?.[index]?.serviceName && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.services[index].serviceName}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col md={12}>\r\n                          <FormGroup>\r\n                            <Label for={`services[${index}].headline`}>\r\n                              Headline*\r\n                            </Label>\r\n                            <Input\r\n                              name={`services[${index}].headline`}\r\n                              id={`services[${index}].headline`}\r\n                              className=\"form-control\"\r\n                              value={service.headline}\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"headline\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              validate={validatePackageTopic}\r\n                            />\r\n                            {errors.services?.[index]?.headline &&\r\n                              touched.services?.[index]?.headline && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.services[index].headline}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col md={12}>\r\n                          <FormGroup>\r\n                            <Label for={`services[${index}].description`}>\r\n                              Description*\r\n                            </Label>\r\n                            <Input\r\n                              type=\"textarea\"\r\n                              name={`services[${index}].description`}\r\n                              id={`services[${index}].description`}\r\n                              className=\"form-control\"\r\n                              value={service.description}\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  index,\r\n                                  \"description\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              validate={validatePackageDescription}\r\n                            />\r\n                            {errors.services?.[index]?.description &&\r\n                              touched.services?.[index]?.description && (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.services[index].description}\r\n                                </div>\r\n                              )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col md={12}>\r\n                          <FormGroup className=\"error-l-75\">\r\n                            <Label>Amount*</Label>\r\n                            <SliderTooltip\r\n                              min={0}\r\n                              max={500000}\r\n                              defaultValue={service.amount}\r\n                              className=\"mb-5\"\r\n                              step={500}\r\n                              value={service.amount}\r\n                              onChange={(value) =>\r\n                                handleInputChange(index, \"amount\", value)\r\n                              }\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        {/* <Col md={12}>\r\n                      <Button color=\"primary\" className=\"my-3\" onClick={() => removeService(index)}>\r\n                        Remove Service\r\n                      </Button>\r\n                    </Col> */}\r\n                      </Row>\r\n                      <hr />\r\n                    </div>\r\n                  ))}\r\n\r\n                  {/* <Button color=\"primary\" className=\"my-5\" onClick={addService}>\r\n                    Add more services\r\n                  </Button> */}\r\n                  <Card\r\n                    onClick={addService}\r\n                    className=\"p-3 text-center my-5\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <h3 className=\"font-weight-bold text-primary\">\r\n                      + Add more services\r\n                    </h3>\r\n                  </Card>\r\n                  <Row>\r\n                    {\" \"}\r\n                    <Col>\r\n                      {\" \"}\r\n                      <Button color=\"primary\" onClick={handlePrevStep}>\r\n                        Previous\r\n                      </Button>\r\n                    </Col>\r\n                    <Col className=\"text-right\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          servicesLoading ? \"show-spinner\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">Submit</span>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          )}\r\n          {loading ? (\r\n            <div className=\"wizard-basic-step text-center pt-3\">\r\n              <Spinner color=\"primary\" className=\"mb-1\" />\r\n              <p>Submitting</p>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {currentStep === 3 && (\r\n                <Row>\r\n                  <Colxx xxs=\"12\" className=\"mb-4\">\r\n                    <Card>\r\n                      <CardBody className=\"text-center\">\r\n                        <i\r\n                          alt=\"\"\r\n                          className=\"glyph-icon iconsminds-yes text-success\"\r\n                          style={{ fontSize: \"75px\" }}\r\n                        />\r\n                        <Jumbotron className=\"text-center\">\r\n                          <h1 className=\"display-4\">Submitted Successfully!</h1>\r\n                          <p className=\"lead\">We will reach you shortly</p>\r\n                          <hr className=\"my-4\" />\r\n                          <p className=\"lead mb-0\">\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"lg\"\r\n                              onClick={() => handleJobsListClick()}\r\n                            >\r\n                              My jobs list\r\n                            </Button>\r\n                          </p>\r\n                        </Jumbotron>\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Colxx>\r\n                </Row>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default injectIntl(ApplyAsLawyer);\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport { RangeTooltip } from \"components/common/SliderTooltips\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  // CustomInput,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  // FormGroup,\r\n  // Label,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport country from \"../my-login/Country\";\r\nimport language from \"../my-login/Languages\";\r\n\r\nconst LawyerCardFilter = ({\r\n  onTopicsChange,\r\n  onPriceChange,\r\n  onLocationChange,\r\n  onLanguageChange,\r\n  selectedTopics,\r\n  selectedLocation,\r\n  selectedLanguage,\r\n}) => {\r\n  const [dropdownBasicOpen, setDropdownBasicOpen] = useState(false);\r\n  const [dropdownBasicOpen1, setDropdownBasicOpen1] = useState(false);\r\n  const [dropdownBasicOpen2, setDropdownBasicOpen2] = useState(false);\r\n  const [dropdownBasicOpen3, setDropdownBasicOpen3] = useState(false);\r\n  const [priceRange, setPriceRange] = useState([500, 15000]);\r\n\r\n  const topicSearchUrl = `${baseUrl}/api/lawyer/search/lawyertopic`;\r\n\r\n  const [topicsSize, setTopicsSize] = useState(10);\r\n\r\n  const [topicsPaginationMeta, setTopicsPaginationMeta] = useState([]);\r\n\r\n  const [topicsData, setTopicsData] = useState([]);\r\n\r\n  const [topicsFetched, setTopicsFetched] = useState(false);\r\n  // const topics = [\r\n  //   \"Visas\",\r\n  //   \"Immigration\",\r\n  //   \"Accreditation\",\r\n  //   \"Rights\",\r\n  //   \"Employment\",\r\n  //   \"Work-permits\",\r\n  //   \"Housing\",\r\n  //   \"Intellectual-property\",\r\n  //   \"Dependents\",\r\n  //   \"Healthcare\"\r\n  // ]\r\n\r\n  const handleTopicsSelect = (topic) => {\r\n    onTopicsChange(topic);\r\n  };\r\n  const handleLanguageSelect = (lang) => {\r\n    onLanguageChange(lang);\r\n  };\r\n\r\n  const handleLocationSelect = (location) => {\r\n    onLocationChange(location);\r\n  };\r\n\r\n  const handleSliderChange = (value) => {\r\n    setPriceRange(value);\r\n  };\r\n  const handleAfterChange = useCallback((finalRange) => {\r\n    onPriceChange(finalRange);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [filteredCountry, setFilteredCountry] = useState(country);\r\n  const [filteredLanguage, setFilteredLanguage] = useState(language);\r\n  const [searchLanguage, setSearchLanguage] = useState(\"\");\r\n  // const [filteredTopics, setFilteredTopics] = useState(topics);\r\n  const [searchTopics, setSearchTopics] = useState(\"\");\r\n  const [viewFilters, setViewFilters] = useState(false);\r\n\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkIfMobile = () => {\r\n      setIsMobile(window.innerWidth < 992);\r\n    };\r\n\r\n    checkIfMobile();\r\n    window.addEventListener(\"resize\", checkIfMobile);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", checkIfMobile);\r\n    };\r\n  }, []);\r\n\r\n  const handleSearchChange = (event) => {\r\n    const newText = event.target.value.toLowerCase();\r\n    setSearchText(newText);\r\n    setFilteredCountry(\r\n      country.filter((c) => c.name.toLowerCase().includes(newText))\r\n    );\r\n  };\r\n\r\n  const handleSearchLanguage = (event) => {\r\n    const newText = event.target.value.toLowerCase();\r\n    setSearchLanguage(newText);\r\n    setFilteredLanguage(\r\n      language.filter((s) => s.name.toLowerCase().includes(newText))\r\n    );\r\n  };\r\n  const handleSearchTopics = (event) => {\r\n    // const newText = event.target.value.toLowerCase();\r\n    setSearchTopics(event.target.value);\r\n    // setFilteredTopics(topics.filter((t) => t.toLowerCase().includes(newText)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const FetchTopics = async () => {\r\n      const params = {};\r\n\r\n      if (searchTopics) {\r\n        params.skill = searchTopics;\r\n      }\r\n\r\n      params.size = topicsSize;\r\n      params.page = 0;\r\n      try {\r\n        const response = await axios.get(topicSearchUrl, { params });\r\n        setTopicsData(response.data.data);\r\n        setTopicsPaginationMeta(response.data.paginationMeta);\r\n        setTopicsFetched(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setTopicsFetched(false);\r\n      }\r\n    };\r\n    FetchTopics();\r\n  }, [searchTopics, topicsSize]);\r\n\r\n  const handleViewFilters = () => {\r\n    setViewFilters(!viewFilters);\r\n  };\r\n\r\n  const handleTopicsLoadMore = () => setTopicsSize(topicsSize + 5);\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"mb-4\">\r\n        <Colxx xxs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" className=\" \">\r\n          <div className=\"\">\r\n            <div className=\"d-flex flex-wrap  my-3\">\r\n              {isMobile && (\r\n                <Button\r\n                  size=\"sm\"\r\n                  color=\"primary\"\r\n                  outline\r\n                  className=\"d-block d-lg-none col-sm-12 mb-3 position-relative\"\r\n                  onClick={handleViewFilters}\r\n                >\r\n                  {viewFilters ? (\r\n                    <span>\r\n                      Close filters\r\n                      <i\r\n                        className=\"simple-icon-arrow-up mr-0 icon-right\"\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          right: \"10px\",\r\n                          top: \"50%\",\r\n                          transform: \"translateY(-50%)\",\r\n                        }}\r\n                      />\r\n                    </span>\r\n                  ) : (\r\n                    <span>\r\n                      View filters\r\n                      <i\r\n                        className=\"simple-icon-arrow-down icon-right\"\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          right: \"10px\",\r\n                          top: \"50%\",\r\n                          transform: \"translateY(-50%)\",\r\n                        }}\r\n                      />\r\n                    </span>\r\n                  )}\r\n                </Button>\r\n              )}\r\n              {(!isMobile || viewFilters) && (\r\n                <>\r\n                  <Dropdown\r\n                    isOpen={dropdownBasicOpen}\r\n                    toggle={() => setDropdownBasicOpen(!dropdownBasicOpen)}\r\n                    className=\"mb-3 col-lg-auto col-sm-12\"\r\n                  >\r\n                    <DropdownToggle\r\n                      size=\"sm\"\r\n                      caret\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"col-lg-auto col-sm-12 \"\r\n                    >\r\n                      {selectedTopics[0] ? selectedTopics : <span>Topics</span>}\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                      <div className=\"search-sm mr-1 ml-1 mb-1 align-top\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"Search topic\"\r\n                          value={searchTopics}\r\n                          onChange={handleSearchTopics}\r\n                        />\r\n                      </div>\r\n                      <PerfectScrollbar\r\n                        style={{ maxHeight: \"200px\" }}\r\n                        options={{\r\n                          suppressScrollX: true,\r\n                          wheelPropagation: false,\r\n                        }}\r\n                      >\r\n                        {selectedTopics[0] && (\r\n                          <DropdownItem\r\n                            onClick={() => handleTopicsSelect(\"\")}\r\n                            className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                          >\r\n                            <span>{selectedTopics}</span>\r\n                            <i className=\"iconsminds-close ml-auto\" />\r\n                          </DropdownItem>\r\n                        )}\r\n                        {topicsFetched && topicsData.length === 0 && (\r\n                          <Card className=\" d-flex justify-content-between align-items-center\">\r\n                            {searchTopics} was not found\r\n                          </Card>\r\n                        )}\r\n                        {!topicsFetched && (\r\n                          <Card className=\" d-flex justify-content-between align-items-center\">\r\n                            Failed to load data!\r\n                          </Card>\r\n                        )}\r\n                        {topicsData.map((t, index) => (\r\n                          <DropdownItem\r\n                            // eslint-disable-next-line react/no-array-index-key\r\n                            key={index}\r\n                            onClick={() => handleTopicsSelect(t)}\r\n                          >\r\n                            {t}\r\n                          </DropdownItem>\r\n                        ))}\r\n                        {!topicsPaginationMeta.last && topicsFetched && (\r\n                          <Card\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={handleTopicsLoadMore}\r\n                            className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                          >\r\n                            load more\r\n                          </Card>\r\n                        )}\r\n                      </PerfectScrollbar>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n\r\n                  <Dropdown\r\n                    isOpen={dropdownBasicOpen1}\r\n                    toggle={() => setDropdownBasicOpen1(!dropdownBasicOpen1)}\r\n                    className=\"mb-3 col-lg-auto col-sm-12\"\r\n                  >\r\n                    <DropdownToggle\r\n                      size=\"sm\"\r\n                      caret\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"col-lg-auto col-sm-12 \"\r\n                    >\r\n                      {selectedLanguage ? (\r\n                        language.find((l) => l.iso_code === selectedLanguage)\r\n                          ?.name\r\n                      ) : (\r\n                        <span>Languages</span>\r\n                      )}\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                      <div className=\"search-sm mr-1 ml-1 mb-1 align-top\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"Search language\"\r\n                          value={searchLanguage}\r\n                          onChange={handleSearchLanguage}\r\n                        />\r\n                      </div>\r\n                      <PerfectScrollbar\r\n                        style={{ maxHeight: \"200px\" }}\r\n                        options={{\r\n                          suppressScrollX: true,\r\n                          wheelPropagation: false,\r\n                        }}\r\n                      >\r\n                        {selectedLanguage[0] && (\r\n                          <DropdownItem\r\n                            onClick={() => handleLanguageSelect(\"\")}\r\n                            className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                          >\r\n                            <span>\r\n                              {\r\n                                language.find(\r\n                                  (c) => c.iso_code === selectedLanguage\r\n                                )?.name\r\n                              }\r\n                            </span>\r\n                            <i className=\"iconsminds-close  ml-auto\" />\r\n                          </DropdownItem>\r\n                        )}\r\n                        {filteredLanguage.map((l) => (\r\n                          <DropdownItem\r\n                            key={l.iso_code}\r\n                            onClick={() => handleLanguageSelect(l.iso_code)}\r\n                          >\r\n                            <span>{l.name}</span>\r\n                          </DropdownItem>\r\n                        ))}\r\n                      </PerfectScrollbar>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                  <Dropdown\r\n                    isOpen={dropdownBasicOpen2}\r\n                    toggle={() => setDropdownBasicOpen2(!dropdownBasicOpen2)}\r\n                    className=\"mb-3 col-lg-auto col-sm-12\"\r\n                  >\r\n                    <DropdownToggle\r\n                      size=\"sm\"\r\n                      caret\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"col-lg-auto col-sm-12 \"\r\n                    >\r\n                      Price\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                      <DropdownItem>\r\n                        {/* <SliderExamples onChange={onPriceChange} /> */}\r\n                        <Row>\r\n                          <Colxx xxs=\"12\" sm=\"12\">\r\n                            <RangeTooltip\r\n                              min={500}\r\n                              max={15000}\r\n                              className=\"mb-5\"\r\n                              defaultValue={[500, 15000]}\r\n                              allowCross={false}\r\n                              pushable={100}\r\n                              value={priceRange}\r\n                              step={500}\r\n                              onChange={handleSliderChange}\r\n                              onAfterChange={handleAfterChange}\r\n                            />\r\n                          </Colxx>\r\n                        </Row>\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                  <Dropdown\r\n                    isOpen={dropdownBasicOpen3}\r\n                    toggle={() => setDropdownBasicOpen3(!dropdownBasicOpen3)}\r\n                    className=\"mb-3 col-lg-auto col-sm-12\"\r\n                  >\r\n                    <DropdownToggle\r\n                      size=\"sm\"\r\n                      caret\r\n                      color=\"primary\"\r\n                      outline\r\n                      className=\"col-lg-auto col-sm-12 \"\r\n                    >\r\n                      {selectedLocation ? (\r\n                        country.find((c) => c.iso_code === selectedLocation)\r\n                          ?.name\r\n                      ) : (\r\n                        <span>Location</span>\r\n                      )}\r\n                    </DropdownToggle>\r\n\r\n                    <DropdownMenu>\r\n                      <div className=\"search-sm mr-1 ml-1 mb-1 align-top\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"Search Country\"\r\n                          value={searchText}\r\n                          onChange={handleSearchChange}\r\n                        />\r\n                      </div>\r\n                      <PerfectScrollbar\r\n                        style={{ maxHeight: \"200px\" }}\r\n                        options={{\r\n                          suppressScrollX: true,\r\n                          wheelPropagation: false,\r\n                        }}\r\n                      >\r\n                        {selectedLocation && (\r\n                          <DropdownItem\r\n                            onClick={() => handleLocationSelect(\"\")}\r\n                            className=\"bg-light d-flex justify-content-between align-items-center\"\r\n                          >\r\n                            <span>\r\n                              {\r\n                                country.find(\r\n                                  (c) => c.iso_code === selectedLocation\r\n                                )?.name\r\n                              }\r\n                            </span>\r\n                            <i className=\"iconsminds-close  ml-auto\" />\r\n                          </DropdownItem>\r\n                        )}\r\n                        {filteredCountry.map((c) => (\r\n                          <DropdownItem\r\n                            key={c.iso_code}\r\n                            onClick={() => handleLocationSelect(c.iso_code)}\r\n                          >\r\n                            {c.name}\r\n                          </DropdownItem>\r\n                        ))}\r\n                      </PerfectScrollbar>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n\r\n                  {/* <Dropdown\r\n                isOpen={dropdownBasicOpen4}\r\n                toggle={() => setDropdownBasicOpen4(!dropdownBasicOpen4)}\r\n                className=\"mb-5 mx-2\"\r\n              >\r\n                <DropdownToggle caret color=\"secondary\" outline>\r\n                  More Filters\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  <DropdownItem>\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </Dropdown> */}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Colxx>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LawyerCardFilter;\r\n","import axios from \"axios\";\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\nimport Rating from \"components/common/Rating\";\r\nimport { baseUrl } from \"constants/defaultValues\";\r\nimport Pagination from \"containers/pages/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\nimport { Badge, Button, Card, CardBody, CardText, Row } from \"reactstrap\";\r\n// import MentorDropDown from '../mentorship/MentorDropDown';\r\nimport \"./ThumbnailImage.css\";\r\n\r\nimport LawyerCardFilter from \"./LawyerCardFilter\";\r\n\r\nconst UserCard = () => {\r\n  const [selectedTopics, setSelectedTopics] = useState([]);\r\n  const [selectedPrice, setSelectedPrice] = useState([]);\r\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\r\n  const [selectedLanguage, setSelectedLanguage] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isFirst, setIsFirst] = useState(true);\r\n  const [isLast, setIsLast] = useState(true);\r\n  const [totalPage, setTotalPage] = useState(1);\r\n\r\n  // const [searchClick, setSearchClick] = useState(\"\")\r\n  // const [searchClicked, setSearchClicked] = useState(false)\r\n\r\n  const url = `${baseUrl}/api/lawyer/lawyercards`;\r\n\r\n  const handleTopicsChange = (topics) => setSelectedTopics(topics);\r\n  const handlePriceChange = (price) => setSelectedPrice(price);\r\n  const handleLocationChange = (location) => setSelectedLocation(location);\r\n  const handleLanguageChange = (language) => setSelectedLanguage(language);\r\n\r\n  // console.log(\"selectedTopics\",selectedTopics)\r\n  // console.log(\"selectedLanguage\",selectedLanguage)\r\n  // console.log(\"selectedPrice\",selectedPrice)\r\n  // console.log(\"selectedLocation\",selectedLocation)\r\n\r\n  const [isLawyerCardFetched, setIsLawyerCardFetched] = useState(false);\r\n\r\n  const [userdetails, setUserDetails] = useState(\"\");\r\n  const [inputkey, setInputKey] = useState(\"\");\r\n  // const handleSearchByName = () => {\r\n  //   setSearchClick(inputkey);\r\n  //   // setSearchClicked(true);\r\n  // }\r\n  // const handleSearchClear = () =>{\r\n  //   setInputKey(\"\");\r\n  //   setSearchClick(\"\");\r\n  //   setSearchClicked(false);\r\n  // }\r\n  // const url=`${baseUrl}/user/cards`\r\n  // const history = useHistory();\r\n\r\n  // Backend url below\r\n  // const url =`${baseUrl}/api/lawyer`\r\n  // useEffect(()=>{\r\n  //   setIsLawyerCardFetched(false);\r\n  //   const UserList = async () => {\r\n  //     try {\r\n  //       const response = await axios.get(url);\r\n  //       setUserDetails(response.data);\r\n  //       setIsLawyerCardFetched(true);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching data:', error);\r\n  //       setIsLawyerCardFetched(true);\r\n  //     }\r\n  //   };\r\n  //   UserList();\r\n  // },[])\r\n\r\n  useEffect(() => {\r\n    setIsLawyerCardFetched(false);\r\n    const LawyerCardDetails = async () => {\r\n      // const params = {\r\n      //   company: selectedIndustry,\r\n      //   location: selectedLocation,\r\n      //   skills: selectedSkills,\r\n      // };\r\n      const params = {};\r\n\r\n      if (selectedLocation) {\r\n        params.location = selectedLocation;\r\n      }\r\n      if (selectedPrice) {\r\n        // params.price = selectedPrice;\r\n        params.minPrice = selectedPrice.at(0);\r\n        params.maxPrice = selectedPrice.at(1);\r\n      }\r\n      if (selectedLanguage) {\r\n        params.languages = selectedLanguage;\r\n      }\r\n      if (selectedTopics) {\r\n        params.topic = selectedTopics;\r\n      }\r\n      if (inputkey) {\r\n        params.firstName = inputkey;\r\n      }\r\n      params.page = currentPage - 1;\r\n      params.size = 10;\r\n      try {\r\n        const response = await axios.get(url, { params });\r\n        setUserDetails(response.data.data);\r\n        // setCurrentPage(response.data.paginationMeta.pageNumber);\r\n        setTotalPage(response.data.paginationMeta.totalPage);\r\n        setIsFirst(response.data.paginationMeta.first);\r\n        setIsLast(response.data.paginationMeta.last);\r\n        setIsLawyerCardFetched(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setIsLawyerCardFetched(true);\r\n      }\r\n    };\r\n    LawyerCardDetails();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    selectedLocation,\r\n    selectedLanguage,\r\n    selectedTopics,\r\n    currentPage,\r\n    selectedPrice,\r\n    inputkey,\r\n  ]);\r\n\r\n  const truncateBio = (bio, lineCount) => {\r\n    if (!bio) return \"\";\r\n    const words = bio.split(\" \");\r\n\r\n    const truncatedBio = words.slice(0, lineCount).join(\" \");\r\n\r\n    if (words.length > lineCount) {\r\n      return `${truncatedBio}...`;\r\n    }\r\n    return truncatedBio;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n        <div>\r\n          <div className=\"\">\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group\">\r\n                {/* <input\r\n            type=\"text\"\r\n            className=\"form-control rounded col-12 col-lg-8 col-md-8 py-2\"\r\n            placeholder='Search by name'\r\n            // disabled={searchClicked}\r\n            value={inputkey}\r\n            onChange={(e) =>setInputKey(e.target.value)}\r\n          /> */}\r\n                <div\r\n                  style={{ position: \"relative\" }}\r\n                  className=\"col-12 col-lg-7 col-md-7\"\r\n                >\r\n                  <i\r\n                    className=\"simple-icon-magnifier mr-3\"\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: \"50%\",\r\n                      right: \"15px\",\r\n                      transform: \"translateY(-50%)\",\r\n                      zIndex: 2,\r\n                      color: \"#aaa\",\r\n                    }}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control rounded py-2\"\r\n                    placeholder=\"Search by name\"\r\n                    value={inputkey}\r\n                    onChange={(e) => setInputKey(e.target.value)}\r\n                    style={{ paddingRight: \"2.5rem\" }}\r\n                  />\r\n                </div>\r\n\r\n                {/* {!searchClicked ? (\r\n      \r\n          <Button disabled={!inputkey} className='ml-3 ' color='primary' onClick={() => handleSearchByName()} >Search</Button> ) : (\r\n          <Button className='ml-3 ' onClick={() => handleSearchClear()} color='primary' >Clear</Button>\r\n        )} */}\r\n              </div>\r\n\r\n              <LawyerCardFilter\r\n                onTopicsChange={handleTopicsChange}\r\n                onPriceChange={handlePriceChange}\r\n                onLocationChange={handleLocationChange}\r\n                onLanguageChange={handleLanguageChange}\r\n                selectedTopics={selectedTopics}\r\n                selectedLocation={selectedLocation}\r\n                selectedLanguage={selectedLanguage}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Colxx>\r\n      {!isLawyerCardFetched ? (\r\n        <div className=\"loading\" />\r\n      ) : (\r\n        <>\r\n          {userdetails.length === 0 ? (\r\n            <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto \">\r\n              <Card>\r\n                <CardBody>\r\n                  <h2 className=\"text-center text-large \">No Lawyers</h2>\r\n                </CardBody>\r\n              </Card>\r\n            </Colxx>\r\n          ) : (\r\n            userdetails.map((users) => {\r\n              return (\r\n                <Colxx xxs=\"12\" key={users.id}>\r\n                  <Row>\r\n                    <Colxx sm=\"12\" md=\"12\" lg=\"8\" xxs=\"12\" className=\"mx-auto\">\r\n                      <Card\r\n                        className=\"flex-row flex-wrap flex-sm-nowrap listing-card-container my-3 p-3\"\r\n                        style={{ gap: \"16px\" }}\r\n                      >\r\n                        {/* <Col md={5} lg={5}> */}\r\n                        <div className=\"d-block lawyer-card-img-container\">\r\n                          {users.imageUrl === null ? (\r\n                            <div\r\n                              className=\"card-img-left bg-primary \r\n               d-flex align-items-center justify-content-center\"\r\n                              style={{\r\n                                width: \"200px\",\r\n                                // width: \"150px\",\r\n                                height: \"250px\",\r\n                                // height: \"250px\",\r\n                                borderRadius: \"0.75rem\",\r\n                              }}\r\n                            >\r\n                              <ThumbnailLetters\r\n                                rounded\r\n                                text={users.firstName}\r\n                                className=\"text-xlarge border border-1\"\r\n                                style={{\r\n                                  textAlign: \"center\",\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          ) : (\r\n                            <img\r\n                              className=\"lawyer-card-width\"\r\n                              src={`${baseUrl}/${users.imageUrl}`}\r\n                              alt=\"Card\"\r\n                            />\r\n                          )}\r\n                          {/* <img src=\"/assets/img/profiles/1.jpg\" alt='card' className='card-img-left'/> */}\r\n                        </div>\r\n                        {/* <div className=\"my-5  \">\r\n                              <CardText className=\"text-primary \">\r\n                                <span className=\"text-xlarge font-weight-semibold\">\r\n                                  ₹{Math.floor(users.price).toLocaleString()}\r\n                                </span>\r\n                              </CardText>\r\n                            </div>\r\n                          </div> */}\r\n                        {/* </Col> */}\r\n                        {/* <Col md={7} lg={7}> */}\r\n                        {/* <div className=\" d-flex align-items-center\"> */}\r\n                        <CardBody className=\"d-flex flex-column flex-fill p-0\">\r\n                          {/* <div className=\"min-width-zero\"> */}\r\n                          {/* <CardText className=\" font-weight-semibold text-xlarge mb-4\">\r\n                     {users.firstName} {users.lastName}\r\n                    </CardText> */}\r\n                          <div\r\n                            className=\"d-flex flex-wrap justify-content-between mb-1\"\r\n                            style={{ columnGap: \"24px\" }}\r\n                          >\r\n                            <div\r\n                              className=\"d-flex flex-wrap\"\r\n                              style={{ gap: \"10px\" }}\r\n                            >\r\n                              <div className=\"font-weight-semibold text-xlarge text-capitalize\">\r\n                                {users.firstName}\r\n                              </div>\r\n                              <div className=\"font-weight-semibold text-xlarge text-capitalize\">\r\n                                {users.lastName}\r\n                              </div>\r\n                            </div>\r\n                            {/* <CardText className=\" text-one mb-2 text-primary\">\r\n                     {users.company}\r\n                    </CardText> */}\r\n                            <CardText\r\n                              className=\"text-one d-flex flex-wrap align-items-center\"\r\n                              style={{ gap: \"4px\" }}\r\n                            >\r\n                              <span className=\"font-weight-semibold\">\r\n                                <Rating\r\n                                  total={5}\r\n                                  rating={users.star}\r\n                                  interactive={false}\r\n                                />\r\n                              </span>\r\n                              <span className=\"font-weight-semibold\">\r\n                                {users.star}\r\n                              </span>\r\n                              <span> ({users.ratings} reviews)</span>\r\n                            </CardText>\r\n                          </div>\r\n                          {/* <div className=\"d-flex\" style={{ gap: \"8px\" }}>\r\n                            <CardText className=\"text-one text-muted mb-2\">\r\n                              {users.jobTitle}\r\n                            </CardText>\r\n                            <div>|</div>\r\n                            <CardText className=\"text-one text-primary mb-2\">\r\n                              {users.company}\r\n                            </CardText>\r\n                          </div> */}\r\n                          <CardText\r\n                            className=\"text-one mb-2\"\r\n                            style={{ maxHeight: \"62px\", overflow: \"hidden\" }}\r\n                          >\r\n                            {truncateBio(users.bio, 20)}\r\n                          </CardText>\r\n                          <CardText className=\"d-flex flex-wrap\">\r\n                            {users.topic &&\r\n                              users.topic.slice(0, 3).map((skill) => (\r\n                                <div\r\n                                  key={skill}\r\n                                  className=\"pr-2\"\r\n                                  id=\"btn.rounded\"\r\n                                >\r\n                                  <Badge color=\"light\">{skill}</Badge>\r\n                                </div>\r\n                              ))}\r\n                          </CardText>\r\n\r\n                          <div\r\n                            className=\"d-flex justify-content-between align-items-center mt-auto flex-wrap\"\r\n                            style={{ columnGap: \"24px\" }}\r\n                          >\r\n                            {/* <NavLink href={`/app/mentorprofile/${users.id}`}>\r\n                       <Button color=\"primary \" className=\"default w-80 py-2  rounded\" >\r\n                        View Profile\r\n              </Button>\r\n              </NavLink> */}\r\n                            {/* <NavLink href={`/app/lawyerprofile/${users.id}`}>\r\n              <Button color=\"primary \" className=\"default w-80 py-2  rounded\" >\r\n                        View Profile\r\n              </Button>\r\n              </NavLink> */}\r\n                            <div className=\"text-primary\">\r\n                              <span className=\"text-xlarge font-weight-semibold\">\r\n                                ₹{Math.floor(users.price).toLocaleString()}\r\n                              </span>\r\n                            </div>\r\n                            {/* <Button\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                history.push(`/app/lawyerprofile/${users.id}`)\r\n                              }\r\n                              className=\"rounded\"\r\n                            >\r\n                              View Profile\r\n                            </Button> */}\r\n                            <a\r\n                              href={`/app/lawyerprofile/${users.id}`}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                            >\r\n                              <Button color=\"primary\" className=\"rounded\">\r\n                                View Profile\r\n                              </Button>\r\n                            </a>\r\n                          </div>\r\n                        </CardBody>\r\n                        {/* </div> */}\r\n                        {/* </Col> */}\r\n                      </Card>\r\n                    </Colxx>\r\n                  </Row>\r\n                </Colxx>\r\n              );\r\n            })\r\n          )}\r\n        </>\r\n      )}\r\n      {isLawyerCardFetched && (\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPage={totalPage}\r\n          onChangePage={(i) => setCurrentPage(i)}\r\n          lastIsActive={isFirst}\r\n          firstIsActive={isLast}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { useState ,useEffect} from 'react';\r\nimport { adminRoot, baseUrl } from 'constants/defaultValues';\r\nimport axios from 'axios';\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  Nav,\r\n  NavItem,\r\n  TabContent,\r\n  TabPane,\r\n  Col,\r\n  Button,\r\n \r\n} from 'reactstrap';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\n\r\nimport classnames from 'classnames';\r\n// import IntlMessages from 'helpers/IntlMessages';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\n\r\n\r\nconst LawyerTabCard = ({pid, handlePurchase, userId}) => {\r\n  const [activeFirstTab, setActiveFirstTab] = useState('1');\r\n  const [packages,setPackages]=useState('');\r\n  // const packageURL=`${baseUrl}/lawyerPackages`;\r\n  \r\n  // backend url \r\n// console.log(\"ck\",userId)\r\n// console.log(\"pk\",pid)\r\n\r\n    const packageURL=`${baseUrl}/api/lawyer/${pid}/package`\r\n  useEffect(()=>{\r\n   \r\n   \r\n  const LawyerPackage=async()=>{\r\n    console.log(pid);\r\n    try {\r\n        const response = await axios.get(packageURL);\r\n        const fetchedPackages = response.data;\r\n        setPackages(fetchedPackages);\r\n        \r\n\r\n        if (fetchedPackages.length > 0) {\r\n          setActiveFirstTab(fetchedPackages[0].id);\r\n        }\r\n       \r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n}\r\nLawyerPackage();\r\n},[])\r\n//   const [activeSecondTab, setActiveSecondTab] = useState('1');\r\nconst history = useHistory()\r\nconst handleChatClick = () => {\r\n    history.push(`${adminRoot}/chat/${userId}`);\r\n}\r\nconst role = localStorage.getItem(\"roleRes\")\r\n\r\n  return (\r\n    // <Row>\r\n    //   <Colxx xxs=\"12\">\r\n       \r\n    //     <Row>\r\n    //       <Colxx xxs=\"12\" xs=\"6\" lg=\"10\">\r\n    //         <Card className=\"mb-4 \">\r\n    //           <CardHeader>\r\n    //             <Nav tabs className=\"card-header-tabs \">\r\n    //               <NavItem>\r\n    //                 <NavLink\r\n    //                   to=\"#\"\r\n    //                   location={{}}\r\n    //                   className={classnames({\r\n    //                     active: activeFirstTab === '1',\r\n    //                     'nav-link': true,\r\n    //                   })}\r\n    //                   onClick={() => {\r\n    //                     setActiveFirstTab('1');\r\n    //                   }}\r\n    //                 >\r\n    //                   Basic\r\n    //                 </NavLink>\r\n    //               </NavItem>\r\n    //               <NavItem>\r\n    //                 <NavLink\r\n    //                   to=\"#\"\r\n    //                   location={{}}\r\n    //                   className={classnames({\r\n    //                     active: activeFirstTab === '2',\r\n    //                     'nav-link': true,\r\n    //                   })}\r\n    //                   onClick={() => {\r\n    //                     setActiveFirstTab('2');\r\n    //                   }}\r\n    //                 >\r\n    //                   Standard\r\n    //                 </NavLink>\r\n    //               </NavItem>\r\n    //               <NavItem>\r\n    //                 <NavLink\r\n    //                   to=\"#\"\r\n    //                   location={{}}\r\n    //                   className={classnames({\r\n    //                     active: activeFirstTab === '3',\r\n    //                     'nav-link': true,\r\n    //                   })}\r\n    //                   onClick={() => {\r\n    //                     setActiveFirstTab('3');\r\n    //                   }}\r\n    //                 >\r\n    //                   Premium\r\n    //                 </NavLink>\r\n    //               </NavItem>\r\n    //               <NavItem>\r\n    //                 <NavLink\r\n    //                   to=\"#\"\r\n    //                   location={{}}\r\n    //                   className={classnames({\r\n    //                     active: activeFirstTab === '4',\r\n    //                     'nav-link': true,\r\n    //                   })}\r\n    //                   onClick={() => {\r\n    //                     setActiveFirstTab('4');\r\n    //                   }}\r\n    //                 >\r\n    //                   Premium1\r\n    //                 </NavLink>\r\n    //               </NavItem>\r\n    //               <NavItem>\r\n    //                 <NavLink\r\n    //                   to=\"#\"\r\n    //                   location={{}}\r\n    //                   className={classnames({\r\n    //                     active: activeFirstTab === '5',\r\n    //                     'nav-link': true,\r\n    //                   })}\r\n    //                   onClick={() => {\r\n    //                     setActiveFirstTab('5');\r\n    //                   }}\r\n    //                 >\r\n    //                   Premium2\r\n    //                 </NavLink>\r\n    //               </NavItem>\r\n    //             </Nav>\r\n    //           </CardHeader>\r\n\r\n    //           <TabContent activeTab={activeFirstTab}>\r\n    //             <TabPane tabId=\"1\">\r\n    //               <Row>\r\n    //                 <Colxx sm=\"12\">\r\n    //                   <CardBody>\r\n    //                     <CardTitle className=\"mb-4\">\r\n    //                       <h2>₹4500</h2>\r\n    //                       <h5>Basic package</h5>\r\n    //                     </CardTitle>\r\n                       \r\n    //                   </CardBody>\r\n    //                 </Colxx>\r\n    //               </Row>\r\n    //             </TabPane>\r\n    //             <TabPane tabId=\"2\">\r\n    //               <Row>\r\n    //                 <Colxx sm=\"12\">\r\n    //                   <CardBody>\r\n    //                     <CardTitle className=\"mb-4\">\r\n    //                     <h2>₹8500</h2>\r\n    //                       <h5>Standard package</h5>\r\n    //                     </CardTitle>\r\n                       \r\n    //                   </CardBody>\r\n    //                 </Colxx>\r\n    //               </Row>\r\n    //             </TabPane>\r\n    //             <TabPane tabId=\"3\">\r\n    //               <Row>\r\n    //                 <Colxx sm=\"12\">\r\n    //                   <CardBody>\r\n    //                     <CardTitle className=\"mb-4\">\r\n    //                     <h2>₹12500</h2>\r\n    //                       <h5>Premium package</h5>\r\n    //                     </CardTitle>\r\n                       \r\n    //                   </CardBody>\r\n    //                 </Colxx>\r\n    //               </Row>\r\n    //             </TabPane>\r\n    //             <TabPane tabId=\"4\">\r\n    //               <Row>\r\n    //                 <Colxx sm=\"12\">\r\n    //                   <CardBody>\r\n    //                     <CardTitle className=\"mb-4\">\r\n    //                     <h2>₹12500</h2>\r\n    //                       <h5>Premium package 1</h5>\r\n    //                     </CardTitle>\r\n                       \r\n    //                   </CardBody>\r\n    //                 </Colxx>\r\n    //               </Row>\r\n    //             </TabPane>\r\n    //             <TabPane tabId=\"5\">\r\n    //               <Row>\r\n    //                 <Colxx sm=\"12\">\r\n    //                   <CardBody>\r\n    //                     <CardTitle className=\"mb-4\">\r\n    //                     <h2>₹15500</h2>\r\n    //                       <h5>Premium package 2</h5>\r\n    //                     </CardTitle>\r\n                       \r\n    //                   </CardBody>\r\n    //                 </Colxx>\r\n    //               </Row>\r\n    //             </TabPane>\r\n    //           </TabContent>\r\n    //         </Card>\r\n    //       </Colxx>\r\n\r\n    //       {/* <Colxx xxs=\"12\" xs=\"6\" lg=\"3\">\r\n    //         <Card className=\"mb-4\">\r\n    //           <CardHeader className=\"pl-0 pr-0\">\r\n    //             <Nav tabs className=\" card-header-tabs  ml-0 mr-0\">\r\n    //               <NavItem className=\"w-50 text-center\">\r\n    //                 <NavLink\r\n    //                   to=\"#\"\r\n    //                   location={{}}\r\n    //                   className={classnames({\r\n    //                     active: activeSecondTab === '1',\r\n    //                     'nav-link': true,\r\n    //                   })}\r\n    //                   onClick={() => {\r\n    //                     setActiveSecondTab('1');\r\n    //                   }}\r\n    //                 >\r\n    //                   Tab 1\r\n    //                 </NavLink>\r\n    //               </NavItem>\r\n    //               <NavItem className=\"w-50 text-center\">\r\n    //                 <NavLink\r\n    //                   to=\"#\"\r\n    //                   location={{}}\r\n    //                   className={classnames({\r\n    //                     active: activeSecondTab === '2',\r\n    //                     'nav-link': true,\r\n    //                   })}\r\n    //                   onClick={() => {\r\n    //                     setActiveSecondTab('2');\r\n    //                   }}\r\n    //                 >\r\n    //                   Tab 2\r\n    //                 </NavLink>\r\n    //               </NavItem>\r\n    //             </Nav>\r\n    //           </CardHeader>\r\n\r\n    //           <TabContent activeTab={activeSecondTab}>\r\n    //             <TabPane tabId=\"1\">\r\n    //               <Row>\r\n    //                 <Colxx sm=\"12\">\r\n    //                   <CardBody>\r\n    //                     <CardTitle className=\"mb-4\">\r\n    //                       Homemade Cheesecake with Fresh Berries and Mint\r\n    //                     </CardTitle>\r\n    //                     <Button outline size=\"sm\" color=\"primary\">\r\n    //                       Edit\r\n    //                     </Button>\r\n    //                   </CardBody>\r\n    //                 </Colxx>\r\n    //               </Row>\r\n    //             </TabPane>\r\n    //             <TabPane tabId=\"2\">\r\n    //               <Row>\r\n    //                 <Colxx sm=\"12\">\r\n    //                   <CardBody>\r\n    //                     <CardTitle className=\"mb-4\">\r\n    //                       Wedding Cake with Flowers Macarons and Blueberries\r\n    //                     </CardTitle>\r\n    //                     <Button outline size=\"sm\" color=\"primary\">\r\n    //                       Edit\r\n    //                     </Button>\r\n    //                   </CardBody>\r\n    //                 </Colxx>\r\n    //               </Row>\r\n    //             </TabPane>\r\n    //             <TabPane tabId=\"3\">\r\n    //               <Row>\r\n    //                 <Colxx sm=\"12\">\r\n    //                   <CardBody>\r\n    //                     <CardTitle className=\"mb-4\">\r\n    //                       Cheesecake with Chocolate Cookies and Cream Biscuits\r\n    //                     </CardTitle>\r\n    //                     <Button outline size=\"sm\" color=\"primary\">\r\n    //                       Edit\r\n    //                     </Button>\r\n    //                   </CardBody>\r\n    //                 </Colxx>\r\n    //               </Row>\r\n    //             </TabPane>\r\n    //           </TabContent>\r\n    //         </Card>\r\n    //       </Colxx> */}\r\n    //     </Row>\r\n    //   </Colxx>\r\n    // </Row>\r\n    <Row>\r\n    <Colxx xxs=\"12\">\r\n      <Row>\r\n        <Colxx xxs=\"12\" xs=\"10\" lg=\"10\">\r\n          <Card className=\"mb-4\">\r\n            <CardHeader>\r\n              <Nav tabs className=\"card-header-tabs\">\r\n                {packages&&packages.map((pack) => (\r\n                  <NavItem key={pack.id}>\r\n                    <NavLink\r\n                      to=\"#\"\r\n                      location={{}}\r\n                      className={classnames({\r\n                        active: activeFirstTab === pack.id,\r\n                        'nav-link': true,\r\n                      })}\r\n                      onClick={() => {\r\n                        setActiveFirstTab(pack.id);\r\n                      }}\r\n                    >\r\n                     <h6>{pack.serviceName}</h6> \r\n                    </NavLink>\r\n                  </NavItem>\r\n                ))}\r\n              </Nav>\r\n            </CardHeader>\r\n\r\n            <TabContent activeTab={activeFirstTab}>\r\n              {packages&&packages.map((pack) => (\r\n                <TabPane key={pack.id} tabId={pack.id}>\r\n                  <Row>\r\n                    <Col sm=\"12\">\r\n                      <CardBody>\r\n                        <CardTitle className=\"mb-4\">\r\n                          <h2>₹{Math.floor(pack.amount).toLocaleString()}</h2>\r\n                          <h5>{pack.serviceName}</h5>\r\n                          <p className='text-muted'>{pack.description}</p>\r\n                          <div className='d-flex '>\r\n                            {role.includes(\"USER\") && (\r\n                              <>\r\n                          <Button className=' text-one'  outline color='primary' onClick={handleChatClick} >Contact</Button>\r\n                            \r\n                          <Button color='primary' className='text-one ml-2'  onClick={() => handlePurchase(pack)}>Purchase</Button>\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                         \r\n                          \r\n                        </CardTitle>\r\n                      </CardBody>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n              ))}\r\n            </TabContent>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n    </Colxx>\r\n  </Row>\r\n  );\r\n};\r\n\r\nexport default LawyerTabCard;\r\n","import axios from \"axios\";\r\nimport { Colxx } from \"components/common/CustomBootstrap\";\r\n// import Rating from 'components/common/Rating';\r\nimport { adminRoot, baseUrl } from \"constants/defaultValues\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Card, CardBody, Col, NavLink, Row } from \"reactstrap\";\r\n// import data from 'data/profileStatuses';\r\nimport ThumbnailLetters from \"components/cards/ThumbnailLetters\";\r\nimport ReviewsComponent from \"../Reviews/ReviewsComponent\";\r\nimport country from \"../my-login/Country\";\r\nimport LawyerTabCard from \"./LawyerTabCard\";\r\n\r\nconst LawyerProfile = () => {\r\n  const { pid } = useParams();\r\n  const history = useHistory();\r\n  const [lawyerprofile, setLawyerProfile] = useState(\"\");\r\n  // const[reviews,setReviews]=useState('');\r\n  const [packages, setPackages] = useState(\"\");\r\n  const [showAll, setShowAll] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  // const [isFixed, setIsFixed] = useState(false);\r\n  const toggleShowAll = () => {\r\n    setShowAll(!showAll);\r\n  };\r\n\r\n  const handlePurchase = (pack) => {\r\n    history.push(`/app/lawyer/payment`, {\r\n      firstName: lawyerprofile.firstName,\r\n      lastName: lawyerprofile.lastName,\r\n      serviceName: pack.serviceName,\r\n      amount: pack.amount,\r\n      packageId: pack.id,\r\n      lawyerId: lawyerprofile.id,\r\n    });\r\n  };\r\n\r\n  // const url=`${baseUrl}/lawyerProfile/${pid}`;\r\n\r\n  // backend lawyerprofile url\r\n\r\n  const url = `${baseUrl}/api/lawyer/${pid}`;\r\n\r\n  // const reviewURL=`${baseUrl}/lawyerReviews`;\r\n  // backend  url\r\n  // const reviewURL=`${baseUrl}/api/law/rating/${pid}`;\r\n\r\n  // const packageURL=`${baseUrl}/lawyerPackages`;\r\n  // backend url\r\n\r\n  const packageURL = `${baseUrl}/api/lawyer/${pid}/package`;\r\n  useEffect(() => {\r\n    const ProfileLawyer = async () => {\r\n      try {\r\n        const response = await axios.get(url);\r\n        setLawyerProfile(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    ProfileLawyer();\r\n\r\n    const LawyerPackage = async () => {\r\n      try {\r\n        const response = await axios.get(packageURL);\r\n        setPackages(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    LawyerPackage();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (showAll) {\r\n      // Scroll to the skills section when showAll becomes true\r\n      document.getElementById(\"skillsSection\").scrollIntoView();\r\n    }\r\n  }, [showAll]);\r\n\r\n  // const status=5;\r\n\r\n  const remainingSkillsCount = lawyerprofile.topic\r\n    ? lawyerprofile.topic.length - 3\r\n    : 0;\r\n\r\n  const handleChatClick = () => {\r\n    history.push(`${adminRoot}/chat/${lawyerprofile.chatUserName}`);\r\n  };\r\n  const role = localStorage.getItem(\"roleRes\");\r\n  const countryName = country.find(\r\n    (c) => c.iso_code === lawyerprofile.location\r\n  )?.name;\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <div className=\"loading\" />\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <div className=\"w-100 py-3 position-relative bg-primary d-flex justify-content-between align-items-center\">\r\n              <div className=\" \">\r\n                {/* <img src=\"/assets/img/profiles/2.jpg\" className=' col-2 mx-2 w-60\r\n             rounded-circle img-thumbnail border    ' alt=\"\" /> */}\r\n                {/* <img src={lawyerprofile.image} className=' col-2 mx-2 w-60\r\n             rounded-circle img-thumbnail border    ' alt=\"\" /> */}\r\n\r\n                {lawyerprofile.imageUrl === null ? (\r\n                  <div className=\"\">\r\n                    <ThumbnailLetters\r\n                      rounded\r\n                      small\r\n                      text={lawyerprofile.firstName}\r\n                      className=\"border border-1 mx-2\"\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <img\r\n                    // src={lawyerprofile.image}\r\n                    src={`${baseUrl}/${lawyerprofile.imageUrl}`}\r\n                    // className='col-2 col-sm-4 col-xs-4  mx-2 mx-sm-2 w-100 col-lg-2 col-xl-2 rounded-circle img-thumbnail border'\r\n                    className=\"mx-2 rounded-circle img-thumbnail border\"\r\n                    alt=\"\"\r\n                    style={{\r\n                      width: \"110px\",\r\n                      height: \"110px\",\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                {role.includes(\"USER\") && (\r\n                  <NavLink>\r\n                    <Button\r\n                      onClick={handleChatClick}\r\n                      color=\"light\"\r\n                      className=\" font-weight-semibold mx-2 \"\r\n                      size=\"large\"\r\n                    >\r\n                      <span className=\"font-weight-semibold text-primary text-one\">\r\n                        Contact\r\n                      </span>\r\n                    </Button>\r\n                  </NavLink>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Row>\r\n            <Colxx lg={6}>\r\n              <div className=\" mt-4\">\r\n                <h1 className=\"font-weight-semibold text-xlarge\">\r\n                  {lawyerprofile.firstName} {lawyerprofile.lastName}\r\n                </h1>\r\n                {/* <h1 className='font-weight-semibold text-xlarge'>{mentorprofiledetails1.firstName} {mentorprofiledetails1.lastName}</h1> */}\r\n                <h3 className=\"text-large  text-muted  \">\r\n                  {lawyerprofile.jobTitle}\r\n                </h3>\r\n                <h2 className=\"text-one  text-primary\">\r\n                  {lawyerprofile.company}\r\n                </h2>\r\n\r\n                <p className=\"text-one font-weight-medium text-primary \">\r\n                  {lawyerprofile.bio}\r\n                </p>\r\n\r\n                <h5 className=\"font-weight-medium\">\r\n                  <i className=\"simple-icon-location-pin text-primary\" />\r\n                  <span className=\"ml-2\">{countryName}</span>\r\n                </h5>\r\n                <h6 className=\"\">\r\n                  <i className=\"simple-icon-star text-primary \" />\r\n                  <span className=\"ml-2\">\r\n                    {lawyerprofile.star} ({lawyerprofile.ratings} reviews)\r\n                  </span>\r\n                </h6>\r\n                {/* <h6 className=''><i className='simple-icon-clock text-primary'/><span className='ml-2'>Last Seen</span></h6> */}\r\n              </div>\r\n\r\n              <div className=\" mt-4\">\r\n                <h2 className=\"\">Consulting areas</h2>\r\n\r\n                <div className=\"d-flex align-items-center flex-wrap\">\r\n                  <div className=\"d-flex\">\r\n                    {lawyerprofile.topic &&\r\n                      lawyerprofile.topic.slice(0, 3).map((skill) => (\r\n                        <div key={skill.id}>\r\n                          <Button\r\n                            color=\"light\"\r\n                            className=\"mb-2 font-weight-semibold mr-2\"\r\n                            size=\"xs\"\r\n                          >\r\n                            {skill.topicName}\r\n                          </Button>\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n                  {lawyerprofile.topic && lawyerprofile.topic.length > 3 && (\r\n                    <div className=\"\">\r\n                      <Button\r\n                        color=\"link\"\r\n                        className=\"text-one font-weight-bold \"\r\n                        style={{ textDecoration: \"underline\" }}\r\n                        onClick={toggleShowAll}\r\n                      >\r\n                        + {remainingSkillsCount}more\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-2 d-md-block d-sm-block d-lg-none d-xl-none  \">\r\n                <LawyerTabCard\r\n                  pid={pid}\r\n                  handlePurchase={handlePurchase}\r\n                  userId={lawyerprofile.chatUserName}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"mt-4\">\r\n                <h2 className=\"\">About</h2>\r\n                <p className=\"text-one\">{lawyerprofile.about}</p>\r\n              </div>\r\n              <div>\r\n                <div className=\"my-4 \" id=\"skillsSection\">\r\n                  <h2 className=\"text-start mr-2\">All Consulting areas</h2>\r\n                  <div className=\"d-flex flex-wrap \">\r\n                    {lawyerprofile.topic &&\r\n                      lawyerprofile.topic.map((skill) => (\r\n                        <div key={skill}>\r\n                          <Button\r\n                            color=\"light\"\r\n                            className=\"mb-2 font-weight-semibold mr-2\"\r\n                            size=\"sm\"\r\n                          >\r\n                            {skill.topicName}\r\n                          </Button>\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Colxx>\r\n\r\n            <Colxx lg={12} xl={12} className=\"mt-4\">\r\n              <hr />\r\n              <h2 className=\"\">Packages</h2>\r\n              <Row className=\"d-flex\">\r\n                {packages &&\r\n                  packages.map((pack) => (\r\n                    <Col lg={6} key={pack.id} className=\"my-2\">\r\n                      <Card className=\"pt-5 pb-5 d-flex\">\r\n                        <CardBody className=\"pt-5 pb-5\">\r\n                          <div className=\"price-top-part\">\r\n                            <i className=\"\" />\r\n                            <h2 className=\"mb-0 font-weight-semibold text-primary text-large mb-4\">\r\n                              {pack.serviceName}\r\n                            </h2>\r\n                            {/* <p className=''>{pack.headline}</p> */}\r\n                            <p className=\"text-large mb-2 text-default\">\r\n                              ₹{Math.floor(pack.amount).toLocaleString()}\r\n                            </p>\r\n                            <p className=\"text-muted text-small\">\r\n                              {pack.description}\r\n                            </p>\r\n                            <div className=\"\">\r\n                              {role.includes(\"USER\") && (\r\n                                <Button\r\n                                  color=\"primary  text-one\"\r\n                                  onClick={() => handlePurchase(pack)}\r\n                                >\r\n                                  Purchase\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Col>\r\n                  ))}\r\n              </Row>\r\n            </Colxx>\r\n\r\n            <Colxx className=\"mt-4\" lg={12}>\r\n              <hr />\r\n            </Colxx>\r\n\r\n            {/* <Colxx className=\"mt-4\" lg={6} xl={6} md={12}>\r\n              <div\r\n                style={{\r\n                  width: \"40%\",\r\n                  position: \"fixed\",\r\n                  top: \"40%\",\r\n                  right: \"20px\",\r\n                }}\r\n                className=\"mt-2 d-lg-block d-xl-block d-none\"\r\n              >\r\n                <LawyerTabCard\r\n                  pid={pid}\r\n                  handlePurchase={handlePurchase}\r\n                  userId={lawyerprofile.chatUserName}\r\n                />\r\n              </div>\r\n            </Colxx> */}\r\n          </Row>\r\n          <ReviewsComponent category=\"law\" revieweeId={pid} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LawyerProfile;\r\n","/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-param-reassign */\r\nimport axios from 'axios';\r\nimport { baseUrl } from 'constants/defaultValues';\r\nimport React from 'react';\r\nimport { WithWizard } from 'react-albus';\r\nimport { Button, NavLink } from 'reactstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst  BottomNavigationWizard = ({\r\n  className,\r\n  onClickPrev,\r\n  prevLabel,\r\n  onClickNext,\r\n  nextLabel,\r\n  paymentButtonType,\r\n  packageId,\r\n  lawyerId\r\n}) => {\r\n\r\n  const handlePayFromWallet = async () => {\r\n    try {\r\n      const response = await axios.post(`${baseUrl}/api/lawyer/${lawyerId}/service/${packageId}/purchase`, {\r\n        paymentMethod: 'WALLET'\r\n      });\r\n      console.log('Payment success:', response.data);\r\n      // Handle success response here\r\n    } catch (error) {\r\n      console.error('Payment failed:', error);\r\n      // Handle error here\r\n    }\r\n  };\r\n  // const handlePayFromOnline = async () => {\r\n  //   try {\r\n  //     const response = await axios.post(`${baseUrl}/api/lawyer/${lawyerId}/service/${packageId}/purchase`, {\r\n  //       paymentMethod: 'ONLINE'\r\n  //     });\r\n  //     console.log('Payment success:', response.data);\r\n  //     // Handle success response here\r\n  //   } catch (error) {\r\n  //     console.error('Payment failed:', error);\r\n  //     // Handle error here\r\n  //   }\r\n  // };\r\n\r\n  const history = useHistory();\r\n\r\n  const handlePayFullyFromOnline = async () => {\r\n    try {\r\n      const response = await axios.post(`${baseUrl}/api/lawyer/${lawyerId}/service/${packageId}/purchase`, {\r\n        paymentMethod: 'ONLINE'\r\n      });\r\n      if (response.status === 200) {\r\n        console.log('Payment success:', response.data);\r\n        history.push('/app/lawyerjobslist');\r\n      } else {\r\n        console.error('Payment failed. Unexpected status code:', response.status);\r\n      }\r\n     \r\n     \r\n    } catch (error) {\r\n      console.error('Payment failed:', error);\r\n      \r\n    }\r\n  };\r\n  \r\n  return (\r\n    <WithWizard\r\n      render={({ next, previous, step, steps }) => (\r\n        \r\n        // default previous button\r\n        <div className={`wizard-buttons ${className}`}>\r\n          {/* <Button\r\n            color=\"primary\"\r\n            className={`mr-1 ${steps.indexOf(step) <= 1 ? 'disabled' : ''}`}\r\n            onClick={() => {\r\n              onClickPrev(previous, steps, step);\r\n            }}\r\n          >\r\n            {prevLabel}\r\n          </Button> */}\r\n          {steps.indexOf(step) > 0 && steps.indexOf(step) < steps.length - 1 &&(\r\n    <Button\r\n      color=\"primary\"\r\n      className={`mr-2 ${steps.indexOf(step) <= 1 ? 'disabled' : ''}`}\r\n      onClick={() => {\r\n        onClickPrev(previous, steps, step);\r\n      }}\r\n    >\r\n      {prevLabel}\r\n    </Button>\r\n  )}\r\n\r\n         {/* first step pay from online button */}\r\n          <Button \r\n            color='primary'\r\n\r\n            className={`mx-2 ${steps.indexOf(step) === 0 ? '' : 'd-none'}`}\r\n            onClick={() => {\r\n              onClickPrev(previous, steps, step);\r\n              handlePayFullyFromOnline();\r\n            }}\r\n          >\r\n            pay fully online\r\n          </Button>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            className={\r\n              // steps.indexOf(step) >= steps.length - 1 ? 'disabled' : ''\r\n              steps.indexOf(step) <=steps.length-1 ? 'd-none' : ''\r\n            }\r\n            onClick={() => {\r\n              onClickNext(next, steps, step);\r\n            }}\r\n          >\r\n            {nextLabel}\r\n          </Button>\r\n         \r\n\r\n          {/* hide last step button */}\r\n         {/* <Button\r\n           color=\"primary\"\r\n            className={`${steps.indexOf(step) === 2 ? 'd-none' : ''}`}\r\n            onClick={() => {\r\n              onClickNext(next, steps, step);\r\n             \r\n            }}\r\n          >\r\n            {nextLabel}\r\n          </Button>   */}\r\n\r\n\r\n            <Button \r\n            color='primary'\r\n            className={steps.indexOf(step) === 0 ? '' : 'd-none'}\r\n            onClick={() => {\r\n              onClickNext(next, steps, step);\r\n            }}\r\n          >\r\n            pay from wallet\r\n          </Button>\r\n\r\n\r\n          <Button \r\n            color='primary'\r\n            className={steps.indexOf(step) === 1 ? '' : 'd-none'}\r\n            onClick={() => {\r\n              onClickNext(next, steps, step);\r\n              if (paymentButtonType === 'payFromWallet') {\r\n                handlePayFromWallet();\r\n              }\r\n              // else{\r\n              //   handlePayFromOnline();\r\n              // }\r\n              \r\n            }}\r\n          >\r\n            {paymentButtonType === 'payFromWallet' ? 'Proceed to payment' : 'Pay remaining online'}\r\n          </Button>\r\n\r\n\r\n\r\n           <NavLink href='/app/lawyerjobslist'>\r\n           <Button \r\n            color='primary'\r\n            className={steps.indexOf(step) === steps.length-1 ? '' : 'd-none'}\r\n            onClick={() => {\r\n              onClickNext(next, steps, step);\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n           </NavLink>\r\n         \r\n\r\n\r\n          \r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n};\r\nexport default BottomNavigationWizard;\r\n","/* eslint-disable no-param-reassign */\r\nimport React, { useEffect,useState } from 'react';\r\nimport axios from 'axios';\r\nimport { baseUrl } from 'constants/defaultValues';\r\nimport { Card, CardBody, Form, FormGroup,  Label } from 'reactstrap';\r\nimport { Wizard, Steps, Step } from 'react-albus';\r\nimport { injectIntl } from 'react-intl';\r\nimport { useLocation } from 'react-router-dom';\r\nimport TopNavigation from 'components/wizard/TopNavigation';\r\nimport { Colxx } from 'components/common/CustomBootstrap';\r\n\r\nimport BottomNavigationWizard from './BottomNavigationWizard';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst PaymentWizard = ({ intl }) => {\r\n\r\n\r\n \r\n  const location = useLocation();\r\n  \r\n  const { firstName, lastName, serviceName ,amount,packageId ,lawyerId} = location.state || {};\r\n const [walletamount,setWalletAmount]=useState(\"\")\r\n\r\n  const topNavClick = (stepItem, push) => {\r\n    push(stepItem.id);\r\n  };\r\n\r\n  const onClickNext = (goToNext, steps, step) => {\r\n    step.isDone = true;\r\n    if (steps.length - 1 <= steps.indexOf(step)) {\r\n      return;\r\n    }\r\n    goToNext();\r\n  };\r\n\r\n  const onClickPrev = (goToPrev, steps, step) => {\r\n    if (steps.indexOf(step) <= 0) {\r\n      return;\r\n    }\r\n    goToPrev();\r\n  };\r\n\r\n  const getWalletAmountUrl=`${baseUrl}/api/wallet/balance`\r\n\r\n  useEffect(()=>{\r\n    \r\n    const WalletAmountGet=async()=>{\r\n        try {\r\n          \r\n            const response = await axios.get(getWalletAmountUrl);\r\n            \r\n            setWalletAmount(response.data);\r\n            console.log(response);\r\n            \r\n          } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n          }\r\n    }\r\n    WalletAmountGet();\r\n  \r\n},[getWalletAmountUrl])\r\n\r\nconst calculateBalanceAfterDeduction = () => {\r\n  if (walletamount.balance !== null) {\r\n    const balanceAfterDeduction = walletamount.balance - amount;\r\n    return balanceAfterDeduction >= 0 ? balanceAfterDeduction : 0;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst calculateRemainingAmountToPay = () => {\r\n  if (walletamount.balance !== null) {\r\n    return amount - walletamount.balance >= 0 ? amount - walletamount.balance : 0;\r\n  }\r\n  return null;\r\n};\r\n  const { messages } = intl;\r\n  return (\r\n    <Colxx lg={6} mg={6} className='mx-auto'>\r\n        <Card className='py-3'>\r\n      <CardBody className=\"wizard wizard-default\">\r\n        <Wizard>\r\n          <TopNavigation\r\n            className=\"justify-content-center\"\r\n            disableNav\r\n            topNavClick={topNavClick}\r\n          />\r\n          <Steps>\r\n            <Step\r\n              id=\"step1\"\r\n              name={messages['wizard.step-name-1']}\r\n              desc=\"payment\"\r\n            >\r\n              <div className=\"wizard-basic-step\">\r\n                <Form>\r\n                  <FormGroup>\r\n                   <div className=''>\r\n                   <h2>You are purchasing the service <strong className=''>{serviceName}</strong></h2>\r\n                     <h2> from the lawyer \r\n                     <strong> {firstName} {lastName}</strong></h2>\r\n                   </div>\r\n                  \r\n                    \r\n                  </FormGroup>\r\n\r\n                 \r\n                  <FormGroup className='w-100'>\r\n                                <div className='d-flex justify-content-between align-items-center'>\r\n                                    <Label className='text-one'>Your Package Amount</Label>\r\n                                    <Colxx lg={5} className=''>\r\n                                        <h3 className=''><span className='font-weight-bold color-theme-1'>₹{amount}</span></h3>\r\n                                    </Colxx>\r\n                                </div>\r\n                            </FormGroup>\r\n                            <FormGroup className='w-100'>\r\n                                <div className='d-flex justify-content-between align-items-center'>\r\n                                    <Label className='text-one'>Your Wallet Balance</Label>\r\n                                    <Colxx lg={5}>\r\n                                     \r\n                                        <h3 className=''><span className='font-weight-bold color-theme-1'>₹{walletamount.balance}</span></h3>\r\n                                    </Colxx>\r\n                                </div>\r\n                            </FormGroup>\r\n                            \r\n                            \r\n                </Form>\r\n              </div>\r\n            </Step>\r\n            <Step\r\n              id=\"step2\"\r\n              name={messages['wizard.step-name-2']}\r\n              desc=\"Pay from wallet\"\r\n            >\r\n              <div className=\"wizard-basic-step\">\r\n              {walletamount.balance>amount?(\r\n                <Form>\r\n                <FormGroup className='w-100'>\r\n                                <div className='d-flex justify-content-between align-items-center'>\r\n                                    <Label className='text-one'>Your Package Amount</Label>\r\n                                    <Colxx lg={5} className=''>\r\n                                        <h3 className=''><span className='font-weight-bold color-theme-1'>₹{amount}</span></h3>\r\n                                    </Colxx>\r\n                                </div>\r\n                            </FormGroup>\r\n                            <FormGroup className='w-100'>\r\n                            \r\n                                <div className='d-flex justify-content-between align-items-center'>\r\n                                    <Label className='text-one'>Your Wallet Balance</Label>\r\n                                    <Colxx lg={5}>\r\n                                     \r\n                                        <h3 className=''><span className='font-weight-bold color-theme-1'>₹{walletamount.balance}</span></h3>\r\n                                    </Colxx>\r\n                                </div>\r\n                            </FormGroup>\r\n                            <FormGroup className='w-100'>\r\n                                <div className='d-flex justify-content-between align-items-center'>\r\n                                    <Label className='text-one'>Your Balance after deduction</Label>\r\n                                    <Colxx lg={5}>\r\n                                     \r\n                                        <h3 className=''><span className='font-weight-bold color-theme-1'>\r\n                                        {calculateBalanceAfterDeduction() !== null ? `₹${calculateBalanceAfterDeduction()}` : 'Loading...'}</span></h3>\r\n                                      \r\n                                      \r\n                                    </Colxx>\r\n                                    \r\n                                </div>\r\n                               \r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                            <div>\r\n                                  <h3 className='text-one text-muted'>Do you want to pay</h3>\r\n                                </div>\r\n                            </FormGroup>\r\n                </Form>\r\n              ):(\r\n                <Form>\r\n                <FormGroup className='w-100'>\r\n                                <div className='d-flex justify-content-between align-items-center'>\r\n                                    <Label className='text-one'>Your Package Amount</Label>\r\n                                    <Colxx lg={5} className=''>\r\n                                        <h3 className=''><span className='font-weight-bold color-theme-1'>₹{amount}</span></h3>\r\n                                    </Colxx>\r\n                                </div>\r\n                            </FormGroup>\r\n                            <FormGroup className='w-100'>\r\n                            \r\n                                <div className='d-flex justify-content-between align-items-center'>\r\n                                    <Label className='text-one'>Your Wallet Balance</Label>\r\n                                    <Colxx lg={5}>\r\n                                     \r\n                                        <h3 className=''><span className='font-weight-bold color-theme-1'>₹{walletamount.balance}</span></h3>\r\n                                    </Colxx>\r\n                                </div>\r\n                            </FormGroup>\r\n                            <FormGroup className='w-100'>\r\n                                <div className='d-flex justify-content-between align-items-center'>\r\n                                    <Label className='text-one'>Remaining amount to pay</Label>\r\n                                    <Colxx lg={5}>\r\n                                     \r\n                                        <h3 className=''><span className='font-weight-bold color-theme-1'>\r\n                                        ₹{calculateRemainingAmountToPay() !== null ? calculateRemainingAmountToPay() : 'Loading...'}\r\n                                       </span></h3>\r\n                                      \r\n                                      \r\n                                    </Colxx>\r\n                                    \r\n                                </div>\r\n                               \r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                            <div>\r\n                                  <h3 className='text-one text-muted'>Do you want to pay</h3>\r\n                                </div>\r\n                            </FormGroup>\r\n                </Form>\r\n              )\r\n              }\r\n                \r\n               \r\n              </div>\r\n            </Step>\r\n            {/* <Step\r\n              id=\"step3\"\r\n              name={messages['wizard.step-name-3']}\r\n              desc={messages['wizard.step-desc-3']}\r\n            >\r\n              <div className=\"wizard-basic-step\">\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label>\r\n                      sss\r\n                    </Label>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder={messages['forms.password']}\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n            </Step> */}\r\n            <Step id=\"step4\" hideTopNav>\r\n            <div className=\"wizard-basic-step text-center\">\r\n                <h2 className=\"mt-4\">\r\n                 \r\n                Your Payment is successfull\r\n                </h2>\r\n                {/* <p>\r\n                 \r\n                  Thank you\r\n                </p> */}\r\n              </div>\r\n            </Step>\r\n          </Steps>\r\n          <BottomNavigationWizard\r\n            onClickNext={onClickNext}\r\n            onClickPrev={onClickPrev}\r\n            className=\"justify-content-center\"\r\n            prevLabel=\"Back\"\r\n            nextLabel=\"Next\"\r\n            packageId={packageId}\r\n            lawyerId={lawyerId}\r\n            paymentButtonType={walletamount.balance > amount ? 'payFromWallet' : 'payRemaining'}\r\n/>\r\n          \r\n        </Wizard>\r\n      </CardBody>\r\n    </Card>\r\n    </Colxx>\r\n  \r\n  );\r\n};\r\n\r\nexport default injectIntl(PaymentWizard);\r\n"],"sourceRoot":""}