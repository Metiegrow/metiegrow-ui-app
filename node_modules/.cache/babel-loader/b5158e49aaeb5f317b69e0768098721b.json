{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n/*\r\n * Copyright 2015, Yahoo Inc.\r\n * Copyrights licensed under the New BSD License.\r\n * See the accompanying LICENSE file for terms.\r\n */\n\nimport * as React from 'react';\nimport { invariant } from '@formatjs/ecma402-abstract';\nimport useIntl from './useIntl';\nvar MINUTE = 60;\nvar HOUR = 60 * 60;\nvar DAY = 60 * 60 * 24;\n\nfunction selectUnit(seconds) {\n  var absValue = Math.abs(seconds);\n\n  if (absValue < MINUTE) {\n    return 'second';\n  }\n\n  if (absValue < HOUR) {\n    return 'minute';\n  }\n\n  if (absValue < DAY) {\n    return 'hour';\n  }\n\n  return 'day';\n}\n\nfunction getDurationInSeconds(unit) {\n  switch (unit) {\n    case 'second':\n      return 1;\n\n    case 'minute':\n      return MINUTE;\n\n    case 'hour':\n      return HOUR;\n\n    default:\n      return DAY;\n  }\n}\n\nfunction valueToSeconds(value, unit) {\n  if (!value) {\n    return 0;\n  }\n\n  switch (unit) {\n    case 'second':\n      return value;\n\n    case 'minute':\n      return value * MINUTE;\n\n    default:\n      return value * HOUR;\n  }\n}\n\nvar INCREMENTABLE_UNITS = ['second', 'minute', 'hour'];\n\nfunction canIncrement(unit) {\n  if (unit === void 0) {\n    unit = 'second';\n  }\n\n  return INCREMENTABLE_UNITS.includes(unit);\n}\n\nvar SimpleFormattedRelativeTime = function SimpleFormattedRelativeTime(props) {\n  var _a = useIntl(),\n      formatRelativeTime = _a.formatRelativeTime,\n      Text = _a.textComponent;\n\n  var children = props.children,\n      value = props.value,\n      unit = props.unit,\n      otherProps = __rest(props, [\"children\", \"value\", \"unit\"]);\n\n  var formattedRelativeTime = formatRelativeTime(value || 0, unit, otherProps);\n\n  if (typeof children === 'function') {\n    return children(formattedRelativeTime);\n  }\n\n  if (Text) {\n    return React.createElement(Text, null, formattedRelativeTime);\n  }\n\n  return React.createElement(React.Fragment, null, formattedRelativeTime);\n};\n\nvar FormattedRelativeTime = function FormattedRelativeTime(_a) {\n  var value = _a.value,\n      unit = _a.unit,\n      updateIntervalInSeconds = _a.updateIntervalInSeconds,\n      otherProps = __rest(_a, [\"value\", \"unit\", \"updateIntervalInSeconds\"]);\n\n  invariant(!updateIntervalInSeconds || !!(updateIntervalInSeconds && canIncrement(unit)), 'Cannot schedule update with unit longer than hour');\n\n  var _b = React.useState(),\n      prevUnit = _b[0],\n      setPrevUnit = _b[1];\n\n  var _c = React.useState(0),\n      prevValue = _c[0],\n      setPrevValue = _c[1];\n\n  var _d = React.useState(0),\n      currentValueInSeconds = _d[0],\n      setCurrentValueInSeconds = _d[1];\n\n  var updateTimer;\n\n  if (unit !== prevUnit || value !== prevValue) {\n    setPrevValue(value || 0);\n    setPrevUnit(unit);\n    setCurrentValueInSeconds(canIncrement(unit) ? valueToSeconds(value, unit) : 0);\n  }\n\n  React.useEffect(function () {\n    function clearUpdateTimer() {\n      clearTimeout(updateTimer);\n    }\n\n    clearUpdateTimer(); // If there's no interval and we cannot increment this unit, do nothing\n\n    if (!updateIntervalInSeconds || !canIncrement(unit)) {\n      return clearUpdateTimer;\n    } // Figure out the next interesting time\n\n\n    var nextValueInSeconds = currentValueInSeconds - updateIntervalInSeconds;\n    var nextUnit = selectUnit(nextValueInSeconds); // We've reached the max auto incrementable unit, don't schedule another update\n\n    if (nextUnit === 'day') {\n      return clearUpdateTimer;\n    }\n\n    var unitDuration = getDurationInSeconds(nextUnit);\n    var remainder = nextValueInSeconds % unitDuration;\n    var prevInterestingValueInSeconds = nextValueInSeconds - remainder;\n    var nextInterestingValueInSeconds = prevInterestingValueInSeconds >= currentValueInSeconds ? prevInterestingValueInSeconds - unitDuration : prevInterestingValueInSeconds;\n    var delayInSeconds = Math.abs(nextInterestingValueInSeconds - currentValueInSeconds);\n\n    if (currentValueInSeconds !== nextInterestingValueInSeconds) {\n      updateTimer = setTimeout(function () {\n        return setCurrentValueInSeconds(nextInterestingValueInSeconds);\n      }, delayInSeconds * 1e3);\n    }\n\n    return clearUpdateTimer;\n  }, [currentValueInSeconds, updateIntervalInSeconds, unit]);\n  var currentValue = value || 0;\n  var currentUnit = unit;\n\n  if (canIncrement(unit) && typeof currentValueInSeconds === 'number' && updateIntervalInSeconds) {\n    currentUnit = selectUnit(currentValueInSeconds);\n    var unitDuration = getDurationInSeconds(currentUnit);\n    currentValue = Math.round(currentValueInSeconds / unitDuration);\n  }\n\n  return React.createElement(SimpleFormattedRelativeTime, __assign({\n    value: currentValue,\n    unit: currentUnit\n  }, otherProps));\n};\n\nFormattedRelativeTime.displayName = 'FormattedRelativeTime';\nFormattedRelativeTime.defaultProps = {\n  value: 0,\n  unit: 'second'\n};\nexport default FormattedRelativeTime;","map":{"version":3,"names":["__assign","__rest","React","invariant","useIntl","MINUTE","HOUR","DAY","selectUnit","seconds","absValue","Math","abs","getDurationInSeconds","unit","valueToSeconds","value","INCREMENTABLE_UNITS","canIncrement","includes","SimpleFormattedRelativeTime","props","_a","formatRelativeTime","Text","textComponent","children","otherProps","formattedRelativeTime","createElement","Fragment","FormattedRelativeTime","updateIntervalInSeconds","_b","useState","prevUnit","setPrevUnit","_c","prevValue","setPrevValue","_d","currentValueInSeconds","setCurrentValueInSeconds","updateTimer","useEffect","clearUpdateTimer","clearTimeout","nextValueInSeconds","nextUnit","unitDuration","remainder","prevInterestingValueInSeconds","nextInterestingValueInSeconds","delayInSeconds","setTimeout","currentValue","currentUnit","round","displayName","defaultProps"],"sources":["C:/suresh/project-two/metiegrow-ui-app/node_modules/react-intl/lib/src/components/relative.js"],"sourcesContent":["import { __assign, __rest } from \"tslib\";\r\n/*\r\n * Copyright 2015, Yahoo Inc.\r\n * Copyrights licensed under the New BSD License.\r\n * See the accompanying LICENSE file for terms.\r\n */\r\nimport * as React from 'react';\r\nimport { invariant, } from '@formatjs/ecma402-abstract';\r\nimport useIntl from './useIntl';\r\nvar MINUTE = 60;\r\nvar HOUR = 60 * 60;\r\nvar DAY = 60 * 60 * 24;\r\nfunction selectUnit(seconds) {\r\n    var absValue = Math.abs(seconds);\r\n    if (absValue < MINUTE) {\r\n        return 'second';\r\n    }\r\n    if (absValue < HOUR) {\r\n        return 'minute';\r\n    }\r\n    if (absValue < DAY) {\r\n        return 'hour';\r\n    }\r\n    return 'day';\r\n}\r\nfunction getDurationInSeconds(unit) {\r\n    switch (unit) {\r\n        case 'second':\r\n            return 1;\r\n        case 'minute':\r\n            return MINUTE;\r\n        case 'hour':\r\n            return HOUR;\r\n        default:\r\n            return DAY;\r\n    }\r\n}\r\nfunction valueToSeconds(value, unit) {\r\n    if (!value) {\r\n        return 0;\r\n    }\r\n    switch (unit) {\r\n        case 'second':\r\n            return value;\r\n        case 'minute':\r\n            return value * MINUTE;\r\n        default:\r\n            return value * HOUR;\r\n    }\r\n}\r\nvar INCREMENTABLE_UNITS = [\r\n    'second',\r\n    'minute',\r\n    'hour',\r\n];\r\nfunction canIncrement(unit) {\r\n    if (unit === void 0) { unit = 'second'; }\r\n    return INCREMENTABLE_UNITS.includes(unit);\r\n}\r\nvar SimpleFormattedRelativeTime = function (props) {\r\n    var _a = useIntl(), formatRelativeTime = _a.formatRelativeTime, Text = _a.textComponent;\r\n    var children = props.children, value = props.value, unit = props.unit, otherProps = __rest(props, [\"children\", \"value\", \"unit\"]);\r\n    var formattedRelativeTime = formatRelativeTime(value || 0, unit, otherProps);\r\n    if (typeof children === 'function') {\r\n        return children(formattedRelativeTime);\r\n    }\r\n    if (Text) {\r\n        return React.createElement(Text, null, formattedRelativeTime);\r\n    }\r\n    return React.createElement(React.Fragment, null, formattedRelativeTime);\r\n};\r\nvar FormattedRelativeTime = function (_a) {\r\n    var value = _a.value, unit = _a.unit, updateIntervalInSeconds = _a.updateIntervalInSeconds, otherProps = __rest(_a, [\"value\", \"unit\", \"updateIntervalInSeconds\"]);\r\n    invariant(!updateIntervalInSeconds ||\r\n        !!(updateIntervalInSeconds && canIncrement(unit)), 'Cannot schedule update with unit longer than hour');\r\n    var _b = React.useState(), prevUnit = _b[0], setPrevUnit = _b[1];\r\n    var _c = React.useState(0), prevValue = _c[0], setPrevValue = _c[1];\r\n    var _d = React.useState(0), currentValueInSeconds = _d[0], setCurrentValueInSeconds = _d[1];\r\n    var updateTimer;\r\n    if (unit !== prevUnit || value !== prevValue) {\r\n        setPrevValue(value || 0);\r\n        setPrevUnit(unit);\r\n        setCurrentValueInSeconds(canIncrement(unit) ? valueToSeconds(value, unit) : 0);\r\n    }\r\n    React.useEffect(function () {\r\n        function clearUpdateTimer() {\r\n            clearTimeout(updateTimer);\r\n        }\r\n        clearUpdateTimer();\r\n        // If there's no interval and we cannot increment this unit, do nothing\r\n        if (!updateIntervalInSeconds || !canIncrement(unit)) {\r\n            return clearUpdateTimer;\r\n        }\r\n        // Figure out the next interesting time\r\n        var nextValueInSeconds = currentValueInSeconds - updateIntervalInSeconds;\r\n        var nextUnit = selectUnit(nextValueInSeconds);\r\n        // We've reached the max auto incrementable unit, don't schedule another update\r\n        if (nextUnit === 'day') {\r\n            return clearUpdateTimer;\r\n        }\r\n        var unitDuration = getDurationInSeconds(nextUnit);\r\n        var remainder = nextValueInSeconds % unitDuration;\r\n        var prevInterestingValueInSeconds = nextValueInSeconds - remainder;\r\n        var nextInterestingValueInSeconds = prevInterestingValueInSeconds >= currentValueInSeconds\r\n            ? prevInterestingValueInSeconds - unitDuration\r\n            : prevInterestingValueInSeconds;\r\n        var delayInSeconds = Math.abs(nextInterestingValueInSeconds - currentValueInSeconds);\r\n        if (currentValueInSeconds !== nextInterestingValueInSeconds) {\r\n            updateTimer = setTimeout(function () { return setCurrentValueInSeconds(nextInterestingValueInSeconds); }, delayInSeconds * 1e3);\r\n        }\r\n        return clearUpdateTimer;\r\n    }, [currentValueInSeconds, updateIntervalInSeconds, unit]);\r\n    var currentValue = value || 0;\r\n    var currentUnit = unit;\r\n    if (canIncrement(unit) &&\r\n        typeof currentValueInSeconds === 'number' &&\r\n        updateIntervalInSeconds) {\r\n        currentUnit = selectUnit(currentValueInSeconds);\r\n        var unitDuration = getDurationInSeconds(currentUnit);\r\n        currentValue = Math.round(currentValueInSeconds / unitDuration);\r\n    }\r\n    return (React.createElement(SimpleFormattedRelativeTime, __assign({ value: currentValue, unit: currentUnit }, otherProps)));\r\n};\r\nFormattedRelativeTime.displayName = 'FormattedRelativeTime';\r\nFormattedRelativeTime.defaultProps = {\r\n    value: 0,\r\n    unit: 'second',\r\n};\r\nexport default FormattedRelativeTime;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}