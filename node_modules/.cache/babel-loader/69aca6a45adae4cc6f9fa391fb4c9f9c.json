{"ast":null,"code":"/*\r\n * Copyright 2015, Yahoo Inc.\r\n * Copyrights licensed under the New BSD License.\r\n * See the accompanying LICENSE file for terms.\r\n */\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nimport { shallowEqual } from '../utils';\n\nfunction areEqual(prevProps, nextProps) {\n  var values = prevProps.values,\n      otherProps = __rest(prevProps, [\"values\"]);\n\n  var nextValues = nextProps.values,\n      nextOtherProps = __rest(nextProps, [\"values\"]);\n\n  return shallowEqual(nextValues, values) && shallowEqual(otherProps, nextOtherProps);\n}\n\nfunction FormattedMessage(props) {\n  var intl = useIntl();\n  var formatMessage = intl.formatMessage,\n      _a = intl.textComponent,\n      Text = _a === void 0 ? React.Fragment : _a;\n  var id = props.id,\n      description = props.description,\n      defaultMessage = props.defaultMessage,\n      values = props.values,\n      children = props.children,\n      _b = props.tagName,\n      Component = _b === void 0 ? Text : _b,\n      ignoreTag = props.ignoreTag;\n  var descriptor = {\n    id: id,\n    description: description,\n    defaultMessage: defaultMessage\n  };\n  var nodes = formatMessage(descriptor, values, {\n    ignoreTag: ignoreTag\n  });\n\n  if (!Array.isArray(nodes)) {\n    nodes = [nodes];\n  }\n\n  if (typeof children === 'function') {\n    return children(nodes);\n  }\n\n  if (Component) {\n    return React.createElement(Component, null, React.Children.toArray(nodes));\n  }\n\n  return React.createElement(React.Fragment, null, nodes);\n}\n\nFormattedMessage.displayName = 'FormattedMessage';\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\nexport default MemoizedFormattedMessage;","map":{"version":3,"names":["__rest","React","useIntl","shallowEqual","areEqual","prevProps","nextProps","values","otherProps","nextValues","nextOtherProps","FormattedMessage","props","intl","formatMessage","_a","textComponent","Text","Fragment","id","description","defaultMessage","children","_b","tagName","Component","ignoreTag","descriptor","nodes","Array","isArray","createElement","Children","toArray","displayName","MemoizedFormattedMessage","memo"],"sources":["C:/suresh/project-two/metiegrow-ui-app/node_modules/react-intl/lib/src/components/message.js"],"sourcesContent":["/*\r\n * Copyright 2015, Yahoo Inc.\r\n * Copyrights licensed under the New BSD License.\r\n * See the accompanying LICENSE file for terms.\r\n */\r\nimport { __rest } from \"tslib\";\r\nimport * as React from 'react';\r\nimport useIntl from './useIntl';\r\nimport { shallowEqual } from '../utils';\r\nfunction areEqual(prevProps, nextProps) {\r\n    var values = prevProps.values, otherProps = __rest(prevProps, [\"values\"]);\r\n    var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\r\n    return (shallowEqual(nextValues, values) &&\r\n        shallowEqual(otherProps, nextOtherProps));\r\n}\r\nfunction FormattedMessage(props) {\r\n    var intl = useIntl();\r\n    var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\r\n    var id = props.id, description = props.description, defaultMessage = props.defaultMessage, values = props.values, children = props.children, _b = props.tagName, Component = _b === void 0 ? Text : _b, ignoreTag = props.ignoreTag;\r\n    var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\r\n    var nodes = formatMessage(descriptor, values, {\r\n        ignoreTag: ignoreTag,\r\n    });\r\n    if (!Array.isArray(nodes)) {\r\n        nodes = [nodes];\r\n    }\r\n    if (typeof children === 'function') {\r\n        return children(nodes);\r\n    }\r\n    if (Component) {\r\n        return React.createElement(Component, null, React.Children.toArray(nodes));\r\n    }\r\n    return React.createElement(React.Fragment, null, nodes);\r\n}\r\nFormattedMessage.displayName = 'FormattedMessage';\r\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\r\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\r\nexport default MemoizedFormattedMessage;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,YAAT,QAA6B,UAA7B;;AACA,SAASC,QAAT,CAAkBC,SAAlB,EAA6BC,SAA7B,EAAwC;EACpC,IAAIC,MAAM,GAAGF,SAAS,CAACE,MAAvB;EAAA,IAA+BC,UAAU,GAAGR,MAAM,CAACK,SAAD,EAAY,CAAC,QAAD,CAAZ,CAAlD;;EACA,IAAII,UAAU,GAAGH,SAAS,CAACC,MAA3B;EAAA,IAAmCG,cAAc,GAAGV,MAAM,CAACM,SAAD,EAAY,CAAC,QAAD,CAAZ,CAA1D;;EACA,OAAQH,YAAY,CAACM,UAAD,EAAaF,MAAb,CAAZ,IACJJ,YAAY,CAACK,UAAD,EAAaE,cAAb,CADhB;AAEH;;AACD,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;EAC7B,IAAIC,IAAI,GAAGX,OAAO,EAAlB;EACA,IAAIY,aAAa,GAAGD,IAAI,CAACC,aAAzB;EAAA,IAAwCC,EAAE,GAAGF,IAAI,CAACG,aAAlD;EAAA,IAAiEC,IAAI,GAAGF,EAAE,KAAK,KAAK,CAAZ,GAAgBd,KAAK,CAACiB,QAAtB,GAAiCH,EAAzG;EACA,IAAII,EAAE,GAAGP,KAAK,CAACO,EAAf;EAAA,IAAmBC,WAAW,GAAGR,KAAK,CAACQ,WAAvC;EAAA,IAAoDC,cAAc,GAAGT,KAAK,CAACS,cAA3E;EAAA,IAA2Fd,MAAM,GAAGK,KAAK,CAACL,MAA1G;EAAA,IAAkHe,QAAQ,GAAGV,KAAK,CAACU,QAAnI;EAAA,IAA6IC,EAAE,GAAGX,KAAK,CAACY,OAAxJ;EAAA,IAAiKC,SAAS,GAAGF,EAAE,KAAK,KAAK,CAAZ,GAAgBN,IAAhB,GAAuBM,EAApM;EAAA,IAAwMG,SAAS,GAAGd,KAAK,CAACc,SAA1N;EACA,IAAIC,UAAU,GAAG;IAAER,EAAE,EAAEA,EAAN;IAAUC,WAAW,EAAEA,WAAvB;IAAoCC,cAAc,EAAEA;EAApD,CAAjB;EACA,IAAIO,KAAK,GAAGd,aAAa,CAACa,UAAD,EAAapB,MAAb,EAAqB;IAC1CmB,SAAS,EAAEA;EAD+B,CAArB,CAAzB;;EAGA,IAAI,CAACG,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAL,EAA2B;IACvBA,KAAK,GAAG,CAACA,KAAD,CAAR;EACH;;EACD,IAAI,OAAON,QAAP,KAAoB,UAAxB,EAAoC;IAChC,OAAOA,QAAQ,CAACM,KAAD,CAAf;EACH;;EACD,IAAIH,SAAJ,EAAe;IACX,OAAOxB,KAAK,CAAC8B,aAAN,CAAoBN,SAApB,EAA+B,IAA/B,EAAqCxB,KAAK,CAAC+B,QAAN,CAAeC,OAAf,CAAuBL,KAAvB,CAArC,CAAP;EACH;;EACD,OAAO3B,KAAK,CAAC8B,aAAN,CAAoB9B,KAAK,CAACiB,QAA1B,EAAoC,IAApC,EAA0CU,KAA1C,CAAP;AACH;;AACDjB,gBAAgB,CAACuB,WAAjB,GAA+B,kBAA/B;AACA,IAAIC,wBAAwB,GAAGlC,KAAK,CAACmC,IAAN,CAAWzB,gBAAX,EAA6BP,QAA7B,CAA/B;AACA+B,wBAAwB,CAACD,WAAzB,GAAuC,0BAAvC;AACA,eAAeC,wBAAf"},"metadata":{},"sourceType":"module"}