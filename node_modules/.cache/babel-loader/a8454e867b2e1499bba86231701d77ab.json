{"ast":null,"code":"// /* eslint-disable */\n// import axios from 'axios';\n// import { baseUrl } from '../constants/defaultValues';\n// export const authService = {\n//   async signUp(email, password, name, role) {\n//     localStorage.clear();\n//     const bodyData = JSON.stringify({\n//       username: name,\n//       password: password,\n//       email: email,\n//       userType: role,\n//     });\n//     const url = `${baseUrl}signUp`;\n//     try {\n//       return await axios\n//         .post(url, bodyData)\n//         .then((res) => {\n//           console.log(res);\n//           return res;\n//         })\n//         .catch((error) => {\n//           console.log('ERR:: ', error);\n//           if (error.response) {\n//             console.log('ERR:response: ', error);\n//           } else if (error.request) {\n//             console.log('ERR:request: ', error);\n//           } else if (error.message) {\n//             console.log('ERR:message: ', error);\n//           }\n//           throw error;\n//         });\n//     } catch (e) {\n//       return e;\n//     }\n//   },\n//   async login(email, password) {\n//     localStorage.clear();\n//     const bodyData = JSON.stringify({\n//       username: email,\n//       password: password,\n//     });\n//     const url = `${baseUrl}signIn`;\n//     try {\n//       return await axios\n//         .post(url, bodyData)\n//         .then((res) => {\n//           console.log(res);\n//           console.log(res.data.data.userType);\n//           localStorage.setItem('userType', res.data.data.userType);\n//           return res;\n//         })\n//         .catch((error) => {\n//           throw error;\n//         });\n//     } catch (e) {\n//       return e;\n//     }\n//   },\n// };\n// export default authService;","map":{"version":3,"names":[],"sources":["C:/Users/Broz Asus/Desktop/Project/Project 2/metiegrow-ui-app/src/services/authservice.js"],"sourcesContent":["// /* eslint-disable */\r\n\r\n// import axios from 'axios';\r\n\r\n// import { baseUrl } from '../constants/defaultValues';\r\n\r\n// export const authService = {\r\n//   async signUp(email, password, name, role) {\r\n//     localStorage.clear();\r\n//     const bodyData = JSON.stringify({\r\n//       username: name,\r\n//       password: password,\r\n//       email: email,\r\n//       userType: role,\r\n//     });\r\n    \r\n//     const url = `${baseUrl}signUp`;\r\n//     try {\r\n//       return await axios\r\n//         .post(url, bodyData)\r\n//         .then((res) => {\r\n//           console.log(res);\r\n//           return res;\r\n//         })\r\n//         .catch((error) => {\r\n//           console.log('ERR:: ', error);\r\n//           if (error.response) {\r\n//             console.log('ERR:response: ', error);\r\n//           } else if (error.request) {\r\n//             console.log('ERR:request: ', error);\r\n//           } else if (error.message) {\r\n//             console.log('ERR:message: ', error);\r\n//           }\r\n//           throw error;\r\n//         });\r\n//     } catch (e) {\r\n//       return e;\r\n//     }\r\n//   },\r\n\r\n//   async login(email, password) {\r\n//     localStorage.clear();\r\n//     const bodyData = JSON.stringify({\r\n//       username: email,\r\n//       password: password,\r\n//     });\r\n//     const url = `${baseUrl}signIn`;\r\n//     try {\r\n//       return await axios\r\n//         .post(url, bodyData)\r\n//         .then((res) => {\r\n//           console.log(res);\r\n//           console.log(res.data.data.userType);\r\n//           localStorage.setItem('userType', res.data.data.userType);\r\n\r\n//           return res;\r\n//         })\r\n//         .catch((error) => {\r\n//           throw error;\r\n//         });\r\n//     } catch (e) {\r\n//       return e;\r\n//     }\r\n//   },\r\n// };\r\n\r\n// export default authService;\r\n"],"mappings":"AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}