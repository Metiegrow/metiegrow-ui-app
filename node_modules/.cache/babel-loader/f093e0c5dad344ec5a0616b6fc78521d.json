{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { Row, Card, CardTitle, Label, FormGroup, Button } from 'reactstrap';\n// import { NavLink } from 'react-router-dom';\n// import { connect } from 'react-redux';\n// import { Formik, Form, Field } from 'formik';\n// import { NotificationManager } from 'components/common/react-notifications';\n// import { loginUser } from 'redux/actions';\n// import { Colxx } from 'components/common/CustomBootstrap';\n// import IntlMessages from 'helpers/IntlMessages';\n// // import axios from 'axios';\n// // import { baseUrl } from 'constants/defaultValues';\n// import { authService } from 'services/authservice';\n// // import { connect } from 'react-redux';\n// // check\n// // ck\n// const validatePassword = (value) => {\n//   let authError;\n//   if (!value) {\n//     authError = 'Please enter your password';\n//   } else if (value.length < 4) {\n//     authError = 'Value must be longer than 3 characters';\n//   }\n//   return authError;\n// };\n// const validateEmail = (value) => {\n//   let authError;\n//   if (!value) {\n//     authError = 'Please enter your email address';\n//   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n//     authError = 'Invalid email address';\n//   }\n//   return authError;\n// };\n// const Login = ({ history, loading, authError, loginUserAction }) => {\n//   // const [user, setUser] = useState({\n//   //   username: '',\n//   //   password: '',\n//   // });\n//   // function handleChange(value, event) {\n//   //   switch (value) {\n//   //     case 'username':\n//   //       setUser((props) => {\n//   //         return {\n//   //           ...props,\n//   //           username: event.target.value,\n//   //         };\n//   //       });\n//   //       break;\n//   //     case 'password':\n//   //       setUser((props) => {\n//   //         return {\n//   //           ...props,\n//   //           password: event.target.value,\n//   //         };\n//   //       });\n//   //       break;\n//   //     default:\n//   //       break;\n//   //   }\n//   // }\n//   const [email] = useState('vssivanesh@gmail.com');\n//   const [password] = useState('sivanesh');\n//   useEffect(() => {\n//     if (authError) {\n//       NotificationManager.warning(authError, 'Login Error', 3000, null, null, '');\n//     }\n//   }, [authError]);\n//   // const getStudents = () => {\n//   //   axios.get(`${baseUrl}/student/personal/info`).then((res) => {\n//   //     console.log(res);\n//   //   });\n//   // };\n//   const onUserLogin = async  (values) => {\n//     if (!loading) {\n//       if (values.email !== '' && values.password !== '') {\n//         try{\n//         const loginResponse = await authService.login(values.email, values.password);\n//         console.log(loginResponse);\n//         // axios\n//         //   .post(`${baseUrl}/signIn`, {\n//         //     username: 'test.student1', //  values.email,\n//         //     password: 'student1', // values.password,\n//         //   })\n//         //   .then((response) => {\n//         //     console.log(response);\n//         //     console.log(response.data.data.token);\n//         //     localStorage.setItem('AUTH_TOKEN', response.data.data.token);\n//         //     getStudents();\n//         //   })\n//         //   .catch((err) => {\n//         //     console.log(err);\n//         //   });\n//         // console.log(values, history);\n//         loginUserAction(values, history);\n//         }\n//         catch (error) {\n//           console.error('Login error:', error);\n//         }\n//       } \n//     }\n//   };\n//   const initialValues = { email, password };\n//   return (\n//     <Row className=\"h-100\">\n//       <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\n//         <Card className=\"auth-card\">\n//           <div className=\"position-relative image-side \">\n//             <p className=\"text-white h2\">MAGIC IS IN THE DETAILS</p>\n//             <p className=\"white mb-0\">\n//               Please use your credentials to login.\n//               <br />\n//               If you are not a member, please{' '}\n//               <NavLink to=\"/user/register\" className=\"white\">\n//                 register\n//               </NavLink>\n//               .\n//             </p>\n//           </div>\n//           <div className=\"form-side\">\n//             <NavLink to=\"/\" className=\"white\">\n//               <span className=\"logo-single\" />\n//             </NavLink>\n//             <CardTitle className=\"mb-4\">\n//               <IntlMessages id=\"user.login-title\" />\n//             </CardTitle>\n//             <Formik initialValues={initialValues} onSubmit={onUserLogin}>\n//               {({ errors, touched }) => (\n//                 <Form className=\"av-tooltip tooltip-label-bottom\">\n//                   <FormGroup className=\"form-group has-float-label\">\n//                     <Label>\n//                       <IntlMessages id=\"user.email\" />\n//                     </Label>\n//                     <Field\n//                       className=\"form-control\"\n//                       name=\"email\"\n//                       validate={validateEmail}\n//                     />\n//                     {errors.email && touched.email && (\n//                       <div className=\"invalid-feedback d-block\">\n//                         {errors.email}\n//                       </div>\n//                     )}\n//                   </FormGroup>\n//                   <FormGroup className=\"form-group has-float-label\">\n//                     <Label>\n//                       <IntlMessages id=\"user.password\" />\n//                     </Label>\n//                     <Field\n//                       className=\"form-control\"\n//                       type=\"password\"\n//                       name=\"password\"\n//                       validate={validatePassword}\n//                     />\n//                     {errors.password && touched.password && (\n//                       <div className=\"invalid-feedback d-block\">\n//                         {errors.password}\n//                       </div>\n//                     )}\n//                   </FormGroup>\n//                   <div className=\"d-flex justify-content-between align-items-center\">\n//                     <NavLink to=\"/user/forgot-password\">\n//                       <IntlMessages id=\"user.forgot-password-question\" />\n//                     </NavLink>\n//                     <Button\n//                       type='submit'\n//                       color=\"primary\"\n//                       className={`btn-shadow btn-multiple-state ${\n//                         loading ? 'show-spinner' : ''\n//                       }`}\n//                       size=\"lg\"\n//                     >\n//                       <span className=\"spinner d-inline-block\">\n//                         <span className=\"bounce1\" />\n//                         <span className=\"bounce2\" />\n//                         <span className=\"bounce3\" />\n//                       </span>\n//                       <span className=\"label\">\n//                         <IntlMessages id=\"user.login-button\" />\n//                       </span>\n//                     </Button>\n//                   </div>\n//                 </Form>\n//               )}\n//             </Formik>\n//           </div>\n//         </Card>\n//       </Colxx>\n//     </Row>\n//   );\n// };\n// const mapStateToProps = ({ authUser }) => {\n//   const { loading, error } = authUser;\n//   return { loading, error };\n// };\n// export default connect(mapStateToProps, {\n//   loginUserAction: loginUser,\n// })(Login);","map":{"version":3,"names":[],"sources":["C:/Users/Broz Asus/Desktop/Project/Project 2/metiegrow-ui-app/src/views/user/login.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Row, Card, CardTitle, Label, FormGroup, Button } from 'reactstrap';\r\n// import { NavLink } from 'react-router-dom';\r\n// import { connect } from 'react-redux';\r\n// import { Formik, Form, Field } from 'formik';\r\n// import { NotificationManager } from 'components/common/react-notifications';\r\n// import { loginUser } from 'redux/actions';\r\n// import { Colxx } from 'components/common/CustomBootstrap';\r\n// import IntlMessages from 'helpers/IntlMessages';\r\n// // import axios from 'axios';\r\n// // import { baseUrl } from 'constants/defaultValues';\r\n// import { authService } from 'services/authservice';\r\n// // import { connect } from 'react-redux';\r\n\r\n\r\n// // check\r\n// // ck\r\n\r\n// const validatePassword = (value) => {\r\n//   let authError;\r\n//   if (!value) {\r\n//     authError = 'Please enter your password';\r\n//   } else if (value.length < 4) {\r\n//     authError = 'Value must be longer than 3 characters';\r\n//   }\r\n//   return authError;\r\n// };\r\n\r\n// const validateEmail = (value) => {\r\n//   let authError;\r\n//   if (!value) {\r\n//     authError = 'Please enter your email address';\r\n//   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n//     authError = 'Invalid email address';\r\n//   }\r\n//   return authError;\r\n// };\r\n\r\n// const Login = ({ history, loading, authError, loginUserAction }) => {\r\n//   // const [user, setUser] = useState({\r\n//   //   username: '',\r\n//   //   password: '',\r\n//   // });\r\n\r\n//   // function handleChange(value, event) {\r\n//   //   switch (value) {\r\n//   //     case 'username':\r\n//   //       setUser((props) => {\r\n//   //         return {\r\n//   //           ...props,\r\n//   //           username: event.target.value,\r\n//   //         };\r\n//   //       });\r\n\r\n//   //       break;\r\n//   //     case 'password':\r\n//   //       setUser((props) => {\r\n//   //         return {\r\n//   //           ...props,\r\n//   //           password: event.target.value,\r\n//   //         };\r\n//   //       });\r\n//   //       break;\r\n\r\n//   //     default:\r\n//   //       break;\r\n//   //   }\r\n//   // }\r\n//   const [email] = useState('vssivanesh@gmail.com');\r\n//   const [password] = useState('sivanesh');\r\n\r\n//   useEffect(() => {\r\n//     if (authError) {\r\n//       NotificationManager.warning(authError, 'Login Error', 3000, null, null, '');\r\n//     }\r\n//   }, [authError]);\r\n\r\n//   // const getStudents = () => {\r\n//   //   axios.get(`${baseUrl}/student/personal/info`).then((res) => {\r\n//   //     console.log(res);\r\n//   //   });\r\n//   // };\r\n//   const onUserLogin = async  (values) => {\r\n//     if (!loading) {\r\n//       if (values.email !== '' && values.password !== '') {\r\n//         try{\r\n//         const loginResponse = await authService.login(values.email, values.password);\r\n//         console.log(loginResponse);\r\n//         // axios\r\n//         //   .post(`${baseUrl}/signIn`, {\r\n//         //     username: 'test.student1', //  values.email,\r\n//         //     password: 'student1', // values.password,\r\n//         //   })\r\n//         //   .then((response) => {\r\n//         //     console.log(response);\r\n//         //     console.log(response.data.data.token);\r\n//         //     localStorage.setItem('AUTH_TOKEN', response.data.data.token);\r\n//         //     getStudents();\r\n//         //   })\r\n//         //   .catch((err) => {\r\n//         //     console.log(err);\r\n//         //   });\r\n//         // console.log(values, history);\r\n//         loginUserAction(values, history);\r\n//         }\r\n//         catch (error) {\r\n//           console.error('Login error:', error);\r\n//         }\r\n//       } \r\n//     }\r\n//   };\r\n\r\n//   const initialValues = { email, password };\r\n\r\n//   return (\r\n//     <Row className=\"h-100\">\r\n//       <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\r\n//         <Card className=\"auth-card\">\r\n//           <div className=\"position-relative image-side \">\r\n//             <p className=\"text-white h2\">MAGIC IS IN THE DETAILS</p>\r\n//             <p className=\"white mb-0\">\r\n//               Please use your credentials to login.\r\n//               <br />\r\n//               If you are not a member, please{' '}\r\n//               <NavLink to=\"/user/register\" className=\"white\">\r\n//                 register\r\n//               </NavLink>\r\n//               .\r\n//             </p>\r\n//           </div>\r\n//           <div className=\"form-side\">\r\n//             <NavLink to=\"/\" className=\"white\">\r\n//               <span className=\"logo-single\" />\r\n//             </NavLink>\r\n//             <CardTitle className=\"mb-4\">\r\n//               <IntlMessages id=\"user.login-title\" />\r\n//             </CardTitle>\r\n\r\n//             <Formik initialValues={initialValues} onSubmit={onUserLogin}>\r\n//               {({ errors, touched }) => (\r\n//                 <Form className=\"av-tooltip tooltip-label-bottom\">\r\n//                   <FormGroup className=\"form-group has-float-label\">\r\n//                     <Label>\r\n//                       <IntlMessages id=\"user.email\" />\r\n//                     </Label>\r\n//                     <Field\r\n//                       className=\"form-control\"\r\n//                       name=\"email\"\r\n//                       validate={validateEmail}\r\n//                     />\r\n//                     {errors.email && touched.email && (\r\n//                       <div className=\"invalid-feedback d-block\">\r\n//                         {errors.email}\r\n//                       </div>\r\n//                     )}\r\n//                   </FormGroup>\r\n//                   <FormGroup className=\"form-group has-float-label\">\r\n//                     <Label>\r\n//                       <IntlMessages id=\"user.password\" />\r\n//                     </Label>\r\n//                     <Field\r\n//                       className=\"form-control\"\r\n//                       type=\"password\"\r\n//                       name=\"password\"\r\n//                       validate={validatePassword}\r\n//                     />\r\n//                     {errors.password && touched.password && (\r\n//                       <div className=\"invalid-feedback d-block\">\r\n//                         {errors.password}\r\n//                       </div>\r\n//                     )}\r\n//                   </FormGroup>\r\n//                   <div className=\"d-flex justify-content-between align-items-center\">\r\n//                     <NavLink to=\"/user/forgot-password\">\r\n//                       <IntlMessages id=\"user.forgot-password-question\" />\r\n//                     </NavLink>\r\n//                     <Button\r\n//                       type='submit'\r\n//                       color=\"primary\"\r\n//                       className={`btn-shadow btn-multiple-state ${\r\n//                         loading ? 'show-spinner' : ''\r\n//                       }`}\r\n//                       size=\"lg\"\r\n//                     >\r\n//                       <span className=\"spinner d-inline-block\">\r\n//                         <span className=\"bounce1\" />\r\n//                         <span className=\"bounce2\" />\r\n//                         <span className=\"bounce3\" />\r\n//                       </span>\r\n//                       <span className=\"label\">\r\n//                         <IntlMessages id=\"user.login-button\" />\r\n//                       </span>\r\n//                     </Button>\r\n//                   </div>\r\n//                 </Form>\r\n//               )}\r\n//             </Formik>\r\n//           </div>\r\n//         </Card>\r\n//       </Colxx>\r\n//     </Row>\r\n//   );\r\n// };\r\n// const mapStateToProps = ({ authUser }) => {\r\n//   const { loading, error } = authUser;\r\n//   return { loading, error };\r\n// };\r\n\r\n// export default connect(mapStateToProps, {\r\n//   loginUserAction: loginUser,\r\n// })(Login);\r\n"],"mappings},"metadata":{},"sourceType":"module"}