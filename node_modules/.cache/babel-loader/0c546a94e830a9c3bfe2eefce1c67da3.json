{"ast":null,"code":"import { invariant } from './utils';\n/**\r\n * https://tc39.es/ecma402/#sec-unicodeextensionvalue\r\n * @param extension\r\n * @param key\r\n */\n\nexport function UnicodeExtensionValue(extension, key) {\n  invariant(key.length === 2, 'key must have 2 elements');\n  var size = extension.length;\n  var searchValue = \"-\" + key + \"-\";\n  var pos = extension.indexOf(searchValue);\n\n  if (pos !== -1) {\n    var start = pos + 4;\n    var end = start;\n    var k = start;\n    var done = false;\n\n    while (!done) {\n      var e = extension.indexOf('-', k);\n      var len = void 0;\n\n      if (e === -1) {\n        len = size - k;\n      } else {\n        len = e - k;\n      }\n\n      if (len === 2) {\n        done = true;\n      } else if (e === -1) {\n        end = size;\n        done = true;\n      } else {\n        end = e;\n        k = e + 1;\n      }\n    }\n\n    return extension.slice(start, end);\n  }\n\n  searchValue = \"-\" + key;\n  pos = extension.indexOf(searchValue);\n\n  if (pos !== -1 && pos + 3 === size) {\n    return '';\n  }\n\n  return undefined;\n}","map":{"version":3,"names":["invariant","UnicodeExtensionValue","extension","key","length","size","searchValue","pos","indexOf","start","end","k","done","e","len","slice","undefined"],"sources":["C:/suresh/project-two/metiegrow-ui-app/node_modules/@formatjs/ecma402-abstract/lib/UnicodeExtensionValue.js"],"sourcesContent":["import { invariant } from './utils';\r\n/**\r\n * https://tc39.es/ecma402/#sec-unicodeextensionvalue\r\n * @param extension\r\n * @param key\r\n */\r\nexport function UnicodeExtensionValue(extension, key) {\r\n    invariant(key.length === 2, 'key must have 2 elements');\r\n    var size = extension.length;\r\n    var searchValue = \"-\" + key + \"-\";\r\n    var pos = extension.indexOf(searchValue);\r\n    if (pos !== -1) {\r\n        var start = pos + 4;\r\n        var end = start;\r\n        var k = start;\r\n        var done = false;\r\n        while (!done) {\r\n            var e = extension.indexOf('-', k);\r\n            var len = void 0;\r\n            if (e === -1) {\r\n                len = size - k;\r\n            }\r\n            else {\r\n                len = e - k;\r\n            }\r\n            if (len === 2) {\r\n                done = true;\r\n            }\r\n            else if (e === -1) {\r\n                end = size;\r\n                done = true;\r\n            }\r\n            else {\r\n                end = e;\r\n                k = e + 1;\r\n            }\r\n        }\r\n        return extension.slice(start, end);\r\n    }\r\n    searchValue = \"-\" + key;\r\n    pos = extension.indexOf(searchValue);\r\n    if (pos !== -1 && pos + 3 === size) {\r\n        return '';\r\n    }\r\n    return undefined;\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,SAA1B;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,qBAAT,CAA+BC,SAA/B,EAA0CC,GAA1C,EAA+C;EAClDH,SAAS,CAACG,GAAG,CAACC,MAAJ,KAAe,CAAhB,EAAmB,0BAAnB,CAAT;EACA,IAAIC,IAAI,GAAGH,SAAS,CAACE,MAArB;EACA,IAAIE,WAAW,GAAG,MAAMH,GAAN,GAAY,GAA9B;EACA,IAAII,GAAG,GAAGL,SAAS,CAACM,OAAV,CAAkBF,WAAlB,CAAV;;EACA,IAAIC,GAAG,KAAK,CAAC,CAAb,EAAgB;IACZ,IAAIE,KAAK,GAAGF,GAAG,GAAG,CAAlB;IACA,IAAIG,GAAG,GAAGD,KAAV;IACA,IAAIE,CAAC,GAAGF,KAAR;IACA,IAAIG,IAAI,GAAG,KAAX;;IACA,OAAO,CAACA,IAAR,EAAc;MACV,IAAIC,CAAC,GAAGX,SAAS,CAACM,OAAV,CAAkB,GAAlB,EAAuBG,CAAvB,CAAR;MACA,IAAIG,GAAG,GAAG,KAAK,CAAf;;MACA,IAAID,CAAC,KAAK,CAAC,CAAX,EAAc;QACVC,GAAG,GAAGT,IAAI,GAAGM,CAAb;MACH,CAFD,MAGK;QACDG,GAAG,GAAGD,CAAC,GAAGF,CAAV;MACH;;MACD,IAAIG,GAAG,KAAK,CAAZ,EAAe;QACXF,IAAI,GAAG,IAAP;MACH,CAFD,MAGK,IAAIC,CAAC,KAAK,CAAC,CAAX,EAAc;QACfH,GAAG,GAAGL,IAAN;QACAO,IAAI,GAAG,IAAP;MACH,CAHI,MAIA;QACDF,GAAG,GAAGG,CAAN;QACAF,CAAC,GAAGE,CAAC,GAAG,CAAR;MACH;IACJ;;IACD,OAAOX,SAAS,CAACa,KAAV,CAAgBN,KAAhB,EAAuBC,GAAvB,CAAP;EACH;;EACDJ,WAAW,GAAG,MAAMH,GAApB;EACAI,GAAG,GAAGL,SAAS,CAACM,OAAV,CAAkBF,WAAlB,CAAN;;EACA,IAAIC,GAAG,KAAK,CAAC,CAAT,IAAcA,GAAG,GAAG,CAAN,KAAYF,IAA9B,EAAoC;IAChC,OAAO,EAAP;EACH;;EACD,OAAOW,SAAP;AACH"},"metadata":{},"sourceType":"module"}