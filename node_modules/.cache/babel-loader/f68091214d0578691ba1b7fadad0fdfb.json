{"ast":null,"code":"import _slicedToArray from \"C:/suresh/project-two/metiegrow-ui-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\suresh\\\\project-two\\\\metiegrow-ui-app\\\\src\\\\containers\\\\navs\\\\Topnav.DarkSwitch.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Switch from 'rc-switch';\nimport 'rc-switch/assets/index.css';\nimport { Tooltip } from 'reactstrap';\nimport { getCurrentColor, setCurrentColor } from 'helpers/Utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TopnavDarkSwitch = function TopnavDarkSwitch() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      switchChecked = _useState2[0],\n      setSwitchChecked = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tooltipOpen = _useState4[0],\n      setTooltipOpen = _useState4[1];\n\n  useEffect(function () {\n    var color = getCurrentColor();\n    setSwitchChecked(color.indexOf('dark') > -1);\n  }, []);\n\n  var changeMode = function changeMode() {\n    var color = getCurrentColor();\n\n    if (color.indexOf('dark') > -1) {\n      color = color.replace('dark', 'light');\n    } else if (color.indexOf('light') > -1) {\n      color = color.replace('light', 'dark');\n    }\n\n    setCurrentColor(color);\n    setSwitchChecked(color.indexOf('dark') > -1);\n    setTimeout(function () {\n      window.location.reload();\n    }, 500);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-none d-md-inline-block align-middle mr-3\",\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      id: \"tooltip_switch\",\n      className: \"custom-switch custom-switch-primary custom-switch-small\",\n      checked: switchChecked,\n      onChange: changeMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      placement: \"left\",\n      isOpen: tooltipOpen,\n      target: \"tooltip_switch\",\n      toggle: function toggle() {\n        return setTooltipOpen(!tooltipOpen);\n      },\n      children: \"Dark Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TopnavDarkSwitch, \"ttCPat0M9lnIgLDD27x7Nx+x3RM=\");\n\n_c = TopnavDarkSwitch;\nexport default TopnavDarkSwitch;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopnavDarkSwitch\");","map":{"version":3,"names":["React","useState","useEffect","Switch","Tooltip","getCurrentColor","setCurrentColor","TopnavDarkSwitch","switchChecked","setSwitchChecked","tooltipOpen","setTooltipOpen","color","indexOf","changeMode","replace","setTimeout","window","location","reload"],"sources":["C:/suresh/project-two/metiegrow-ui-app/src/containers/navs/Topnav.DarkSwitch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Switch from 'rc-switch';\r\nimport 'rc-switch/assets/index.css';\r\nimport { Tooltip } from 'reactstrap';\r\nimport { getCurrentColor, setCurrentColor } from 'helpers/Utils';\r\n\r\nconst TopnavDarkSwitch = () => {\r\n  const [switchChecked, setSwitchChecked] = useState(false);\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const color = getCurrentColor();\r\n    setSwitchChecked(color.indexOf('dark') > -1);\r\n  }, []);\r\n\r\n  const changeMode = () => {\r\n    let color = getCurrentColor();\r\n\r\n    if (color.indexOf('dark') > -1) {\r\n      color = color.replace('dark', 'light');\r\n    } else if (color.indexOf('light') > -1) {\r\n      color = color.replace('light', 'dark');\r\n    }\r\n    setCurrentColor(color);\r\n    setSwitchChecked(color.indexOf('dark') > -1);\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-none d-md-inline-block align-middle mr-3\">\r\n      <Switch\r\n        id=\"tooltip_switch\"\r\n        className=\"custom-switch custom-switch-primary custom-switch-small\"\r\n        checked={switchChecked}\r\n        onChange={changeMode}\r\n      />\r\n      <Tooltip\r\n        placement=\"left\"\r\n        isOpen={tooltipOpen}\r\n        target=\"tooltip_switch\"\r\n        toggle={() => setTooltipOpen(!tooltipOpen)}\r\n      >\r\n        Dark Mode\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\nexport default TopnavDarkSwitch;\r\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,4BAAP;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,eAAjD;;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;EAAA;;EAC7B,gBAA0CN,QAAQ,CAAC,KAAD,CAAlD;EAAA;EAAA,IAAOO,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,iBAAsCR,QAAQ,CAAC,KAAD,CAA9C;EAAA;EAAA,IAAOS,WAAP;EAAA,IAAoBC,cAApB;;EAEAT,SAAS,CAAC,YAAM;IACd,IAAMU,KAAK,GAAGP,eAAe,EAA7B;IACAI,gBAAgB,CAACG,KAAK,CAACC,OAAN,CAAc,MAAd,IAAwB,CAAC,CAA1B,CAAhB;EACD,CAHQ,EAGN,EAHM,CAAT;;EAKA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;IACvB,IAAIF,KAAK,GAAGP,eAAe,EAA3B;;IAEA,IAAIO,KAAK,CAACC,OAAN,CAAc,MAAd,IAAwB,CAAC,CAA7B,EAAgC;MAC9BD,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,MAAd,EAAsB,OAAtB,CAAR;IACD,CAFD,MAEO,IAAIH,KAAK,CAACC,OAAN,CAAc,OAAd,IAAyB,CAAC,CAA9B,EAAiC;MACtCD,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,OAAd,EAAuB,MAAvB,CAAR;IACD;;IACDT,eAAe,CAACM,KAAD,CAAf;IACAH,gBAAgB,CAACG,KAAK,CAACC,OAAN,CAAc,MAAd,IAAwB,CAAC,CAA1B,CAAhB;IACAG,UAAU,CAAC,YAAM;MACfC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;IACD,CAFS,EAEP,GAFO,CAAV;EAGD,CAbD;;EAeA,oBACE;IAAK,SAAS,EAAC,4CAAf;IAAA,wBACE,QAAC,MAAD;MACE,EAAE,EAAC,gBADL;MAEE,SAAS,EAAC,yDAFZ;MAGE,OAAO,EAAEX,aAHX;MAIE,QAAQ,EAAEM;IAJZ;MAAA;MAAA;MAAA;IAAA,SADF,eAOE,QAAC,OAAD;MACE,SAAS,EAAC,MADZ;MAEE,MAAM,EAAEJ,WAFV;MAGE,MAAM,EAAC,gBAHT;MAIE,MAAM,EAAE;QAAA,OAAMC,cAAc,CAAC,CAACD,WAAF,CAApB;MAAA,CAJV;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,SAPF;EAAA;IAAA;IAAA;IAAA;EAAA,SADF;AAkBD,CA1CD;;GAAMH,gB;;KAAAA,gB;AA2CN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}